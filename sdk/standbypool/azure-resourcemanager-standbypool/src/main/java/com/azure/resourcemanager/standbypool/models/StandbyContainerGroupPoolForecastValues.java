// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.standbypool.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Displays the forecast information of the standby pool.
 */
@Immutable
public final class StandbyContainerGroupPoolForecastValues
    implements JsonSerializable<StandbyContainerGroupPoolForecastValues> {
    /*
     * Displays the predicted count of instances to be requested from the standby pool.
     */
    private List<Long> instancesRequestedCount;

    /**
     * Creates an instance of StandbyContainerGroupPoolForecastValues class.
     */
    private StandbyContainerGroupPoolForecastValues() {
    }

    /**
     * Get the instancesRequestedCount property: Displays the predicted count of instances to be requested from the
     * standby pool.
     * 
     * @return the instancesRequestedCount value.
     */
    public List<Long> instancesRequestedCount() {
        return this.instancesRequestedCount;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StandbyContainerGroupPoolForecastValues from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StandbyContainerGroupPoolForecastValues if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the StandbyContainerGroupPoolForecastValues.
     */
    public static StandbyContainerGroupPoolForecastValues fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StandbyContainerGroupPoolForecastValues deserializedStandbyContainerGroupPoolForecastValues
                = new StandbyContainerGroupPoolForecastValues();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instancesRequestedCount".equals(fieldName)) {
                    List<Long> instancesRequestedCount = reader.readArray(reader1 -> reader1.getLong());
                    deserializedStandbyContainerGroupPoolForecastValues.instancesRequestedCount
                        = instancesRequestedCount;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStandbyContainerGroupPoolForecastValues;
        });
    }
}
