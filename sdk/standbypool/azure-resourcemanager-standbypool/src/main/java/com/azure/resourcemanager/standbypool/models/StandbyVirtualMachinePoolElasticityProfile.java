// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.standbypool.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of the elasticity profile.
 */
@Fluent
public final class StandbyVirtualMachinePoolElasticityProfile
    implements JsonSerializable<StandbyVirtualMachinePoolElasticityProfile> {
    /*
     * Specifies the maximum number of virtual machines in the standby virtual machine pool.
     */
    private long maxReadyCapacity;

    /**
     * Creates an instance of StandbyVirtualMachinePoolElasticityProfile class.
     */
    public StandbyVirtualMachinePoolElasticityProfile() {
    }

    /**
     * Get the maxReadyCapacity property: Specifies the maximum number of virtual machines in the standby virtual
     * machine pool.
     * 
     * @return the maxReadyCapacity value.
     */
    public long maxReadyCapacity() {
        return this.maxReadyCapacity;
    }

    /**
     * Set the maxReadyCapacity property: Specifies the maximum number of virtual machines in the standby virtual
     * machine pool.
     * 
     * @param maxReadyCapacity the maxReadyCapacity value to set.
     * @return the StandbyVirtualMachinePoolElasticityProfile object itself.
     */
    public StandbyVirtualMachinePoolElasticityProfile withMaxReadyCapacity(long maxReadyCapacity) {
        this.maxReadyCapacity = maxReadyCapacity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeLongField("maxReadyCapacity", this.maxReadyCapacity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StandbyVirtualMachinePoolElasticityProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StandbyVirtualMachinePoolElasticityProfile if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the StandbyVirtualMachinePoolElasticityProfile.
     */
    public static StandbyVirtualMachinePoolElasticityProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StandbyVirtualMachinePoolElasticityProfile deserializedStandbyVirtualMachinePoolElasticityProfile
                = new StandbyVirtualMachinePoolElasticityProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("maxReadyCapacity".equals(fieldName)) {
                    deserializedStandbyVirtualMachinePoolElasticityProfile.maxReadyCapacity = reader.getLong();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStandbyVirtualMachinePoolElasticityProfile;
        });
    }
}
