// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.standbypool.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of StandbyVirtualMachinePoolRuntimeViews.
 */
public interface StandbyVirtualMachinePoolRuntimeViews {
    /**
     * Get a StandbyVirtualMachinePoolRuntimeViewResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param standbyVirtualMachinePoolName Name of the standby virtual machine pool.
     * @param runtimeView The unique identifier for the runtime view. The input string should be the word 'latest',
     * which will get the latest runtime view of the pool, otherwise the request will fail with NotFound exception.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a StandbyVirtualMachinePoolRuntimeViewResource along with {@link Response}.
     */
    Response<StandbyVirtualMachinePoolRuntimeViewResource> getWithResponse(String resourceGroupName,
        String standbyVirtualMachinePoolName, String runtimeView, Context context);

    /**
     * Get a StandbyVirtualMachinePoolRuntimeViewResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param standbyVirtualMachinePoolName Name of the standby virtual machine pool.
     * @param runtimeView The unique identifier for the runtime view. The input string should be the word 'latest',
     * which will get the latest runtime view of the pool, otherwise the request will fail with NotFound exception.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a StandbyVirtualMachinePoolRuntimeViewResource.
     */
    StandbyVirtualMachinePoolRuntimeViewResource get(String resourceGroupName, String standbyVirtualMachinePoolName,
        String runtimeView);

    /**
     * List StandbyVirtualMachinePoolRuntimeViewResource resources by StandbyVirtualMachinePoolResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param standbyVirtualMachinePoolName Name of the standby virtual machine pool.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a StandbyVirtualMachinePoolRuntimeViewResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<StandbyVirtualMachinePoolRuntimeViewResource> listByStandbyPool(String resourceGroupName,
        String standbyVirtualMachinePoolName);

    /**
     * List StandbyVirtualMachinePoolRuntimeViewResource resources by StandbyVirtualMachinePoolResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param standbyVirtualMachinePoolName Name of the standby virtual machine pool.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a StandbyVirtualMachinePoolRuntimeViewResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<StandbyVirtualMachinePoolRuntimeViewResource> listByStandbyPool(String resourceGroupName,
        String standbyVirtualMachinePoolName, Context context);
}
