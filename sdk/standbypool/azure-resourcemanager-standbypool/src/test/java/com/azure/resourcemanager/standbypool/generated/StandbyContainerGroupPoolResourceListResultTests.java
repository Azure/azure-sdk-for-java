// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.standbypool.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.standbypool.implementation.models.StandbyContainerGroupPoolResourceListResult;
import com.azure.resourcemanager.standbypool.models.RefillPolicy;
import org.junit.jupiter.api.Assertions;

public final class StandbyContainerGroupPoolResourceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StandbyContainerGroupPoolResourceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"elasticityProfile\":{\"maxReadyCapacity\":2296241037768956178,\"refillPolicy\":\"always\"},\"containerGroupProperties\":{\"containerGroupProfile\":{\"id\":\"dzuhtymwi\",\"revision\":2965143483329278673},\"subnetIds\":[{\"id\":\"wxmnteiwao\"},{\"id\":\"vkmijcmmxdcuf\"},{\"id\":\"fsrpymzidnse\"}]},\"provisioningState\":\"Deleting\"},\"location\":\"bzsgfyccsne\",\"tags\":{\"oosflnr\":\"wzjeiach\",\"vypyqrimzinpv\":\"sfqpteehz\",\"rsoodqxhcrmnoh\":\"wjdk\"},\"id\":\"t\",\"name\":\"kwh\",\"type\":\"soifiyipjxsqw\"}],\"nextLink\":\"rjb\"}")
            .toObject(StandbyContainerGroupPoolResourceListResult.class);
        Assertions.assertEquals("bzsgfyccsne", model.value().get(0).location());
        Assertions.assertEquals("wzjeiach", model.value().get(0).tags().get("oosflnr"));
        Assertions.assertEquals(2296241037768956178L,
            model.value().get(0).properties().elasticityProfile().maxReadyCapacity());
        Assertions.assertEquals(RefillPolicy.ALWAYS,
            model.value().get(0).properties().elasticityProfile().refillPolicy());
        Assertions.assertEquals("dzuhtymwi",
            model.value().get(0).properties().containerGroupProperties().containerGroupProfile().id());
        Assertions.assertEquals(2965143483329278673L,
            model.value().get(0).properties().containerGroupProperties().containerGroupProfile().revision());
        Assertions.assertEquals("wxmnteiwao",
            model.value().get(0).properties().containerGroupProperties().subnetIds().get(0).id());
        Assertions.assertEquals("rjb", model.nextLink());
    }
}
