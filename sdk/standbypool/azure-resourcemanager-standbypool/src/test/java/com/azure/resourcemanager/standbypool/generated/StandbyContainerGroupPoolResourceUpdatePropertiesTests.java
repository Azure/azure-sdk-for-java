// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.standbypool.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.standbypool.models.ContainerGroupProfile;
import com.azure.resourcemanager.standbypool.models.ContainerGroupProperties;
import com.azure.resourcemanager.standbypool.models.RefillPolicy;
import com.azure.resourcemanager.standbypool.models.StandbyContainerGroupPoolElasticityProfile;
import com.azure.resourcemanager.standbypool.models.StandbyContainerGroupPoolResourceUpdateProperties;
import com.azure.resourcemanager.standbypool.models.Subnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class StandbyContainerGroupPoolResourceUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StandbyContainerGroupPoolResourceUpdateProperties model = BinaryData.fromString(
            "{\"elasticityProfile\":{\"maxReadyCapacity\":8690617744614156568,\"refillPolicy\":\"always\"},\"containerGroupProperties\":{\"containerGroupProfile\":{\"id\":\"j\",\"revision\":8808809624046194286},\"subnetIds\":[{\"id\":\"c\"}]},\"zones\":[\"ljavbqid\"]}")
            .toObject(StandbyContainerGroupPoolResourceUpdateProperties.class);
        Assertions.assertEquals(8690617744614156568L, model.elasticityProfile().maxReadyCapacity());
        Assertions.assertEquals(RefillPolicy.ALWAYS, model.elasticityProfile().refillPolicy());
        Assertions.assertEquals("j", model.containerGroupProperties().containerGroupProfile().id());
        Assertions.assertEquals(8808809624046194286L,
            model.containerGroupProperties().containerGroupProfile().revision());
        Assertions.assertEquals("c", model.containerGroupProperties().subnetIds().get(0).id());
        Assertions.assertEquals("ljavbqid", model.zones().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StandbyContainerGroupPoolResourceUpdateProperties model
            = new StandbyContainerGroupPoolResourceUpdateProperties()
                .withElasticityProfile(
                    new StandbyContainerGroupPoolElasticityProfile().withMaxReadyCapacity(8690617744614156568L)
                        .withRefillPolicy(RefillPolicy.ALWAYS))
                .withContainerGroupProperties(new ContainerGroupProperties()
                    .withContainerGroupProfile(
                        new ContainerGroupProfile().withId("j").withRevision(8808809624046194286L))
                    .withSubnetIds(Arrays.asList(new Subnet().withId("c"))))
                .withZones(Arrays.asList("ljavbqid"));
        model = BinaryData.fromObject(model).toObject(StandbyContainerGroupPoolResourceUpdateProperties.class);
        Assertions.assertEquals(8690617744614156568L, model.elasticityProfile().maxReadyCapacity());
        Assertions.assertEquals(RefillPolicy.ALWAYS, model.elasticityProfile().refillPolicy());
        Assertions.assertEquals("j", model.containerGroupProperties().containerGroupProfile().id());
        Assertions.assertEquals(8808809624046194286L,
            model.containerGroupProperties().containerGroupProfile().revision());
        Assertions.assertEquals("c", model.containerGroupProperties().subnetIds().get(0).id());
        Assertions.assertEquals("ljavbqid", model.zones().get(0));
    }
}
