// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.standbypool.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.standbypool.models.StandbyVirtualMachinePoolElasticityProfile;
import com.azure.resourcemanager.standbypool.models.StandbyVirtualMachinePoolResourceProperties;
import com.azure.resourcemanager.standbypool.models.VirtualMachineState;
import org.junit.jupiter.api.Assertions;

public final class StandbyVirtualMachinePoolResourcePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StandbyVirtualMachinePoolResourceProperties model = BinaryData.fromString(
            "{\"elasticityProfile\":{\"maxReadyCapacity\":7634318476861545428},\"virtualMachineState\":\"Deallocated\",\"attachedVirtualMachineScaleSetId\":\"gnarxzxtheo\",\"provisioningState\":\"Succeeded\"}")
            .toObject(StandbyVirtualMachinePoolResourceProperties.class);
        Assertions.assertEquals(7634318476861545428L, model.elasticityProfile().maxReadyCapacity());
        Assertions.assertEquals(VirtualMachineState.DEALLOCATED, model.virtualMachineState());
        Assertions.assertEquals("gnarxzxtheo", model.attachedVirtualMachineScaleSetId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StandbyVirtualMachinePoolResourceProperties model = new StandbyVirtualMachinePoolResourceProperties()
            .withElasticityProfile(
                new StandbyVirtualMachinePoolElasticityProfile().withMaxReadyCapacity(7634318476861545428L))
            .withVirtualMachineState(VirtualMachineState.DEALLOCATED)
            .withAttachedVirtualMachineScaleSetId("gnarxzxtheo");
        model = BinaryData.fromObject(model).toObject(StandbyVirtualMachinePoolResourceProperties.class);
        Assertions.assertEquals(7634318476861545428L, model.elasticityProfile().maxReadyCapacity());
        Assertions.assertEquals(VirtualMachineState.DEALLOCATED, model.virtualMachineState());
        Assertions.assertEquals("gnarxzxtheo", model.attachedVirtualMachineScaleSetId());
    }
}
