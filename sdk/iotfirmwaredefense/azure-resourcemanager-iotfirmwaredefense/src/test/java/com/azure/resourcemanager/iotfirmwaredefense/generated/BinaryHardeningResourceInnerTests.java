// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotfirmwaredefense.fluent.models.BinaryHardeningResourceInner;
import org.junit.jupiter.api.Assertions;

public final class BinaryHardeningResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BinaryHardeningResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"binaryHardeningId\":\"bpzvgn\",\"features\":{\"nx\":true,\"pie\":false,\"relro\":true,\"canary\":true,\"stripped\":true},\"architecture\":\"kohdbiha\",\"filePath\":\"fhfcb\",\"class\":\"s\",\"runpath\":\"ithxqhabifpi\",\"rpath\":\"wczbys\"},\"id\":\"pqxu\",\"name\":\"ivyqniwbybrkxvd\",\"type\":\"mjgr\"}")
            .toObject(BinaryHardeningResourceInner.class);
        Assertions.assertEquals("bpzvgn", model.binaryHardeningId());
        Assertions.assertEquals("kohdbiha", model.architecture());
        Assertions.assertEquals("fhfcb", model.filePath());
        Assertions.assertEquals("s", model.classProperty());
        Assertions.assertEquals("ithxqhabifpi", model.runpath());
        Assertions.assertEquals("wczbys", model.rpath());
        Assertions.assertEquals(true, model.nx());
        Assertions.assertEquals(false, model.pie());
        Assertions.assertEquals(true, model.relro());
        Assertions.assertEquals(true, model.canary());
        Assertions.assertEquals(true, model.stripped());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BinaryHardeningResourceInner model = new BinaryHardeningResourceInner().withBinaryHardeningId("bpzvgn")
            .withArchitecture("kohdbiha").withFilePath("fhfcb").withClassProperty("s").withRunpath("ithxqhabifpi")
            .withRpath("wczbys").withNx(true).withPie(false).withRelro(true).withCanary(true).withStripped(true);
        model = BinaryData.fromObject(model).toObject(BinaryHardeningResourceInner.class);
        Assertions.assertEquals("bpzvgn", model.binaryHardeningId());
        Assertions.assertEquals("kohdbiha", model.architecture());
        Assertions.assertEquals("fhfcb", model.filePath());
        Assertions.assertEquals("s", model.classProperty());
        Assertions.assertEquals("ithxqhabifpi", model.runpath());
        Assertions.assertEquals("wczbys", model.rpath());
        Assertions.assertEquals(true, model.nx());
        Assertions.assertEquals(false, model.pie());
        Assertions.assertEquals(true, model.relro());
        Assertions.assertEquals(true, model.canary());
        Assertions.assertEquals(true, model.stripped());
    }
}
