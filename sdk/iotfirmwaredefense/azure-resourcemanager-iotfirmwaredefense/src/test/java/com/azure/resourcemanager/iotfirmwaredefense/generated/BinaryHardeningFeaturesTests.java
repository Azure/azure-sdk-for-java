// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotfirmwaredefense.fluent.models.BinaryHardeningFeatures;
import com.azure.resourcemanager.iotfirmwaredefense.models.CanaryFlag;
import com.azure.resourcemanager.iotfirmwaredefense.models.NxFlag;
import com.azure.resourcemanager.iotfirmwaredefense.models.PieFlag;
import com.azure.resourcemanager.iotfirmwaredefense.models.RelroFlag;
import com.azure.resourcemanager.iotfirmwaredefense.models.StrippedFlag;
import org.junit.jupiter.api.Assertions;

public final class BinaryHardeningFeaturesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BinaryHardeningFeatures model =
            BinaryData
                .fromString(
                    "{\"nx\":\"True\",\"pie\":\"True\",\"relro\":\"True\",\"canary\":\"True\",\"stripped\":\"True\"}")
                .toObject(BinaryHardeningFeatures.class);
        Assertions.assertEquals(NxFlag.TRUE, model.nx());
        Assertions.assertEquals(PieFlag.TRUE, model.pie());
        Assertions.assertEquals(RelroFlag.TRUE, model.relro());
        Assertions.assertEquals(CanaryFlag.TRUE, model.canary());
        Assertions.assertEquals(StrippedFlag.TRUE, model.stripped());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BinaryHardeningFeatures model =
            new BinaryHardeningFeatures()
                .withNx(NxFlag.TRUE)
                .withPie(PieFlag.TRUE)
                .withRelro(RelroFlag.TRUE)
                .withCanary(CanaryFlag.TRUE)
                .withStripped(StrippedFlag.TRUE);
        model = BinaryData.fromObject(model).toObject(BinaryHardeningFeatures.class);
        Assertions.assertEquals(NxFlag.TRUE, model.nx());
        Assertions.assertEquals(PieFlag.TRUE, model.pie());
        Assertions.assertEquals(RelroFlag.TRUE, model.relro());
        Assertions.assertEquals(CanaryFlag.TRUE, model.canary());
        Assertions.assertEquals(StrippedFlag.TRUE, model.stripped());
    }
}
