// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotfirmwaredefense.implementation.models.BinaryHardeningResourceListResult;
import com.azure.resourcemanager.iotfirmwaredefense.models.ExecutableClass;
import org.junit.jupiter.api.Assertions;

public final class BinaryHardeningResourceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BinaryHardeningResourceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"binaryHardeningId\":\"o\",\"securityHardeningFeatures\":{\"noExecute\":false,\"positionIndependentExecutable\":false,\"relocationReadOnly\":false,\"canary\":true,\"stripped\":true},\"executableArchitecture\":\"ddgmb\",\"filePath\":\"ex\",\"executableClass\":\"x64\",\"runpath\":\"tq\",\"rpath\":\"ol\",\"provisioningState\":\"Pending\"},\"id\":\"s\",\"name\":\"lgbquxig\",\"type\":\"yjgzjaoyfhrtxiln\"}],\"nextLink\":\"kujysvlejuvfq\"}")
            .toObject(BinaryHardeningResourceListResult.class);
        Assertions.assertEquals("o", model.value().get(0).binaryHardeningId());
        Assertions.assertFalse(model.value().get(0).securityHardeningFeatures().noExecute());
        Assertions.assertFalse(model.value().get(0).securityHardeningFeatures().positionIndependentExecutable());
        Assertions.assertFalse(model.value().get(0).securityHardeningFeatures().relocationReadOnly());
        Assertions.assertTrue(model.value().get(0).securityHardeningFeatures().canary());
        Assertions.assertTrue(model.value().get(0).securityHardeningFeatures().stripped());
        Assertions.assertEquals("ddgmb", model.value().get(0).executableArchitecture());
        Assertions.assertEquals("ex", model.value().get(0).filePath());
        Assertions.assertEquals(ExecutableClass.X64, model.value().get(0).executableClass());
        Assertions.assertEquals("tq", model.value().get(0).runpath());
        Assertions.assertEquals("ol", model.value().get(0).rpath());
        Assertions.assertEquals("kujysvlejuvfq", model.nextLink());
    }
}
