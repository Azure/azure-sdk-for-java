// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotfirmwaredefense.fluent.models.ComponentInner;
import com.azure.resourcemanager.iotfirmwaredefense.models.IsUpdateAvailable;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ComponentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ComponentInner model =
            BinaryData
                .fromString(
                    "{\"componentId\":\"iheogna\",\"componentName\":\"zxtheotusivyevcc\",\"version\":\"ihnhun\",\"license\":\"wjzrnfygxgisp\",\"releaseDate\":\"2021-05-03T11:09:18Z\",\"paths\":[\"fkufublj\",\"fxqeof\",\"aeqjhqjbasvms\"],\"isUpdateAvailable\":\"False\"}")
                .toObject(ComponentInner.class);
        Assertions.assertEquals("iheogna", model.componentId());
        Assertions.assertEquals("zxtheotusivyevcc", model.componentName());
        Assertions.assertEquals("ihnhun", model.version());
        Assertions.assertEquals("wjzrnfygxgisp", model.license());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-03T11:09:18Z"), model.releaseDate());
        Assertions.assertEquals("fkufublj", model.paths().get(0));
        Assertions.assertEquals(IsUpdateAvailable.FALSE, model.isUpdateAvailable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ComponentInner model =
            new ComponentInner()
                .withComponentId("iheogna")
                .withComponentName("zxtheotusivyevcc")
                .withVersion("ihnhun")
                .withLicense("wjzrnfygxgisp")
                .withReleaseDate(OffsetDateTime.parse("2021-05-03T11:09:18Z"))
                .withPaths(Arrays.asList("fkufublj", "fxqeof", "aeqjhqjbasvms"))
                .withIsUpdateAvailable(IsUpdateAvailable.FALSE);
        model = BinaryData.fromObject(model).toObject(ComponentInner.class);
        Assertions.assertEquals("iheogna", model.componentId());
        Assertions.assertEquals("zxtheotusivyevcc", model.componentName());
        Assertions.assertEquals("ihnhun", model.version());
        Assertions.assertEquals("wjzrnfygxgisp", model.license());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-03T11:09:18Z"), model.releaseDate());
        Assertions.assertEquals("fkufublj", model.paths().get(0));
        Assertions.assertEquals(IsUpdateAvailable.FALSE, model.isUpdateAvailable());
    }
}
