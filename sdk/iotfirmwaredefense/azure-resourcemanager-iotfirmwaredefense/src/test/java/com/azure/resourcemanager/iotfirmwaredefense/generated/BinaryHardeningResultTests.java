// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotfirmwaredefense.fluent.models.BinaryHardeningResult;
import org.junit.jupiter.api.Assertions;

public final class BinaryHardeningResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BinaryHardeningResult model = BinaryData.fromString(
            "{\"binaryHardeningId\":\"wvukx\",\"features\":{\"nx\":false,\"pie\":false,\"relro\":true,\"canary\":false,\"stripped\":true},\"architecture\":\"yejhk\",\"filePath\":\"htnapczwlokjyem\",\"class\":\"vnipjox\",\"runpath\":\"nchgej\",\"rpath\":\"odmailzyd\"}")
            .toObject(BinaryHardeningResult.class);
        Assertions.assertEquals("wvukx", model.binaryHardeningId());
        Assertions.assertEquals("yejhk", model.architecture());
        Assertions.assertEquals("htnapczwlokjyem", model.filePath());
        Assertions.assertEquals("vnipjox", model.classProperty());
        Assertions.assertEquals("nchgej", model.runpath());
        Assertions.assertEquals("odmailzyd", model.rpath());
        Assertions.assertEquals(false, model.nx());
        Assertions.assertEquals(false, model.pie());
        Assertions.assertEquals(true, model.relro());
        Assertions.assertEquals(false, model.canary());
        Assertions.assertEquals(true, model.stripped());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BinaryHardeningResult model = new BinaryHardeningResult().withBinaryHardeningId("wvukx")
            .withArchitecture("yejhk").withFilePath("htnapczwlokjyem").withClassProperty("vnipjox")
            .withRunpath("nchgej").withRpath("odmailzyd").withNx(false).withPie(false).withRelro(true).withCanary(false)
            .withStripped(true);
        model = BinaryData.fromObject(model).toObject(BinaryHardeningResult.class);
        Assertions.assertEquals("wvukx", model.binaryHardeningId());
        Assertions.assertEquals("yejhk", model.architecture());
        Assertions.assertEquals("htnapczwlokjyem", model.filePath());
        Assertions.assertEquals("vnipjox", model.classProperty());
        Assertions.assertEquals("nchgej", model.runpath());
        Assertions.assertEquals("odmailzyd", model.rpath());
        Assertions.assertEquals(false, model.nx());
        Assertions.assertEquals(false, model.pie());
        Assertions.assertEquals(true, model.relro());
        Assertions.assertEquals(false, model.canary());
        Assertions.assertEquals(true, model.stripped());
    }
}
