// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager;
import com.azure.resourcemanager.iotfirmwaredefense.models.SbomComponentResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SbomComponentsListByFirmwareMockTests {
    @Test
    public void testListByFirmware() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"componentId\":\"lbpodxunk\",\"componentName\":\"bxmubyynt\",\"version\":\"rbqtkoie\",\"license\":\"eotg\",\"filePaths\":[\"ltmuwlauwzizx\"]},\"id\":\"pgcjefuzmuvp\",\"name\":\"ttdumorppxebmnzb\",\"type\":\"bhjpglkfgohdne\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IoTFirmwareDefenseManager manager = IoTFirmwareDefenseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SbomComponentResource> response = manager.sbomComponents()
            .listByFirmware("kwobdagxtibq", "xbxwa", "bogqxndlkzgxhu", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("lbpodxunk", response.iterator().next().componentId());
        Assertions.assertEquals("bxmubyynt", response.iterator().next().componentName());
        Assertions.assertEquals("rbqtkoie", response.iterator().next().version());
        Assertions.assertEquals("eotg", response.iterator().next().license());
        Assertions.assertEquals("ltmuwlauwzizx", response.iterator().next().filePaths().get(0));
    }
}
