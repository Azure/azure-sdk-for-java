// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties for a binary hardening analysis summary.
 */
@Fluent
public final class BinaryHardeningSummaryResource extends SummaryResourceProperties {
    /*
     * Describes the type of summary.
     */
    private SummaryType summaryType = SummaryType.BINARY_HARDENING;

    /*
     * Total number of binaries that were analyzed
     */
    private Long totalFiles;

    /*
     * NX summary percentage
     */
    private Integer nx;

    /*
     * PIE summary percentage
     */
    private Integer pie;

    /*
     * RELRO summary percentage
     */
    private Integer relro;

    /*
     * Canary summary percentage
     */
    private Integer canary;

    /*
     * Stripped summary percentage
     */
    private Integer stripped;

    /**
     * Creates an instance of BinaryHardeningSummaryResource class.
     */
    public BinaryHardeningSummaryResource() {
    }

    /**
     * Get the summaryType property: Describes the type of summary.
     * 
     * @return the summaryType value.
     */
    @Override
    public SummaryType summaryType() {
        return this.summaryType;
    }

    /**
     * Get the totalFiles property: Total number of binaries that were analyzed.
     * 
     * @return the totalFiles value.
     */
    public Long totalFiles() {
        return this.totalFiles;
    }

    /**
     * Set the totalFiles property: Total number of binaries that were analyzed.
     * 
     * @param totalFiles the totalFiles value to set.
     * @return the BinaryHardeningSummaryResource object itself.
     */
    public BinaryHardeningSummaryResource withTotalFiles(Long totalFiles) {
        this.totalFiles = totalFiles;
        return this;
    }

    /**
     * Get the nx property: NX summary percentage.
     * 
     * @return the nx value.
     */
    public Integer nx() {
        return this.nx;
    }

    /**
     * Set the nx property: NX summary percentage.
     * 
     * @param nx the nx value to set.
     * @return the BinaryHardeningSummaryResource object itself.
     */
    public BinaryHardeningSummaryResource withNx(Integer nx) {
        this.nx = nx;
        return this;
    }

    /**
     * Get the pie property: PIE summary percentage.
     * 
     * @return the pie value.
     */
    public Integer pie() {
        return this.pie;
    }

    /**
     * Set the pie property: PIE summary percentage.
     * 
     * @param pie the pie value to set.
     * @return the BinaryHardeningSummaryResource object itself.
     */
    public BinaryHardeningSummaryResource withPie(Integer pie) {
        this.pie = pie;
        return this;
    }

    /**
     * Get the relro property: RELRO summary percentage.
     * 
     * @return the relro value.
     */
    public Integer relro() {
        return this.relro;
    }

    /**
     * Set the relro property: RELRO summary percentage.
     * 
     * @param relro the relro value to set.
     * @return the BinaryHardeningSummaryResource object itself.
     */
    public BinaryHardeningSummaryResource withRelro(Integer relro) {
        this.relro = relro;
        return this;
    }

    /**
     * Get the canary property: Canary summary percentage.
     * 
     * @return the canary value.
     */
    public Integer canary() {
        return this.canary;
    }

    /**
     * Set the canary property: Canary summary percentage.
     * 
     * @param canary the canary value to set.
     * @return the BinaryHardeningSummaryResource object itself.
     */
    public BinaryHardeningSummaryResource withCanary(Integer canary) {
        this.canary = canary;
        return this;
    }

    /**
     * Get the stripped property: Stripped summary percentage.
     * 
     * @return the stripped value.
     */
    public Integer stripped() {
        return this.stripped;
    }

    /**
     * Set the stripped property: Stripped summary percentage.
     * 
     * @param stripped the stripped value to set.
     * @return the BinaryHardeningSummaryResource object itself.
     */
    public BinaryHardeningSummaryResource withStripped(Integer stripped) {
        this.stripped = stripped;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("summaryType", this.summaryType == null ? null : this.summaryType.toString());
        jsonWriter.writeNumberField("totalFiles", this.totalFiles);
        jsonWriter.writeNumberField("nx", this.nx);
        jsonWriter.writeNumberField("pie", this.pie);
        jsonWriter.writeNumberField("relro", this.relro);
        jsonWriter.writeNumberField("canary", this.canary);
        jsonWriter.writeNumberField("stripped", this.stripped);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BinaryHardeningSummaryResource from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BinaryHardeningSummaryResource if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BinaryHardeningSummaryResource.
     */
    public static BinaryHardeningSummaryResource fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BinaryHardeningSummaryResource deserializedBinaryHardeningSummaryResource
                = new BinaryHardeningSummaryResource();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("summaryType".equals(fieldName)) {
                    deserializedBinaryHardeningSummaryResource.summaryType = SummaryType.fromString(reader.getString());
                } else if ("totalFiles".equals(fieldName)) {
                    deserializedBinaryHardeningSummaryResource.totalFiles = reader.getNullable(JsonReader::getLong);
                } else if ("nx".equals(fieldName)) {
                    deserializedBinaryHardeningSummaryResource.nx = reader.getNullable(JsonReader::getInt);
                } else if ("pie".equals(fieldName)) {
                    deserializedBinaryHardeningSummaryResource.pie = reader.getNullable(JsonReader::getInt);
                } else if ("relro".equals(fieldName)) {
                    deserializedBinaryHardeningSummaryResource.relro = reader.getNullable(JsonReader::getInt);
                } else if ("canary".equals(fieldName)) {
                    deserializedBinaryHardeningSummaryResource.canary = reader.getNullable(JsonReader::getInt);
                } else if ("stripped".equals(fieldName)) {
                    deserializedBinaryHardeningSummaryResource.stripped = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBinaryHardeningSummaryResource;
        });
    }
}
