// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.implementation;

import com.azure.resourcemanager.iotfirmwaredefense.fluent.models.ComponentInner;
import com.azure.resourcemanager.iotfirmwaredefense.models.Component;
import com.azure.resourcemanager.iotfirmwaredefense.models.IsUpdateAvailable;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class ComponentImpl implements Component {
    private ComponentInner innerObject;

    private final com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager serviceManager;

    ComponentImpl(
        ComponentInner innerObject,
        com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String componentId() {
        return this.innerModel().componentId();
    }

    public String componentName() {
        return this.innerModel().componentName();
    }

    public String version() {
        return this.innerModel().version();
    }

    public String license() {
        return this.innerModel().license();
    }

    public OffsetDateTime releaseDate() {
        return this.innerModel().releaseDate();
    }

    public List<String> paths() {
        List<String> inner = this.innerModel().paths();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public IsUpdateAvailable isUpdateAvailable() {
        return this.innerModel().isUpdateAvailable();
    }

    public ComponentInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager manager() {
        return this.serviceManager;
    }
}
