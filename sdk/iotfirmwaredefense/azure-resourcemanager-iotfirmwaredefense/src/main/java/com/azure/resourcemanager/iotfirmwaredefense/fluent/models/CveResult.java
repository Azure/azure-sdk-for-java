// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.iotfirmwaredefense.models.CveComponent;
import com.azure.resourcemanager.iotfirmwaredefense.models.CveLink;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Details of a CVE detected in firmware.
 */
@Fluent
public final class CveResult {
    /*
     * ID of the CVE result.
     */
    @JsonProperty(value = "cveId")
    private String cveId;

    /*
     * The SBOM component for the CVE.
     */
    @JsonProperty(value = "component")
    private CveComponent component;

    /*
     * Severity of the CVE.
     */
    @JsonProperty(value = "severity")
    private String severity;

    /*
     * Name of the CVE.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * A single CVSS score to represent the CVE. If a V3 score is specified, then it will use the V3 score. Otherwise
     * if the V2 score is specified it will be the V2 score.
     */
    @JsonProperty(value = "cvssScore")
    private String cvssScore;

    /*
     * CVSS version of the CVE.
     */
    @JsonProperty(value = "cvssVersion")
    private String cvssVersion;

    /*
     * CVSS V2 score of the CVE.
     */
    @JsonProperty(value = "cvssV2Score")
    private String cvssV2Score;

    /*
     * CVSS V3 score of the CVE.
     */
    @JsonProperty(value = "cvssV3Score")
    private String cvssV3Score;

    /*
     * The list of reference links for the CVE.
     */
    @JsonProperty(value = "links", access = JsonProperty.Access.WRITE_ONLY)
    private List<CveLink> links;

    /*
     * The CVE description.
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * Creates an instance of CveResult class.
     */
    public CveResult() {
    }

    /**
     * Get the cveId property: ID of the CVE result.
     * 
     * @return the cveId value.
     */
    public String cveId() {
        return this.cveId;
    }

    /**
     * Set the cveId property: ID of the CVE result.
     * 
     * @param cveId the cveId value to set.
     * @return the CveResult object itself.
     */
    public CveResult withCveId(String cveId) {
        this.cveId = cveId;
        return this;
    }

    /**
     * Get the component property: The SBOM component for the CVE.
     * 
     * @return the component value.
     */
    public CveComponent component() {
        return this.component;
    }

    /**
     * Set the component property: The SBOM component for the CVE.
     * 
     * @param component the component value to set.
     * @return the CveResult object itself.
     */
    public CveResult withComponent(CveComponent component) {
        this.component = component;
        return this;
    }

    /**
     * Get the severity property: Severity of the CVE.
     * 
     * @return the severity value.
     */
    public String severity() {
        return this.severity;
    }

    /**
     * Set the severity property: Severity of the CVE.
     * 
     * @param severity the severity value to set.
     * @return the CveResult object itself.
     */
    public CveResult withSeverity(String severity) {
        this.severity = severity;
        return this;
    }

    /**
     * Get the name property: Name of the CVE.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the CVE.
     * 
     * @param name the name value to set.
     * @return the CveResult object itself.
     */
    public CveResult withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the cvssScore property: A single CVSS score to represent the CVE. If a V3 score is specified, then it will
     * use the V3 score. Otherwise if the V2 score is specified it will be the V2 score.
     * 
     * @return the cvssScore value.
     */
    public String cvssScore() {
        return this.cvssScore;
    }

    /**
     * Set the cvssScore property: A single CVSS score to represent the CVE. If a V3 score is specified, then it will
     * use the V3 score. Otherwise if the V2 score is specified it will be the V2 score.
     * 
     * @param cvssScore the cvssScore value to set.
     * @return the CveResult object itself.
     */
    public CveResult withCvssScore(String cvssScore) {
        this.cvssScore = cvssScore;
        return this;
    }

    /**
     * Get the cvssVersion property: CVSS version of the CVE.
     * 
     * @return the cvssVersion value.
     */
    public String cvssVersion() {
        return this.cvssVersion;
    }

    /**
     * Set the cvssVersion property: CVSS version of the CVE.
     * 
     * @param cvssVersion the cvssVersion value to set.
     * @return the CveResult object itself.
     */
    public CveResult withCvssVersion(String cvssVersion) {
        this.cvssVersion = cvssVersion;
        return this;
    }

    /**
     * Get the cvssV2Score property: CVSS V2 score of the CVE.
     * 
     * @return the cvssV2Score value.
     */
    public String cvssV2Score() {
        return this.cvssV2Score;
    }

    /**
     * Set the cvssV2Score property: CVSS V2 score of the CVE.
     * 
     * @param cvssV2Score the cvssV2Score value to set.
     * @return the CveResult object itself.
     */
    public CveResult withCvssV2Score(String cvssV2Score) {
        this.cvssV2Score = cvssV2Score;
        return this;
    }

    /**
     * Get the cvssV3Score property: CVSS V3 score of the CVE.
     * 
     * @return the cvssV3Score value.
     */
    public String cvssV3Score() {
        return this.cvssV3Score;
    }

    /**
     * Set the cvssV3Score property: CVSS V3 score of the CVE.
     * 
     * @param cvssV3Score the cvssV3Score value to set.
     * @return the CveResult object itself.
     */
    public CveResult withCvssV3Score(String cvssV3Score) {
        this.cvssV3Score = cvssV3Score;
        return this;
    }

    /**
     * Get the links property: The list of reference links for the CVE.
     * 
     * @return the links value.
     */
    public List<CveLink> links() {
        return this.links;
    }

    /**
     * Get the description property: The CVE description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The CVE description.
     * 
     * @param description the description value to set.
     * @return the CveResult object itself.
     */
    public CveResult withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (component() != null) {
            component().validate();
        }
        if (links() != null) {
            links().forEach(e -> e.validate());
        }
    }
}
