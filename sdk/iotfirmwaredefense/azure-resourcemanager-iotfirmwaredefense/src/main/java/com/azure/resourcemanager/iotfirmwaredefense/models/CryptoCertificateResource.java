// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.models;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.iotfirmwaredefense.fluent.models.CryptoCertificateResourceInner;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * An immutable client-side representation of CryptoCertificateResource.
 */
public interface CryptoCertificateResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the cryptoCertId property: ID for the certificate result.
     * 
     * @return the cryptoCertId value.
     */
    String cryptoCertId();

    /**
     * Gets the namePropertiesName property: Name of the certificate.
     * 
     * @return the namePropertiesName value.
     */
    String namePropertiesName();

    /**
     * Gets the subject property: Subject information of the certificate.
     * 
     * @return the subject value.
     */
    CryptoCertificateEntity subject();

    /**
     * Gets the issuer property: Issuer information of the certificate.
     * 
     * @return the issuer value.
     */
    CryptoCertificateEntity issuer();

    /**
     * Gets the issuedDate property: Issue date for the certificate.
     * 
     * @return the issuedDate value.
     */
    OffsetDateTime issuedDate();

    /**
     * Gets the expirationDate property: Expiration date for the certificate.
     * 
     * @return the expirationDate value.
     */
    OffsetDateTime expirationDate();

    /**
     * Gets the role property: Role of the certificate (Root CA, etc).
     * 
     * @return the role value.
     */
    String role();

    /**
     * Gets the signatureAlgorithm property: The signature algorithm used in the certificate.
     * 
     * @return the signatureAlgorithm value.
     */
    String signatureAlgorithm();

    /**
     * Gets the keySize property: Size of the certificate's key in bits.
     * 
     * @return the keySize value.
     */
    Long keySize();

    /**
     * Gets the keyAlgorithm property: Key algorithm used in the certificate.
     * 
     * @return the keyAlgorithm value.
     */
    String keyAlgorithm();

    /**
     * Gets the encoding property: Encoding used for the certificate.
     * 
     * @return the encoding value.
     */
    String encoding();

    /**
     * Gets the serialNumber property: Serial number of the certificate.
     * 
     * @return the serialNumber value.
     */
    String serialNumber();

    /**
     * Gets the fingerprint property: Fingerprint of the certificate.
     * 
     * @return the fingerprint value.
     */
    String fingerprint();

    /**
     * Gets the usage property: List of functions the certificate can fulfill.
     * 
     * @return the usage value.
     */
    List<String> usage();

    /**
     * Gets the filePaths property: List of files where this certificate was found.
     * 
     * @return the filePaths value.
     */
    List<String> filePaths();

    /**
     * Gets the pairedKey property: A matching paired private key.
     * 
     * @return the pairedKey value.
     */
    PairedKey pairedKey();

    /**
     * Gets the isExpired property: Indicates if the certificate is expired.
     * 
     * @return the isExpired value.
     */
    Boolean isExpired();

    /**
     * Gets the isSelfSigned property: Indicates if the certificate is self-signed.
     * 
     * @return the isSelfSigned value.
     */
    Boolean isSelfSigned();

    /**
     * Gets the isWeakSignature property: Indicates the signature algorithm used is insecure.
     * 
     * @return the isWeakSignature value.
     */
    Boolean isWeakSignature();

    /**
     * Gets the isShortKeySize property: Indicates the certificate's key size is considered too small to be secure for
     * the key algorithm.
     * 
     * @return the isShortKeySize value.
     */
    Boolean isShortKeySize();

    /**
     * Gets the inner com.azure.resourcemanager.iotfirmwaredefense.fluent.models.CryptoCertificateResourceInner object.
     * 
     * @return the inner object.
     */
    CryptoCertificateResourceInner innerModel();
}
