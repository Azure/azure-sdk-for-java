// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * SBOM analysis result resource.
 */
@Fluent
public final class SbomComponentResourceInner extends ProxyResource {
    /*
     * The properties of an SBOM component found within a firmware image
     */
    @JsonProperty(value = "properties")
    private SbomComponent innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of SbomComponentResourceInner class.
     */
    public SbomComponentResourceInner() {
    }

    /**
     * Get the innerProperties property: The properties of an SBOM component found within a firmware image.
     * 
     * @return the innerProperties value.
     */
    private SbomComponent innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the componentId property: ID for the component.
     * 
     * @return the componentId value.
     */
    public String componentId() {
        return this.innerProperties() == null ? null : this.innerProperties().componentId();
    }

    /**
     * Set the componentId property: ID for the component.
     * 
     * @param componentId the componentId value to set.
     * @return the SbomComponentResourceInner object itself.
     */
    public SbomComponentResourceInner withComponentId(String componentId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SbomComponent();
        }
        this.innerProperties().withComponentId(componentId);
        return this;
    }

    /**
     * Get the componentName property: Name for the component.
     * 
     * @return the componentName value.
     */
    public String componentName() {
        return this.innerProperties() == null ? null : this.innerProperties().componentName();
    }

    /**
     * Set the componentName property: Name for the component.
     * 
     * @param componentName the componentName value to set.
     * @return the SbomComponentResourceInner object itself.
     */
    public SbomComponentResourceInner withComponentName(String componentName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SbomComponent();
        }
        this.innerProperties().withComponentName(componentName);
        return this;
    }

    /**
     * Get the version property: Version for the component.
     * 
     * @return the version value.
     */
    public String version() {
        return this.innerProperties() == null ? null : this.innerProperties().version();
    }

    /**
     * Set the version property: Version for the component.
     * 
     * @param version the version value to set.
     * @return the SbomComponentResourceInner object itself.
     */
    public SbomComponentResourceInner withVersion(String version) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SbomComponent();
        }
        this.innerProperties().withVersion(version);
        return this;
    }

    /**
     * Get the license property: License for the component.
     * 
     * @return the license value.
     */
    public String license() {
        return this.innerProperties() == null ? null : this.innerProperties().license();
    }

    /**
     * Set the license property: License for the component.
     * 
     * @param license the license value to set.
     * @return the SbomComponentResourceInner object itself.
     */
    public SbomComponentResourceInner withLicense(String license) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SbomComponent();
        }
        this.innerProperties().withLicense(license);
        return this;
    }

    /**
     * Get the filePaths property: File paths related to the component.
     * 
     * @return the filePaths value.
     */
    public List<String> filePaths() {
        return this.innerProperties() == null ? null : this.innerProperties().filePaths();
    }

    /**
     * Set the filePaths property: File paths related to the component.
     * 
     * @param filePaths the filePaths value to set.
     * @return the SbomComponentResourceInner object itself.
     */
    public SbomComponentResourceInner withFilePaths(List<String> filePaths) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SbomComponent();
        }
        this.innerProperties().withFilePaths(filePaths);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
