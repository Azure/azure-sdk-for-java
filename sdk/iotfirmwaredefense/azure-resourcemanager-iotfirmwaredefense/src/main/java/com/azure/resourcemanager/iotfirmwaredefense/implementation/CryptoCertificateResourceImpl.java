// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.implementation;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.iotfirmwaredefense.fluent.models.CryptoCertificateResourceInner;
import com.azure.resourcemanager.iotfirmwaredefense.models.CryptoCertificateEntity;
import com.azure.resourcemanager.iotfirmwaredefense.models.CryptoCertificateResource;
import com.azure.resourcemanager.iotfirmwaredefense.models.PairedKey;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class CryptoCertificateResourceImpl implements CryptoCertificateResource {
    private CryptoCertificateResourceInner innerObject;

    private final com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager serviceManager;

    CryptoCertificateResourceImpl(CryptoCertificateResourceInner innerObject,
        com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String cryptoCertId() {
        return this.innerModel().cryptoCertId();
    }

    public String namePropertiesName() {
        return this.innerModel().namePropertiesName();
    }

    public CryptoCertificateEntity subject() {
        return this.innerModel().subject();
    }

    public CryptoCertificateEntity issuer() {
        return this.innerModel().issuer();
    }

    public OffsetDateTime issuedDate() {
        return this.innerModel().issuedDate();
    }

    public OffsetDateTime expirationDate() {
        return this.innerModel().expirationDate();
    }

    public String role() {
        return this.innerModel().role();
    }

    public String signatureAlgorithm() {
        return this.innerModel().signatureAlgorithm();
    }

    public Long keySize() {
        return this.innerModel().keySize();
    }

    public String keyAlgorithm() {
        return this.innerModel().keyAlgorithm();
    }

    public String encoding() {
        return this.innerModel().encoding();
    }

    public String serialNumber() {
        return this.innerModel().serialNumber();
    }

    public String fingerprint() {
        return this.innerModel().fingerprint();
    }

    public List<String> usage() {
        List<String> inner = this.innerModel().usage();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> filePaths() {
        List<String> inner = this.innerModel().filePaths();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public PairedKey pairedKey() {
        return this.innerModel().pairedKey();
    }

    public Boolean isExpired() {
        return this.innerModel().isExpired();
    }

    public Boolean isSelfSigned() {
        return this.innerModel().isSelfSigned();
    }

    public Boolean isWeakSignature() {
        return this.innerModel().isWeakSignature();
    }

    public Boolean isShortKeySize() {
        return this.innerModel().isShortKeySize();
    }

    public CryptoCertificateResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager manager() {
        return this.serviceManager;
    }
}
