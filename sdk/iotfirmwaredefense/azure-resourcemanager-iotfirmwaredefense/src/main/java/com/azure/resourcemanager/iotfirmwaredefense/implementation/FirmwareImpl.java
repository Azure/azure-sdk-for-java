// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.iotfirmwaredefense.fluent.models.FirmwareInner;
import com.azure.resourcemanager.iotfirmwaredefense.models.Firmware;
import com.azure.resourcemanager.iotfirmwaredefense.models.FirmwareProperties;
import com.azure.resourcemanager.iotfirmwaredefense.models.FirmwareUpdateDefinition;

public final class FirmwareImpl implements Firmware, Firmware.Definition, Firmware.Update {
    private FirmwareInner innerObject;

    private final com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public FirmwareProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public FirmwareInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String firmwareId;

    private FirmwareUpdateDefinition updateProperties;

    public FirmwareImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public Firmware create() {
        this.innerObject = serviceManager.serviceClient()
            .getFirmwares()
            .createWithResponse(resourceGroupName, workspaceName, firmwareId, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public Firmware create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFirmwares()
            .createWithResponse(resourceGroupName, workspaceName, firmwareId, this.innerModel(), context)
            .getValue();
        return this;
    }

    FirmwareImpl(String name, com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager serviceManager) {
        this.innerObject = new FirmwareInner();
        this.serviceManager = serviceManager;
        this.firmwareId = name;
    }

    public FirmwareImpl update() {
        this.updateProperties = new FirmwareUpdateDefinition();
        return this;
    }

    public Firmware apply() {
        this.innerObject = serviceManager.serviceClient()
            .getFirmwares()
            .updateWithResponse(resourceGroupName, workspaceName, firmwareId, updateProperties, Context.NONE)
            .getValue();
        return this;
    }

    public Firmware apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFirmwares()
            .updateWithResponse(resourceGroupName, workspaceName, firmwareId, updateProperties, context)
            .getValue();
        return this;
    }

    FirmwareImpl(FirmwareInner innerObject,
        com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.firmwareId = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "firmwares");
    }

    public Firmware refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getFirmwares()
            .getWithResponse(resourceGroupName, workspaceName, firmwareId, Context.NONE)
            .getValue();
        return this;
    }

    public Firmware refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFirmwares()
            .getWithResponse(resourceGroupName, workspaceName, firmwareId, context)
            .getValue();
        return this;
    }

    public FirmwareImpl withProperties(FirmwareProperties properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.updateProperties.withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
