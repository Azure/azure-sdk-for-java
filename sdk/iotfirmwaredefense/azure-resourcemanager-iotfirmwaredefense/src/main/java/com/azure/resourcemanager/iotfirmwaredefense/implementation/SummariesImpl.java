// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.iotfirmwaredefense.fluent.SummariesClient;
import com.azure.resourcemanager.iotfirmwaredefense.fluent.models.SummaryResourceInner;
import com.azure.resourcemanager.iotfirmwaredefense.models.Summaries;
import com.azure.resourcemanager.iotfirmwaredefense.models.SummaryName;
import com.azure.resourcemanager.iotfirmwaredefense.models.SummaryResource;

public final class SummariesImpl implements Summaries {
    private static final ClientLogger LOGGER = new ClientLogger(SummariesImpl.class);

    private final SummariesClient innerClient;

    private final com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager serviceManager;

    public SummariesImpl(SummariesClient innerClient,
        com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<SummaryResource> listByFirmware(String resourceGroupName, String workspaceName,
        String firmwareId) {
        PagedIterable<SummaryResourceInner> inner
            = this.serviceClient().listByFirmware(resourceGroupName, workspaceName, firmwareId);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SummaryResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SummaryResource> listByFirmware(String resourceGroupName, String workspaceName,
        String firmwareId, Context context) {
        PagedIterable<SummaryResourceInner> inner
            = this.serviceClient().listByFirmware(resourceGroupName, workspaceName, firmwareId, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SummaryResourceImpl(inner1, this.manager()));
    }

    public Response<SummaryResource> getWithResponse(String resourceGroupName, String workspaceName, String firmwareId,
        SummaryName summaryName, Context context) {
        Response<SummaryResourceInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, workspaceName, firmwareId, summaryName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SummaryResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SummaryResource get(String resourceGroupName, String workspaceName, String firmwareId,
        SummaryName summaryName) {
        SummaryResourceInner inner
            = this.serviceClient().get(resourceGroupName, workspaceName, firmwareId, summaryName);
        if (inner != null) {
            return new SummaryResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private SummariesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager manager() {
        return this.serviceManager;
    }
}
