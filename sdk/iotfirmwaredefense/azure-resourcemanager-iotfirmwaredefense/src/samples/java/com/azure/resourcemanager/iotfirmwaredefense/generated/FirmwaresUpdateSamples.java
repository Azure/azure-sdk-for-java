// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.generated;

import com.azure.resourcemanager.iotfirmwaredefense.models.Firmware;
import com.azure.resourcemanager.iotfirmwaredefense.models.Status;
import com.azure.resourcemanager.iotfirmwaredefense.models.StatusMessage;
import java.util.Arrays;

/**
 * Samples for Firmwares Update.
 */
public final class FirmwaresUpdateSamples {
    /*
     * x-ms-original-file: 2025-08-02/Firmwares_Update_MaximumSet_Gen.json
     */
    /**
     * Sample code: Firmwares_Update_MaximumSet_Gen - generated by [MaximumSet] rule.
     * 
     * @param manager Entry point to IoTFirmwareDefenseManager.
     */
    public static void firmwaresUpdateMaximumSetGenGeneratedByMaximumSetRule(
        com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager manager) {
        Firmware resource = manager.firmwares()
            .getWithResponse("rgiotfirmwaredefense", "exampleWorkspaceName", "00000000-0000-0000-0000-000000000000",
                com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withFileName("FileNameThatWasUploaded.bin")
            .withVendor("ExampleVendorName")
            .withModel("ExampleModelOfDevice")
            .withVersion("1.0.0")
            .withDescription("User provided description of the firmware.")
            .withFileSize(30L)
            .withStatus(Status.PENDING)
            .withStatusMessages(Arrays.asList(new StatusMessage().withErrorCode(5L)
                .withMessage(
                    "Firmware image contained some file systems that are not supported for extraction so results may be incomplete.")))
            .apply();
    }

    /*
     * x-ms-original-file: 2025-08-02/Firmwares_Update_MinimumSet_Gen.json
     */
    /**
     * Sample code: Firmwares_Update_MinimumSet_Gen.
     * 
     * @param manager Entry point to IoTFirmwareDefenseManager.
     */
    public static void
        firmwaresUpdateMinimumSetGen(com.azure.resourcemanager.iotfirmwaredefense.IoTFirmwareDefenseManager manager) {
        Firmware resource = manager.firmwares()
            .getWithResponse("rgworkspaces-firmwares", "A7", "umrkdttp", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update().apply();
    }
}
