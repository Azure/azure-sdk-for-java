/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.v2016_06_01;

import rx.Observable;
import com.microsoft.azure.management.recoveryservices.v2016_06_01.implementation.VaultExtendedInfoResourceInner;
import com.microsoft.azure.management.recoveryservices.v2016_06_01.implementation.VaultExtendedInfosInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing VaultExtendedInfos.
 */
public interface VaultExtendedInfos extends HasInner<VaultExtendedInfosInner> {
    /**
     * Get the vault extended info.
     *
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param vaultName The name of the recovery services vault.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<VaultExtendedInfoResource> getAsync(String resourceGroupName, String vaultName);

    /**
     * Create vault extended info.
     *
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param vaultName The name of the recovery services vault.
     * @param resourceResourceExtendedInfoDetails Details of ResourceExtendedInfo
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<VaultExtendedInfoResource> createOrUpdateAsync(String resourceGroupName, String vaultName, VaultExtendedInfoResourceInner resourceResourceExtendedInfoDetails);

    /**
     * Update vault extended info.
     *
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param vaultName The name of the recovery services vault.
     * @param resourceResourceExtendedInfoDetails Details of ResourceExtendedInfo
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<VaultExtendedInfoResource> updateAsync(String resourceGroupName, String vaultName, VaultExtendedInfoResourceInner resourceResourceExtendedInfoDetails);

}
