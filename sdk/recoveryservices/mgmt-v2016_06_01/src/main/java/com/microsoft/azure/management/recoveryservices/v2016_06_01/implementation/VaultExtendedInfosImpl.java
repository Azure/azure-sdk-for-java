/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.recoveryservices.v2016_06_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.recoveryservices.v2016_06_01.VaultExtendedInfos;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.recoveryservices.v2016_06_01.VaultExtendedInfoResource;

class VaultExtendedInfosImpl extends WrapperImpl<VaultExtendedInfosInner> implements VaultExtendedInfos {
    private final RecoveryServicesManager manager;

    VaultExtendedInfosImpl(RecoveryServicesManager manager) {
        super(manager.inner().vaultExtendedInfos());
        this.manager = manager;
    }

    public RecoveryServicesManager manager() {
        return this.manager;
    }

    @Override
    public Observable<VaultExtendedInfoResource> getAsync(String resourceGroupName, String vaultName) {
        VaultExtendedInfosInner client = this.inner();
        return client.getAsync(resourceGroupName, vaultName)
        .map(new Func1<VaultExtendedInfoResourceInner, VaultExtendedInfoResource>() {
            @Override
            public VaultExtendedInfoResource call(VaultExtendedInfoResourceInner inner) {
                return new VaultExtendedInfoResourceImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<VaultExtendedInfoResource> createOrUpdateAsync(String resourceGroupName, String vaultName, VaultExtendedInfoResourceInner resourceResourceExtendedInfoDetails) {
        VaultExtendedInfosInner client = this.inner();
        return client.createOrUpdateAsync(resourceGroupName, vaultName, resourceResourceExtendedInfoDetails)
        .map(new Func1<VaultExtendedInfoResourceInner, VaultExtendedInfoResource>() {
            @Override
            public VaultExtendedInfoResource call(VaultExtendedInfoResourceInner inner) {
                return new VaultExtendedInfoResourceImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<VaultExtendedInfoResource> updateAsync(String resourceGroupName, String vaultName, VaultExtendedInfoResourceInner resourceResourceExtendedInfoDetails) {
        VaultExtendedInfosInner client = this.inner();
        return client.updateAsync(resourceGroupName, vaultName, resourceResourceExtendedInfoDetails)
        .map(new Func1<VaultExtendedInfoResourceInner, VaultExtendedInfoResource>() {
            @Override
            public VaultExtendedInfoResource call(VaultExtendedInfoResourceInner inner) {
                return new VaultExtendedInfoResourceImpl(inner, manager());
            }
        });
    }

}
