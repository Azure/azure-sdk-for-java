// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservices.RecoveryServicesManager;
import com.azure.resourcemanager.recoveryservices.models.CapabilitiesProperties;
import com.azure.resourcemanager.recoveryservices.models.CapabilitiesResponse;
import com.azure.resourcemanager.recoveryservices.models.DnsZone;
import com.azure.resourcemanager.recoveryservices.models.ResourceCapabilities;
import com.azure.resourcemanager.recoveryservices.models.VaultSubResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RecoveryServicesCapabilitiesWithResponseMockTests {
    @Test
    public void testCapabilitiesWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"dnsZones\":[{\"requiredZoneNames\":[\"vrnsvshqjohxc\",\"sbfov\",\"srruvwbhsqfsubcg\",\"birx\"],\"subResource\":\"AzureSiteRecovery\"},{\"requiredZoneNames\":[\"rfbjf\",\"twss\",\"t\"],\"subResource\":\"AzureSiteRecovery\"},{\"requiredZoneNames\":[\"zbexilzznfqqnvw\",\"mqtaruoujmkcjh\",\"qytjrybnwjewgd\"],\"subResource\":\"AzureBackup_secondary\"}]},\"type\":\"rvnaenqpeh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesManager manager = RecoveryServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CapabilitiesResponse response = manager.recoveryServices()
            .capabilitiesWithResponse("bhsfxob",
                new ResourceCapabilities().withType("mpew")
                    .withProperties(new CapabilitiesProperties().withDnsZones(
                        Arrays.asList(new DnsZone().withSubResource(VaultSubResourceType.AZURE_SITE_RECOVERY)))),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("rvnaenqpeh", response.type());
        Assertions.assertEquals(VaultSubResourceType.AZURE_SITE_RECOVERY,
            response.properties().dnsZones().get(0).subResource());
        Assertions.assertEquals("vrnsvshqjohxc", response.properties().dnsZones().get(0).requiredZoneNames().get(0));
    }
}
