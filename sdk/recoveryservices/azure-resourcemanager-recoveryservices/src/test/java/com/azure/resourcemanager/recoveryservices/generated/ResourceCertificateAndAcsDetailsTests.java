// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservices.models.ResourceCertificateAndAcsDetails;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ResourceCertificateAndAcsDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceCertificateAndAcsDetails model = BinaryData.fromString(
            "{\"authType\":\"AccessControlService\",\"globalAcsNamespace\":\"iotwmcdytdxwit\",\"globalAcsHostName\":\"nrjawgqwg\",\"globalAcsRPRealm\":\"hniskxfbkpyc\",\"friendlyName\":\"wndnhj\",\"issuer\":\"uwhvylwzbtdhxujz\",\"resourceId\":9120098526772116433,\"subject\":\"wuwprzqlv\",\"thumbprint\":\"alupjm\",\"validFrom\":\"2021-08-12T08:43:21Z\",\"validTo\":\"2021-08-19T13:39:55Z\"}")
            .toObject(ResourceCertificateAndAcsDetails.class);
        Assertions.assertEquals("wndnhj", model.friendlyName());
        Assertions.assertEquals("uwhvylwzbtdhxujz", model.issuer());
        Assertions.assertEquals(9120098526772116433L, model.resourceId());
        Assertions.assertEquals("wuwprzqlv", model.subject());
        Assertions.assertEquals("alupjm", model.thumbprint());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-12T08:43:21Z"), model.validFrom());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-19T13:39:55Z"), model.validTo());
        Assertions.assertEquals("iotwmcdytdxwit", model.globalAcsNamespace());
        Assertions.assertEquals("nrjawgqwg", model.globalAcsHostname());
        Assertions.assertEquals("hniskxfbkpyc", model.globalAcsRPRealm());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceCertificateAndAcsDetails model = new ResourceCertificateAndAcsDetails().withFriendlyName("wndnhj")
            .withIssuer("uwhvylwzbtdhxujz")
            .withResourceId(9120098526772116433L)
            .withSubject("wuwprzqlv")
            .withThumbprint("alupjm")
            .withValidFrom(OffsetDateTime.parse("2021-08-12T08:43:21Z"))
            .withValidTo(OffsetDateTime.parse("2021-08-19T13:39:55Z"))
            .withGlobalAcsNamespace("iotwmcdytdxwit")
            .withGlobalAcsHostname("nrjawgqwg")
            .withGlobalAcsRPRealm("hniskxfbkpyc");
        model = BinaryData.fromObject(model).toObject(ResourceCertificateAndAcsDetails.class);
        Assertions.assertEquals("wndnhj", model.friendlyName());
        Assertions.assertEquals("uwhvylwzbtdhxujz", model.issuer());
        Assertions.assertEquals(9120098526772116433L, model.resourceId());
        Assertions.assertEquals("wuwprzqlv", model.subject());
        Assertions.assertEquals("alupjm", model.thumbprint());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-12T08:43:21Z"), model.validFrom());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-19T13:39:55Z"), model.validTo());
        Assertions.assertEquals("iotwmcdytdxwit", model.globalAcsNamespace());
        Assertions.assertEquals("nrjawgqwg", model.globalAcsHostname());
        Assertions.assertEquals("hniskxfbkpyc", model.globalAcsRPRealm());
    }
}
