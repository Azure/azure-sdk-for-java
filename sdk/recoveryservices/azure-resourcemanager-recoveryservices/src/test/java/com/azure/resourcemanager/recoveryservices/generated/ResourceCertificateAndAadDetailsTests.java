// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservices.models.ResourceCertificateAndAadDetails;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ResourceCertificateAndAadDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceCertificateAndAadDetails model = BinaryData.fromString(
            "{\"authType\":\"AzureActiveDirectory\",\"aadAuthority\":\"civyhzceuo\",\"aadTenantId\":\"gjrwjueiotwmcdyt\",\"servicePrincipalClientId\":\"x\",\"servicePrincipalObjectId\":\"it\",\"azureManagementEndpointAudience\":\"nrjawgqwg\",\"serviceResourceId\":\"ni\",\"aadAudience\":\"x\",\"friendlyName\":\"py\",\"issuer\":\"klwndnhjdauwhv\",\"resourceId\":8550144632866513257,\"subject\":\"tdhxujznbmpowuwp\",\"thumbprint\":\"qlveualupjmkh\",\"validFrom\":\"2021-08-19T13:39:55Z\",\"validTo\":\"2021-03-15T14:14:57Z\"}")
            .toObject(ResourceCertificateAndAadDetails.class);
        Assertions.assertEquals("py", model.friendlyName());
        Assertions.assertEquals("klwndnhjdauwhv", model.issuer());
        Assertions.assertEquals(8550144632866513257L, model.resourceId());
        Assertions.assertEquals("tdhxujznbmpowuwp", model.subject());
        Assertions.assertEquals("qlveualupjmkh", model.thumbprint());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-19T13:39:55Z"), model.validFrom());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-15T14:14:57Z"), model.validTo());
        Assertions.assertEquals("civyhzceuo", model.aadAuthority());
        Assertions.assertEquals("gjrwjueiotwmcdyt", model.aadTenantId());
        Assertions.assertEquals("x", model.servicePrincipalClientId());
        Assertions.assertEquals("it", model.servicePrincipalObjectId());
        Assertions.assertEquals("nrjawgqwg", model.azureManagementEndpointAudience());
        Assertions.assertEquals("ni", model.serviceResourceId());
        Assertions.assertEquals("x", model.aadAudience());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceCertificateAndAadDetails model = new ResourceCertificateAndAadDetails().withFriendlyName("py")
            .withIssuer("klwndnhjdauwhv")
            .withResourceId(8550144632866513257L)
            .withSubject("tdhxujznbmpowuwp")
            .withThumbprint("qlveualupjmkh")
            .withValidFrom(OffsetDateTime.parse("2021-08-19T13:39:55Z"))
            .withValidTo(OffsetDateTime.parse("2021-03-15T14:14:57Z"))
            .withAadAuthority("civyhzceuo")
            .withAadTenantId("gjrwjueiotwmcdyt")
            .withServicePrincipalClientId("x")
            .withServicePrincipalObjectId("it")
            .withAzureManagementEndpointAudience("nrjawgqwg")
            .withServiceResourceId("ni")
            .withAadAudience("x");
        model = BinaryData.fromObject(model).toObject(ResourceCertificateAndAadDetails.class);
        Assertions.assertEquals("py", model.friendlyName());
        Assertions.assertEquals("klwndnhjdauwhv", model.issuer());
        Assertions.assertEquals(8550144632866513257L, model.resourceId());
        Assertions.assertEquals("tdhxujznbmpowuwp", model.subject());
        Assertions.assertEquals("qlveualupjmkh", model.thumbprint());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-19T13:39:55Z"), model.validFrom());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-15T14:14:57Z"), model.validTo());
        Assertions.assertEquals("civyhzceuo", model.aadAuthority());
        Assertions.assertEquals("gjrwjueiotwmcdyt", model.aadTenantId());
        Assertions.assertEquals("x", model.servicePrincipalClientId());
        Assertions.assertEquals("it", model.servicePrincipalObjectId());
        Assertions.assertEquals("nrjawgqwg", model.azureManagementEndpointAudience());
        Assertions.assertEquals("ni", model.serviceResourceId());
        Assertions.assertEquals("x", model.aadAudience());
    }
}
