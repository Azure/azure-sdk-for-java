// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservices.RecoveryServicesManager;
import com.azure.resourcemanager.recoveryservices.models.AuthType;
import com.azure.resourcemanager.recoveryservices.models.RawCertificateData;
import com.azure.resourcemanager.recoveryservices.models.VaultCertificateResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VaultCertificatesCreateWithResponseMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"authType\":\"ResourceCertificateDetails\",\"friendlyName\":\"cnojvknmefqsg\",\"issuer\":\"ah\",\"resourceId\":8796329803823614210,\"subject\":\"hpvgqz\",\"thumbprint\":\"rvxdjzlmw\",\"validFrom\":\"2021-07-11T22:18:52Z\",\"validTo\":\"2021-11-03T14:53:04Z\"},\"id\":\"fhzovawjvzunluth\",\"name\":\"n\",\"type\":\"rnxipei\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesManager manager = RecoveryServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        VaultCertificateResponse response = manager.vaultCertificates()
            .define("vxqtayriwwroyqbe")
            .withExistingVault("vjcbpwxqpsrknf", "guvriuhprwmd")
            .withProperties(new RawCertificateData().withAuthType(AuthType.ACCESS_CONTROL_SERVICE))
            .create();

        Assertions.assertEquals("cnojvknmefqsg", response.properties().friendlyName());
        Assertions.assertEquals("ah", response.properties().issuer());
        Assertions.assertEquals(8796329803823614210L, response.properties().resourceId());
        Assertions.assertEquals("hpvgqz", response.properties().subject());
        Assertions.assertEquals("rvxdjzlmw", response.properties().thumbprint());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-11T22:18:52Z"), response.properties().validFrom());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-03T14:53:04Z"), response.properties().validTo());
    }
}
