// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservices.fluent.models.VaultUsageInner;
import com.azure.resourcemanager.recoveryservices.models.NameInfo;
import com.azure.resourcemanager.recoveryservices.models.UsagesUnit;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class VaultUsageInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VaultUsageInner model = BinaryData.fromString(
            "{\"unit\":\"Percent\",\"quotaPeriod\":\"isgwbnbbeldawkz\",\"nextResetTime\":\"2021-01-06T08:15:40Z\",\"currentValue\":489170478703847309,\"limit\":4089645691345581060,\"name\":{\"value\":\"auhashsfwx\",\"localizedValue\":\"owzxcu\"}}")
            .toObject(VaultUsageInner.class);
        Assertions.assertEquals(UsagesUnit.PERCENT, model.unit());
        Assertions.assertEquals("isgwbnbbeldawkz", model.quotaPeriod());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-06T08:15:40Z"), model.nextResetTime());
        Assertions.assertEquals(489170478703847309L, model.currentValue());
        Assertions.assertEquals(4089645691345581060L, model.limit());
        Assertions.assertEquals("auhashsfwx", model.name().value());
        Assertions.assertEquals("owzxcu", model.name().localizedValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VaultUsageInner model = new VaultUsageInner().withUnit(UsagesUnit.PERCENT)
            .withQuotaPeriod("isgwbnbbeldawkz")
            .withNextResetTime(OffsetDateTime.parse("2021-01-06T08:15:40Z"))
            .withCurrentValue(489170478703847309L)
            .withLimit(4089645691345581060L)
            .withName(new NameInfo().withValue("auhashsfwx").withLocalizedValue("owzxcu"));
        model = BinaryData.fromObject(model).toObject(VaultUsageInner.class);
        Assertions.assertEquals(UsagesUnit.PERCENT, model.unit());
        Assertions.assertEquals("isgwbnbbeldawkz", model.quotaPeriod());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-06T08:15:40Z"), model.nextResetTime());
        Assertions.assertEquals(489170478703847309L, model.currentValue());
        Assertions.assertEquals(4089645691345581060L, model.limit());
        Assertions.assertEquals("auhashsfwx", model.name().value());
        Assertions.assertEquals("owzxcu", model.name().localizedValue());
    }
}
