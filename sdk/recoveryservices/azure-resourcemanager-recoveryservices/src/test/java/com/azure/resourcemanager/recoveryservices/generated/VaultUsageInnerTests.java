// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservices.fluent.models.VaultUsageInner;
import com.azure.resourcemanager.recoveryservices.models.NameInfo;
import com.azure.resourcemanager.recoveryservices.models.UsagesUnit;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class VaultUsageInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VaultUsageInner model =
            BinaryData
                .fromString(
                    "{\"unit\":\"Percent\",\"quotaPeriod\":\"srtslhspkdeem\",\"nextResetTime\":\"2021-02-20T10:46:34Z\",\"currentValue\":5804956821269941754,\"limit\":1374030428584704873,\"name\":{\"value\":\"elmqk\",\"localizedValue\":\"ahvljuaha\"}}")
                .toObject(VaultUsageInner.class);
        Assertions.assertEquals(UsagesUnit.PERCENT, model.unit());
        Assertions.assertEquals("srtslhspkdeem", model.quotaPeriod());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-20T10:46:34Z"), model.nextResetTime());
        Assertions.assertEquals(5804956821269941754L, model.currentValue());
        Assertions.assertEquals(1374030428584704873L, model.limit());
        Assertions.assertEquals("elmqk", model.name().value());
        Assertions.assertEquals("ahvljuaha", model.name().localizedValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VaultUsageInner model =
            new VaultUsageInner()
                .withUnit(UsagesUnit.PERCENT)
                .withQuotaPeriod("srtslhspkdeem")
                .withNextResetTime(OffsetDateTime.parse("2021-02-20T10:46:34Z"))
                .withCurrentValue(5804956821269941754L)
                .withLimit(1374030428584704873L)
                .withName(new NameInfo().withValue("elmqk").withLocalizedValue("ahvljuaha"));
        model = BinaryData.fromObject(model).toObject(VaultUsageInner.class);
        Assertions.assertEquals(UsagesUnit.PERCENT, model.unit());
        Assertions.assertEquals("srtslhspkdeem", model.quotaPeriod());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-20T10:46:34Z"), model.nextResetTime());
        Assertions.assertEquals(5804956821269941754L, model.currentValue());
        Assertions.assertEquals(1374030428584704873L, model.limit());
        Assertions.assertEquals("elmqk", model.name().value());
        Assertions.assertEquals("ahvljuaha", model.name().localizedValue());
    }
}
