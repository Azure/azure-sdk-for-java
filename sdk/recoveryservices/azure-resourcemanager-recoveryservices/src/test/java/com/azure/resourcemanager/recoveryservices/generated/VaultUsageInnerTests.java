// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservices.fluent.models.VaultUsageInner;
import com.azure.resourcemanager.recoveryservices.models.NameInfo;
import com.azure.resourcemanager.recoveryservices.models.UsagesUnit;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class VaultUsageInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VaultUsageInner model = BinaryData.fromString(
            "{\"unit\":\"Seconds\",\"quotaPeriod\":\"v\",\"nextResetTime\":\"2021-01-05T18:56:58Z\",\"currentValue\":2755642234733454971,\"limit\":1169778557052880447,\"name\":{\"value\":\"deemao\",\"localizedValue\":\"xagkvtmelmqkrh\"}}")
            .toObject(VaultUsageInner.class);
        Assertions.assertEquals(UsagesUnit.SECONDS, model.unit());
        Assertions.assertEquals("v", model.quotaPeriod());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-05T18:56:58Z"), model.nextResetTime());
        Assertions.assertEquals(2755642234733454971L, model.currentValue());
        Assertions.assertEquals(1169778557052880447L, model.limit());
        Assertions.assertEquals("deemao", model.name().value());
        Assertions.assertEquals("xagkvtmelmqkrh", model.name().localizedValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VaultUsageInner model = new VaultUsageInner().withUnit(UsagesUnit.SECONDS)
            .withQuotaPeriod("v")
            .withNextResetTime(OffsetDateTime.parse("2021-01-05T18:56:58Z"))
            .withCurrentValue(2755642234733454971L)
            .withLimit(1169778557052880447L)
            .withName(new NameInfo().withValue("deemao").withLocalizedValue("xagkvtmelmqkrh"));
        model = BinaryData.fromObject(model).toObject(VaultUsageInner.class);
        Assertions.assertEquals(UsagesUnit.SECONDS, model.unit());
        Assertions.assertEquals("v", model.quotaPeriod());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-05T18:56:58Z"), model.nextResetTime());
        Assertions.assertEquals(2755642234733454971L, model.currentValue());
        Assertions.assertEquals(1169778557052880447L, model.limit());
        Assertions.assertEquals("deemao", model.name().value());
        Assertions.assertEquals("xagkvtmelmqkrh", model.name().localizedValue());
    }
}
