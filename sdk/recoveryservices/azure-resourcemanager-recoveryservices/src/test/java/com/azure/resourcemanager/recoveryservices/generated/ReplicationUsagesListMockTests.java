// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservices.RecoveryServicesManager;
import com.azure.resourcemanager.recoveryservices.models.ReplicationUsage;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReplicationUsagesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"monitoringSummary\":{\"unHealthyVmCount\":1369679233,\"unHealthyProviderCount\":657936288,\"eventsCount\":1295774959,\"deprecatedProviderCount\":568244971,\"supportedProviderCount\":301470768,\"unsupportedProviderCount\":2103564853},\"jobsSummary\":{\"failedJobs\":1422945070,\"suspendedJobs\":1252528512,\"inProgressJobs\":45872869},\"protectedItemCount\":1947792369,\"recoveryPlanCount\":2085364549,\"registeredServersCount\":1408217063,\"recoveryServicesProviderAuthType\":628545796}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesManager manager = RecoveryServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ReplicationUsage> response
            = manager.replicationUsages().list("kzbbtd", "umveekgpwozuhkf", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(1369679233, response.iterator().next().monitoringSummary().unHealthyVmCount());
        Assertions.assertEquals(657936288, response.iterator().next().monitoringSummary().unHealthyProviderCount());
        Assertions.assertEquals(1295774959, response.iterator().next().monitoringSummary().eventsCount());
        Assertions.assertEquals(568244971, response.iterator().next().monitoringSummary().deprecatedProviderCount());
        Assertions.assertEquals(301470768, response.iterator().next().monitoringSummary().supportedProviderCount());
        Assertions.assertEquals(2103564853, response.iterator().next().monitoringSummary().unsupportedProviderCount());
        Assertions.assertEquals(1422945070, response.iterator().next().jobsSummary().failedJobs());
        Assertions.assertEquals(1252528512, response.iterator().next().jobsSummary().suspendedJobs());
        Assertions.assertEquals(45872869, response.iterator().next().jobsSummary().inProgressJobs());
        Assertions.assertEquals(1947792369, response.iterator().next().protectedItemCount());
        Assertions.assertEquals(2085364549, response.iterator().next().recoveryPlanCount());
        Assertions.assertEquals(1408217063, response.iterator().next().registeredServersCount());
        Assertions.assertEquals(628545796, response.iterator().next().recoveryServicesProviderAuthType());
    }
}
