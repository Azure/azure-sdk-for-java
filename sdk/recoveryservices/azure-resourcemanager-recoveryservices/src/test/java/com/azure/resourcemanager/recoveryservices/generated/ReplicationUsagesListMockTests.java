// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservices.RecoveryServicesManager;
import com.azure.resourcemanager.recoveryservices.models.ReplicationUsage;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReplicationUsagesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"monitoringSummary\":{\"unHealthyVmCount\":1715507551,\"unHealthyProviderCount\":1436102139,\"eventsCount\":1600165537,\"deprecatedProviderCount\":141640204,\"supportedProviderCount\":1630309887,\"unsupportedProviderCount\":2048168714},\"jobsSummary\":{\"failedJobs\":1207917179,\"suspendedJobs\":1413734297,\"inProgressJobs\":391686670},\"protectedItemCount\":527373464,\"recoveryPlanCount\":1967682720,\"registeredServersCount\":1476273747,\"recoveryServicesProviderAuthType\":693329650}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesManager manager = RecoveryServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ReplicationUsage> response
            = manager.replicationUsages().list("e", "qsgzvahapj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(1715507551, response.iterator().next().monitoringSummary().unHealthyVmCount());
        Assertions.assertEquals(1436102139, response.iterator().next().monitoringSummary().unHealthyProviderCount());
        Assertions.assertEquals(1600165537, response.iterator().next().monitoringSummary().eventsCount());
        Assertions.assertEquals(141640204, response.iterator().next().monitoringSummary().deprecatedProviderCount());
        Assertions.assertEquals(1630309887, response.iterator().next().monitoringSummary().supportedProviderCount());
        Assertions.assertEquals(2048168714, response.iterator().next().monitoringSummary().unsupportedProviderCount());
        Assertions.assertEquals(1207917179, response.iterator().next().jobsSummary().failedJobs());
        Assertions.assertEquals(1413734297, response.iterator().next().jobsSummary().suspendedJobs());
        Assertions.assertEquals(391686670, response.iterator().next().jobsSummary().inProgressJobs());
        Assertions.assertEquals(527373464, response.iterator().next().protectedItemCount());
        Assertions.assertEquals(1967682720, response.iterator().next().recoveryPlanCount());
        Assertions.assertEquals(1476273747, response.iterator().next().registeredServersCount());
        Assertions.assertEquals(693329650, response.iterator().next().recoveryServicesProviderAuthType());
    }
}
