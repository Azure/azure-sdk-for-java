// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservices.RecoveryServicesManager;
import com.azure.resourcemanager.recoveryservices.models.ReplicationUsage;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReplicationUsagesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"monitoringSummary\":{\"unHealthyVmCount\":2143349080,\"unHealthyProviderCount\":109668081,\"eventsCount\":294676582,\"deprecatedProviderCount\":2066979028,\"supportedProviderCount\":1480663750,\"unsupportedProviderCount\":1663002651},\"jobsSummary\":{\"failedJobs\":1207488512,\"suspendedJobs\":402779247,\"inProgressJobs\":868372706},\"protectedItemCount\":1454263457,\"recoveryPlanCount\":373907539,\"registeredServersCount\":1344502344,\"recoveryServicesProviderAuthType\":41792863}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesManager manager = RecoveryServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ReplicationUsage> response
            = manager.replicationUsages().list("ajqgxy", "mocmbqfqvmk", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(2143349080, response.iterator().next().monitoringSummary().unHealthyVmCount());
        Assertions.assertEquals(109668081, response.iterator().next().monitoringSummary().unHealthyProviderCount());
        Assertions.assertEquals(294676582, response.iterator().next().monitoringSummary().eventsCount());
        Assertions.assertEquals(2066979028, response.iterator().next().monitoringSummary().deprecatedProviderCount());
        Assertions.assertEquals(1480663750, response.iterator().next().monitoringSummary().supportedProviderCount());
        Assertions.assertEquals(1663002651, response.iterator().next().monitoringSummary().unsupportedProviderCount());
        Assertions.assertEquals(1207488512, response.iterator().next().jobsSummary().failedJobs());
        Assertions.assertEquals(402779247, response.iterator().next().jobsSummary().suspendedJobs());
        Assertions.assertEquals(868372706, response.iterator().next().jobsSummary().inProgressJobs());
        Assertions.assertEquals(1454263457, response.iterator().next().protectedItemCount());
        Assertions.assertEquals(373907539, response.iterator().next().recoveryPlanCount());
        Assertions.assertEquals(1344502344, response.iterator().next().registeredServersCount());
        Assertions.assertEquals(41792863, response.iterator().next().recoveryServicesProviderAuthType());
    }
}
