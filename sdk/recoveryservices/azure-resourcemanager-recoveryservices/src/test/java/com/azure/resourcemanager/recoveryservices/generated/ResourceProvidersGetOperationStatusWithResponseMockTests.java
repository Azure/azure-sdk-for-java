// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservices.RecoveryServicesManager;
import com.azure.resourcemanager.recoveryservices.models.OperationResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersGetOperationStatusWithResponseMockTests {
    @Test
    public void testGetOperationStatusWithResponse() throws Exception {
        String responseStr
            = "{\"endTime\":\"2021-02-12T18:10:44Z\",\"id\":\"kfpagao\",\"name\":\"ulpqblylsyxkqjn\",\"status\":\"ervtiagxs\",\"startTime\":\"2021-09-29T10:51:16Z\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesManager manager = RecoveryServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        OperationResource response = manager.resourceProviders()
            .getOperationStatusWithResponse("ebwnujhe", "msbvdkcrodtjinf", "jlfltkacjvefkdlf",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(OffsetDateTime.parse("2021-02-12T18:10:44Z"), response.endTime());
        Assertions.assertEquals("kfpagao", response.id());
        Assertions.assertEquals("ulpqblylsyxkqjn", response.name());
        Assertions.assertEquals("ervtiagxs", response.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-29T10:51:16Z"), response.startTime());
    }
}
