// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservices.fluent.models.VaultUsageInner;
import com.azure.resourcemanager.recoveryservices.models.NameInfo;
import com.azure.resourcemanager.recoveryservices.models.UsagesUnit;
import com.azure.resourcemanager.recoveryservices.models.VaultUsageList;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VaultUsageListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VaultUsageList model = BinaryData.fromString(
            "{\"value\":[{\"unit\":\"Seconds\",\"quotaPeriod\":\"pz\",\"nextResetTime\":\"2021-05-21T05:23:51Z\",\"currentValue\":6087131419458323367,\"limit\":2277535144255584370,\"name\":{\"value\":\"bh\",\"localizedValue\":\"frlh\"}},{\"unit\":\"Bytes\",\"quotaPeriod\":\"kyv\",\"nextResetTime\":\"2021-08-31T04:23:50Z\",\"currentValue\":946204194354217219,\"limit\":2545482303013811667,\"name\":{\"value\":\"afkuwb\",\"localizedValue\":\"nwbmeh\"}}]}")
            .toObject(VaultUsageList.class);
        Assertions.assertEquals(UsagesUnit.SECONDS, model.value().get(0).unit());
        Assertions.assertEquals("pz", model.value().get(0).quotaPeriod());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-21T05:23:51Z"), model.value().get(0).nextResetTime());
        Assertions.assertEquals(6087131419458323367L, model.value().get(0).currentValue());
        Assertions.assertEquals(2277535144255584370L, model.value().get(0).limit());
        Assertions.assertEquals("bh", model.value().get(0).name().value());
        Assertions.assertEquals("frlh", model.value().get(0).name().localizedValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VaultUsageList model = new VaultUsageList().withValue(Arrays.asList(
            new VaultUsageInner().withUnit(UsagesUnit.SECONDS)
                .withQuotaPeriod("pz")
                .withNextResetTime(OffsetDateTime.parse("2021-05-21T05:23:51Z"))
                .withCurrentValue(6087131419458323367L)
                .withLimit(2277535144255584370L)
                .withName(new NameInfo().withValue("bh").withLocalizedValue("frlh")),
            new VaultUsageInner().withUnit(UsagesUnit.BYTES)
                .withQuotaPeriod("kyv")
                .withNextResetTime(OffsetDateTime.parse("2021-08-31T04:23:50Z"))
                .withCurrentValue(946204194354217219L)
                .withLimit(2545482303013811667L)
                .withName(new NameInfo().withValue("afkuwb").withLocalizedValue("nwbmeh"))));
        model = BinaryData.fromObject(model).toObject(VaultUsageList.class);
        Assertions.assertEquals(UsagesUnit.SECONDS, model.value().get(0).unit());
        Assertions.assertEquals("pz", model.value().get(0).quotaPeriod());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-21T05:23:51Z"), model.value().get(0).nextResetTime());
        Assertions.assertEquals(6087131419458323367L, model.value().get(0).currentValue());
        Assertions.assertEquals(2277535144255584370L, model.value().get(0).limit());
        Assertions.assertEquals("bh", model.value().get(0).name().value());
        Assertions.assertEquals("frlh", model.value().get(0).name().localizedValue());
    }
}
