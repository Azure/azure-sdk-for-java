// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservices.fluent.models.VaultUsageInner;
import com.azure.resourcemanager.recoveryservices.models.NameInfo;
import com.azure.resourcemanager.recoveryservices.models.UsagesUnit;
import com.azure.resourcemanager.recoveryservices.models.VaultUsageList;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VaultUsageListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VaultUsageList model = BinaryData.fromString(
            "{\"value\":[{\"unit\":\"Percent\",\"quotaPeriod\":\"hrxsbk\",\"nextResetTime\":\"2021-08-06T06:24:23Z\",\"currentValue\":1245497822937083948,\"limit\":1835147591912684740,\"name\":{\"value\":\"zka\",\"localizedValue\":\"uwbc\"}},{\"unit\":\"Percent\",\"quotaPeriod\":\"mehhseyvjusrtsl\",\"nextResetTime\":\"2021-07-14T16:11:44Z\",\"currentValue\":6698294689469432122,\"limit\":1190726733123875676,\"name\":{\"value\":\"mx\",\"localizedValue\":\"kv\"}},{\"unit\":\"Count\",\"quotaPeriod\":\"mqkrhahvljuahaqu\",\"nextResetTime\":\"2021-02-06T01:31:14Z\",\"currentValue\":4535829174726898901,\"limit\":9171481587703972041,\"name\":{\"value\":\"xqpvfadmw\",\"localizedValue\":\"crgvxpvgom\"}}]}")
            .toObject(VaultUsageList.class);
        Assertions.assertEquals(UsagesUnit.PERCENT, model.value().get(0).unit());
        Assertions.assertEquals("hrxsbk", model.value().get(0).quotaPeriod());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-06T06:24:23Z"), model.value().get(0).nextResetTime());
        Assertions.assertEquals(1245497822937083948L, model.value().get(0).currentValue());
        Assertions.assertEquals(1835147591912684740L, model.value().get(0).limit());
        Assertions.assertEquals("zka", model.value().get(0).name().value());
        Assertions.assertEquals("uwbc", model.value().get(0).name().localizedValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VaultUsageList model = new VaultUsageList().withValue(Arrays.asList(
            new VaultUsageInner().withUnit(UsagesUnit.PERCENT)
                .withQuotaPeriod("hrxsbk")
                .withNextResetTime(OffsetDateTime.parse("2021-08-06T06:24:23Z"))
                .withCurrentValue(1245497822937083948L)
                .withLimit(1835147591912684740L)
                .withName(new NameInfo().withValue("zka").withLocalizedValue("uwbc")),
            new VaultUsageInner().withUnit(UsagesUnit.PERCENT)
                .withQuotaPeriod("mehhseyvjusrtsl")
                .withNextResetTime(OffsetDateTime.parse("2021-07-14T16:11:44Z"))
                .withCurrentValue(6698294689469432122L)
                .withLimit(1190726733123875676L)
                .withName(new NameInfo().withValue("mx").withLocalizedValue("kv")),
            new VaultUsageInner().withUnit(UsagesUnit.COUNT)
                .withQuotaPeriod("mqkrhahvljuahaqu")
                .withNextResetTime(OffsetDateTime.parse("2021-02-06T01:31:14Z"))
                .withCurrentValue(4535829174726898901L)
                .withLimit(9171481587703972041L)
                .withName(new NameInfo().withValue("xqpvfadmw").withLocalizedValue("crgvxpvgom"))));
        model = BinaryData.fromObject(model).toObject(VaultUsageList.class);
        Assertions.assertEquals(UsagesUnit.PERCENT, model.value().get(0).unit());
        Assertions.assertEquals("hrxsbk", model.value().get(0).quotaPeriod());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-06T06:24:23Z"), model.value().get(0).nextResetTime());
        Assertions.assertEquals(1245497822937083948L, model.value().get(0).currentValue());
        Assertions.assertEquals(1835147591912684740L, model.value().get(0).limit());
        Assertions.assertEquals("zka", model.value().get(0).name().value());
        Assertions.assertEquals("uwbc", model.value().get(0).name().localizedValue());
    }
}
