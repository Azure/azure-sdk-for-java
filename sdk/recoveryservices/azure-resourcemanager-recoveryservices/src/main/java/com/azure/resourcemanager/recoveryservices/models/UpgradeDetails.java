// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Details for upgrading vault. */
@Immutable
public final class UpgradeDetails {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(UpgradeDetails.class);

    /*
     * ID of the vault upgrade operation.
     */
    @JsonProperty(value = "operationId", access = JsonProperty.Access.WRITE_ONLY)
    private String operationId;

    /*
     * UTC time at which the upgrade operation has started.
     */
    @JsonProperty(value = "startTimeUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime startTimeUtc;

    /*
     * UTC time at which the upgrade operation status was last updated.
     */
    @JsonProperty(value = "lastUpdatedTimeUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastUpdatedTimeUtc;

    /*
     * UTC time at which the upgrade operation has ended.
     */
    @JsonProperty(value = "endTimeUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime endTimeUtc;

    /*
     * Status of the vault upgrade operation.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private VaultUpgradeState status;

    /*
     * Message to the user containing information about the upgrade operation.
     */
    @JsonProperty(value = "message", access = JsonProperty.Access.WRITE_ONLY)
    private String message;

    /*
     * The way the vault upgrade was triggered.
     */
    @JsonProperty(value = "triggerType", access = JsonProperty.Access.WRITE_ONLY)
    private TriggerType triggerType;

    /*
     * Resource ID of the upgraded vault.
     */
    @JsonProperty(value = "upgradedResourceId", access = JsonProperty.Access.WRITE_ONLY)
    private String upgradedResourceId;

    /*
     * Resource ID of the vault before the upgrade.
     */
    @JsonProperty(value = "previousResourceId", access = JsonProperty.Access.WRITE_ONLY)
    private String previousResourceId;

    /**
     * Get the operationId property: ID of the vault upgrade operation.
     *
     * @return the operationId value.
     */
    public String operationId() {
        return this.operationId;
    }

    /**
     * Get the startTimeUtc property: UTC time at which the upgrade operation has started.
     *
     * @return the startTimeUtc value.
     */
    public OffsetDateTime startTimeUtc() {
        return this.startTimeUtc;
    }

    /**
     * Get the lastUpdatedTimeUtc property: UTC time at which the upgrade operation status was last updated.
     *
     * @return the lastUpdatedTimeUtc value.
     */
    public OffsetDateTime lastUpdatedTimeUtc() {
        return this.lastUpdatedTimeUtc;
    }

    /**
     * Get the endTimeUtc property: UTC time at which the upgrade operation has ended.
     *
     * @return the endTimeUtc value.
     */
    public OffsetDateTime endTimeUtc() {
        return this.endTimeUtc;
    }

    /**
     * Get the status property: Status of the vault upgrade operation.
     *
     * @return the status value.
     */
    public VaultUpgradeState status() {
        return this.status;
    }

    /**
     * Get the message property: Message to the user containing information about the upgrade operation.
     *
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Get the triggerType property: The way the vault upgrade was triggered.
     *
     * @return the triggerType value.
     */
    public TriggerType triggerType() {
        return this.triggerType;
    }

    /**
     * Get the upgradedResourceId property: Resource ID of the upgraded vault.
     *
     * @return the upgradedResourceId value.
     */
    public String upgradedResourceId() {
        return this.upgradedResourceId;
    }

    /**
     * Get the previousResourceId property: Resource ID of the vault before the upgrade.
     *
     * @return the previousResourceId value.
     */
    public String previousResourceId() {
        return this.previousResourceId;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
