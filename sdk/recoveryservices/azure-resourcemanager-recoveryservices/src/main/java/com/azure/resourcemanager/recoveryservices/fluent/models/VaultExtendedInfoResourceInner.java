// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Vault extended information. */
@Fluent
public final class VaultExtendedInfoResourceInner extends ProxyResource {
    /*
     * Vault extended information.
     */
    @JsonProperty(value = "properties")
    private VaultExtendedInfo innerProperties;

    /*
     * Optional ETag.
     */
    @JsonProperty(value = "etag")
    private String etag;

    /** Creates an instance of VaultExtendedInfoResourceInner class. */
    public VaultExtendedInfoResourceInner() {
    }

    /**
     * Get the innerProperties property: Vault extended information.
     *
     * @return the innerProperties value.
     */
    private VaultExtendedInfo innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the etag property: Optional ETag.
     *
     * @return the etag value.
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Set the etag property: Optional ETag.
     *
     * @param etag the etag value to set.
     * @return the VaultExtendedInfoResourceInner object itself.
     */
    public VaultExtendedInfoResourceInner withEtag(String etag) {
        this.etag = etag;
        return this;
    }

    /**
     * Get the integrityKey property: Integrity key.
     *
     * @return the integrityKey value.
     */
    public String integrityKey() {
        return this.innerProperties() == null ? null : this.innerProperties().integrityKey();
    }

    /**
     * Set the integrityKey property: Integrity key.
     *
     * @param integrityKey the integrityKey value to set.
     * @return the VaultExtendedInfoResourceInner object itself.
     */
    public VaultExtendedInfoResourceInner withIntegrityKey(String integrityKey) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VaultExtendedInfo();
        }
        this.innerProperties().withIntegrityKey(integrityKey);
        return this;
    }

    /**
     * Get the encryptionKey property: Encryption key.
     *
     * @return the encryptionKey value.
     */
    public String encryptionKey() {
        return this.innerProperties() == null ? null : this.innerProperties().encryptionKey();
    }

    /**
     * Set the encryptionKey property: Encryption key.
     *
     * @param encryptionKey the encryptionKey value to set.
     * @return the VaultExtendedInfoResourceInner object itself.
     */
    public VaultExtendedInfoResourceInner withEncryptionKey(String encryptionKey) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VaultExtendedInfo();
        }
        this.innerProperties().withEncryptionKey(encryptionKey);
        return this;
    }

    /**
     * Get the encryptionKeyThumbprint property: Encryption key thumbprint.
     *
     * @return the encryptionKeyThumbprint value.
     */
    public String encryptionKeyThumbprint() {
        return this.innerProperties() == null ? null : this.innerProperties().encryptionKeyThumbprint();
    }

    /**
     * Set the encryptionKeyThumbprint property: Encryption key thumbprint.
     *
     * @param encryptionKeyThumbprint the encryptionKeyThumbprint value to set.
     * @return the VaultExtendedInfoResourceInner object itself.
     */
    public VaultExtendedInfoResourceInner withEncryptionKeyThumbprint(String encryptionKeyThumbprint) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VaultExtendedInfo();
        }
        this.innerProperties().withEncryptionKeyThumbprint(encryptionKeyThumbprint);
        return this;
    }

    /**
     * Get the algorithm property: Algorithm for Vault ExtendedInfo.
     *
     * @return the algorithm value.
     */
    public String algorithm() {
        return this.innerProperties() == null ? null : this.innerProperties().algorithm();
    }

    /**
     * Set the algorithm property: Algorithm for Vault ExtendedInfo.
     *
     * @param algorithm the algorithm value to set.
     * @return the VaultExtendedInfoResourceInner object itself.
     */
    public VaultExtendedInfoResourceInner withAlgorithm(String algorithm) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VaultExtendedInfo();
        }
        this.innerProperties().withAlgorithm(algorithm);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
