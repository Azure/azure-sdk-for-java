// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservices.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.recoveryservices.fluent.DeletedVaultsClient;
import com.azure.resourcemanager.recoveryservices.fluent.models.DeletedVaultInner;
import com.azure.resourcemanager.recoveryservices.fluent.models.OperationResourceInner;
import com.azure.resourcemanager.recoveryservices.models.DeletedVault;
import com.azure.resourcemanager.recoveryservices.models.DeletedVaultUndeleteInput;
import com.azure.resourcemanager.recoveryservices.models.DeletedVaults;
import com.azure.resourcemanager.recoveryservices.models.OperationResource;

public final class DeletedVaultsImpl implements DeletedVaults {
    private static final ClientLogger LOGGER = new ClientLogger(DeletedVaultsImpl.class);

    private final DeletedVaultsClient innerClient;

    private final com.azure.resourcemanager.recoveryservices.RecoveryServicesManager serviceManager;

    public DeletedVaultsImpl(DeletedVaultsClient innerClient,
        com.azure.resourcemanager.recoveryservices.RecoveryServicesManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<DeletedVault> listBySubscriptionId(String location) {
        PagedIterable<DeletedVaultInner> inner = this.serviceClient().listBySubscriptionId(location);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new DeletedVaultImpl(inner1, this.manager()));
    }

    public PagedIterable<DeletedVault> listBySubscriptionId(String location, Context context) {
        PagedIterable<DeletedVaultInner> inner = this.serviceClient().listBySubscriptionId(location, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new DeletedVaultImpl(inner1, this.manager()));
    }

    public Response<DeletedVault> getWithResponse(String location, String deletedVaultName, Context context) {
        Response<DeletedVaultInner> inner = this.serviceClient().getWithResponse(location, deletedVaultName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new DeletedVaultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DeletedVault get(String location, String deletedVaultName) {
        DeletedVaultInner inner = this.serviceClient().get(location, deletedVaultName);
        if (inner != null) {
            return new DeletedVaultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public DeletedVault undelete(String location, String deletedVaultName, DeletedVaultUndeleteInput body) {
        DeletedVaultInner inner = this.serviceClient().undelete(location, deletedVaultName, body);
        if (inner != null) {
            return new DeletedVaultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public DeletedVault undelete(String location, String deletedVaultName, DeletedVaultUndeleteInput body,
        Context context) {
        DeletedVaultInner inner = this.serviceClient().undelete(location, deletedVaultName, body, context);
        if (inner != null) {
            return new DeletedVaultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<OperationResource> getOperationStatusWithResponse(String location, String deletedVaultName,
        String operationId, Context context) {
        Response<OperationResourceInner> inner
            = this.serviceClient().getOperationStatusWithResponse(location, deletedVaultName, operationId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new OperationResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public OperationResource getOperationStatus(String location, String deletedVaultName, String operationId) {
        OperationResourceInner inner = this.serviceClient().getOperationStatus(location, deletedVaultName, operationId);
        if (inner != null) {
            return new OperationResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private DeletedVaultsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.recoveryservices.RecoveryServicesManager manager() {
        return this.serviceManager;
    }
}
