// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Source scan configuration of vault.
 */
@Fluent
public final class SourceScanConfiguration implements JsonSerializable<SourceScanConfiguration> {
    /*
     * The state property.
     */
    private State state;

    /*
     * Identity details to be used for an operation
     */
    private AssociatedIdentity sourceScanIdentity;

    /**
     * Creates an instance of SourceScanConfiguration class.
     */
    public SourceScanConfiguration() {
    }

    /**
     * Get the state property: The state property.
     * 
     * @return the state value.
     */
    public State state() {
        return this.state;
    }

    /**
     * Set the state property: The state property.
     * 
     * @param state the state value to set.
     * @return the SourceScanConfiguration object itself.
     */
    public SourceScanConfiguration withState(State state) {
        this.state = state;
        return this;
    }

    /**
     * Get the sourceScanIdentity property: Identity details to be used for an operation.
     * 
     * @return the sourceScanIdentity value.
     */
    public AssociatedIdentity sourceScanIdentity() {
        return this.sourceScanIdentity;
    }

    /**
     * Set the sourceScanIdentity property: Identity details to be used for an operation.
     * 
     * @param sourceScanIdentity the sourceScanIdentity value to set.
     * @return the SourceScanConfiguration object itself.
     */
    public SourceScanConfiguration withSourceScanIdentity(AssociatedIdentity sourceScanIdentity) {
        this.sourceScanIdentity = sourceScanIdentity;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("state", this.state == null ? null : this.state.toString());
        jsonWriter.writeJsonField("sourceScanIdentity", this.sourceScanIdentity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SourceScanConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SourceScanConfiguration if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SourceScanConfiguration.
     */
    public static SourceScanConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SourceScanConfiguration deserializedSourceScanConfiguration = new SourceScanConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("state".equals(fieldName)) {
                    deserializedSourceScanConfiguration.state = State.fromString(reader.getString());
                } else if ("sourceScanIdentity".equals(fieldName)) {
                    deserializedSourceScanConfiguration.sourceScanIdentity = AssociatedIdentity.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSourceScanConfiguration;
        });
    }
}
