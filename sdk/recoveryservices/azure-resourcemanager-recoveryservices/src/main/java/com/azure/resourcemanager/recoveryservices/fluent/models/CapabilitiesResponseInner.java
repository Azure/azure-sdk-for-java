// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservices.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.recoveryservices.models.CapabilitiesResponseProperties;
import com.azure.resourcemanager.recoveryservices.models.ResourceCapabilitiesBase;
import java.io.IOException;

/**
 * Capabilities response for Microsoft.RecoveryServices.
 */
@Immutable
public final class CapabilitiesResponseInner extends ResourceCapabilitiesBase {
    /*
     * Capabilities properties in response
     */
    private CapabilitiesResponseProperties properties;

    /**
     * Creates an instance of CapabilitiesResponseInner class.
     */
    private CapabilitiesResponseInner() {
    }

    /**
     * Get the properties property: Capabilities properties in response.
     * 
     * @return the properties value.
     */
    public CapabilitiesResponseProperties properties() {
        return this.properties;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", type());
        jsonWriter.writeJsonField("properties", this.properties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CapabilitiesResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CapabilitiesResponseInner if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CapabilitiesResponseInner.
     */
    public static CapabilitiesResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CapabilitiesResponseInner deserializedCapabilitiesResponseInner = new CapabilitiesResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedCapabilitiesResponseInner.withType(reader.getString());
                } else if ("properties".equals(fieldName)) {
                    deserializedCapabilitiesResponseInner.properties = CapabilitiesResponseProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCapabilitiesResponseInner;
        });
    }
}
