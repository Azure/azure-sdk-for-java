// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservices.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.recoveryservices.models.ResourceCertificateDetails;
import java.io.IOException;

/**
 * Certificate corresponding to a vault that can be used by clients to register themselves with the vault.
 */
@Immutable
public final class VaultCertificateResponseInner implements JsonSerializable<VaultCertificateResponseInner> {
    /*
     * Resource name associated with the resource.
     */
    private String name;

    /*
     * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     */
    private String type;

    /*
     * Resource Id represents the complete path to the resource.
     */
    private String id;

    /*
     * Certificate details representing the Vault credentials.
     */
    private ResourceCertificateDetails properties;

    /**
     * Creates an instance of VaultCertificateResponseInner class.
     */
    private VaultCertificateResponseInner() {
    }

    /**
     * Get the name property: Resource name associated with the resource.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the type property: Resource type represents the complete path of the form
     * Namespace/ResourceType/ResourceType/...
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the id property: Resource Id represents the complete path to the resource.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the properties property: Certificate details representing the Vault credentials.
     * 
     * @return the properties value.
     */
    public ResourceCertificateDetails properties() {
        return this.properties;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.properties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VaultCertificateResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VaultCertificateResponseInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VaultCertificateResponseInner.
     */
    public static VaultCertificateResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VaultCertificateResponseInner deserializedVaultCertificateResponseInner
                = new VaultCertificateResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedVaultCertificateResponseInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedVaultCertificateResponseInner.type = reader.getString();
                } else if ("id".equals(fieldName)) {
                    deserializedVaultCertificateResponseInner.id = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedVaultCertificateResponseInner.properties = ResourceCertificateDetails.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVaultCertificateResponseInner;
        });
    }
}
