// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservices.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of DeletedVaults.
 */
public interface DeletedVaults {
    /**
     * List deleted vaults in a subscription.
     * 
     * @param location The name of the Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for a list of DeletedVaults as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DeletedVault> listBySubscriptionId(String location);

    /**
     * List deleted vaults in a subscription.
     * 
     * @param location The name of the Azure region.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for a list of DeletedVaults as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DeletedVault> listBySubscriptionId(String location, Context context);

    /**
     * Get a specific deleted vault.
     * 
     * @param location The location name.
     * @param deletedVaultName The name of the DeletedVault.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a specific deleted vault along with {@link Response}.
     */
    Response<DeletedVault> getWithResponse(String location, String deletedVaultName, Context context);

    /**
     * Get a specific deleted vault.
     * 
     * @param location The location name.
     * @param deletedVaultName The name of the DeletedVault.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a specific deleted vault.
     */
    DeletedVault get(String location, String deletedVaultName);

    /**
     * Start undelete of a deleted vault.
     * 
     * @param location The location name.
     * @param deletedVaultName The name of the DeletedVault.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    DeletedVault undelete(String location, String deletedVaultName, DeletedVaultUndeleteInput body);

    /**
     * Start undelete of a deleted vault.
     * 
     * @param location The location name.
     * @param deletedVaultName The name of the DeletedVault.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    DeletedVault undelete(String location, String deletedVaultName, DeletedVaultUndeleteInput body, Context context);

    /**
     * Get the operation status of a deleted vault.
     * 
     * @param location The location name.
     * @param deletedVaultName The name of deleted vault.
     * @param operationId The operationId parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the operation status of a deleted vault along with {@link Response}.
     */
    Response<OperationResource> getOperationStatusWithResponse(String location, String deletedVaultName,
        String operationId, Context context);

    /**
     * Get the operation status of a deleted vault.
     * 
     * @param location The location name.
     * @param deletedVaultName The name of deleted vault.
     * @param operationId The operationId parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the operation status of a deleted vault.
     */
    OperationResource getOperationStatus(String location, String deletedVaultName, String operationId);
}
