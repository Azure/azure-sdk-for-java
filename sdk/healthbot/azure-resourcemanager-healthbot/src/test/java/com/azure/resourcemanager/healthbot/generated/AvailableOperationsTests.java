// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthbot.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthbot.fluent.models.OperationDetailInner;
import com.azure.resourcemanager.healthbot.models.AvailableOperations;
import com.azure.resourcemanager.healthbot.models.OperationDisplay;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AvailableOperationsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvailableOperations model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"xinpmqnjaq\",\"isDataAction\":false,\"display\":{\"provider\":\"prozvcputegjvwmf\",\"resource\":\"t\",\"operation\":\"mdvpjhulsu\",\"description\":\"mkjozkrwf\"},\"origin\":\"iodjp\",\"properties\":\"dataw\"},{\"name\":\"dpvwryoqpsoaccta\",\"isDataAction\":false,\"display\":{\"provider\":\"lahbcryff\",\"resource\":\"dosyg\",\"operation\":\"paojakhmsbzjh\",\"description\":\"zevdphlx\"},\"origin\":\"lthqtrgqjbp\",\"properties\":\"datafsinzgvfcjrwzoxx\"},{\"name\":\"felluwfzitonpe\",\"isDataAction\":true,\"display\":{\"provider\":\"jlxofpdvhpfxxyp\",\"resource\":\"i\",\"operation\":\"ayhuy\",\"description\":\"kpode\"},\"origin\":\"oginuvamiheognar\",\"properties\":\"dataxth\"}],\"nextLink\":\"tusivyevcciqihn\"}")
            .toObject(AvailableOperations.class);
        Assertions.assertEquals("xinpmqnjaq", model.value().get(0).name());
        Assertions.assertFalse(model.value().get(0).isDataAction());
        Assertions.assertEquals("prozvcputegjvwmf", model.value().get(0).display().provider());
        Assertions.assertEquals("t", model.value().get(0).display().resource());
        Assertions.assertEquals("mdvpjhulsu", model.value().get(0).display().operation());
        Assertions.assertEquals("mkjozkrwf", model.value().get(0).display().description());
        Assertions.assertEquals("iodjp", model.value().get(0).origin());
        Assertions.assertEquals("tusivyevcciqihn", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvailableOperations model = new AvailableOperations().withValue(Arrays.asList(
            new OperationDetailInner().withName("xinpmqnjaq")
                .withIsDataAction(false)
                .withDisplay(new OperationDisplay().withProvider("prozvcputegjvwmf")
                    .withResource("t")
                    .withOperation("mdvpjhulsu")
                    .withDescription("mkjozkrwf"))
                .withOrigin("iodjp")
                .withProperties("dataw"),
            new OperationDetailInner().withName("dpvwryoqpsoaccta")
                .withIsDataAction(false)
                .withDisplay(new OperationDisplay().withProvider("lahbcryff")
                    .withResource("dosyg")
                    .withOperation("paojakhmsbzjh")
                    .withDescription("zevdphlx"))
                .withOrigin("lthqtrgqjbp")
                .withProperties("datafsinzgvfcjrwzoxx"),
            new OperationDetailInner().withName("felluwfzitonpe")
                .withIsDataAction(true)
                .withDisplay(new OperationDisplay().withProvider("jlxofpdvhpfxxyp")
                    .withResource("i")
                    .withOperation("ayhuy")
                    .withDescription("kpode"))
                .withOrigin("oginuvamiheognar")
                .withProperties("dataxth")))
            .withNextLink("tusivyevcciqihn");
        model = BinaryData.fromObject(model).toObject(AvailableOperations.class);
        Assertions.assertEquals("xinpmqnjaq", model.value().get(0).name());
        Assertions.assertFalse(model.value().get(0).isDataAction());
        Assertions.assertEquals("prozvcputegjvwmf", model.value().get(0).display().provider());
        Assertions.assertEquals("t", model.value().get(0).display().resource());
        Assertions.assertEquals("mdvpjhulsu", model.value().get(0).display().operation());
        Assertions.assertEquals("mkjozkrwf", model.value().get(0).display().description());
        Assertions.assertEquals("iodjp", model.value().get(0).origin());
        Assertions.assertEquals("tusivyevcciqihn", model.nextLink());
    }
}
