// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthbot.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthbot.fluent.models.OperationDetailInner;
import com.azure.resourcemanager.healthbot.models.AvailableOperations;
import com.azure.resourcemanager.healthbot.models.OperationDisplay;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AvailableOperationsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvailableOperations model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"dfdosygexp\",\"isDataAction\":true,\"display\":{\"provider\":\"hmsbzjhcrzevdp\",\"resource\":\"xaolth\",\"operation\":\"rgqjbpfzfsinzg\",\"description\":\"cjrwzoxxjtfellu\"},\"origin\":\"zitonpeqfpjkjl\",\"properties\":\"datafpdvhpfxxypi\"},{\"name\":\"nmayhuybb\",\"isDataAction\":true,\"display\":{\"provider\":\"po\",\"resource\":\"inuvamiheogn\",\"operation\":\"xzxtheo\",\"description\":\"si\"},\"origin\":\"evcciqihnhun\",\"properties\":\"datawjzrnfygxgisp\"},{\"name\":\"vtz\",\"isDataAction\":false,\"display\":{\"provider\":\"bljofxqeof\",\"resource\":\"e\",\"operation\":\"hqjbasvmsmj\",\"description\":\"lngsntnbybkzgcwr\"},\"origin\":\"lxxwrljdouskc\",\"properties\":\"datakocrcjdkwtnhx\"},{\"name\":\"jbiksqrglssai\",\"isDataAction\":false,\"display\":{\"provider\":\"nzl\",\"resource\":\"fmppe\",\"operation\":\"vmgxsab\",\"description\":\"qduujitcjczdz\"},\"origin\":\"ndhkrw\",\"properties\":\"dataappd\"}],\"nextLink\":\"dkvwrwjfe\"}")
            .toObject(AvailableOperations.class);
        Assertions.assertEquals("dfdosygexp", model.value().get(0).name());
        Assertions.assertEquals(true, model.value().get(0).isDataAction());
        Assertions.assertEquals("hmsbzjhcrzevdp", model.value().get(0).display().provider());
        Assertions.assertEquals("xaolth", model.value().get(0).display().resource());
        Assertions.assertEquals("rgqjbpfzfsinzg", model.value().get(0).display().operation());
        Assertions.assertEquals("cjrwzoxxjtfellu", model.value().get(0).display().description());
        Assertions.assertEquals("zitonpeqfpjkjl", model.value().get(0).origin());
        Assertions.assertEquals("dkvwrwjfe", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvailableOperations model = new AvailableOperations().withValue(Arrays.asList(
            new OperationDetailInner().withName("dfdosygexp")
                .withIsDataAction(true)
                .withDisplay(new OperationDisplay().withProvider("hmsbzjhcrzevdp")
                    .withResource("xaolth")
                    .withOperation("rgqjbpfzfsinzg")
                    .withDescription("cjrwzoxxjtfellu"))
                .withOrigin("zitonpeqfpjkjl")
                .withProperties("datafpdvhpfxxypi"),
            new OperationDetailInner().withName("nmayhuybb")
                .withIsDataAction(true)
                .withDisplay(new OperationDisplay().withProvider("po")
                    .withResource("inuvamiheogn")
                    .withOperation("xzxtheo")
                    .withDescription("si"))
                .withOrigin("evcciqihnhun")
                .withProperties("datawjzrnfygxgisp"),
            new OperationDetailInner().withName("vtz")
                .withIsDataAction(false)
                .withDisplay(new OperationDisplay().withProvider("bljofxqeof")
                    .withResource("e")
                    .withOperation("hqjbasvmsmj")
                    .withDescription("lngsntnbybkzgcwr"))
                .withOrigin("lxxwrljdouskc")
                .withProperties("datakocrcjdkwtnhx"),
            new OperationDetailInner().withName("jbiksqrglssai")
                .withIsDataAction(false)
                .withDisplay(new OperationDisplay().withProvider("nzl")
                    .withResource("fmppe")
                    .withOperation("vmgxsab")
                    .withDescription("qduujitcjczdz"))
                .withOrigin("ndhkrw")
                .withProperties("dataappd")))
            .withNextLink("dkvwrwjfe");
        model = BinaryData.fromObject(model).toObject(AvailableOperations.class);
        Assertions.assertEquals("dfdosygexp", model.value().get(0).name());
        Assertions.assertEquals(true, model.value().get(0).isDataAction());
        Assertions.assertEquals("hmsbzjhcrzevdp", model.value().get(0).display().provider());
        Assertions.assertEquals("xaolth", model.value().get(0).display().resource());
        Assertions.assertEquals("rgqjbpfzfsinzg", model.value().get(0).display().operation());
        Assertions.assertEquals("cjrwzoxxjtfellu", model.value().get(0).display().description());
        Assertions.assertEquals("zitonpeqfpjkjl", model.value().get(0).origin());
        Assertions.assertEquals("dkvwrwjfe", model.nextLink());
    }
}
