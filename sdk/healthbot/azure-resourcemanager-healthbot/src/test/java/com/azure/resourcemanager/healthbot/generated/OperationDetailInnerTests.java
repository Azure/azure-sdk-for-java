// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthbot.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthbot.fluent.models.OperationDetailInner;
import com.azure.resourcemanager.healthbot.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationDetailInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationDetailInner model = BinaryData.fromString(
            "{\"name\":\"nhutjeltmrldhugj\",\"isDataAction\":true,\"display\":{\"provider\":\"qxhocdgeablgphut\",\"resource\":\"ndv\",\"operation\":\"ozwyiftyhxhuro\",\"description\":\"tyxolniwpwc\"},\"origin\":\"jfkgiawxk\",\"properties\":\"dataypl\"}")
            .toObject(OperationDetailInner.class);
        Assertions.assertEquals("nhutjeltmrldhugj", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("qxhocdgeablgphut", model.display().provider());
        Assertions.assertEquals("ndv", model.display().resource());
        Assertions.assertEquals("ozwyiftyhxhuro", model.display().operation());
        Assertions.assertEquals("tyxolniwpwc", model.display().description());
        Assertions.assertEquals("jfkgiawxk", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationDetailInner model = new OperationDetailInner().withName("nhutjeltmrldhugj")
            .withIsDataAction(true)
            .withDisplay(new OperationDisplay().withProvider("qxhocdgeablgphut")
                .withResource("ndv")
                .withOperation("ozwyiftyhxhuro")
                .withDescription("tyxolniwpwc"))
            .withOrigin("jfkgiawxk")
            .withProperties("dataypl");
        model = BinaryData.fromObject(model).toObject(OperationDetailInner.class);
        Assertions.assertEquals("nhutjeltmrldhugj", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("qxhocdgeablgphut", model.display().provider());
        Assertions.assertEquals("ndv", model.display().resource());
        Assertions.assertEquals("ozwyiftyhxhuro", model.display().operation());
        Assertions.assertEquals("tyxolniwpwc", model.display().description());
        Assertions.assertEquals("jfkgiawxk", model.origin());
    }
}
