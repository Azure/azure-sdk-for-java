// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthbot.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthbot.fluent.models.OperationDetailInner;
import com.azure.resourcemanager.healthbot.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationDetailInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationDetailInner model = BinaryData.fromString(
            "{\"name\":\"ngbwjz\",\"isDataAction\":true,\"display\":{\"provider\":\"xgispemvtzfkufu\",\"resource\":\"jofxqe\",\"operation\":\"jaeq\",\"description\":\"qjbasvms\"},\"origin\":\"qulngsntnbybkzgc\",\"properties\":\"datawclxxwrl\"}")
            .toObject(OperationDetailInner.class);
        Assertions.assertEquals("ngbwjz", model.name());
        Assertions.assertTrue(model.isDataAction());
        Assertions.assertEquals("xgispemvtzfkufu", model.display().provider());
        Assertions.assertEquals("jofxqe", model.display().resource());
        Assertions.assertEquals("jaeq", model.display().operation());
        Assertions.assertEquals("qjbasvms", model.display().description());
        Assertions.assertEquals("qulngsntnbybkzgc", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationDetailInner model = new OperationDetailInner().withName("ngbwjz")
            .withIsDataAction(true)
            .withDisplay(new OperationDisplay().withProvider("xgispemvtzfkufu")
                .withResource("jofxqe")
                .withOperation("jaeq")
                .withDescription("qjbasvms"))
            .withOrigin("qulngsntnbybkzgc")
            .withProperties("datawclxxwrl");
        model = BinaryData.fromObject(model).toObject(OperationDetailInner.class);
        Assertions.assertEquals("ngbwjz", model.name());
        Assertions.assertTrue(model.isDataAction());
        Assertions.assertEquals("xgispemvtzfkufu", model.display().provider());
        Assertions.assertEquals("jofxqe", model.display().resource());
        Assertions.assertEquals("jaeq", model.display().operation());
        Assertions.assertEquals("qjbasvms", model.display().description());
        Assertions.assertEquals("qulngsntnbybkzgc", model.origin());
    }
}
