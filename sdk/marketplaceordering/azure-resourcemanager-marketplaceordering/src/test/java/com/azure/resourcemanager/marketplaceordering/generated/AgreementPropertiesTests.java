// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.marketplaceordering.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.marketplaceordering.fluent.models.AgreementProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class AgreementPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AgreementProperties model = BinaryData.fromString(
            "{\"publisher\":\"gnufoooj\",\"product\":\"ifsqesaagdfmg\",\"plan\":\"lhjxr\",\"licenseTextLink\":\"kwm\",\"privacyPolicyLink\":\"ktsizntocipaou\",\"marketplaceTermsLink\":\"psqucmpoyf\",\"retrieveDatetime\":\"2021-02-06T21:08:58Z\",\"signature\":\"gknygjofjddeqs\",\"accepted\":true}")
            .toObject(AgreementProperties.class);
        Assertions.assertEquals("gnufoooj", model.publisher());
        Assertions.assertEquals("ifsqesaagdfmg", model.product());
        Assertions.assertEquals("lhjxr", model.plan());
        Assertions.assertEquals("kwm", model.licenseTextLink());
        Assertions.assertEquals("ktsizntocipaou", model.privacyPolicyLink());
        Assertions.assertEquals("psqucmpoyf", model.marketplaceTermsLink());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-06T21:08:58Z"), model.retrieveDatetime());
        Assertions.assertEquals("gknygjofjddeqs", model.signature());
        Assertions.assertEquals(true, model.accepted());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AgreementProperties model = new AgreementProperties().withPublisher("gnufoooj")
            .withProduct("ifsqesaagdfmg")
            .withPlan("lhjxr")
            .withLicenseTextLink("kwm")
            .withPrivacyPolicyLink("ktsizntocipaou")
            .withMarketplaceTermsLink("psqucmpoyf")
            .withRetrieveDatetime(OffsetDateTime.parse("2021-02-06T21:08:58Z"))
            .withSignature("gknygjofjddeqs")
            .withAccepted(true);
        model = BinaryData.fromObject(model).toObject(AgreementProperties.class);
        Assertions.assertEquals("gnufoooj", model.publisher());
        Assertions.assertEquals("ifsqesaagdfmg", model.product());
        Assertions.assertEquals("lhjxr", model.plan());
        Assertions.assertEquals("kwm", model.licenseTextLink());
        Assertions.assertEquals("ktsizntocipaou", model.privacyPolicyLink());
        Assertions.assertEquals("psqucmpoyf", model.marketplaceTermsLink());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-06T21:08:58Z"), model.retrieveDatetime());
        Assertions.assertEquals("gknygjofjddeqs", model.signature());
        Assertions.assertEquals(true, model.accepted());
    }
}
