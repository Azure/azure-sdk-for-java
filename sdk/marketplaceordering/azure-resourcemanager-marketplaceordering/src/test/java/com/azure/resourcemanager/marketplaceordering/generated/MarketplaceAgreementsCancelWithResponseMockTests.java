// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.marketplaceordering.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.marketplaceordering.MarketplaceOrderingManager;
import com.azure.resourcemanager.marketplaceordering.models.OldAgreementTerms;
import com.azure.resourcemanager.marketplaceordering.models.State;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MarketplaceAgreementsCancelWithResponseMockTests {
    @Test
    public void testCancelWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"id\":\"mijcmmxdcufufs\",\"publisher\":\"ymzidn\",\"offer\":\"zcxtbzsgfyccsn\",\"signDate\":\"2021-11-18T18:16Z\",\"cancelDate\":\"2021-09-22T20:17:09Z\",\"state\":\"Canceled\"},\"id\":\"eiachboosflnr\",\"name\":\"sfqpteehz\",\"type\":\"vypyqrimzinpv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MarketplaceOrderingManager manager = MarketplaceOrderingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        OldAgreementTerms response = manager.marketplaceAgreements()
            .cancelWithResponse("zwdzuh", "ymwisdkft", "wxmnteiwao", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("mijcmmxdcufufs", response.idPropertiesId());
        Assertions.assertEquals("ymzidn", response.publisher());
        Assertions.assertEquals("zcxtbzsgfyccsn", response.offer());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-18T18:16Z"), response.signDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-22T20:17:09Z"), response.cancelDate());
        Assertions.assertEquals(State.CANCELED, response.state());
    }
}
