// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.marketplaceordering.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.marketplaceordering.MarketplaceOrderingManager;
import com.azure.resourcemanager.marketplaceordering.models.AgreementTerms;
import com.azure.resourcemanager.marketplaceordering.models.OfferType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MarketplaceAgreementsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"publisher\":\"nh\",\"product\":\"njbiksqrglssain\",\"plan\":\"jwnzlljfmp\",\"licenseTextLink\":\"ebvmgxsabkyqd\",\"privacyPolicyLink\":\"jitcjczdzevn\",\"marketplaceTermsLink\":\"krwpdap\",\"retrieveDatetime\":\"2021-05-23T21:44:39Z\",\"signature\":\"dkvwrwjfe\",\"accepted\":true},\"id\":\"utjeltmrldhugj\",\"name\":\"zdatqxhocdg\",\"type\":\"ablgphuticndvk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MarketplaceOrderingManager manager = MarketplaceOrderingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AgreementTerms response = manager.marketplaceAgreements()
            .getWithResponse(OfferType.VIRTUALMACHINE, "lngsntnbybkzgcwr", "clxxwrljdo", "skcqvkocrcjd",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("nh", response.publisher());
        Assertions.assertEquals("njbiksqrglssain", response.product());
        Assertions.assertEquals("jwnzlljfmp", response.plan());
        Assertions.assertEquals("ebvmgxsabkyqd", response.licenseTextLink());
        Assertions.assertEquals("jitcjczdzevn", response.privacyPolicyLink());
        Assertions.assertEquals("krwpdap", response.marketplaceTermsLink());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-23T21:44:39Z"), response.retrieveDatetime());
        Assertions.assertEquals("dkvwrwjfe", response.signature());
        Assertions.assertEquals(true, response.accepted());
    }
}
