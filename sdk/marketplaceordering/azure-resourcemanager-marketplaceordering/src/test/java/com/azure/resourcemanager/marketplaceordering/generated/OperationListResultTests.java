// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.marketplaceordering.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.marketplaceordering.fluent.models.OperationInner;
import com.azure.resourcemanager.marketplaceordering.models.OperationDisplay;
import com.azure.resourcemanager.marketplaceordering.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"wnw\",\"display\":{\"provider\":\"tjzyflus\",\"resource\":\"hmofc\",\"operation\":\"smy\",\"description\":\"kdtmlxhekuk\"}},{\"name\":\"txukcdmp\",\"display\":{\"provider\":\"ryuanzwuxzdxtay\",\"resource\":\"hmwhfpmrqo\",\"operation\":\"tu\",\"description\":\"nryrtihf\"}}],\"nextLink\":\"ijbpzvgnwzsymgl\"}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("wnw", model.value().get(0).name());
        Assertions.assertEquals("tjzyflus", model.value().get(0).display().provider());
        Assertions.assertEquals("hmofc", model.value().get(0).display().resource());
        Assertions.assertEquals("smy", model.value().get(0).display().operation());
        Assertions.assertEquals("kdtmlxhekuk", model.value().get(0).display().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model = new OperationListResult().withValue(Arrays.asList(
            new OperationInner().withName("wnw")
                .withDisplay(new OperationDisplay().withProvider("tjzyflus")
                    .withResource("hmofc")
                    .withOperation("smy")
                    .withDescription("kdtmlxhekuk")),
            new OperationInner().withName("txukcdmp")
                .withDisplay(new OperationDisplay().withProvider("ryuanzwuxzdxtay")
                    .withResource("hmwhfpmrqo")
                    .withOperation("tu")
                    .withDescription("nryrtihf"))));
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("wnw", model.value().get(0).name());
        Assertions.assertEquals("tjzyflus", model.value().get(0).display().provider());
        Assertions.assertEquals("hmofc", model.value().get(0).display().resource());
        Assertions.assertEquals("smy", model.value().get(0).display().operation());
        Assertions.assertEquals("kdtmlxhekuk", model.value().get(0).display().description());
    }
}
