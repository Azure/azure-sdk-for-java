// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.marketplaceordering.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.marketplaceordering.MarketplaceOrderingManager;
import com.azure.resourcemanager.marketplaceordering.models.OldAgreementTermsList;
import com.azure.resourcemanager.marketplaceordering.models.State;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MarketplaceAgreementsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"id\":\"tqajzyulpkudjkrl\",\"publisher\":\"bzhfepgzgqexz\",\"offer\":\"c\",\"signDate\":\"2021-05-23T12:30:08Z\",\"cancelDate\":\"2021-11-18T07:05:01Z\",\"state\":\"Canceled\"},\"id\":\"rhhbcs\",\"name\":\"l\",\"type\":\"mmajtjaodx\"},{\"properties\":{\"id\":\"bdxkqpxokaj\",\"publisher\":\"npime\",\"offer\":\"stxgc\",\"signDate\":\"2021-06-26T04:01:22Z\",\"cancelDate\":\"2021-09-06T05:45:20Z\",\"state\":\"Canceled\"},\"id\":\"jrmvdjwzrlo\",\"name\":\"mcl\",\"type\":\"hijco\"},{\"properties\":{\"id\":\"tbzaqsqsycbkbfk\",\"publisher\":\"kdkexxp\",\"offer\":\"fmxa\",\"signDate\":\"2021-06-05T20:06:24Z\",\"cancelDate\":\"2021-05-24T19:14:27Z\",\"state\":\"Canceled\"},\"id\":\"dtocj\",\"name\":\"xhvpmoue\",\"type\":\"hd\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MarketplaceOrderingManager manager = MarketplaceOrderingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        OldAgreementTermsList response
            = manager.marketplaceAgreements().listWithResponse(com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("tqajzyulpkudjkrl", response.value().get(0).idPropertiesId());
        Assertions.assertEquals("bzhfepgzgqexz", response.value().get(0).publisher());
        Assertions.assertEquals("c", response.value().get(0).offer());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-23T12:30:08Z"), response.value().get(0).signDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-18T07:05:01Z"), response.value().get(0).cancelDate());
        Assertions.assertEquals(State.CANCELED, response.value().get(0).state());
    }
}
