// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.marketplaceordering.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.marketplaceordering.fluent.models.AgreementTermsInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class AgreementTermsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AgreementTermsInner model = BinaryData.fromString(
            "{\"properties\":{\"publisher\":\"hq\",\"product\":\"gjxpybczmehmt\",\"plan\":\"pbsphrupidgs\",\"licenseTextLink\":\"bejhphoycmsxa\",\"privacyPolicyLink\":\"hdxbmtqio\",\"marketplaceTermsLink\":\"zehtbmu\",\"retrieveDatetime\":\"2021-08-31T11:21:05Z\",\"signature\":\"noi\",\"accepted\":false},\"id\":\"rxybqsoq\",\"name\":\"jgkdmbpazlobcu\",\"type\":\"pdznrbtcqqjnqgl\"}")
            .toObject(AgreementTermsInner.class);
        Assertions.assertEquals("hq", model.publisher());
        Assertions.assertEquals("gjxpybczmehmt", model.product());
        Assertions.assertEquals("pbsphrupidgs", model.plan());
        Assertions.assertEquals("bejhphoycmsxa", model.licenseTextLink());
        Assertions.assertEquals("hdxbmtqio", model.privacyPolicyLink());
        Assertions.assertEquals("zehtbmu", model.marketplaceTermsLink());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-31T11:21:05Z"), model.retrieveDatetime());
        Assertions.assertEquals("noi", model.signature());
        Assertions.assertEquals(false, model.accepted());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AgreementTermsInner model = new AgreementTermsInner().withPublisher("hq")
            .withProduct("gjxpybczmehmt")
            .withPlan("pbsphrupidgs")
            .withLicenseTextLink("bejhphoycmsxa")
            .withPrivacyPolicyLink("hdxbmtqio")
            .withMarketplaceTermsLink("zehtbmu")
            .withRetrieveDatetime(OffsetDateTime.parse("2021-08-31T11:21:05Z"))
            .withSignature("noi")
            .withAccepted(false);
        model = BinaryData.fromObject(model).toObject(AgreementTermsInner.class);
        Assertions.assertEquals("hq", model.publisher());
        Assertions.assertEquals("gjxpybczmehmt", model.product());
        Assertions.assertEquals("pbsphrupidgs", model.plan());
        Assertions.assertEquals("bejhphoycmsxa", model.licenseTextLink());
        Assertions.assertEquals("hdxbmtqio", model.privacyPolicyLink());
        Assertions.assertEquals("zehtbmu", model.marketplaceTermsLink());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-31T11:21:05Z"), model.retrieveDatetime());
        Assertions.assertEquals("noi", model.signature());
        Assertions.assertEquals(false, model.accepted());
    }
}
