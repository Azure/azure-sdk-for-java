// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.translation.text.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * An object returning sentence boundaries in the input and output texts.
 */
@Immutable
public final class SentenceLength implements JsonSerializable<SentenceLength> {

    /*
     * An integer array representing the lengths of the sentences in the input text. 
     * The length of the array is the number of sentences, and the values are the length of each sentence.
     */
    @Generated
    private final List<Integer> srcSentLen;

    /*
     * An integer array representing the lengths of the sentences in the translated text. 
     * The length of the array is the number of sentences, and the values are the length of each sentence.
     */
    @Generated
    private final List<Integer> transSentLen;

    /**
     * Creates an instance of SentenceLength class.
     *
     * @param srcSentLen the srcSentLen value to set.
     * @param transSentLen the transSentLen value to set.
     */
    @Generated
    private SentenceLength(List<Integer> srcSentLen, List<Integer> transSentLen) {
        this.srcSentLen = srcSentLen;
        this.transSentLen = transSentLen;
    }

    /**
     * Get the srcSentLen property: An integer array representing the lengths of the sentences in the input text.
     * The length of the array is the number of sentences, and the values are the length of each sentence.
     *
     * @return the srcSentLen value.
     */
    @Generated
    public List<Integer> getSrcSentLen() {
        return this.srcSentLen;
    }

    /**
     * Get the transSentLen property: An integer array representing the lengths of the sentences in the translated text.
     * The length of the array is the number of sentences, and the values are the length of each sentence.
     *
     * @return the transSentLen value.
     */
    @Generated
    public List<Integer> getTransSentLen() {
        return this.transSentLen;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("srcSentLen", this.srcSentLen, (writer, element) -> writer.writeInt(element));
        jsonWriter.writeArrayField("transSentLen", this.transSentLen, (writer, element) -> writer.writeInt(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SentenceLength from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of SentenceLength if the JsonReader was pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SentenceLength.
     */
    @Generated
    public static SentenceLength fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            List<Integer> srcSentLen = null;
            List<Integer> transSentLen = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("srcSentLen".equals(fieldName)) {
                    srcSentLen = reader.readArray(reader1 -> reader1.getInt());
                } else if ("transSentLen".equals(fieldName)) {
                    transSentLen = reader.readArray(reader1 -> reader1.getInt());
                } else {
                    reader.skipChildren();
                }
            }
            return new SentenceLength(srcSentLen, transSentLen);
        });
    }
}
