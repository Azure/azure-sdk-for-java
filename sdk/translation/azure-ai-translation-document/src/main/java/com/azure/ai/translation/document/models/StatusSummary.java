// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.translation.document.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Status Summary.
 */
@Immutable
public final class StatusSummary {

    /*
     * Total count
     */
    @Generated
    @JsonProperty(value = "total")
    private final int total;

    /*
     * Failed count
     */
    @Generated
    @JsonProperty(value = "failed")
    private final int failed;

    /*
     * Number of Success
     */
    @Generated
    @JsonProperty(value = "success")
    private final int success;

    /*
     * Number of in progress
     */
    @Generated
    @JsonProperty(value = "inProgress")
    private final int inProgress;

    /*
     * Count of not yet started
     */
    @Generated
    @JsonProperty(value = "notYetStarted")
    private final int notYetStarted;

    /*
     * Number of cancelled
     */
    @Generated
    @JsonProperty(value = "cancelled")
    private final int cancelled;

    /*
     * Total characters charged by the API
     */
    @Generated
    @JsonProperty(value = "totalCharacterCharged")
    private final long totalCharacterCharged;

    /**
     * Creates an instance of StatusSummary class.
     *
     * @param total the total value to set.
     * @param failed the failed value to set.
     * @param success the success value to set.
     * @param inProgress the inProgress value to set.
     * @param notYetStarted the notYetStarted value to set.
     * @param cancelled the cancelled value to set.
     * @param totalCharacterCharged the totalCharacterCharged value to set.
     */
    @Generated
    @JsonCreator
    private StatusSummary(@JsonProperty(value = "total") int total, @JsonProperty(value = "failed") int failed,
        @JsonProperty(value = "success") int success, @JsonProperty(value = "inProgress") int inProgress,
        @JsonProperty(value = "notYetStarted") int notYetStarted, @JsonProperty(value = "cancelled") int cancelled,
        @JsonProperty(value = "totalCharacterCharged") long totalCharacterCharged) {
        this.total = total;
        this.failed = failed;
        this.success = success;
        this.inProgress = inProgress;
        this.notYetStarted = notYetStarted;
        this.cancelled = cancelled;
        this.totalCharacterCharged = totalCharacterCharged;
    }

    /**
     * Get the total property: Total count.
     *
     * @return the total value.
     */
    @Generated
    public int getTotal() {
        return this.total;
    }

    /**
     * Get the failed property: Failed count.
     *
     * @return the failed value.
     */
    @Generated
    public int getFailed() {
        return this.failed;
    }

    /**
     * Get the success property: Number of Success.
     *
     * @return the success value.
     */
    @Generated
    public int getSuccess() {
        return this.success;
    }

    /**
     * Get the inProgress property: Number of in progress.
     *
     * @return the inProgress value.
     */
    @Generated
    public int getInProgress() {
        return this.inProgress;
    }

    /**
     * Get the notYetStarted property: Count of not yet started.
     *
     * @return the notYetStarted value.
     */
    @Generated
    public int getNotYetStarted() {
        return this.notYetStarted;
    }

    /**
     * Get the cancelled property: Number of cancelled.
     *
     * @return the cancelled value.
     */
    @Generated
    public int getCancelled() {
        return this.cancelled;
    }

    /**
     * Get the totalCharacterCharged property: Total characters charged by the API.
     *
     * @return the totalCharacterCharged value.
     */
    @Generated
    public long getTotalCharacterCharged() {
        return this.totalCharacterCharged;
    }
}
