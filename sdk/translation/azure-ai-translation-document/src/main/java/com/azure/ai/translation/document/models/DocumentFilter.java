// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.translation.document.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Document filter.
 */
@Fluent
public final class DocumentFilter {

    /*
     * A case-sensitive prefix string to filter documents in the source path for
     * translation.
     * For example, when using a Azure storage blob Uri, use the prefix
     * to restrict sub folders for translation.
     */
    @Generated
    @JsonProperty(value = "prefix")
    private String prefix;

    /*
     * A case-sensitive suffix string to filter documents in the source path for
     * translation.
     * This is most often use for file extensions
     */
    @Generated
    @JsonProperty(value = "suffix")
    private String suffix;

    /**
     * Creates an instance of DocumentFilter class.
     */
    @Generated
    public DocumentFilter() {
    }

    /**
     * Get the prefix property: A case-sensitive prefix string to filter documents in the source path for
     * translation.
     * For example, when using a Azure storage blob Uri, use the prefix
     * to restrict sub folders for translation.
     *
     * @return the prefix value.
     */
    @Generated
    public String getPrefix() {
        return this.prefix;
    }

    /**
     * Set the prefix property: A case-sensitive prefix string to filter documents in the source path for
     * translation.
     * For example, when using a Azure storage blob Uri, use the prefix
     * to restrict sub folders for translation.
     *
     * @param prefix the prefix value to set.
     * @return the DocumentFilter object itself.
     */
    @Generated
    public DocumentFilter setPrefix(String prefix) {
        this.prefix = prefix;
        return this;
    }

    /**
     * Get the suffix property: A case-sensitive suffix string to filter documents in the source path for
     * translation.
     * This is most often use for file extensions.
     *
     * @return the suffix value.
     */
    @Generated
    public String getSuffix() {
        return this.suffix;
    }

    /**
     * Set the suffix property: A case-sensitive suffix string to filter documents in the source path for
     * translation.
     * This is most often use for file extensions.
     *
     * @param suffix the suffix value to set.
     * @return the DocumentFilter object itself.
     */
    @Generated
    public DocumentFilter setSuffix(String suffix) {
        this.suffix = suffix;
        return this;
    }
}
