// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasewatcher.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databasewatcher.models.SharedPrivateLinkResourceProperties;
import org.junit.jupiter.api.Assertions;

public final class SharedPrivateLinkResourcePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SharedPrivateLinkResourceProperties model = BinaryData.fromString(
            "{\"privateLinkResourceId\":\"b\",\"groupId\":\"oczvy\",\"requestMessage\":\"fqrvkdvjsllrmvvd\",\"dnsZone\":\"atkpnp\",\"status\":\"Rejected\",\"provisioningState\":\"Failed\"}")
            .toObject(SharedPrivateLinkResourceProperties.class);
        Assertions.assertEquals("b", model.privateLinkResourceId());
        Assertions.assertEquals("oczvy", model.groupId());
        Assertions.assertEquals("fqrvkdvjsllrmvvd", model.requestMessage());
        Assertions.assertEquals("atkpnp", model.dnsZone());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SharedPrivateLinkResourceProperties model
            = new SharedPrivateLinkResourceProperties().withPrivateLinkResourceId("b")
                .withGroupId("oczvy")
                .withRequestMessage("fqrvkdvjsllrmvvd")
                .withDnsZone("atkpnp");
        model = BinaryData.fromObject(model).toObject(SharedPrivateLinkResourceProperties.class);
        Assertions.assertEquals("b", model.privateLinkResourceId());
        Assertions.assertEquals("oczvy", model.groupId());
        Assertions.assertEquals("fqrvkdvjsllrmvvd", model.requestMessage());
        Assertions.assertEquals("atkpnp", model.dnsZone());
    }
}
