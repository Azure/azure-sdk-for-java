// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasewatcher.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databasewatcher.fluent.models.SharedPrivateLinkResourceInner;
import com.azure.resourcemanager.databasewatcher.models.SharedPrivateLinkResourceProperties;
import org.junit.jupiter.api.Assertions;

public final class SharedPrivateLinkResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SharedPrivateLinkResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"privateLinkResourceId\":\"dpuozmyz\",\"groupId\":\"dagfuaxbezyiuok\",\"requestMessage\":\"twhrdxwzywqsm\",\"dnsZone\":\"ureximoryocfs\",\"status\":\"Pending\",\"provisioningState\":\"Failed\"},\"id\":\"dystkiiuxhqyud\",\"name\":\"o\",\"type\":\"rq\"}")
            .toObject(SharedPrivateLinkResourceInner.class);
        Assertions.assertEquals("dpuozmyz", model.properties().privateLinkResourceId());
        Assertions.assertEquals("dagfuaxbezyiuok", model.properties().groupId());
        Assertions.assertEquals("twhrdxwzywqsm", model.properties().requestMessage());
        Assertions.assertEquals("ureximoryocfs", model.properties().dnsZone());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SharedPrivateLinkResourceInner model = new SharedPrivateLinkResourceInner()
            .withProperties(new SharedPrivateLinkResourceProperties().withPrivateLinkResourceId("dpuozmyz")
                .withGroupId("dagfuaxbezyiuok")
                .withRequestMessage("twhrdxwzywqsm")
                .withDnsZone("ureximoryocfs"));
        model = BinaryData.fromObject(model).toObject(SharedPrivateLinkResourceInner.class);
        Assertions.assertEquals("dpuozmyz", model.properties().privateLinkResourceId());
        Assertions.assertEquals("dagfuaxbezyiuok", model.properties().groupId());
        Assertions.assertEquals("twhrdxwzywqsm", model.properties().requestMessage());
        Assertions.assertEquals("ureximoryocfs", model.properties().dnsZone());
    }
}
