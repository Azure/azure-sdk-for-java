// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasewatcher.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.databasewatcher.DatabaseWatcherManager;
import com.azure.resourcemanager.databasewatcher.models.KustoOfferingType;
import com.azure.resourcemanager.databasewatcher.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.databasewatcher.models.Watcher;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WatchersGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"datastore\":{\"adxClusterResourceId\":\"vjxxjnsp\",\"kustoClusterDisplayName\":\"ptkoenkoukn\",\"kustoClusterUri\":\"udwtiukbl\",\"kustoDataIngestionUri\":\"ngkpocipazy\",\"kustoDatabaseName\":\"o\",\"kustoManagementUrl\":\"gukgjnpiucgygevq\",\"kustoOfferingType\":\"fabric\"},\"status\":\"Deleting\",\"provisioningState\":\"Failed\",\"defaultAlertRuleIdentityResourceId\":\"bpizcdrqjsdpydn\"},\"identity\":{\"principalId\":\"xdeoejzic\",\"tenantId\":\"fsj\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"agalpbuxwgipwhon\":{\"clientId\":\"bishcbkhajdeyea\",\"principalId\":\"p\"},\"uzoqft\":{\"clientId\":\"kgshwa\",\"principalId\":\"ixzbinjeputtmryw\"},\"yav\":{\"clientId\":\"qzrnkcqvyxlwhz\",\"principalId\":\"icohoqqnwvl\"}}},\"location\":\"heun\",\"tags\":{\"koklya\":\"hgyxzkonoc\",\"ewrmjmwvvjektc\":\"uconuqszfkbey\",\"frzpwvlqdqgb\":\"senhwlrs\",\"fcivfsnkym\":\"qylihkaetckt\"},\"id\":\"ctq\",\"name\":\"jf\",\"type\":\"ebrjcxe\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DatabaseWatcherManager manager = DatabaseWatcherManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Watcher response = manager.watchers()
            .getByResourceGroupWithResponse("vmezy", "shxmzsbbzoggigrx", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("heun", response.location());
        Assertions.assertEquals("hgyxzkonoc", response.tags().get("koklya"));
        Assertions.assertEquals("vjxxjnsp", response.properties().datastore().adxClusterResourceId());
        Assertions.assertEquals("ptkoenkoukn", response.properties().datastore().kustoClusterDisplayName());
        Assertions.assertEquals("udwtiukbl", response.properties().datastore().kustoClusterUri());
        Assertions.assertEquals("ngkpocipazy", response.properties().datastore().kustoDataIngestionUri());
        Assertions.assertEquals("o", response.properties().datastore().kustoDatabaseName());
        Assertions.assertEquals("gukgjnpiucgygevq", response.properties().datastore().kustoManagementUrl());
        Assertions.assertEquals(KustoOfferingType.FABRIC, response.properties().datastore().kustoOfferingType());
        Assertions.assertEquals("bpizcdrqjsdpydn", response.properties().defaultAlertRuleIdentityResourceId());
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.identity().type());
    }
}
