// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasewatcher.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of SharedPrivateLinkResources.
 */
public interface SharedPrivateLinkResources {
    /**
     * Get a SharedPrivateLinkResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param watcherName The database watcher name.
     * @param sharedPrivateLinkResourceName The Shared Private Link resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SharedPrivateLinkResource along with {@link Response}.
     */
    Response<SharedPrivateLinkResource> getWithResponse(String resourceGroupName, String watcherName,
        String sharedPrivateLinkResourceName, Context context);

    /**
     * Get a SharedPrivateLinkResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param watcherName The database watcher name.
     * @param sharedPrivateLinkResourceName The Shared Private Link resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SharedPrivateLinkResource.
     */
    SharedPrivateLinkResource get(String resourceGroupName, String watcherName, String sharedPrivateLinkResourceName);

    /**
     * Delete a SharedPrivateLinkResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param watcherName The database watcher name.
     * @param sharedPrivateLinkResourceName The Shared Private Link resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String watcherName, String sharedPrivateLinkResourceName);

    /**
     * Delete a SharedPrivateLinkResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param watcherName The database watcher name.
     * @param sharedPrivateLinkResourceName The Shared Private Link resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String watcherName, String sharedPrivateLinkResourceName, Context context);

    /**
     * List SharedPrivateLinkResource resources by Watcher.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param watcherName The database watcher name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SharedPrivateLinkResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<SharedPrivateLinkResource> listByWatcher(String resourceGroupName, String watcherName);

    /**
     * List SharedPrivateLinkResource resources by Watcher.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param watcherName The database watcher name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SharedPrivateLinkResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<SharedPrivateLinkResource> listByWatcher(String resourceGroupName, String watcherName,
        Context context);

    /**
     * Get a SharedPrivateLinkResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SharedPrivateLinkResource along with {@link Response}.
     */
    SharedPrivateLinkResource getById(String id);

    /**
     * Get a SharedPrivateLinkResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SharedPrivateLinkResource along with {@link Response}.
     */
    Response<SharedPrivateLinkResource> getByIdWithResponse(String id, Context context);

    /**
     * Delete a SharedPrivateLinkResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a SharedPrivateLinkResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new SharedPrivateLinkResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new SharedPrivateLinkResource definition.
     */
    SharedPrivateLinkResource.DefinitionStages.Blank define(String name);
}
