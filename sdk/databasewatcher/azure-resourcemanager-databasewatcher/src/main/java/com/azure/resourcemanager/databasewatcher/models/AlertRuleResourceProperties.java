// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasewatcher.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * The generic properties of the alert rule proxy resource.
 */
@Fluent
public final class AlertRuleResourceProperties implements JsonSerializable<AlertRuleResourceProperties> {
    /*
     * The resource ID of the alert rule resource.
     */
    private String alertRuleResourceId;

    /*
     * The properties with which the alert rule resource was created.
     */
    private AlertRuleCreationProperties createdWithProperties;

    /*
     * The creation time of the alert rule resource.
     */
    private OffsetDateTime creationTime;

    /*
     * The provisioning state of the alert rule resource.
     */
    private ResourceProvisioningState provisioningState;

    /*
     * The template ID associated with alert rule resource.
     */
    private String alertRuleTemplateId;

    /*
     * The alert rule template version.
     */
    private String alertRuleTemplateVersion;

    /**
     * Creates an instance of AlertRuleResourceProperties class.
     */
    public AlertRuleResourceProperties() {
    }

    /**
     * Get the alertRuleResourceId property: The resource ID of the alert rule resource.
     * 
     * @return the alertRuleResourceId value.
     */
    public String alertRuleResourceId() {
        return this.alertRuleResourceId;
    }

    /**
     * Set the alertRuleResourceId property: The resource ID of the alert rule resource.
     * 
     * @param alertRuleResourceId the alertRuleResourceId value to set.
     * @return the AlertRuleResourceProperties object itself.
     */
    public AlertRuleResourceProperties withAlertRuleResourceId(String alertRuleResourceId) {
        this.alertRuleResourceId = alertRuleResourceId;
        return this;
    }

    /**
     * Get the createdWithProperties property: The properties with which the alert rule resource was created.
     * 
     * @return the createdWithProperties value.
     */
    public AlertRuleCreationProperties createdWithProperties() {
        return this.createdWithProperties;
    }

    /**
     * Set the createdWithProperties property: The properties with which the alert rule resource was created.
     * 
     * @param createdWithProperties the createdWithProperties value to set.
     * @return the AlertRuleResourceProperties object itself.
     */
    public AlertRuleResourceProperties withCreatedWithProperties(AlertRuleCreationProperties createdWithProperties) {
        this.createdWithProperties = createdWithProperties;
        return this;
    }

    /**
     * Get the creationTime property: The creation time of the alert rule resource.
     * 
     * @return the creationTime value.
     */
    public OffsetDateTime creationTime() {
        return this.creationTime;
    }

    /**
     * Set the creationTime property: The creation time of the alert rule resource.
     * 
     * @param creationTime the creationTime value to set.
     * @return the AlertRuleResourceProperties object itself.
     */
    public AlertRuleResourceProperties withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the alert rule resource.
     * 
     * @return the provisioningState value.
     */
    public ResourceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the alertRuleTemplateId property: The template ID associated with alert rule resource.
     * 
     * @return the alertRuleTemplateId value.
     */
    public String alertRuleTemplateId() {
        return this.alertRuleTemplateId;
    }

    /**
     * Set the alertRuleTemplateId property: The template ID associated with alert rule resource.
     * 
     * @param alertRuleTemplateId the alertRuleTemplateId value to set.
     * @return the AlertRuleResourceProperties object itself.
     */
    public AlertRuleResourceProperties withAlertRuleTemplateId(String alertRuleTemplateId) {
        this.alertRuleTemplateId = alertRuleTemplateId;
        return this;
    }

    /**
     * Get the alertRuleTemplateVersion property: The alert rule template version.
     * 
     * @return the alertRuleTemplateVersion value.
     */
    public String alertRuleTemplateVersion() {
        return this.alertRuleTemplateVersion;
    }

    /**
     * Set the alertRuleTemplateVersion property: The alert rule template version.
     * 
     * @param alertRuleTemplateVersion the alertRuleTemplateVersion value to set.
     * @return the AlertRuleResourceProperties object itself.
     */
    public AlertRuleResourceProperties withAlertRuleTemplateVersion(String alertRuleTemplateVersion) {
        this.alertRuleTemplateVersion = alertRuleTemplateVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (alertRuleResourceId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property alertRuleResourceId in model AlertRuleResourceProperties"));
        }
        if (createdWithProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property createdWithProperties in model AlertRuleResourceProperties"));
        }
        if (creationTime() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property creationTime in model AlertRuleResourceProperties"));
        }
        if (alertRuleTemplateId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property alertRuleTemplateId in model AlertRuleResourceProperties"));
        }
        if (alertRuleTemplateVersion() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property alertRuleTemplateVersion in model AlertRuleResourceProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AlertRuleResourceProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("alertRuleResourceId", this.alertRuleResourceId);
        jsonWriter.writeStringField("createdWithProperties",
            this.createdWithProperties == null ? null : this.createdWithProperties.toString());
        jsonWriter.writeStringField("creationTime",
            this.creationTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.creationTime));
        jsonWriter.writeStringField("alertRuleTemplateId", this.alertRuleTemplateId);
        jsonWriter.writeStringField("alertRuleTemplateVersion", this.alertRuleTemplateVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AlertRuleResourceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AlertRuleResourceProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AlertRuleResourceProperties.
     */
    public static AlertRuleResourceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AlertRuleResourceProperties deserializedAlertRuleResourceProperties = new AlertRuleResourceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("alertRuleResourceId".equals(fieldName)) {
                    deserializedAlertRuleResourceProperties.alertRuleResourceId = reader.getString();
                } else if ("createdWithProperties".equals(fieldName)) {
                    deserializedAlertRuleResourceProperties.createdWithProperties
                        = AlertRuleCreationProperties.fromString(reader.getString());
                } else if ("creationTime".equals(fieldName)) {
                    deserializedAlertRuleResourceProperties.creationTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("alertRuleTemplateId".equals(fieldName)) {
                    deserializedAlertRuleResourceProperties.alertRuleTemplateId = reader.getString();
                } else if ("alertRuleTemplateVersion".equals(fieldName)) {
                    deserializedAlertRuleResourceProperties.alertRuleTemplateVersion = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedAlertRuleResourceProperties.provisioningState
                        = ResourceProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAlertRuleResourceProperties;
        });
    }
}
