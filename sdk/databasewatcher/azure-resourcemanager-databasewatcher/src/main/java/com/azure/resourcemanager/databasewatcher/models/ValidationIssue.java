// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasewatcher.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The model of a health validation issue.
 */
@Immutable
public final class ValidationIssue implements JsonSerializable<ValidationIssue> {
    /*
     * The error code of the issue.
     */
    private String errorCode;

    /*
     * The error message of the issue.
     */
    private String errorMessage;

    /*
     * The additional details for the issue.
     */
    private String additionalDetails;

    /*
     * The recommendation for resolving the issue.
     */
    private String recommendationMessage;

    /*
     * The URL related to resolving the issue.
     */
    private String recommendationUrl;

    /*
     * The resource ID of the Azure resource related to the issue.
     */
    private String relatedResourceId;

    /*
     * The type of the Azure resource related to the issue.
     */
    private String relatedResourceType;

    /**
     * Creates an instance of ValidationIssue class.
     */
    private ValidationIssue() {
    }

    /**
     * Get the errorCode property: The error code of the issue.
     * 
     * @return the errorCode value.
     */
    public String errorCode() {
        return this.errorCode;
    }

    /**
     * Get the errorMessage property: The error message of the issue.
     * 
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * Get the additionalDetails property: The additional details for the issue.
     * 
     * @return the additionalDetails value.
     */
    public String additionalDetails() {
        return this.additionalDetails;
    }

    /**
     * Get the recommendationMessage property: The recommendation for resolving the issue.
     * 
     * @return the recommendationMessage value.
     */
    public String recommendationMessage() {
        return this.recommendationMessage;
    }

    /**
     * Get the recommendationUrl property: The URL related to resolving the issue.
     * 
     * @return the recommendationUrl value.
     */
    public String recommendationUrl() {
        return this.recommendationUrl;
    }

    /**
     * Get the relatedResourceId property: The resource ID of the Azure resource related to the issue.
     * 
     * @return the relatedResourceId value.
     */
    public String relatedResourceId() {
        return this.relatedResourceId;
    }

    /**
     * Get the relatedResourceType property: The type of the Azure resource related to the issue.
     * 
     * @return the relatedResourceType value.
     */
    public String relatedResourceType() {
        return this.relatedResourceType;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ValidationIssue from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ValidationIssue if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ValidationIssue.
     */
    public static ValidationIssue fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ValidationIssue deserializedValidationIssue = new ValidationIssue();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("errorCode".equals(fieldName)) {
                    deserializedValidationIssue.errorCode = reader.getString();
                } else if ("errorMessage".equals(fieldName)) {
                    deserializedValidationIssue.errorMessage = reader.getString();
                } else if ("recommendationMessage".equals(fieldName)) {
                    deserializedValidationIssue.recommendationMessage = reader.getString();
                } else if ("additionalDetails".equals(fieldName)) {
                    deserializedValidationIssue.additionalDetails = reader.getString();
                } else if ("recommendationUrl".equals(fieldName)) {
                    deserializedValidationIssue.recommendationUrl = reader.getString();
                } else if ("relatedResourceId".equals(fieldName)) {
                    deserializedValidationIssue.relatedResourceId = reader.getString();
                } else if ("relatedResourceType".equals(fieldName)) {
                    deserializedValidationIssue.relatedResourceType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedValidationIssue;
        });
    }
}
