// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasewatcher.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.databasewatcher.fluent.models.TargetInner;
import com.azure.resourcemanager.databasewatcher.models.Target;
import com.azure.resourcemanager.databasewatcher.models.TargetProperties;

public final class TargetImpl implements Target, Target.Definition, Target.Update {
    private TargetInner innerObject;

    private final com.azure.resourcemanager.databasewatcher.DatabaseWatcherManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public TargetProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public TargetInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.databasewatcher.DatabaseWatcherManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String watcherName;

    private String targetName;

    public TargetImpl withExistingWatcher(String resourceGroupName, String watcherName) {
        this.resourceGroupName = resourceGroupName;
        this.watcherName = watcherName;
        return this;
    }

    public Target create() {
        this.innerObject = serviceManager.serviceClient()
            .getTargets()
            .createOrUpdateWithResponse(resourceGroupName, watcherName, targetName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public Target create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getTargets()
            .createOrUpdateWithResponse(resourceGroupName, watcherName, targetName, this.innerModel(), context)
            .getValue();
        return this;
    }

    TargetImpl(String name, com.azure.resourcemanager.databasewatcher.DatabaseWatcherManager serviceManager) {
        this.innerObject = new TargetInner();
        this.serviceManager = serviceManager;
        this.targetName = name;
    }

    public TargetImpl update() {
        return this;
    }

    public Target apply() {
        this.innerObject = serviceManager.serviceClient()
            .getTargets()
            .createOrUpdateWithResponse(resourceGroupName, watcherName, targetName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public Target apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getTargets()
            .createOrUpdateWithResponse(resourceGroupName, watcherName, targetName, this.innerModel(), context)
            .getValue();
        return this;
    }

    TargetImpl(TargetInner innerObject,
        com.azure.resourcemanager.databasewatcher.DatabaseWatcherManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.watcherName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "watchers");
        this.targetName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "targets");
    }

    public Target refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getTargets()
            .getWithResponse(resourceGroupName, watcherName, targetName, Context.NONE)
            .getValue();
        return this;
    }

    public Target refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getTargets()
            .getWithResponse(resourceGroupName, watcherName, targetName, context)
            .getValue();
        return this;
    }

    public TargetImpl withProperties(TargetProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
