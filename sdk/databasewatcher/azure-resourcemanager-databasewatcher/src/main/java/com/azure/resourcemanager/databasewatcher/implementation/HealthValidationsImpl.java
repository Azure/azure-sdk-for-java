// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasewatcher.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.databasewatcher.fluent.HealthValidationsClient;
import com.azure.resourcemanager.databasewatcher.fluent.models.HealthValidationInner;
import com.azure.resourcemanager.databasewatcher.models.HealthValidation;
import com.azure.resourcemanager.databasewatcher.models.HealthValidations;

public final class HealthValidationsImpl implements HealthValidations {
    private static final ClientLogger LOGGER = new ClientLogger(HealthValidationsImpl.class);

    private final HealthValidationsClient innerClient;

    private final com.azure.resourcemanager.databasewatcher.DatabaseWatcherManager serviceManager;

    public HealthValidationsImpl(HealthValidationsClient innerClient,
        com.azure.resourcemanager.databasewatcher.DatabaseWatcherManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<HealthValidation> getWithResponse(String resourceGroupName, String watcherName,
        String healthValidationName, Context context) {
        Response<HealthValidationInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, watcherName, healthValidationName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new HealthValidationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public HealthValidation get(String resourceGroupName, String watcherName, String healthValidationName) {
        HealthValidationInner inner = this.serviceClient().get(resourceGroupName, watcherName, healthValidationName);
        if (inner != null) {
            return new HealthValidationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<HealthValidation> listByParent(String resourceGroupName, String watcherName) {
        PagedIterable<HealthValidationInner> inner = this.serviceClient().listByParent(resourceGroupName, watcherName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new HealthValidationImpl(inner1, this.manager()));
    }

    public PagedIterable<HealthValidation> listByParent(String resourceGroupName, String watcherName, Context context) {
        PagedIterable<HealthValidationInner> inner
            = this.serviceClient().listByParent(resourceGroupName, watcherName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new HealthValidationImpl(inner1, this.manager()));
    }

    public HealthValidation startValidation(String resourceGroupName, String watcherName, String healthValidationName) {
        HealthValidationInner inner
            = this.serviceClient().startValidation(resourceGroupName, watcherName, healthValidationName);
        if (inner != null) {
            return new HealthValidationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public HealthValidation startValidation(String resourceGroupName, String watcherName, String healthValidationName,
        Context context) {
        HealthValidationInner inner
            = this.serviceClient().startValidation(resourceGroupName, watcherName, healthValidationName, context);
        if (inner != null) {
            return new HealthValidationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private HealthValidationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.databasewatcher.DatabaseWatcherManager manager() {
        return this.serviceManager;
    }
}
