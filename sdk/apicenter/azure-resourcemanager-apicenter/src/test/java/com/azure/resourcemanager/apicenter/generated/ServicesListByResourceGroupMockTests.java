// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apicenter.ApiCenterManager;
import com.azure.resourcemanager.apicenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.apicenter.models.Service;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ServicesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\"},\"identity\":{\"principalId\":\"584c9885-f9c4-462d-8a39-f53aff98b1a6\",\"tenantId\":\"dcd1eabe-323b-423b-b72f-e87e25603b0e\",\"type\":\"None\",\"userAssignedIdentities\":{\"hqjohxcrsbfova\":{\"principalId\":\"129d7b68-7bc3-41da-aa94-92f1a997435e\",\"clientId\":\"18cc121e-5385-4a2e-a265-65b78c0ff658\"},\"uvwbhsqfs\":{\"principalId\":\"a4455b9b-d1ef-4c5b-8a83-f0affb30223d\",\"clientId\":\"a6fbcf9b-02f7-44d3-9c72-1ff001d1fab6\"},\"gjb\":{\"principalId\":\"6342df61-9701-45c2-a37e-9d18f6e9b885\",\"clientId\":\"d579f3d6-0cb7-4689-861c-6cd84596d2ab\"}}},\"location\":\"xb\",\"tags\":{\"t\":\"srfbjfdtwss\",\"vwpm\":\"tpvjzbexilzznfqq\"},\"id\":\"taruoujmkcj\",\"name\":\"wqytjrybnwjewgdr\",\"type\":\"ervnaenqpehi\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiCenterManager manager = ApiCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Service> response
            = manager.services().listByResourceGroup("ytkblmpew", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xb", response.iterator().next().location());
        Assertions.assertEquals("srfbjfdtwss", response.iterator().next().tags().get("t"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
    }
}
