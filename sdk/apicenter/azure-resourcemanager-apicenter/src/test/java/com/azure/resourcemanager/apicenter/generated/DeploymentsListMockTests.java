// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apicenter.ApiCenterManager;
import com.azure.resourcemanager.apicenter.models.Deployment;
import com.azure.resourcemanager.apicenter.models.DeploymentState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeploymentsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"title\":\"ivwitqscywugg\",\"description\":\"luhczbw\",\"environmentId\":\"hairsbrgzdwms\",\"definitionId\":\"ypqwdxggiccc\",\"state\":\"active\",\"server\":{\"runtimeUri\":[\"xmkttl\"]},\"customProperties\":\"datavlz\"},\"id\":\"emhzrncsdtc\",\"name\":\"u\",\"type\":\"iypbsfgytgusl\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiCenterManager manager = ApiCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Deployment> response = manager.deployments()
            .list("zqhof", "rmaequ", "ah", "icslfaoq", "piyylhalnswhccsp", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ivwitqscywugg", response.iterator().next().properties().title());
        Assertions.assertEquals("luhczbw", response.iterator().next().properties().description());
        Assertions.assertEquals("hairsbrgzdwms", response.iterator().next().properties().environmentId());
        Assertions.assertEquals("ypqwdxggiccc", response.iterator().next().properties().definitionId());
        Assertions.assertEquals(DeploymentState.ACTIVE, response.iterator().next().properties().state());
        Assertions.assertEquals("xmkttl", response.iterator().next().properties().server().runtimeUri().get(0));
    }
}
