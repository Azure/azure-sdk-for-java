// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apicenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.apicenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.apicenter.models.ServiceUpdate;
import com.azure.resourcemanager.apicenter.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ServiceUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceUpdate model = BinaryData.fromString(
            "{\"identity\":{\"principalId\":\"0673ac01-ce57-4d04-8ae5-fa0811b1c484\",\"tenantId\":\"1ad444b4-1453-4801-9cb9-233b62fcc6c9\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"ygxgispemvtz\":{\"principalId\":\"99645cd9-e4e9-49d8-96a4-c0da20d1e577\",\"clientId\":\"4e75dad7-4ffd-4bd2-b56a-aee5cca95938\"},\"fublj\":{\"principalId\":\"7813a81a-8d5b-472f-b2d1-392b181d70b1\",\"clientId\":\"41fa3722-244c-40e4-9235-b7a11cc355dd\"},\"qeof\":{\"principalId\":\"72a5928b-89f5-4674-9ef7-ad610504180e\",\"clientId\":\"8b5f4ce9-51a2-4bb0-835a-97a6017ea31d\"}}},\"tags\":{\"msmjqulngsntn\":\"qjhqjbas\"}}")
            .toObject(ServiceUpdate.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
        Assertions.assertEquals("qjhqjbas", model.tags().get("msmjqulngsntn"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceUpdate model = new ServiceUpdate()
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED)
                .withUserAssignedIdentities(mapOf("ygxgispemvtz", new UserAssignedIdentity(), "fublj",
                    new UserAssignedIdentity(), "qeof", new UserAssignedIdentity())))
            .withTags(mapOf("msmjqulngsntn", "qjhqjbas"));
        model = BinaryData.fromObject(model).toObject(ServiceUpdate.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
        Assertions.assertEquals("qjhqjbas", model.tags().get("msmjqulngsntn"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
