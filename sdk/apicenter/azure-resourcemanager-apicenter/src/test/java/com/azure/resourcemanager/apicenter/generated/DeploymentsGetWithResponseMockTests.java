// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apicenter.ApiCenterManager;
import com.azure.resourcemanager.apicenter.models.Deployment;
import com.azure.resourcemanager.apicenter.models.DeploymentState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeploymentsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"title\":\"w\",\"description\":\"r\",\"environmentId\":\"swibyr\",\"definitionId\":\"l\",\"state\":\"inactive\",\"server\":{\"runtimeUri\":[\"p\",\"acstwityk\",\"evxccedcp\",\"md\"]},\"customProperties\":\"datadnwzxltjcvnhltiu\"},\"id\":\"xnavvwxq\",\"name\":\"byqunyow\",\"type\":\"wlmdjrkv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiCenterManager manager = ApiCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Deployment response = manager.deployments()
            .getWithResponse("eadcygqukyhejhz", "sx", "fpel", "lppvksrpq", "ujzra", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("w", response.properties().title());
        Assertions.assertEquals("r", response.properties().description());
        Assertions.assertEquals("swibyr", response.properties().environmentId());
        Assertions.assertEquals("l", response.properties().definitionId());
        Assertions.assertEquals(DeploymentState.INACTIVE, response.properties().state());
        Assertions.assertEquals("p", response.properties().server().runtimeUri().get(0));
    }
}
