// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apicenter.ApiCenterManager;
import com.azure.resourcemanager.apicenter.models.Deployment;
import com.azure.resourcemanager.apicenter.models.DeploymentProperties;
import com.azure.resourcemanager.apicenter.models.DeploymentServer;
import com.azure.resourcemanager.apicenter.models.DeploymentState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeploymentsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"title\":\"pfrlazsz\",\"description\":\"woiindf\",\"environmentId\":\"pj\",\"definitionId\":\"wbtlhflsjcdh\",\"state\":\"inactive\",\"server\":{\"runtimeUri\":[\"bgofeljag\",\"qmqhldvriii\",\"jnalghf\",\"vtvsexsowueluq\"]},\"customProperties\":\"dataahhxvrh\"},\"id\":\"kwpjgwwspughftqs\",\"name\":\"hqxujxukndxdi\",\"type\":\"rjguufzdmsyqtf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiCenterManager manager = ApiCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Deployment response = manager.deployments()
            .define("bizikayuhq")
            .withExistingApi("vncjabudurgk", "kmokz", "jjklff", "mouwqlgzrfzeey")
            .withProperties(new DeploymentProperties().withTitle("bs")
                .withDescription("bqwrvtldgm")
                .withEnvironmentId("gvmpipaslthaqfx")
                .withDefinitionId("mwutwbdsre")
                .withState(DeploymentState.INACTIVE)
                .withServer(new DeploymentServer().withRuntimeUri(Arrays.asList("euyowqkd", "ytisibir")))
                .withCustomProperties("datapikpz"))
            .create();

        Assertions.assertEquals("pfrlazsz", response.properties().title());
        Assertions.assertEquals("woiindf", response.properties().description());
        Assertions.assertEquals("pj", response.properties().environmentId());
        Assertions.assertEquals("wbtlhflsjcdh", response.properties().definitionId());
        Assertions.assertEquals(DeploymentState.INACTIVE, response.properties().state());
        Assertions.assertEquals("bgofeljag", response.properties().server().runtimeUri().get(0));
    }
}
