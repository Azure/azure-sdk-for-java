// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apicenter.models.EnvironmentKind;
import com.azure.resourcemanager.apicenter.models.EnvironmentProperties;
import com.azure.resourcemanager.apicenter.models.EnvironmentServer;
import com.azure.resourcemanager.apicenter.models.EnvironmentServerType;
import com.azure.resourcemanager.apicenter.models.Onboarding;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EnvironmentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EnvironmentProperties model = BinaryData.fromString(
            "{\"title\":\"bbtdzumvee\",\"description\":\"pwo\",\"kind\":\"development\",\"server\":{\"type\":\"Kubernetes\",\"managementPortalUri\":[\"sjyofdx\",\"uusdttouwa\"]},\"onboarding\":{\"instructions\":\"kqvkelnsmvbxwyjs\",\"developerPortalUri\":[\"hcaalnjix\",\"sxyawjoyaqcs\"]},\"customProperties\":\"datajpkiidzyexznelix\"}")
            .toObject(EnvironmentProperties.class);
        Assertions.assertEquals("bbtdzumvee", model.title());
        Assertions.assertEquals("pwo", model.description());
        Assertions.assertEquals(EnvironmentKind.DEVELOPMENT, model.kind());
        Assertions.assertEquals(EnvironmentServerType.KUBERNETES, model.server().type());
        Assertions.assertEquals("sjyofdx", model.server().managementPortalUri().get(0));
        Assertions.assertEquals("kqvkelnsmvbxwyjs", model.onboarding().instructions());
        Assertions.assertEquals("hcaalnjix", model.onboarding().developerPortalUri().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EnvironmentProperties model = new EnvironmentProperties().withTitle("bbtdzumvee").withDescription("pwo")
            .withKind(EnvironmentKind.DEVELOPMENT)
            .withServer(new EnvironmentServer().withType(EnvironmentServerType.KUBERNETES)
                .withManagementPortalUri(Arrays.asList("sjyofdx", "uusdttouwa")))
            .withOnboarding(new Onboarding().withInstructions("kqvkelnsmvbxwyjs")
                .withDeveloperPortalUri(Arrays.asList("hcaalnjix", "sxyawjoyaqcs")))
            .withCustomProperties("datajpkiidzyexznelix");
        model = BinaryData.fromObject(model).toObject(EnvironmentProperties.class);
        Assertions.assertEquals("bbtdzumvee", model.title());
        Assertions.assertEquals("pwo", model.description());
        Assertions.assertEquals(EnvironmentKind.DEVELOPMENT, model.kind());
        Assertions.assertEquals(EnvironmentServerType.KUBERNETES, model.server().type());
        Assertions.assertEquals("sjyofdx", model.server().managementPortalUri().get(0));
        Assertions.assertEquals("kqvkelnsmvbxwyjs", model.onboarding().instructions());
        Assertions.assertEquals("hcaalnjix", model.onboarding().developerPortalUri().get(0));
    }
}
