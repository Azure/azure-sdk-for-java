// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apicenter.ApiCenterManager;
import com.azure.resourcemanager.apicenter.models.Environment;
import com.azure.resourcemanager.apicenter.models.EnvironmentKind;
import com.azure.resourcemanager.apicenter.models.EnvironmentServerType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EnvironmentsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"title\":\"lw\",\"description\":\"esutrgjupauutpw\",\"kind\":\"development\",\"server\":{\"type\":\"Kong API Gateway\",\"managementPortalUri\":[\"qg\",\"zpnfqntcypsxj\"]},\"onboarding\":{\"instructions\":\"imwkslircizj\",\"developerPortalUri\":[\"dfcea\",\"vlhv\"]},\"customProperties\":\"datadyftumrtwna\"},\"id\":\"slbi\",\"name\":\"kojgcyzts\",\"type\":\"mznbaeqphch\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiCenterManager manager = ApiCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Environment> response = manager.environments()
            .list("asdvl", "fwdgzxulucvp", "mrsreuzvxurisjnh", "ytxifqjzgxmrh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("lw", response.iterator().next().properties().title());
        Assertions.assertEquals("esutrgjupauutpw", response.iterator().next().properties().description());
        Assertions.assertEquals(EnvironmentKind.DEVELOPMENT, response.iterator().next().properties().kind());
        Assertions.assertEquals(EnvironmentServerType.KONG_API_GATEWAY,
            response.iterator().next().properties().server().type());
        Assertions.assertEquals("qg", response.iterator().next().properties().server().managementPortalUri().get(0));
        Assertions.assertEquals("imwkslircizj", response.iterator().next().properties().onboarding().instructions());
        Assertions.assertEquals("dfcea",
            response.iterator().next().properties().onboarding().developerPortalUri().get(0));
    }
}
