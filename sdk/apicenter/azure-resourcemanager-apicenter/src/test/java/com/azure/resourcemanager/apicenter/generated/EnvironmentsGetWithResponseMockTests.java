// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apicenter.ApiCenterManager;
import com.azure.resourcemanager.apicenter.models.Environment;
import com.azure.resourcemanager.apicenter.models.EnvironmentKind;
import com.azure.resourcemanager.apicenter.models.EnvironmentServerType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EnvironmentsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"title\":\"rhnj\",\"description\":\"olvtnovqfzge\",\"kind\":\"staging\",\"server\":{\"type\":\"AWS API Gateway\",\"managementPortalUri\":[\"jltduceam\",\"mczuo\",\"ejwcwwqiok\"]},\"onboarding\":{\"instructions\":\"xmojmsvpkjp\",\"developerPortalUri\":[\"wcfzqljyxgt\"]},\"customProperties\":\"dataheyd\"},\"id\":\"dshmkxmaehvbbx\",\"name\":\"ripltf\",\"type\":\"htba\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiCenterManager manager = ApiCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Environment response = manager.environments()
            .getWithResponse("nrnrp", "ehuwrykqgaifmvik", "bydvkhbejdz", "xcv", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("rhnj", response.properties().title());
        Assertions.assertEquals("olvtnovqfzge", response.properties().description());
        Assertions.assertEquals(EnvironmentKind.STAGING, response.properties().kind());
        Assertions.assertEquals(EnvironmentServerType.AWS_API_GATEWAY, response.properties().server().type());
        Assertions.assertEquals("jltduceam", response.properties().server().managementPortalUri().get(0));
        Assertions.assertEquals("xmojmsvpkjp", response.properties().onboarding().instructions());
        Assertions.assertEquals("wcfzqljyxgt", response.properties().onboarding().developerPortalUri().get(0));
    }
}
