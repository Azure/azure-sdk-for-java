// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apicenter.fluent.models.ServiceInner;
import com.azure.resourcemanager.apicenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.apicenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.apicenter.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ServiceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"provisioningState\":\"Failed\"},\"identity\":{\"principalId\":\"f568524d-950c-4621-810e-87cae3563d02\",\"tenantId\":\"d6a75ffd-ea98-48a5-92e4-0457571edb14\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"ryffdfdosy\":{\"principalId\":\"b0eb3def-06b4-4989-88b4-0c0826c4d50d\",\"clientId\":\"ce8656e8-4e5a-4b28-aa23-e7f16f29c9ae\"},\"paojakhmsbzjh\":{\"principalId\":\"9d212c2c-e5a8-4442-957c-089d34d60859\",\"clientId\":\"c52453aa-2ca2-407c-937f-28e131e24812\"},\"evdphlxaol\":{\"principalId\":\"0595d679-226e-4123-a5d3-d159db2c8510\",\"clientId\":\"34a540ac-22db-4eb8-88ad-dc1143e8c543\"},\"trg\":{\"principalId\":\"b5247510-29bb-457c-ad9a-75980fbef8a8\",\"clientId\":\"5ef4cb33-3ef6-43b0-990d-fc2ab392c7de\"}}},\"location\":\"bpf\",\"tags\":{\"wzo\":\"inzgvfcj\"},\"id\":\"xjtfelluwfzit\",\"name\":\"np\",\"type\":\"qfpjk\"}")
                .toObject(ServiceInner.class);
        Assertions.assertEquals("bpf", model.location());
        Assertions.assertEquals("inzgvfcj", model.tags().get("wzo"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceInner model =
            new ServiceInner()
                .withLocation("bpf")
                .withTags(mapOf("wzo", "inzgvfcj"))
                .withIdentity(
                    new ManagedServiceIdentity()
                        .withType(ManagedServiceIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentities(
                            mapOf(
                                "ryffdfdosy",
                                new UserAssignedIdentity(),
                                "paojakhmsbzjh",
                                new UserAssignedIdentity(),
                                "evdphlxaol",
                                new UserAssignedIdentity(),
                                "trg",
                                new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(ServiceInner.class);
        Assertions.assertEquals("bpf", model.location());
        Assertions.assertEquals("inzgvfcj", model.tags().get("wzo"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
