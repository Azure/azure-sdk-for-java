// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/**
 * The type of environment server.
 */
public final class EnvironmentServerType extends ExpandableStringEnum<EnvironmentServerType> {
    /**
     * Static value Azure API Management for EnvironmentServerType.
     */
    public static final EnvironmentServerType AZURE_API_MANAGEMENT = fromString("Azure API Management");

    /**
     * Static value Azure compute service for EnvironmentServerType.
     */
    public static final EnvironmentServerType AZURE_COMPUTE_SERVICE = fromString("Azure compute service");

    /**
     * Static value Apigee API Management for EnvironmentServerType.
     */
    public static final EnvironmentServerType APIGEE_API_MANAGEMENT = fromString("Apigee API Management");

    /**
     * Static value AWS API Gateway for EnvironmentServerType.
     */
    public static final EnvironmentServerType AWS_API_GATEWAY = fromString("AWS API Gateway");

    /**
     * Static value Kong API Gateway for EnvironmentServerType.
     */
    public static final EnvironmentServerType KONG_API_GATEWAY = fromString("Kong API Gateway");

    /**
     * Static value Kubernetes for EnvironmentServerType.
     */
    public static final EnvironmentServerType KUBERNETES = fromString("Kubernetes");

    /**
     * Static value MuleSoft API Management for EnvironmentServerType.
     */
    public static final EnvironmentServerType MULE_SOFT_API_MANAGEMENT = fromString("MuleSoft API Management");

    /**
     * Creates a new instance of EnvironmentServerType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public EnvironmentServerType() {
    }

    /**
     * Creates or finds a EnvironmentServerType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding EnvironmentServerType.
     */
    @JsonCreator
    public static EnvironmentServerType fromString(String name) {
        return fromString(name, EnvironmentServerType.class);
    }

    /**
     * Gets known EnvironmentServerType values.
     * 
     * @return known EnvironmentServerType values.
     */
    public static Collection<EnvironmentServerType> values() {
        return values(EnvironmentServerType.class);
    }
}
