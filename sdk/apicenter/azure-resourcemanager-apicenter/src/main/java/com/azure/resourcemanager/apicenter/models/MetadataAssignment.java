// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Assignment metadata.
 */
@Fluent
public final class MetadataAssignment implements JsonSerializable<MetadataAssignment> {
    /*
     * The entities this metadata schema component gets applied to.
     */
    private MetadataAssignmentEntity entity;

    /*
     * Required assignment
     */
    private Boolean required;

    /*
     * Deprecated assignment
     */
    private Boolean deprecated;

    /**
     * Creates an instance of MetadataAssignment class.
     */
    public MetadataAssignment() {
    }

    /**
     * Get the entity property: The entities this metadata schema component gets applied to.
     * 
     * @return the entity value.
     */
    public MetadataAssignmentEntity entity() {
        return this.entity;
    }

    /**
     * Set the entity property: The entities this metadata schema component gets applied to.
     * 
     * @param entity the entity value to set.
     * @return the MetadataAssignment object itself.
     */
    public MetadataAssignment withEntity(MetadataAssignmentEntity entity) {
        this.entity = entity;
        return this;
    }

    /**
     * Get the required property: Required assignment.
     * 
     * @return the required value.
     */
    public Boolean required() {
        return this.required;
    }

    /**
     * Set the required property: Required assignment.
     * 
     * @param required the required value to set.
     * @return the MetadataAssignment object itself.
     */
    public MetadataAssignment withRequired(Boolean required) {
        this.required = required;
        return this;
    }

    /**
     * Get the deprecated property: Deprecated assignment.
     * 
     * @return the deprecated value.
     */
    public Boolean deprecated() {
        return this.deprecated;
    }

    /**
     * Set the deprecated property: Deprecated assignment.
     * 
     * @param deprecated the deprecated value to set.
     * @return the MetadataAssignment object itself.
     */
    public MetadataAssignment withDeprecated(Boolean deprecated) {
        this.deprecated = deprecated;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("entity", this.entity == null ? null : this.entity.toString());
        jsonWriter.writeBooleanField("required", this.required);
        jsonWriter.writeBooleanField("deprecated", this.deprecated);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MetadataAssignment from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MetadataAssignment if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the MetadataAssignment.
     */
    public static MetadataAssignment fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MetadataAssignment deserializedMetadataAssignment = new MetadataAssignment();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("entity".equals(fieldName)) {
                    deserializedMetadataAssignment.entity = MetadataAssignmentEntity.fromString(reader.getString());
                } else if ("required".equals(fieldName)) {
                    deserializedMetadataAssignment.required = reader.getNullable(JsonReader::getBoolean);
                } else if ("deprecated".equals(fieldName)) {
                    deserializedMetadataAssignment.deprecated = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMetadataAssignment;
        });
    }
}
