// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Server information of the environment.
 */
@Fluent
public final class EnvironmentServer {
    /*
     * Type of the server that represents the environment.
     */
    @JsonProperty(value = "type")
    private EnvironmentServerType type;

    /*
     * The location of the management portal
     */
    @JsonProperty(value = "managementPortalUri")
    private List<String> managementPortalUri;

    /**
     * Creates an instance of EnvironmentServer class.
     */
    public EnvironmentServer() {
    }

    /**
     * Get the type property: Type of the server that represents the environment.
     * 
     * @return the type value.
     */
    public EnvironmentServerType type() {
        return this.type;
    }

    /**
     * Set the type property: Type of the server that represents the environment.
     * 
     * @param type the type value to set.
     * @return the EnvironmentServer object itself.
     */
    public EnvironmentServer withType(EnvironmentServerType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the managementPortalUri property: The location of the management portal.
     * 
     * @return the managementPortalUri value.
     */
    public List<String> managementPortalUri() {
        return this.managementPortalUri;
    }

    /**
     * Set the managementPortalUri property: The location of the management portal.
     * 
     * @param managementPortalUri the managementPortalUri value to set.
     * @return the EnvironmentServer object itself.
     */
    public EnvironmentServer withManagementPortalUri(List<String> managementPortalUri) {
        this.managementPortalUri = managementPortalUri;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
