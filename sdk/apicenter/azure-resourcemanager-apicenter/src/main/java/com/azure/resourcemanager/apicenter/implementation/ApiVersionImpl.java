// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.apicenter.fluent.models.ApiVersionInner;
import com.azure.resourcemanager.apicenter.models.ApiVersion;
import com.azure.resourcemanager.apicenter.models.ApiVersionProperties;

public final class ApiVersionImpl implements ApiVersion, ApiVersion.Definition, ApiVersion.Update {
    private ApiVersionInner innerObject;

    private final com.azure.resourcemanager.apicenter.ApiCenterManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ApiVersionProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ApiVersionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.apicenter.ApiCenterManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serviceName;

    private String workspaceName;

    private String apiName;

    private String versionName;

    public ApiVersionImpl withExistingApi(String resourceGroupName, String serviceName, String workspaceName,
        String apiName) {
        this.resourceGroupName = resourceGroupName;
        this.serviceName = serviceName;
        this.workspaceName = workspaceName;
        this.apiName = apiName;
        return this;
    }

    public ApiVersion create() {
        this.innerObject = serviceManager.serviceClient().getApiVersions().createOrUpdateWithResponse(resourceGroupName,
            serviceName, workspaceName, apiName, versionName, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public ApiVersion create(Context context) {
        this.innerObject = serviceManager.serviceClient().getApiVersions().createOrUpdateWithResponse(resourceGroupName,
            serviceName, workspaceName, apiName, versionName, this.innerModel(), context).getValue();
        return this;
    }

    ApiVersionImpl(String name, com.azure.resourcemanager.apicenter.ApiCenterManager serviceManager) {
        this.innerObject = new ApiVersionInner();
        this.serviceManager = serviceManager;
        this.versionName = name;
    }

    public ApiVersionImpl update() {
        return this;
    }

    public ApiVersion apply() {
        this.innerObject = serviceManager.serviceClient().getApiVersions().createOrUpdateWithResponse(resourceGroupName,
            serviceName, workspaceName, apiName, versionName, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public ApiVersion apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getApiVersions().createOrUpdateWithResponse(resourceGroupName,
            serviceName, workspaceName, apiName, versionName, this.innerModel(), context).getValue();
        return this;
    }

    ApiVersionImpl(ApiVersionInner innerObject, com.azure.resourcemanager.apicenter.ApiCenterManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serviceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "services");
        this.workspaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.apiName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "apis");
        this.versionName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "versions");
    }

    public ApiVersion refresh() {
        this.innerObject = serviceManager.serviceClient().getApiVersions()
            .getWithResponse(resourceGroupName, serviceName, workspaceName, apiName, versionName, Context.NONE)
            .getValue();
        return this;
    }

    public ApiVersion refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getApiVersions()
            .getWithResponse(resourceGroupName, serviceName, workspaceName, apiName, versionName, context).getValue();
        return this;
    }

    public ApiVersionImpl withProperties(ApiVersionProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
