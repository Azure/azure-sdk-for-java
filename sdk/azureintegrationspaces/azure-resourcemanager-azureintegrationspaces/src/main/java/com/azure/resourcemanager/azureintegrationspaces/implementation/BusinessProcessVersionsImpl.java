// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureintegrationspaces.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azureintegrationspaces.fluent.BusinessProcessVersionsClient;
import com.azure.resourcemanager.azureintegrationspaces.fluent.models.BusinessProcessVersionInner;
import com.azure.resourcemanager.azureintegrationspaces.models.BusinessProcessVersion;
import com.azure.resourcemanager.azureintegrationspaces.models.BusinessProcessVersions;
import java.util.List;

public final class BusinessProcessVersionsImpl implements BusinessProcessVersions {
    private static final ClientLogger LOGGER = new ClientLogger(BusinessProcessVersionsImpl.class);

    private final BusinessProcessVersionsClient innerClient;

    private final com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager serviceManager;

    public BusinessProcessVersionsImpl(
        BusinessProcessVersionsClient innerClient,
        com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<BusinessProcessVersion> listByBusinessProcess(
        String resourceGroupName, String spaceName, String applicationName, String businessProcessName) {
        PagedIterable<BusinessProcessVersionInner> inner =
            this
                .serviceClient()
                .listByBusinessProcess(resourceGroupName, spaceName, applicationName, businessProcessName);
        return Utils.mapPage(inner, inner1 -> new BusinessProcessVersionImpl(inner1, this.manager()));
    }

    public PagedIterable<BusinessProcessVersion> listByBusinessProcess(
        String resourceGroupName,
        String spaceName,
        String applicationName,
        String businessProcessName,
        Integer top,
        Integer skip,
        Integer maxPageSize,
        String filter,
        List<String> select,
        List<String> expand,
        List<String> orderBy,
        Context context) {
        PagedIterable<BusinessProcessVersionInner> inner =
            this
                .serviceClient()
                .listByBusinessProcess(
                    resourceGroupName,
                    spaceName,
                    applicationName,
                    businessProcessName,
                    top,
                    skip,
                    maxPageSize,
                    filter,
                    select,
                    expand,
                    orderBy,
                    context);
        return Utils.mapPage(inner, inner1 -> new BusinessProcessVersionImpl(inner1, this.manager()));
    }

    public Response<BusinessProcessVersion> getWithResponse(
        String resourceGroupName,
        String spaceName,
        String applicationName,
        String businessProcessName,
        String businessProcessVersion,
        Context context) {
        Response<BusinessProcessVersionInner> inner =
            this
                .serviceClient()
                .getWithResponse(
                    resourceGroupName,
                    spaceName,
                    applicationName,
                    businessProcessName,
                    businessProcessVersion,
                    context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new BusinessProcessVersionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BusinessProcessVersion get(
        String resourceGroupName,
        String spaceName,
        String applicationName,
        String businessProcessName,
        String businessProcessVersion) {
        BusinessProcessVersionInner inner =
            this
                .serviceClient()
                .get(resourceGroupName, spaceName, applicationName, businessProcessName, businessProcessVersion);
        if (inner != null) {
            return new BusinessProcessVersionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private BusinessProcessVersionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager manager() {
        return this.serviceManager;
    }
}
