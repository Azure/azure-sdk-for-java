// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureintegrationspaces.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The workflow tracking definition. */
@Fluent
public final class FlowTrackingDefinition {
    /*
     * The tracking correlation context.
     */
    @JsonProperty(value = "correlationContext")
    private TrackingCorrelationContext correlationContext;

    /*
     * The tracking events.
     */
    @JsonProperty(value = "events")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, TrackingEventDefinition> events;

    /** Creates an instance of FlowTrackingDefinition class. */
    public FlowTrackingDefinition() {
    }

    /**
     * Get the correlationContext property: The tracking correlation context.
     *
     * @return the correlationContext value.
     */
    public TrackingCorrelationContext correlationContext() {
        return this.correlationContext;
    }

    /**
     * Set the correlationContext property: The tracking correlation context.
     *
     * @param correlationContext the correlationContext value to set.
     * @return the FlowTrackingDefinition object itself.
     */
    public FlowTrackingDefinition withCorrelationContext(TrackingCorrelationContext correlationContext) {
        this.correlationContext = correlationContext;
        return this;
    }

    /**
     * Get the events property: The tracking events.
     *
     * @return the events value.
     */
    public Map<String, TrackingEventDefinition> events() {
        return this.events;
    }

    /**
     * Set the events property: The tracking events.
     *
     * @param events the events value to set.
     * @return the FlowTrackingDefinition object itself.
     */
    public FlowTrackingDefinition withEvents(Map<String, TrackingEventDefinition> events) {
        this.events = events;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (correlationContext() != null) {
            correlationContext().validate();
        }
        if (events() != null) {
            events()
                .values()
                .forEach(
                    e -> {
                        if (e != null) {
                            e.validate();
                        }
                    });
        }
    }
}
