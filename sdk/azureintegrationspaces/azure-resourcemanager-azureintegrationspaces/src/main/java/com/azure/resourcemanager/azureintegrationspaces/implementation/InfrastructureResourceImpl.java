// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureintegrationspaces.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azureintegrationspaces.fluent.models.InfrastructureResourceInner;
import com.azure.resourcemanager.azureintegrationspaces.models.InfrastructureResource;
import com.azure.resourcemanager.azureintegrationspaces.models.InfrastructureResourceUpdate;
import com.azure.resourcemanager.azureintegrationspaces.models.ProvisioningState;

public final class InfrastructureResourceImpl
    implements InfrastructureResource, InfrastructureResource.Definition, InfrastructureResource.Update {
    private InfrastructureResourceInner innerObject;

    private final com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceType() {
        return this.innerModel().resourceType();
    }

    public String resourceId() {
        return this.innerModel().resourceId();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public InfrastructureResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String spaceName;

    private String infrastructureResourceName;

    private InfrastructureResourceUpdate updateProperties;

    public InfrastructureResourceImpl withExistingSpace(String resourceGroupName, String spaceName) {
        this.resourceGroupName = resourceGroupName;
        this.spaceName = spaceName;
        return this;
    }

    public InfrastructureResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInfrastructureResources()
                .createOrUpdateWithResponse(
                    resourceGroupName, spaceName, infrastructureResourceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public InfrastructureResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInfrastructureResources()
                .createOrUpdateWithResponse(
                    resourceGroupName, spaceName, infrastructureResourceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    InfrastructureResourceImpl(
        String name, com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager serviceManager) {
        this.innerObject = new InfrastructureResourceInner();
        this.serviceManager = serviceManager;
        this.infrastructureResourceName = name;
    }

    public InfrastructureResourceImpl update() {
        this.updateProperties = new InfrastructureResourceUpdate();
        return this;
    }

    public InfrastructureResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInfrastructureResources()
                .patchWithResponse(
                    resourceGroupName, spaceName, infrastructureResourceName, updateProperties, Context.NONE)
                .getValue();
        return this;
    }

    public InfrastructureResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInfrastructureResources()
                .patchWithResponse(resourceGroupName, spaceName, infrastructureResourceName, updateProperties, context)
                .getValue();
        return this;
    }

    InfrastructureResourceImpl(
        InfrastructureResourceInner innerObject,
        com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.spaceName = Utils.getValueFromIdByName(innerObject.id(), "spaces");
        this.infrastructureResourceName = Utils.getValueFromIdByName(innerObject.id(), "infrastructureResources");
    }

    public InfrastructureResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInfrastructureResources()
                .getWithResponse(resourceGroupName, spaceName, infrastructureResourceName, Context.NONE)
                .getValue();
        return this;
    }

    public InfrastructureResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInfrastructureResources()
                .getWithResponse(resourceGroupName, spaceName, infrastructureResourceName, context)
                .getValue();
        return this;
    }

    public InfrastructureResourceImpl withResourceType(String resourceType) {
        if (isInCreateMode()) {
            this.innerModel().withResourceType(resourceType);
            return this;
        } else {
            this.updateProperties.withResourceType(resourceType);
            return this;
        }
    }

    public InfrastructureResourceImpl withResourceId(String resourceId) {
        if (isInCreateMode()) {
            this.innerModel().withResourceId(resourceId);
            return this;
        } else {
            this.updateProperties.withResourceId(resourceId);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
