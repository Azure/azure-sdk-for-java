// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureintegrationspaces.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azureintegrationspaces.fluent.models.ApplicationResourceInner;
import com.azure.resourcemanager.azureintegrationspaces.models.ApplicationResource;
import com.azure.resourcemanager.azureintegrationspaces.models.ApplicationResourceUpdate;
import com.azure.resourcemanager.azureintegrationspaces.models.ProvisioningState;

public final class ApplicationResourceImpl
    implements ApplicationResource, ApplicationResource.Definition, ApplicationResource.Update {
    private ApplicationResourceInner innerObject;

    private final com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceType() {
        return this.innerModel().resourceType();
    }

    public String resourceId() {
        return this.innerModel().resourceId();
    }

    public String resourceKind() {
        return this.innerModel().resourceKind();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ApplicationResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String spaceName;

    private String applicationName;

    private String resourceName;

    private ApplicationResourceUpdate updateProperties;

    public ApplicationResourceImpl withExistingApplication(
        String resourceGroupName, String spaceName, String applicationName) {
        this.resourceGroupName = resourceGroupName;
        this.spaceName = spaceName;
        this.applicationName = applicationName;
        return this;
    }

    public ApplicationResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationResources()
                .createOrUpdateWithResponse(
                    resourceGroupName, spaceName, applicationName, resourceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationResources()
                .createOrUpdateWithResponse(
                    resourceGroupName, spaceName, applicationName, resourceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ApplicationResourceImpl(
        String name, com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager serviceManager) {
        this.innerObject = new ApplicationResourceInner();
        this.serviceManager = serviceManager;
        this.resourceName = name;
    }

    public ApplicationResourceImpl update() {
        this.updateProperties = new ApplicationResourceUpdate();
        return this;
    }

    public ApplicationResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationResources()
                .patchWithResponse(
                    resourceGroupName, spaceName, applicationName, resourceName, updateProperties, Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationResources()
                .patchWithResponse(
                    resourceGroupName, spaceName, applicationName, resourceName, updateProperties, context)
                .getValue();
        return this;
    }

    ApplicationResourceImpl(
        ApplicationResourceInner innerObject,
        com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.spaceName = Utils.getValueFromIdByName(innerObject.id(), "spaces");
        this.applicationName = Utils.getValueFromIdByName(innerObject.id(), "applications");
        this.resourceName = Utils.getValueFromIdByName(innerObject.id(), "resources");
    }

    public ApplicationResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationResources()
                .getWithResponse(resourceGroupName, spaceName, applicationName, resourceName, Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationResources()
                .getWithResponse(resourceGroupName, spaceName, applicationName, resourceName, context)
                .getValue();
        return this;
    }

    public ApplicationResourceImpl withResourceType(String resourceType) {
        if (isInCreateMode()) {
            this.innerModel().withResourceType(resourceType);
            return this;
        } else {
            this.updateProperties.withResourceType(resourceType);
            return this;
        }
    }

    public ApplicationResourceImpl withResourceId(String resourceId) {
        if (isInCreateMode()) {
            this.innerModel().withResourceId(resourceId);
            return this;
        } else {
            this.updateProperties.withResourceId(resourceId);
            return this;
        }
    }

    public ApplicationResourceImpl withResourceKind(String resourceKind) {
        if (isInCreateMode()) {
            this.innerModel().withResourceKind(resourceKind);
            return this;
        } else {
            this.updateProperties.withResourceKind(resourceKind);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
