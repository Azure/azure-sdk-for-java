// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureintegrationspaces.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azureintegrationspaces.fluent.models.SpaceInner;
import com.azure.resourcemanager.azureintegrationspaces.models.ProvisioningState;
import com.azure.resourcemanager.azureintegrationspaces.models.Space;
import com.azure.resourcemanager.azureintegrationspaces.models.SpaceUpdate;
import java.util.Collections;
import java.util.Map;

public final class SpaceImpl implements Space, Space.Definition, Space.Update {
    private SpaceInner innerObject;

    private final com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String description() {
        return this.innerModel().description();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SpaceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String spaceName;

    private SpaceUpdate updateProperties;

    public SpaceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public Space create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSpaces()
                .createOrUpdateWithResponse(resourceGroupName, spaceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Space create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSpaces()
                .createOrUpdateWithResponse(resourceGroupName, spaceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    SpaceImpl(
        String name, com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager serviceManager) {
        this.innerObject = new SpaceInner();
        this.serviceManager = serviceManager;
        this.spaceName = name;
    }

    public SpaceImpl update() {
        this.updateProperties = new SpaceUpdate();
        return this;
    }

    public Space apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSpaces()
                .patchWithResponse(resourceGroupName, spaceName, updateProperties, Context.NONE)
                .getValue();
        return this;
    }

    public Space apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSpaces()
                .patchWithResponse(resourceGroupName, spaceName, updateProperties, context)
                .getValue();
        return this;
    }

    SpaceImpl(
        SpaceInner innerObject,
        com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.spaceName = Utils.getValueFromIdByName(innerObject.id(), "spaces");
    }

    public Space refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSpaces()
                .getByResourceGroupWithResponse(resourceGroupName, spaceName, Context.NONE)
                .getValue();
        return this;
    }

    public Space refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSpaces()
                .getByResourceGroupWithResponse(resourceGroupName, spaceName, context)
                .getValue();
        return this;
    }

    public SpaceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public SpaceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public SpaceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public SpaceImpl withDescription(String description) {
        if (isInCreateMode()) {
            this.innerModel().withDescription(description);
            return this;
        } else {
            this.updateProperties.withDescription(description);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
