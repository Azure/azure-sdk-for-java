// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureintegrationspaces.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azureintegrationspaces.fluent.models.BusinessProcessInner;
import java.util.Map;

/** An immutable client-side representation of BusinessProcess. */
public interface BusinessProcess {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The status of the last operation.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the version property: The version of the business process.
     *
     * @return the version value.
     */
    String version();

    /**
     * Gets the description property: The description of the business process.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the tableName property: The table name of the business process.
     *
     * @return the tableName value.
     */
    String tableName();

    /**
     * Gets the trackingDataStoreReferenceName property: The tracking data store reference name.
     *
     * @return the trackingDataStoreReferenceName value.
     */
    String trackingDataStoreReferenceName();

    /**
     * Gets the identifier property: The business process identifier.
     *
     * @return the identifier value.
     */
    BusinessProcessIdentifier identifier();

    /**
     * Gets the businessProcessStages property: The business process stages.
     *
     * @return the businessProcessStages value.
     */
    Map<String, BusinessProcessStage> businessProcessStages();

    /**
     * Gets the businessProcessMapping property: The business process mapping.
     *
     * @return the businessProcessMapping value.
     */
    Map<String, BusinessProcessMappingItem> businessProcessMapping();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.azureintegrationspaces.fluent.models.BusinessProcessInner object.
     *
     * @return the inner object.
     */
    BusinessProcessInner innerModel();

    /** The entirety of the BusinessProcess definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /** The BusinessProcess definition stages. */
    interface DefinitionStages {
        /** The first stage of the BusinessProcess definition. */
        interface Blank extends WithParentResource {
        }

        /** The stage of the BusinessProcess definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, spaceName, applicationName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param spaceName The name of the space.
             * @param applicationName The name of the Application.
             * @return the next definition stage.
             */
            WithCreate withExistingApplication(String resourceGroupName, String spaceName, String applicationName);
        }

        /**
         * The stage of the BusinessProcess definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithDescription,
                DefinitionStages.WithTableName,
                DefinitionStages.WithTrackingDataStoreReferenceName,
                DefinitionStages.WithIdentifier,
                DefinitionStages.WithBusinessProcessStages,
                DefinitionStages.WithBusinessProcessMapping {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            BusinessProcess create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            BusinessProcess create(Context context);
        }

        /** The stage of the BusinessProcess definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: The description of the business process..
             *
             * @param description The description of the business process.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }

        /** The stage of the BusinessProcess definition allowing to specify tableName. */
        interface WithTableName {
            /**
             * Specifies the tableName property: The table name of the business process..
             *
             * @param tableName The table name of the business process.
             * @return the next definition stage.
             */
            WithCreate withTableName(String tableName);
        }

        /** The stage of the BusinessProcess definition allowing to specify trackingDataStoreReferenceName. */
        interface WithTrackingDataStoreReferenceName {
            /**
             * Specifies the trackingDataStoreReferenceName property: The tracking data store reference name..
             *
             * @param trackingDataStoreReferenceName The tracking data store reference name.
             * @return the next definition stage.
             */
            WithCreate withTrackingDataStoreReferenceName(String trackingDataStoreReferenceName);
        }

        /** The stage of the BusinessProcess definition allowing to specify identifier. */
        interface WithIdentifier {
            /**
             * Specifies the identifier property: The business process identifier..
             *
             * @param identifier The business process identifier.
             * @return the next definition stage.
             */
            WithCreate withIdentifier(BusinessProcessIdentifier identifier);
        }

        /** The stage of the BusinessProcess definition allowing to specify businessProcessStages. */
        interface WithBusinessProcessStages {
            /**
             * Specifies the businessProcessStages property: The business process stages..
             *
             * @param businessProcessStages The business process stages.
             * @return the next definition stage.
             */
            WithCreate withBusinessProcessStages(Map<String, BusinessProcessStage> businessProcessStages);
        }

        /** The stage of the BusinessProcess definition allowing to specify businessProcessMapping. */
        interface WithBusinessProcessMapping {
            /**
             * Specifies the businessProcessMapping property: The business process mapping..
             *
             * @param businessProcessMapping The business process mapping.
             * @return the next definition stage.
             */
            WithCreate withBusinessProcessMapping(Map<String, BusinessProcessMappingItem> businessProcessMapping);
        }
    }

    /**
     * Begins update for the BusinessProcess resource.
     *
     * @return the stage of resource update.
     */
    BusinessProcess.Update update();

    /** The template for BusinessProcess update. */
    interface Update
        extends UpdateStages.WithDescription,
            UpdateStages.WithTableName,
            UpdateStages.WithTrackingDataStoreReferenceName,
            UpdateStages.WithIdentifier,
            UpdateStages.WithBusinessProcessStages,
            UpdateStages.WithBusinessProcessMapping {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        BusinessProcess apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        BusinessProcess apply(Context context);
    }

    /** The BusinessProcess update stages. */
    interface UpdateStages {
        /** The stage of the BusinessProcess update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: The description of the business process..
             *
             * @param description The description of the business process.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }

        /** The stage of the BusinessProcess update allowing to specify tableName. */
        interface WithTableName {
            /**
             * Specifies the tableName property: The table name of the business process..
             *
             * @param tableName The table name of the business process.
             * @return the next definition stage.
             */
            Update withTableName(String tableName);
        }

        /** The stage of the BusinessProcess update allowing to specify trackingDataStoreReferenceName. */
        interface WithTrackingDataStoreReferenceName {
            /**
             * Specifies the trackingDataStoreReferenceName property: The tracking data store reference name..
             *
             * @param trackingDataStoreReferenceName The tracking data store reference name.
             * @return the next definition stage.
             */
            Update withTrackingDataStoreReferenceName(String trackingDataStoreReferenceName);
        }

        /** The stage of the BusinessProcess update allowing to specify identifier. */
        interface WithIdentifier {
            /**
             * Specifies the identifier property: The business process identifier..
             *
             * @param identifier The business process identifier.
             * @return the next definition stage.
             */
            Update withIdentifier(BusinessProcessIdentifier identifier);
        }

        /** The stage of the BusinessProcess update allowing to specify businessProcessStages. */
        interface WithBusinessProcessStages {
            /**
             * Specifies the businessProcessStages property: The business process stages..
             *
             * @param businessProcessStages The business process stages.
             * @return the next definition stage.
             */
            Update withBusinessProcessStages(Map<String, BusinessProcessStage> businessProcessStages);
        }

        /** The stage of the BusinessProcess update allowing to specify businessProcessMapping. */
        interface WithBusinessProcessMapping {
            /**
             * Specifies the businessProcessMapping property: The business process mapping..
             *
             * @param businessProcessMapping The business process mapping.
             * @return the next definition stage.
             */
            Update withBusinessProcessMapping(Map<String, BusinessProcessMappingItem> businessProcessMapping);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    BusinessProcess refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    BusinessProcess refresh(Context context);
}
