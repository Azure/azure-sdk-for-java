// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureintegrationspaces.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.azureintegrationspaces.fluent.models.BusinessProcessUpdateProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The type used for update operations of the BusinessProcess. */
@Fluent
public final class BusinessProcessUpdate {
    /*
     * The updatable properties of the BusinessProcess.
     */
    @JsonProperty(value = "properties")
    private BusinessProcessUpdateProperties innerProperties;

    /** Creates an instance of BusinessProcessUpdate class. */
    public BusinessProcessUpdate() {
    }

    /**
     * Get the innerProperties property: The updatable properties of the BusinessProcess.
     *
     * @return the innerProperties value.
     */
    private BusinessProcessUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the description property: The description of the business process.
     *
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: The description of the business process.
     *
     * @param description the description value to set.
     * @return the BusinessProcessUpdate object itself.
     */
    public BusinessProcessUpdate withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BusinessProcessUpdateProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the tableName property: The table name of the business process.
     *
     * @return the tableName value.
     */
    public String tableName() {
        return this.innerProperties() == null ? null : this.innerProperties().tableName();
    }

    /**
     * Set the tableName property: The table name of the business process.
     *
     * @param tableName the tableName value to set.
     * @return the BusinessProcessUpdate object itself.
     */
    public BusinessProcessUpdate withTableName(String tableName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BusinessProcessUpdateProperties();
        }
        this.innerProperties().withTableName(tableName);
        return this;
    }

    /**
     * Get the trackingDataStoreReferenceName property: The tracking data store reference name.
     *
     * @return the trackingDataStoreReferenceName value.
     */
    public String trackingDataStoreReferenceName() {
        return this.innerProperties() == null ? null : this.innerProperties().trackingDataStoreReferenceName();
    }

    /**
     * Set the trackingDataStoreReferenceName property: The tracking data store reference name.
     *
     * @param trackingDataStoreReferenceName the trackingDataStoreReferenceName value to set.
     * @return the BusinessProcessUpdate object itself.
     */
    public BusinessProcessUpdate withTrackingDataStoreReferenceName(String trackingDataStoreReferenceName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BusinessProcessUpdateProperties();
        }
        this.innerProperties().withTrackingDataStoreReferenceName(trackingDataStoreReferenceName);
        return this;
    }

    /**
     * Get the identifier property: The business process identifier.
     *
     * @return the identifier value.
     */
    public BusinessProcessIdentifier identifier() {
        return this.innerProperties() == null ? null : this.innerProperties().identifier();
    }

    /**
     * Set the identifier property: The business process identifier.
     *
     * @param identifier the identifier value to set.
     * @return the BusinessProcessUpdate object itself.
     */
    public BusinessProcessUpdate withIdentifier(BusinessProcessIdentifier identifier) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BusinessProcessUpdateProperties();
        }
        this.innerProperties().withIdentifier(identifier);
        return this;
    }

    /**
     * Get the businessProcessStages property: The business process stages.
     *
     * @return the businessProcessStages value.
     */
    public Map<String, BusinessProcessStage> businessProcessStages() {
        return this.innerProperties() == null ? null : this.innerProperties().businessProcessStages();
    }

    /**
     * Set the businessProcessStages property: The business process stages.
     *
     * @param businessProcessStages the businessProcessStages value to set.
     * @return the BusinessProcessUpdate object itself.
     */
    public BusinessProcessUpdate withBusinessProcessStages(Map<String, BusinessProcessStage> businessProcessStages) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BusinessProcessUpdateProperties();
        }
        this.innerProperties().withBusinessProcessStages(businessProcessStages);
        return this;
    }

    /**
     * Get the businessProcessMapping property: The business process mapping.
     *
     * @return the businessProcessMapping value.
     */
    public Map<String, BusinessProcessMappingItem> businessProcessMapping() {
        return this.innerProperties() == null ? null : this.innerProperties().businessProcessMapping();
    }

    /**
     * Set the businessProcessMapping property: The business process mapping.
     *
     * @param businessProcessMapping the businessProcessMapping value to set.
     * @return the BusinessProcessUpdate object itself.
     */
    public BusinessProcessUpdate withBusinessProcessMapping(
        Map<String, BusinessProcessMappingItem> businessProcessMapping) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BusinessProcessUpdateProperties();
        }
        this.innerProperties().withBusinessProcessMapping(businessProcessMapping);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
