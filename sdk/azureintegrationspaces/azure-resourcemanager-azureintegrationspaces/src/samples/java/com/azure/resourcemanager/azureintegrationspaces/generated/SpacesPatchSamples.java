// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureintegrationspaces.generated;

import com.azure.resourcemanager.azureintegrationspaces.models.Space;
import java.util.HashMap;
import java.util.Map;

/** Samples for Spaces Patch. */
public final class SpacesPatchSamples {
    /*
     * x-ms-original-file: specification/azureintegrationspaces/resource-manager/Microsoft.IntegrationSpaces/preview/2023-11-14-preview/examples/Spaces_Patch.json
     */
    /**
     * Sample code: PatchSpace.
     *
     * @param manager Entry point to AzureintegrationspacesManager.
     */
    public static void patchSpace(
        com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager manager) {
        Space resource =
            manager
                .spaces()
                .getByResourceGroupWithResponse("testrg", "Space1", com.azure.core.util.Context.NONE)
                .getValue();
        resource
            .update()
            .withTags(mapOf("key1", "fakeTokenPlaceholder"))
            .withDescription("This is the user provided description of the space resource.")
            .apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
