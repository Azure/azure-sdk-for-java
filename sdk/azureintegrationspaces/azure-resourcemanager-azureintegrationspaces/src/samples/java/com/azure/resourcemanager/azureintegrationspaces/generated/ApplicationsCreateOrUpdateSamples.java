// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureintegrationspaces.generated;

import com.azure.resourcemanager.azureintegrationspaces.models.TrackingDataStore;
import java.util.HashMap;
import java.util.Map;

/** Samples for Applications CreateOrUpdate. */
public final class ApplicationsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/azureintegrationspaces/resource-manager/Microsoft.IntegrationSpaces/preview/2023-11-14-preview/examples/Applications_CreateOrUpdate.json
     */
    /**
     * Sample code: CreateOrUpdateApplication.
     *
     * @param manager Entry point to AzureintegrationspacesManager.
     */
    public static void createOrUpdateApplication(
        com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager manager) {
        manager
            .applications()
            .define("Application1")
            .withRegion("CentralUS")
            .withExistingSpace("testrg", "Space1")
            .withTags(mapOf("key1", "fakeTokenPlaceholder"))
            .withDescription("This is the user provided description of the application.")
            .withTrackingDataStores(
                mapOf(
                    "dataStoreName1",
                    new TrackingDataStore()
                        .withDatabaseName("testDatabase1")
                        .withDataStoreResourceId(
                            "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.Kusto/Clusters/cluster1")
                        .withDataStoreUri("https://someClusterName.someRegionName.kusto.windows.net")
                        .withDataStoreIngestionUri("https://ingest-someClusterName.someRegionName.kusto.windows.net"),
                    "dataStoreName2",
                    new TrackingDataStore()
                        .withDatabaseName("testDatabase1")
                        .withDataStoreResourceId(
                            "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.Kusto/Clusters/cluster1")
                        .withDataStoreUri("https://someClusterName.someRegionName.kusto.windows.net")
                        .withDataStoreIngestionUri("https://ingest-someClusterName.someRegionName.kusto.windows.net")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
