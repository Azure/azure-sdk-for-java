// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureintegrationspaces.generated;

import com.azure.resourcemanager.azureintegrationspaces.models.BusinessProcessIdentifier;
import com.azure.resourcemanager.azureintegrationspaces.models.BusinessProcessMappingItem;
import com.azure.resourcemanager.azureintegrationspaces.models.BusinessProcessStage;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/** Samples for BusinessProcesses CreateOrUpdate. */
public final class BusinessProcessesCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/azureintegrationspaces/resource-manager/Microsoft.IntegrationSpaces/preview/2023-11-14-preview/examples/BusinessProcesses_CreateOrUpdate.json
     */
    /**
     * Sample code: CreateOrUpdateBusinessProcess.
     *
     * @param manager Entry point to AzureintegrationspacesManager.
     */
    public static void createOrUpdateBusinessProcess(
        com.azure.resourcemanager.azureintegrationspaces.AzureintegrationspacesManager manager) {
        manager
            .businessProcesses()
            .define("BusinessProcess1")
            .withExistingApplication("testrg", "Space1", "Application1")
            .withDescription("First Business Process")
            .withTableName("table1")
            .withTrackingDataStoreReferenceName("trackingDataStoreReferenceName1")
            .withIdentifier(
                new BusinessProcessIdentifier().withPropertyName("businessIdentifier-1").withPropertyType("String"))
            .withBusinessProcessStages(
                mapOf(
                    "Completed",
                    new BusinessProcessStage().withDescription("Completed").withStagesBefore(Arrays.asList("Shipped")),
                    "Denied",
                    new BusinessProcessStage().withDescription("Denied").withStagesBefore(Arrays.asList("Processing")),
                    "Processing",
                    new BusinessProcessStage()
                        .withDescription("Processing")
                        .withProperties(
                            mapOf("ApprovalState", "String", "ApproverName", "String", "POAmount", "Integer"))
                        .withStagesBefore(Arrays.asList("Received")),
                    "Received",
                    new BusinessProcessStage()
                        .withDescription("received")
                        .withProperties(
                            mapOf("City", "String", "Product", "String", "Quantity", "Integer", "State", "String")),
                    "Shipped",
                    new BusinessProcessStage()
                        .withDescription("Shipped")
                        .withProperties(mapOf("ShipPriority", "Integer", "TrackingID", "Integer"))
                        .withStagesBefore(Arrays.asList("Denied"))))
            .withBusinessProcessMapping(
                mapOf(
                    "Completed",
                    new BusinessProcessMappingItem()
                        .withLogicAppResourceId(
                            "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1")
                        .withWorkflowName("Fulfillment")
                        .withOperationName("CompletedPO")
                        .withOperationType("Action"),
                    "Denied",
                    new BusinessProcessMappingItem()
                        .withLogicAppResourceId(
                            "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1")
                        .withWorkflowName("Fulfillment")
                        .withOperationName("DeniedPO")
                        .withOperationType("Action"),
                    "Processing",
                    new BusinessProcessMappingItem()
                        .withLogicAppResourceId(
                            "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1")
                        .withWorkflowName("PurchaseOrder")
                        .withOperationName("ApprovedPO")
                        .withOperationType("Action"),
                    "Received",
                    new BusinessProcessMappingItem()
                        .withLogicAppResourceId(
                            "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1")
                        .withWorkflowName("PurchaseOrder")
                        .withOperationName("manual")
                        .withOperationType("Trigger"),
                    "Shipped",
                    new BusinessProcessMappingItem()
                        .withLogicAppResourceId(
                            "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1")
                        .withWorkflowName("Fulfillment")
                        .withOperationName("ShippedPO")
                        .withOperationType("Action")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
