/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2018_11_01_preview;

import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.billing.v2018_11_01_preview.implementation.TransfersInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing Transfers.
 */
public interface Transfers extends HasInner<TransfersInner> {
    /**
     * Gets the transfer details for given transfer Id.
     *
     * @param billingAccountName Billing Account Id.
     * @param invoiceSectionName InvoiceSection Id.
     * @param transferName Transfer Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<TransferDetails> getAsync(String billingAccountName, String invoiceSectionName, String transferName);

    /**
     * Lists all transfer's details initiated from given invoice section.
     *
     * @param billingAccountName Billing Account Id.
     * @param invoiceSectionName InvoiceSection Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<TransferDetails> listAsync(final String billingAccountName, final String invoiceSectionName);

    /**
     * Cancels the transfer for given transfer Id.
     *
     * @param billingAccountName Billing Account Id.
     * @param invoiceSectionName InvoiceSection Id.
     * @param transferName Transfer Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable cancelAsync(String billingAccountName, String invoiceSectionName, String transferName);

    /**
     * Initiates the request to transfer the legacy subscriptions or RIs.
     *
     * @param billingAccountName Billing Account Id.
     * @param invoiceSectionName InvoiceSection Id.
     * @param body Initiate transfer parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<TransferDetails> initiateAsync(String billingAccountName, String invoiceSectionName, InitiateTransferRequest body);

}
