/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.billing.v2018_11_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.billing.v2018_11_01_preview.BillingRoleAssignments;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.billing.v2018_11_01_preview.BillingRoleAssignment;
import com.microsoft.azure.management.billing.v2018_11_01_preview.BillingRoleAssignmentListResult;
import com.microsoft.azure.management.billing.v2018_11_01_preview.BillingRoleAssignmentPayload;

class BillingRoleAssignmentsImpl extends WrapperImpl<BillingRoleAssignmentsInner> implements BillingRoleAssignments {
    private final BillingManager manager;

    BillingRoleAssignmentsImpl(BillingManager manager) {
        super(manager.inner().billingRoleAssignments());
        this.manager = manager;
    }

    public BillingManager manager() {
        return this.manager;
    }

    @Override
    public Observable<BillingRoleAssignment> getByBillingAccountAsync(String billingAccountName, String billingRoleAssignmentName) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.getByBillingAccountAsync(billingAccountName, billingRoleAssignmentName)
        .map(new Func1<BillingRoleAssignmentInner, BillingRoleAssignment>() {
            @Override
            public BillingRoleAssignment call(BillingRoleAssignmentInner inner) {
                return new BillingRoleAssignmentImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignment> deleteByBillingAccountNameAsync(String billingAccountName, String billingRoleAssignmentName) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.deleteByBillingAccountNameAsync(billingAccountName, billingRoleAssignmentName)
        .map(new Func1<BillingRoleAssignmentInner, BillingRoleAssignment>() {
            @Override
            public BillingRoleAssignment call(BillingRoleAssignmentInner inner) {
                return new BillingRoleAssignmentImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignment> getByInvoiceSectionNameAsync(String billingAccountName, String invoiceSectionName, String billingRoleAssignmentName) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.getByInvoiceSectionNameAsync(billingAccountName, invoiceSectionName, billingRoleAssignmentName)
        .map(new Func1<BillingRoleAssignmentInner, BillingRoleAssignment>() {
            @Override
            public BillingRoleAssignment call(BillingRoleAssignmentInner inner) {
                return new BillingRoleAssignmentImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignment> deleteByInvoiceSectionNameAsync(String billingAccountName, String invoiceSectionName, String billingRoleAssignmentName) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.deleteByInvoiceSectionNameAsync(billingAccountName, invoiceSectionName, billingRoleAssignmentName)
        .map(new Func1<BillingRoleAssignmentInner, BillingRoleAssignment>() {
            @Override
            public BillingRoleAssignment call(BillingRoleAssignmentInner inner) {
                return new BillingRoleAssignmentImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignment> getByBillingProfileNameAsync(String billingAccountName, String billingProfileName, String billingRoleAssignmentName) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.getByBillingProfileNameAsync(billingAccountName, billingProfileName, billingRoleAssignmentName)
        .map(new Func1<BillingRoleAssignmentInner, BillingRoleAssignment>() {
            @Override
            public BillingRoleAssignment call(BillingRoleAssignmentInner inner) {
                return new BillingRoleAssignmentImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignment> deleteByBillingProfileNameAsync(String billingAccountName, String billingProfileName, String billingRoleAssignmentName) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.deleteByBillingProfileNameAsync(billingAccountName, billingProfileName, billingRoleAssignmentName)
        .map(new Func1<BillingRoleAssignmentInner, BillingRoleAssignment>() {
            @Override
            public BillingRoleAssignment call(BillingRoleAssignmentInner inner) {
                return new BillingRoleAssignmentImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignmentListResult> listByBillingAccountNameAsync(String billingAccountName) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.listByBillingAccountNameAsync(billingAccountName)
        .map(new Func1<BillingRoleAssignmentListResultInner, BillingRoleAssignmentListResult>() {
            @Override
            public BillingRoleAssignmentListResult call(BillingRoleAssignmentListResultInner inner) {
                return new BillingRoleAssignmentListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignmentListResult> listByInvoiceSectionNameAsync(String billingAccountName, String invoiceSectionName) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.listByInvoiceSectionNameAsync(billingAccountName, invoiceSectionName)
        .map(new Func1<BillingRoleAssignmentListResultInner, BillingRoleAssignmentListResult>() {
            @Override
            public BillingRoleAssignmentListResult call(BillingRoleAssignmentListResultInner inner) {
                return new BillingRoleAssignmentListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignmentListResult> listByBillingProfileNameAsync(String billingAccountName, String billingProfileName) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.listByBillingProfileNameAsync(billingAccountName, billingProfileName)
        .map(new Func1<BillingRoleAssignmentListResultInner, BillingRoleAssignmentListResult>() {
            @Override
            public BillingRoleAssignmentListResult call(BillingRoleAssignmentListResultInner inner) {
                return new BillingRoleAssignmentListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignmentListResult> addByBillingAccountNameAsync(String billingAccountName, BillingRoleAssignmentPayload parameters) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.addByBillingAccountNameAsync(billingAccountName, parameters)
        .map(new Func1<BillingRoleAssignmentListResultInner, BillingRoleAssignmentListResult>() {
            @Override
            public BillingRoleAssignmentListResult call(BillingRoleAssignmentListResultInner inner) {
                return new BillingRoleAssignmentListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignmentListResult> addByInvoiceSectionNameAsync(String billingAccountName, String invoiceSectionName, BillingRoleAssignmentPayload parameters) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.addByInvoiceSectionNameAsync(billingAccountName, invoiceSectionName, parameters)
        .map(new Func1<BillingRoleAssignmentListResultInner, BillingRoleAssignmentListResult>() {
            @Override
            public BillingRoleAssignmentListResult call(BillingRoleAssignmentListResultInner inner) {
                return new BillingRoleAssignmentListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignmentListResult> addByBillingProfileNameAsync(String billingAccountName, String billingProfileName, BillingRoleAssignmentPayload parameters) {
        BillingRoleAssignmentsInner client = this.inner();
        return client.addByBillingProfileNameAsync(billingAccountName, billingProfileName, parameters)
        .map(new Func1<BillingRoleAssignmentListResultInner, BillingRoleAssignmentListResult>() {
            @Override
            public BillingRoleAssignmentListResult call(BillingRoleAssignmentListResultInner inner) {
                return new BillingRoleAssignmentListResultImpl(inner, manager());
            }
        });
    }

}
