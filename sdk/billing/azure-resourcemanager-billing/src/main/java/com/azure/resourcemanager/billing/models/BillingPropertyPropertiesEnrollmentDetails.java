// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The enrollment details for the subscription. Available for billing accounts with agreement type Enterprise Agreement.
 */
@Fluent
public final class BillingPropertyPropertiesEnrollmentDetails extends SubscriptionEnrollmentDetails {
    /**
     * Creates an instance of BillingPropertyPropertiesEnrollmentDetails class.
     */
    public BillingPropertyPropertiesEnrollmentDetails() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingPropertyPropertiesEnrollmentDetails withDepartmentDisplayName(String departmentDisplayName) {
        super.withDepartmentDisplayName(departmentDisplayName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingPropertyPropertiesEnrollmentDetails withDepartmentId(String departmentId) {
        super.withDepartmentId(departmentId);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingPropertyPropertiesEnrollmentDetails withEnrollmentAccountStatus(String enrollmentAccountStatus) {
        super.withEnrollmentAccountStatus(enrollmentAccountStatus);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingPropertyPropertiesEnrollmentDetails
        withEnrollmentAccountDisplayName(String enrollmentAccountDisplayName) {
        super.withEnrollmentAccountDisplayName(enrollmentAccountDisplayName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingPropertyPropertiesEnrollmentDetails withEnrollmentAccountId(String enrollmentAccountId) {
        super.withEnrollmentAccountId(enrollmentAccountId);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("departmentDisplayName", departmentDisplayName());
        jsonWriter.writeStringField("departmentId", departmentId());
        jsonWriter.writeStringField("enrollmentAccountStatus", enrollmentAccountStatus());
        jsonWriter.writeStringField("enrollmentAccountDisplayName", enrollmentAccountDisplayName());
        jsonWriter.writeStringField("enrollmentAccountId", enrollmentAccountId());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BillingPropertyPropertiesEnrollmentDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BillingPropertyPropertiesEnrollmentDetails if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BillingPropertyPropertiesEnrollmentDetails.
     */
    public static BillingPropertyPropertiesEnrollmentDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BillingPropertyPropertiesEnrollmentDetails deserializedBillingPropertyPropertiesEnrollmentDetails
                = new BillingPropertyPropertiesEnrollmentDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("departmentDisplayName".equals(fieldName)) {
                    deserializedBillingPropertyPropertiesEnrollmentDetails
                        .withDepartmentDisplayName(reader.getString());
                } else if ("departmentId".equals(fieldName)) {
                    deserializedBillingPropertyPropertiesEnrollmentDetails.withDepartmentId(reader.getString());
                } else if ("enrollmentAccountStatus".equals(fieldName)) {
                    deserializedBillingPropertyPropertiesEnrollmentDetails
                        .withEnrollmentAccountStatus(reader.getString());
                } else if ("enrollmentAccountDisplayName".equals(fieldName)) {
                    deserializedBillingPropertyPropertiesEnrollmentDetails
                        .withEnrollmentAccountDisplayName(reader.getString());
                } else if ("enrollmentAccountId".equals(fieldName)) {
                    deserializedBillingPropertyPropertiesEnrollmentDetails.withEnrollmentAccountId(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBillingPropertyPropertiesEnrollmentDetails;
        });
    }
}
