// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Request parameters for cancel customer subscription.
 */
@Fluent
public final class CancelSubscriptionRequest implements JsonSerializable<CancelSubscriptionRequest> {
    /*
     * Cancellation reason.
     */
    private CancellationReason cancellationReason;

    /*
     * The fully qualified ID that uniquely identifies a customer.
     */
    private String customerId;

    /**
     * Creates an instance of CancelSubscriptionRequest class.
     */
    public CancelSubscriptionRequest() {
    }

    /**
     * Get the cancellationReason property: Cancellation reason.
     * 
     * @return the cancellationReason value.
     */
    public CancellationReason cancellationReason() {
        return this.cancellationReason;
    }

    /**
     * Set the cancellationReason property: Cancellation reason.
     * 
     * @param cancellationReason the cancellationReason value to set.
     * @return the CancelSubscriptionRequest object itself.
     */
    public CancelSubscriptionRequest withCancellationReason(CancellationReason cancellationReason) {
        this.cancellationReason = cancellationReason;
        return this;
    }

    /**
     * Get the customerId property: The fully qualified ID that uniquely identifies a customer.
     * 
     * @return the customerId value.
     */
    public String customerId() {
        return this.customerId;
    }

    /**
     * Set the customerId property: The fully qualified ID that uniquely identifies a customer.
     * 
     * @param customerId the customerId value to set.
     * @return the CancelSubscriptionRequest object itself.
     */
    public CancelSubscriptionRequest withCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (cancellationReason() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property cancellationReason in model CancelSubscriptionRequest"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CancelSubscriptionRequest.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("cancellationReason",
            this.cancellationReason == null ? null : this.cancellationReason.toString());
        jsonWriter.writeStringField("customerId", this.customerId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CancelSubscriptionRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CancelSubscriptionRequest if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CancelSubscriptionRequest.
     */
    public static CancelSubscriptionRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CancelSubscriptionRequest deserializedCancelSubscriptionRequest = new CancelSubscriptionRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("cancellationReason".equals(fieldName)) {
                    deserializedCancelSubscriptionRequest.cancellationReason
                        = CancellationReason.fromString(reader.getString());
                } else if ("customerId".equals(fieldName)) {
                    deserializedCancelSubscriptionRequest.customerId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCancelSubscriptionRequest;
        });
    }
}
