// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The rebill details of an invoice.
 */
@Immutable
public class RebillDetails implements JsonSerializable<RebillDetails> {
    /*
     * The ID of invoice.
     */
    private String invoiceDocumentId;

    /*
     * The ID of credit note.
     */
    private String creditNoteDocumentId;

    /*
     * The rebill details of an invoice.
     */
    private RebillDetails rebillDetails;

    /**
     * Creates an instance of RebillDetails class.
     */
    public RebillDetails() {
    }

    /**
     * Get the invoiceDocumentId property: The ID of invoice.
     * 
     * @return the invoiceDocumentId value.
     */
    public String invoiceDocumentId() {
        return this.invoiceDocumentId;
    }

    /**
     * Set the invoiceDocumentId property: The ID of invoice.
     * 
     * @param invoiceDocumentId the invoiceDocumentId value to set.
     * @return the RebillDetails object itself.
     */
    RebillDetails withInvoiceDocumentId(String invoiceDocumentId) {
        this.invoiceDocumentId = invoiceDocumentId;
        return this;
    }

    /**
     * Get the creditNoteDocumentId property: The ID of credit note.
     * 
     * @return the creditNoteDocumentId value.
     */
    public String creditNoteDocumentId() {
        return this.creditNoteDocumentId;
    }

    /**
     * Set the creditNoteDocumentId property: The ID of credit note.
     * 
     * @param creditNoteDocumentId the creditNoteDocumentId value to set.
     * @return the RebillDetails object itself.
     */
    RebillDetails withCreditNoteDocumentId(String creditNoteDocumentId) {
        this.creditNoteDocumentId = creditNoteDocumentId;
        return this;
    }

    /**
     * Get the rebillDetails property: The rebill details of an invoice.
     * 
     * @return the rebillDetails value.
     */
    public RebillDetails rebillDetails() {
        return this.rebillDetails;
    }

    /**
     * Set the rebillDetails property: The rebill details of an invoice.
     * 
     * @param rebillDetails the rebillDetails value to set.
     * @return the RebillDetails object itself.
     */
    RebillDetails withRebillDetails(RebillDetails rebillDetails) {
        this.rebillDetails = rebillDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (rebillDetails() != null) {
            rebillDetails().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RebillDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RebillDetails if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the RebillDetails.
     */
    public static RebillDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RebillDetails deserializedRebillDetails = new RebillDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("invoiceDocumentId".equals(fieldName)) {
                    deserializedRebillDetails.invoiceDocumentId = reader.getString();
                } else if ("creditNoteDocumentId".equals(fieldName)) {
                    deserializedRebillDetails.creditNoteDocumentId = reader.getString();
                } else if ("rebillDetails".equals(fieldName)) {
                    deserializedRebillDetails.rebillDetails = RebillDetails.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRebillDetails;
        });
    }
}
