// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import java.util.List;

/**
 * Resource collection API of BillingPermissions.
 */
public interface BillingPermissions {
    /**
     * Lists the billing permissions the caller has on a billing account.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByBillingAccount(String billingAccountName);

    /**
     * Lists the billing permissions the caller has on a billing account.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByBillingAccount(String billingAccountName, Context context);

    /**
     * Lists the billing permissions the caller has on a billing profile.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByBillingProfile(String billingAccountName, String billingProfileName);

    /**
     * Lists the billing permissions the caller has on a billing profile.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByBillingProfile(String billingAccountName, String billingProfileName,
        Context context);

    /**
     * Provides a list of check access response objects for a billing profile.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param parameters The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    Response<List<CheckAccessResponse>> checkAccessByBillingProfileWithResponse(String billingAccountName,
        String billingProfileName, CheckAccessRequest parameters, Context context);

    /**
     * Provides a list of check access response objects for a billing profile.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param parameters The request object against which access of the caller will be checked.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    List<CheckAccessResponse> checkAccessByBillingProfile(String billingAccountName, String billingProfileName,
        CheckAccessRequest parameters);

    /**
     * Lists the billing permissions the caller has for a customer.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param customerName The ID that uniquely identifies a customer.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByCustomer(String billingAccountName, String billingProfileName,
        String customerName);

    /**
     * Lists the billing permissions the caller has for a customer.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param customerName The ID that uniquely identifies a customer.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByCustomer(String billingAccountName, String billingProfileName,
        String customerName, Context context);

    /**
     * Provides a list of check access response objects for a customer.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param customerName The ID that uniquely identifies a customer.
     * @param parameters The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    Response<List<CheckAccessResponse>> checkAccessByCustomerWithResponse(String billingAccountName,
        String billingProfileName, String customerName, CheckAccessRequest parameters, Context context);

    /**
     * Provides a list of check access response objects for a customer.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param customerName The ID that uniquely identifies a customer.
     * @param parameters The request object against which access of the caller will be checked.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    List<CheckAccessResponse> checkAccessByCustomer(String billingAccountName, String billingProfileName,
        String customerName, CheckAccessRequest parameters);

    /**
     * Lists the billing permissions the caller has for an invoice section.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param invoiceSectionName The ID that uniquely identifies an invoice section.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByInvoiceSection(String billingAccountName, String billingProfileName,
        String invoiceSectionName);

    /**
     * Lists the billing permissions the caller has for an invoice section.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param invoiceSectionName The ID that uniquely identifies an invoice section.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByInvoiceSection(String billingAccountName, String billingProfileName,
        String invoiceSectionName, Context context);

    /**
     * Provides a list of check access response objects for an invoice section.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param invoiceSectionName The ID that uniquely identifies an invoice section.
     * @param parameters The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    Response<List<CheckAccessResponse>> checkAccessByInvoiceSectionWithResponse(String billingAccountName,
        String billingProfileName, String invoiceSectionName, CheckAccessRequest parameters, Context context);

    /**
     * Provides a list of check access response objects for an invoice section.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param invoiceSectionName The ID that uniquely identifies an invoice section.
     * @param parameters The request object against which access of the caller will be checked.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    List<CheckAccessResponse> checkAccessByInvoiceSection(String billingAccountName, String billingProfileName,
        String invoiceSectionName, CheckAccessRequest parameters);

    /**
     * Provides a list of check access response objects for a billing account.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param parameters The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    Response<List<CheckAccessResponse>> checkAccessByBillingAccountWithResponse(String billingAccountName,
        CheckAccessRequest parameters, Context context);

    /**
     * Provides a list of check access response objects for a billing account.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param parameters The request object against which access of the caller will be checked.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    List<CheckAccessResponse> checkAccessByBillingAccount(String billingAccountName, CheckAccessRequest parameters);

    /**
     * Lists the billing permissions the caller has for a customer at billing account level.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param customerName The ID that uniquely identifies a customer.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByCustomerAtBillingAccount(String billingAccountName, String customerName);

    /**
     * Lists the billing permissions the caller has for a customer at billing account level.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param customerName The ID that uniquely identifies a customer.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByCustomerAtBillingAccount(String billingAccountName, String customerName,
        Context context);

    /**
     * Lists the billing permissions the caller has for a department.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param departmentName The name of the department.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByDepartment(String billingAccountName, String departmentName);

    /**
     * Lists the billing permissions the caller has for a department.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param departmentName The name of the department.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByDepartment(String billingAccountName, String departmentName,
        Context context);

    /**
     * Provides a list of check access response objects for a department.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param departmentName The name of the department.
     * @param parameters The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    Response<List<CheckAccessResponse>> checkAccessByDepartmentWithResponse(String billingAccountName,
        String departmentName, CheckAccessRequest parameters, Context context);

    /**
     * Provides a list of check access response objects for a department.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param departmentName The name of the department.
     * @param parameters The request object against which access of the caller will be checked.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    List<CheckAccessResponse> checkAccessByDepartment(String billingAccountName, String departmentName,
        CheckAccessRequest parameters);

    /**
     * Lists the billing permissions the caller has for an enrollment account.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param enrollmentAccountName The name of the enrollment account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByEnrollmentAccount(String billingAccountName, String enrollmentAccountName);

    /**
     * Lists the billing permissions the caller has for an enrollment account.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param enrollmentAccountName The name of the enrollment account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container for a list of resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BillingPermission> listByEnrollmentAccount(String billingAccountName, String enrollmentAccountName,
        Context context);

    /**
     * Provides a list of check access response objects for an enrollment account.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param enrollmentAccountName The name of the enrollment account.
     * @param parameters The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    Response<List<CheckAccessResponse>> checkAccessByEnrollmentAccountWithResponse(String billingAccountName,
        String enrollmentAccountName, CheckAccessRequest parameters, Context context);

    /**
     * Provides a list of check access response objects for an enrollment account.
     * 
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param enrollmentAccountName The name of the enrollment account.
     * @param parameters The request object against which access of the caller will be checked.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    List<CheckAccessResponse> checkAccessByEnrollmentAccount(String billingAccountName, String enrollmentAccountName,
        CheckAccessRequest parameters);
}
