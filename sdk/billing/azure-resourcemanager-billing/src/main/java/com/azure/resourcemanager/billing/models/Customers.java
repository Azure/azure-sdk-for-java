// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Customers. */
public interface Customers {
    /**
     * Lists the customers that are billed to a billing profile. The operation is supported only for billing accounts
     * with agreement type Microsoft Partner Agreement.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of customers.
     */
    PagedIterable<Customer> listByBillingProfile(String billingAccountName, String billingProfileName);

    /**
     * Lists the customers that are billed to a billing profile. The operation is supported only for billing accounts
     * with agreement type Microsoft Partner Agreement.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param search Used for searching customers by their name. Any customer with name containing the search text will
     *     be included in the response.
     * @param filter May be used to filter the list of customers.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of customers.
     */
    PagedIterable<Customer> listByBillingProfile(
        String billingAccountName, String billingProfileName, String search, String filter, Context context);

    /**
     * Lists the customers that are billed to a billing account. The operation is supported only for billing accounts
     * with agreement type Microsoft Partner Agreement.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of customers.
     */
    PagedIterable<Customer> listByBillingAccount(String billingAccountName);

    /**
     * Lists the customers that are billed to a billing account. The operation is supported only for billing accounts
     * with agreement type Microsoft Partner Agreement.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param search Used for searching customers by their name. Any customer with name containing the search text will
     *     be included in the response.
     * @param filter May be used to filter the list of customers.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of customers.
     */
    PagedIterable<Customer> listByBillingAccount(
        String billingAccountName, String search, String filter, Context context);

    /**
     * Gets a customer by its ID. The operation is supported only for billing accounts with agreement type Microsoft
     * Partner Agreement.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param customerName The ID that uniquely identifies a customer.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a customer by its ID.
     */
    Customer get(String billingAccountName, String customerName);

    /**
     * Gets a customer by its ID. The operation is supported only for billing accounts with agreement type Microsoft
     * Partner Agreement.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param customerName The ID that uniquely identifies a customer.
     * @param expand May be used to expand enabledAzurePlans and resellers.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a customer by its ID.
     */
    Response<Customer> getWithResponse(String billingAccountName, String customerName, String expand, Context context);
}
