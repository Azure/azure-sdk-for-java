// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.billing.models.AddressDetails;
import com.azure.resourcemanager.billing.models.AddressValidationStatus;
import java.io.IOException;
import java.util.List;

/**
 * Result of the address validation.
 */
@Immutable
public final class AddressValidationResponseInner implements JsonSerializable<AddressValidationResponseInner> {
    /*
     * Status of the address validation.
     */
    private AddressValidationStatus status;

    /*
     * The list of suggested addresses.
     */
    private List<AddressDetails> suggestedAddresses;

    /*
     * Validation error message.
     */
    private String validationMessage;

    /**
     * Creates an instance of AddressValidationResponseInner class.
     */
    public AddressValidationResponseInner() {
    }

    /**
     * Get the status property: Status of the address validation.
     * 
     * @return the status value.
     */
    public AddressValidationStatus status() {
        return this.status;
    }

    /**
     * Get the suggestedAddresses property: The list of suggested addresses.
     * 
     * @return the suggestedAddresses value.
     */
    public List<AddressDetails> suggestedAddresses() {
        return this.suggestedAddresses;
    }

    /**
     * Get the validationMessage property: Validation error message.
     * 
     * @return the validationMessage value.
     */
    public String validationMessage() {
        return this.validationMessage;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (suggestedAddresses() != null) {
            suggestedAddresses().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AddressValidationResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AddressValidationResponseInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AddressValidationResponseInner.
     */
    public static AddressValidationResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AddressValidationResponseInner deserializedAddressValidationResponseInner
                = new AddressValidationResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedAddressValidationResponseInner.status
                        = AddressValidationStatus.fromString(reader.getString());
                } else if ("suggestedAddresses".equals(fieldName)) {
                    List<AddressDetails> suggestedAddresses
                        = reader.readArray(reader1 -> AddressDetails.fromJson(reader1));
                    deserializedAddressValidationResponseInner.suggestedAddresses = suggestedAddresses;
                } else if ("validationMessage".equals(fieldName)) {
                    deserializedAddressValidationResponseInner.validationMessage = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAddressValidationResponseInner;
        });
    }
}
