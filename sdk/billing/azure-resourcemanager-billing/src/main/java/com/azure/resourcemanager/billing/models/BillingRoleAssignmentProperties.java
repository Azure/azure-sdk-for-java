// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * The properties of the billing role assignment.
 */
@Fluent
public final class BillingRoleAssignmentProperties implements JsonSerializable<BillingRoleAssignmentProperties> {
    /*
     * The provisioning state of the resource during a long-running operation.
     */
    private ProvisioningState provisioningState;

    /*
     * The date the role assignment was created.
     */
    private OffsetDateTime createdOn;

    /*
     * The tenant Id of the user who created the role assignment.
     */
    private String createdByPrincipalTenantId;

    /*
     * The object ID of the user who created the role assignment.
     */
    private String createdByPrincipalId;

    /*
     * The principal PUID of the user who created the role assignment.
     */
    private String createdByPrincipalPuid;

    /*
     * The email address of the user who created the role assignment. This is supported only for billing accounts with
     * agreement type Enterprise Agreement.
     */
    private String createdByUserEmailAddress;

    /*
     * The date the role assignment was modified.
     */
    private OffsetDateTime modifiedOn;

    /*
     * The principal PUID of the user who modified the role assignment.
     */
    private String modifiedByPrincipalPuid;

    /*
     * The email address of the user who modified the role assignment. This is supported only for billing accounts with
     * agreement type Enterprise Agreement.
     */
    private String modifiedByUserEmailAddress;

    /*
     * The principal PUID of the user who modified the role assignment.
     */
    private String modifiedByPrincipalId;

    /*
     * The tenant Id of the user who modified the role assignment.
     */
    private String modifiedByPrincipalTenantId;

    /*
     * The principal PUID of the user to whom the role was assigned.
     */
    private String principalPuid;

    /*
     * The object id of the user to whom the role was assigned.
     */
    private String principalId;

    /*
     * The principal tenant id of the user to whom the role was assigned.
     */
    private String principalTenantId;

    /*
     * The ID of the role definition.
     */
    private String roleDefinitionId;

    /*
     * The scope at which the role was assigned.
     */
    private String scope;

    /*
     * The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This
     * is supported only for billing accounts with agreement type Enterprise Agreement.
     */
    private String userAuthenticationType;

    /*
     * The email address of the user to whom the role was assigned. This is supported only for billing accounts with
     * agreement type Enterprise Agreement.
     */
    private String userEmailAddress;

    /*
     * The friendly name of the tenant of the user to whom the role was assigned. This will be 'Primary Tenant' for the
     * primary tenant of the billing account.
     */
    private String principalTenantName;

    /*
     * The display name of the principal to whom the role was assigned.
     */
    private String principalDisplayName;

    /*
     * The type of a role Assignment.
     */
    private PrincipalType principalType;

    /*
     * The ID of the billing request that was created for the role assignment. This is only applicable to cross tenant
     * role assignments or role assignments created through the billing request.
     */
    private String billingRequestId;

    /*
     * The fully qualified ID that uniquely identifies a billing account.
     */
    private String billingAccountId;

    /*
     * The name of the billing account.
     */
    private String billingAccountDisplayName;

    /*
     * The fully qualified ID that uniquely identifies a billing profile.
     */
    private String billingProfileId;

    /*
     * The name of the billing profile.
     */
    private String billingProfileDisplayName;

    /*
     * The fully qualified ID that uniquely identifies an invoice section.
     */
    private String invoiceSectionId;

    /*
     * The name of the invoice section.
     */
    private String invoiceSectionDisplayName;

    /*
     * The fully qualified ID that uniquely identifies a customer.
     */
    private String customerId;

    /*
     * The name of the customer.
     */
    private String customerDisplayName;

    /**
     * Creates an instance of BillingRoleAssignmentProperties class.
     */
    public BillingRoleAssignmentProperties() {
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource during a long-running operation.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the createdOn property: The date the role assignment was created.
     * 
     * @return the createdOn value.
     */
    public OffsetDateTime createdOn() {
        return this.createdOn;
    }

    /**
     * Get the createdByPrincipalTenantId property: The tenant Id of the user who created the role assignment.
     * 
     * @return the createdByPrincipalTenantId value.
     */
    public String createdByPrincipalTenantId() {
        return this.createdByPrincipalTenantId;
    }

    /**
     * Get the createdByPrincipalId property: The object ID of the user who created the role assignment.
     * 
     * @return the createdByPrincipalId value.
     */
    public String createdByPrincipalId() {
        return this.createdByPrincipalId;
    }

    /**
     * Get the createdByPrincipalPuid property: The principal PUID of the user who created the role assignment.
     * 
     * @return the createdByPrincipalPuid value.
     */
    public String createdByPrincipalPuid() {
        return this.createdByPrincipalPuid;
    }

    /**
     * Get the createdByUserEmailAddress property: The email address of the user who created the role assignment. This
     * is supported only for billing accounts with agreement type Enterprise Agreement.
     * 
     * @return the createdByUserEmailAddress value.
     */
    public String createdByUserEmailAddress() {
        return this.createdByUserEmailAddress;
    }

    /**
     * Get the modifiedOn property: The date the role assignment was modified.
     * 
     * @return the modifiedOn value.
     */
    public OffsetDateTime modifiedOn() {
        return this.modifiedOn;
    }

    /**
     * Get the modifiedByPrincipalPuid property: The principal PUID of the user who modified the role assignment.
     * 
     * @return the modifiedByPrincipalPuid value.
     */
    public String modifiedByPrincipalPuid() {
        return this.modifiedByPrincipalPuid;
    }

    /**
     * Get the modifiedByUserEmailAddress property: The email address of the user who modified the role assignment. This
     * is supported only for billing accounts with agreement type Enterprise Agreement.
     * 
     * @return the modifiedByUserEmailAddress value.
     */
    public String modifiedByUserEmailAddress() {
        return this.modifiedByUserEmailAddress;
    }

    /**
     * Get the modifiedByPrincipalId property: The principal PUID of the user who modified the role assignment.
     * 
     * @return the modifiedByPrincipalId value.
     */
    public String modifiedByPrincipalId() {
        return this.modifiedByPrincipalId;
    }

    /**
     * Get the modifiedByPrincipalTenantId property: The tenant Id of the user who modified the role assignment.
     * 
     * @return the modifiedByPrincipalTenantId value.
     */
    public String modifiedByPrincipalTenantId() {
        return this.modifiedByPrincipalTenantId;
    }

    /**
     * Get the principalPuid property: The principal PUID of the user to whom the role was assigned.
     * 
     * @return the principalPuid value.
     */
    public String principalPuid() {
        return this.principalPuid;
    }

    /**
     * Set the principalPuid property: The principal PUID of the user to whom the role was assigned.
     * 
     * @param principalPuid the principalPuid value to set.
     * @return the BillingRoleAssignmentProperties object itself.
     */
    public BillingRoleAssignmentProperties withPrincipalPuid(String principalPuid) {
        this.principalPuid = principalPuid;
        return this;
    }

    /**
     * Get the principalId property: The object id of the user to whom the role was assigned.
     * 
     * @return the principalId value.
     */
    public String principalId() {
        return this.principalId;
    }

    /**
     * Set the principalId property: The object id of the user to whom the role was assigned.
     * 
     * @param principalId the principalId value to set.
     * @return the BillingRoleAssignmentProperties object itself.
     */
    public BillingRoleAssignmentProperties withPrincipalId(String principalId) {
        this.principalId = principalId;
        return this;
    }

    /**
     * Get the principalTenantId property: The principal tenant id of the user to whom the role was assigned.
     * 
     * @return the principalTenantId value.
     */
    public String principalTenantId() {
        return this.principalTenantId;
    }

    /**
     * Set the principalTenantId property: The principal tenant id of the user to whom the role was assigned.
     * 
     * @param principalTenantId the principalTenantId value to set.
     * @return the BillingRoleAssignmentProperties object itself.
     */
    public BillingRoleAssignmentProperties withPrincipalTenantId(String principalTenantId) {
        this.principalTenantId = principalTenantId;
        return this;
    }

    /**
     * Get the roleDefinitionId property: The ID of the role definition.
     * 
     * @return the roleDefinitionId value.
     */
    public String roleDefinitionId() {
        return this.roleDefinitionId;
    }

    /**
     * Set the roleDefinitionId property: The ID of the role definition.
     * 
     * @param roleDefinitionId the roleDefinitionId value to set.
     * @return the BillingRoleAssignmentProperties object itself.
     */
    public BillingRoleAssignmentProperties withRoleDefinitionId(String roleDefinitionId) {
        this.roleDefinitionId = roleDefinitionId;
        return this;
    }

    /**
     * Get the scope property: The scope at which the role was assigned.
     * 
     * @return the scope value.
     */
    public String scope() {
        return this.scope;
    }

    /**
     * Set the scope property: The scope at which the role was assigned.
     * 
     * @param scope the scope value to set.
     * @return the BillingRoleAssignmentProperties object itself.
     */
    public BillingRoleAssignmentProperties withScope(String scope) {
        this.scope = scope;
        return this;
    }

    /**
     * Get the userAuthenticationType property: The authentication type of the user, whether Organization or MSA, of the
     * user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise
     * Agreement.
     * 
     * @return the userAuthenticationType value.
     */
    public String userAuthenticationType() {
        return this.userAuthenticationType;
    }

    /**
     * Set the userAuthenticationType property: The authentication type of the user, whether Organization or MSA, of the
     * user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise
     * Agreement.
     * 
     * @param userAuthenticationType the userAuthenticationType value to set.
     * @return the BillingRoleAssignmentProperties object itself.
     */
    public BillingRoleAssignmentProperties withUserAuthenticationType(String userAuthenticationType) {
        this.userAuthenticationType = userAuthenticationType;
        return this;
    }

    /**
     * Get the userEmailAddress property: The email address of the user to whom the role was assigned. This is supported
     * only for billing accounts with agreement type Enterprise Agreement.
     * 
     * @return the userEmailAddress value.
     */
    public String userEmailAddress() {
        return this.userEmailAddress;
    }

    /**
     * Set the userEmailAddress property: The email address of the user to whom the role was assigned. This is supported
     * only for billing accounts with agreement type Enterprise Agreement.
     * 
     * @param userEmailAddress the userEmailAddress value to set.
     * @return the BillingRoleAssignmentProperties object itself.
     */
    public BillingRoleAssignmentProperties withUserEmailAddress(String userEmailAddress) {
        this.userEmailAddress = userEmailAddress;
        return this;
    }

    /**
     * Get the principalTenantName property: The friendly name of the tenant of the user to whom the role was assigned.
     * This will be 'Primary Tenant' for the primary tenant of the billing account.
     * 
     * @return the principalTenantName value.
     */
    public String principalTenantName() {
        return this.principalTenantName;
    }

    /**
     * Get the principalDisplayName property: The display name of the principal to whom the role was assigned.
     * 
     * @return the principalDisplayName value.
     */
    public String principalDisplayName() {
        return this.principalDisplayName;
    }

    /**
     * Get the principalType property: The type of a role Assignment.
     * 
     * @return the principalType value.
     */
    public PrincipalType principalType() {
        return this.principalType;
    }

    /**
     * Get the billingRequestId property: The ID of the billing request that was created for the role assignment. This
     * is only applicable to cross tenant role assignments or role assignments created through the billing request.
     * 
     * @return the billingRequestId value.
     */
    public String billingRequestId() {
        return this.billingRequestId;
    }

    /**
     * Get the billingAccountId property: The fully qualified ID that uniquely identifies a billing account.
     * 
     * @return the billingAccountId value.
     */
    public String billingAccountId() {
        return this.billingAccountId;
    }

    /**
     * Get the billingAccountDisplayName property: The name of the billing account.
     * 
     * @return the billingAccountDisplayName value.
     */
    public String billingAccountDisplayName() {
        return this.billingAccountDisplayName;
    }

    /**
     * Get the billingProfileId property: The fully qualified ID that uniquely identifies a billing profile.
     * 
     * @return the billingProfileId value.
     */
    public String billingProfileId() {
        return this.billingProfileId;
    }

    /**
     * Get the billingProfileDisplayName property: The name of the billing profile.
     * 
     * @return the billingProfileDisplayName value.
     */
    public String billingProfileDisplayName() {
        return this.billingProfileDisplayName;
    }

    /**
     * Get the invoiceSectionId property: The fully qualified ID that uniquely identifies an invoice section.
     * 
     * @return the invoiceSectionId value.
     */
    public String invoiceSectionId() {
        return this.invoiceSectionId;
    }

    /**
     * Get the invoiceSectionDisplayName property: The name of the invoice section.
     * 
     * @return the invoiceSectionDisplayName value.
     */
    public String invoiceSectionDisplayName() {
        return this.invoiceSectionDisplayName;
    }

    /**
     * Get the customerId property: The fully qualified ID that uniquely identifies a customer.
     * 
     * @return the customerId value.
     */
    public String customerId() {
        return this.customerId;
    }

    /**
     * Get the customerDisplayName property: The name of the customer.
     * 
     * @return the customerDisplayName value.
     */
    public String customerDisplayName() {
        return this.customerDisplayName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (roleDefinitionId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property roleDefinitionId in model BillingRoleAssignmentProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(BillingRoleAssignmentProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("roleDefinitionId", this.roleDefinitionId);
        jsonWriter.writeStringField("principalPuid", this.principalPuid);
        jsonWriter.writeStringField("principalId", this.principalId);
        jsonWriter.writeStringField("principalTenantId", this.principalTenantId);
        jsonWriter.writeStringField("scope", this.scope);
        jsonWriter.writeStringField("userAuthenticationType", this.userAuthenticationType);
        jsonWriter.writeStringField("userEmailAddress", this.userEmailAddress);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BillingRoleAssignmentProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BillingRoleAssignmentProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the BillingRoleAssignmentProperties.
     */
    public static BillingRoleAssignmentProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BillingRoleAssignmentProperties deserializedBillingRoleAssignmentProperties
                = new BillingRoleAssignmentProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("roleDefinitionId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.roleDefinitionId = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("createdOn".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.createdOn = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("createdByPrincipalTenantId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.createdByPrincipalTenantId = reader.getString();
                } else if ("createdByPrincipalId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.createdByPrincipalId = reader.getString();
                } else if ("createdByPrincipalPuid".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.createdByPrincipalPuid = reader.getString();
                } else if ("createdByUserEmailAddress".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.createdByUserEmailAddress = reader.getString();
                } else if ("modifiedOn".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.modifiedOn = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("modifiedByPrincipalPuid".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.modifiedByPrincipalPuid = reader.getString();
                } else if ("modifiedByUserEmailAddress".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.modifiedByUserEmailAddress = reader.getString();
                } else if ("modifiedByPrincipalId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.modifiedByPrincipalId = reader.getString();
                } else if ("modifiedByPrincipalTenantId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.modifiedByPrincipalTenantId = reader.getString();
                } else if ("principalPuid".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.principalPuid = reader.getString();
                } else if ("principalId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.principalId = reader.getString();
                } else if ("principalTenantId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.principalTenantId = reader.getString();
                } else if ("scope".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.scope = reader.getString();
                } else if ("userAuthenticationType".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.userAuthenticationType = reader.getString();
                } else if ("userEmailAddress".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.userEmailAddress = reader.getString();
                } else if ("principalTenantName".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.principalTenantName = reader.getString();
                } else if ("principalDisplayName".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.principalDisplayName = reader.getString();
                } else if ("principalType".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.principalType
                        = PrincipalType.fromString(reader.getString());
                } else if ("billingRequestId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.billingRequestId = reader.getString();
                } else if ("billingAccountId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.billingAccountId = reader.getString();
                } else if ("billingAccountDisplayName".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.billingAccountDisplayName = reader.getString();
                } else if ("billingProfileId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.billingProfileId = reader.getString();
                } else if ("billingProfileDisplayName".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.billingProfileDisplayName = reader.getString();
                } else if ("invoiceSectionId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.invoiceSectionId = reader.getString();
                } else if ("invoiceSectionDisplayName".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.invoiceSectionDisplayName = reader.getString();
                } else if ("customerId".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.customerId = reader.getString();
                } else if ("customerDisplayName".equals(fieldName)) {
                    deserializedBillingRoleAssignmentProperties.customerDisplayName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBillingRoleAssignmentProperties;
        });
    }
}
