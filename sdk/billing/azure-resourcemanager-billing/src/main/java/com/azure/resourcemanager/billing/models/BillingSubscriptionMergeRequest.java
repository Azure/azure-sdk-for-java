// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Request parameters that are provided to merge the two billing subscriptions.
 */
@Fluent
public final class BillingSubscriptionMergeRequest implements JsonSerializable<BillingSubscriptionMergeRequest> {
    /*
     * The ID of the target billing subscription that will be merged with the source subscription provided in the
     * request.
     */
    private String targetBillingSubscriptionName;

    /*
     * The quantity of the source billing subscription that will be merged with the target billing subscription.
     */
    private Integer quantity;

    /**
     * Creates an instance of BillingSubscriptionMergeRequest class.
     */
    public BillingSubscriptionMergeRequest() {
    }

    /**
     * Get the targetBillingSubscriptionName property: The ID of the target billing subscription that will be merged
     * with the source subscription provided in the request.
     * 
     * @return the targetBillingSubscriptionName value.
     */
    public String targetBillingSubscriptionName() {
        return this.targetBillingSubscriptionName;
    }

    /**
     * Set the targetBillingSubscriptionName property: The ID of the target billing subscription that will be merged
     * with the source subscription provided in the request.
     * 
     * @param targetBillingSubscriptionName the targetBillingSubscriptionName value to set.
     * @return the BillingSubscriptionMergeRequest object itself.
     */
    public BillingSubscriptionMergeRequest withTargetBillingSubscriptionName(String targetBillingSubscriptionName) {
        this.targetBillingSubscriptionName = targetBillingSubscriptionName;
        return this;
    }

    /**
     * Get the quantity property: The quantity of the source billing subscription that will be merged with the target
     * billing subscription.
     * 
     * @return the quantity value.
     */
    public Integer quantity() {
        return this.quantity;
    }

    /**
     * Set the quantity property: The quantity of the source billing subscription that will be merged with the target
     * billing subscription.
     * 
     * @param quantity the quantity value to set.
     * @return the BillingSubscriptionMergeRequest object itself.
     */
    public BillingSubscriptionMergeRequest withQuantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("targetBillingSubscriptionName", this.targetBillingSubscriptionName);
        jsonWriter.writeNumberField("quantity", this.quantity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BillingSubscriptionMergeRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BillingSubscriptionMergeRequest if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BillingSubscriptionMergeRequest.
     */
    public static BillingSubscriptionMergeRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BillingSubscriptionMergeRequest deserializedBillingSubscriptionMergeRequest
                = new BillingSubscriptionMergeRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("targetBillingSubscriptionName".equals(fieldName)) {
                    deserializedBillingSubscriptionMergeRequest.targetBillingSubscriptionName = reader.getString();
                } else if ("quantity".equals(fieldName)) {
                    deserializedBillingSubscriptionMergeRequest.quantity = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBillingSubscriptionMergeRequest;
        });
    }
}
