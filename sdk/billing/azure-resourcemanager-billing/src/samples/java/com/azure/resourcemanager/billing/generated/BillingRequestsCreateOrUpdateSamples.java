// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.resourcemanager.billing.fluent.models.BillingRequestInner;
import com.azure.resourcemanager.billing.models.BillingRequestProperties;
import com.azure.resourcemanager.billing.models.BillingRequestStatus;
import com.azure.resourcemanager.billing.models.BillingRequestType;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for BillingRequests CreateOrUpdate.
 */
public final class BillingRequestsCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/billing/resource-manager/Microsoft.Billing/stable/2024-04-01/examples/billingRequestsCreateOrUpdate
     * .json
     */
    /**
     * Sample code: BillingRequestsCreateOrUpdate.
     * 
     * @param manager Entry point to BillingManager.
     */
    public static void billingRequestsCreateOrUpdate(com.azure.resourcemanager.billing.BillingManager manager) {
        manager.billingRequests()
            .createOrUpdate("00000000-0000-0000-0000-000000000000",
                new BillingRequestInner().withProperties(new BillingRequestProperties()
                    .withAdditionalInformation(mapOf("RoleId", "40000000-aaaa-bbbb-cccc-200000000006"))
                    .withDecisionReason("New team member")
                    .withRequestScope(
                        "/providers/Microsoft.Billing/billingAccounts/00000000-0000-0000-0000-000000000000:00000000-0000-0000-0000-000000000000_2019-05-31/billingProfiles/xxxx-xxxx-xxx-xxx")
                    .withStatus(BillingRequestStatus.PENDING)
                    .withType(BillingRequestType.ROLE_ASSIGNMENT)),
                com.azure.core.util.Context.NONE);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
