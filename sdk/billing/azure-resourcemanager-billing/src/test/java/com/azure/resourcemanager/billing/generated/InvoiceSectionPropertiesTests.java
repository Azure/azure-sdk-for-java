// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.billing.fluent.models.InvoiceSectionProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class InvoiceSectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InvoiceSectionProperties model =
            BinaryData
                .fromString(
                    "{\"displayName\":\"srp\",\"labels\":{\"sgfyccsnew\":\"idnsezcxtb\",\"oosflnr\":\"dwzjeiach\",\"vypyqrimzinpv\":\"sfqpteehz\",\"rsoodqxhcrmnoh\":\"wjdk\"},\"state\":\"Active\",\"systemId\":\"whdsoifiyip\",\"tags\":{\"rcjxvsnbyxqabn\":\"qwpgrjbzn\",\"hurzafblj\":\"ocpcy\"},\"targetCloud\":\"USGov\"}")
                .toObject(InvoiceSectionProperties.class);
        Assertions.assertEquals("srp", model.displayName());
        Assertions.assertEquals("idnsezcxtb", model.labels().get("sgfyccsnew"));
        Assertions.assertEquals("qwpgrjbzn", model.tags().get("rcjxvsnbyxqabn"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InvoiceSectionProperties model =
            new InvoiceSectionProperties()
                .withDisplayName("srp")
                .withLabels(
                    mapOf(
                        "sgfyccsnew",
                        "idnsezcxtb",
                        "oosflnr",
                        "dwzjeiach",
                        "vypyqrimzinpv",
                        "sfqpteehz",
                        "rsoodqxhcrmnoh",
                        "wjdk"))
                .withTags(mapOf("rcjxvsnbyxqabn", "qwpgrjbzn", "hurzafblj", "ocpcy"));
        model = BinaryData.fromObject(model).toObject(InvoiceSectionProperties.class);
        Assertions.assertEquals("srp", model.displayName());
        Assertions.assertEquals("idnsezcxtb", model.labels().get("sgfyccsnew"));
        Assertions.assertEquals("qwpgrjbzn", model.tags().get("rcjxvsnbyxqabn"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
