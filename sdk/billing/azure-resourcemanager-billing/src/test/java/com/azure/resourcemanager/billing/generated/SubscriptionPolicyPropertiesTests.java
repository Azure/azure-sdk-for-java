// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.billing.models.PolicySummary;
import com.azure.resourcemanager.billing.models.PolicyType;
import com.azure.resourcemanager.billing.models.SubscriptionPolicyProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubscriptionPolicyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubscriptionPolicyProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Failed\",\"policies\":[{\"name\":\"grhrdic\",\"value\":\"wyjfowxwyovcxjs\",\"policyType\":\"SystemControlled\",\"scope\":\"cu\"},{\"name\":\"veksbuhoduchvl\",\"value\":\"rdpibfd\",\"policyType\":\"Other\",\"scope\":\"sspyszekbh\"},{\"name\":\"kaaggkreh\",\"value\":\"rnuybffljfii\",\"policyType\":\"SystemControlled\",\"scope\":\"agsqta\"}]}")
            .toObject(SubscriptionPolicyProperties.class);
        Assertions.assertEquals("grhrdic", model.policies().get(0).name());
        Assertions.assertEquals("wyjfowxwyovcxjs", model.policies().get(0).value());
        Assertions.assertEquals(PolicyType.SYSTEM_CONTROLLED, model.policies().get(0).policyType());
        Assertions.assertEquals("cu", model.policies().get(0).scope());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubscriptionPolicyProperties model = new SubscriptionPolicyProperties().withPolicies(Arrays.asList(
            new PolicySummary().withName("grhrdic")
                .withValue("wyjfowxwyovcxjs")
                .withPolicyType(PolicyType.SYSTEM_CONTROLLED)
                .withScope("cu"),
            new PolicySummary().withName("veksbuhoduchvl")
                .withValue("rdpibfd")
                .withPolicyType(PolicyType.OTHER)
                .withScope("sspyszekbh"),
            new PolicySummary().withName("kaaggkreh")
                .withValue("rnuybffljfii")
                .withPolicyType(PolicyType.SYSTEM_CONTROLLED)
                .withScope("agsqta")));
        model = BinaryData.fromObject(model).toObject(SubscriptionPolicyProperties.class);
        Assertions.assertEquals("grhrdic", model.policies().get(0).name());
        Assertions.assertEquals("wyjfowxwyovcxjs", model.policies().get(0).value());
        Assertions.assertEquals(PolicyType.SYSTEM_CONTROLLED, model.policies().get(0).policyType());
        Assertions.assertEquals("cu", model.policies().get(0).scope());
    }
}
