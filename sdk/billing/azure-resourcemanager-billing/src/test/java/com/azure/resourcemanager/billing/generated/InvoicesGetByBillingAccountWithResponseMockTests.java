// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.Invoice;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InvoicesGetByBillingAccountWithResponseMockTests {
    @Test
    public void testGetByBillingAccountWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"amountDue\":{\"currency\":\"alorxeegi\",\"value\":55.976494},\"azurePrepaymentApplied\":{\"currency\":\"e\",\"value\":52.930935},\"billedAmount\":{\"currency\":\"dihk\",\"value\":62.888504},\"billedDocumentId\":\"gkk\",\"billingProfileDisplayName\":\"wmjmgs\",\"billingProfileId\":\"w\",\"creditAmount\":{\"currency\":\"uqgneorqtrkxeikq\",\"value\":43.411427},\"creditForDocumentId\":\"nzbkqqbjcdaucs\",\"documents\":[{\"documentNumbers\":[\"jynuwcquepanqdm\",\"rodp\",\"tblmxblcbwvsqp\"],\"externalUrl\":\"vlcbbulepcgi\",\"kind\":\"Other\",\"name\":\"lx\",\"url\":\"yzcnxjvipehxlbb\",\"source\":\"Other\"},{\"documentNumbers\":[\"vgjipbnnghsjxwjn\",\"goxenhpyix\",\"brsaeuzsojblyygf\"],\"externalUrl\":\"cuydrswqmteuy\",\"kind\":\"Invoice\",\"name\":\"ea\",\"url\":\"rbnvoephtto\",\"source\":\"ENF\"},{\"documentNumbers\":[\"v\",\"rlrsrfrxy\"],\"externalUrl\":\"djpspipkpcvhqa\",\"kind\":\"CreditNote\",\"name\":\"sncgquixuqvatstk\",\"url\":\"ivcktjscjkexybx\",\"source\":\"Other\"}],\"documentType\":\"VoidNote\",\"dueDate\":\"2021-03-04T12:10:33Z\",\"failedPayments\":[{\"date\":\"2021-02-27T01:36:33Z\",\"failedPaymentReason\":\"IncorrectCardDetails\"},{\"date\":\"2021-01-02T14:40:07Z\",\"failedPaymentReason\":\"Other\"}],\"freeAzureCreditApplied\":{\"currency\":\"js\",\"value\":87.742256},\"invoiceDate\":\"2021-07-26T17:52:37Z\",\"invoicePeriodEndDate\":\"2021-01-21T06:55:08Z\",\"invoicePeriodStartDate\":\"2021-05-06T11:36:02Z\",\"invoiceType\":\"Other\",\"isMonthlyInvoice\":true,\"payments\":[{\"amount\":{\"currency\":\"fktytrivfleqv\",\"value\":48.087166},\"date\":\"2021-07-09T08:56:23Z\",\"paymentMethodId\":\"miwbaksz\",\"paymentMethodFamily\":\"Other\",\"paymentMethodType\":\"cezasjy\",\"paymentType\":\"hvt\"}],\"purchaseOrderNumber\":\"xlybddxebdhmxb\",\"rebillDetails\":{\"invoiceDocumentId\":\"jgrepbrbmc\",\"creditNoteDocumentId\":\"vxjwpvqrexlui\",\"rebillDetails\":{\"invoiceDocumentId\":\"qwbrfiovpdlt\",\"creditNoteDocumentId\":\"rfiwerlbcetrvird\",\"rebillDetails\":{\"invoiceDocumentId\":\"swpvnloopzyz\",\"creditNoteDocumentId\":\"chtabhacjlfq\",\"rebillDetails\":{}}}},\"status\":\"OverDue\",\"subscriptionDisplayName\":\"vwvpfqtpvz\",\"subscriptionId\":\"lnfvyhdhffnsdmha\",\"specialTaxationType\":\"InvoiceLevel\",\"subTotal\":{\"currency\":\"kmazhlewyrok\",\"value\":5.016178},\"taxAmount\":{\"currency\":\"fzzipyqtmdhb\",\"value\":65.221344},\"totalAmount\":{\"currency\":\"wxzlphzujkqaxbej\",\"value\":12.930525},\"refundDetails\":{\"requestedOn\":\"2021-10-11T02:33:04Z\",\"approvedOn\":\"2021-05-08T09:40:26Z\",\"completedOn\":\"2021-01-29T18:33:34Z\",\"amountRequested\":{\"currency\":\"hdapxdiibjjwue\",\"value\":67.662224},\"amountRefunded\":{\"currency\":\"hxhuhhnrmmfzfkh\",\"value\":14.988953},\"rebillInvoiceId\":\"ffajh\",\"transactionCount\":1272932771,\"refundStatus\":\"Approved\",\"refundOperationId\":\"ciedlqvpdt\",\"refundReason\":\"AccidentalPurchase\"}},\"tags\":{\"cawfupnypluivrjs\":\"rwlfgbuugchjtps\",\"egzxrusafvf\":\"lauzrpespeb\",\"uoh\":\"yqa\"},\"id\":\"imntxdvl\",\"name\":\"mnwhdhoyv\",\"type\":\"dumaplp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Invoice response = manager.invoices()
            .getByBillingAccountWithResponse("uayx", "vpiultybwwmjr", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("rwlfgbuugchjtps", response.tags().get("cawfupnypluivrjs"));
    }
}
