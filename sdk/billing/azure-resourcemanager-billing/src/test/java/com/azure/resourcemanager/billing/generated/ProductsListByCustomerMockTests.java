// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.AutoRenew;
import com.azure.resourcemanager.billing.models.Product;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProductsListByCustomerMockTests {
    @Test
    public void testListByCustomer() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"autoRenew\":\"On\",\"availabilityId\":\"tg\",\"billingFrequency\":\"tcplxidiuxzzhl\",\"billingProfileId\":\"xv\",\"billingProfileDisplayName\":\"puw\",\"customerId\":\"f\",\"customerDisplayName\":\"wvrbbpgibyzrpqeh\",\"displayName\":\"ldvxcjjhjnpa\",\"endDate\":\"zfy\",\"invoiceSectionId\":\"gklywdlxmyoqmam\",\"invoiceSectionDisplayName\":\"cqqtqzwntnly\",\"lastCharge\":{\"currency\":\"mdwi\",\"value\":35.370193},\"lastChargeDate\":\"cforgcufiphnr\",\"productType\":\"zz\",\"productTypeId\":\"nybfsoayatqkdzux\",\"skuId\":\"dzkvbe\",\"skuDescription\":\"jsaoggd\",\"purchaseDate\":\"jkoxlccjdooy\",\"quantity\":4188067949162425237,\"status\":\"Suspended\",\"tenantId\":\"zdjhqq\",\"reseller\":{\"resellerId\":\"idsbdftbxruuuy\",\"description\":\"rrrgjnqk\"}},\"tags\":{\"fittheax\":\"rwnpwgchlabtt\",\"acss\":\"yhflnlu\"},\"id\":\"llfukqurrtcfgq\",\"name\":\"cxyrsleghozsm\",\"type\":\"jsvymozryyyvlxm\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Product> response = manager.products()
            .listByCustomer("ldglz", "k", "ftjrederkvbdvl", "zkxaujj", 8285251286077676208L, 8252951728482713654L, true,
                "dwrvffjpws", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("rwnpwgchlabtt", response.iterator().next().tags().get("fittheax"));
        Assertions.assertEquals(AutoRenew.ON, response.iterator().next().properties().autoRenew());
    }
}
