// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.AssociatedTenant;
import com.azure.resourcemanager.billing.models.BillingManagementTenantState;
import com.azure.resourcemanager.billing.models.ProvisioningTenantState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AssociatedTenantsListByBillingAccountMockTests {
    @Test
    public void testListByBillingAccount() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"displayName\":\"ypwyiulayno\",\"tenantId\":\"gkfh\",\"billingManagementState\":\"Active\",\"provisioningManagementState\":\"BillingRequestExpired\",\"provisioningBillingRequestId\":\"smwgsghqucumldd\"},\"tags\":{\"feothxu\":\"ml\"},\"id\":\"igrjdljlkqhvkrbz\",\"name\":\"uast\",\"type\":\"xk\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AssociatedTenant> response = manager.associatedTenants()
            .listByBillingAccount("gvbhxmndztgs", false, "ayqmarxneibpgbrh", "jdqknhqn", 4606678382697661021L,
                8293041789953549022L, false, "nnohmmzngo", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ml", response.iterator().next().tags().get("feothxu"));
        Assertions.assertEquals("ypwyiulayno", response.iterator().next().properties().displayName());
        Assertions.assertEquals("gkfh", response.iterator().next().properties().tenantId());
        Assertions.assertEquals(BillingManagementTenantState.ACTIVE,
            response.iterator().next().properties().billingManagementState());
        Assertions.assertEquals(ProvisioningTenantState.BILLING_REQUEST_EXPIRED,
            response.iterator().next().properties().provisioningManagementState());
    }
}
