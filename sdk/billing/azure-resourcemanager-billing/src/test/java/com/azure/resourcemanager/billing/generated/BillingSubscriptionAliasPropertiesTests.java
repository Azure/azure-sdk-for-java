// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.billing.fluent.models.BillingSubscriptionAliasProperties;
import com.azure.resourcemanager.billing.models.AutoRenew;
import com.azure.resourcemanager.billing.models.Beneficiary;
import com.azure.resourcemanager.billing.models.SystemOverrides;
import org.junit.jupiter.api.Assertions;

public final class BillingSubscriptionAliasPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BillingSubscriptionAliasProperties model = BinaryData.fromString(
            "{\"billingSubscriptionId\":\"fyuicdh\",\"autoRenew\":\"Off\",\"beneficiaryTenantId\":\"bwwg\",\"beneficiary\":{\"tenantId\":\"ibidmhmwffp\",\"objectId\":\"muvapc\"},\"billingFrequency\":\"crrvweyo\",\"billingProfileId\":\"yyukphaimmo\",\"billingPolicies\":{\"apyyrmfsvbpavbo\":\"qboshbra\",\"gahxkumasjcaa\":\"fppdbwnu\",\"ehqepvufhbzehe\":\"fdmmcpug\",\"qnbldxe\":\"hoqhnl\"},\"billingProfileDisplayName\":\"lgsc\",\"billingProfileName\":\"ri\",\"consumptionCostCenter\":\"rsrrmoucsofldp\",\"customerId\":\"iyfc\",\"customerDisplayName\":\"beolh\",\"customerName\":\"lvbmxuqibsxtkcu\",\"displayName\":\"b\",\"enrollmentAccountId\":\"arfsi\",\"enrollmentAccountDisplayName\":\"lkjxnqpvwgf\",\"enrollmentAccountSubscriptionDetails\":{\"enrollmentAccountStartDate\":\"2021-11-10T23:28Z\",\"subscriptionEnrollmentAccountStatus\":\"Transferring\"},\"invoiceSectionId\":\"izmdksa\",\"invoiceSectionDisplayName\":\"fcluqvo\",\"invoiceSectionName\":\"ycjimryvwgcwwpbm\",\"lastMonthCharges\":{\"currency\":\"esyds\",\"value\":22.182518},\"monthToDateCharges\":{\"currency\":\"hecbvopwndyq\",\"value\":75.53279},\"nextBillingCycleDetails\":{\"billingFrequency\":\"klmtkhlowkx\"},\"offerId\":\"vbrdfjmzsyzfho\",\"productCategory\":\"h\",\"productType\":\"cyychunsjlp\",\"productTypeId\":\"twszhvvuic\",\"purchaseDate\":\"2021-07-19T03:46:29Z\",\"quantity\":2070519183658188671,\"reseller\":{\"resellerId\":\"wrbfdpyflubh\",\"description\":\"glrocuy\"},\"renewalTermDetails\":{\"billingFrequency\":\"hhmemhooclutnp\",\"productId\":\"emc\",\"productTypeId\":\"kmmykyujxsglh\",\"skuId\":\"rryejylmbkzudnig\",\"termDuration\":\"ihotjewlpxuzzjg\",\"quantity\":8597599731989058716,\"termEndDate\":\"2021-03-12T11:11:22Z\"},\"skuId\":\"qotoihiqakydiwfb\",\"skuDescription\":\"wpzdqtvhcspo\",\"systemOverrides\":{\"cancellation\":\"Allowed\",\"cancellationAllowedEndDate\":\"2021-07-16T23:29:41Z\"},\"resourceUri\":\"pie\",\"termDuration\":\"bebjfu\",\"termStartDate\":\"2021-09-18T23:08:53Z\",\"termEndDate\":\"2021-02-08T00:52:50Z\",\"provisioningTenantId\":\"h\",\"status\":\"Cancelled\",\"operationStatus\":\"None\",\"provisioningState\":\"Created\",\"subscriptionId\":\"nt\",\"suspensionReasons\":[\"tzviqsowsaaelcat\",\"cjuhplrvkm\",\"cwmjvlg\",\"ggcvk\"],\"suspensionReasonDetails\":[{\"effectiveDate\":\"2021-03-03T13:43:34Z\",\"reason\":\"PolicyViolation\"},{\"effectiveDate\":\"2021-07-07T04:53:59Z\",\"reason\":\"Expired\"},{\"effectiveDate\":\"2021-12-07T09:17:17Z\",\"reason\":\"PastDue\"},{\"effectiveDate\":\"2021-08-28T04:28Z\",\"reason\":\"PastDue\"}]}")
            .toObject(BillingSubscriptionAliasProperties.class);
        Assertions.assertEquals(AutoRenew.OFF, model.autoRenew());
        Assertions.assertEquals("bwwg", model.beneficiaryTenantId());
        Assertions.assertEquals("ibidmhmwffp", model.beneficiary().tenantId());
        Assertions.assertEquals("muvapc", model.beneficiary().objectId());
        Assertions.assertEquals("crrvweyo", model.billingFrequency());
        Assertions.assertEquals("yyukphaimmo", model.billingProfileId());
        Assertions.assertEquals("rsrrmoucsofldp", model.consumptionCostCenter());
        Assertions.assertEquals("iyfc", model.customerId());
        Assertions.assertEquals("b", model.displayName());
        Assertions.assertEquals("izmdksa", model.invoiceSectionId());
        Assertions.assertEquals("twszhvvuic", model.productTypeId());
        Assertions.assertEquals(2070519183658188671L, model.quantity());
        Assertions.assertEquals("qotoihiqakydiwfb", model.skuId());
        Assertions.assertEquals("bebjfu", model.termDuration());
        Assertions.assertEquals("h", model.provisioningTenantId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BillingSubscriptionAliasProperties model = new BillingSubscriptionAliasProperties().withAutoRenew(AutoRenew.OFF)
            .withBeneficiaryTenantId("bwwg")
            .withBeneficiary(new Beneficiary().withTenantId("ibidmhmwffp").withObjectId("muvapc"))
            .withBillingFrequency("crrvweyo")
            .withBillingProfileId("yyukphaimmo")
            .withConsumptionCostCenter("rsrrmoucsofldp")
            .withCustomerId("iyfc")
            .withDisplayName("b")
            .withInvoiceSectionId("izmdksa")
            .withProductTypeId("twszhvvuic")
            .withQuantity(2070519183658188671L)
            .withSkuId("qotoihiqakydiwfb")
            .withSystemOverrides(new SystemOverrides())
            .withTermDuration("bebjfu")
            .withProvisioningTenantId("h");
        model = BinaryData.fromObject(model).toObject(BillingSubscriptionAliasProperties.class);
        Assertions.assertEquals(AutoRenew.OFF, model.autoRenew());
        Assertions.assertEquals("bwwg", model.beneficiaryTenantId());
        Assertions.assertEquals("ibidmhmwffp", model.beneficiary().tenantId());
        Assertions.assertEquals("muvapc", model.beneficiary().objectId());
        Assertions.assertEquals("crrvweyo", model.billingFrequency());
        Assertions.assertEquals("yyukphaimmo", model.billingProfileId());
        Assertions.assertEquals("rsrrmoucsofldp", model.consumptionCostCenter());
        Assertions.assertEquals("iyfc", model.customerId());
        Assertions.assertEquals("b", model.displayName());
        Assertions.assertEquals("izmdksa", model.invoiceSectionId());
        Assertions.assertEquals("twszhvvuic", model.productTypeId());
        Assertions.assertEquals(2070519183658188671L, model.quantity());
        Assertions.assertEquals("qotoihiqakydiwfb", model.skuId());
        Assertions.assertEquals("bebjfu", model.termDuration());
        Assertions.assertEquals("h", model.provisioningTenantId());
    }
}
