// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.billing.fluent.models.PaymentMethodLinkInner;
import com.azure.resourcemanager.billing.fluent.models.PaymentMethodProperties;
import com.azure.resourcemanager.billing.models.PaymentMethodFamily;
import com.azure.resourcemanager.billing.models.PaymentMethodLogo;
import com.azure.resourcemanager.billing.models.PaymentMethodStatus;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PaymentMethodLinkInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PaymentMethodLinkInner model = BinaryData.fromString(
            "{\"properties\":{\"accountHolderName\":\"efcpczshn\",\"displayName\":\"nda\",\"expiration\":\"upfkhuytuszxhmtv\",\"family\":\"None\",\"lastFourDigits\":\"w\",\"logos\":[{\"mimeType\":\"vzwydwtthaokgks\",\"url\":\"i\"},{\"mimeType\":\"sshajqfukpee\",\"url\":\"geumil\"},{\"mimeType\":\"uitrdexyiono\",\"url\":\"inbd\"}],\"paymentMethod\":{\"id\":\"xcwqqrsmpc\",\"accountHolderName\":\"prtug\",\"displayName\":\"bzbcyksiv\",\"expiration\":\"ogd\",\"family\":\"CheckWire\",\"lastFourDigits\":\"cmkrftsjcwjj\",\"logos\":[{\"mimeType\":\"bawvif\",\"url\":\"kecifhocjxwklo\"},{\"mimeType\":\"rvtxvcmufunlc\",\"url\":\"xvi\"},{\"mimeType\":\"eyngjg\",\"url\":\"quv\"}],\"paymentMethodType\":\"gglpmcrdcuelj\",\"status\":\"active\"},\"paymentMethodId\":\"xmfqryarvsxzqbg\",\"paymentMethodType\":\"jkayspthzo\",\"status\":\"active\"},\"tags\":{\"djxyxgbkkqvjcteo\":\"mjtgblioskkfmkm\",\"pxvjnzd\":\"dlrslskk\"},\"id\":\"o\",\"name\":\"ojhpcnabxzfsn\",\"type\":\"gyte\"}")
            .toObject(PaymentMethodLinkInner.class);
        Assertions.assertEquals("mjtgblioskkfmkm", model.tags().get("djxyxgbkkqvjcteo"));
        Assertions.assertEquals(PaymentMethodFamily.CHECK_WIRE, model.paymentMethod().family());
        Assertions.assertEquals(PaymentMethodStatus.ACTIVE, model.paymentMethod().status());
        Assertions.assertEquals("xmfqryarvsxzqbg", model.paymentMethodId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PaymentMethodLinkInner model
            = new PaymentMethodLinkInner().withTags(mapOf("djxyxgbkkqvjcteo", "mjtgblioskkfmkm", "pxvjnzd", "dlrslskk"))
                .withPaymentMethod(new PaymentMethodProperties().withFamily(PaymentMethodFamily.CHECK_WIRE)
                    .withLogos(Arrays.asList(new PaymentMethodLogo(), new PaymentMethodLogo(), new PaymentMethodLogo()))
                    .withStatus(PaymentMethodStatus.ACTIVE))
                .withPaymentMethodId("xmfqryarvsxzqbg");
        model = BinaryData.fromObject(model).toObject(PaymentMethodLinkInner.class);
        Assertions.assertEquals("mjtgblioskkfmkm", model.tags().get("djxyxgbkkqvjcteo"));
        Assertions.assertEquals(PaymentMethodFamily.CHECK_WIRE, model.paymentMethod().family());
        Assertions.assertEquals(PaymentMethodStatus.ACTIVE, model.paymentMethod().status());
        Assertions.assertEquals("xmfqryarvsxzqbg", model.paymentMethodId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
