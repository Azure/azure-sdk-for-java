// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.AutoRenew;
import com.azure.resourcemanager.billing.models.BillingSubscription;
import com.azure.resourcemanager.billing.models.BillingSubscriptionSplitRequest;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BillingSubscriptionsSplitMockTests {
    @Test
    public void testSplit() throws Exception {
        String responseStr
            = "{\"properties\":{\"autoRenew\":\"Off\",\"beneficiaryTenantId\":\"fwqjzybmfqdnpp\",\"beneficiary\":{\"tenantId\":\"guamrvamuv\",\"objectId\":\"dwpj\"},\"billingFrequency\":\"lukgctvnsp\",\"billingProfileId\":\"syydjlhdukcsqvye\",\"billingPolicies\":{\"jwum\":\"hul\",\"nonxemhqpz\":\"jdymeqvnxpfyxdjs\",\"vgcm\":\"nat\",\"fevtwllqy\":\"vdjlww\"},\"billingProfileDisplayName\":\"jcoyvfwgk\",\"billingProfileName\":\"h\",\"consumptionCostCenter\":\"hx\",\"customerId\":\"ckwbqwj\",\"customerDisplayName\":\"mmkwahrooy\",\"customerName\":\"obnvyue\",\"displayName\":\"coerohextigukfk\",\"enrollmentAccountId\":\"ycb\",\"enrollmentAccountDisplayName\":\"mbnpeenlq\",\"enrollmentAccountSubscriptionDetails\":{\"enrollmentAccountStartDate\":\"2021-02-26T06:07:10Z\",\"subscriptionEnrollmentAccountStatus\":\"Expired\"},\"invoiceSectionId\":\"s\",\"invoiceSectionDisplayName\":\"qdvfj\",\"invoiceSectionName\":\"qephtoshqt\",\"lastMonthCharges\":{\"currency\":\"jwgujrc\",\"value\":5.7484865},\"monthToDateCharges\":{\"currency\":\"pyqoizfyasyddq\",\"value\":97.7696},\"nextBillingCycleDetails\":{\"billingFrequency\":\"wyyeomiflrvfe\"},\"offerId\":\"ctshwfrhhasabvau\",\"productCategory\":\"wwumkbpgcilbwtp\",\"productType\":\"j\",\"productTypeId\":\"fwuqprpdgitenyu\",\"purchaseDate\":\"2021-12-09T00:28:28Z\",\"quantity\":8642064745873895570,\"reseller\":{\"resellerId\":\"xghamrplanchqot\",\"description\":\"xlmxejwyvjzbj\"},\"renewalTermDetails\":{\"billingFrequency\":\"uekbbypqsmp\",\"productId\":\"eqieiux\",\"productTypeId\":\"uwnda\",\"skuId\":\"jjhrgkjjpc\",\"termDuration\":\"hlzyxvtajfjat\",\"quantity\":3144927729864828326,\"termEndDate\":\"2021-10-06T22:54:34Z\"},\"skuId\":\"rdgcpzanaqven\",\"skuDescription\":\"puelrnanbrpkocux\",\"systemOverrides\":{\"cancellation\":\"Allowed\",\"cancellationAllowedEndDate\":\"2021-03-12T16:25:40Z\"},\"resourceUri\":\"jltckiwxggfagi\",\"termDuration\":\"mdboefnhxhahuq\",\"termStartDate\":\"2021-06-06T02:38:34Z\",\"termEndDate\":\"2021-04-04T13:10:23Z\",\"provisioningTenantId\":\"odmokrqdbsgkq\",\"status\":\"Expired\",\"operationStatus\":\"None\",\"provisioningState\":\"Succeeded\",\"subscriptionId\":\"jxhyzzlocjhzppdb\",\"suspensionReasons\":[\"cxbofpr\",\"mivapesbfzllej\",\"wwsfvtgh\"],\"suspensionReasonDetails\":[{\"effectiveDate\":\"2021-11-03T21:58:42Z\",\"reason\":\"Other\"},{\"effectiveDate\":\"2021-09-05T19:05:33Z\",\"reason\":\"Transferred\"}]},\"tags\":{\"sprbxj\":\"vel\",\"de\":\"ezujtoud\"},\"id\":\"mvssr\",\"name\":\"ciexu\",\"type\":\"emt\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        BillingSubscription response = manager.billingSubscriptions()
            .split("nlpqd", "nskatupm",
                new BillingSubscriptionSplitRequest().withTargetProductTypeId("lwknrdvvmbjernd")
                    .withTargetSkuId("ywxqr")
                    .withQuantity(1444417321)
                    .withTermDuration("kdeetnne")
                    .withBillingFrequency("utlkszuxjmrz"),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vel", response.tags().get("sprbxj"));
        Assertions.assertEquals(AutoRenew.OFF, response.autoRenew());
        Assertions.assertEquals("fwqjzybmfqdnpp", response.beneficiaryTenantId());
        Assertions.assertEquals("guamrvamuv", response.beneficiary().tenantId());
        Assertions.assertEquals("dwpj", response.beneficiary().objectId());
        Assertions.assertEquals("lukgctvnsp", response.billingFrequency());
        Assertions.assertEquals("syydjlhdukcsqvye", response.billingProfileId());
        Assertions.assertEquals("hx", response.consumptionCostCenter());
        Assertions.assertEquals("ckwbqwj", response.customerId());
        Assertions.assertEquals("coerohextigukfk", response.displayName());
        Assertions.assertEquals("s", response.invoiceSectionId());
        Assertions.assertEquals("fwuqprpdgitenyu", response.productTypeId());
        Assertions.assertEquals(8642064745873895570L, response.quantity());
        Assertions.assertEquals("rdgcpzanaqven", response.skuId());
        Assertions.assertEquals("mdboefnhxhahuq", response.termDuration());
        Assertions.assertEquals("odmokrqdbsgkq", response.provisioningTenantId());
    }
}
