// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.AutoRenew;
import com.azure.resourcemanager.billing.models.Product;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProductsListByBillingProfileMockTests {
    @Test
    public void testListByBillingProfile() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"autoRenew\":\"On\",\"availabilityId\":\"ruskmbq\",\"billingFrequency\":\"ecnsqeewfuwgmk\",\"billingProfileId\":\"yazibhw\",\"billingProfileDisplayName\":\"wmebmx\",\"customerId\":\"cfd\",\"customerDisplayName\":\"kurppwksixh\",\"displayName\":\"nvydxjkdsqe\",\"endDate\":\"jd\",\"invoiceSectionId\":\"tiqwixsdxxflwfv\",\"invoiceSectionDisplayName\":\"bwhrguqetvbqh\",\"lastCharge\":{\"currency\":\"flzj\",\"value\":74.232},\"lastChargeDate\":\"wxlggrtpayfk\",\"productType\":\"gshbkdpt\",\"productTypeId\":\"sqznv\",\"skuId\":\"jtrashnfofi\",\"skuDescription\":\"loeq\",\"purchaseDate\":\"cpqboubeh\",\"quantity\":4610656788817968838,\"status\":\"Other\",\"tenantId\":\"suuvo\",\"reseller\":{\"resellerId\":\"eoinxko\",\"description\":\"rnlgnwwjikg\"}},\"tags\":{\"pjnhhiofcnyzqz\":\"czzkzi\",\"cemagsyljww\":\"lddngqwmlleg\"},\"id\":\"qh\",\"name\":\"hlajmikqvnrj\",\"type\":\"jopbgtzrgyrldoa\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Product> response = manager.products()
            .listByBillingProfile("ueksvjtgpy", "atl", "si", "xqmmxjdk", 3998494545207100937L, 7056514834670945245L,
                true, "lfgow", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("czzkzi", response.iterator().next().tags().get("pjnhhiofcnyzqz"));
        Assertions.assertEquals(AutoRenew.ON, response.iterator().next().properties().autoRenew());
    }
}
