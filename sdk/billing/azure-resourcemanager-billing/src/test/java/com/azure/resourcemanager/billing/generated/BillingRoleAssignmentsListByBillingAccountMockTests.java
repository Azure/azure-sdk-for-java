// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.BillingRoleAssignment;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BillingRoleAssignmentsListByBillingAccountMockTests {
    @Test
    public void testListByBillingAccount() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Creating\",\"createdOn\":\"2021-04-05T18:53:39Z\",\"createdByPrincipalTenantId\":\"irjvqxvwkiocxo\",\"createdByPrincipalId\":\"jwbu\",\"createdByPrincipalPuid\":\"qflm\",\"createdByUserEmailAddress\":\"rlqxbctatez\",\"modifiedOn\":\"2021-12-08T02:06:08Z\",\"modifiedByPrincipalPuid\":\"bcqqnlsjxcs\",\"modifiedByUserEmailAddress\":\"it\",\"modifiedByPrincipalId\":\"mra\",\"modifiedByPrincipalTenantId\":\"jido\",\"principalPuid\":\"vltcvmahpuwku\",\"principalId\":\"bnhi\",\"principalTenantId\":\"hyzhrcqdfwbifn\",\"roleDefinitionId\":\"hlsforsimtf\",\"scope\":\"mmynbrpelpfi\",\"userAuthenticationType\":\"ezgxmpeszam\",\"userEmailAddress\":\"ler\",\"principalTenantName\":\"nfu\",\"principalDisplayName\":\"czktllxswt\",\"principalType\":\"Unknown\",\"billingRequestId\":\"mirmnrijefmrt\",\"billingAccountId\":\"c\",\"billingAccountDisplayName\":\"dspthg\",\"billingProfileId\":\"mwtbl\",\"billingProfileDisplayName\":\"kok\",\"invoiceSectionId\":\"i\",\"invoiceSectionDisplayName\":\"iefwlnm\",\"customerId\":\"ffcnuestbsliejdn\",\"customerDisplayName\":\"otelikji\"},\"tags\":{\"dwbymuqlngncrd\":\"hhxtzx\"},\"id\":\"ctysecpekhx\",\"name\":\"byh\",\"type\":\"tzcvimmwckoz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<BillingRoleAssignment> response = manager.billingRoleAssignments()
            .listByBillingAccount("r", "uydldp", 8679544889546246428L, 9007721601109399576L,
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hhxtzx", response.iterator().next().tags().get("dwbymuqlngncrd"));
        Assertions.assertEquals("vltcvmahpuwku", response.iterator().next().properties().principalPuid());
        Assertions.assertEquals("bnhi", response.iterator().next().properties().principalId());
        Assertions.assertEquals("hyzhrcqdfwbifn", response.iterator().next().properties().principalTenantId());
        Assertions.assertEquals("hlsforsimtf", response.iterator().next().properties().roleDefinitionId());
        Assertions.assertEquals("mmynbrpelpfi", response.iterator().next().properties().scope());
        Assertions.assertEquals("ezgxmpeszam", response.iterator().next().properties().userAuthenticationType());
        Assertions.assertEquals("ler", response.iterator().next().properties().userEmailAddress());
    }
}
