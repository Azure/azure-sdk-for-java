// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.BillingRoleAssignment;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BillingRoleAssignmentsListByEnrollmentAccountMockTests {
    @Test
    public void testListByEnrollmentAccount() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Canceled\",\"createdOn\":\"2021-06-16T08:03:27Z\",\"createdByPrincipalTenantId\":\"xf\",\"createdByPrincipalId\":\"p\",\"createdByPrincipalPuid\":\"qclmd\",\"createdByUserEmailAddress\":\"fxxepzpxzxlcqzfx\",\"modifiedOn\":\"2021-06-24T08:55:26Z\",\"modifiedByPrincipalPuid\":\"qmcjbsmkirpqnipu\",\"modifiedByUserEmailAddress\":\"hkcomeobw\",\"modifiedByPrincipalId\":\"uzltenlb\",\"modifiedByPrincipalTenantId\":\"lmxoz\",\"principalPuid\":\"ndoduom\",\"principalId\":\"jbrixymckikkqy\",\"principalTenantId\":\"rhwis\",\"roleDefinitionId\":\"yfmrzcqfevnkyak\",\"scope\":\"tehognsddjk\",\"userAuthenticationType\":\"edesuazogfcnx\",\"userEmailAddress\":\"g\",\"principalTenantName\":\"mtcq\",\"principalDisplayName\":\"y\",\"principalType\":\"Group\",\"billingRequestId\":\"xypav\",\"billingAccountId\":\"jczgohv\",\"billingAccountDisplayName\":\"uw\",\"billingProfileId\":\"hmxczbyfkocgmzd\",\"billingProfileDisplayName\":\"snlwscrngtw\",\"invoiceSectionId\":\"rolwv\",\"invoiceSectionDisplayName\":\"ksdksutacuctih\",\"customerId\":\"ish\",\"customerDisplayName\":\"jhxvpmqququx\"},\"tags\":{\"rxlexoweorocr\":\"n\",\"gbq\":\"icgym\"},\"id\":\"yrvhtv\",\"name\":\"jvwmrgcnz\",\"type\":\"rpl\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<BillingRoleAssignment> response = manager.billingRoleAssignments()
            .listByEnrollmentAccount("idcetfvgwfwsldi", "wouppvyddq", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("n", response.iterator().next().tags().get("rxlexoweorocr"));
        Assertions.assertEquals("ndoduom", response.iterator().next().properties().principalPuid());
        Assertions.assertEquals("jbrixymckikkqy", response.iterator().next().properties().principalId());
        Assertions.assertEquals("rhwis", response.iterator().next().properties().principalTenantId());
        Assertions.assertEquals("yfmrzcqfevnkyak", response.iterator().next().properties().roleDefinitionId());
        Assertions.assertEquals("tehognsddjk", response.iterator().next().properties().scope());
        Assertions.assertEquals("edesuazogfcnx", response.iterator().next().properties().userAuthenticationType());
        Assertions.assertEquals("g", response.iterator().next().properties().userEmailAddress());
    }
}
