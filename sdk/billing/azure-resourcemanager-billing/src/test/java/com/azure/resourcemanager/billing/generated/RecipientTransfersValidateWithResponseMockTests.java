// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.AcceptTransferRequest;
import com.azure.resourcemanager.billing.models.ProductDetails;
import com.azure.resourcemanager.billing.models.ProductType;
import com.azure.resourcemanager.billing.models.ValidateTransferListResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RecipientTransfersValidateWithResponseMockTests {
    @Test
    public void testValidateWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"status\":\"pkatccetyyvx\",\"productId\":\"obb\",\"results\":[{},{},{},{}]}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ValidateTransferListResponse response = manager.recipientTransfers()
            .validateWithResponse("xlxoksyypft",
                new AcceptTransferRequest().withProductDetails(Arrays
                    .asList(new ProductDetails().withProductType(ProductType.SAVINGS_PLAN).withProductId("bqgatkl"))),
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
