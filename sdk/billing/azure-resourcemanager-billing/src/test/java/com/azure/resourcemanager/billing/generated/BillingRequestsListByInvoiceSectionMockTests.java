// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.BillingRequest;
import com.azure.resourcemanager.billing.models.BillingRequestStatus;
import com.azure.resourcemanager.billing.models.BillingRequestType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BillingRequestsListByInvoiceSectionMockTests {
    @Test
    public void testListByInvoiceSection() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"ConfirmedBilling\",\"additionalInformation\":{\"gomvvhxowpcbapn\":\"ehkho\"},\"reviewedBy\":{\"tenantId\":\"aqawbmpspfeylql\",\"objectId\":\"vvujex\",\"upn\":\"glxrkgjnm\"},\"reviewalDate\":\"2021-05-18T06:01:13Z\",\"billingAccountId\":\"lavxjfiuofpiei\",\"billingAccountName\":\"lvs\",\"billingAccountDisplayName\":\"ywjopac\",\"billingAccountPrimaryBillingTenantId\":\"hydv\",\"billingProfileId\":\"mfngpmillxgjsci\",\"billingProfileName\":\"gsoriobij\",\"billingProfileDisplayName\":\"ydyeuy\",\"createdBy\":{\"tenantId\":\"okayrg\",\"objectId\":\"b\",\"upn\":\"opdweoft\"},\"creationDate\":\"2021-11-30T05:17:10Z\",\"expirationDate\":\"2021-07-17T00:13:26Z\",\"decisionReason\":\"gsioc\",\"invoiceSectionId\":\"kmv\",\"invoiceSectionName\":\"nx\",\"invoiceSectionDisplayName\":\"fffhtjnwos\",\"customerId\":\"fjxtvlxxzqfc\",\"customerName\":\"riomxeezwyhj\",\"customerDisplayName\":\"jiqegmxdbs\",\"subscriptionId\":\"cwhpy\",\"subscriptionName\":\"kgdet\",\"subscriptionDisplayName\":\"wcanzbjekwuyckyv\",\"justification\":\"nsm\",\"recipients\":[{\"tenantId\":\"wjbct\",\"objectId\":\"p\",\"upn\":\"jqjtotd\"},{\"tenantId\":\"osc\",\"objectId\":\"hwuusiecktybh\",\"upn\":\"xidhhxomil\"},{\"tenantId\":\"xj\",\"objectId\":\"ugxwjwilmqrslaat\",\"upn\":\"twujjzgx\"}],\"requestScope\":\"qwlxrhg\",\"billingScope\":\"hvtqqykbkk\",\"status\":\"Declined\",\"type\":\"RoleAssignment\",\"lastUpdatedBy\":{\"tenantId\":\"gm\",\"objectId\":\"rvvmvmcofn\",\"upn\":\"lbsnosnqliw\"},\"lastUpdatedDate\":\"2020-12-31T14:56:04Z\"},\"tags\":{\"htgmknazgbj\":\"fetya\"},\"id\":\"rpgiqstt\",\"name\":\"ucrcmmai\",\"type\":\"p\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<BillingRequest> response = manager.billingRequests()
            .listByInvoiceSection("pryj", "gtnse", "ouxly", "s", "vyljurkeposehqq", 7732723891535906574L,
                5776245564488623982L, true, "wjwdsdlzmkxer", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("fetya", response.iterator().next().tags().get("htgmknazgbj"));
        Assertions.assertEquals("ehkho",
            response.iterator().next().properties().additionalInformation().get("gomvvhxowpcbapn"));
        Assertions.assertEquals("aqawbmpspfeylql", response.iterator().next().properties().reviewedBy().tenantId());
        Assertions.assertEquals("vvujex", response.iterator().next().properties().reviewedBy().objectId());
        Assertions.assertEquals("glxrkgjnm", response.iterator().next().properties().reviewedBy().upn());
        Assertions.assertEquals("okayrg", response.iterator().next().properties().createdBy().tenantId());
        Assertions.assertEquals("b", response.iterator().next().properties().createdBy().objectId());
        Assertions.assertEquals("opdweoft", response.iterator().next().properties().createdBy().upn());
        Assertions.assertEquals("gsioc", response.iterator().next().properties().decisionReason());
        Assertions.assertEquals("nsm", response.iterator().next().properties().justification());
        Assertions.assertEquals("wjbct", response.iterator().next().properties().recipients().get(0).tenantId());
        Assertions.assertEquals("p", response.iterator().next().properties().recipients().get(0).objectId());
        Assertions.assertEquals("jqjtotd", response.iterator().next().properties().recipients().get(0).upn());
        Assertions.assertEquals("qwlxrhg", response.iterator().next().properties().requestScope());
        Assertions.assertEquals(BillingRequestStatus.DECLINED, response.iterator().next().properties().status());
        Assertions.assertEquals(BillingRequestType.ROLE_ASSIGNMENT, response.iterator().next().properties().type());
        Assertions.assertEquals("gm", response.iterator().next().properties().lastUpdatedBy().tenantId());
        Assertions.assertEquals("rvvmvmcofn", response.iterator().next().properties().lastUpdatedBy().objectId());
        Assertions.assertEquals("lbsnosnqliw", response.iterator().next().properties().lastUpdatedBy().upn());
    }
}
