// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.billing.fluent.models.EnrollmentAccountInner;
import com.azure.resourcemanager.billing.models.EnrollmentAccountProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class EnrollmentAccountInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EnrollmentAccountInner model = BinaryData.fromString(
            "{\"properties\":{\"costCenter\":\"nu\",\"displayName\":\"ggmuwdcho\",\"departmentDisplayName\":\"nkf\",\"departmentId\":\"lv\",\"isDevTestEnabled\":true,\"accountOwner\":\"kizvoa\",\"authType\":\"naqln\",\"status\":\"iguyxlykwphv\",\"startDate\":\"2021-11-13T04:48:37Z\",\"endDate\":\"2021-06-18T05:52:26Z\"},\"tags\":{\"exaonwivkcq\":\"pejtl\"},\"id\":\"xhxknlc\",\"name\":\"rmmkyupiju\",\"type\":\"yqjf\"}")
            .toObject(EnrollmentAccountInner.class);
        Assertions.assertEquals("pejtl", model.tags().get("exaonwivkcq"));
        Assertions.assertEquals("nu", model.properties().costCenter());
        Assertions.assertEquals("ggmuwdcho", model.properties().displayName());
        Assertions.assertEquals(true, model.properties().isDevTestEnabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EnrollmentAccountInner model = new EnrollmentAccountInner().withTags(mapOf("exaonwivkcq", "pejtl"))
            .withProperties(new EnrollmentAccountProperties().withCostCenter("nu")
                .withDisplayName("ggmuwdcho")
                .withIsDevTestEnabled(true));
        model = BinaryData.fromObject(model).toObject(EnrollmentAccountInner.class);
        Assertions.assertEquals("pejtl", model.tags().get("exaonwivkcq"));
        Assertions.assertEquals("nu", model.properties().costCenter());
        Assertions.assertEquals("ggmuwdcho", model.properties().displayName());
        Assertions.assertEquals(true, model.properties().isDevTestEnabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
