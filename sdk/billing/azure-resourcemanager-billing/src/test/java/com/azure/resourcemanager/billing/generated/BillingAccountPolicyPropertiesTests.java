// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.billing.models.BillingAccountPolicyProperties;
import com.azure.resourcemanager.billing.models.BillingAccountPolicyPropertiesEnterpriseAgreementPolicies;
import com.azure.resourcemanager.billing.models.EnrollmentAccountOwnerViewCharges;
import com.azure.resourcemanager.billing.models.EnrollmentAuthLevelState;
import com.azure.resourcemanager.billing.models.EnrollmentDepartmentAdminViewCharges;
import com.azure.resourcemanager.billing.models.MarketplacePurchasesPolicy;
import com.azure.resourcemanager.billing.models.PolicySummary;
import com.azure.resourcemanager.billing.models.PolicyType;
import com.azure.resourcemanager.billing.models.ReservationPurchasesPolicy;
import com.azure.resourcemanager.billing.models.SavingsPlanPurchasesPolicy;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BillingAccountPolicyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BillingAccountPolicyProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Pending\",\"enterpriseAgreementPolicies\":{\"authenticationType\":\"MicrosoftAccountOnly\",\"accountOwnerViewCharges\":\"NotAllowed\",\"departmentAdminViewCharges\":\"Allowed\"},\"marketplacePurchases\":\"OnlyFreeAllowed\",\"reservationPurchases\":\"Allowed\",\"savingsPlanPurchases\":\"Allowed\",\"policies\":[{\"name\":\"katuztjctib\",\"value\":\"bk\",\"policyType\":\"Other\",\"scope\":\"smz\"},{\"name\":\"dfwakwseivmak\",\"value\":\"ysowl\",\"policyType\":\"UserControlled\",\"scope\":\"kb\"}]}")
            .toObject(BillingAccountPolicyProperties.class);
        Assertions.assertEquals(EnrollmentAuthLevelState.MICROSOFT_ACCOUNT_ONLY,
            model.enterpriseAgreementPolicies().authenticationType());
        Assertions.assertEquals(EnrollmentAccountOwnerViewCharges.NOT_ALLOWED,
            model.enterpriseAgreementPolicies().accountOwnerViewCharges());
        Assertions.assertEquals(EnrollmentDepartmentAdminViewCharges.ALLOWED,
            model.enterpriseAgreementPolicies().departmentAdminViewCharges());
        Assertions.assertEquals(MarketplacePurchasesPolicy.ONLY_FREE_ALLOWED, model.marketplacePurchases());
        Assertions.assertEquals(ReservationPurchasesPolicy.ALLOWED, model.reservationPurchases());
        Assertions.assertEquals(SavingsPlanPurchasesPolicy.ALLOWED, model.savingsPlanPurchases());
        Assertions.assertEquals("katuztjctib", model.policies().get(0).name());
        Assertions.assertEquals("bk", model.policies().get(0).value());
        Assertions.assertEquals(PolicyType.OTHER, model.policies().get(0).policyType());
        Assertions.assertEquals("smz", model.policies().get(0).scope());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BillingAccountPolicyProperties model = new BillingAccountPolicyProperties()
            .withEnterpriseAgreementPolicies(new BillingAccountPolicyPropertiesEnterpriseAgreementPolicies()
                .withAuthenticationType(EnrollmentAuthLevelState.MICROSOFT_ACCOUNT_ONLY)
                .withAccountOwnerViewCharges(EnrollmentAccountOwnerViewCharges.NOT_ALLOWED)
                .withDepartmentAdminViewCharges(EnrollmentDepartmentAdminViewCharges.ALLOWED))
            .withMarketplacePurchases(MarketplacePurchasesPolicy.ONLY_FREE_ALLOWED)
            .withReservationPurchases(ReservationPurchasesPolicy.ALLOWED)
            .withSavingsPlanPurchases(SavingsPlanPurchasesPolicy.ALLOWED)
            .withPolicies(Arrays.asList(
                new PolicySummary().withName("katuztjctib")
                    .withValue("bk")
                    .withPolicyType(PolicyType.OTHER)
                    .withScope("smz"),
                new PolicySummary().withName("dfwakwseivmak")
                    .withValue("ysowl")
                    .withPolicyType(PolicyType.USER_CONTROLLED)
                    .withScope("kb")));
        model = BinaryData.fromObject(model).toObject(BillingAccountPolicyProperties.class);
        Assertions.assertEquals(EnrollmentAuthLevelState.MICROSOFT_ACCOUNT_ONLY,
            model.enterpriseAgreementPolicies().authenticationType());
        Assertions.assertEquals(EnrollmentAccountOwnerViewCharges.NOT_ALLOWED,
            model.enterpriseAgreementPolicies().accountOwnerViewCharges());
        Assertions.assertEquals(EnrollmentDepartmentAdminViewCharges.ALLOWED,
            model.enterpriseAgreementPolicies().departmentAdminViewCharges());
        Assertions.assertEquals(MarketplacePurchasesPolicy.ONLY_FREE_ALLOWED, model.marketplacePurchases());
        Assertions.assertEquals(ReservationPurchasesPolicy.ALLOWED, model.reservationPurchases());
        Assertions.assertEquals(SavingsPlanPurchasesPolicy.ALLOWED, model.savingsPlanPurchases());
        Assertions.assertEquals("katuztjctib", model.policies().get(0).name());
        Assertions.assertEquals("bk", model.policies().get(0).value());
        Assertions.assertEquals(PolicyType.OTHER, model.policies().get(0).policyType());
        Assertions.assertEquals("smz", model.policies().get(0).scope());
    }
}
