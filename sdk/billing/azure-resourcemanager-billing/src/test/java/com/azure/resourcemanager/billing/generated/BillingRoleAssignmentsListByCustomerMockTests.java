// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.BillingRoleAssignment;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BillingRoleAssignmentsListByCustomerMockTests {
    @Test
    public void testListByCustomer() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Canceled\",\"createdOn\":\"2021-03-17T00:06:29Z\",\"createdByPrincipalTenantId\":\"to\",\"createdByPrincipalId\":\"nzdaiovr\",\"createdByPrincipalPuid\":\"rpqphkvyyzad\",\"createdByUserEmailAddress\":\"xylaypdtyzvelffo\",\"modifiedOn\":\"2021-01-25T02:53:32Z\",\"modifiedByPrincipalPuid\":\"wh\",\"modifiedByUserEmailAddress\":\"f\",\"modifiedByPrincipalId\":\"psshr\",\"modifiedByPrincipalTenantId\":\"kcclpctuo\",\"principalPuid\":\"scxjfsgmosp\",\"principalId\":\"bnxsqc\",\"principalTenantId\":\"scuyfqlamfbqhsuj\",\"roleDefinitionId\":\"afuzpnxqpwnik\",\"scope\":\"cajgrbr\",\"userAuthenticationType\":\"svgoocq\",\"userEmailAddress\":\"zmz\",\"principalTenantName\":\"cxitmhxxrqi\",\"principalDisplayName\":\"zfvwjdthkvpyeyoa\",\"principalType\":\"ServicePrincipal\",\"billingRequestId\":\"p\",\"billingAccountId\":\"updkjrzfwkyl\",\"billingAccountDisplayName\":\"bdx\",\"billingProfileId\":\"qdcclcv\",\"billingProfileDisplayName\":\"rupaylcvwbzmf\",\"invoiceSectionId\":\"ry\",\"invoiceSectionDisplayName\":\"jxlpiy\",\"customerId\":\"npfydrfb\",\"customerDisplayName\":\"nyxbyxmk\"},\"tags\":{\"aullfsty\":\"ync\",\"mhmqmiw\":\"gjqpulmwq\",\"fjnbxwbmwd\":\"zfvvzucqfg\",\"xhgdeke\":\"kinh\"},\"id\":\"ouyvew\",\"name\":\"pzrdwc\",\"type\":\"ldohgca\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<BillingRoleAssignment> response = manager.billingRoleAssignments()
            .listByCustomer("zawwsdsorgf", "jxsawooau", "fh", "fqkmwz", 142986019754159266L, 4671413918355639020L,
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ync", response.iterator().next().tags().get("aullfsty"));
        Assertions.assertEquals("scxjfsgmosp", response.iterator().next().properties().principalPuid());
        Assertions.assertEquals("bnxsqc", response.iterator().next().properties().principalId());
        Assertions.assertEquals("scuyfqlamfbqhsuj", response.iterator().next().properties().principalTenantId());
        Assertions.assertEquals("afuzpnxqpwnik", response.iterator().next().properties().roleDefinitionId());
        Assertions.assertEquals("cajgrbr", response.iterator().next().properties().scope());
        Assertions.assertEquals("svgoocq", response.iterator().next().properties().userAuthenticationType());
        Assertions.assertEquals("zmz", response.iterator().next().properties().userEmailAddress());
    }
}
