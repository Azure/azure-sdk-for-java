// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.BillingRoleAssignment;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BillingRoleAssignmentsListByDepartmentMockTests {
    @Test
    public void testListByDepartment() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"New\",\"createdOn\":\"2021-07-12T19:07:49Z\",\"createdByPrincipalTenantId\":\"kezvpe\",\"createdByPrincipalId\":\"nfzqnzbflbqmh\",\"createdByPrincipalPuid\":\"yxxvwedhagqbbse\",\"createdByUserEmailAddress\":\"ayuflmsyz\",\"modifiedOn\":\"2021-03-17T10:33:43Z\",\"modifiedByPrincipalPuid\":\"olr\",\"modifiedByUserEmailAddress\":\"sb\",\"modifiedByPrincipalId\":\"phzkymu\",\"modifiedByPrincipalTenantId\":\"jivtb\",\"principalPuid\":\"zbdjrdfeujywdal\",\"principalId\":\"deqngc\",\"principalTenantId\":\"dz\",\"roleDefinitionId\":\"nloou\",\"scope\":\"ozmdahyclxr\",\"userAuthenticationType\":\"doebldpoiaffj\",\"userEmailAddress\":\"tnhrevimxmaxcj\",\"principalTenantName\":\"itygvdwds\",\"principalDisplayName\":\"tb\",\"principalType\":\"None\",\"billingRequestId\":\"ozbzchnqekwan\",\"billingAccountId\":\"purlcydjhtkj\",\"billingAccountDisplayName\":\"rwiyndurdonkgobx\",\"billingProfileId\":\"rdolenrswkn\",\"billingProfileDisplayName\":\"rgnmzaofroefqck\",\"invoiceSectionId\":\"vyrejyoy\",\"invoiceSectionDisplayName\":\"qftusdwmnrtvvbuc\",\"customerId\":\"rovomep\",\"customerDisplayName\":\"sicvwqzocsf\"},\"tags\":{\"ywdibugvnrgalvw\":\"nnmsg\",\"brbknuubxcwoj\":\"hry\",\"py\":\"upqdv\"},\"id\":\"vffifujgtdo\",\"name\":\"lxmwefcbybpchrtc\",\"type\":\"wjcujyznvyr\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<BillingRoleAssignment> response
            = manager.billingRoleAssignments().listByDepartment("xgwpq", "y", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("nnmsg", response.iterator().next().tags().get("ywdibugvnrgalvw"));
        Assertions.assertEquals("zbdjrdfeujywdal", response.iterator().next().properties().principalPuid());
        Assertions.assertEquals("deqngc", response.iterator().next().properties().principalId());
        Assertions.assertEquals("dz", response.iterator().next().properties().principalTenantId());
        Assertions.assertEquals("nloou", response.iterator().next().properties().roleDefinitionId());
        Assertions.assertEquals("ozmdahyclxr", response.iterator().next().properties().scope());
        Assertions.assertEquals("doebldpoiaffj", response.iterator().next().properties().userAuthenticationType());
        Assertions.assertEquals("tnhrevimxmaxcj", response.iterator().next().properties().userEmailAddress());
    }
}
