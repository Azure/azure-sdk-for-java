// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.CustomerPolicy;
import com.azure.resourcemanager.billing.models.PolicyType;
import com.azure.resourcemanager.billing.models.ViewChargesPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PoliciesGetByCustomerAtBillingAccountWithResponseMockTests {
    @Test
    public void testGetByCustomerAtBillingAccountWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Canceled\",\"viewCharges\":\"NotAllowed\",\"policies\":[{\"name\":\"qmfwiesh\",\"value\":\"e\",\"policyType\":\"UserControlled\",\"scope\":\"m\"},{\"name\":\"gudvytecuvejlcw\",\"value\":\"ekkjvr\",\"policyType\":\"UserControlled\",\"scope\":\"hoehyir\"},{\"name\":\"redo\",\"value\":\"vqpblqubfpeom\",\"policyType\":\"SystemControlled\",\"scope\":\"heamzlqv\"}]},\"tags\":{\"sythuioixpfgqlw\":\"tsvc\",\"ehuweuitqe\":\"ojwvvqcjrmnverbf\"},\"id\":\"nm\",\"name\":\"igawlojwvrovjvj\",\"type\":\"uypcnbucbejmu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CustomerPolicy response = manager.policies()
            .getByCustomerAtBillingAccountWithResponse("bsibzmvd", "yoe", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("tsvc", response.tags().get("sythuioixpfgqlw"));
        Assertions.assertEquals(ViewChargesPolicy.NOT_ALLOWED, response.properties().viewCharges());
        Assertions.assertEquals("qmfwiesh", response.properties().policies().get(0).name());
        Assertions.assertEquals("e", response.properties().policies().get(0).value());
        Assertions.assertEquals(PolicyType.USER_CONTROLLED, response.properties().policies().get(0).policyType());
        Assertions.assertEquals("m", response.properties().policies().get(0).scope());
    }
}
