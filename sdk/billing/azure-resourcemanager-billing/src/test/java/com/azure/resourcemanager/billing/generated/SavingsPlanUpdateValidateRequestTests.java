// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.billing.models.AppliedScopeProperties;
import com.azure.resourcemanager.billing.models.AppliedScopeType;
import com.azure.resourcemanager.billing.models.BillingPlan;
import com.azure.resourcemanager.billing.models.Commitment;
import com.azure.resourcemanager.billing.models.PurchaseRequest;
import com.azure.resourcemanager.billing.models.RenewProperties;
import com.azure.resourcemanager.billing.models.SavingsPlanTerm;
import com.azure.resourcemanager.billing.models.SavingsPlanUpdateRequestProperties;
import com.azure.resourcemanager.billing.models.SavingsPlanUpdateValidateRequest;
import com.azure.resourcemanager.billing.models.Sku;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SavingsPlanUpdateValidateRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SavingsPlanUpdateValidateRequest model = BinaryData.fromString(
            "{\"benefits\":[{\"displayName\":\"lecdmdqbw\",\"appliedScopeType\":\"Single\",\"appliedScopeProperties\":{\"tenantId\":\"gsfjac\",\"managementGroupId\":\"lhhxudbxvodhtnsi\",\"subscriptionId\":\"dhzmmesckdlp\",\"resourceGroupId\":\"zrcxfailcfxwmdbo\",\"displayName\":\"fgsftufqob\"},\"renew\":false,\"renewProperties\":{\"purchaseProperties\":{\"sku\":{\"name\":\"cc\"},\"properties\":{\"displayName\":\"hxkizvytnrzv\",\"billingScopeId\":\"jraaeranokqguk\",\"term\":\"P5Y\",\"billingPlan\":\"P1M\",\"appliedScopeType\":\"Single\",\"commitment\":{},\"renew\":false,\"appliedScopeProperties\":{}}}}},{\"displayName\":\"xulcdisdos\",\"appliedScopeType\":\"ManagementGroup\",\"appliedScopeProperties\":{\"tenantId\":\"vgjrwhr\",\"managementGroupId\":\"ycy\",\"subscriptionId\":\"c\",\"resourceGroupId\":\"gc\",\"displayName\":\"nfnw\"},\"renew\":true,\"renewProperties\":{\"purchaseProperties\":{\"sku\":{\"name\":\"vjdhttzaefedxih\"},\"properties\":{\"displayName\":\"phkmcrjdqnsdfz\",\"billingScopeId\":\"gtgkylkdghr\",\"term\":\"P5Y\",\"billingPlan\":\"P1M\",\"appliedScopeType\":\"Shared\",\"commitment\":{},\"renew\":false,\"appliedScopeProperties\":{}}}}},{\"displayName\":\"hokvbwnh\",\"appliedScopeType\":\"Shared\",\"appliedScopeProperties\":{\"tenantId\":\"ehgpp\",\"managementGroupId\":\"ifhpf\",\"subscriptionId\":\"ajvgcxtxjcsheafi\",\"resourceGroupId\":\"tugsresmkssjh\",\"displayName\":\"ftxfkf\"},\"renew\":false,\"renewProperties\":{\"purchaseProperties\":{\"sku\":{\"name\":\"tillucbiqtg\"},\"properties\":{\"displayName\":\"hm\",\"billingScopeId\":\"sldrizetpwbral\",\"term\":\"P1Y\",\"billingPlan\":\"P1M\",\"appliedScopeType\":\"Shared\",\"commitment\":{},\"renew\":false,\"appliedScopeProperties\":{}}}}}]}")
            .toObject(SavingsPlanUpdateValidateRequest.class);
        Assertions.assertEquals("lecdmdqbw", model.benefits().get(0).displayName());
        Assertions.assertEquals(AppliedScopeType.SINGLE, model.benefits().get(0).appliedScopeType());
        Assertions.assertEquals("gsfjac", model.benefits().get(0).appliedScopeProperties().tenantId());
        Assertions.assertEquals("lhhxudbxvodhtnsi",
            model.benefits().get(0).appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("dhzmmesckdlp", model.benefits().get(0).appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("zrcxfailcfxwmdbo", model.benefits().get(0).appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("fgsftufqob", model.benefits().get(0).appliedScopeProperties().displayName());
        Assertions.assertEquals(false, model.benefits().get(0).renew());
        Assertions.assertEquals("cc", model.benefits().get(0).renewProperties().purchaseProperties().sku().name());
        Assertions.assertEquals("hxkizvytnrzv",
            model.benefits().get(0).renewProperties().purchaseProperties().displayName());
        Assertions.assertEquals("jraaeranokqguk",
            model.benefits().get(0).renewProperties().purchaseProperties().billingScopeId());
        Assertions.assertEquals(SavingsPlanTerm.P5Y,
            model.benefits().get(0).renewProperties().purchaseProperties().term());
        Assertions.assertEquals(BillingPlan.P1M,
            model.benefits().get(0).renewProperties().purchaseProperties().billingPlan());
        Assertions.assertEquals(AppliedScopeType.SINGLE,
            model.benefits().get(0).renewProperties().purchaseProperties().appliedScopeType());
        Assertions.assertEquals(false, model.benefits().get(0).renewProperties().purchaseProperties().renew());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SavingsPlanUpdateValidateRequest model
            = new SavingsPlanUpdateValidateRequest().withBenefits(Arrays.asList(
                new SavingsPlanUpdateRequestProperties().withDisplayName("lecdmdqbw")
                    .withAppliedScopeType(AppliedScopeType.SINGLE)
                    .withAppliedScopeProperties(new AppliedScopeProperties().withTenantId("gsfjac")
                        .withManagementGroupId("lhhxudbxvodhtnsi")
                        .withSubscriptionId("dhzmmesckdlp")
                        .withResourceGroupId("zrcxfailcfxwmdbo")
                        .withDisplayName("fgsftufqob"))
                    .withRenew(false)
                    .withRenewProperties(new RenewProperties()
                        .withPurchaseProperties(new PurchaseRequest().withSku(new Sku().withName("cc"))
                            .withDisplayName("hxkizvytnrzv")
                            .withBillingScopeId("jraaeranokqguk")
                            .withTerm(SavingsPlanTerm.P5Y)
                            .withBillingPlan(BillingPlan.P1M)
                            .withAppliedScopeType(AppliedScopeType.SINGLE)
                            .withCommitment(new Commitment())
                            .withRenew(false)
                            .withAppliedScopeProperties(new AppliedScopeProperties()))),
                new SavingsPlanUpdateRequestProperties().withDisplayName("xulcdisdos")
                    .withAppliedScopeType(AppliedScopeType.MANAGEMENT_GROUP)
                    .withAppliedScopeProperties(new AppliedScopeProperties().withTenantId("vgjrwhr")
                        .withManagementGroupId("ycy")
                        .withSubscriptionId("c")
                        .withResourceGroupId("gc")
                        .withDisplayName("nfnw"))
                    .withRenew(true)
                    .withRenewProperties(new RenewProperties()
                        .withPurchaseProperties(new PurchaseRequest().withSku(new Sku().withName("vjdhttzaefedxih"))
                            .withDisplayName("phkmcrjdqnsdfz")
                            .withBillingScopeId("gtgkylkdghr")
                            .withTerm(SavingsPlanTerm.P5Y)
                            .withBillingPlan(BillingPlan.P1M)
                            .withAppliedScopeType(AppliedScopeType.SHARED)
                            .withCommitment(new Commitment())
                            .withRenew(false)
                            .withAppliedScopeProperties(new AppliedScopeProperties()))),
                new SavingsPlanUpdateRequestProperties().withDisplayName("hokvbwnh")
                    .withAppliedScopeType(AppliedScopeType.SHARED)
                    .withAppliedScopeProperties(new AppliedScopeProperties().withTenantId("ehgpp")
                        .withManagementGroupId("ifhpf")
                        .withSubscriptionId("ajvgcxtxjcsheafi")
                        .withResourceGroupId("tugsresmkssjh")
                        .withDisplayName("ftxfkf"))
                    .withRenew(false)
                    .withRenewProperties(new RenewProperties()
                        .withPurchaseProperties(new PurchaseRequest().withSku(new Sku().withName("tillucbiqtg"))
                            .withDisplayName("hm")
                            .withBillingScopeId("sldrizetpwbral")
                            .withTerm(SavingsPlanTerm.P1Y)
                            .withBillingPlan(BillingPlan.P1M)
                            .withAppliedScopeType(AppliedScopeType.SHARED)
                            .withCommitment(new Commitment())
                            .withRenew(false)
                            .withAppliedScopeProperties(new AppliedScopeProperties())))));
        model = BinaryData.fromObject(model).toObject(SavingsPlanUpdateValidateRequest.class);
        Assertions.assertEquals("lecdmdqbw", model.benefits().get(0).displayName());
        Assertions.assertEquals(AppliedScopeType.SINGLE, model.benefits().get(0).appliedScopeType());
        Assertions.assertEquals("gsfjac", model.benefits().get(0).appliedScopeProperties().tenantId());
        Assertions.assertEquals("lhhxudbxvodhtnsi",
            model.benefits().get(0).appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("dhzmmesckdlp", model.benefits().get(0).appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("zrcxfailcfxwmdbo", model.benefits().get(0).appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("fgsftufqob", model.benefits().get(0).appliedScopeProperties().displayName());
        Assertions.assertEquals(false, model.benefits().get(0).renew());
        Assertions.assertEquals("cc", model.benefits().get(0).renewProperties().purchaseProperties().sku().name());
        Assertions.assertEquals("hxkizvytnrzv",
            model.benefits().get(0).renewProperties().purchaseProperties().displayName());
        Assertions.assertEquals("jraaeranokqguk",
            model.benefits().get(0).renewProperties().purchaseProperties().billingScopeId());
        Assertions.assertEquals(SavingsPlanTerm.P5Y,
            model.benefits().get(0).renewProperties().purchaseProperties().term());
        Assertions.assertEquals(BillingPlan.P1M,
            model.benefits().get(0).renewProperties().purchaseProperties().billingPlan());
        Assertions.assertEquals(AppliedScopeType.SINGLE,
            model.benefits().get(0).renewProperties().purchaseProperties().appliedScopeType());
        Assertions.assertEquals(false, model.benefits().get(0).renewProperties().purchaseProperties().renew());
    }
}
