// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.billing.fluent.models.PaymentMethodInner;
import com.azure.resourcemanager.billing.models.PaymentMethodFamily;
import com.azure.resourcemanager.billing.models.PaymentMethodLogo;
import com.azure.resourcemanager.billing.models.PaymentMethodStatus;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PaymentMethodInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PaymentMethodInner model = BinaryData.fromString(
            "{\"properties\":{\"id\":\"iymqr\",\"accountHolderName\":\"guhfupe\",\"displayName\":\"svvoqsbpkflanfk\",\"expiration\":\"syaowuzowp\",\"family\":\"Credits\",\"lastFourDigits\":\"kc\",\"logos\":[{\"mimeType\":\"kxrzt\",\"url\":\"chlutixmqru\"},{\"mimeType\":\"izcbfzmcrunfhiuc\",\"url\":\"fbcpaqktkrumzu\"},{\"mimeType\":\"kyzbfvxovqkxiux\",\"url\":\"gvqrnhyhlwcj\"},{\"mimeType\":\"ggjh\",\"url\":\"bxrqrkijp\"}],\"paymentMethodType\":\"qlsdxeqztvxwmw\",\"status\":\"active\"},\"tags\":{\"wwa\":\"en\",\"ojhtollhs\":\"ecleqioulndhzyo\"},\"id\":\"dm\",\"name\":\"tzlnglxpn\",\"type\":\"vyoanfbcswqagywv\"}")
            .toObject(PaymentMethodInner.class);
        Assertions.assertEquals("en", model.tags().get("wwa"));
        Assertions.assertEquals(PaymentMethodFamily.CREDITS, model.family());
        Assertions.assertEquals(PaymentMethodStatus.ACTIVE, model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PaymentMethodInner model = new PaymentMethodInner().withTags(mapOf("wwa", "en", "ojhtollhs", "ecleqioulndhzyo"))
            .withFamily(PaymentMethodFamily.CREDITS)
            .withLogos(Arrays.asList(new PaymentMethodLogo(), new PaymentMethodLogo(), new PaymentMethodLogo(),
                new PaymentMethodLogo()))
            .withStatus(PaymentMethodStatus.ACTIVE);
        model = BinaryData.fromObject(model).toObject(PaymentMethodInner.class);
        Assertions.assertEquals("en", model.tags().get("wwa"));
        Assertions.assertEquals(PaymentMethodFamily.CREDITS, model.family());
        Assertions.assertEquals(PaymentMethodStatus.ACTIVE, model.status());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
