// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.AutoRenew;
import com.azure.resourcemanager.billing.models.BillingSubscription;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BillingSubscriptionsListByEnrollmentAccountMockTests {
    @Test
    public void testListByEnrollmentAccount() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"autoRenew\":\"Off\",\"beneficiaryTenantId\":\"w\",\"beneficiary\":{\"tenantId\":\"f\",\"objectId\":\"ywmwtacrscfc\"},\"billingFrequency\":\"r\",\"billingProfileId\":\"cullmfwfpoeow\",\"billingPolicies\":{\"mubyguqhgnmsvjfg\":\"zwncsjgfxvc\",\"jxjrbvy\":\"pryyircb\"},\"billingProfileDisplayName\":\"buatxkznlw\",\"billingProfileName\":\"bxogkevdayv\",\"consumptionCostCenter\":\"kxiymzgrg\",\"customerId\":\"alrjwaez\",\"customerDisplayName\":\"ybsps\",\"customerName\":\"mtcepzimfcfs\",\"displayName\":\"wexpasckpgbmly\",\"enrollmentAccountId\":\"wslxgcmxtoejtq\",\"enrollmentAccountDisplayName\":\"ctm\",\"enrollmentAccountSubscriptionDetails\":{\"enrollmentAccountStartDate\":\"2021-06-24T07:55:05Z\",\"subscriptionEnrollmentAccountStatus\":\"TransferredOut\"},\"invoiceSectionId\":\"oluznt\",\"invoiceSectionDisplayName\":\"c\",\"invoiceSectionName\":\"d\",\"lastMonthCharges\":{\"currency\":\"rxiperrplfm\",\"value\":88.23705},\"monthToDateCharges\":{\"currency\":\"fzizx\",\"value\":19.854713},\"nextBillingCycleDetails\":{\"billingFrequency\":\"eba\"},\"offerId\":\"knfvbsymagb\",\"productCategory\":\"dbtjmkuzo\",\"productType\":\"klbizrxhu\",\"productTypeId\":\"vpanloqov\",\"purchaseDate\":\"2021-01-12T04:57:28Z\",\"quantity\":2814888653549476216,\"reseller\":{\"resellerId\":\"ir\",\"description\":\"pgzatu\"},\"renewalTermDetails\":{\"billingFrequency\":\"tjuzvyj\",\"productId\":\"xchquo\",\"productTypeId\":\"qrcsksxq\",\"skuId\":\"lrvuvdagv\",\"termDuration\":\"cdp\",\"quantity\":3609486860009484507,\"termEndDate\":\"2020-12-25T04:39:30Z\"},\"skuId\":\"yodiij\",\"skuDescription\":\"apqhipajsnivnme\",\"systemOverrides\":{\"cancellation\":\"NotAllowed\",\"cancellationAllowedEndDate\":\"2021-05-26T10:51:22Z\"},\"resourceUri\":\"rfgpjf\",\"termDuration\":\"wkseodvlmd\",\"termStartDate\":\"2021-02-12T06:51:52Z\",\"termEndDate\":\"2021-04-01T22:15:16Z\",\"provisioningTenantId\":\"zzugctygbbmumljv\",\"status\":\"Deleted\",\"operationStatus\":\"Other\",\"provisioningState\":\"ConfirmedBilling\",\"subscriptionId\":\"mxwcv\",\"suspensionReasons\":[\"r\",\"tqnk\",\"qjftvltj\"],\"suspensionReasonDetails\":[{\"effectiveDate\":\"2021-01-02T17:23:58Z\",\"reason\":\"PolicyViolation\"},{\"effectiveDate\":\"2021-10-20T03:09:01Z\",\"reason\":\"PastDue\"},{\"effectiveDate\":\"2021-03-31T01:20:47Z\",\"reason\":\"Transferred\"}]},\"tags\":{\"smub\":\"fh\",\"psuhsypxmuldhf\":\"zadzglmuu\"},\"id\":\"rkqpyfjxkby\",\"name\":\"sbuqfm\",\"type\":\"bdjkmnxsggnow\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<BillingSubscription> response = manager.billingSubscriptions()
            .listByEnrollmentAccount("qy", "clwbjgiynqryoisw", "ofvsxau", "hzefin", 9079705591329630933L,
                2642662027716514618L, true, "gtiivzkd", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("fh", response.iterator().next().tags().get("smub"));
        Assertions.assertEquals(AutoRenew.OFF, response.iterator().next().autoRenew());
        Assertions.assertEquals("w", response.iterator().next().beneficiaryTenantId());
        Assertions.assertEquals("f", response.iterator().next().beneficiary().tenantId());
        Assertions.assertEquals("ywmwtacrscfc", response.iterator().next().beneficiary().objectId());
        Assertions.assertEquals("r", response.iterator().next().billingFrequency());
        Assertions.assertEquals("cullmfwfpoeow", response.iterator().next().billingProfileId());
        Assertions.assertEquals("kxiymzgrg", response.iterator().next().consumptionCostCenter());
        Assertions.assertEquals("alrjwaez", response.iterator().next().customerId());
        Assertions.assertEquals("wexpasckpgbmly", response.iterator().next().displayName());
        Assertions.assertEquals("oluznt", response.iterator().next().invoiceSectionId());
        Assertions.assertEquals("vpanloqov", response.iterator().next().productTypeId());
        Assertions.assertEquals(2814888653549476216L, response.iterator().next().quantity());
        Assertions.assertEquals("yodiij", response.iterator().next().skuId());
        Assertions.assertEquals("wkseodvlmd", response.iterator().next().termDuration());
        Assertions.assertEquals("zzugctygbbmumljv", response.iterator().next().provisioningTenantId());
    }
}
