// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.billing.fluent.models.ReservationPurchaseRequestProperties;
import com.azure.resourcemanager.billing.models.AppliedScopeType;
import com.azure.resourcemanager.billing.models.InstanceFlexibility;
import com.azure.resourcemanager.billing.models.ReservationAppliedScopeProperties;
import com.azure.resourcemanager.billing.models.ReservationBillingPlan;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ReservationPurchaseRequestPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReservationPurchaseRequestProperties model = BinaryData.fromString(
            "{\"reservedResourceType\":\"qibzji\",\"billingScopeId\":\"ee\",\"term\":\"ph\",\"billingPlan\":\"Monthly\",\"quantity\":367645464,\"displayName\":\"qwoqs\",\"appliedScopeType\":\"Single\",\"appliedScopes\":[\"dhzybsp\",\"jhfrzgdkkagv\",\"ukhsusmmorf\",\"zhwilzzh\"],\"appliedScopeProperties\":{\"tenantId\":\"mriprlk\",\"managementGroupId\":\"eyttlrcxiv\",\"subscriptionId\":\"kutpu\",\"resourceGroupId\":\"twjfluxynbp\",\"displayName\":\"l\"},\"renew\":false,\"reservedResourceProperties\":{\"instanceFlexibility\":\"On\"},\"instanceFlexibility\":\"On\",\"reviewDateTime\":\"2021-02-07T19:13:17Z\"}")
            .toObject(ReservationPurchaseRequestProperties.class);
        Assertions.assertEquals(ReservationBillingPlan.MONTHLY, model.billingPlan());
        Assertions.assertEquals(367645464, model.quantity());
        Assertions.assertEquals("qwoqs", model.displayName());
        Assertions.assertEquals(AppliedScopeType.SINGLE, model.appliedScopeType());
        Assertions.assertEquals("dhzybsp", model.appliedScopes().get(0));
        Assertions.assertEquals("mriprlk", model.appliedScopeProperties().tenantId());
        Assertions.assertEquals("eyttlrcxiv", model.appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("kutpu", model.appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("twjfluxynbp", model.appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("l", model.appliedScopeProperties().displayName());
        Assertions.assertEquals(false, model.renew());
        Assertions.assertEquals(InstanceFlexibility.ON, model.instanceFlexibility());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-07T19:13:17Z"), model.reviewDateTime());
        Assertions.assertEquals(InstanceFlexibility.ON,
            model.instanceFlexibilityReservedResourcePropertiesInstanceFlexibility());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReservationPurchaseRequestProperties model
            = new ReservationPurchaseRequestProperties().withBillingPlan(ReservationBillingPlan.MONTHLY)
                .withQuantity(367645464)
                .withDisplayName("qwoqs")
                .withAppliedScopeType(AppliedScopeType.SINGLE)
                .withAppliedScopes(Arrays.asList("dhzybsp", "jhfrzgdkkagv", "ukhsusmmorf", "zhwilzzh"))
                .withAppliedScopeProperties(new ReservationAppliedScopeProperties().withTenantId("mriprlk")
                    .withManagementGroupId("eyttlrcxiv")
                    .withSubscriptionId("kutpu")
                    .withResourceGroupId("twjfluxynbp")
                    .withDisplayName("l"))
                .withRenew(false)
                .withInstanceFlexibility(InstanceFlexibility.ON)
                .withReviewDateTime(OffsetDateTime.parse("2021-02-07T19:13:17Z"))
                .withInstanceFlexibilityReservedResourcePropertiesInstanceFlexibility(InstanceFlexibility.ON);
        model = BinaryData.fromObject(model).toObject(ReservationPurchaseRequestProperties.class);
        Assertions.assertEquals(ReservationBillingPlan.MONTHLY, model.billingPlan());
        Assertions.assertEquals(367645464, model.quantity());
        Assertions.assertEquals("qwoqs", model.displayName());
        Assertions.assertEquals(AppliedScopeType.SINGLE, model.appliedScopeType());
        Assertions.assertEquals("dhzybsp", model.appliedScopes().get(0));
        Assertions.assertEquals("mriprlk", model.appliedScopeProperties().tenantId());
        Assertions.assertEquals("eyttlrcxiv", model.appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("kutpu", model.appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("twjfluxynbp", model.appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("l", model.appliedScopeProperties().displayName());
        Assertions.assertEquals(false, model.renew());
        Assertions.assertEquals(InstanceFlexibility.ON, model.instanceFlexibility());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-07T19:13:17Z"), model.reviewDateTime());
        Assertions.assertEquals(InstanceFlexibility.ON,
            model.instanceFlexibilityReservedResourcePropertiesInstanceFlexibility());
    }
}
