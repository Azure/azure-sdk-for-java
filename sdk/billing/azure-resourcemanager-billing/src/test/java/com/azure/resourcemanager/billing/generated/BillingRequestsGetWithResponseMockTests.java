// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.BillingRequest;
import com.azure.resourcemanager.billing.models.BillingRequestStatus;
import com.azure.resourcemanager.billing.models.BillingRequestType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BillingRequestsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"additionalInformation\":{\"ixhyoipnfdbgso\":\"x\",\"fkbpjn\":\"cienezfvbenn\"},\"reviewedBy\":{\"tenantId\":\"kwwnthropmdud\",\"objectId\":\"iurztv\",\"upn\":\"jhf\"},\"reviewalDate\":\"2021-05-14T23:12:36Z\",\"billingAccountId\":\"koqyouer\",\"billingAccountName\":\"g\",\"billingAccountDisplayName\":\"uzxk\",\"billingAccountPrimaryBillingTenantId\":\"ehhf\",\"billingProfileId\":\"ldhg\",\"billingProfileName\":\"d\",\"billingProfileDisplayName\":\"zqiyuqhtder\",\"createdBy\":{\"tenantId\":\"oka\",\"objectId\":\"whpjlw\",\"upn\":\"edznmxrfomckewv\"},\"creationDate\":\"2021-11-08T21:39:52Z\",\"expirationDate\":\"2021-02-07T19:43:05Z\",\"decisionReason\":\"xfjjtpdyzout\",\"invoiceSectionId\":\"pt\",\"invoiceSectionName\":\"hgnu\",\"invoiceSectionDisplayName\":\"ezygvad\",\"customerId\":\"aqwvkgjpytpmpvdn\",\"customerName\":\"e\",\"customerDisplayName\":\"ufb\",\"subscriptionId\":\"tbnukkfaxz\",\"subscriptionName\":\"bx\",\"subscriptionDisplayName\":\"jisskob\",\"justification\":\"clflioe\",\"recipients\":[{\"tenantId\":\"essmv\",\"objectId\":\"dpsqeq\",\"upn\":\"dxmdses\"},{\"tenantId\":\"ujbjppp\",\"objectId\":\"lpdib\",\"upn\":\"th\"},{\"tenantId\":\"at\",\"objectId\":\"jrnm\",\"upn\":\"zqpl\"}],\"requestScope\":\"kihonik\",\"billingScope\":\"r\",\"status\":\"Pending\",\"type\":\"RoleAssignment\",\"lastUpdatedBy\":{\"tenantId\":\"z\",\"objectId\":\"pntogkensckh\",\"upn\":\"carmoyfx\"},\"lastUpdatedDate\":\"2021-04-24T09:57:10Z\"},\"tags\":{\"kggapvdgtfpeer\":\"uqdndxlyk\",\"rnrnjrcufmbgacnr\":\"cd\",\"eubkqiqmlf\":\"fdtncmspsanma\",\"skkqjmxptuei\":\"hlq\"},\"id\":\"ugkw\",\"name\":\"rq\",\"type\":\"rpahuuonjkkxuk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        BillingRequest response
            = manager.billingRequests().getWithResponse("yyhigqkzjuqw", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("uqdndxlyk", response.tags().get("kggapvdgtfpeer"));
        Assertions.assertEquals("x", response.properties().additionalInformation().get("ixhyoipnfdbgso"));
        Assertions.assertEquals("kwwnthropmdud", response.properties().reviewedBy().tenantId());
        Assertions.assertEquals("iurztv", response.properties().reviewedBy().objectId());
        Assertions.assertEquals("jhf", response.properties().reviewedBy().upn());
        Assertions.assertEquals("oka", response.properties().createdBy().tenantId());
        Assertions.assertEquals("whpjlw", response.properties().createdBy().objectId());
        Assertions.assertEquals("edznmxrfomckewv", response.properties().createdBy().upn());
        Assertions.assertEquals("xfjjtpdyzout", response.properties().decisionReason());
        Assertions.assertEquals("clflioe", response.properties().justification());
        Assertions.assertEquals("essmv", response.properties().recipients().get(0).tenantId());
        Assertions.assertEquals("dpsqeq", response.properties().recipients().get(0).objectId());
        Assertions.assertEquals("dxmdses", response.properties().recipients().get(0).upn());
        Assertions.assertEquals("kihonik", response.properties().requestScope());
        Assertions.assertEquals(BillingRequestStatus.PENDING, response.properties().status());
        Assertions.assertEquals(BillingRequestType.ROLE_ASSIGNMENT, response.properties().type());
        Assertions.assertEquals("z", response.properties().lastUpdatedBy().tenantId());
        Assertions.assertEquals("pntogkensckh", response.properties().lastUpdatedBy().objectId());
        Assertions.assertEquals("carmoyfx", response.properties().lastUpdatedBy().upn());
    }
}
