// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billing.BillingManager;
import com.azure.resourcemanager.billing.models.AutoRenew;
import com.azure.resourcemanager.billing.models.MoveProductRequest;
import com.azure.resourcemanager.billing.models.Product;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProductsMoveMockTests {
    @Test
    public void testMove() throws Exception {
        String responseStr
            = "{\"properties\":{\"autoRenew\":\"Off\",\"availabilityId\":\"hgxsdo\",\"billingFrequency\":\"dfodokh\",\"billingProfileId\":\"g\",\"billingProfileDisplayName\":\"dhlnar\",\"customerId\":\"uoa\",\"customerDisplayName\":\"iriccuyqtjvrz\",\"displayName\":\"gmgfa\",\"endDate\":\"b\",\"invoiceSectionId\":\"aenvpzd\",\"invoiceSectionDisplayName\":\"pizgaujvc\",\"lastCharge\":{\"currency\":\"ybxorrceomsqar\",\"value\":38.995117},\"lastChargeDate\":\"dno\",\"productType\":\"ijpjiudnustbmox\",\"productTypeId\":\"gkdnhbhuepu\",\"skuId\":\"l\",\"skuDescription\":\"qzjvfrhyxl\",\"purchaseDate\":\"yousqmernbjp\",\"quantity\":1446144916392991800,\"status\":\"Canceled\",\"tenantId\":\"ouwmjxhmkchjdxr\",\"reseller\":{\"resellerId\":\"ukxuqhyrbeqpgad\",\"description\":\"nesgnxdvgxtefv\"}},\"tags\":{\"bzjyzajdpbnbpzxn\":\"toqcezmznoejqduy\",\"xi\":\"pryutxasnigh\",\"zqheit\":\"hiihg\",\"udzntbzgugwhk\":\"ymip\"},\"id\":\"p\",\"name\":\"qnxpo\",\"type\":\"crkm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingManager manager = BillingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Product response = manager.products()
            .move("pjqaf", "xvqquazoblxxkspu", new MoveProductRequest().withDestinationInvoiceSectionId("i"),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("toqcezmznoejqduy", response.tags().get("bzjyzajdpbnbpzxn"));
        Assertions.assertEquals(AutoRenew.OFF, response.properties().autoRenew());
    }
}
