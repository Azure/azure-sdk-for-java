/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2020_05_01.implementation;

import com.microsoft.azure.management.billing.v2020_05_01.BillingProfile;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.billing.v2020_05_01.BillingRelationshipType;
import com.microsoft.azure.management.billing.v2020_05_01.AddressDetails;
import com.microsoft.azure.management.billing.v2020_05_01.IndirectRelationshipInfo;
import java.util.List;
import com.microsoft.azure.management.billing.v2020_05_01.AzurePlan;
import com.microsoft.azure.management.billing.v2020_05_01.InvoiceSectionsOnExpand;
import com.microsoft.azure.management.billing.v2020_05_01.BillingProfileStatus;
import com.microsoft.azure.management.billing.v2020_05_01.StatusReasonCode;
import com.microsoft.azure.management.billing.v2020_05_01.SpendingLimit;
import com.microsoft.azure.management.billing.v2020_05_01.TargetCloud;

class BillingProfileImpl extends CreatableUpdatableImpl<BillingProfile, BillingProfileInner, BillingProfileImpl> implements BillingProfile, BillingProfile.Definition, BillingProfile.Update {
    private final BillingManager manager;
    private String billingAccountName;
    private String billingProfileName;

    BillingProfileImpl(String name, BillingManager manager) {
        super(name, new BillingProfileInner());
        this.manager = manager;
        // Set resource name
        this.billingProfileName = name;
        //
    }

    BillingProfileImpl(BillingProfileInner inner, BillingManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.billingProfileName = inner.name();
        // set resource ancestor and positional variables
        this.billingAccountName = IdParsingUtils.getValueFromIdByName(inner.id(), "billingAccounts");
        this.billingProfileName = IdParsingUtils.getValueFromIdByName(inner.id(), "billingProfiles");
        //
    }

    @Override
    public BillingManager manager() {
        return this.manager;
    }

    @Override
    public Observable<BillingProfile> createResourceAsync() {
        BillingProfilesInner client = this.manager().inner().billingProfiles();
        return client.createOrUpdateAsync(this.billingAccountName, this.billingProfileName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<BillingProfile> updateResourceAsync() {
        BillingProfilesInner client = this.manager().inner().billingProfiles();
        return client.createOrUpdateAsync(this.billingAccountName, this.billingProfileName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<BillingProfileInner> getInnerAsync() {
        BillingProfilesInner client = this.manager().inner().billingProfiles();
        return client.getAsync(this.billingAccountName, this.billingProfileName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public BillingRelationshipType billingRelationshipType() {
        return this.inner().billingRelationshipType();
    }

    @Override
    public AddressDetails billTo() {
        return this.inner().billTo();
    }

    @Override
    public String currency() {
        return this.inner().currency();
    }

    @Override
    public String displayName() {
        return this.inner().displayName();
    }

    @Override
    public List<AzurePlan> enabledAzurePlans() {
        return this.inner().enabledAzurePlans();
    }

    @Override
    public Boolean hasReadAccess() {
        return this.inner().hasReadAccess();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public IndirectRelationshipInfo indirectRelationshipInfo() {
        return this.inner().indirectRelationshipInfo();
    }

    @Override
    public Integer invoiceDay() {
        return this.inner().invoiceDay();
    }

    @Override
    public Boolean invoiceEmailOptIn() {
        return this.inner().invoiceEmailOptIn();
    }

    @Override
    public InvoiceSectionsOnExpand invoiceSections() {
        return this.inner().invoiceSections();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String poNumber() {
        return this.inner().poNumber();
    }

    @Override
    public SpendingLimit spendingLimit() {
        return this.inner().spendingLimit();
    }

    @Override
    public BillingProfileStatus status() {
        return this.inner().status();
    }

    @Override
    public StatusReasonCode statusReasonCode() {
        return this.inner().statusReasonCode();
    }

    @Override
    public String systemId() {
        return this.inner().systemId();
    }

    @Override
    public List<TargetCloud> targetClouds() {
        return this.inner().targetClouds();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public BillingProfileImpl withExistingBillingAccount(String billingAccountName) {
        this.billingAccountName = billingAccountName;
        return this;
    }

    @Override
    public BillingProfileImpl withBillTo(AddressDetails billTo) {
        this.inner().withBillTo(billTo);
        return this;
    }

    @Override
    public BillingProfileImpl withDisplayName(String displayName) {
        this.inner().withDisplayName(displayName);
        return this;
    }

    @Override
    public BillingProfileImpl withEnabledAzurePlans(List<AzurePlan> enabledAzurePlans) {
        this.inner().withEnabledAzurePlans(enabledAzurePlans);
        return this;
    }

    @Override
    public BillingProfileImpl withInvoiceEmailOptIn(Boolean invoiceEmailOptIn) {
        this.inner().withInvoiceEmailOptIn(invoiceEmailOptIn);
        return this;
    }

    @Override
    public BillingProfileImpl withInvoiceSections(InvoiceSectionsOnExpand invoiceSections) {
        this.inner().withInvoiceSections(invoiceSections);
        return this;
    }

    @Override
    public BillingProfileImpl withPoNumber(String poNumber) {
        this.inner().withPoNumber(poNumber);
        return this;
    }

}
