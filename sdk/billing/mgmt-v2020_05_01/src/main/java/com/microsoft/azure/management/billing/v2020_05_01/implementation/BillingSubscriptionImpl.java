/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2020_05_01.implementation;

import com.microsoft.azure.management.billing.v2020_05_01.BillingSubscription;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import java.util.UUID;
import com.microsoft.azure.management.billing.v2020_05_01.BillingSubscriptionStatusType;
import com.microsoft.azure.management.billing.v2020_05_01.Amount;
import com.microsoft.azure.management.billing.v2020_05_01.Reseller;

class BillingSubscriptionImpl extends CreatableUpdatableImpl<BillingSubscription, BillingSubscriptionInner, BillingSubscriptionImpl> implements BillingSubscription, BillingSubscription.Update {
    private final BillingManager manager;
    private String billingAccountName;

    BillingSubscriptionImpl(String name, BillingManager manager) {
        super(name, new BillingSubscriptionInner());
        this.manager = manager;
        // Set resource name
        this.billingAccountName = name;
        //
    }

    BillingSubscriptionImpl(BillingSubscriptionInner inner, BillingManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.billingAccountName = inner.name();
        // set resource ancestor and positional variables
        this.billingAccountName = IdParsingUtils.getValueFromIdByName(inner.id(), "billingAccounts");
        //
    }

    @Override
    public BillingManager manager() {
        return this.manager;
    }

    @Override
    public Observable<BillingSubscription> createResourceAsync() {
        BillingSubscriptionsInner client = this.manager().inner().billingSubscriptions();
        return null; // NOP createResourceAsync implementation as create is not supported
    }

    @Override
    public Observable<BillingSubscription> updateResourceAsync() {
        BillingSubscriptionsInner client = this.manager().inner().billingSubscriptions();
        return client.updateAsync(this.billingAccountName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<BillingSubscriptionInner> getInnerAsync() {
        BillingSubscriptionsInner client = this.manager().inner().billingSubscriptions();
        return null; // NOP getInnerAsync implementation as get is not supported
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String billingProfileDisplayName() {
        return this.inner().billingProfileDisplayName();
    }

    @Override
    public String billingProfileId() {
        return this.inner().billingProfileId();
    }

    @Override
    public String costCenter() {
        return this.inner().costCenter();
    }

    @Override
    public String customerDisplayName() {
        return this.inner().customerDisplayName();
    }

    @Override
    public String customerId() {
        return this.inner().customerId();
    }

    @Override
    public String displayName() {
        return this.inner().displayName();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String invoiceSectionDisplayName() {
        return this.inner().invoiceSectionDisplayName();
    }

    @Override
    public String invoiceSectionId() {
        return this.inner().invoiceSectionId();
    }

    @Override
    public Amount lastMonthCharges() {
        return this.inner().lastMonthCharges();
    }

    @Override
    public Amount monthToDateCharges() {
        return this.inner().monthToDateCharges();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Reseller reseller() {
        return this.inner().reseller();
    }

    @Override
    public String skuDescription() {
        return this.inner().skuDescription();
    }

    @Override
    public String skuId() {
        return this.inner().skuId();
    }

    @Override
    public BillingSubscriptionStatusType subscriptionBillingStatus() {
        return this.inner().subscriptionBillingStatus();
    }

    @Override
    public UUID subscriptionId() {
        return this.inner().subscriptionId();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public BillingSubscriptionImpl withCostCenter(String costCenter) {
        this.inner().withCostCenter(costCenter);
        return this;
    }

    @Override
    public BillingSubscriptionImpl withSkuId(String skuId) {
        this.inner().withSkuId(skuId);
        return this;
    }

    @Override
    public BillingSubscriptionImpl withSubscriptionBillingStatus(BillingSubscriptionStatusType subscriptionBillingStatus) {
        this.inner().withSubscriptionBillingStatus(subscriptionBillingStatus);
        return this;
    }

}
