/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2020_05_01.implementation;

import com.microsoft.azure.management.billing.v2020_05_01.AutoRenew;
import org.joda.time.DateTime;
import com.microsoft.azure.management.billing.v2020_05_01.ProductStatusType;
import com.microsoft.azure.management.billing.v2020_05_01.BillingFrequency;
import com.microsoft.azure.management.billing.v2020_05_01.Amount;
import com.microsoft.azure.management.billing.v2020_05_01.Reseller;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * A product.
 */
@JsonFlatten
public class ProductInner extends ProxyResource {
    /**
     * Indicates whether auto renewal is turned on or off for a product.
     * Possible values include: 'Off', 'On'.
     */
    @JsonProperty(value = "properties.autoRenew")
    private AutoRenew autoRenew;

    /**
     * The display name of the product.
     */
    @JsonProperty(value = "properties.displayName", access = JsonProperty.Access.WRITE_ONLY)
    private String displayName;

    /**
     * The date when the product was purchased.
     */
    @JsonProperty(value = "properties.purchaseDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime purchaseDate;

    /**
     * The ID of the type of product.
     */
    @JsonProperty(value = "properties.productTypeId", access = JsonProperty.Access.WRITE_ONLY)
    private String productTypeId;

    /**
     * The description of the type of product.
     */
    @JsonProperty(value = "properties.productType", access = JsonProperty.Access.WRITE_ONLY)
    private String productType;

    /**
     * The current status of the product. Possible values include: 'Active',
     * 'Inactive', 'PastDue', 'Expiring', 'Expired', 'Disabled', 'Cancelled',
     * 'AutoRenew'.
     */
    @JsonProperty(value = "properties.status")
    private ProductStatusType status;

    /**
     * The date when the product will be renewed or canceled.
     */
    @JsonProperty(value = "properties.endDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime endDate;

    /**
     * The frequency at which the product will be billed. Possible values
     * include: 'OneTime', 'Monthly', 'UsageBased'.
     */
    @JsonProperty(value = "properties.billingFrequency")
    private BillingFrequency billingFrequency;

    /**
     * The last month charges.
     */
    @JsonProperty(value = "properties.lastCharge", access = JsonProperty.Access.WRITE_ONLY)
    private Amount lastCharge;

    /**
     * The date of the last charge.
     */
    @JsonProperty(value = "properties.lastChargeDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime lastChargeDate;

    /**
     * The quantity purchased for the product.
     */
    @JsonProperty(value = "properties.quantity", access = JsonProperty.Access.WRITE_ONLY)
    private Double quantity;

    /**
     * The sku ID of the product.
     */
    @JsonProperty(value = "properties.skuId", access = JsonProperty.Access.WRITE_ONLY)
    private String skuId;

    /**
     * The sku description of the product.
     */
    @JsonProperty(value = "properties.skuDescription", access = JsonProperty.Access.WRITE_ONLY)
    private String skuDescription;

    /**
     * The id of the tenant in which the product is used.
     */
    @JsonProperty(value = "properties.tenantId", access = JsonProperty.Access.WRITE_ONLY)
    private String tenantId;

    /**
     * The availability of the product.
     */
    @JsonProperty(value = "properties.availabilityId", access = JsonProperty.Access.WRITE_ONLY)
    private String availabilityId;

    /**
     * The ID of the invoice section to which the product is billed.
     */
    @JsonProperty(value = "properties.invoiceSectionId", access = JsonProperty.Access.WRITE_ONLY)
    private String invoiceSectionId;

    /**
     * The name of the invoice section to which the product is billed.
     */
    @JsonProperty(value = "properties.invoiceSectionDisplayName", access = JsonProperty.Access.WRITE_ONLY)
    private String invoiceSectionDisplayName;

    /**
     * The ID of the billing profile to which the product is billed.
     */
    @JsonProperty(value = "properties.billingProfileId", access = JsonProperty.Access.WRITE_ONLY)
    private String billingProfileId;

    /**
     * The name of the billing profile to which the product is billed.
     */
    @JsonProperty(value = "properties.billingProfileDisplayName", access = JsonProperty.Access.WRITE_ONLY)
    private String billingProfileDisplayName;

    /**
     * The ID of the customer for whom the product was purchased. The field is
     * applicable only for Microsoft Partner Agreement billing account.
     */
    @JsonProperty(value = "properties.customerId", access = JsonProperty.Access.WRITE_ONLY)
    private String customerId;

    /**
     * The name of the customer for whom the product was purchased. The field
     * is applicable only for Microsoft Partner Agreement billing account.
     */
    @JsonProperty(value = "properties.customerDisplayName", access = JsonProperty.Access.WRITE_ONLY)
    private String customerDisplayName;

    /**
     * Reseller for this product.
     */
    @JsonProperty(value = "properties.reseller", access = JsonProperty.Access.WRITE_ONLY)
    private Reseller reseller;

    /**
     * Get indicates whether auto renewal is turned on or off for a product. Possible values include: 'Off', 'On'.
     *
     * @return the autoRenew value
     */
    public AutoRenew autoRenew() {
        return this.autoRenew;
    }

    /**
     * Set indicates whether auto renewal is turned on or off for a product. Possible values include: 'Off', 'On'.
     *
     * @param autoRenew the autoRenew value to set
     * @return the ProductInner object itself.
     */
    public ProductInner withAutoRenew(AutoRenew autoRenew) {
        this.autoRenew = autoRenew;
        return this;
    }

    /**
     * Get the display name of the product.
     *
     * @return the displayName value
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Get the date when the product was purchased.
     *
     * @return the purchaseDate value
     */
    public DateTime purchaseDate() {
        return this.purchaseDate;
    }

    /**
     * Get the ID of the type of product.
     *
     * @return the productTypeId value
     */
    public String productTypeId() {
        return this.productTypeId;
    }

    /**
     * Get the description of the type of product.
     *
     * @return the productType value
     */
    public String productType() {
        return this.productType;
    }

    /**
     * Get the current status of the product. Possible values include: 'Active', 'Inactive', 'PastDue', 'Expiring', 'Expired', 'Disabled', 'Cancelled', 'AutoRenew'.
     *
     * @return the status value
     */
    public ProductStatusType status() {
        return this.status;
    }

    /**
     * Set the current status of the product. Possible values include: 'Active', 'Inactive', 'PastDue', 'Expiring', 'Expired', 'Disabled', 'Cancelled', 'AutoRenew'.
     *
     * @param status the status value to set
     * @return the ProductInner object itself.
     */
    public ProductInner withStatus(ProductStatusType status) {
        this.status = status;
        return this;
    }

    /**
     * Get the date when the product will be renewed or canceled.
     *
     * @return the endDate value
     */
    public DateTime endDate() {
        return this.endDate;
    }

    /**
     * Get the frequency at which the product will be billed. Possible values include: 'OneTime', 'Monthly', 'UsageBased'.
     *
     * @return the billingFrequency value
     */
    public BillingFrequency billingFrequency() {
        return this.billingFrequency;
    }

    /**
     * Set the frequency at which the product will be billed. Possible values include: 'OneTime', 'Monthly', 'UsageBased'.
     *
     * @param billingFrequency the billingFrequency value to set
     * @return the ProductInner object itself.
     */
    public ProductInner withBillingFrequency(BillingFrequency billingFrequency) {
        this.billingFrequency = billingFrequency;
        return this;
    }

    /**
     * Get the last month charges.
     *
     * @return the lastCharge value
     */
    public Amount lastCharge() {
        return this.lastCharge;
    }

    /**
     * Get the date of the last charge.
     *
     * @return the lastChargeDate value
     */
    public DateTime lastChargeDate() {
        return this.lastChargeDate;
    }

    /**
     * Get the quantity purchased for the product.
     *
     * @return the quantity value
     */
    public Double quantity() {
        return this.quantity;
    }

    /**
     * Get the sku ID of the product.
     *
     * @return the skuId value
     */
    public String skuId() {
        return this.skuId;
    }

    /**
     * Get the sku description of the product.
     *
     * @return the skuDescription value
     */
    public String skuDescription() {
        return this.skuDescription;
    }

    /**
     * Get the id of the tenant in which the product is used.
     *
     * @return the tenantId value
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Get the availability of the product.
     *
     * @return the availabilityId value
     */
    public String availabilityId() {
        return this.availabilityId;
    }

    /**
     * Get the ID of the invoice section to which the product is billed.
     *
     * @return the invoiceSectionId value
     */
    public String invoiceSectionId() {
        return this.invoiceSectionId;
    }

    /**
     * Get the name of the invoice section to which the product is billed.
     *
     * @return the invoiceSectionDisplayName value
     */
    public String invoiceSectionDisplayName() {
        return this.invoiceSectionDisplayName;
    }

    /**
     * Get the ID of the billing profile to which the product is billed.
     *
     * @return the billingProfileId value
     */
    public String billingProfileId() {
        return this.billingProfileId;
    }

    /**
     * Get the name of the billing profile to which the product is billed.
     *
     * @return the billingProfileDisplayName value
     */
    public String billingProfileDisplayName() {
        return this.billingProfileDisplayName;
    }

    /**
     * Get the ID of the customer for whom the product was purchased. The field is applicable only for Microsoft Partner Agreement billing account.
     *
     * @return the customerId value
     */
    public String customerId() {
        return this.customerId;
    }

    /**
     * Get the name of the customer for whom the product was purchased. The field is applicable only for Microsoft Partner Agreement billing account.
     *
     * @return the customerDisplayName value
     */
    public String customerDisplayName() {
        return this.customerDisplayName;
    }

    /**
     * Get reseller for this product.
     *
     * @return the reseller value
     */
    public Reseller reseller() {
        return this.reseller;
    }

}
