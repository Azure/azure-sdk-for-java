/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2020_05_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.billing.v2020_05_01.implementation.ProductInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.billing.v2020_05_01.implementation.BillingManager;
import org.joda.time.DateTime;

/**
 * Type representing Product.
 */
public interface Product extends HasInner<ProductInner>, Indexable, Updatable<Product.Update>, HasManager<BillingManager> {
    /**
     * @return the autoRenew value.
     */
    AutoRenew autoRenew();

    /**
     * @return the availabilityId value.
     */
    String availabilityId();

    /**
     * @return the billingFrequency value.
     */
    BillingFrequency billingFrequency();

    /**
     * @return the billingProfileDisplayName value.
     */
    String billingProfileDisplayName();

    /**
     * @return the billingProfileId value.
     */
    String billingProfileId();

    /**
     * @return the customerDisplayName value.
     */
    String customerDisplayName();

    /**
     * @return the customerId value.
     */
    String customerId();

    /**
     * @return the displayName value.
     */
    String displayName();

    /**
     * @return the endDate value.
     */
    DateTime endDate();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the invoiceSectionDisplayName value.
     */
    String invoiceSectionDisplayName();

    /**
     * @return the invoiceSectionId value.
     */
    String invoiceSectionId();

    /**
     * @return the lastCharge value.
     */
    Amount lastCharge();

    /**
     * @return the lastChargeDate value.
     */
    DateTime lastChargeDate();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the productType value.
     */
    String productType();

    /**
     * @return the productTypeId value.
     */
    String productTypeId();

    /**
     * @return the purchaseDate value.
     */
    DateTime purchaseDate();

    /**
     * @return the quantity value.
     */
    Double quantity();

    /**
     * @return the reseller value.
     */
    Reseller reseller();

    /**
     * @return the skuDescription value.
     */
    String skuDescription();

    /**
     * @return the skuId value.
     */
    String skuId();

    /**
     * @return the status value.
     */
    ProductStatusType status();

    /**
     * @return the tenantId value.
     */
    String tenantId();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The template for a Product update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Product>, UpdateStages.WithAutoRenew, UpdateStages.WithBillingFrequency, UpdateStages.WithStatus {
    }

    /**
     * Grouping of Product update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the product update allowing to specify AutoRenew.
         */
        interface WithAutoRenew {
            /**
             * Specifies autoRenew.
             * @param autoRenew Indicates whether auto renewal is turned on or off for a product. Possible values include: 'Off', 'On'
             * @return the next update stage
             */
            Update withAutoRenew(AutoRenew autoRenew);
        }

        /**
         * The stage of the product update allowing to specify BillingFrequency.
         */
        interface WithBillingFrequency {
            /**
             * Specifies billingFrequency.
             * @param billingFrequency The frequency at which the product will be billed. Possible values include: 'OneTime', 'Monthly', 'UsageBased'
             * @return the next update stage
             */
            Update withBillingFrequency(BillingFrequency billingFrequency);
        }

        /**
         * The stage of the product update allowing to specify Status.
         */
        interface WithStatus {
            /**
             * Specifies status.
             * @param status The current status of the product. Possible values include: 'Active', 'Inactive', 'PastDue', 'Expiring', 'Expired', 'Disabled', 'Cancelled', 'AutoRenew'
             * @return the next update stage
             */
            Update withStatus(ProductStatusType status);
        }

    }
}
