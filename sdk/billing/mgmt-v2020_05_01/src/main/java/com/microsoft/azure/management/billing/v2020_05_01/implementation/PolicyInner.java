/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2020_05_01.implementation;

import com.microsoft.azure.management.billing.v2020_05_01.MarketplacePurchasesPolicy;
import com.microsoft.azure.management.billing.v2020_05_01.ReservationPurchasesPolicy;
import com.microsoft.azure.management.billing.v2020_05_01.ViewChargesPolicy;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * A policy.
 */
@JsonFlatten
public class PolicyInner extends ProxyResource {
    /**
     * The policy that controls whether Azure marketplace purchases are allowed
     * for a billing profile. Possible values include: 'AllAllowed',
     * 'OnlyFreeAllowed', 'NotAllowed'.
     */
    @JsonProperty(value = "properties.marketplacePurchases")
    private MarketplacePurchasesPolicy marketplacePurchases;

    /**
     * The policy that controls whether Azure reservation purchases are allowed
     * for a billing profile. Possible values include: 'Allowed', 'NotAllowed'.
     */
    @JsonProperty(value = "properties.reservationPurchases")
    private ReservationPurchasesPolicy reservationPurchases;

    /**
     * The policy that controls whether users with Azure RBAC access to a
     * subscription can view its charges. Possible values include: 'Allowed',
     * 'NotAllowed'.
     */
    @JsonProperty(value = "properties.viewCharges")
    private ViewChargesPolicy viewCharges;

    /**
     * Get the policy that controls whether Azure marketplace purchases are allowed for a billing profile. Possible values include: 'AllAllowed', 'OnlyFreeAllowed', 'NotAllowed'.
     *
     * @return the marketplacePurchases value
     */
    public MarketplacePurchasesPolicy marketplacePurchases() {
        return this.marketplacePurchases;
    }

    /**
     * Set the policy that controls whether Azure marketplace purchases are allowed for a billing profile. Possible values include: 'AllAllowed', 'OnlyFreeAllowed', 'NotAllowed'.
     *
     * @param marketplacePurchases the marketplacePurchases value to set
     * @return the PolicyInner object itself.
     */
    public PolicyInner withMarketplacePurchases(MarketplacePurchasesPolicy marketplacePurchases) {
        this.marketplacePurchases = marketplacePurchases;
        return this;
    }

    /**
     * Get the policy that controls whether Azure reservation purchases are allowed for a billing profile. Possible values include: 'Allowed', 'NotAllowed'.
     *
     * @return the reservationPurchases value
     */
    public ReservationPurchasesPolicy reservationPurchases() {
        return this.reservationPurchases;
    }

    /**
     * Set the policy that controls whether Azure reservation purchases are allowed for a billing profile. Possible values include: 'Allowed', 'NotAllowed'.
     *
     * @param reservationPurchases the reservationPurchases value to set
     * @return the PolicyInner object itself.
     */
    public PolicyInner withReservationPurchases(ReservationPurchasesPolicy reservationPurchases) {
        this.reservationPurchases = reservationPurchases;
        return this;
    }

    /**
     * Get the policy that controls whether users with Azure RBAC access to a subscription can view its charges. Possible values include: 'Allowed', 'NotAllowed'.
     *
     * @return the viewCharges value
     */
    public ViewChargesPolicy viewCharges() {
        return this.viewCharges;
    }

    /**
     * Set the policy that controls whether users with Azure RBAC access to a subscription can view its charges. Possible values include: 'Allowed', 'NotAllowed'.
     *
     * @param viewCharges the viewCharges value to set
     * @return the PolicyInner object itself.
     */
    public PolicyInner withViewCharges(ViewChargesPolicy viewCharges) {
        this.viewCharges = viewCharges;
        return this;
    }

}
