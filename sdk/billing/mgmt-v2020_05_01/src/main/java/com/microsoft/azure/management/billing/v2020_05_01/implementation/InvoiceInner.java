/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2020_05_01.implementation;

import org.joda.time.DateTime;
import com.microsoft.azure.management.billing.v2020_05_01.InvoiceStatus;
import com.microsoft.azure.management.billing.v2020_05_01.Amount;
import com.microsoft.azure.management.billing.v2020_05_01.InvoiceType;
import java.util.List;
import com.microsoft.azure.management.billing.v2020_05_01.Document;
import com.microsoft.azure.management.billing.v2020_05_01.PaymentProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * An invoice.
 */
@JsonFlatten
public class InvoiceInner extends ProxyResource {
    /**
     * The due date for the invoice.
     */
    @JsonProperty(value = "properties.dueDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime dueDate;

    /**
     * The date when the invoice was generated.
     */
    @JsonProperty(value = "properties.invoiceDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime invoiceDate;

    /**
     * The current status of the invoice. Possible values include: 'Due',
     * 'OverDue', 'Paid'.
     */
    @JsonProperty(value = "properties.status", access = JsonProperty.Access.WRITE_ONLY)
    private InvoiceStatus status;

    /**
     * The amount due as of now.
     */
    @JsonProperty(value = "properties.amountDue", access = JsonProperty.Access.WRITE_ONLY)
    private Amount amountDue;

    /**
     * The amount of Azure prepayment applied to the charges. This field is
     * applicable to billing accounts with agreement type Microsoft Customer
     * Agreement.
     */
    @JsonProperty(value = "properties.azurePrepaymentApplied", access = JsonProperty.Access.WRITE_ONLY)
    private Amount azurePrepaymentApplied;

    /**
     * The total charges for the invoice billing period.
     */
    @JsonProperty(value = "properties.billedAmount", access = JsonProperty.Access.WRITE_ONLY)
    private Amount billedAmount;

    /**
     * The total refund for returns and cancellations during the invoice
     * billing period. This field is applicable to billing accounts with
     * agreement type Microsoft Customer Agreement.
     */
    @JsonProperty(value = "properties.creditAmount", access = JsonProperty.Access.WRITE_ONLY)
    private Amount creditAmount;

    /**
     * The amount of free Azure credits applied to the charges. This field is
     * applicable to billing accounts with agreement type Microsoft Customer
     * Agreement.
     */
    @JsonProperty(value = "properties.freeAzureCreditApplied", access = JsonProperty.Access.WRITE_ONLY)
    private Amount freeAzureCreditApplied;

    /**
     * The pre-tax amount due. This field is applicable to billing accounts
     * with agreement type Microsoft Customer Agreement.
     */
    @JsonProperty(value = "properties.subTotal", access = JsonProperty.Access.WRITE_ONLY)
    private Amount subTotal;

    /**
     * The amount of tax charged for the billing period. This field is
     * applicable to billing accounts with agreement type Microsoft Customer
     * Agreement.
     */
    @JsonProperty(value = "properties.taxAmount", access = JsonProperty.Access.WRITE_ONLY)
    private Amount taxAmount;

    /**
     * The amount due when the invoice was generated. This field is applicable
     * to billing accounts with agreement type Microsoft Customer Agreement.
     */
    @JsonProperty(value = "properties.totalAmount", access = JsonProperty.Access.WRITE_ONLY)
    private Amount totalAmount;

    /**
     * The start date of the billing period for which the invoice is generated.
     */
    @JsonProperty(value = "properties.invoicePeriodStartDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime invoicePeriodStartDate;

    /**
     * The end date of the billing period for which the invoice is generated.
     */
    @JsonProperty(value = "properties.invoicePeriodEndDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime invoicePeriodEndDate;

    /**
     * Invoice type. Possible values include: 'AzureService',
     * 'AzureMarketplace', 'AzureSupport'.
     */
    @JsonProperty(value = "properties.invoiceType", access = JsonProperty.Access.WRITE_ONLY)
    private InvoiceType invoiceType;

    /**
     * Specifies if the invoice is generated as part of monthly invoicing cycle
     * or not. This field is applicable to billing accounts with agreement type
     * Microsoft Customer Agreement.
     */
    @JsonProperty(value = "properties.isMonthlyInvoice", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isMonthlyInvoice;

    /**
     * The ID of the billing profile for which the invoice is generated.
     */
    @JsonProperty(value = "properties.billingProfileId", access = JsonProperty.Access.WRITE_ONLY)
    private String billingProfileId;

    /**
     * The name of the billing profile for which the invoice is generated.
     */
    @JsonProperty(value = "properties.billingProfileDisplayName", access = JsonProperty.Access.WRITE_ONLY)
    private String billingProfileDisplayName;

    /**
     * An optional purchase order number for the invoice.
     */
    @JsonProperty(value = "properties.purchaseOrderNumber", access = JsonProperty.Access.WRITE_ONLY)
    private String purchaseOrderNumber;

    /**
     * List of documents available to download such as invoice and tax receipt.
     */
    @JsonProperty(value = "properties.documents", access = JsonProperty.Access.WRITE_ONLY)
    private List<Document> documents;

    /**
     * List of payments.
     */
    @JsonProperty(value = "properties.payments", access = JsonProperty.Access.WRITE_ONLY)
    private List<PaymentProperties> payments;

    /**
     * The ID of the subscription for which the invoice is generated.
     */
    @JsonProperty(value = "properties.subscriptionId", access = JsonProperty.Access.WRITE_ONLY)
    private String subscriptionId;

    /**
     * Get the due date for the invoice.
     *
     * @return the dueDate value
     */
    public DateTime dueDate() {
        return this.dueDate;
    }

    /**
     * Get the date when the invoice was generated.
     *
     * @return the invoiceDate value
     */
    public DateTime invoiceDate() {
        return this.invoiceDate;
    }

    /**
     * Get the current status of the invoice. Possible values include: 'Due', 'OverDue', 'Paid'.
     *
     * @return the status value
     */
    public InvoiceStatus status() {
        return this.status;
    }

    /**
     * Get the amount due as of now.
     *
     * @return the amountDue value
     */
    public Amount amountDue() {
        return this.amountDue;
    }

    /**
     * Get the amount of Azure prepayment applied to the charges. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
     *
     * @return the azurePrepaymentApplied value
     */
    public Amount azurePrepaymentApplied() {
        return this.azurePrepaymentApplied;
    }

    /**
     * Get the total charges for the invoice billing period.
     *
     * @return the billedAmount value
     */
    public Amount billedAmount() {
        return this.billedAmount;
    }

    /**
     * Get the total refund for returns and cancellations during the invoice billing period. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
     *
     * @return the creditAmount value
     */
    public Amount creditAmount() {
        return this.creditAmount;
    }

    /**
     * Get the amount of free Azure credits applied to the charges. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
     *
     * @return the freeAzureCreditApplied value
     */
    public Amount freeAzureCreditApplied() {
        return this.freeAzureCreditApplied;
    }

    /**
     * Get the pre-tax amount due. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
     *
     * @return the subTotal value
     */
    public Amount subTotal() {
        return this.subTotal;
    }

    /**
     * Get the amount of tax charged for the billing period. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
     *
     * @return the taxAmount value
     */
    public Amount taxAmount() {
        return this.taxAmount;
    }

    /**
     * Get the amount due when the invoice was generated. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
     *
     * @return the totalAmount value
     */
    public Amount totalAmount() {
        return this.totalAmount;
    }

    /**
     * Get the start date of the billing period for which the invoice is generated.
     *
     * @return the invoicePeriodStartDate value
     */
    public DateTime invoicePeriodStartDate() {
        return this.invoicePeriodStartDate;
    }

    /**
     * Get the end date of the billing period for which the invoice is generated.
     *
     * @return the invoicePeriodEndDate value
     */
    public DateTime invoicePeriodEndDate() {
        return this.invoicePeriodEndDate;
    }

    /**
     * Get invoice type. Possible values include: 'AzureService', 'AzureMarketplace', 'AzureSupport'.
     *
     * @return the invoiceType value
     */
    public InvoiceType invoiceType() {
        return this.invoiceType;
    }

    /**
     * Get specifies if the invoice is generated as part of monthly invoicing cycle or not. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
     *
     * @return the isMonthlyInvoice value
     */
    public Boolean isMonthlyInvoice() {
        return this.isMonthlyInvoice;
    }

    /**
     * Get the ID of the billing profile for which the invoice is generated.
     *
     * @return the billingProfileId value
     */
    public String billingProfileId() {
        return this.billingProfileId;
    }

    /**
     * Get the name of the billing profile for which the invoice is generated.
     *
     * @return the billingProfileDisplayName value
     */
    public String billingProfileDisplayName() {
        return this.billingProfileDisplayName;
    }

    /**
     * Get an optional purchase order number for the invoice.
     *
     * @return the purchaseOrderNumber value
     */
    public String purchaseOrderNumber() {
        return this.purchaseOrderNumber;
    }

    /**
     * Get list of documents available to download such as invoice and tax receipt.
     *
     * @return the documents value
     */
    public List<Document> documents() {
        return this.documents;
    }

    /**
     * Get list of payments.
     *
     * @return the payments value
     */
    public List<PaymentProperties> payments() {
        return this.payments;
    }

    /**
     * Get the ID of the subscription for which the invoice is generated.
     *
     * @return the subscriptionId value
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

}
