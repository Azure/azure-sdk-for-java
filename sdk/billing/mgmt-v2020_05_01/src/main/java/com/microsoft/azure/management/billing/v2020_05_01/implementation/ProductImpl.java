/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2020_05_01.implementation;

import com.microsoft.azure.management.billing.v2020_05_01.Product;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.billing.v2020_05_01.AutoRenew;
import org.joda.time.DateTime;
import com.microsoft.azure.management.billing.v2020_05_01.ProductStatusType;
import com.microsoft.azure.management.billing.v2020_05_01.BillingFrequency;
import com.microsoft.azure.management.billing.v2020_05_01.Amount;
import com.microsoft.azure.management.billing.v2020_05_01.Reseller;

class ProductImpl extends CreatableUpdatableImpl<Product, ProductInner, ProductImpl> implements Product, Product.Update {
    private final BillingManager manager;
    private String billingAccountName;
    private String productName;

    ProductImpl(String name, BillingManager manager) {
        super(name, new ProductInner());
        this.manager = manager;
        // Set resource name
        this.productName = name;
        //
    }

    ProductImpl(ProductInner inner, BillingManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.productName = inner.name();
        // set resource ancestor and positional variables
        this.billingAccountName = IdParsingUtils.getValueFromIdByName(inner.id(), "billingAccounts");
        this.productName = IdParsingUtils.getValueFromIdByName(inner.id(), "products");
        //
    }

    @Override
    public BillingManager manager() {
        return this.manager;
    }

    @Override
    public Observable<Product> createResourceAsync() {
        ProductsInner client = this.manager().inner().products();
        return null; // NOP createResourceAsync implementation as create is not supported
    }

    @Override
    public Observable<Product> updateResourceAsync() {
        ProductsInner client = this.manager().inner().products();
        return client.updateAsync(this.billingAccountName, this.productName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<ProductInner> getInnerAsync() {
        ProductsInner client = this.manager().inner().products();
        return null; // NOP getInnerAsync implementation as get is not supported
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public AutoRenew autoRenew() {
        return this.inner().autoRenew();
    }

    @Override
    public String availabilityId() {
        return this.inner().availabilityId();
    }

    @Override
    public BillingFrequency billingFrequency() {
        return this.inner().billingFrequency();
    }

    @Override
    public String billingProfileDisplayName() {
        return this.inner().billingProfileDisplayName();
    }

    @Override
    public String billingProfileId() {
        return this.inner().billingProfileId();
    }

    @Override
    public String customerDisplayName() {
        return this.inner().customerDisplayName();
    }

    @Override
    public String customerId() {
        return this.inner().customerId();
    }

    @Override
    public String displayName() {
        return this.inner().displayName();
    }

    @Override
    public DateTime endDate() {
        return this.inner().endDate();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String invoiceSectionDisplayName() {
        return this.inner().invoiceSectionDisplayName();
    }

    @Override
    public String invoiceSectionId() {
        return this.inner().invoiceSectionId();
    }

    @Override
    public Amount lastCharge() {
        return this.inner().lastCharge();
    }

    @Override
    public DateTime lastChargeDate() {
        return this.inner().lastChargeDate();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String productType() {
        return this.inner().productType();
    }

    @Override
    public String productTypeId() {
        return this.inner().productTypeId();
    }

    @Override
    public DateTime purchaseDate() {
        return this.inner().purchaseDate();
    }

    @Override
    public Double quantity() {
        return this.inner().quantity();
    }

    @Override
    public Reseller reseller() {
        return this.inner().reseller();
    }

    @Override
    public String skuDescription() {
        return this.inner().skuDescription();
    }

    @Override
    public String skuId() {
        return this.inner().skuId();
    }

    @Override
    public ProductStatusType status() {
        return this.inner().status();
    }

    @Override
    public String tenantId() {
        return this.inner().tenantId();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public ProductImpl withAutoRenew(AutoRenew autoRenew) {
        this.inner().withAutoRenew(autoRenew);
        return this;
    }

    @Override
    public ProductImpl withBillingFrequency(BillingFrequency billingFrequency) {
        this.inner().withBillingFrequency(billingFrequency);
        return this;
    }

    @Override
    public ProductImpl withStatus(ProductStatusType status) {
        this.inner().withStatus(status);
        return this;
    }

}
