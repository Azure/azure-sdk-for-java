/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2020_05_01.implementation;

import com.microsoft.azure.management.billing.v2020_05_01.AddressDetails;
import com.microsoft.azure.management.billing.v2020_05_01.AgreementType;
import com.microsoft.azure.management.billing.v2020_05_01.AccountType;
import com.microsoft.azure.management.billing.v2020_05_01.AccountStatus;
import com.microsoft.azure.management.billing.v2020_05_01.BillingProfilesOnExpand;
import com.microsoft.azure.management.billing.v2020_05_01.Enrollment;
import java.util.List;
import com.microsoft.azure.management.billing.v2020_05_01.Department;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * A billing account.
 */
@JsonFlatten
public class BillingAccountInner extends ProxyResource {
    /**
     * The billing account name.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /**
     * The address of the individual or organization that is responsible for
     * the billing account.
     */
    @JsonProperty(value = "properties.soldTo")
    private AddressDetails soldTo;

    /**
     * The type of agreement. Possible values include:
     * 'MicrosoftCustomerAgreement', 'EnterpriseAgreement',
     * 'MicrosoftOnlineServicesProgram', 'MicrosoftPartnerAgreement'.
     */
    @JsonProperty(value = "properties.agreementType", access = JsonProperty.Access.WRITE_ONLY)
    private AgreementType agreementType;

    /**
     * The type of customer. Possible values include: 'Enterprise',
     * 'Individual', 'Partner'.
     */
    @JsonProperty(value = "properties.accountType", access = JsonProperty.Access.WRITE_ONLY)
    private AccountType accountType;

    /**
     * The current status of the billing account. Possible values include:
     * 'Active', 'Deleted', 'Disabled', 'Expired', 'Transferred', 'Extended',
     * 'Terminated'.
     */
    @JsonProperty(value = "properties.accountStatus", access = JsonProperty.Access.WRITE_ONLY)
    private AccountStatus accountStatus;

    /**
     * The billing profiles associated with the billing account. By default
     * this is not populated, unless it's specified in $expand.
     */
    @JsonProperty(value = "properties.billingProfiles")
    private BillingProfilesOnExpand billingProfiles;

    /**
     * The details about the associated legacy enrollment. By default this is
     * not populated, unless it's specified in $expand.
     */
    @JsonProperty(value = "properties.enrollmentDetails", access = JsonProperty.Access.WRITE_ONLY)
    private Enrollment enrollmentDetails;

    /**
     * The departments associated to the enrollment.
     */
    @JsonProperty(value = "properties.departments")
    private List<Department> departments;

    /**
     * The accounts associated to the enrollment.
     */
    @JsonProperty(value = "properties.enrollmentAccounts")
    private List<EnrollmentAccountInner> enrollmentAccounts;

    /**
     * Indicates whether user has read access to the billing account.
     */
    @JsonProperty(value = "properties.hasReadAccess", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean hasReadAccess;

    /**
     * Get the billing account name.
     *
     * @return the displayName value
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the billing account name.
     *
     * @param displayName the displayName value to set
     * @return the BillingAccountInner object itself.
     */
    public BillingAccountInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the address of the individual or organization that is responsible for the billing account.
     *
     * @return the soldTo value
     */
    public AddressDetails soldTo() {
        return this.soldTo;
    }

    /**
     * Set the address of the individual or organization that is responsible for the billing account.
     *
     * @param soldTo the soldTo value to set
     * @return the BillingAccountInner object itself.
     */
    public BillingAccountInner withSoldTo(AddressDetails soldTo) {
        this.soldTo = soldTo;
        return this;
    }

    /**
     * Get the type of agreement. Possible values include: 'MicrosoftCustomerAgreement', 'EnterpriseAgreement', 'MicrosoftOnlineServicesProgram', 'MicrosoftPartnerAgreement'.
     *
     * @return the agreementType value
     */
    public AgreementType agreementType() {
        return this.agreementType;
    }

    /**
     * Get the type of customer. Possible values include: 'Enterprise', 'Individual', 'Partner'.
     *
     * @return the accountType value
     */
    public AccountType accountType() {
        return this.accountType;
    }

    /**
     * Get the current status of the billing account. Possible values include: 'Active', 'Deleted', 'Disabled', 'Expired', 'Transferred', 'Extended', 'Terminated'.
     *
     * @return the accountStatus value
     */
    public AccountStatus accountStatus() {
        return this.accountStatus;
    }

    /**
     * Get the billing profiles associated with the billing account. By default this is not populated, unless it's specified in $expand.
     *
     * @return the billingProfiles value
     */
    public BillingProfilesOnExpand billingProfiles() {
        return this.billingProfiles;
    }

    /**
     * Set the billing profiles associated with the billing account. By default this is not populated, unless it's specified in $expand.
     *
     * @param billingProfiles the billingProfiles value to set
     * @return the BillingAccountInner object itself.
     */
    public BillingAccountInner withBillingProfiles(BillingProfilesOnExpand billingProfiles) {
        this.billingProfiles = billingProfiles;
        return this;
    }

    /**
     * Get the details about the associated legacy enrollment. By default this is not populated, unless it's specified in $expand.
     *
     * @return the enrollmentDetails value
     */
    public Enrollment enrollmentDetails() {
        return this.enrollmentDetails;
    }

    /**
     * Get the departments associated to the enrollment.
     *
     * @return the departments value
     */
    public List<Department> departments() {
        return this.departments;
    }

    /**
     * Set the departments associated to the enrollment.
     *
     * @param departments the departments value to set
     * @return the BillingAccountInner object itself.
     */
    public BillingAccountInner withDepartments(List<Department> departments) {
        this.departments = departments;
        return this;
    }

    /**
     * Get the accounts associated to the enrollment.
     *
     * @return the enrollmentAccounts value
     */
    public List<EnrollmentAccountInner> enrollmentAccounts() {
        return this.enrollmentAccounts;
    }

    /**
     * Set the accounts associated to the enrollment.
     *
     * @param enrollmentAccounts the enrollmentAccounts value to set
     * @return the BillingAccountInner object itself.
     */
    public BillingAccountInner withEnrollmentAccounts(List<EnrollmentAccountInner> enrollmentAccounts) {
        this.enrollmentAccounts = enrollmentAccounts;
        return this;
    }

    /**
     * Get indicates whether user has read access to the billing account.
     *
     * @return the hasReadAccess value
     */
    public Boolean hasReadAccess() {
        return this.hasReadAccess;
    }

}
