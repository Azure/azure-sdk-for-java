/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2020_05_01;

import rx.Observable;
import com.microsoft.azure.management.billing.v2020_05_01.implementation.BillingPermissionsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing BillingPermissions.
 */
public interface BillingPermissions extends HasInner<BillingPermissionsInner> {
    /**
     * Lists the billing permissions the caller has on a billing account.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingPermissionsProperties> listByBillingAccountAsync(final String billingAccountName);

    /**
     * Lists the billing permissions the caller has on an invoice section.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param invoiceSectionName The ID that uniquely identifies an invoice section.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingPermissionsProperties> listByInvoiceSectionsAsync(final String billingAccountName, final String billingProfileName, final String invoiceSectionName);

    /**
     * Lists the billing permissions the caller has on a billing profile.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingPermissionsProperties> listByBillingProfileAsync(final String billingAccountName, final String billingProfileName);

    /**
     * Lists the billing permissions the caller has for a customer.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param customerName The ID that uniquely identifies a customer.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingPermissionsProperties> listByCustomerAsync(final String billingAccountName, final String customerName);

}
