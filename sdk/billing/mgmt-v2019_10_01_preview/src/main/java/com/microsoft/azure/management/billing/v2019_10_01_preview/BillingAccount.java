/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2019_10_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.billing.v2019_10_01_preview.implementation.BillingAccountInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.billing.v2019_10_01_preview.implementation.BillingManager;
import java.util.List;
import com.microsoft.azure.management.billing.v2019_10_01_preview.implementation.BillingProfileInner;
import com.microsoft.azure.management.billing.v2019_10_01_preview.implementation.DepartmentInner;
import com.microsoft.azure.management.billing.v2019_10_01_preview.implementation.EnrollmentAccountInner;

/**
 * Type representing BillingAccount.
 */
public interface BillingAccount extends HasInner<BillingAccountInner>, Indexable, Updatable<BillingAccount.Update>, Refreshable<BillingAccount>, HasManager<BillingManager> {
    /**
     * @return the address value.
     */
    AddressDetails address();

    /**
     * @return the agreementType value.
     */
    AgreementType agreementType();

    /**
     * @return the billingProfiles value.
     */
    List<BillingProfile> billingProfiles();

    /**
     * @return the customerType value.
     */
    CustomerType customerType();

    /**
     * @return the departments value.
     */
    List<Department> departments();

    /**
     * @return the displayName value.
     */
    String displayName();

    /**
     * @return the enrollmentAccounts value.
     */
    List<EnrollmentAccount> enrollmentAccounts();

    /**
     * @return the enrollmentDetails value.
     */
    Enrollment enrollmentDetails();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the organizationId value.
     */
    String organizationId();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The template for a BillingAccount update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<BillingAccount>, UpdateStages.WithAddress, UpdateStages.WithBillingProfiles, UpdateStages.WithDepartments, UpdateStages.WithEnrollmentAccounts {
    }

    /**
     * Grouping of BillingAccount update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the billingaccount update allowing to specify Address.
         */
        interface WithAddress {
            /**
             * Specifies address.
             * @param address The address associated with billing account
             * @return the next update stage
             */
            Update withAddress(AddressDetails address);
        }

        /**
         * The stage of the billingaccount update allowing to specify BillingProfiles.
         */
        interface WithBillingProfiles {
            /**
             * Specifies billingProfiles.
             * @param billingProfiles The billing profiles associated to the billing account. By default this is not populated, unless it's specified in $expand
             * @return the next update stage
             */
            Update withBillingProfiles(List<BillingProfileInner> billingProfiles);
        }

        /**
         * The stage of the billingaccount update allowing to specify Departments.
         */
        interface WithDepartments {
            /**
             * Specifies departments.
             * @param departments The departments associated to the enrollment
             * @return the next update stage
             */
            Update withDepartments(List<DepartmentInner> departments);
        }

        /**
         * The stage of the billingaccount update allowing to specify EnrollmentAccounts.
         */
        interface WithEnrollmentAccounts {
            /**
             * Specifies enrollmentAccounts.
             * @param enrollmentAccounts The accounts associated to the enrollment
             * @return the next update stage
             */
            Update withEnrollmentAccounts(List<EnrollmentAccountInner> enrollmentAccounts);
        }

    }
}
