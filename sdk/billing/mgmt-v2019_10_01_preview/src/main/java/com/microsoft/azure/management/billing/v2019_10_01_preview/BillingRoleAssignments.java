/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2019_10_01_preview;

import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.billing.v2019_10_01_preview.implementation.BillingRoleAssignmentsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing BillingRoleAssignments.
 */
public interface BillingRoleAssignments extends HasInner<BillingRoleAssignmentsInner> {
    /**
     * Get the role assignment for the caller on the invoice Section.
     *
     * @param billingAccountName billing Account Id.
     * @param billingProfileName Billing Profile Id.
     * @param invoiceSectionName InvoiceSection Id.
     * @param billingRoleAssignmentName role assignment id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingRoleAssignment> getByInvoiceSectionAsync(String billingAccountName, String billingProfileName, String invoiceSectionName, String billingRoleAssignmentName);

    /**
     * Delete the role assignment on the invoice Section.
     *
     * @param billingAccountName billing Account Id.
     * @param billingProfileName Billing Profile Id.
     * @param invoiceSectionName InvoiceSection Id.
     * @param billingRoleAssignmentName role assignment id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingRoleAssignment> deleteByInvoiceSectionAsync(String billingAccountName, String billingProfileName, String invoiceSectionName, String billingRoleAssignmentName);

    /**
     * Get the role assignment for the caller on the Billing Profile.
     *
     * @param billingAccountName billing Account Id.
     * @param billingProfileName Billing Profile Id.
     * @param billingRoleAssignmentName role assignment id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingRoleAssignment> getByBillingProfileAsync(String billingAccountName, String billingProfileName, String billingRoleAssignmentName);

    /**
     * Delete the role assignment on this Billing Profile.
     *
     * @param billingAccountName billing Account Id.
     * @param billingProfileName Billing Profile Id.
     * @param billingRoleAssignmentName role assignment id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingRoleAssignment> deleteByBillingProfileAsync(String billingAccountName, String billingProfileName, String billingRoleAssignmentName);

    /**
     * Get the role assignments on the Billing Account.
     *
     * @param billingAccountName billing Account Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingRoleAssignmentListResult> listByBillingAccountAsync(String billingAccountName);

    /**
     * Get the role assignments on the invoice Section.
     *
     * @param billingAccountName billing Account Id.
     * @param billingProfileName Billing Profile Id.
     * @param invoiceSectionName InvoiceSection Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingRoleAssignmentListResult> listByInvoiceSectionAsync(String billingAccountName, String billingProfileName, String invoiceSectionName);

    /**
     * Get the role assignments on the Billing Profile.
     *
     * @param billingAccountName billing Account Id.
     * @param billingProfileName Billing Profile Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingRoleAssignmentListResult> listByBillingProfileAsync(String billingAccountName, String billingProfileName);

    /**
     * Get the role assignment for the caller.
     *
     * @param billingAccountName billing Account Id.
     * @param billingRoleAssignmentName role assignment id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingRoleAssignment> getByBillingAccountAsync(String billingAccountName, String billingRoleAssignmentName);

    /**
     * Delete the role assignment on this billing account.
     *
     * @param billingAccountName billing Account Id.
     * @param billingRoleAssignmentName role assignment id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteByBillingAccountAsync(String billingAccountName, String billingRoleAssignmentName);

    /**
     * The operation to add a role assignment to a billing account.
     *
     * @param billingAccountName billing Account Id.
     * @param parameters Parameters supplied to add a role assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingRoleAssignmentListResult> addByBillingAccountAsync(String billingAccountName, BillingRoleAssignmentPayload parameters);

    /**
     * The operation to add a role assignment to a invoice Section.
     *
     * @param billingAccountName billing Account Id.
     * @param billingProfileName Billing Profile Id.
     * @param invoiceSectionName InvoiceSection Id.
     * @param parameters Parameters supplied to add a role assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingRoleAssignmentListResult> addByInvoiceSectionAsync(String billingAccountName, String billingProfileName, String invoiceSectionName, BillingRoleAssignmentPayload parameters);

    /**
     * The operation to add a role assignment to a billing profile.
     *
     * @param billingAccountName billing Account Id.
     * @param billingProfileName Billing Profile Id.
     * @param parameters Parameters supplied to add a role assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BillingRoleAssignmentListResult> addByBillingProfileAsync(String billingAccountName, String billingProfileName, BillingRoleAssignmentPayload parameters);

}
