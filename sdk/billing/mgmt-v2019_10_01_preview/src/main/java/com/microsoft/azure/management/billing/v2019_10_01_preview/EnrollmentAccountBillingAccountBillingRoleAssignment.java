/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2019_10_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.billing.v2019_10_01_preview.implementation.BillingRoleAssignmentInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.billing.v2019_10_01_preview.implementation.BillingManager;

/**
 * Type representing EnrollmentAccountBillingAccountBillingRoleAssignment.
 */
public interface EnrollmentAccountBillingAccountBillingRoleAssignment extends HasInner<BillingRoleAssignmentInner>, Indexable, Updatable<EnrollmentAccountBillingAccountBillingRoleAssignment.Update>, HasManager<BillingManager> {
    /**
     * @return the billingRoleAssignmentName value.
     */
    String billingRoleAssignmentName();

    /**
     * @return the createdByPrincipalId value.
     */
    String createdByPrincipalId();

    /**
     * @return the createdByPrincipalTenantId value.
     */
    String createdByPrincipalTenantId();

    /**
     * @return the createdByUserEmailAddress value.
     */
    String createdByUserEmailAddress();

    /**
     * @return the createdOn value.
     */
    String createdOn();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the principalId value.
     */
    String principalId();

    /**
     * @return the principalTenantId value.
     */
    String principalTenantId();

    /**
     * @return the roleDefinitionId value.
     */
    String roleDefinitionId();

    /**
     * @return the scope value.
     */
    String scope();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the userAuthenticationType value.
     */
    String userAuthenticationType();

    /**
     * @return the userEmailAddress value.
     */
    String userEmailAddress();

    /**
     * The entirety of the EnrollmentAccountBillingAccountBillingRoleAssignment definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithEnrollmentAccount, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of EnrollmentAccountBillingAccountBillingRoleAssignment definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a EnrollmentAccountBillingAccountBillingRoleAssignment definition.
         */
        interface Blank extends WithEnrollmentAccount {
        }

        /**
         * The stage of the enrollmentaccountbillingaccountbillingroleassignment definition allowing to specify EnrollmentAccount.
         */
        interface WithEnrollmentAccount {
           /**
            * Specifies billingAccountName, enrollmentAccountName.
            * @param billingAccountName The ID that uniquely identifies a billing account
            * @param enrollmentAccountName The ID that uniquely identifies an enrollment account
            * @return the next definition stage
            */
            WithCreate withExistingEnrollmentAccount(String billingAccountName, String enrollmentAccountName);
        }

        /**
         * The stage of the enrollmentaccountbillingaccountbillingroleassignment definition allowing to specify PrincipalId.
         */
        interface WithPrincipalId {
            /**
             * Specifies principalId.
             * @param principalId The principal id of the user to whom the role was assigned
             * @return the next definition stage
             */
            WithCreate withPrincipalId(String principalId);
        }

        /**
         * The stage of the enrollmentaccountbillingaccountbillingroleassignment definition allowing to specify PrincipalTenantId.
         */
        interface WithPrincipalTenantId {
            /**
             * Specifies principalTenantId.
             * @param principalTenantId The principal tenant id of the user to whom the role was assigned
             * @return the next definition stage
             */
            WithCreate withPrincipalTenantId(String principalTenantId);
        }

        /**
         * The stage of the enrollmentaccountbillingaccountbillingroleassignment definition allowing to specify RoleDefinitionId.
         */
        interface WithRoleDefinitionId {
            /**
             * Specifies roleDefinitionId.
             * @param roleDefinitionId The ID of the role definition
             * @return the next definition stage
             */
            WithCreate withRoleDefinitionId(String roleDefinitionId);
        }

        /**
         * The stage of the enrollmentaccountbillingaccountbillingroleassignment definition allowing to specify UserAuthenticationType.
         */
        interface WithUserAuthenticationType {
            /**
             * Specifies userAuthenticationType.
             * @param userAuthenticationType The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement
             * @return the next definition stage
             */
            WithCreate withUserAuthenticationType(String userAuthenticationType);
        }

        /**
         * The stage of the enrollmentaccountbillingaccountbillingroleassignment definition allowing to specify UserEmailAddress.
         */
        interface WithUserEmailAddress {
            /**
             * Specifies userEmailAddress.
             * @param userEmailAddress The email address of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement
             * @return the next definition stage
             */
            WithCreate withUserEmailAddress(String userEmailAddress);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<EnrollmentAccountBillingAccountBillingRoleAssignment>, DefinitionStages.WithPrincipalId, DefinitionStages.WithPrincipalTenantId, DefinitionStages.WithRoleDefinitionId, DefinitionStages.WithUserAuthenticationType, DefinitionStages.WithUserEmailAddress {
        }
    }
    /**
     * The template for a EnrollmentAccountBillingAccountBillingRoleAssignment update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<EnrollmentAccountBillingAccountBillingRoleAssignment>, UpdateStages.WithPrincipalId, UpdateStages.WithPrincipalTenantId, UpdateStages.WithRoleDefinitionId, UpdateStages.WithUserAuthenticationType, UpdateStages.WithUserEmailAddress {
    }

    /**
     * Grouping of EnrollmentAccountBillingAccountBillingRoleAssignment update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the enrollmentaccountbillingaccountbillingroleassignment update allowing to specify PrincipalId.
         */
        interface WithPrincipalId {
            /**
             * Specifies principalId.
             * @param principalId The principal id of the user to whom the role was assigned
             * @return the next update stage
             */
            Update withPrincipalId(String principalId);
        }

        /**
         * The stage of the enrollmentaccountbillingaccountbillingroleassignment update allowing to specify PrincipalTenantId.
         */
        interface WithPrincipalTenantId {
            /**
             * Specifies principalTenantId.
             * @param principalTenantId The principal tenant id of the user to whom the role was assigned
             * @return the next update stage
             */
            Update withPrincipalTenantId(String principalTenantId);
        }

        /**
         * The stage of the enrollmentaccountbillingaccountbillingroleassignment update allowing to specify RoleDefinitionId.
         */
        interface WithRoleDefinitionId {
            /**
             * Specifies roleDefinitionId.
             * @param roleDefinitionId The ID of the role definition
             * @return the next update stage
             */
            Update withRoleDefinitionId(String roleDefinitionId);
        }

        /**
         * The stage of the enrollmentaccountbillingaccountbillingroleassignment update allowing to specify UserAuthenticationType.
         */
        interface WithUserAuthenticationType {
            /**
             * Specifies userAuthenticationType.
             * @param userAuthenticationType The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement
             * @return the next update stage
             */
            Update withUserAuthenticationType(String userAuthenticationType);
        }

        /**
         * The stage of the enrollmentaccountbillingaccountbillingroleassignment update allowing to specify UserEmailAddress.
         */
        interface WithUserEmailAddress {
            /**
             * Specifies userEmailAddress.
             * @param userEmailAddress The email address of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement
             * @return the next update stage
             */
            Update withUserEmailAddress(String userEmailAddress);
        }

    }
}
