/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.billing.v2019_10_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.billing.v2019_10_01_preview.BillingPermissions;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.billing.v2019_10_01_preview.BillingPermissionsListResult;

class BillingPermissionsImpl extends WrapperImpl<BillingPermissionsInner> implements BillingPermissions {
    private final BillingManager manager;

    BillingPermissionsImpl(BillingManager manager) {
        super(manager.inner().billingPermissions());
        this.manager = manager;
    }

    public BillingManager manager() {
        return this.manager;
    }

    @Override
    public Observable<BillingPermissionsListResult> listByCustomerAsync(String billingAccountName, String customerName) {
        BillingPermissionsInner client = this.inner();
        return client.listByCustomerAsync(billingAccountName, customerName)
        .map(new Func1<BillingPermissionsListResultInner, BillingPermissionsListResult>() {
            @Override
            public BillingPermissionsListResult call(BillingPermissionsListResultInner inner) {
                return new BillingPermissionsListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingPermissionsListResult> listByBillingAccountAsync(String billingAccountName) {
        BillingPermissionsInner client = this.inner();
        return client.listByBillingAccountAsync(billingAccountName)
        .map(new Func1<BillingPermissionsListResultInner, BillingPermissionsListResult>() {
            @Override
            public BillingPermissionsListResult call(BillingPermissionsListResultInner inner) {
                return new BillingPermissionsListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingPermissionsListResult> listByInvoiceSectionsAsync(String billingAccountName, String billingProfileName, String invoiceSectionName) {
        BillingPermissionsInner client = this.inner();
        return client.listByInvoiceSectionsAsync(billingAccountName, billingProfileName, invoiceSectionName)
        .map(new Func1<BillingPermissionsListResultInner, BillingPermissionsListResult>() {
            @Override
            public BillingPermissionsListResult call(BillingPermissionsListResultInner inner) {
                return new BillingPermissionsListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingPermissionsListResult> listByBillingProfileAsync(String billingAccountName, String billingProfileName) {
        BillingPermissionsInner client = this.inner();
        return client.listByBillingProfileAsync(billingAccountName, billingProfileName)
        .map(new Func1<BillingPermissionsListResultInner, BillingPermissionsListResult>() {
            @Override
            public BillingPermissionsListResult call(BillingPermissionsListResultInner inner) {
                return new BillingPermissionsListResultImpl(inner, manager());
            }
        });
    }

}
