/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.devtestlabs.v2018_09_15.implementation;

import com.microsoft.azure.management.devtestlabs.v2018_09_15.Artifact;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import org.joda.time.DateTime;
import java.util.Map;

class ArtifactImpl extends IndexableRefreshableWrapperImpl<Artifact, ArtifactInner> implements Artifact {
    private final DevTestLabsManager manager;
    private String resourceGroupName;
    private String labName;
    private String artifactSourceName;
    private String name;

    ArtifactImpl(ArtifactInner inner,  DevTestLabsManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.labName = IdParsingUtils.getValueFromIdByName(inner.id(), "labs");
        this.artifactSourceName = IdParsingUtils.getValueFromIdByName(inner.id(), "artifactsources");
        this.name = IdParsingUtils.getValueFromIdByName(inner.id(), "artifacts");
    }

    @Override
    public DevTestLabsManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<ArtifactInner> getInnerAsync() {
        ArtifactsInner client = this.manager().inner().artifacts();
        return client.getAsync(this.resourceGroupName, this.labName, this.artifactSourceName, this.name);
    }



    @Override
    public DateTime createdDate() {
        return this.inner().createdDate();
    }

    @Override
    public String description() {
        return this.inner().description();
    }

    @Override
    public String filePath() {
        return this.inner().filePath();
    }

    @Override
    public String icon() {
        return this.inner().icon();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String location() {
        return this.inner().location();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Object parameters() {
        return this.inner().parameters();
    }

    @Override
    public String publisher() {
        return this.inner().publisher();
    }

    @Override
    public Map<String, String> tags() {
        return this.inner().getTags();
    }

    @Override
    public String targetOsType() {
        return this.inner().targetOsType();
    }

    @Override
    public String title() {
        return this.inner().title();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
