// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devtestlabs.DevTestLabsManager;
import com.azure.resourcemanager.devtestlabs.models.ArmTemplateInfo;
import com.azure.resourcemanager.devtestlabs.models.FileUploadOptions;
import com.azure.resourcemanager.devtestlabs.models.GenerateArmTemplateRequest;
import com.azure.resourcemanager.devtestlabs.models.ParameterInfo;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ArtifactsGenerateArmTemplateWithResponseMockTests {
    @Test
    public void testGenerateArmTemplateWithResponse() throws Exception {
        String responseStr = "{\"template\":\"datatxwaljglzo\",\"parameters\":\"dataqwaafrqulhm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevTestLabsManager manager = DevTestLabsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ArmTemplateInfo response = manager.artifacts()
            .generateArmTemplateWithResponse("cpwzv", "doksqdtiwlwxlbon", "qba", "qicqchygt",
                new GenerateArmTemplateRequest().withVirtualMachineName("byjanep")
                    .withParameters(
                        Arrays.asList(new ParameterInfo().withName("kxyqvgxiaodetv").withValue("kxdxuwsaifmcwn"),
                            new ParameterInfo().withName("bzlehgc").withValue("bcknjolgj")))
                    .withLocation("xpvelszerqzevxo")
                    .withFileUploadOptions(FileUploadOptions.UPLOAD_FILES_AND_GENERATE_SAS_TOKENS),
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
