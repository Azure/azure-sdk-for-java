// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devtestlabs.DevTestLabsManager;
import com.azure.resourcemanager.devtestlabs.models.EnableStatus;
import com.azure.resourcemanager.devtestlabs.models.Schedule;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SchedulesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"status\":\"Enabled\",\"taskType\":\"zzdzzqjmuezayov\",\"weeklyRecurrence\":{\"weekdays\":[\"lotokh\",\"vwta\"],\"time\":\"kcqwwxwjyofgwh\"},\"dailyRecurrence\":{\"time\":\"tlwljssmcts\"},\"hourlyRecurrence\":{\"minute\":1476698814},\"timeZoneId\":\"wolgisubxbt\",\"notificationSettings\":{\"status\":\"Enabled\",\"timeInMinutes\":2067090364,\"webhookUrl\":\"ij\",\"emailRecipient\":\"kw\",\"notificationLocale\":\"fksxqce\"},\"createdDate\":\"2021-10-21T17:51:03Z\",\"targetResourceId\":\"xgnmqvzvluyq\",\"provisioningState\":\"ios\",\"uniqueIdentifier\":\"cyvaifppuacvfy\"},\"location\":\"owpsfxt\",\"tags\":{\"hpvtyqftteh\":\"soy\",\"kfvvdshxcde\":\"pboujs\",\"xcgjtf\":\"suenyg\"},\"id\":\"nquktrfnslnlrxs\",\"name\":\"ylt\",\"type\":\"wntfmtbgwjdxwna\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevTestLabsManager manager = DevTestLabsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Schedule> response = manager.schedules()
            .list("sgzlrqhb", "nq", "gdxwbsfpyxx", "jlf", 1758860426, "cominxojjluxx",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("owpsfxt", response.iterator().next().location());
        Assertions.assertEquals("soy", response.iterator().next().tags().get("hpvtyqftteh"));
        Assertions.assertEquals(EnableStatus.ENABLED, response.iterator().next().status());
        Assertions.assertEquals("zzdzzqjmuezayov", response.iterator().next().taskType());
        Assertions.assertEquals("lotokh", response.iterator().next().weeklyRecurrence().weekdays().get(0));
        Assertions.assertEquals("kcqwwxwjyofgwh", response.iterator().next().weeklyRecurrence().time());
        Assertions.assertEquals("tlwljssmcts", response.iterator().next().dailyRecurrence().time());
        Assertions.assertEquals(1476698814, response.iterator().next().hourlyRecurrence().minute());
        Assertions.assertEquals("wolgisubxbt", response.iterator().next().timeZoneId());
        Assertions.assertEquals(EnableStatus.ENABLED, response.iterator().next().notificationSettings().status());
        Assertions.assertEquals(2067090364, response.iterator().next().notificationSettings().timeInMinutes());
        Assertions.assertEquals("ij", response.iterator().next().notificationSettings().webhookUrl());
        Assertions.assertEquals("kw", response.iterator().next().notificationSettings().emailRecipient());
        Assertions.assertEquals("fksxqce", response.iterator().next().notificationSettings().notificationLocale());
        Assertions.assertEquals("xgnmqvzvluyq", response.iterator().next().targetResourceId());
    }
}
