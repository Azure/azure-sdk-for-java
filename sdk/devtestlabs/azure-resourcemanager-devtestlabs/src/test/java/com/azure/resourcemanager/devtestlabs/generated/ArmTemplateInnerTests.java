// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devtestlabs.fluent.models.ArmTemplateInner;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ArmTemplateInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ArmTemplateInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"displayName\":\"rgvtqag\",\"description\":\"uynhijg\",\"publisher\":\"ebf\",\"icon\":\"arbu\",\"contents\":\"datacvpnazzmhjrunmpx\",\"createdDate\":\"2021-01-09T00:08:33Z\",\"parametersValueFilesInfo\":[{\"fileName\":\"bnlankxmyskpb\",\"parametersValueInfo\":\"datanbtkcxywnytnr\"},{\"fileName\":\"nlqidybyxczf\",\"parametersValueInfo\":\"datahaaxdbabphl\"},{\"fileName\":\"qlfktsths\",\"parametersValueInfo\":\"dataocmnyyazttbtwwrq\"},{\"fileName\":\"edckzywbiexzfey\",\"parametersValueInfo\":\"dataaxibxujw\"}],\"enabled\":true},\"location\":\"walm\",\"tags\":{\"zjancuxr\":\"oxaepd\"},\"id\":\"d\",\"name\":\"bavxbniwdjswzt\",\"type\":\"dbpgnxytxhp\"}")
                .toObject(ArmTemplateInner.class);
        Assertions.assertEquals("walm", model.location());
        Assertions.assertEquals("oxaepd", model.tags().get("zjancuxr"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ArmTemplateInner model = new ArmTemplateInner().withLocation("walm").withTags(mapOf("zjancuxr", "oxaepd"));
        model = BinaryData.fromObject(model).toObject(ArmTemplateInner.class);
        Assertions.assertEquals("walm", model.location());
        Assertions.assertEquals("oxaepd", model.tags().get("zjancuxr"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
