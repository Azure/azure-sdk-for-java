// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devtestlabs.models.FileUploadOptions;
import com.azure.resourcemanager.devtestlabs.models.GenerateArmTemplateRequest;
import com.azure.resourcemanager.devtestlabs.models.ParameterInfo;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GenerateArmTemplateRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GenerateArmTemplateRequest model =
            BinaryData
                .fromString(
                    "{\"virtualMachineName\":\"tdum\",\"parameters\":[{\"name\":\"xe\",\"value\":\"nzbtbhj\"}],\"location\":\"lkfg\",\"fileUploadOptions\":\"UploadFilesAndGenerateSasTokens\"}")
                .toObject(GenerateArmTemplateRequest.class);
        Assertions.assertEquals("tdum", model.virtualMachineName());
        Assertions.assertEquals("xe", model.parameters().get(0).name());
        Assertions.assertEquals("nzbtbhj", model.parameters().get(0).value());
        Assertions.assertEquals("lkfg", model.location());
        Assertions.assertEquals(FileUploadOptions.UPLOAD_FILES_AND_GENERATE_SAS_TOKENS, model.fileUploadOptions());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GenerateArmTemplateRequest model =
            new GenerateArmTemplateRequest()
                .withVirtualMachineName("tdum")
                .withParameters(Arrays.asList(new ParameterInfo().withName("xe").withValue("nzbtbhj")))
                .withLocation("lkfg")
                .withFileUploadOptions(FileUploadOptions.UPLOAD_FILES_AND_GENERATE_SAS_TOKENS);
        model = BinaryData.fromObject(model).toObject(GenerateArmTemplateRequest.class);
        Assertions.assertEquals("tdum", model.virtualMachineName());
        Assertions.assertEquals("xe", model.parameters().get(0).name());
        Assertions.assertEquals("nzbtbhj", model.parameters().get(0).value());
        Assertions.assertEquals("lkfg", model.location());
        Assertions.assertEquals(FileUploadOptions.UPLOAD_FILES_AND_GENERATE_SAS_TOKENS, model.fileUploadOptions());
    }
}
