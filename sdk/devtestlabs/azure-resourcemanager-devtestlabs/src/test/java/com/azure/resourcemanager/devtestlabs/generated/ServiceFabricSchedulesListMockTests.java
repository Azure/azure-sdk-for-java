// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devtestlabs.DevTestLabsManager;
import com.azure.resourcemanager.devtestlabs.models.EnableStatus;
import com.azure.resourcemanager.devtestlabs.models.Schedule;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ServiceFabricSchedulesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"status\":\"Enabled\",\"taskType\":\"c\",\"weeklyRecurrence\":{\"weekdays\":[\"pzdqw\",\"zvcmcokxi\",\"ekuvfrjwuca\",\"nzvajbvbnkrdem\"],\"time\":\"dack\"},\"dailyRecurrence\":{\"time\":\"gzwdydamis\"},\"hourlyRecurrence\":{\"minute\":1462696274},\"timeZoneId\":\"ivykp\",\"notificationSettings\":{\"status\":\"Enabled\",\"timeInMinutes\":2052165487,\"webhookUrl\":\"j\",\"emailRecipient\":\"jiunrlshxuknsykd\",\"notificationLocale\":\"iboancdrcoanvx\"},\"createdDate\":\"2021-04-18T21:45:37Z\",\"targetResourceId\":\"onckbnlblfxlup\",\"provisioningState\":\"aqziz\",\"uniqueIdentifier\":\"pzweghlwwbo\"},\"location\":\"vgfklqiyndveqe\",\"tags\":{\"ns\":\"fvdstrkzxsgt\"},\"id\":\"lr\",\"name\":\"smovpi\",\"type\":\"y\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevTestLabsManager manager = DevTestLabsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Schedule> response = manager.serviceFabricSchedules()
            .list("jzmhkdclacroczfm", "ner", "eluxzshxzez", "zuzudlevzskejc", "wfs", "qkstyecupyui", 30369579, "ard",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vgfklqiyndveqe", response.iterator().next().location());
        Assertions.assertEquals("fvdstrkzxsgt", response.iterator().next().tags().get("ns"));
        Assertions.assertEquals(EnableStatus.ENABLED, response.iterator().next().status());
        Assertions.assertEquals("c", response.iterator().next().taskType());
        Assertions.assertEquals("pzdqw", response.iterator().next().weeklyRecurrence().weekdays().get(0));
        Assertions.assertEquals("dack", response.iterator().next().weeklyRecurrence().time());
        Assertions.assertEquals("gzwdydamis", response.iterator().next().dailyRecurrence().time());
        Assertions.assertEquals(1462696274, response.iterator().next().hourlyRecurrence().minute());
        Assertions.assertEquals("ivykp", response.iterator().next().timeZoneId());
        Assertions.assertEquals(EnableStatus.ENABLED, response.iterator().next().notificationSettings().status());
        Assertions.assertEquals(2052165487, response.iterator().next().notificationSettings().timeInMinutes());
        Assertions.assertEquals("j", response.iterator().next().notificationSettings().webhookUrl());
        Assertions.assertEquals("jiunrlshxuknsykd", response.iterator().next().notificationSettings().emailRecipient());
        Assertions.assertEquals("iboancdrcoanvx",
            response.iterator().next().notificationSettings().notificationLocale());
        Assertions.assertEquals("onckbnlblfxlup", response.iterator().next().targetResourceId());
    }
}
