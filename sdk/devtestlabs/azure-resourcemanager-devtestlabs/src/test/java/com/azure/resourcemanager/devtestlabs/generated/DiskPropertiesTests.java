// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devtestlabs.fluent.models.DiskProperties;
import com.azure.resourcemanager.devtestlabs.models.StorageType;
import org.junit.jupiter.api.Assertions;

public final class DiskPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiskProperties model =
            BinaryData
                .fromString(
                    "{\"diskType\":\"Standard\",\"diskSizeGiB\":102339077,\"leasedByLabVmId\":\"zhokvbwnhh\",\"diskBlobName\":\"lgehg\",\"diskUri\":\"ipifhpfeoajvg\",\"storageAccountId\":\"txjcsheafidlt\",\"createdDate\":\"2021-07-18T03:03:02Z\",\"hostCaching\":\"esmkssjhoiftxfkf\",\"managedDiskId\":\"gpr\",\"provisioningState\":\"tillucbiqtg\",\"uniqueIdentifier\":\"ohmcwsld\"}")
                .toObject(DiskProperties.class);
        Assertions.assertEquals(StorageType.STANDARD, model.diskType());
        Assertions.assertEquals(102339077, model.diskSizeGiB());
        Assertions.assertEquals("zhokvbwnhh", model.leasedByLabVmId());
        Assertions.assertEquals("lgehg", model.diskBlobName());
        Assertions.assertEquals("ipifhpfeoajvg", model.diskUri());
        Assertions.assertEquals("txjcsheafidlt", model.storageAccountId());
        Assertions.assertEquals("esmkssjhoiftxfkf", model.hostCaching());
        Assertions.assertEquals("gpr", model.managedDiskId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiskProperties model =
            new DiskProperties()
                .withDiskType(StorageType.STANDARD)
                .withDiskSizeGiB(102339077)
                .withLeasedByLabVmId("zhokvbwnhh")
                .withDiskBlobName("lgehg")
                .withDiskUri("ipifhpfeoajvg")
                .withStorageAccountId("txjcsheafidlt")
                .withHostCaching("esmkssjhoiftxfkf")
                .withManagedDiskId("gpr");
        model = BinaryData.fromObject(model).toObject(DiskProperties.class);
        Assertions.assertEquals(StorageType.STANDARD, model.diskType());
        Assertions.assertEquals(102339077, model.diskSizeGiB());
        Assertions.assertEquals("zhokvbwnhh", model.leasedByLabVmId());
        Assertions.assertEquals("lgehg", model.diskBlobName());
        Assertions.assertEquals("ipifhpfeoajvg", model.diskUri());
        Assertions.assertEquals("txjcsheafidlt", model.storageAccountId());
        Assertions.assertEquals("esmkssjhoiftxfkf", model.hostCaching());
        Assertions.assertEquals("gpr", model.managedDiskId());
    }
}
