// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devtestlabs.DevTestLabsManager;
import com.azure.resourcemanager.devtestlabs.models.Secret;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SecretsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"value\":\"jnosdkv\",\"provisioningState\":\"fasgm\",\"uniqueIdentifier\":\"rnzpducdaak\"},\"location\":\"ujktzb\",\"tags\":{\"wkppnwyytfvp\":\"yfpqd\"},\"id\":\"tfjikffffgkuh\",\"name\":\"nwhvuldbkkejj\",\"type\":\"jigawgaz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevTestLabsManager manager = DevTestLabsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Secret response = manager.secrets()
            .getWithResponse("lvgecpwgoljtz", "nm", "sdobygoogxq", "pjxvazyjf", "csa", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ujktzb", response.location());
        Assertions.assertEquals("yfpqd", response.tags().get("wkppnwyytfvp"));
        Assertions.assertEquals("jnosdkv", response.value());
    }
}
