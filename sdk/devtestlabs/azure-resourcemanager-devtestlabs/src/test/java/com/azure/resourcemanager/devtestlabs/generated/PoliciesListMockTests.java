// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devtestlabs.DevTestLabsManager;
import com.azure.resourcemanager.devtestlabs.models.Policy;
import com.azure.resourcemanager.devtestlabs.models.PolicyEvaluatorType;
import com.azure.resourcemanager.devtestlabs.models.PolicyFactName;
import com.azure.resourcemanager.devtestlabs.models.PolicyStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PoliciesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"vlzw\",\"status\":\"Disabled\",\"factName\":\"UserOwnedLabVmCountInSubnet\",\"factData\":\"lkzazmgok\",\"threshold\":\"gjqafkmkrokzr\",\"evaluatorType\":\"MaxValuePolicy\",\"createdDate\":\"2020-12-24T11:56:22Z\",\"provisioningState\":\"pqrtvaoznqni\",\"uniqueIdentifier\":\"ezeagmceituuge\"},\"location\":\"hfpjstlzmbls\",\"tags\":{\"yrle\":\"eolctaebf\",\"gdxzvsgeafgfoseh\":\"jcustbvtq\",\"aaeskyfjlpze\":\"lzsxezppkk\"},\"id\":\"toyrplixlajml\",\"name\":\"pq\",\"type\":\"evhamfowg\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevTestLabsManager manager = DevTestLabsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Policy> response = manager.policies()
            .list("jctibpvbkae", "xsmzygdf", "akw", "eivmak", "hysowljuxlkbect", 1481062094, "fjmskdchmaiu",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hfpjstlzmbls", response.iterator().next().location());
        Assertions.assertEquals("eolctaebf", response.iterator().next().tags().get("yrle"));
        Assertions.assertEquals("vlzw", response.iterator().next().description());
        Assertions.assertEquals(PolicyStatus.DISABLED, response.iterator().next().status());
        Assertions.assertEquals(PolicyFactName.USER_OWNED_LAB_VM_COUNT_IN_SUBNET,
            response.iterator().next().factName());
        Assertions.assertEquals("lkzazmgok", response.iterator().next().factData());
        Assertions.assertEquals("gjqafkmkrokzr", response.iterator().next().threshold());
        Assertions.assertEquals(PolicyEvaluatorType.MAX_VALUE_POLICY, response.iterator().next().evaluatorType());
    }
}
