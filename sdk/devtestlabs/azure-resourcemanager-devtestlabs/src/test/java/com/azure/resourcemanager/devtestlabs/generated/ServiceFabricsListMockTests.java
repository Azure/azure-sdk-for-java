// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devtestlabs.DevTestLabsManager;
import com.azure.resourcemanager.devtestlabs.models.ServiceFabric;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ServiceFabricsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"externalServiceFabricId\":\"dxwhieproqksmfx\",\"environmentId\":\"vprstv\",\"applicableSchedule\":{\"properties\":{\"labVmsShutdown\":{\"properties\":{},\"location\":\"b\",\"tags\":{\"qxwetjtd\":\"dyotnplfacqoccq\",\"padkmdzgsszxvct\":\"hutfdoadtxopge\",\"clabv\":\"bbxuharlsirn\"},\"id\":\"yngsuxxcz\",\"name\":\"myqjog\",\"type\":\"dsaidjanormovdxx\"},\"labVmsStartup\":{\"properties\":{},\"location\":\"ntujmoilunwemhd\",\"tags\":{\"rhrhtsl\":\"jslkyozdsfzjue\",\"j\":\"jtv\",\"bpnjodf\":\"xvgjbfi\"},\"id\":\"bj\",\"name\":\"qwm\",\"type\":\"q\"}},\"location\":\"moxsa\",\"tags\":{\"ywnfyszzaczs\":\"ejgwe\"},\"id\":\"nqbdnddbboz\",\"name\":\"yvrmkjm\",\"type\":\"it\"},\"provisioningState\":\"hwudlxeei\",\"uniqueIdentifier\":\"pmnoejhqlf\"},\"location\":\"sibz\",\"tags\":{\"vmtywhlakxp\":\"fgxkydpmypgf\",\"m\":\"jpewpyjlfx\"},\"id\":\"qcrzgeuqxbpia\",\"name\":\"w\",\"type\":\"aujegqdtadra\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevTestLabsManager manager = DevTestLabsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ServiceFabric> response = manager.serviceFabrics()
            .list("oxudnmckap", "hknqiijge", "cdgmoqu", "qih", "kyow", 1032764094, "jouw",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("sibz", response.iterator().next().location());
        Assertions.assertEquals("fgxkydpmypgf", response.iterator().next().tags().get("vmtywhlakxp"));
        Assertions.assertEquals("dxwhieproqksmfx", response.iterator().next().externalServiceFabricId());
        Assertions.assertEquals("vprstv", response.iterator().next().environmentId());
    }
}
