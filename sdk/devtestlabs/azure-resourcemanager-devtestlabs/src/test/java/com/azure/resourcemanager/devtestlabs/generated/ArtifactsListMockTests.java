// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devtestlabs.DevTestLabsManager;
import com.azure.resourcemanager.devtestlabs.models.Artifact;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ArtifactsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"title\":\"ztdsbeza\",\"description\":\"f\",\"publisher\":\"zxuizhyhnepkpe\",\"filePath\":\"arxqiubx\",\"icon\":\"kecpxdazvdh\",\"targetOsType\":\"mmkoszudb\",\"parameters\":\"datas\",\"createdDate\":\"2021-02-20T06:08:25Z\"},\"location\":\"pcaqki\",\"tags\":{\"ezyquw\":\"btfmhklbnldpvcbh\"},\"id\":\"sqxutr\",\"name\":\"brruyuuatv\",\"type\":\"mbjwcolbmxlb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevTestLabsManager manager = DevTestLabsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Artifact> response = manager.artifacts()
            .list("grmtqjk", "evadrmmwiu", "wvcmj", "kxiidisczskoswo", "iqazugamxzkr", 1386246223, "oiisbamnppcce",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("pcaqki", response.iterator().next().location());
        Assertions.assertEquals("btfmhklbnldpvcbh", response.iterator().next().tags().get("ezyquw"));
    }
}
