// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.resourcemanager.devtestlabs.fluent.models.ScheduleInner;
import com.azure.resourcemanager.devtestlabs.models.DayDetails;
import com.azure.resourcemanager.devtestlabs.models.EnableStatus;
import com.azure.resourcemanager.devtestlabs.models.HourDetails;
import com.azure.resourcemanager.devtestlabs.models.NotificationSettings;
import com.azure.resourcemanager.devtestlabs.models.WeekDetails;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/** Samples for VirtualMachineSchedules CreateOrUpdate. */
public final class VirtualMachineSchedulesCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2018-09-15/examples/VirtualMachineSchedules_CreateOrUpdate.json
     */
    /**
     * Sample code: VirtualMachineSchedules_CreateOrUpdate.
     *
     * @param manager Entry point to DevTestLabsManager.
     */
    public static void virtualMachineSchedulesCreateOrUpdate(
        com.azure.resourcemanager.devtestlabs.DevTestLabsManager manager) {
        manager
            .virtualMachineSchedules()
            .createOrUpdateWithResponse(
                "resourceGroupName",
                "{labName}",
                "{vmName}",
                "LabVmsShutdown",
                new ScheduleInner()
                    .withLocation("{location}")
                    .withTags(mapOf("tagName1", "tagValue1"))
                    .withStatus(EnableStatus.ENABLED)
                    .withTaskType("LabVmsShutdownTask")
                    .withWeeklyRecurrence(
                        new WeekDetails().withWeekdays(Arrays.asList("Friday", "Saturday", "Sunday")).withTime("1700"))
                    .withDailyRecurrence(new DayDetails().withTime("1900"))
                    .withHourlyRecurrence(new HourDetails().withMinute(30))
                    .withTimeZoneId("Pacific Standard Time")
                    .withNotificationSettings(
                        new NotificationSettings()
                            .withStatus(EnableStatus.ENABLED)
                            .withTimeInMinutes(30)
                            .withWebhookUrl("{webhookUrl}")
                            .withEmailRecipient("{email}")
                            .withNotificationLocale("EN"))
                    .withTargetResourceId(
                        "/subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/{labName}/virtualMachines/{vmName}"),
                com.azure.core.util.Context.NONE);
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
