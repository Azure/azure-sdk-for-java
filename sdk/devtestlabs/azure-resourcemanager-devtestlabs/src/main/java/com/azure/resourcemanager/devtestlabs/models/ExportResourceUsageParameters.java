// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * The parameters of the export operation.
 */
@Fluent
public final class ExportResourceUsageParameters implements JsonSerializable<ExportResourceUsageParameters> {
    /*
     * The blob storage absolute sas uri with write permission to the container which the usage data needs to be
     * uploaded to.
     */
    private String blobStorageAbsoluteSasUri;

    /*
     * The start time of the usage. If not provided, usage will be reported since the beginning of data collection.
     */
    private OffsetDateTime usageStartDate;

    /**
     * Creates an instance of ExportResourceUsageParameters class.
     */
    public ExportResourceUsageParameters() {
    }

    /**
     * Get the blobStorageAbsoluteSasUri property: The blob storage absolute sas uri with write permission to the
     * container which the usage data needs to be uploaded to.
     * 
     * @return the blobStorageAbsoluteSasUri value.
     */
    public String blobStorageAbsoluteSasUri() {
        return this.blobStorageAbsoluteSasUri;
    }

    /**
     * Set the blobStorageAbsoluteSasUri property: The blob storage absolute sas uri with write permission to the
     * container which the usage data needs to be uploaded to.
     * 
     * @param blobStorageAbsoluteSasUri the blobStorageAbsoluteSasUri value to set.
     * @return the ExportResourceUsageParameters object itself.
     */
    public ExportResourceUsageParameters withBlobStorageAbsoluteSasUri(String blobStorageAbsoluteSasUri) {
        this.blobStorageAbsoluteSasUri = blobStorageAbsoluteSasUri;
        return this;
    }

    /**
     * Get the usageStartDate property: The start time of the usage. If not provided, usage will be reported since the
     * beginning of data collection.
     * 
     * @return the usageStartDate value.
     */
    public OffsetDateTime usageStartDate() {
        return this.usageStartDate;
    }

    /**
     * Set the usageStartDate property: The start time of the usage. If not provided, usage will be reported since the
     * beginning of data collection.
     * 
     * @param usageStartDate the usageStartDate value to set.
     * @return the ExportResourceUsageParameters object itself.
     */
    public ExportResourceUsageParameters withUsageStartDate(OffsetDateTime usageStartDate) {
        this.usageStartDate = usageStartDate;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("blobStorageAbsoluteSasUri", this.blobStorageAbsoluteSasUri);
        jsonWriter.writeStringField("usageStartDate",
            this.usageStartDate == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.usageStartDate));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExportResourceUsageParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExportResourceUsageParameters if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExportResourceUsageParameters.
     */
    public static ExportResourceUsageParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExportResourceUsageParameters deserializedExportResourceUsageParameters
                = new ExportResourceUsageParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("blobStorageAbsoluteSasUri".equals(fieldName)) {
                    deserializedExportResourceUsageParameters.blobStorageAbsoluteSasUri = reader.getString();
                } else if ("usageStartDate".equals(fieldName)) {
                    deserializedExportResourceUsageParameters.usageStartDate = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExportResourceUsageParameters;
        });
    }
}
