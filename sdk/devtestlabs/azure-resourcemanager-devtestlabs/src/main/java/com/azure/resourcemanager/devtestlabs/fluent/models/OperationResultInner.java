// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.devtestlabs.models.HttpStatusCode;
import com.azure.resourcemanager.devtestlabs.models.OperationError;
import java.io.IOException;

/**
 * An Operation Result.
 */
@Fluent
public final class OperationResultInner implements JsonSerializable<OperationResultInner> {
    /*
     * The operation status.
     */
    private String status;

    /*
     * The status code for the operation.
     */
    private HttpStatusCode statusCode;

    /*
     * Error details for the operation in case of a failure.
     */
    private OperationError error;

    /**
     * Creates an instance of OperationResultInner class.
     */
    public OperationResultInner() {
    }

    /**
     * Get the status property: The operation status.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: The operation status.
     * 
     * @param status the status value to set.
     * @return the OperationResultInner object itself.
     */
    public OperationResultInner withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the statusCode property: The status code for the operation.
     * 
     * @return the statusCode value.
     */
    public HttpStatusCode statusCode() {
        return this.statusCode;
    }

    /**
     * Set the statusCode property: The status code for the operation.
     * 
     * @param statusCode the statusCode value to set.
     * @return the OperationResultInner object itself.
     */
    public OperationResultInner withStatusCode(HttpStatusCode statusCode) {
        this.statusCode = statusCode;
        return this;
    }

    /**
     * Get the error property: Error details for the operation in case of a failure.
     * 
     * @return the error value.
     */
    public OperationError error() {
        return this.error;
    }

    /**
     * Set the error property: Error details for the operation in case of a failure.
     * 
     * @param error the error value to set.
     * @return the OperationResultInner object itself.
     */
    public OperationResultInner withError(OperationError error) {
        this.error = error;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (error() != null) {
            error().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("status", this.status);
        jsonWriter.writeStringField("statusCode", this.statusCode == null ? null : this.statusCode.toString());
        jsonWriter.writeJsonField("error", this.error);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OperationResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OperationResultInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OperationResultInner.
     */
    public static OperationResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OperationResultInner deserializedOperationResultInner = new OperationResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedOperationResultInner.status = reader.getString();
                } else if ("statusCode".equals(fieldName)) {
                    deserializedOperationResultInner.statusCode = HttpStatusCode.fromString(reader.getString());
                } else if ("error".equals(fieldName)) {
                    deserializedOperationResultInner.error = OperationError.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOperationResultInner;
        });
    }
}
