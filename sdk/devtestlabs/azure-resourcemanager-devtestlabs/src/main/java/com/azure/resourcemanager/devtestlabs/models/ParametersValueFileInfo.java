// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** A file containing a set of parameter values for an ARM template. */
@Fluent
public final class ParametersValueFileInfo {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ParametersValueFileInfo.class);

    /*
     * File name.
     */
    @JsonProperty(value = "fileName")
    private String fileName;

    /*
     * Contents of the file.
     */
    @JsonProperty(value = "parametersValueInfo")
    private Object parametersValueInfo;

    /**
     * Get the fileName property: File name.
     *
     * @return the fileName value.
     */
    public String fileName() {
        return this.fileName;
    }

    /**
     * Set the fileName property: File name.
     *
     * @param fileName the fileName value to set.
     * @return the ParametersValueFileInfo object itself.
     */
    public ParametersValueFileInfo withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }

    /**
     * Get the parametersValueInfo property: Contents of the file.
     *
     * @return the parametersValueInfo value.
     */
    public Object parametersValueInfo() {
        return this.parametersValueInfo;
    }

    /**
     * Set the parametersValueInfo property: Contents of the file.
     *
     * @param parametersValueInfo the parametersValueInfo value to set.
     * @return the ParametersValueFileInfo object itself.
     */
    public ParametersValueFileInfo withParametersValueInfo(Object parametersValueInfo) {
        this.parametersValueInfo = parametersValueInfo;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
