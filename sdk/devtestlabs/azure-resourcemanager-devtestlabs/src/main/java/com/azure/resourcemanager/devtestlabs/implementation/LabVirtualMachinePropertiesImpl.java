// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.implementation;

import com.azure.resourcemanager.devtestlabs.fluent.models.ApplicableScheduleInner;
import com.azure.resourcemanager.devtestlabs.fluent.models.LabVirtualMachinePropertiesInner;
import com.azure.resourcemanager.devtestlabs.models.ApplicableSchedule;
import com.azure.resourcemanager.devtestlabs.models.ArtifactDeploymentStatusProperties;
import com.azure.resourcemanager.devtestlabs.models.ArtifactInstallProperties;
import com.azure.resourcemanager.devtestlabs.models.ComputeVmProperties;
import com.azure.resourcemanager.devtestlabs.models.DataDiskProperties;
import com.azure.resourcemanager.devtestlabs.models.GalleryImageReference;
import com.azure.resourcemanager.devtestlabs.models.LabVirtualMachineProperties;
import com.azure.resourcemanager.devtestlabs.models.NetworkInterfaceProperties;
import com.azure.resourcemanager.devtestlabs.models.ScheduleCreationParameter;
import com.azure.resourcemanager.devtestlabs.models.VirtualMachineCreationSource;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class LabVirtualMachinePropertiesImpl implements LabVirtualMachineProperties {
    private LabVirtualMachinePropertiesInner innerObject;

    private final com.azure.resourcemanager.devtestlabs.DevTestLabsManager serviceManager;

    LabVirtualMachinePropertiesImpl(
        LabVirtualMachinePropertiesInner innerObject,
        com.azure.resourcemanager.devtestlabs.DevTestLabsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String notes() {
        return this.innerModel().notes();
    }

    public String ownerObjectId() {
        return this.innerModel().ownerObjectId();
    }

    public String ownerUserPrincipalName() {
        return this.innerModel().ownerUserPrincipalName();
    }

    public String createdByUserId() {
        return this.innerModel().createdByUserId();
    }

    public String createdByUser() {
        return this.innerModel().createdByUser();
    }

    public OffsetDateTime createdDate() {
        return this.innerModel().createdDate();
    }

    public String computeId() {
        return this.innerModel().computeId();
    }

    public String customImageId() {
        return this.innerModel().customImageId();
    }

    public String osType() {
        return this.innerModel().osType();
    }

    public String size() {
        return this.innerModel().size();
    }

    public String username() {
        return this.innerModel().username();
    }

    public String password() {
        return this.innerModel().password();
    }

    public String sshKey() {
        return this.innerModel().sshKey();
    }

    public Boolean isAuthenticationWithSshKey() {
        return this.innerModel().isAuthenticationWithSshKey();
    }

    public String fqdn() {
        return this.innerModel().fqdn();
    }

    public String labSubnetName() {
        return this.innerModel().labSubnetName();
    }

    public String labVirtualNetworkId() {
        return this.innerModel().labVirtualNetworkId();
    }

    public Boolean disallowPublicIpAddress() {
        return this.innerModel().disallowPublicIpAddress();
    }

    public List<ArtifactInstallProperties> artifacts() {
        List<ArtifactInstallProperties> inner = this.innerModel().artifacts();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ArtifactDeploymentStatusProperties artifactDeploymentStatus() {
        return this.innerModel().artifactDeploymentStatus();
    }

    public GalleryImageReference galleryImageReference() {
        return this.innerModel().galleryImageReference();
    }

    public String planId() {
        return this.innerModel().planId();
    }

    public ComputeVmProperties computeVm() {
        return this.innerModel().computeVm();
    }

    public NetworkInterfaceProperties networkInterface() {
        return this.innerModel().networkInterface();
    }

    public ApplicableSchedule applicableSchedule() {
        ApplicableScheduleInner inner = this.innerModel().applicableSchedule();
        if (inner != null) {
            return new ApplicableScheduleImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public OffsetDateTime expirationDate() {
        return this.innerModel().expirationDate();
    }

    public Boolean allowClaim() {
        return this.innerModel().allowClaim();
    }

    public String storageType() {
        return this.innerModel().storageType();
    }

    public VirtualMachineCreationSource virtualMachineCreationSource() {
        return this.innerModel().virtualMachineCreationSource();
    }

    public String environmentId() {
        return this.innerModel().environmentId();
    }

    public List<DataDiskProperties> dataDiskParameters() {
        List<DataDiskProperties> inner = this.innerModel().dataDiskParameters();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<ScheduleCreationParameter> scheduleParameters() {
        List<ScheduleCreationParameter> inner = this.innerModel().scheduleParameters();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String lastKnownPowerState() {
        return this.innerModel().lastKnownPowerState();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String uniqueIdentifier() {
        return this.innerModel().uniqueIdentifier();
    }

    public LabVirtualMachinePropertiesInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.devtestlabs.DevTestLabsManager manager() {
        return this.serviceManager;
    }
}
