// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties of an artifact deployment.
 */
@Fluent
public final class ArtifactDeploymentStatusProperties implements JsonSerializable<ArtifactDeploymentStatusProperties> {
    /*
     * The deployment status of the artifact.
     */
    private String deploymentStatus;

    /*
     * The total count of the artifacts that were successfully applied.
     */
    private Integer artifactsApplied;

    /*
     * The total count of the artifacts that were tentatively applied.
     */
    private Integer totalArtifacts;

    /**
     * Creates an instance of ArtifactDeploymentStatusProperties class.
     */
    public ArtifactDeploymentStatusProperties() {
    }

    /**
     * Get the deploymentStatus property: The deployment status of the artifact.
     * 
     * @return the deploymentStatus value.
     */
    public String deploymentStatus() {
        return this.deploymentStatus;
    }

    /**
     * Set the deploymentStatus property: The deployment status of the artifact.
     * 
     * @param deploymentStatus the deploymentStatus value to set.
     * @return the ArtifactDeploymentStatusProperties object itself.
     */
    public ArtifactDeploymentStatusProperties withDeploymentStatus(String deploymentStatus) {
        this.deploymentStatus = deploymentStatus;
        return this;
    }

    /**
     * Get the artifactsApplied property: The total count of the artifacts that were successfully applied.
     * 
     * @return the artifactsApplied value.
     */
    public Integer artifactsApplied() {
        return this.artifactsApplied;
    }

    /**
     * Set the artifactsApplied property: The total count of the artifacts that were successfully applied.
     * 
     * @param artifactsApplied the artifactsApplied value to set.
     * @return the ArtifactDeploymentStatusProperties object itself.
     */
    public ArtifactDeploymentStatusProperties withArtifactsApplied(Integer artifactsApplied) {
        this.artifactsApplied = artifactsApplied;
        return this;
    }

    /**
     * Get the totalArtifacts property: The total count of the artifacts that were tentatively applied.
     * 
     * @return the totalArtifacts value.
     */
    public Integer totalArtifacts() {
        return this.totalArtifacts;
    }

    /**
     * Set the totalArtifacts property: The total count of the artifacts that were tentatively applied.
     * 
     * @param totalArtifacts the totalArtifacts value to set.
     * @return the ArtifactDeploymentStatusProperties object itself.
     */
    public ArtifactDeploymentStatusProperties withTotalArtifacts(Integer totalArtifacts) {
        this.totalArtifacts = totalArtifacts;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("deploymentStatus", this.deploymentStatus);
        jsonWriter.writeNumberField("artifactsApplied", this.artifactsApplied);
        jsonWriter.writeNumberField("totalArtifacts", this.totalArtifacts);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ArtifactDeploymentStatusProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ArtifactDeploymentStatusProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ArtifactDeploymentStatusProperties.
     */
    public static ArtifactDeploymentStatusProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ArtifactDeploymentStatusProperties deserializedArtifactDeploymentStatusProperties
                = new ArtifactDeploymentStatusProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("deploymentStatus".equals(fieldName)) {
                    deserializedArtifactDeploymentStatusProperties.deploymentStatus = reader.getString();
                } else if ("artifactsApplied".equals(fieldName)) {
                    deserializedArtifactDeploymentStatusProperties.artifactsApplied
                        = reader.getNullable(JsonReader::getInt);
                } else if ("totalArtifacts".equals(fieldName)) {
                    deserializedArtifactDeploymentStatusProperties.totalArtifacts
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedArtifactDeploymentStatusProperties;
        });
    }
}
