// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties for retargeting a virtual machine schedule.
 */
@Fluent
public final class RetargetScheduleProperties implements JsonSerializable<RetargetScheduleProperties> {
    /*
     * The resource Id of the virtual machine on which the schedule operates
     */
    private String currentResourceId;

    /*
     * The resource Id of the virtual machine that the schedule should be retargeted to
     */
    private String targetResourceId;

    /**
     * Creates an instance of RetargetScheduleProperties class.
     */
    public RetargetScheduleProperties() {
    }

    /**
     * Get the currentResourceId property: The resource Id of the virtual machine on which the schedule operates.
     * 
     * @return the currentResourceId value.
     */
    public String currentResourceId() {
        return this.currentResourceId;
    }

    /**
     * Set the currentResourceId property: The resource Id of the virtual machine on which the schedule operates.
     * 
     * @param currentResourceId the currentResourceId value to set.
     * @return the RetargetScheduleProperties object itself.
     */
    public RetargetScheduleProperties withCurrentResourceId(String currentResourceId) {
        this.currentResourceId = currentResourceId;
        return this;
    }

    /**
     * Get the targetResourceId property: The resource Id of the virtual machine that the schedule should be retargeted
     * to.
     * 
     * @return the targetResourceId value.
     */
    public String targetResourceId() {
        return this.targetResourceId;
    }

    /**
     * Set the targetResourceId property: The resource Id of the virtual machine that the schedule should be retargeted
     * to.
     * 
     * @param targetResourceId the targetResourceId value to set.
     * @return the RetargetScheduleProperties object itself.
     */
    public RetargetScheduleProperties withTargetResourceId(String targetResourceId) {
        this.targetResourceId = targetResourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("currentResourceId", this.currentResourceId);
        jsonWriter.writeStringField("targetResourceId", this.targetResourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RetargetScheduleProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RetargetScheduleProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RetargetScheduleProperties.
     */
    public static RetargetScheduleProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RetargetScheduleProperties deserializedRetargetScheduleProperties = new RetargetScheduleProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("currentResourceId".equals(fieldName)) {
                    deserializedRetargetScheduleProperties.currentResourceId = reader.getString();
                } else if ("targetResourceId".equals(fieldName)) {
                    deserializedRetargetScheduleProperties.targetResourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRetargetScheduleProperties;
        });
    }
}
