// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devtestlabs.fluent.models.FormulaInner;
import java.time.OffsetDateTime;
import java.util.Map;

/** An immutable client-side representation of Formula. */
public interface Formula {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the description property: The description of the formula.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the author property: The author of the formula.
     *
     * @return the author value.
     */
    String author();

    /**
     * Gets the osType property: The OS type of the formula.
     *
     * @return the osType value.
     */
    String osType();

    /**
     * Gets the creationDate property: The creation date of the formula.
     *
     * @return the creationDate value.
     */
    OffsetDateTime creationDate();

    /**
     * Gets the formulaContent property: The content of the formula.
     *
     * @return the formulaContent value.
     */
    LabVirtualMachineCreationParameter formulaContent();

    /**
     * Gets the vm property: Information about a VM from which a formula is to be created.
     *
     * @return the vm value.
     */
    FormulaPropertiesFromVm vm();

    /**
     * Gets the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    String uniqueIdentifier();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.devtestlabs.fluent.models.FormulaInner object.
     *
     * @return the inner object.
     */
    FormulaInner innerModel();

    /** The entirety of the Formula definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithCreate {
    }
    /** The Formula definition stages. */
    interface DefinitionStages {
        /** The first stage of the Formula definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the Formula definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the Formula definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, labName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param labName The name of the lab.
             * @return the next definition stage.
             */
            WithCreate withExistingLab(String resourceGroupName, String labName);
        }
        /**
         * The stage of the Formula definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithDescription,
                DefinitionStages.WithOsType,
                DefinitionStages.WithFormulaContent,
                DefinitionStages.WithVm {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Formula create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Formula create(Context context);
        }
        /** The stage of the Formula definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the Formula definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: The description of the formula..
             *
             * @param description The description of the formula.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the Formula definition allowing to specify osType. */
        interface WithOsType {
            /**
             * Specifies the osType property: The OS type of the formula..
             *
             * @param osType The OS type of the formula.
             * @return the next definition stage.
             */
            WithCreate withOsType(String osType);
        }
        /** The stage of the Formula definition allowing to specify formulaContent. */
        interface WithFormulaContent {
            /**
             * Specifies the formulaContent property: The content of the formula..
             *
             * @param formulaContent The content of the formula.
             * @return the next definition stage.
             */
            WithCreate withFormulaContent(LabVirtualMachineCreationParameter formulaContent);
        }
        /** The stage of the Formula definition allowing to specify vm. */
        interface WithVm {
            /**
             * Specifies the vm property: Information about a VM from which a formula is to be created..
             *
             * @param vm Information about a VM from which a formula is to be created.
             * @return the next definition stage.
             */
            WithCreate withVm(FormulaPropertiesFromVm vm);
        }
    }
    /**
     * Begins update for the Formula resource.
     *
     * @return the stage of resource update.
     */
    Formula.Update update();

    /** The template for Formula update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Formula apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Formula apply(Context context);
    }
    /** The Formula update stages. */
    interface UpdateStages {
        /** The stage of the Formula update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: The tags of the resource..
             *
             * @param tags The tags of the resource.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Formula refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Formula refresh(Context context);
}
