// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Response body for generating an upload URI.
 */
@Fluent
public final class GenerateUploadUriResponseInner implements JsonSerializable<GenerateUploadUriResponseInner> {
    /*
     * The upload URI for the VHD.
     */
    private String uploadUri;

    /**
     * Creates an instance of GenerateUploadUriResponseInner class.
     */
    public GenerateUploadUriResponseInner() {
    }

    /**
     * Get the uploadUri property: The upload URI for the VHD.
     * 
     * @return the uploadUri value.
     */
    public String uploadUri() {
        return this.uploadUri;
    }

    /**
     * Set the uploadUri property: The upload URI for the VHD.
     * 
     * @param uploadUri the uploadUri value to set.
     * @return the GenerateUploadUriResponseInner object itself.
     */
    public GenerateUploadUriResponseInner withUploadUri(String uploadUri) {
        this.uploadUri = uploadUri;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("uploadUri", this.uploadUri);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GenerateUploadUriResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GenerateUploadUriResponseInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GenerateUploadUriResponseInner.
     */
    public static GenerateUploadUriResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GenerateUploadUriResponseInner deserializedGenerateUploadUriResponseInner
                = new GenerateUploadUriResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("uploadUri".equals(fieldName)) {
                    deserializedGenerateUploadUriResponseInner.uploadUri = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGenerateUploadUriResponseInner;
        });
    }
}
