// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties of a schedules applicable to a virtual machine.
 */
@Fluent
public final class ApplicableSchedulePropertiesInner implements JsonSerializable<ApplicableSchedulePropertiesInner> {
    /*
     * The auto-shutdown schedule, if one has been set at the lab or lab resource level.
     */
    private ScheduleInner labVmsShutdown;

    /*
     * The auto-startup schedule, if one has been set at the lab or lab resource level.
     */
    private ScheduleInner labVmsStartup;

    /**
     * Creates an instance of ApplicableSchedulePropertiesInner class.
     */
    public ApplicableSchedulePropertiesInner() {
    }

    /**
     * Get the labVmsShutdown property: The auto-shutdown schedule, if one has been set at the lab or lab resource
     * level.
     * 
     * @return the labVmsShutdown value.
     */
    public ScheduleInner labVmsShutdown() {
        return this.labVmsShutdown;
    }

    /**
     * Set the labVmsShutdown property: The auto-shutdown schedule, if one has been set at the lab or lab resource
     * level.
     * 
     * @param labVmsShutdown the labVmsShutdown value to set.
     * @return the ApplicableSchedulePropertiesInner object itself.
     */
    public ApplicableSchedulePropertiesInner withLabVmsShutdown(ScheduleInner labVmsShutdown) {
        this.labVmsShutdown = labVmsShutdown;
        return this;
    }

    /**
     * Get the labVmsStartup property: The auto-startup schedule, if one has been set at the lab or lab resource level.
     * 
     * @return the labVmsStartup value.
     */
    public ScheduleInner labVmsStartup() {
        return this.labVmsStartup;
    }

    /**
     * Set the labVmsStartup property: The auto-startup schedule, if one has been set at the lab or lab resource level.
     * 
     * @param labVmsStartup the labVmsStartup value to set.
     * @return the ApplicableSchedulePropertiesInner object itself.
     */
    public ApplicableSchedulePropertiesInner withLabVmsStartup(ScheduleInner labVmsStartup) {
        this.labVmsStartup = labVmsStartup;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (labVmsShutdown() != null) {
            labVmsShutdown().validate();
        }
        if (labVmsStartup() != null) {
            labVmsStartup().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("labVmsShutdown", this.labVmsShutdown);
        jsonWriter.writeJsonField("labVmsStartup", this.labVmsStartup);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApplicableSchedulePropertiesInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApplicableSchedulePropertiesInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApplicableSchedulePropertiesInner.
     */
    public static ApplicableSchedulePropertiesInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApplicableSchedulePropertiesInner deserializedApplicableSchedulePropertiesInner
                = new ApplicableSchedulePropertiesInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("labVmsShutdown".equals(fieldName)) {
                    deserializedApplicableSchedulePropertiesInner.labVmsShutdown = ScheduleInner.fromJson(reader);
                } else if ("labVmsStartup".equals(fieldName)) {
                    deserializedApplicableSchedulePropertiesInner.labVmsStartup = ScheduleInner.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApplicableSchedulePropertiesInner;
        });
    }
}
