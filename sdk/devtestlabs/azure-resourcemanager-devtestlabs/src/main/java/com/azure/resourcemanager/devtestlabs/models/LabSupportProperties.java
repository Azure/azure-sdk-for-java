// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Properties of a lab's support banner. */
@Fluent
public final class LabSupportProperties {
    /*
     * Is the lab support banner active/enabled at this time?
     */
    @JsonProperty(value = "enabled")
    private EnableStatus enabled;

    /*
     * The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
     */
    @JsonProperty(value = "markdown")
    private String markdown;

    /** Creates an instance of LabSupportProperties class. */
    public LabSupportProperties() {
    }

    /**
     * Get the enabled property: Is the lab support banner active/enabled at this time?.
     *
     * @return the enabled value.
     */
    public EnableStatus enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Is the lab support banner active/enabled at this time?.
     *
     * @param enabled the enabled value to set.
     * @return the LabSupportProperties object itself.
     */
    public LabSupportProperties withEnabled(EnableStatus enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the markdown property: The markdown text (if any) that this lab displays in the UI. If left empty/null,
     * nothing will be shown.
     *
     * @return the markdown value.
     */
    public String markdown() {
        return this.markdown;
    }

    /**
     * Set the markdown property: The markdown text (if any) that this lab displays in the UI. If left empty/null,
     * nothing will be shown.
     *
     * @param markdown the markdown value to set.
     * @return the LabSupportProperties object itself.
     */
    public LabSupportProperties withMarkdown(String markdown) {
        this.markdown = markdown;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
