// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.devtestlabs.models.EnvironmentDeploymentProperties;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** An environment, which is essentially an ARM template deployment. */
@JsonFlatten
@Fluent
public class DtlEnvironmentInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DtlEnvironmentInner.class);

    /*
     * The deployment properties of the environment.
     */
    @JsonProperty(value = "properties.deploymentProperties")
    private EnvironmentDeploymentProperties deploymentProperties;

    /*
     * The display name of the Azure Resource Manager template that produced
     * the environment.
     */
    @JsonProperty(value = "properties.armTemplateDisplayName")
    private String armTemplateDisplayName;

    /*
     * The identifier of the resource group containing the environment's
     * resources.
     */
    @JsonProperty(value = "properties.resourceGroupId", access = JsonProperty.Access.WRITE_ONLY)
    private String resourceGroupId;

    /*
     * The creator of the environment.
     */
    @JsonProperty(value = "properties.createdByUser", access = JsonProperty.Access.WRITE_ONLY)
    private String createdByUser;

    /*
     * The provisioning status of the resource.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * The unique immutable identifier of a resource (Guid).
     */
    @JsonProperty(value = "properties.uniqueIdentifier", access = JsonProperty.Access.WRITE_ONLY)
    private String uniqueIdentifier;

    /**
     * Get the deploymentProperties property: The deployment properties of the environment.
     *
     * @return the deploymentProperties value.
     */
    public EnvironmentDeploymentProperties deploymentProperties() {
        return this.deploymentProperties;
    }

    /**
     * Set the deploymentProperties property: The deployment properties of the environment.
     *
     * @param deploymentProperties the deploymentProperties value to set.
     * @return the DtlEnvironmentInner object itself.
     */
    public DtlEnvironmentInner withDeploymentProperties(EnvironmentDeploymentProperties deploymentProperties) {
        this.deploymentProperties = deploymentProperties;
        return this;
    }

    /**
     * Get the armTemplateDisplayName property: The display name of the Azure Resource Manager template that produced
     * the environment.
     *
     * @return the armTemplateDisplayName value.
     */
    public String armTemplateDisplayName() {
        return this.armTemplateDisplayName;
    }

    /**
     * Set the armTemplateDisplayName property: The display name of the Azure Resource Manager template that produced
     * the environment.
     *
     * @param armTemplateDisplayName the armTemplateDisplayName value to set.
     * @return the DtlEnvironmentInner object itself.
     */
    public DtlEnvironmentInner withArmTemplateDisplayName(String armTemplateDisplayName) {
        this.armTemplateDisplayName = armTemplateDisplayName;
        return this;
    }

    /**
     * Get the resourceGroupId property: The identifier of the resource group containing the environment's resources.
     *
     * @return the resourceGroupId value.
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }

    /**
     * Get the createdByUser property: The creator of the environment.
     *
     * @return the createdByUser value.
     */
    public String createdByUser() {
        return this.createdByUser;
    }

    /**
     * Get the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    /** {@inheritDoc} */
    @Override
    public DtlEnvironmentInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public DtlEnvironmentInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (deploymentProperties() != null) {
            deploymentProperties().validate();
        }
    }
}
