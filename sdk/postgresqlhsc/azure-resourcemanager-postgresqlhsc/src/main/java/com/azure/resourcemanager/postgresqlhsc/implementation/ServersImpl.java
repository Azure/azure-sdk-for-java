// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlhsc.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager;
import com.azure.resourcemanager.postgresqlhsc.fluent.ServersClient;
import com.azure.resourcemanager.postgresqlhsc.fluent.models.ServerGroupServerInner;
import com.azure.resourcemanager.postgresqlhsc.models.ServerGroupServer;
import com.azure.resourcemanager.postgresqlhsc.models.Servers;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ServersImpl implements Servers {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ServersImpl.class);

    private final ServersClient innerClient;

    private final PostgresqlhscManager serviceManager;

    public ServersImpl(ServersClient innerClient, PostgresqlhscManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<ServerGroupServer> listByServerGroup(String resourceGroupName, String serverGroupName) {
        PagedIterable<ServerGroupServerInner> inner =
            this.serviceClient().listByServerGroup(resourceGroupName, serverGroupName);
        return inner.mapPage(inner1 -> new ServerGroupServerImpl(inner1, this.manager()));
    }

    public PagedIterable<ServerGroupServer> listByServerGroup(
        String resourceGroupName, String serverGroupName, Context context) {
        PagedIterable<ServerGroupServerInner> inner =
            this.serviceClient().listByServerGroup(resourceGroupName, serverGroupName, context);
        return inner.mapPage(inner1 -> new ServerGroupServerImpl(inner1, this.manager()));
    }

    public ServerGroupServer get(String resourceGroupName, String serverGroupName, String serverName) {
        ServerGroupServerInner inner = this.serviceClient().get(resourceGroupName, serverGroupName, serverName);
        if (inner != null) {
            return new ServerGroupServerImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ServerGroupServer> getWithResponse(
        String resourceGroupName, String serverGroupName, String serverName, Context context) {
        Response<ServerGroupServerInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, serverGroupName, serverName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ServerGroupServerImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ServersClient serviceClient() {
        return this.innerClient;
    }

    private PostgresqlhscManager manager() {
        return this.serviceManager;
    }
}
