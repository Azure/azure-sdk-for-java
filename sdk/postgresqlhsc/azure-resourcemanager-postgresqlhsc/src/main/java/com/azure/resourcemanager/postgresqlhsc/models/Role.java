// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlhsc.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.postgresqlhsc.fluent.models.RoleInner;

/** An immutable client-side representation of Role. */
public interface Role {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the password property: The password of the server group role.
     *
     * @return the password value.
     */
    String password();

    /**
     * Gets the inner com.azure.resourcemanager.postgresqlhsc.fluent.models.RoleInner object.
     *
     * @return the inner object.
     */
    RoleInner innerModel();

    /** The entirety of the Role definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The Role definition stages. */
    interface DefinitionStages {
        /** The first stage of the Role definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the Role definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, serverGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param serverGroupName The name of the server group.
             * @return the next definition stage.
             */
            WithCreate withExistingServerGroupsv2(String resourceGroupName, String serverGroupName);
        }
        /**
         * The stage of the Role definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithPassword {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Role create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Role create(Context context);
        }
        /** The stage of the Role definition allowing to specify password. */
        interface WithPassword {
            /**
             * Specifies the password property: The password of the server group role..
             *
             * @param password The password of the server group role.
             * @return the next definition stage.
             */
            WithCreate withPassword(String password);
        }
    }
}
