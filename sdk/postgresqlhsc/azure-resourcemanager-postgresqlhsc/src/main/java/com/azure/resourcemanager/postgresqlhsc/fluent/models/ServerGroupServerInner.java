// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlhsc.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.postgresqlhsc.models.CitusVersion;
import com.azure.resourcemanager.postgresqlhsc.models.PostgreSqlVersion;
import com.azure.resourcemanager.postgresqlhsc.models.ServerEdition;
import com.azure.resourcemanager.postgresqlhsc.models.ServerHaState;
import com.azure.resourcemanager.postgresqlhsc.models.ServerRole;
import com.azure.resourcemanager.postgresqlhsc.models.ServerState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Represents a server in a server group. */
@Fluent
public final class ServerGroupServerInner extends ProxyResource {
    /*
     * The system metadata relating to this resource
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * The properties of a server in a server group.
     */
    @JsonProperty(value = "properties")
    private ServerGroupServerProperties innerProperties;

    /**
     * Get the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the innerProperties property: The properties of a server in a server group.
     *
     * @return the innerProperties value.
     */
    private ServerGroupServerProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the fullyQualifiedDomainName property: The fully qualified domain name of a server.
     *
     * @return the fullyQualifiedDomainName value.
     */
    public String fullyQualifiedDomainName() {
        return this.innerProperties() == null ? null : this.innerProperties().fullyQualifiedDomainName();
    }

    /**
     * Get the role property: The role of server in the server group.
     *
     * @return the role value.
     */
    public ServerRole role() {
        return this.innerProperties() == null ? null : this.innerProperties().role();
    }

    /**
     * Set the role property: The role of server in the server group.
     *
     * @param role the role value to set.
     * @return the ServerGroupServerInner object itself.
     */
    public ServerGroupServerInner withRole(ServerRole role) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupServerProperties();
        }
        this.innerProperties().withRole(role);
        return this;
    }

    /**
     * Get the state property: A state of a server that is visible to user.
     *
     * @return the state value.
     */
    public ServerState state() {
        return this.innerProperties() == null ? null : this.innerProperties().state();
    }

    /**
     * Get the haState property: A state of a server group that is visible to user for HA feature.
     *
     * @return the haState value.
     */
    public ServerHaState haState() {
        return this.innerProperties() == null ? null : this.innerProperties().haState();
    }

    /**
     * Get the administratorLogin property: The administrator's login name of a servers in server group.
     *
     * @return the administratorLogin value.
     */
    public String administratorLogin() {
        return this.innerProperties() == null ? null : this.innerProperties().administratorLogin();
    }

    /**
     * Set the administratorLogin property: The administrator's login name of a servers in server group.
     *
     * @param administratorLogin the administratorLogin value to set.
     * @return the ServerGroupServerInner object itself.
     */
    public ServerGroupServerInner withAdministratorLogin(String administratorLogin) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupServerProperties();
        }
        this.innerProperties().withAdministratorLogin(administratorLogin);
        return this;
    }

    /**
     * Get the postgresqlVersion property: The PostgreSQL version of server.
     *
     * @return the postgresqlVersion value.
     */
    public PostgreSqlVersion postgresqlVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().postgresqlVersion();
    }

    /**
     * Set the postgresqlVersion property: The PostgreSQL version of server.
     *
     * @param postgresqlVersion the postgresqlVersion value to set.
     * @return the ServerGroupServerInner object itself.
     */
    public ServerGroupServerInner withPostgresqlVersion(PostgreSqlVersion postgresqlVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupServerProperties();
        }
        this.innerProperties().withPostgresqlVersion(postgresqlVersion);
        return this;
    }

    /**
     * Get the citusVersion property: The Citus version of server.
     *
     * @return the citusVersion value.
     */
    public CitusVersion citusVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().citusVersion();
    }

    /**
     * Set the citusVersion property: The Citus version of server.
     *
     * @param citusVersion the citusVersion value to set.
     * @return the ServerGroupServerInner object itself.
     */
    public ServerGroupServerInner withCitusVersion(CitusVersion citusVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupServerProperties();
        }
        this.innerProperties().withCitusVersion(citusVersion);
        return this;
    }

    /**
     * Get the availabilityZone property: Availability Zone information of the server group.
     *
     * @return the availabilityZone value.
     */
    public String availabilityZone() {
        return this.innerProperties() == null ? null : this.innerProperties().availabilityZone();
    }

    /**
     * Set the availabilityZone property: Availability Zone information of the server group.
     *
     * @param availabilityZone the availabilityZone value to set.
     * @return the ServerGroupServerInner object itself.
     */
    public ServerGroupServerInner withAvailabilityZone(String availabilityZone) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupServerProperties();
        }
        this.innerProperties().withAvailabilityZone(availabilityZone);
        return this;
    }

    /**
     * Get the standbyAvailabilityZone property: Standby Availability Zone information of the server group.
     *
     * @return the standbyAvailabilityZone value.
     */
    public String standbyAvailabilityZone() {
        return this.innerProperties() == null ? null : this.innerProperties().standbyAvailabilityZone();
    }

    /**
     * Set the standbyAvailabilityZone property: Standby Availability Zone information of the server group.
     *
     * @param standbyAvailabilityZone the standbyAvailabilityZone value to set.
     * @return the ServerGroupServerInner object itself.
     */
    public ServerGroupServerInner withStandbyAvailabilityZone(String standbyAvailabilityZone) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupServerProperties();
        }
        this.innerProperties().withStandbyAvailabilityZone(standbyAvailabilityZone);
        return this;
    }

    /**
     * Get the serverEdition property: The edition of a server (default: GeneralPurpose).
     *
     * @return the serverEdition value.
     */
    public ServerEdition serverEdition() {
        return this.innerProperties() == null ? null : this.innerProperties().serverEdition();
    }

    /**
     * Set the serverEdition property: The edition of a server (default: GeneralPurpose).
     *
     * @param serverEdition the serverEdition value to set.
     * @return the ServerGroupServerInner object itself.
     */
    public ServerGroupServerInner withServerEdition(ServerEdition serverEdition) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupServerProperties();
        }
        this.innerProperties().withServerEdition(serverEdition);
        return this;
    }

    /**
     * Get the storageQuotaInMb property: The storage of a server in MB (max: 2097152 = 2TiB).
     *
     * @return the storageQuotaInMb value.
     */
    public Long storageQuotaInMb() {
        return this.innerProperties() == null ? null : this.innerProperties().storageQuotaInMb();
    }

    /**
     * Set the storageQuotaInMb property: The storage of a server in MB (max: 2097152 = 2TiB).
     *
     * @param storageQuotaInMb the storageQuotaInMb value to set.
     * @return the ServerGroupServerInner object itself.
     */
    public ServerGroupServerInner withStorageQuotaInMb(Long storageQuotaInMb) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupServerProperties();
        }
        this.innerProperties().withStorageQuotaInMb(storageQuotaInMb);
        return this;
    }

    /**
     * Get the vCores property: The vCores count of a server (max: 64).
     *
     * @return the vCores value.
     */
    public Long vCores() {
        return this.innerProperties() == null ? null : this.innerProperties().vCores();
    }

    /**
     * Set the vCores property: The vCores count of a server (max: 64).
     *
     * @param vCores the vCores value to set.
     * @return the ServerGroupServerInner object itself.
     */
    public ServerGroupServerInner withVCores(Long vCores) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupServerProperties();
        }
        this.innerProperties().withVCores(vCores);
        return this;
    }

    /**
     * Get the enableHa property: If high availability is enabled or not for the server.
     *
     * @return the enableHa value.
     */
    public Boolean enableHa() {
        return this.innerProperties() == null ? null : this.innerProperties().enableHa();
    }

    /**
     * Set the enableHa property: If high availability is enabled or not for the server.
     *
     * @param enableHa the enableHa value to set.
     * @return the ServerGroupServerInner object itself.
     */
    public ServerGroupServerInner withEnableHa(Boolean enableHa) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupServerProperties();
        }
        this.innerProperties().withEnableHa(enableHa);
        return this;
    }

    /**
     * Get the enablePublicIp property: If public IP is requested or not for a server.
     *
     * @return the enablePublicIp value.
     */
    public Boolean enablePublicIp() {
        return this.innerProperties() == null ? null : this.innerProperties().enablePublicIp();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
