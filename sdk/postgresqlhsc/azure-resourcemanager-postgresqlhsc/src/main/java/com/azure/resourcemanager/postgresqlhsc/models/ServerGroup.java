// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlhsc.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.postgresqlhsc.fluent.models.ServerGroupInner;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of ServerGroup. */
public interface ServerGroup {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the createMode property: The mode to create a new server group.
     *
     * @return the createMode value.
     */
    CreateMode createMode();

    /**
     * Gets the administratorLogin property: The administrator's login name of servers in server group. Can only be
     * specified when the server is being created (and is required for creation).
     *
     * @return the administratorLogin value.
     */
    String administratorLogin();

    /**
     * Gets the administratorLoginPassword property: The password of the administrator login.
     *
     * @return the administratorLoginPassword value.
     */
    String administratorLoginPassword();

    /**
     * Gets the backupRetentionDays property: The backup retention days for server group.
     *
     * @return the backupRetentionDays value.
     */
    Integer backupRetentionDays();

    /**
     * Gets the postgresqlVersion property: The PostgreSQL version of server group.
     *
     * @return the postgresqlVersion value.
     */
    PostgreSqlVersion postgresqlVersion();

    /**
     * Gets the citusVersion property: The Citus version of server group.
     *
     * @return the citusVersion value.
     */
    CitusVersion citusVersion();

    /**
     * Gets the enableMx property: If Citus MX is enabled or not for the server group.
     *
     * @return the enableMx value.
     */
    Boolean enableMx();

    /**
     * Gets the enableZfs property: If ZFS compression is enabled or not for the server group.
     *
     * @return the enableZfs value.
     */
    Boolean enableZfs();

    /**
     * Gets the enableShardsOnCoordinator property: If shards on coordinator is enabled or not for the server group.
     *
     * @return the enableShardsOnCoordinator value.
     */
    Boolean enableShardsOnCoordinator();

    /**
     * Gets the state property: A state of a server group that is visible to user.
     *
     * @return the state value.
     */
    ServerState state();

    /**
     * Gets the earliestRestoreTime property: The earliest restore point time (ISO8601 format) for server group.
     *
     * @return the earliestRestoreTime value.
     */
    OffsetDateTime earliestRestoreTime();

    /**
     * Gets the resourceProviderType property: The resource provider type of server group.
     *
     * @return the resourceProviderType value.
     */
    ResourceProviderType resourceProviderType();

    /**
     * Gets the serverRoleGroups property: The list of server role groups.
     *
     * @return the serverRoleGroups value.
     */
    List<ServerRoleGroup> serverRoleGroups();

    /**
     * Gets the maintenanceWindow property: Maintenance window of a server group.
     *
     * @return the maintenanceWindow value.
     */
    MaintenanceWindow maintenanceWindow();

    /**
     * Gets the availabilityZone property: Availability Zone information of the server group.
     *
     * @return the availabilityZone value.
     */
    String availabilityZone();

    /**
     * Gets the standbyAvailabilityZone property: Standby Availability Zone information of the server group.
     *
     * @return the standbyAvailabilityZone value.
     */
    String standbyAvailabilityZone();

    /**
     * Gets the delegatedSubnetArguments property: The delegated subnet arguments for a server group.
     *
     * @return the delegatedSubnetArguments value.
     */
    ServerGroupPropertiesDelegatedSubnetArguments delegatedSubnetArguments();

    /**
     * Gets the sourceSubscriptionId property: The source subscription id to restore from. It's required when
     * 'createMode' is 'PointInTimeRestore'.
     *
     * @return the sourceSubscriptionId value.
     */
    String sourceSubscriptionId();

    /**
     * Gets the sourceResourceGroupName property: The source resource group name to restore from. It's required when
     * 'createMode' is 'PointInTimeRestore'.
     *
     * @return the sourceResourceGroupName value.
     */
    String sourceResourceGroupName();

    /**
     * Gets the sourceServerGroupName property: The source server group name to restore from. It's required when
     * 'createMode' is 'PointInTimeRestore'.
     *
     * @return the sourceServerGroupName value.
     */
    String sourceServerGroupName();

    /**
     * Gets the sourceLocation property: The source server group location to restore from. It's required when
     * 'createMode' is 'PointInTimeRestore'.
     *
     * @return the sourceLocation value.
     */
    String sourceLocation();

    /**
     * Gets the pointInTimeUtc property: Restore point creation time (ISO8601 format), specifying the time to restore
     * from. It's required when 'createMode' is 'PointInTimeRestore'.
     *
     * @return the pointInTimeUtc value.
     */
    OffsetDateTime pointInTimeUtc();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.postgresqlhsc.fluent.models.ServerGroupInner object.
     *
     * @return the inner object.
     */
    ServerGroupInner innerModel();

    /** The entirety of the ServerGroup definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The ServerGroup definition stages. */
    interface DefinitionStages {
        /** The first stage of the ServerGroup definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the ServerGroup definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the ServerGroup definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the ServerGroup definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithCreateMode,
                DefinitionStages.WithAdministratorLogin,
                DefinitionStages.WithAdministratorLoginPassword,
                DefinitionStages.WithBackupRetentionDays,
                DefinitionStages.WithPostgresqlVersion,
                DefinitionStages.WithCitusVersion,
                DefinitionStages.WithEnableMx,
                DefinitionStages.WithEnableZfs,
                DefinitionStages.WithEnableShardsOnCoordinator,
                DefinitionStages.WithServerRoleGroups,
                DefinitionStages.WithMaintenanceWindow,
                DefinitionStages.WithAvailabilityZone,
                DefinitionStages.WithStandbyAvailabilityZone,
                DefinitionStages.WithDelegatedSubnetArguments,
                DefinitionStages.WithSourceSubscriptionId,
                DefinitionStages.WithSourceResourceGroupName,
                DefinitionStages.WithSourceServerGroupName,
                DefinitionStages.WithSourceLocation,
                DefinitionStages.WithPointInTimeUtc {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ServerGroup create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ServerGroup create(Context context);
        }
        /** The stage of the ServerGroup definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the ServerGroup definition allowing to specify createMode. */
        interface WithCreateMode {
            /**
             * Specifies the createMode property: The mode to create a new server group..
             *
             * @param createMode The mode to create a new server group.
             * @return the next definition stage.
             */
            WithCreate withCreateMode(CreateMode createMode);
        }
        /** The stage of the ServerGroup definition allowing to specify administratorLogin. */
        interface WithAdministratorLogin {
            /**
             * Specifies the administratorLogin property: The administrator's login name of servers in server group. Can
             * only be specified when the server is being created (and is required for creation)..
             *
             * @param administratorLogin The administrator's login name of servers in server group. Can only be
             *     specified when the server is being created (and is required for creation).
             * @return the next definition stage.
             */
            WithCreate withAdministratorLogin(String administratorLogin);
        }
        /** The stage of the ServerGroup definition allowing to specify administratorLoginPassword. */
        interface WithAdministratorLoginPassword {
            /**
             * Specifies the administratorLoginPassword property: The password of the administrator login..
             *
             * @param administratorLoginPassword The password of the administrator login.
             * @return the next definition stage.
             */
            WithCreate withAdministratorLoginPassword(String administratorLoginPassword);
        }
        /** The stage of the ServerGroup definition allowing to specify backupRetentionDays. */
        interface WithBackupRetentionDays {
            /**
             * Specifies the backupRetentionDays property: The backup retention days for server group..
             *
             * @param backupRetentionDays The backup retention days for server group.
             * @return the next definition stage.
             */
            WithCreate withBackupRetentionDays(Integer backupRetentionDays);
        }
        /** The stage of the ServerGroup definition allowing to specify postgresqlVersion. */
        interface WithPostgresqlVersion {
            /**
             * Specifies the postgresqlVersion property: The PostgreSQL version of server group..
             *
             * @param postgresqlVersion The PostgreSQL version of server group.
             * @return the next definition stage.
             */
            WithCreate withPostgresqlVersion(PostgreSqlVersion postgresqlVersion);
        }
        /** The stage of the ServerGroup definition allowing to specify citusVersion. */
        interface WithCitusVersion {
            /**
             * Specifies the citusVersion property: The Citus version of server group..
             *
             * @param citusVersion The Citus version of server group.
             * @return the next definition stage.
             */
            WithCreate withCitusVersion(CitusVersion citusVersion);
        }
        /** The stage of the ServerGroup definition allowing to specify enableMx. */
        interface WithEnableMx {
            /**
             * Specifies the enableMx property: If Citus MX is enabled or not for the server group..
             *
             * @param enableMx If Citus MX is enabled or not for the server group.
             * @return the next definition stage.
             */
            WithCreate withEnableMx(Boolean enableMx);
        }
        /** The stage of the ServerGroup definition allowing to specify enableZfs. */
        interface WithEnableZfs {
            /**
             * Specifies the enableZfs property: If ZFS compression is enabled or not for the server group..
             *
             * @param enableZfs If ZFS compression is enabled or not for the server group.
             * @return the next definition stage.
             */
            WithCreate withEnableZfs(Boolean enableZfs);
        }
        /** The stage of the ServerGroup definition allowing to specify enableShardsOnCoordinator. */
        interface WithEnableShardsOnCoordinator {
            /**
             * Specifies the enableShardsOnCoordinator property: If shards on coordinator is enabled or not for the
             * server group..
             *
             * @param enableShardsOnCoordinator If shards on coordinator is enabled or not for the server group.
             * @return the next definition stage.
             */
            WithCreate withEnableShardsOnCoordinator(Boolean enableShardsOnCoordinator);
        }
        /** The stage of the ServerGroup definition allowing to specify serverRoleGroups. */
        interface WithServerRoleGroups {
            /**
             * Specifies the serverRoleGroups property: The list of server role groups..
             *
             * @param serverRoleGroups The list of server role groups.
             * @return the next definition stage.
             */
            WithCreate withServerRoleGroups(List<ServerRoleGroup> serverRoleGroups);
        }
        /** The stage of the ServerGroup definition allowing to specify maintenanceWindow. */
        interface WithMaintenanceWindow {
            /**
             * Specifies the maintenanceWindow property: Maintenance window of a server group..
             *
             * @param maintenanceWindow Maintenance window of a server group.
             * @return the next definition stage.
             */
            WithCreate withMaintenanceWindow(MaintenanceWindow maintenanceWindow);
        }
        /** The stage of the ServerGroup definition allowing to specify availabilityZone. */
        interface WithAvailabilityZone {
            /**
             * Specifies the availabilityZone property: Availability Zone information of the server group..
             *
             * @param availabilityZone Availability Zone information of the server group.
             * @return the next definition stage.
             */
            WithCreate withAvailabilityZone(String availabilityZone);
        }
        /** The stage of the ServerGroup definition allowing to specify standbyAvailabilityZone. */
        interface WithStandbyAvailabilityZone {
            /**
             * Specifies the standbyAvailabilityZone property: Standby Availability Zone information of the server
             * group..
             *
             * @param standbyAvailabilityZone Standby Availability Zone information of the server group.
             * @return the next definition stage.
             */
            WithCreate withStandbyAvailabilityZone(String standbyAvailabilityZone);
        }
        /** The stage of the ServerGroup definition allowing to specify delegatedSubnetArguments. */
        interface WithDelegatedSubnetArguments {
            /**
             * Specifies the delegatedSubnetArguments property: The delegated subnet arguments for a server group..
             *
             * @param delegatedSubnetArguments The delegated subnet arguments for a server group.
             * @return the next definition stage.
             */
            WithCreate withDelegatedSubnetArguments(
                ServerGroupPropertiesDelegatedSubnetArguments delegatedSubnetArguments);
        }
        /** The stage of the ServerGroup definition allowing to specify sourceSubscriptionId. */
        interface WithSourceSubscriptionId {
            /**
             * Specifies the sourceSubscriptionId property: The source subscription id to restore from. It's required
             * when 'createMode' is 'PointInTimeRestore'.
             *
             * @param sourceSubscriptionId The source subscription id to restore from. It's required when 'createMode'
             *     is 'PointInTimeRestore'.
             * @return the next definition stage.
             */
            WithCreate withSourceSubscriptionId(String sourceSubscriptionId);
        }
        /** The stage of the ServerGroup definition allowing to specify sourceResourceGroupName. */
        interface WithSourceResourceGroupName {
            /**
             * Specifies the sourceResourceGroupName property: The source resource group name to restore from. It's
             * required when 'createMode' is 'PointInTimeRestore'.
             *
             * @param sourceResourceGroupName The source resource group name to restore from. It's required when
             *     'createMode' is 'PointInTimeRestore'.
             * @return the next definition stage.
             */
            WithCreate withSourceResourceGroupName(String sourceResourceGroupName);
        }
        /** The stage of the ServerGroup definition allowing to specify sourceServerGroupName. */
        interface WithSourceServerGroupName {
            /**
             * Specifies the sourceServerGroupName property: The source server group name to restore from. It's required
             * when 'createMode' is 'PointInTimeRestore'.
             *
             * @param sourceServerGroupName The source server group name to restore from. It's required when
             *     'createMode' is 'PointInTimeRestore'.
             * @return the next definition stage.
             */
            WithCreate withSourceServerGroupName(String sourceServerGroupName);
        }
        /** The stage of the ServerGroup definition allowing to specify sourceLocation. */
        interface WithSourceLocation {
            /**
             * Specifies the sourceLocation property: The source server group location to restore from. It's required
             * when 'createMode' is 'PointInTimeRestore'.
             *
             * @param sourceLocation The source server group location to restore from. It's required when 'createMode'
             *     is 'PointInTimeRestore'.
             * @return the next definition stage.
             */
            WithCreate withSourceLocation(String sourceLocation);
        }
        /** The stage of the ServerGroup definition allowing to specify pointInTimeUtc. */
        interface WithPointInTimeUtc {
            /**
             * Specifies the pointInTimeUtc property: Restore point creation time (ISO8601 format), specifying the time
             * to restore from. It's required when 'createMode' is 'PointInTimeRestore'.
             *
             * @param pointInTimeUtc Restore point creation time (ISO8601 format), specifying the time to restore from.
             *     It's required when 'createMode' is 'PointInTimeRestore'.
             * @return the next definition stage.
             */
            WithCreate withPointInTimeUtc(OffsetDateTime pointInTimeUtc);
        }
    }
    /**
     * Begins update for the ServerGroup resource.
     *
     * @return the stage of resource update.
     */
    ServerGroup.Update update();

    /** The template for ServerGroup update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithAdministratorLoginPassword,
            UpdateStages.WithBackupRetentionDays,
            UpdateStages.WithPostgresqlVersion,
            UpdateStages.WithCitusVersion,
            UpdateStages.WithEnableShardsOnCoordinator,
            UpdateStages.WithServerRoleGroups,
            UpdateStages.WithMaintenanceWindow,
            UpdateStages.WithAvailabilityZone,
            UpdateStages.WithStandbyAvailabilityZone {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ServerGroup apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ServerGroup apply(Context context);
    }
    /** The ServerGroup update stages. */
    interface UpdateStages {
        /** The stage of the ServerGroup update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Application-specific metadata in the form of key-value pairs..
             *
             * @param tags Application-specific metadata in the form of key-value pairs.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the ServerGroup update allowing to specify administratorLoginPassword. */
        interface WithAdministratorLoginPassword {
            /**
             * Specifies the administratorLoginPassword property: The password of the administrator login..
             *
             * @param administratorLoginPassword The password of the administrator login.
             * @return the next definition stage.
             */
            Update withAdministratorLoginPassword(String administratorLoginPassword);
        }
        /** The stage of the ServerGroup update allowing to specify backupRetentionDays. */
        interface WithBackupRetentionDays {
            /**
             * Specifies the backupRetentionDays property: The backup retention days for server group..
             *
             * @param backupRetentionDays The backup retention days for server group.
             * @return the next definition stage.
             */
            Update withBackupRetentionDays(Integer backupRetentionDays);
        }
        /** The stage of the ServerGroup update allowing to specify postgresqlVersion. */
        interface WithPostgresqlVersion {
            /**
             * Specifies the postgresqlVersion property: The PostgreSQL version of server group..
             *
             * @param postgresqlVersion The PostgreSQL version of server group.
             * @return the next definition stage.
             */
            Update withPostgresqlVersion(PostgreSqlVersion postgresqlVersion);
        }
        /** The stage of the ServerGroup update allowing to specify citusVersion. */
        interface WithCitusVersion {
            /**
             * Specifies the citusVersion property: The Citus version of server group..
             *
             * @param citusVersion The Citus version of server group.
             * @return the next definition stage.
             */
            Update withCitusVersion(CitusVersion citusVersion);
        }
        /** The stage of the ServerGroup update allowing to specify enableShardsOnCoordinator. */
        interface WithEnableShardsOnCoordinator {
            /**
             * Specifies the enableShardsOnCoordinator property: If shards on coordinator is enabled or not for the
             * server group..
             *
             * @param enableShardsOnCoordinator If shards on coordinator is enabled or not for the server group.
             * @return the next definition stage.
             */
            Update withEnableShardsOnCoordinator(Boolean enableShardsOnCoordinator);
        }
        /** The stage of the ServerGroup update allowing to specify serverRoleGroups. */
        interface WithServerRoleGroups {
            /**
             * Specifies the serverRoleGroups property: The list of server role groups..
             *
             * @param serverRoleGroups The list of server role groups.
             * @return the next definition stage.
             */
            Update withServerRoleGroups(List<ServerRoleGroup> serverRoleGroups);
        }
        /** The stage of the ServerGroup update allowing to specify maintenanceWindow. */
        interface WithMaintenanceWindow {
            /**
             * Specifies the maintenanceWindow property: Maintenance window of a server group..
             *
             * @param maintenanceWindow Maintenance window of a server group.
             * @return the next definition stage.
             */
            Update withMaintenanceWindow(MaintenanceWindow maintenanceWindow);
        }
        /** The stage of the ServerGroup update allowing to specify availabilityZone. */
        interface WithAvailabilityZone {
            /**
             * Specifies the availabilityZone property: Availability Zone information of the server group..
             *
             * @param availabilityZone Availability Zone information of the server group.
             * @return the next definition stage.
             */
            Update withAvailabilityZone(String availabilityZone);
        }
        /** The stage of the ServerGroup update allowing to specify standbyAvailabilityZone. */
        interface WithStandbyAvailabilityZone {
            /**
             * Specifies the standbyAvailabilityZone property: Standby Availability Zone information of the server
             * group..
             *
             * @param standbyAvailabilityZone Standby Availability Zone information of the server group.
             * @return the next definition stage.
             */
            Update withStandbyAvailabilityZone(String standbyAvailabilityZone);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ServerGroup refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ServerGroup refresh(Context context);
}
