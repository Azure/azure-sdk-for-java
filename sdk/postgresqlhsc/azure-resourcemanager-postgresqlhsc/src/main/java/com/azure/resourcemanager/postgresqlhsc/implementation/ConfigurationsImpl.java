// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlhsc.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.postgresqlhsc.fluent.ConfigurationsClient;
import com.azure.resourcemanager.postgresqlhsc.fluent.models.ServerConfigurationInner;
import com.azure.resourcemanager.postgresqlhsc.fluent.models.ServerGroupConfigurationInner;
import com.azure.resourcemanager.postgresqlhsc.models.Configurations;
import com.azure.resourcemanager.postgresqlhsc.models.ServerConfiguration;
import com.azure.resourcemanager.postgresqlhsc.models.ServerGroupConfiguration;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ConfigurationsImpl implements Configurations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ConfigurationsImpl.class);

    private final ConfigurationsClient innerClient;

    private final com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager serviceManager;

    public ConfigurationsImpl(
        ConfigurationsClient innerClient, com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<ServerConfiguration> listByServer(
        String resourceGroupName, String serverGroupName, String serverName) {
        PagedIterable<ServerConfigurationInner> inner =
            this.serviceClient().listByServer(resourceGroupName, serverGroupName, serverName);
        return Utils.mapPage(inner, inner1 -> new ServerConfigurationImpl(inner1, this.manager()));
    }

    public PagedIterable<ServerConfiguration> listByServer(
        String resourceGroupName, String serverGroupName, String serverName, Context context) {
        PagedIterable<ServerConfigurationInner> inner =
            this.serviceClient().listByServer(resourceGroupName, serverGroupName, serverName, context);
        return Utils.mapPage(inner, inner1 -> new ServerConfigurationImpl(inner1, this.manager()));
    }

    public PagedIterable<ServerGroupConfiguration> listByServerGroup(String resourceGroupName, String serverGroupName) {
        PagedIterable<ServerGroupConfigurationInner> inner =
            this.serviceClient().listByServerGroup(resourceGroupName, serverGroupName);
        return Utils.mapPage(inner, inner1 -> new ServerGroupConfigurationImpl(inner1, this.manager()));
    }

    public PagedIterable<ServerGroupConfiguration> listByServerGroup(
        String resourceGroupName, String serverGroupName, Context context) {
        PagedIterable<ServerGroupConfigurationInner> inner =
            this.serviceClient().listByServerGroup(resourceGroupName, serverGroupName, context);
        return Utils.mapPage(inner, inner1 -> new ServerGroupConfigurationImpl(inner1, this.manager()));
    }

    public ServerGroupConfiguration update(
        String resourceGroupName,
        String serverGroupName,
        String configurationName,
        ServerGroupConfigurationInner parameters) {
        ServerGroupConfigurationInner inner =
            this.serviceClient().update(resourceGroupName, serverGroupName, configurationName, parameters);
        if (inner != null) {
            return new ServerGroupConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ServerGroupConfiguration update(
        String resourceGroupName,
        String serverGroupName,
        String configurationName,
        ServerGroupConfigurationInner parameters,
        Context context) {
        ServerGroupConfigurationInner inner =
            this.serviceClient().update(resourceGroupName, serverGroupName, configurationName, parameters, context);
        if (inner != null) {
            return new ServerGroupConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ServerGroupConfiguration get(String resourceGroupName, String serverGroupName, String configurationName) {
        ServerGroupConfigurationInner inner =
            this.serviceClient().get(resourceGroupName, serverGroupName, configurationName);
        if (inner != null) {
            return new ServerGroupConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ServerGroupConfiguration> getWithResponse(
        String resourceGroupName, String serverGroupName, String configurationName, Context context) {
        Response<ServerGroupConfigurationInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, serverGroupName, configurationName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ServerGroupConfigurationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ConfigurationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager manager() {
        return this.serviceManager;
    }
}
