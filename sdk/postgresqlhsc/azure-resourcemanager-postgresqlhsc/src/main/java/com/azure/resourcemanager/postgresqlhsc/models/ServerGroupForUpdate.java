// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlhsc.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.postgresqlhsc.fluent.models.ServerGroupPropertiesForUpdate;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** Represents a server group for update. */
@Fluent
public final class ServerGroupForUpdate {
    /*
     * The location the resource resides in.
     */
    @JsonProperty(value = "location")
    private String location;

    /*
     * Properties of the server group.
     */
    @JsonProperty(value = "properties")
    private ServerGroupPropertiesForUpdate innerProperties;

    /*
     * Application-specific metadata in the form of key-value pairs.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /**
     * Get the location property: The location the resource resides in.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: The location the resource resides in.
     *
     * @param location the location value to set.
     * @return the ServerGroupForUpdate object itself.
     */
    public ServerGroupForUpdate withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the innerProperties property: Properties of the server group.
     *
     * @return the innerProperties value.
     */
    private ServerGroupPropertiesForUpdate innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the tags property: Application-specific metadata in the form of key-value pairs.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Application-specific metadata in the form of key-value pairs.
     *
     * @param tags the tags value to set.
     * @return the ServerGroupForUpdate object itself.
     */
    public ServerGroupForUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the administratorLoginPassword property: The password of the administrator login.
     *
     * @return the administratorLoginPassword value.
     */
    public String administratorLoginPassword() {
        return this.innerProperties() == null ? null : this.innerProperties().administratorLoginPassword();
    }

    /**
     * Set the administratorLoginPassword property: The password of the administrator login.
     *
     * @param administratorLoginPassword the administratorLoginPassword value to set.
     * @return the ServerGroupForUpdate object itself.
     */
    public ServerGroupForUpdate withAdministratorLoginPassword(String administratorLoginPassword) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupPropertiesForUpdate();
        }
        this.innerProperties().withAdministratorLoginPassword(administratorLoginPassword);
        return this;
    }

    /**
     * Get the backupRetentionDays property: The backup retention days for server group.
     *
     * @return the backupRetentionDays value.
     */
    public Integer backupRetentionDays() {
        return this.innerProperties() == null ? null : this.innerProperties().backupRetentionDays();
    }

    /**
     * Set the backupRetentionDays property: The backup retention days for server group.
     *
     * @param backupRetentionDays the backupRetentionDays value to set.
     * @return the ServerGroupForUpdate object itself.
     */
    public ServerGroupForUpdate withBackupRetentionDays(Integer backupRetentionDays) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupPropertiesForUpdate();
        }
        this.innerProperties().withBackupRetentionDays(backupRetentionDays);
        return this;
    }

    /**
     * Get the postgresqlVersion property: The PostgreSQL version of server group.
     *
     * @return the postgresqlVersion value.
     */
    public PostgreSqlVersion postgresqlVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().postgresqlVersion();
    }

    /**
     * Set the postgresqlVersion property: The PostgreSQL version of server group.
     *
     * @param postgresqlVersion the postgresqlVersion value to set.
     * @return the ServerGroupForUpdate object itself.
     */
    public ServerGroupForUpdate withPostgresqlVersion(PostgreSqlVersion postgresqlVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupPropertiesForUpdate();
        }
        this.innerProperties().withPostgresqlVersion(postgresqlVersion);
        return this;
    }

    /**
     * Get the citusVersion property: The Citus version of server group.
     *
     * @return the citusVersion value.
     */
    public CitusVersion citusVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().citusVersion();
    }

    /**
     * Set the citusVersion property: The Citus version of server group.
     *
     * @param citusVersion the citusVersion value to set.
     * @return the ServerGroupForUpdate object itself.
     */
    public ServerGroupForUpdate withCitusVersion(CitusVersion citusVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupPropertiesForUpdate();
        }
        this.innerProperties().withCitusVersion(citusVersion);
        return this;
    }

    /**
     * Get the enableShardsOnCoordinator property: If shards on coordinator is enabled or not for the server group.
     *
     * @return the enableShardsOnCoordinator value.
     */
    public Boolean enableShardsOnCoordinator() {
        return this.innerProperties() == null ? null : this.innerProperties().enableShardsOnCoordinator();
    }

    /**
     * Set the enableShardsOnCoordinator property: If shards on coordinator is enabled or not for the server group.
     *
     * @param enableShardsOnCoordinator the enableShardsOnCoordinator value to set.
     * @return the ServerGroupForUpdate object itself.
     */
    public ServerGroupForUpdate withEnableShardsOnCoordinator(Boolean enableShardsOnCoordinator) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupPropertiesForUpdate();
        }
        this.innerProperties().withEnableShardsOnCoordinator(enableShardsOnCoordinator);
        return this;
    }

    /**
     * Get the serverRoleGroups property: The list of server role groups.
     *
     * @return the serverRoleGroups value.
     */
    public List<ServerRoleGroup> serverRoleGroups() {
        return this.innerProperties() == null ? null : this.innerProperties().serverRoleGroups();
    }

    /**
     * Set the serverRoleGroups property: The list of server role groups.
     *
     * @param serverRoleGroups the serverRoleGroups value to set.
     * @return the ServerGroupForUpdate object itself.
     */
    public ServerGroupForUpdate withServerRoleGroups(List<ServerRoleGroup> serverRoleGroups) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupPropertiesForUpdate();
        }
        this.innerProperties().withServerRoleGroups(serverRoleGroups);
        return this;
    }

    /**
     * Get the maintenanceWindow property: Maintenance window of a server group.
     *
     * @return the maintenanceWindow value.
     */
    public MaintenanceWindow maintenanceWindow() {
        return this.innerProperties() == null ? null : this.innerProperties().maintenanceWindow();
    }

    /**
     * Set the maintenanceWindow property: Maintenance window of a server group.
     *
     * @param maintenanceWindow the maintenanceWindow value to set.
     * @return the ServerGroupForUpdate object itself.
     */
    public ServerGroupForUpdate withMaintenanceWindow(MaintenanceWindow maintenanceWindow) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupPropertiesForUpdate();
        }
        this.innerProperties().withMaintenanceWindow(maintenanceWindow);
        return this;
    }

    /**
     * Get the availabilityZone property: Availability Zone information of the server group.
     *
     * @return the availabilityZone value.
     */
    public String availabilityZone() {
        return this.innerProperties() == null ? null : this.innerProperties().availabilityZone();
    }

    /**
     * Set the availabilityZone property: Availability Zone information of the server group.
     *
     * @param availabilityZone the availabilityZone value to set.
     * @return the ServerGroupForUpdate object itself.
     */
    public ServerGroupForUpdate withAvailabilityZone(String availabilityZone) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupPropertiesForUpdate();
        }
        this.innerProperties().withAvailabilityZone(availabilityZone);
        return this;
    }

    /**
     * Get the standbyAvailabilityZone property: Standby Availability Zone information of the server group.
     *
     * @return the standbyAvailabilityZone value.
     */
    public String standbyAvailabilityZone() {
        return this.innerProperties() == null ? null : this.innerProperties().standbyAvailabilityZone();
    }

    /**
     * Set the standbyAvailabilityZone property: Standby Availability Zone information of the server group.
     *
     * @param standbyAvailabilityZone the standbyAvailabilityZone value to set.
     * @return the ServerGroupForUpdate object itself.
     */
    public ServerGroupForUpdate withStandbyAvailabilityZone(String standbyAvailabilityZone) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerGroupPropertiesForUpdate();
        }
        this.innerProperties().withStandbyAvailabilityZone(standbyAvailabilityZone);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
