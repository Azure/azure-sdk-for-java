// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.scvmm.fluent.VMInstanceGuestAgentsClient;
import com.azure.resourcemanager.scvmm.fluent.models.GuestAgentInner;
import com.azure.resourcemanager.scvmm.models.GuestAgent;
import com.azure.resourcemanager.scvmm.models.VMInstanceGuestAgents;

public final class VMInstanceGuestAgentsImpl implements VMInstanceGuestAgents {
    private static final ClientLogger LOGGER = new ClientLogger(VMInstanceGuestAgentsImpl.class);

    private final VMInstanceGuestAgentsClient innerClient;

    private final com.azure.resourcemanager.scvmm.ScvmmManager serviceManager;

    public VMInstanceGuestAgentsImpl(
        VMInstanceGuestAgentsClient innerClient, com.azure.resourcemanager.scvmm.ScvmmManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public GuestAgent create(String resourceUri) {
        GuestAgentInner inner = this.serviceClient().create(resourceUri);
        if (inner != null) {
            return new GuestAgentImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public GuestAgent create(String resourceUri, GuestAgentInner body, Context context) {
        GuestAgentInner inner = this.serviceClient().create(resourceUri, body, context);
        if (inner != null) {
            return new GuestAgentImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<GuestAgent> getWithResponse(String resourceUri, Context context) {
        Response<GuestAgentInner> inner = this.serviceClient().getWithResponse(resourceUri, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new GuestAgentImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public GuestAgent get(String resourceUri) {
        GuestAgentInner inner = this.serviceClient().get(resourceUri);
        if (inner != null) {
            return new GuestAgentImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteWithResponse(String resourceUri, Context context) {
        return this.serviceClient().deleteWithResponse(resourceUri, context);
    }

    public void delete(String resourceUri) {
        this.serviceClient().delete(resourceUri);
    }

    public PagedIterable<GuestAgent> list(String resourceUri) {
        PagedIterable<GuestAgentInner> inner = this.serviceClient().list(resourceUri);
        return Utils.mapPage(inner, inner1 -> new GuestAgentImpl(inner1, this.manager()));
    }

    public PagedIterable<GuestAgent> list(String resourceUri, Context context) {
        PagedIterable<GuestAgentInner> inner = this.serviceClient().list(resourceUri, context);
        return Utils.mapPage(inner, inner1 -> new GuestAgentImpl(inner1, this.manager()));
    }

    private VMInstanceGuestAgentsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.scvmm.ScvmmManager manager() {
        return this.serviceManager;
    }
}
