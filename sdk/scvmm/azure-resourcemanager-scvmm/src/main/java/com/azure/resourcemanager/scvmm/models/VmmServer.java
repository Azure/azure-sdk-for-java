// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.scvmm.fluent.models.VmmServerInner;
import java.util.Map;

/** An immutable client-side representation of VmmServer. */
public interface VmmServer {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: The system data.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the extendedLocation property: The extended location.
     *
     * @return the extendedLocation value.
     */
    ExtendedLocation extendedLocation();

    /**
     * Gets the credentials property: Credentials to connect to VMMServer.
     *
     * @return the credentials value.
     */
    VmmServerPropertiesCredentials credentials();

    /**
     * Gets the fqdn property: Fqdn is the hostname/ip of the vmmServer.
     *
     * @return the fqdn value.
     */
    String fqdn();

    /**
     * Gets the port property: Port is the port on which the vmmServer is listening.
     *
     * @return the port value.
     */
    Integer port();

    /**
     * Gets the connectionStatus property: Gets or sets the connection status to the vmmServer.
     *
     * @return the connectionStatus value.
     */
    String connectionStatus();

    /**
     * Gets the errorMessage property: Gets or sets any error message if connection to vmmServer is having any issue.
     *
     * @return the errorMessage value.
     */
    String errorMessage();

    /**
     * Gets the uuid property: Unique ID of vmmServer.
     *
     * @return the uuid value.
     */
    String uuid();

    /**
     * Gets the version property: Version is the version of the vmmSever.
     *
     * @return the version value.
     */
    String version();

    /**
     * Gets the provisioningState property: Gets or sets the provisioning state.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.scvmm.fluent.models.VmmServerInner object.
     *
     * @return the inner object.
     */
    VmmServerInner innerModel();

    /** The entirety of the VmmServer definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithExtendedLocation,
            DefinitionStages.WithFqdn,
            DefinitionStages.WithCreate {
    }
    /** The VmmServer definition stages. */
    interface DefinitionStages {
        /** The first stage of the VmmServer definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the VmmServer definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the VmmServer definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group.
             * @return the next definition stage.
             */
            WithExtendedLocation withExistingResourceGroup(String resourceGroupName);
        }
        /** The stage of the VmmServer definition allowing to specify extendedLocation. */
        interface WithExtendedLocation {
            /**
             * Specifies the extendedLocation property: The extended location..
             *
             * @param extendedLocation The extended location.
             * @return the next definition stage.
             */
            WithFqdn withExtendedLocation(ExtendedLocation extendedLocation);
        }
        /** The stage of the VmmServer definition allowing to specify fqdn. */
        interface WithFqdn {
            /**
             * Specifies the fqdn property: Fqdn is the hostname/ip of the vmmServer..
             *
             * @param fqdn Fqdn is the hostname/ip of the vmmServer.
             * @return the next definition stage.
             */
            WithCreate withFqdn(String fqdn);
        }
        /**
         * The stage of the VmmServer definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags, DefinitionStages.WithCredentials, DefinitionStages.WithPort {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            VmmServer create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            VmmServer create(Context context);
        }
        /** The stage of the VmmServer definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the VmmServer definition allowing to specify credentials. */
        interface WithCredentials {
            /**
             * Specifies the credentials property: Credentials to connect to VMMServer..
             *
             * @param credentials Credentials to connect to VMMServer.
             * @return the next definition stage.
             */
            WithCreate withCredentials(VmmServerPropertiesCredentials credentials);
        }
        /** The stage of the VmmServer definition allowing to specify port. */
        interface WithPort {
            /**
             * Specifies the port property: Port is the port on which the vmmServer is listening..
             *
             * @param port Port is the port on which the vmmServer is listening.
             * @return the next definition stage.
             */
            WithCreate withPort(Integer port);
        }
    }
    /**
     * Begins update for the VmmServer resource.
     *
     * @return the stage of resource update.
     */
    VmmServer.Update update();

    /** The template for VmmServer update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        VmmServer apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        VmmServer apply(Context context);
    }
    /** The VmmServer update stages. */
    interface UpdateStages {
        /** The stage of the VmmServer update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    VmmServer refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    VmmServer refresh(Context context);
}
