// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Defines the resource properties. */
@Fluent
public final class InventoryItemDetails {
    /*
     * Gets or sets the inventory Item ID for the resource.
     */
    @JsonProperty(value = "inventoryItemId")
    private String inventoryItemId;

    /*
     * Gets or sets the Managed Object name in VMM for the resource.
     */
    @JsonProperty(value = "inventoryItemName")
    private String inventoryItemName;

    /**
     * Get the inventoryItemId property: Gets or sets the inventory Item ID for the resource.
     *
     * @return the inventoryItemId value.
     */
    public String inventoryItemId() {
        return this.inventoryItemId;
    }

    /**
     * Set the inventoryItemId property: Gets or sets the inventory Item ID for the resource.
     *
     * @param inventoryItemId the inventoryItemId value to set.
     * @return the InventoryItemDetails object itself.
     */
    public InventoryItemDetails withInventoryItemId(String inventoryItemId) {
        this.inventoryItemId = inventoryItemId;
        return this;
    }

    /**
     * Get the inventoryItemName property: Gets or sets the Managed Object name in VMM for the resource.
     *
     * @return the inventoryItemName value.
     */
    public String inventoryItemName() {
        return this.inventoryItemName;
    }

    /**
     * Set the inventoryItemName property: Gets or sets the Managed Object name in VMM for the resource.
     *
     * @param inventoryItemName the inventoryItemName value to set.
     * @return the InventoryItemDetails object itself.
     */
    public InventoryItemDetails withInventoryItemName(String inventoryItemName) {
        this.inventoryItemName = inventoryItemName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
