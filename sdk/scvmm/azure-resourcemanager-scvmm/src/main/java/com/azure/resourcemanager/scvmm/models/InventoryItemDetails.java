// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines the resource properties.
 */
@Fluent
public final class InventoryItemDetails implements JsonSerializable<InventoryItemDetails> {
    /*
     * Gets or sets the inventory Item ID for the resource.
     */
    private String inventoryItemId;

    /*
     * Gets or sets the Managed Object name in Vmm for the resource.
     */
    private String inventoryItemName;

    /**
     * Creates an instance of InventoryItemDetails class.
     */
    public InventoryItemDetails() {
    }

    /**
     * Get the inventoryItemId property: Gets or sets the inventory Item ID for the resource.
     * 
     * @return the inventoryItemId value.
     */
    public String inventoryItemId() {
        return this.inventoryItemId;
    }

    /**
     * Set the inventoryItemId property: Gets or sets the inventory Item ID for the resource.
     * 
     * @param inventoryItemId the inventoryItemId value to set.
     * @return the InventoryItemDetails object itself.
     */
    public InventoryItemDetails withInventoryItemId(String inventoryItemId) {
        this.inventoryItemId = inventoryItemId;
        return this;
    }

    /**
     * Get the inventoryItemName property: Gets or sets the Managed Object name in Vmm for the resource.
     * 
     * @return the inventoryItemName value.
     */
    public String inventoryItemName() {
        return this.inventoryItemName;
    }

    /**
     * Set the inventoryItemName property: Gets or sets the Managed Object name in Vmm for the resource.
     * 
     * @param inventoryItemName the inventoryItemName value to set.
     * @return the InventoryItemDetails object itself.
     */
    public InventoryItemDetails withInventoryItemName(String inventoryItemName) {
        this.inventoryItemName = inventoryItemName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("inventoryItemId", this.inventoryItemId);
        jsonWriter.writeStringField("inventoryItemName", this.inventoryItemName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InventoryItemDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InventoryItemDetails if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InventoryItemDetails.
     */
    public static InventoryItemDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InventoryItemDetails deserializedInventoryItemDetails = new InventoryItemDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("inventoryItemId".equals(fieldName)) {
                    deserializedInventoryItemDetails.inventoryItemId = reader.getString();
                } else if ("inventoryItemName".equals(fieldName)) {
                    deserializedInventoryItemDetails.inventoryItemName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInventoryItemDetails;
        });
    }
}
