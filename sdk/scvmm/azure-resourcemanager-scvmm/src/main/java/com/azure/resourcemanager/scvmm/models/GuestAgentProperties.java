// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines the resource properties.
 */
@Fluent
public final class GuestAgentProperties implements JsonSerializable<GuestAgentProperties> {
    /*
     * Gets a unique identifier for this resource.
     */
    private String uuid;

    /*
     * Username / Password Credentials to provision guest agent.
     */
    private GuestCredential credentials;

    /*
     * HTTP Proxy configuration for the VM.
     */
    private HttpProxyConfiguration httpProxyConfig;

    /*
     * Gets or sets the guest agent provisioning action.
     */
    private ProvisioningAction provisioningAction;

    /*
     * Gets the guest agent status.
     */
    private String status;

    /*
     * Gets the name of the corresponding resource in Kubernetes.
     */
    private String customResourceName;

    /*
     * Provisioning state of the resource.
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of GuestAgentProperties class.
     */
    public GuestAgentProperties() {
    }

    /**
     * Get the uuid property: Gets a unique identifier for this resource.
     * 
     * @return the uuid value.
     */
    public String uuid() {
        return this.uuid;
    }

    /**
     * Get the credentials property: Username / Password Credentials to provision guest agent.
     * 
     * @return the credentials value.
     */
    public GuestCredential credentials() {
        return this.credentials;
    }

    /**
     * Set the credentials property: Username / Password Credentials to provision guest agent.
     * 
     * @param credentials the credentials value to set.
     * @return the GuestAgentProperties object itself.
     */
    public GuestAgentProperties withCredentials(GuestCredential credentials) {
        this.credentials = credentials;
        return this;
    }

    /**
     * Get the httpProxyConfig property: HTTP Proxy configuration for the VM.
     * 
     * @return the httpProxyConfig value.
     */
    public HttpProxyConfiguration httpProxyConfig() {
        return this.httpProxyConfig;
    }

    /**
     * Set the httpProxyConfig property: HTTP Proxy configuration for the VM.
     * 
     * @param httpProxyConfig the httpProxyConfig value to set.
     * @return the GuestAgentProperties object itself.
     */
    public GuestAgentProperties withHttpProxyConfig(HttpProxyConfiguration httpProxyConfig) {
        this.httpProxyConfig = httpProxyConfig;
        return this;
    }

    /**
     * Get the provisioningAction property: Gets or sets the guest agent provisioning action.
     * 
     * @return the provisioningAction value.
     */
    public ProvisioningAction provisioningAction() {
        return this.provisioningAction;
    }

    /**
     * Set the provisioningAction property: Gets or sets the guest agent provisioning action.
     * 
     * @param provisioningAction the provisioningAction value to set.
     * @return the GuestAgentProperties object itself.
     */
    public GuestAgentProperties withProvisioningAction(ProvisioningAction provisioningAction) {
        this.provisioningAction = provisioningAction;
        return this;
    }

    /**
     * Get the status property: Gets the guest agent status.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Get the customResourceName property: Gets the name of the corresponding resource in Kubernetes.
     * 
     * @return the customResourceName value.
     */
    public String customResourceName() {
        return this.customResourceName;
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (credentials() != null) {
            credentials().validate();
        }
        if (httpProxyConfig() != null) {
            httpProxyConfig().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("credentials", this.credentials);
        jsonWriter.writeJsonField("httpProxyConfig", this.httpProxyConfig);
        jsonWriter.writeStringField("provisioningAction",
            this.provisioningAction == null ? null : this.provisioningAction.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GuestAgentProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GuestAgentProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GuestAgentProperties.
     */
    public static GuestAgentProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GuestAgentProperties deserializedGuestAgentProperties = new GuestAgentProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("uuid".equals(fieldName)) {
                    deserializedGuestAgentProperties.uuid = reader.getString();
                } else if ("credentials".equals(fieldName)) {
                    deserializedGuestAgentProperties.credentials = GuestCredential.fromJson(reader);
                } else if ("httpProxyConfig".equals(fieldName)) {
                    deserializedGuestAgentProperties.httpProxyConfig = HttpProxyConfiguration.fromJson(reader);
                } else if ("provisioningAction".equals(fieldName)) {
                    deserializedGuestAgentProperties.provisioningAction
                        = ProvisioningAction.fromString(reader.getString());
                } else if ("status".equals(fieldName)) {
                    deserializedGuestAgentProperties.status = reader.getString();
                } else if ("customResourceName".equals(fieldName)) {
                    deserializedGuestAgentProperties.customResourceName = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedGuestAgentProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGuestAgentProperties;
        });
    }
}
