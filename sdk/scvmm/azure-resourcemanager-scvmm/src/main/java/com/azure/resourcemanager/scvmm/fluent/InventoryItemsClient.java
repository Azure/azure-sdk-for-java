// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.scvmm.fluent.models.InventoryItemInner;

/**
 * An instance of this class provides access to all the operations defined in InventoryItemsClient.
 */
public interface InventoryItemsClient {
    /**
     * Implements GET for the list of Inventory Items in the VMMServer.
     * 
     * Returns the list of inventoryItems in the given VmmServer.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a InventoryItem list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InventoryItemInner> listByVmmServer(String resourceGroupName, String vmmServerName);

    /**
     * Implements GET for the list of Inventory Items in the VMMServer.
     * 
     * Returns the list of inventoryItems in the given VmmServer.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a InventoryItem list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InventoryItemInner> listByVmmServer(String resourceGroupName, String vmmServerName, Context context);

    /**
     * Implements GET InventoryItem method.
     * 
     * Shows an inventory item.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @param inventoryItemResourceName Name of the inventoryItem.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return defines the inventory item along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<InventoryItemInner> getWithResponse(String resourceGroupName, String vmmServerName,
        String inventoryItemResourceName, Context context);

    /**
     * Implements GET InventoryItem method.
     * 
     * Shows an inventory item.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @param inventoryItemResourceName Name of the inventoryItem.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return defines the inventory item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InventoryItemInner get(String resourceGroupName, String vmmServerName, String inventoryItemResourceName);

    /**
     * Implements InventoryItem PUT method.
     * 
     * Create Or Update InventoryItem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @param inventoryItemResourceName Name of the inventoryItem.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return defines the inventory item along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<InventoryItemInner> createWithResponse(String resourceGroupName, String vmmServerName,
        String inventoryItemResourceName, InventoryItemInner resource, Context context);

    /**
     * Implements InventoryItem PUT method.
     * 
     * Create Or Update InventoryItem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @param inventoryItemResourceName Name of the inventoryItem.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return defines the inventory item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InventoryItemInner create(String resourceGroupName, String vmmServerName, String inventoryItemResourceName,
        InventoryItemInner resource);

    /**
     * Implements inventoryItem DELETE method.
     * 
     * Deletes an inventoryItem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @param inventoryItemResourceName Name of the inventoryItem.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String vmmServerName, String inventoryItemResourceName,
        Context context);

    /**
     * Implements inventoryItem DELETE method.
     * 
     * Deletes an inventoryItem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @param inventoryItemResourceName Name of the inventoryItem.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String vmmServerName, String inventoryItemResourceName);
}
