// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines the resource properties.
 */
@Fluent
public final class AvailabilitySetProperties implements JsonSerializable<AvailabilitySetProperties> {
    /*
     * Name of the availability set.
     */
    private String availabilitySetName;

    /*
     * ARM Id of the vmmServer resource in which this resource resides.
     */
    private String vmmServerId;

    /*
     * Provisioning state of the resource.
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of AvailabilitySetProperties class.
     */
    public AvailabilitySetProperties() {
    }

    /**
     * Get the availabilitySetName property: Name of the availability set.
     * 
     * @return the availabilitySetName value.
     */
    public String availabilitySetName() {
        return this.availabilitySetName;
    }

    /**
     * Set the availabilitySetName property: Name of the availability set.
     * 
     * @param availabilitySetName the availabilitySetName value to set.
     * @return the AvailabilitySetProperties object itself.
     */
    public AvailabilitySetProperties withAvailabilitySetName(String availabilitySetName) {
        this.availabilitySetName = availabilitySetName;
        return this;
    }

    /**
     * Get the vmmServerId property: ARM Id of the vmmServer resource in which this resource resides.
     * 
     * @return the vmmServerId value.
     */
    public String vmmServerId() {
        return this.vmmServerId;
    }

    /**
     * Set the vmmServerId property: ARM Id of the vmmServer resource in which this resource resides.
     * 
     * @param vmmServerId the vmmServerId value to set.
     * @return the AvailabilitySetProperties object itself.
     */
    public AvailabilitySetProperties withVmmServerId(String vmmServerId) {
        this.vmmServerId = vmmServerId;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("availabilitySetName", this.availabilitySetName);
        jsonWriter.writeStringField("vmmServerId", this.vmmServerId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AvailabilitySetProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AvailabilitySetProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AvailabilitySetProperties.
     */
    public static AvailabilitySetProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AvailabilitySetProperties deserializedAvailabilitySetProperties = new AvailabilitySetProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("availabilitySetName".equals(fieldName)) {
                    deserializedAvailabilitySetProperties.availabilitySetName = reader.getString();
                } else if ("vmmServerId".equals(fieldName)) {
                    deserializedAvailabilitySetProperties.vmmServerId = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedAvailabilitySetProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAvailabilitySetProperties;
        });
    }
}
