// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Specifies the vmmServer infrastructure specific update settings for the virtual machine instance.
 */
@Fluent
public final class InfrastructureProfileUpdate implements JsonSerializable<InfrastructureProfileUpdate> {
    /*
     * Type of checkpoint supported for the vm.
     */
    private String checkpointType;

    /**
     * Creates an instance of InfrastructureProfileUpdate class.
     */
    public InfrastructureProfileUpdate() {
    }

    /**
     * Get the checkpointType property: Type of checkpoint supported for the vm.
     * 
     * @return the checkpointType value.
     */
    public String checkpointType() {
        return this.checkpointType;
    }

    /**
     * Set the checkpointType property: Type of checkpoint supported for the vm.
     * 
     * @param checkpointType the checkpointType value to set.
     * @return the InfrastructureProfileUpdate object itself.
     */
    public InfrastructureProfileUpdate withCheckpointType(String checkpointType) {
        this.checkpointType = checkpointType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("checkpointType", this.checkpointType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InfrastructureProfileUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InfrastructureProfileUpdate if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InfrastructureProfileUpdate.
     */
    public static InfrastructureProfileUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InfrastructureProfileUpdate deserializedInfrastructureProfileUpdate = new InfrastructureProfileUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("checkpointType".equals(fieldName)) {
                    deserializedInfrastructureProfileUpdate.checkpointType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInfrastructureProfileUpdate;
        });
    }
}
