// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.scvmm.fluent.models.CloudInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of Cloud. */
public interface Cloud {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: The system data.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the extendedLocation property: The extended location.
     *
     * @return the extendedLocation value.
     */
    ExtendedLocation extendedLocation();

    /**
     * Gets the inventoryItemId property: Gets or sets the inventory Item ID for the resource.
     *
     * @return the inventoryItemId value.
     */
    String inventoryItemId();

    /**
     * Gets the uuid property: Unique ID of the cloud.
     *
     * @return the uuid value.
     */
    String uuid();

    /**
     * Gets the vmmServerId property: ARM Id of the vmmServer resource in which this resource resides.
     *
     * @return the vmmServerId value.
     */
    String vmmServerId();

    /**
     * Gets the cloudName property: Name of the cloud in VMMServer.
     *
     * @return the cloudName value.
     */
    String cloudName();

    /**
     * Gets the cloudCapacity property: Capacity of the cloud.
     *
     * @return the cloudCapacity value.
     */
    CloudCapacity cloudCapacity();

    /**
     * Gets the storageQoSPolicies property: List of QoS policies available for the cloud.
     *
     * @return the storageQoSPolicies value.
     */
    List<StorageQoSPolicy> storageQoSPolicies();

    /**
     * Gets the provisioningState property: Gets or sets the provisioning state.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.scvmm.fluent.models.CloudInner object.
     *
     * @return the inner object.
     */
    CloudInner innerModel();

    /** The entirety of the Cloud definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithExtendedLocation,
            DefinitionStages.WithCreate {
    }
    /** The Cloud definition stages. */
    interface DefinitionStages {
        /** The first stage of the Cloud definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the Cloud definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the Cloud definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group.
             * @return the next definition stage.
             */
            WithExtendedLocation withExistingResourceGroup(String resourceGroupName);
        }
        /** The stage of the Cloud definition allowing to specify extendedLocation. */
        interface WithExtendedLocation {
            /**
             * Specifies the extendedLocation property: The extended location..
             *
             * @param extendedLocation The extended location.
             * @return the next definition stage.
             */
            WithCreate withExtendedLocation(ExtendedLocation extendedLocation);
        }
        /**
         * The stage of the Cloud definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithInventoryItemId,
                DefinitionStages.WithUuid,
                DefinitionStages.WithVmmServerId {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Cloud create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Cloud create(Context context);
        }
        /** The stage of the Cloud definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the Cloud definition allowing to specify inventoryItemId. */
        interface WithInventoryItemId {
            /**
             * Specifies the inventoryItemId property: Gets or sets the inventory Item ID for the resource..
             *
             * @param inventoryItemId Gets or sets the inventory Item ID for the resource.
             * @return the next definition stage.
             */
            WithCreate withInventoryItemId(String inventoryItemId);
        }
        /** The stage of the Cloud definition allowing to specify uuid. */
        interface WithUuid {
            /**
             * Specifies the uuid property: Unique ID of the cloud..
             *
             * @param uuid Unique ID of the cloud.
             * @return the next definition stage.
             */
            WithCreate withUuid(String uuid);
        }
        /** The stage of the Cloud definition allowing to specify vmmServerId. */
        interface WithVmmServerId {
            /**
             * Specifies the vmmServerId property: ARM Id of the vmmServer resource in which this resource resides..
             *
             * @param vmmServerId ARM Id of the vmmServer resource in which this resource resides.
             * @return the next definition stage.
             */
            WithCreate withVmmServerId(String vmmServerId);
        }
    }
    /**
     * Begins update for the Cloud resource.
     *
     * @return the stage of resource update.
     */
    Cloud.Update update();

    /** The template for Cloud update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Cloud apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Cloud apply(Context context);
    }
    /** The Cloud update stages. */
    interface UpdateStages {
        /** The stage of the Cloud update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Cloud refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Cloud refresh(Context context);
}
