// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.scvmm.fluent.models.AvailabilitySetInner;
import com.azure.resourcemanager.scvmm.models.AvailabilitySetTagsUpdate;
import com.azure.resourcemanager.scvmm.models.ForceDelete;

/**
 * An instance of this class provides access to all the operations defined in AvailabilitySetsClient.
 */
public interface AvailabilitySetsClient {
    /**
     * Implements GET AvailabilitySets in a subscription.
     * 
     * List of AvailabilitySets in a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AvailabilitySet list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AvailabilitySetInner> list();

    /**
     * Implements GET AvailabilitySets in a subscription.
     * 
     * List of AvailabilitySets in a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AvailabilitySet list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AvailabilitySetInner> list(Context context);

    /**
     * Implements GET AvailabilitySets in a resource group.
     * 
     * List of AvailabilitySets in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AvailabilitySet list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AvailabilitySetInner> listByResourceGroup(String resourceGroupName);

    /**
     * Implements GET AvailabilitySets in a resource group.
     * 
     * List of AvailabilitySets in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AvailabilitySet list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AvailabilitySetInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets an AvailabilitySet.
     * 
     * Implements AvailabilitySet GET method.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the AvailabilitySets resource definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AvailabilitySetInner> getByResourceGroupWithResponse(String resourceGroupName,
        String availabilitySetResourceName, Context context);

    /**
     * Gets an AvailabilitySet.
     * 
     * Implements AvailabilitySet GET method.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the AvailabilitySets resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AvailabilitySetInner getByResourceGroup(String resourceGroupName, String availabilitySetResourceName);

    /**
     * Implements AvailabilitySets PUT method.
     * 
     * Onboards the ScVmm availability set as an Azure resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the AvailabilitySets resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AvailabilitySetInner>, AvailabilitySetInner> beginCreateOrUpdate(String resourceGroupName,
        String availabilitySetResourceName, AvailabilitySetInner resource);

    /**
     * Implements AvailabilitySets PUT method.
     * 
     * Onboards the ScVmm availability set as an Azure resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the AvailabilitySets resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AvailabilitySetInner>, AvailabilitySetInner> beginCreateOrUpdate(String resourceGroupName,
        String availabilitySetResourceName, AvailabilitySetInner resource, Context context);

    /**
     * Implements AvailabilitySets PUT method.
     * 
     * Onboards the ScVmm availability set as an Azure resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the AvailabilitySets resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AvailabilitySetInner createOrUpdate(String resourceGroupName, String availabilitySetResourceName,
        AvailabilitySetInner resource);

    /**
     * Implements AvailabilitySets PUT method.
     * 
     * Onboards the ScVmm availability set as an Azure resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the AvailabilitySets resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AvailabilitySetInner createOrUpdate(String resourceGroupName, String availabilitySetResourceName,
        AvailabilitySetInner resource, Context context);

    /**
     * Implements the AvailabilitySets PATCH method.
     * 
     * Updates the AvailabilitySets resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the AvailabilitySets resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AvailabilitySetInner>, AvailabilitySetInner> beginUpdate(String resourceGroupName,
        String availabilitySetResourceName, AvailabilitySetTagsUpdate properties);

    /**
     * Implements the AvailabilitySets PATCH method.
     * 
     * Updates the AvailabilitySets resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the AvailabilitySets resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AvailabilitySetInner>, AvailabilitySetInner> beginUpdate(String resourceGroupName,
        String availabilitySetResourceName, AvailabilitySetTagsUpdate properties, Context context);

    /**
     * Implements the AvailabilitySets PATCH method.
     * 
     * Updates the AvailabilitySets resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the AvailabilitySets resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AvailabilitySetInner update(String resourceGroupName, String availabilitySetResourceName,
        AvailabilitySetTagsUpdate properties);

    /**
     * Implements the AvailabilitySets PATCH method.
     * 
     * Updates the AvailabilitySets resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the AvailabilitySets resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AvailabilitySetInner update(String resourceGroupName, String availabilitySetResourceName,
        AvailabilitySetTagsUpdate properties, Context context);

    /**
     * Implements AvailabilitySet DELETE method.
     * 
     * Deregisters the ScVmm availability set from Azure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String availabilitySetResourceName);

    /**
     * Implements AvailabilitySet DELETE method.
     * 
     * Deregisters the ScVmm availability set from Azure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @param force Forces the resource to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String availabilitySetResourceName,
        ForceDelete force, Context context);

    /**
     * Implements AvailabilitySet DELETE method.
     * 
     * Deregisters the ScVmm availability set from Azure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String availabilitySetResourceName);

    /**
     * Implements AvailabilitySet DELETE method.
     * 
     * Deregisters the ScVmm availability set from Azure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param availabilitySetResourceName Name of the AvailabilitySet.
     * @param force Forces the resource to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String availabilitySetResourceName, ForceDelete force, Context context);
}
