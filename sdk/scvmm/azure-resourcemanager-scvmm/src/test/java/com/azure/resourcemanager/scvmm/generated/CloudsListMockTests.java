// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.Cloud;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"inventoryItemId\":\"vbroylaxxu\",\"uuid\":\"disdosfjbjsvgj\",\"vmmServerId\":\"hryvy\",\"cloudName\":\"t\",\"cloudCapacity\":{\"cpuCount\":87313434350967654,\"memoryMB\":4633131497917723717,\"vmCount\":3545804393254840755},\"storageQoSPolicies\":[{\"name\":\"tmvpdvjdhtt\",\"id\":\"efedxihchrphkm\",\"iopsMaximum\":3787352834540927110,\"iopsMinimum\":3614573403784565190,\"bandwidthLimit\":2282885407091220390,\"policyId\":\"bg\"},{\"name\":\"kylkdghrj\",\"id\":\"utlwxezwzhok\",\"iopsMaximum\":7624149688717867785,\"iopsMinimum\":2062475772346184475,\"bandwidthLimit\":5204919757963226438,\"policyId\":\"hgppipifhpfeoa\"},{\"name\":\"gcxtxj\",\"id\":\"heafidlt\",\"iopsMaximum\":2005438621034770208,\"iopsMinimum\":5739341399228629925,\"bandwidthLimit\":3530960182442104157,\"policyId\":\"h\"},{\"name\":\"ftxfkf\",\"id\":\"gpr\",\"iopsMaximum\":2543866141895923842,\"iopsMinimum\":5566902972165714794,\"bandwidthLimit\":7370264401437151122,\"policyId\":\"tgdqohmcwsldriz\"}],\"provisioningState\":\"Created\"},\"extendedLocation\":{\"type\":\"bra\",\"name\":\"libph\"},\"location\":\"zmizakakan\",\"tags\":{\"joylh\":\"dnjzh\"},\"id\":\"lmuoyxprimrsopte\",\"name\":\"cjmeislstvasy\",\"type\":\"wxdzaumweoohgu\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Cloud> response = manager.clouds().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zmizakakan", response.iterator().next().location());
        Assertions.assertEquals("dnjzh", response.iterator().next().tags().get("joylh"));
        Assertions.assertEquals("vbroylaxxu", response.iterator().next().properties().inventoryItemId());
        Assertions.assertEquals("disdosfjbjsvgj", response.iterator().next().properties().uuid());
        Assertions.assertEquals("hryvy", response.iterator().next().properties().vmmServerId());
        Assertions.assertEquals("bra", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("libph", response.iterator().next().extendedLocation().name());
    }
}
