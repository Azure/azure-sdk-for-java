// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.ExtendedLocation;
import com.azure.resourcemanager.scvmm.models.VirtualMachineTemplate;
import com.azure.resourcemanager.scvmm.models.VirtualMachineTemplateProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VirtualMachineTemplatesCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"inventoryItemId\":\"rhv\",\"uuid\":\"laiwdcxsmlzzh\",\"vmmServerId\":\"txetlgydl\",\"osType\":\"Linux\",\"osName\":\"n\",\"computerName\":\"xybafiqgea\",\"memoryMB\":755954714,\"cpuCount\":1031040752,\"limitCpuForMigration\":\"false\",\"dynamicMemoryEnabled\":\"false\",\"isCustomizable\":\"false\",\"dynamicMemoryMaxMB\":344545687,\"dynamicMemoryMinMB\":1514866149,\"isHighlyAvailable\":\"true\",\"generation\":2131258889,\"networkInterfaces\":[{\"name\":\"zegjonfhjirwgdn\",\"displayName\":\"brfkspz\",\"ipv4Addresses\":[\"tk\",\"jcitdigsxcdglj\",\"lkeuac\",\"tomflrytswfpf\"],\"ipv6Addresses\":[\"ycxnmskw\",\"qjjyslurl\",\"shhkvpedw\",\"slsrhmpq\"],\"macAddress\":\"wskondcbrwimuvqe\",\"virtualNetworkId\":\"so\",\"networkName\":\"rrleaesinuqt\",\"ipv4AddressType\":\"Static\",\"ipv6AddressType\":\"Static\",\"macAddressType\":\"Dynamic\",\"nicId\":\"hehcecybmrqb\"},{\"name\":\"bbmpxdlvykfre\",\"displayName\":\"rseqwjksghudgz\",\"ipv4Addresses\":[\"gjggsv\",\"u\",\"kxibdafh\",\"kmdyomkxfbvfbh\"],\"ipv6Addresses\":[\"rhpw\"],\"macAddress\":\"ddei\",\"virtualNetworkId\":\"wzovgk\",\"networkName\":\"muikjcjcaztbws\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Dynamic\",\"macAddressType\":\"Dynamic\",\"nicId\":\"omlik\"}],\"disks\":[{\"name\":\"czcswka\",\"displayName\":\"ejyfdvlvhbwrnfx\",\"diskId\":\"ddpqt\",\"diskSizeGB\":277353032,\"maxDiskSizeGB\":1265914547,\"bus\":1175019303,\"lun\":1049399081,\"busType\":\"nkcoeqswankltyt\",\"vhdType\":\"droznn\",\"volumeType\":\"rlktgjcsggu\",\"vhdFormatType\":\"eml\",\"templateDiskId\":\"waeeczgfb\",\"storageQoSPolicy\":{\"name\":\"lelssxblycsxzujk\",\"id\":\"lsmdesqplpvmjc\"},\"createDiffDisk\":\"false\"},{\"name\":\"bidyv\",\"displayName\":\"owx\",\"diskId\":\"piudeugfsxzecpa\",\"diskSizeGB\":1953646440,\"maxDiskSizeGB\":1277972193,\"bus\":1188038408,\"lun\":814359275,\"busType\":\"hxepmrutzna\",\"vhdType\":\"obns\",\"volumeType\":\"jdjltymkmvgui\",\"vhdFormatType\":\"wartspphkixkykxd\",\"templateDiskId\":\"j\",\"storageQoSPolicy\":{\"name\":\"mucfxhikkf\",\"id\":\"mymyincqlhri\"},\"createDiffDisk\":\"true\"},{\"name\":\"miii\",\"displayName\":\"gqcg\",\"diskId\":\"ugqkctotiowlxteq\",\"diskSizeGB\":234322459,\"maxDiskSizeGB\":452524587,\"bus\":1297111913,\"lun\":1109620342,\"busType\":\"kranblwphqlkcc\",\"vhdType\":\"gygqwah\",\"volumeType\":\"ulwgniiprglvawuw\",\"vhdFormatType\":\"ufypiv\",\"templateDiskId\":\"bbjpmcubkmif\",\"storageQoSPolicy\":{\"name\":\"ku\",\"id\":\"phavpmhbrb\"},\"createDiffDisk\":\"false\"}],\"provisioningState\":\"Succeeded\"},\"extendedLocation\":{\"type\":\"pbbttefjoknss\",\"name\":\"zqedikdfrdbi\"},\"location\":\"rjgeih\",\"tags\":{\"xmjpbyep\":\"ggwfiwz\"},\"id\":\"mgtvlj\",\"name\":\"rc\",\"type\":\"yfqi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        VirtualMachineTemplate response = manager.virtualMachineTemplates()
            .define("nwvroevytlyokrr")
            .withRegion("kolawjmjsmwrokc")
            .withExistingResourceGroup("voxczytpr")
            .withExtendedLocation(new ExtendedLocation().withType("zvhqjwtrhtgvg").withName("c"))
            .withTags(mapOf("afitlhguynuchlg", "zzzwy", "gzvlnsnn", "ltxdwhmozu", "agpgdph", "zfpafolpymwamxqz",
                "ejchcsrlz", "vdulajv"))
            .withProperties(new VirtualMachineTemplateProperties().withInventoryItemId("uxvnsasbcrymodi")
                .withUuid("xkl")
                .withVmmServerId("d"))
            .create();

        Assertions.assertEquals("rjgeih", response.location());
        Assertions.assertEquals("ggwfiwz", response.tags().get("xmjpbyep"));
        Assertions.assertEquals("rhv", response.properties().inventoryItemId());
        Assertions.assertEquals("laiwdcxsmlzzh", response.properties().uuid());
        Assertions.assertEquals("txetlgydl", response.properties().vmmServerId());
        Assertions.assertEquals("pbbttefjoknss", response.extendedLocation().type());
        Assertions.assertEquals("zqedikdfrdbi", response.extendedLocation().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
