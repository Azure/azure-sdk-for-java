// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.AvailabilitySet;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AvailabilitySetsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"availabilitySetName\":\"qvmmbn\",\"vmmServerId\":\"fr\",\"provisioningState\":\"Accepted\"},\"extendedLocation\":{\"type\":\"zmegnitgvk\",\"name\":\"zyqdrfegcealzx\"},\"location\":\"cansymoyqhlwigd\",\"tags\":{\"ajuwas\":\"kbxgom\",\"hzbezkgi\":\"vdaeyyguxakjsq\",\"vvjskgfmocwahp\":\"sidxasicdd\"},\"id\":\"gat\",\"name\":\"eaahhvjhhn\",\"type\":\"kzyb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AvailabilitySet response = manager.availabilitySets()
            .getByResourceGroupWithResponse("m", "yefrpmpdnqqska", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cansymoyqhlwigd", response.location());
        Assertions.assertEquals("kbxgom", response.tags().get("ajuwas"));
        Assertions.assertEquals("qvmmbn", response.properties().availabilitySetName());
        Assertions.assertEquals("fr", response.properties().vmmServerId());
        Assertions.assertEquals("zmegnitgvk", response.extendedLocation().type());
        Assertions.assertEquals("zyqdrfegcealzx", response.extendedLocation().name());
    }
}
