// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.fluent.models.CloudInner;
import com.azure.resourcemanager.scvmm.models.ExtendedLocation;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CloudInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"inventoryItemId\":\"vnipjox\",\"uuid\":\"nchgej\",\"vmmServerId\":\"odmailzyd\",\"cloudName\":\"o\",\"cloudCapacity\":{\"cpuCount\":8633403700755119900,\"memoryMB\":2292906968066822359,\"vmCount\":6489916514804709767},\"storageQoSPolicies\":[{\"name\":\"aqwi\",\"id\":\"sprozvcput\",\"iopsMaximum\":7394887039726775075,\"iopsMinimum\":4056057439565967156,\"bandwidthLimit\":6824570774226461804,\"policyId\":\"cmdv\"},{\"name\":\"hulsuuvmkjozkrwf\",\"id\":\"iodjp\",\"iopsMaximum\":548063352355670740,\"iopsMinimum\":8213986203807393703,\"bandwidthLimit\":2711659806667039097,\"policyId\":\"oqpsoa\"},{\"name\":\"tazak\",\"id\":\"lahbcryff\",\"iopsMaximum\":5484185669546199423,\"iopsMinimum\":6277908323972271328,\"bandwidthLimit\":3787783991465930358,\"policyId\":\"ojakhmsbzjhcrze\"}],\"provisioningState\":\"Canceled\"},\"extendedLocation\":{\"type\":\"lxaolthqtrgqjbp\",\"name\":\"fsinzgvfcjrwzoxx\"},\"location\":\"felluwfzitonpe\",\"tags\":{\"ypininm\":\"jkjlxofpdvhpfx\",\"po\":\"yhuybbkpod\",\"ognarxzxtheotus\":\"ginuvamih\"},\"id\":\"vyevcciqi\",\"name\":\"nhungbw\",\"type\":\"zrnf\"}")
                .toObject(CloudInner.class);
        Assertions.assertEquals("felluwfzitonpe", model.location());
        Assertions.assertEquals("jkjlxofpdvhpfx", model.tags().get("ypininm"));
        Assertions.assertEquals("lxaolthqtrgqjbp", model.extendedLocation().type());
        Assertions.assertEquals("fsinzgvfcjrwzoxx", model.extendedLocation().name());
        Assertions.assertEquals("vnipjox", model.inventoryItemId());
        Assertions.assertEquals("nchgej", model.uuid());
        Assertions.assertEquals("odmailzyd", model.vmmServerId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudInner model =
            new CloudInner()
                .withLocation("felluwfzitonpe")
                .withTags(mapOf("ypininm", "jkjlxofpdvhpfx", "po", "yhuybbkpod", "ognarxzxtheotus", "ginuvamih"))
                .withExtendedLocation(new ExtendedLocation().withType("lxaolthqtrgqjbp").withName("fsinzgvfcjrwzoxx"))
                .withInventoryItemId("vnipjox")
                .withUuid("nchgej")
                .withVmmServerId("odmailzyd");
        model = BinaryData.fromObject(model).toObject(CloudInner.class);
        Assertions.assertEquals("felluwfzitonpe", model.location());
        Assertions.assertEquals("jkjlxofpdvhpfx", model.tags().get("ypininm"));
        Assertions.assertEquals("lxaolthqtrgqjbp", model.extendedLocation().type());
        Assertions.assertEquals("fsinzgvfcjrwzoxx", model.extendedLocation().name());
        Assertions.assertEquals("vnipjox", model.inventoryItemId());
        Assertions.assertEquals("nchgej", model.uuid());
        Assertions.assertEquals("odmailzyd", model.vmmServerId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
