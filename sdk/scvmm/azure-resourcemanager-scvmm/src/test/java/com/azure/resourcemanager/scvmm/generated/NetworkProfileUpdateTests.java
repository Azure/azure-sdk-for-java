// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.AllocationMethod;
import com.azure.resourcemanager.scvmm.models.NetworkInterfaceUpdate;
import com.azure.resourcemanager.scvmm.models.NetworkProfileUpdate;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkProfileUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkProfileUpdate model =
            BinaryData
                .fromString(
                    "{\"networkInterfaces\":[{\"name\":\"hlhkjoqrvqqaatj\",\"macAddress\":\"rv\",\"virtualNetworkId\":\"upmfiibfg\",\"ipv4AddressType\":\"Static\",\"ipv6AddressType\":\"Dynamic\",\"macAddressType\":\"Dynamic\",\"nicId\":\"wxkvtkkgll\"},{\"name\":\"jygvjayvbl\",\"macAddress\":\"vkzuhbxvvyhgso\",\"virtualNetworkId\":\"yrqufegxuvwz\",\"ipv4AddressType\":\"Static\",\"ipv6AddressType\":\"Dynamic\",\"macAddressType\":\"Static\",\"nicId\":\"l\"},{\"name\":\"ngitvgbmhrixkwm\",\"macAddress\":\"jejveg\",\"virtualNetworkId\":\"bpnaixexccbdre\",\"ipv4AddressType\":\"Static\",\"ipv6AddressType\":\"Static\",\"macAddressType\":\"Static\",\"nicId\":\"rvqahqkghtpwi\"}]}")
                .toObject(NetworkProfileUpdate.class);
        Assertions.assertEquals("hlhkjoqrvqqaatj", model.networkInterfaces().get(0).name());
        Assertions.assertEquals("rv", model.networkInterfaces().get(0).macAddress());
        Assertions.assertEquals("upmfiibfg", model.networkInterfaces().get(0).virtualNetworkId());
        Assertions.assertEquals(AllocationMethod.STATIC, model.networkInterfaces().get(0).ipv4AddressType());
        Assertions.assertEquals(AllocationMethod.DYNAMIC, model.networkInterfaces().get(0).ipv6AddressType());
        Assertions.assertEquals(AllocationMethod.DYNAMIC, model.networkInterfaces().get(0).macAddressType());
        Assertions.assertEquals("wxkvtkkgll", model.networkInterfaces().get(0).nicId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkProfileUpdate model =
            new NetworkProfileUpdate()
                .withNetworkInterfaces(
                    Arrays
                        .asList(
                            new NetworkInterfaceUpdate()
                                .withName("hlhkjoqrvqqaatj")
                                .withMacAddress("rv")
                                .withVirtualNetworkId("upmfiibfg")
                                .withIpv4AddressType(AllocationMethod.STATIC)
                                .withIpv6AddressType(AllocationMethod.DYNAMIC)
                                .withMacAddressType(AllocationMethod.DYNAMIC)
                                .withNicId("wxkvtkkgll"),
                            new NetworkInterfaceUpdate()
                                .withName("jygvjayvbl")
                                .withMacAddress("vkzuhbxvvyhgso")
                                .withVirtualNetworkId("yrqufegxuvwz")
                                .withIpv4AddressType(AllocationMethod.STATIC)
                                .withIpv6AddressType(AllocationMethod.DYNAMIC)
                                .withMacAddressType(AllocationMethod.STATIC)
                                .withNicId("l"),
                            new NetworkInterfaceUpdate()
                                .withName("ngitvgbmhrixkwm")
                                .withMacAddress("jejveg")
                                .withVirtualNetworkId("bpnaixexccbdre")
                                .withIpv4AddressType(AllocationMethod.STATIC)
                                .withIpv6AddressType(AllocationMethod.STATIC)
                                .withMacAddressType(AllocationMethod.STATIC)
                                .withNicId("rvqahqkghtpwi")));
        model = BinaryData.fromObject(model).toObject(NetworkProfileUpdate.class);
        Assertions.assertEquals("hlhkjoqrvqqaatj", model.networkInterfaces().get(0).name());
        Assertions.assertEquals("rv", model.networkInterfaces().get(0).macAddress());
        Assertions.assertEquals("upmfiibfg", model.networkInterfaces().get(0).virtualNetworkId());
        Assertions.assertEquals(AllocationMethod.STATIC, model.networkInterfaces().get(0).ipv4AddressType());
        Assertions.assertEquals(AllocationMethod.DYNAMIC, model.networkInterfaces().get(0).ipv6AddressType());
        Assertions.assertEquals(AllocationMethod.DYNAMIC, model.networkInterfaces().get(0).macAddressType());
        Assertions.assertEquals("wxkvtkkgll", model.networkInterfaces().get(0).nicId());
    }
}
