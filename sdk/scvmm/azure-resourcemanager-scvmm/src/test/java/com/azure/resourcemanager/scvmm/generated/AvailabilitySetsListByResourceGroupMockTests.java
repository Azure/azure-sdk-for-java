// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.AvailabilitySet;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AvailabilitySetsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"availabilitySetName\":\"vmuvgpmu\",\"vmmServerId\":\"qsxvmhf\",\"provisioningState\":\"Failed\"},\"extendedLocation\":{\"type\":\"yihsasbhudypohyu\",\"name\":\"slynsqyrpfoo\"},\"location\":\"lttymsjn\",\"tags\":{\"ilaxhn\":\"dnfwqzdzg\",\"wivkxo\":\"hqlyvijo\",\"ti\":\"zunbixx\"},\"id\":\"vcpwpgclrc\",\"name\":\"vtsoxf\",\"type\":\"kenx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AvailabilitySet> response
            = manager.availabilitySets().listByResourceGroup("hhzjhfj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("lttymsjn", response.iterator().next().location());
        Assertions.assertEquals("dnfwqzdzg", response.iterator().next().tags().get("ilaxhn"));
        Assertions.assertEquals("vmuvgpmu", response.iterator().next().properties().availabilitySetName());
        Assertions.assertEquals("qsxvmhf", response.iterator().next().properties().vmmServerId());
        Assertions.assertEquals("yihsasbhudypohyu", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("slynsqyrpfoo", response.iterator().next().extendedLocation().name());
    }
}
