// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.Checkpoint;
import com.azure.resourcemanager.scvmm.models.InfrastructureProfile;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InfrastructureProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InfrastructureProfile model =
            BinaryData
                .fromString(
                    "{\"inventoryItemId\":\"aongbj\",\"vmmServerId\":\"tujitcjedft\",\"cloudId\":\"ae\",\"templateId\":\"ojvdcpzfoqo\",\"vmName\":\"cybxa\",\"uuid\":\"gszufoxciqopid\",\"lastRestoredVMCheckpoint\":{\"parentCheckpointID\":\"ciodhkhaz\",\"checkpointID\":\"hnzbonl\",\"name\":\"toego\",\"description\":\"wbw\"},\"checkpoints\":[{\"parentCheckpointID\":\"zcmrvexztvb\",\"checkpointID\":\"gsfraoyzkoow\",\"name\":\"mnguxawqaldsyu\",\"description\":\"imerqfobwyznk\"},{\"parentCheckpointID\":\"kutwpf\",\"checkpointID\":\"a\",\"name\":\"hrskdsnfd\",\"description\":\"oakgtdlmkkzev\"},{\"parentCheckpointID\":\"hewpusdsttwv\",\"checkpointID\":\"vbbejdcng\",\"name\":\"m\",\"description\":\"kufgmj\"}],\"checkpointType\":\"wr\",\"generation\":632499232,\"biosGuid\":\"wae\"}")
                .toObject(InfrastructureProfile.class);
        Assertions.assertEquals("aongbj", model.inventoryItemId());
        Assertions.assertEquals("tujitcjedft", model.vmmServerId());
        Assertions.assertEquals("ae", model.cloudId());
        Assertions.assertEquals("ojvdcpzfoqo", model.templateId());
        Assertions.assertEquals("cybxa", model.vmName());
        Assertions.assertEquals("gszufoxciqopid", model.uuid());
        Assertions.assertEquals("zcmrvexztvb", model.checkpoints().get(0).parentCheckpointId());
        Assertions.assertEquals("gsfraoyzkoow", model.checkpoints().get(0).checkpointId());
        Assertions.assertEquals("mnguxawqaldsyu", model.checkpoints().get(0).name());
        Assertions.assertEquals("imerqfobwyznk", model.checkpoints().get(0).description());
        Assertions.assertEquals("wr", model.checkpointType());
        Assertions.assertEquals(632499232, model.generation());
        Assertions.assertEquals("wae", model.biosGuid());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InfrastructureProfile model =
            new InfrastructureProfile()
                .withInventoryItemId("aongbj")
                .withVmmServerId("tujitcjedft")
                .withCloudId("ae")
                .withTemplateId("ojvdcpzfoqo")
                .withVmName("cybxa")
                .withUuid("gszufoxciqopid")
                .withCheckpoints(
                    Arrays
                        .asList(
                            new Checkpoint()
                                .withParentCheckpointId("zcmrvexztvb")
                                .withCheckpointId("gsfraoyzkoow")
                                .withName("mnguxawqaldsyu")
                                .withDescription("imerqfobwyznk"),
                            new Checkpoint()
                                .withParentCheckpointId("kutwpf")
                                .withCheckpointId("a")
                                .withName("hrskdsnfd")
                                .withDescription("oakgtdlmkkzev"),
                            new Checkpoint()
                                .withParentCheckpointId("hewpusdsttwv")
                                .withCheckpointId("vbbejdcng")
                                .withName("m")
                                .withDescription("kufgmj")))
                .withCheckpointType("wr")
                .withGeneration(632499232)
                .withBiosGuid("wae");
        model = BinaryData.fromObject(model).toObject(InfrastructureProfile.class);
        Assertions.assertEquals("aongbj", model.inventoryItemId());
        Assertions.assertEquals("tujitcjedft", model.vmmServerId());
        Assertions.assertEquals("ae", model.cloudId());
        Assertions.assertEquals("ojvdcpzfoqo", model.templateId());
        Assertions.assertEquals("cybxa", model.vmName());
        Assertions.assertEquals("gszufoxciqopid", model.uuid());
        Assertions.assertEquals("zcmrvexztvb", model.checkpoints().get(0).parentCheckpointId());
        Assertions.assertEquals("gsfraoyzkoow", model.checkpoints().get(0).checkpointId());
        Assertions.assertEquals("mnguxawqaldsyu", model.checkpoints().get(0).name());
        Assertions.assertEquals("imerqfobwyznk", model.checkpoints().get(0).description());
        Assertions.assertEquals("wr", model.checkpointType());
        Assertions.assertEquals(632499232, model.generation());
        Assertions.assertEquals("wae", model.biosGuid());
    }
}
