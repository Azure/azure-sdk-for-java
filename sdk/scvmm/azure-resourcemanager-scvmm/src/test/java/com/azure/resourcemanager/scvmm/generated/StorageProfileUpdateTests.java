// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.StorageProfileUpdate;
import com.azure.resourcemanager.scvmm.models.StorageQosPolicyDetails;
import com.azure.resourcemanager.scvmm.models.VirtualDiskUpdate;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class StorageProfileUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StorageProfileUpdate model = BinaryData.fromString(
            "{\"disks\":[{\"name\":\"mddystkiiux\",\"diskId\":\"yudxorrqnbp\",\"diskSizeGB\":999035629,\"bus\":2085551487,\"lun\":2041227856,\"busType\":\"rvkdvjsllrm\",\"vhdType\":\"d\",\"storageQoSPolicy\":{\"name\":\"t\",\"id\":\"n\"}}]}")
            .toObject(StorageProfileUpdate.class);
        Assertions.assertEquals("mddystkiiux", model.disks().get(0).name());
        Assertions.assertEquals("yudxorrqnbp", model.disks().get(0).diskId());
        Assertions.assertEquals(999035629, model.disks().get(0).diskSizeGB());
        Assertions.assertEquals(2085551487, model.disks().get(0).bus());
        Assertions.assertEquals(2041227856, model.disks().get(0).lun());
        Assertions.assertEquals("rvkdvjsllrm", model.disks().get(0).busType());
        Assertions.assertEquals("d", model.disks().get(0).vhdType());
        Assertions.assertEquals("t", model.disks().get(0).storageQosPolicy().name());
        Assertions.assertEquals("n", model.disks().get(0).storageQosPolicy().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StorageProfileUpdate model
            = new StorageProfileUpdate().withDisks(Arrays.asList(new VirtualDiskUpdate().withName("mddystkiiux")
                .withDiskId("yudxorrqnbp")
                .withDiskSizeGB(999035629)
                .withBus(2085551487)
                .withLun(2041227856)
                .withBusType("rvkdvjsllrm")
                .withVhdType("d")
                .withStorageQosPolicy(new StorageQosPolicyDetails().withName("t").withId("n"))));
        model = BinaryData.fromObject(model).toObject(StorageProfileUpdate.class);
        Assertions.assertEquals("mddystkiiux", model.disks().get(0).name());
        Assertions.assertEquals("yudxorrqnbp", model.disks().get(0).diskId());
        Assertions.assertEquals(999035629, model.disks().get(0).diskSizeGB());
        Assertions.assertEquals(2085551487, model.disks().get(0).bus());
        Assertions.assertEquals(2041227856, model.disks().get(0).lun());
        Assertions.assertEquals("rvkdvjsllrm", model.disks().get(0).busType());
        Assertions.assertEquals("d", model.disks().get(0).vhdType());
        Assertions.assertEquals("t", model.disks().get(0).storageQosPolicy().name());
        Assertions.assertEquals("n", model.disks().get(0).storageQosPolicy().id());
    }
}
