// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.Cloud;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"inventoryItemId\":\"wm\",\"uuid\":\"mebwjscjpah\",\"vmmServerId\":\"veabfqxnmwmqtib\",\"cloudName\":\"ijddtvqc\",\"cloudCapacity\":{\"cpuCount\":3995165957523237174,\"memoryMB\":4810009338488600409,\"vmCount\":3344718342128535077},\"storageQoSPolicies\":[{\"name\":\"eekpndz\",\"id\":\"pmudqmeqwig\",\"iopsMaximum\":1602038748333470502,\"iopsMinimum\":2895883377575243380,\"bandwidthLimit\":191813532014871887,\"policyId\":\"e\"},{\"name\":\"pmzznrtffya\",\"id\":\"tmhheioqa\",\"iopsMaximum\":730726349973993242,\"iopsMinimum\":7801083553230678005,\"bandwidthLimit\":4758857143001364501,\"policyId\":\"xpdlcgqlsis\"},{\"name\":\"qfrddgam\",\"id\":\"hiosrsjuiv\",\"iopsMaximum\":455092351262610963,\"iopsMinimum\":572361619606348416,\"bandwidthLimit\":7426719311659683930,\"policyId\":\"hcz\"},{\"name\":\"rxzbujr\",\"id\":\"hqvwrevkhgnlnzon\",\"iopsMaximum\":432499304266915638,\"iopsMinimum\":2005313689678276388,\"bandwidthLimit\":6253741023246690907,\"policyId\":\"jtszcof\"}],\"provisioningState\":\"Succeeded\"},\"extendedLocation\":{\"type\":\"tdhgbjkvrelj\",\"name\":\"murvzm\"},\"location\":\"vuanashcxlp\",\"tags\":{\"zsdbccxjmon\":\"rbdkelvidiz\",\"uqj\":\"dgnwncypuuwwlt\"},\"id\":\"tzenk\",\"name\":\"if\",\"type\":\"zhmkdasvflyh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Cloud> response
            = manager.clouds().listByResourceGroup("fuzboyjathwtzolb", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vuanashcxlp", response.iterator().next().location());
        Assertions.assertEquals("rbdkelvidiz", response.iterator().next().tags().get("zsdbccxjmon"));
        Assertions.assertEquals("wm", response.iterator().next().properties().inventoryItemId());
        Assertions.assertEquals("mebwjscjpah", response.iterator().next().properties().uuid());
        Assertions.assertEquals("veabfqxnmwmqtib", response.iterator().next().properties().vmmServerId());
        Assertions.assertEquals("tdhgbjkvrelj", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("murvzm", response.iterator().next().extendedLocation().name());
    }
}
