// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.DynamicMemoryEnabled;
import com.azure.resourcemanager.scvmm.models.HardwareProfileUpdate;
import com.azure.resourcemanager.scvmm.models.LimitCpuForMigration;
import org.junit.jupiter.api.Assertions;

public final class HardwareProfileUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HardwareProfileUpdate model =
            BinaryData
                .fromString(
                    "{\"memoryMB\":1701702807,\"cpuCount\":867678631,\"limitCpuForMigration\":\"false\",\"dynamicMemoryEnabled\":\"false\",\"dynamicMemoryMaxMB\":313573135,\"dynamicMemoryMinMB\":897249136}")
                .toObject(HardwareProfileUpdate.class);
        Assertions.assertEquals(1701702807, model.memoryMB());
        Assertions.assertEquals(867678631, model.cpuCount());
        Assertions.assertEquals(LimitCpuForMigration.FALSE, model.limitCpuForMigration());
        Assertions.assertEquals(DynamicMemoryEnabled.FALSE, model.dynamicMemoryEnabled());
        Assertions.assertEquals(313573135, model.dynamicMemoryMaxMB());
        Assertions.assertEquals(897249136, model.dynamicMemoryMinMB());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HardwareProfileUpdate model =
            new HardwareProfileUpdate()
                .withMemoryMB(1701702807)
                .withCpuCount(867678631)
                .withLimitCpuForMigration(LimitCpuForMigration.FALSE)
                .withDynamicMemoryEnabled(DynamicMemoryEnabled.FALSE)
                .withDynamicMemoryMaxMB(313573135)
                .withDynamicMemoryMinMB(897249136);
        model = BinaryData.fromObject(model).toObject(HardwareProfileUpdate.class);
        Assertions.assertEquals(1701702807, model.memoryMB());
        Assertions.assertEquals(867678631, model.cpuCount());
        Assertions.assertEquals(LimitCpuForMigration.FALSE, model.limitCpuForMigration());
        Assertions.assertEquals(DynamicMemoryEnabled.FALSE, model.dynamicMemoryEnabled());
        Assertions.assertEquals(313573135, model.dynamicMemoryMaxMB());
        Assertions.assertEquals(897249136, model.dynamicMemoryMinMB());
    }
}
