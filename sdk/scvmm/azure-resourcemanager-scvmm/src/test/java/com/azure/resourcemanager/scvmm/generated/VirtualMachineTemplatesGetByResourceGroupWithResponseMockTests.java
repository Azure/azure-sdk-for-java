// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpRequest;
import com.azure.core.http.HttpResponse;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.VirtualMachineTemplate;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Mockito;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

public final class VirtualMachineTemplatesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        HttpClient httpClient = Mockito.mock(HttpClient.class);
        HttpResponse httpResponse = Mockito.mock(HttpResponse.class);
        ArgumentCaptor<HttpRequest> httpRequest = ArgumentCaptor.forClass(HttpRequest.class);

        String responseStr =
            "{\"properties\":{\"inventoryItemId\":\"xgsg\",\"uuid\":\"fgzdjtxvz\",\"vmmServerId\":\"bqvgaqv\",\"osType\":\"Windows\",\"osName\":\"cqusr\",\"computerName\":\"etnwsdtutnw\",\"memoryMB\":1517277198,\"cpuCount\":1691017664,\"limitCpuForMigration\":\"true\",\"dynamicMemoryEnabled\":\"true\",\"isCustomizable\":\"true\",\"dynamicMemoryMaxMB\":1266373340,\"dynamicMemoryMinMB\":1222378397,\"isHighlyAvailable\":\"true\",\"generation\":1769358490,\"networkInterfaces\":[{\"name\":\"ukuqgsj\",\"displayName\":\"undxgketw\",\"ipv4Addresses\":[\"zjhfjmhvv\",\"uvgp\"],\"ipv6Addresses\":[\"eqsx\",\"mhfbuzjy\"],\"macAddress\":\"sasbhu\",\"virtualNetworkId\":\"pohyuemslynsqyr\",\"networkName\":\"oobrlttyms\",\"ipv4AddressType\":\"Static\",\"ipv6AddressType\":\"Static\",\"macAddressType\":\"Static\",\"nicId\":\"wqzdzgtilaxhnfhq\"},{\"name\":\"vi\",\"displayName\":\"uwivkxoy\",\"ipv4Addresses\":[\"bixxrt\",\"kvcpwpgclr\"],\"ipv6Addresses\":[\"tso\",\"frkenxpmyyefrp\"],\"macAddress\":\"dnqqskawaoqvmmb\",\"virtualNetworkId\":\"qfr\",\"networkName\":\"lkzmegnitgvkxl\",\"ipv4AddressType\":\"Static\",\"ipv6AddressType\":\"Dynamic\",\"macAddressType\":\"Dynamic\",\"nicId\":\"cealzxwh\"},{\"name\":\"nsymoyqhlwigd\",\"displayName\":\"bkbxgomfa\",\"ipv4Addresses\":[\"asqvd\",\"e\",\"y\"],\"ipv6Addresses\":[\"akjsqz\",\"zbezkgimsidxasic\",\"dyvvjskgfmocwahp\"],\"macAddress\":\"atjeaahh\",\"virtualNetworkId\":\"hhnakzybbj\",\"networkName\":\"dj\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Static\",\"macAddressType\":\"Static\",\"nicId\":\"xevbl\"},{\"name\":\"ednljl\",\"displayName\":\"euaulxu\",\"ipv4Addresses\":[\"jbnkpp\",\"ynenlsvxeizz\"],\"ipv6Addresses\":[\"lnsrmffe\",\"cxcktpi\",\"merteeammxqiek\"],\"macAddress\":\"zddrt\",\"virtualNetworkId\":\"doj\",\"networkName\":\"xv\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Static\",\"macAddressType\":\"Dynamic\",\"nicId\":\"svecuijpxtxs\"}],\"disks\":[{\"name\":\"tujwsawdd\",\"displayName\":\"babxvitit\",\"diskId\":\"zeexavoxtfgle\",\"diskSizeGB\":36693026,\"maxDiskSizeGB\":590870598,\"bus\":515369639,\"lun\":610995974,\"busType\":\"q\",\"vhdType\":\"sfj\",\"volumeType\":\"b\",\"vhdFormatType\":\"hhxud\",\"templateDiskId\":\"vodhtn\",\"storageQoSPolicy\":{\"name\":\"ud\",\"id\":\"m\"},\"createDiffDisk\":\"false\"},{\"name\":\"kdlpa\",\"displayName\":\"rcxfailcfxwmdb\",\"diskId\":\"dfgsftufqobrj\",\"diskSizeGB\":427496891,\"maxDiskSizeGB\":1823557197,\"bus\":639402848,\"lun\":682130924,\"busType\":\"hxkizvytnrzv\",\"vhdType\":\"jraaeranokqguk\",\"volumeType\":\"qnvb\",\"vhdFormatType\":\"ylaxxulcdi\",\"templateDiskId\":\"osfjbjsv\",\"storageQoSPolicy\":{\"name\":\"whryvycytdcl\",\"id\":\"ccknfnwmbtmvp\"},\"createDiffDisk\":\"true\"},{\"name\":\"httz\",\"displayName\":\"fedxihchrphkm\",\"diskId\":\"jdqnsdfzpbgt\",\"diskSizeGB\":259124213,\"maxDiskSizeGB\":1290363462,\"bus\":50734303,\"lun\":1510392898,\"busType\":\"euutlwxezwzh\",\"vhdType\":\"vbwnhhtq\",\"volumeType\":\"ehgpp\",\"vhdFormatType\":\"ifhpf\",\"templateDiskId\":\"ajvgcxtxjcsheafi\",\"storageQoSPolicy\":{\"name\":\"ugsresmkssjhoi\",\"id\":\"xfkfwegprhptill\"},\"createDiffDisk\":\"false\"}],\"provisioningState\":\"Deleting\"},\"extendedLocation\":{\"type\":\"gdqoh\",\"name\":\"wsldrizetpwbr\"},\"location\":\"llibphbqzmizak\",\"tags\":{\"oylhjlmuoyxprimr\":\"nkjpdnjzha\",\"eislstvasylwx\":\"opteecj\",\"eoohguufuzboyj\":\"zaum\"},\"id\":\"thwtzol\",\"name\":\"a\",\"type\":\"mwmdxmebwjscjpa\"}";

        Mockito.when(httpResponse.getStatusCode()).thenReturn(200);
        Mockito.when(httpResponse.getHeaders()).thenReturn(new HttpHeaders());
        Mockito
            .when(httpResponse.getBody())
            .thenReturn(Flux.just(ByteBuffer.wrap(responseStr.getBytes(StandardCharsets.UTF_8))));
        Mockito
            .when(httpResponse.getBodyAsByteArray())
            .thenReturn(Mono.just(responseStr.getBytes(StandardCharsets.UTF_8)));
        Mockito
            .when(httpClient.send(httpRequest.capture(), Mockito.any()))
            .thenReturn(
                Mono
                    .defer(
                        () -> {
                            Mockito.when(httpResponse.getRequest()).thenReturn(httpRequest.getValue());
                            return Mono.just(httpResponse);
                        }));

        ScvmmManager manager =
            ScvmmManager
                .configure()
                .withHttpClient(httpClient)
                .authenticate(
                    tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                    new AzureProfile("", "", AzureEnvironment.AZURE));

        VirtualMachineTemplate response =
            manager
                .virtualMachineTemplates()
                .getByResourceGroupWithResponse("fiwrxgkn", "uvyinzqodfvpgs", com.azure.core.util.Context.NONE)
                .getValue();

        Assertions.assertEquals("llibphbqzmizak", response.location());
        Assertions.assertEquals("nkjpdnjzha", response.tags().get("oylhjlmuoyxprimr"));
        Assertions.assertEquals("gdqoh", response.extendedLocation().type());
        Assertions.assertEquals("wsldrizetpwbr", response.extendedLocation().name());
        Assertions.assertEquals("xgsg", response.inventoryItemId());
        Assertions.assertEquals("fgzdjtxvz", response.uuid());
        Assertions.assertEquals("bqvgaqv", response.vmmServerId());
    }
}
