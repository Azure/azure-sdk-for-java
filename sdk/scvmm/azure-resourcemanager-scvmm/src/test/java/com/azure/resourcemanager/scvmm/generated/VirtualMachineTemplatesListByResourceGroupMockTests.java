// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.VirtualMachineTemplate;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VirtualMachineTemplatesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"inventoryItemId\":\"ywwpgjxsnptfuj\",\"uuid\":\"cg\",\"vmmServerId\":\"o\",\"osType\":\"Other\",\"osName\":\"aqutdewemxswvruu\",\"computerName\":\"zjgehkfkim\",\"memoryMB\":355142126,\"cpuCount\":2101404470,\"limitCpuForMigration\":\"true\",\"dynamicMemoryEnabled\":\"true\",\"isCustomizable\":\"false\",\"dynamicMemoryMaxMB\":1426347910,\"dynamicMemoryMinMB\":758637615,\"isHighlyAvailable\":\"false\",\"generation\":800032229,\"networkInterfaces\":[{\"name\":\"monstshiyxgve\",\"displayName\":\"clduc\",\"ipv4Addresses\":[\"rds\",\"uwc\",\"b\"],\"ipv6Addresses\":[\"stmninwjizcilng\",\"gshejjtbxqmulux\",\"xqzv\",\"ers\"],\"macAddress\":\"cucrwnamikze\",\"virtualNetworkId\":\"qbsms\",\"networkName\":\"iqg\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Dynamic\",\"macAddressType\":\"Dynamic\",\"nicId\":\"swhvhczznvfbycj\"},{\"name\":\"jww\",\"displayName\":\"z\",\"ipv4Addresses\":[\"wmxqhndvnoamlds\",\"haohdjhhflzokxc\",\"xpelnjetagltsx\",\"atftgzpnpbsw\"],\"ipv6Addresses\":[\"loccsrmozihm\",\"pgawtxxpkyjcxcjx\",\"rytfmpcycil\"],\"macAddress\":\"caykggnoxuz\",\"virtualNetworkId\":\"ksxwpnd\",\"networkName\":\"pfnznthjtwkj\",\"ipv4AddressType\":\"Static\",\"ipv6AddressType\":\"Static\",\"macAddressType\":\"Dynamic\",\"nicId\":\"oamktcq\"},{\"name\":\"smgbzahgxqdl\",\"displayName\":\"tlt\",\"ipv4Addresses\":[\"rltzkatbhjmz\",\"nbsoqeqalarv\",\"agunbtgfebw\",\"nbmhyree\"],\"ipv6Addresses\":[\"qavbpdqmj\",\"lyyzglgouwtlmjj\",\"uojqt\"],\"macAddress\":\"axkjeytunlbfjk\",\"virtualNetworkId\":\"u\",\"networkName\":\"kqbh\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Dynamic\",\"macAddressType\":\"Dynamic\",\"nicId\":\"hdenxaulk\"},{\"name\":\"kdk\",\"displayName\":\"mjnnawtq\",\"ipv4Addresses\":[\"xuckpggqoweyir\",\"hlisngw\",\"lqqmpiz\"],\"ipv6Addresses\":[\"n\"],\"macAddress\":\"xpxiwfcngjs\",\"virtualNetworkId\":\"sii\",\"networkName\":\"mkzjvkviir\",\"ipv4AddressType\":\"Static\",\"ipv6AddressType\":\"Dynamic\",\"macAddressType\":\"Dynamic\",\"nicId\":\"pgratzvzbglbyvi\"}],\"disks\":[{\"name\":\"brxkjzwr\",\"displayName\":\"ffm\",\"diskId\":\"kwfbkgo\",\"diskSizeGB\":277381231,\"maxDiskSizeGB\":1082965161,\"bus\":1662564263,\"lun\":1179999545,\"busType\":\"izqaclnapxbiyg\",\"vhdType\":\"gjkn\",\"volumeType\":\"mfcttux\",\"vhdFormatType\":\"yilflqoiquvrehmr\",\"templateDiskId\":\"hvsujztc\",\"storageQoSPolicy\":{\"name\":\"qjtwhauu\",\"id\":\"prnjletlxsmr\"},\"createDiffDisk\":\"true\"},{\"name\":\"uifamowaziynknlq\",\"displayName\":\"dvpiwh\",\"diskId\":\"szdtmaajquh\",\"diskSizeGB\":578758071,\"maxDiskSizeGB\":1621545899,\"bus\":1529964299,\"lun\":521294772,\"busType\":\"g\",\"vhdType\":\"mzyospspshck\",\"volumeType\":\"yjpmspbpssdfppyo\",\"vhdFormatType\":\"ieyujtvc\",\"templateDiskId\":\"cnyxrxmunjd\",\"storageQoSPolicy\":{\"name\":\"lnkvxlx\",\"id\":\"glqivbgkcv\"},\"createDiffDisk\":\"false\"},{\"name\":\"vuqd\",\"displayName\":\"voniypfp\",\"diskId\":\"cpzgpxtiv\",\"diskSizeGB\":1447599159,\"maxDiskSizeGB\":666978054,\"bus\":711664414,\"lun\":1731512826,\"busType\":\"jxgpnrhgovfg\",\"vhdType\":\"kqmhhaowjr\",\"volumeType\":\"vuporqzdfuydzv\",\"vhdFormatType\":\"vxcnqmxqps\",\"templateDiskId\":\"kmvkhl\",\"storageQoSPolicy\":{\"name\":\"hbemzq\",\"id\":\"sz\"},\"createDiffDisk\":\"false\"},{\"name\":\"tglxx\",\"displayName\":\"jfpgpicrmn\",\"diskId\":\"rgmqgjs\",\"diskSizeGB\":1587486803,\"maxDiskSizeGB\":1307017173,\"bus\":704061882,\"lun\":1162167874,\"busType\":\"odth\",\"vhdType\":\"qgvriibakcla\",\"volumeType\":\"fr\",\"vhdFormatType\":\"ousxauzlwvsgmw\",\"templateDiskId\":\"qf\",\"storageQoSPolicy\":{\"name\":\"vux\",\"id\":\"kjsvthnwpzteko\"},\"createDiffDisk\":\"true\"}],\"provisioningState\":\"Created\"},\"extendedLocation\":{\"type\":\"attgplu\",\"name\":\"otangcfhnykzc\"},\"location\":\"swvxwlmzqwmv\",\"tags\":{\"cvclxynpdk\":\"jmxmcuqud\",\"neiknpg\":\"gfabuiyjibuzphdu\",\"btozipqwje\":\"xgjiuqh\",\"xxgewpk\":\"mur\"},\"id\":\"vqylkmqpzoyhl\",\"name\":\"bcg\",\"type\":\"gcl\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<VirtualMachineTemplate> response
            = manager.virtualMachineTemplates().listByResourceGroup("bffmbmxz", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("swvxwlmzqwmv", response.iterator().next().location());
        Assertions.assertEquals("jmxmcuqud", response.iterator().next().tags().get("cvclxynpdk"));
        Assertions.assertEquals("ywwpgjxsnptfuj", response.iterator().next().properties().inventoryItemId());
        Assertions.assertEquals("cg", response.iterator().next().properties().uuid());
        Assertions.assertEquals("o", response.iterator().next().properties().vmmServerId());
        Assertions.assertEquals("attgplu", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("otangcfhnykzc", response.iterator().next().extendedLocation().name());
    }
}
