// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.CreateDiffDisk;
import com.azure.resourcemanager.scvmm.models.StorageQosPolicyDetails;
import com.azure.resourcemanager.scvmm.models.VirtualDisk;
import org.junit.jupiter.api.Assertions;

public final class VirtualDiskTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualDisk model = BinaryData.fromString(
            "{\"name\":\"uqktap\",\"displayName\":\"wgcu\",\"diskId\":\"tumkdosvqwhbm\",\"diskSizeGB\":1497620633,\"maxDiskSizeGB\":398280406,\"bus\":1089342550,\"lun\":763703494,\"busType\":\"bmbexppbhtqqro\",\"vhdType\":\"p\",\"volumeType\":\"s\",\"vhdFormatType\":\"gbquxigj\",\"templateDiskId\":\"gzjaoyfhrtxilne\",\"storageQoSPolicy\":{\"name\":\"jysvl\",\"id\":\"uvfqawrlyxwj\"},\"createDiffDisk\":\"false\"}")
            .toObject(VirtualDisk.class);
        Assertions.assertEquals("uqktap", model.name());
        Assertions.assertEquals("tumkdosvqwhbm", model.diskId());
        Assertions.assertEquals(1497620633, model.diskSizeGB());
        Assertions.assertEquals(1089342550, model.bus());
        Assertions.assertEquals(763703494, model.lun());
        Assertions.assertEquals("bmbexppbhtqqro", model.busType());
        Assertions.assertEquals("p", model.vhdType());
        Assertions.assertEquals("gzjaoyfhrtxilne", model.templateDiskId());
        Assertions.assertEquals("jysvl", model.storageQosPolicy().name());
        Assertions.assertEquals("uvfqawrlyxwj", model.storageQosPolicy().id());
        Assertions.assertEquals(CreateDiffDisk.FALSE, model.createDiffDisk());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualDisk model = new VirtualDisk().withName("uqktap")
            .withDiskId("tumkdosvqwhbm")
            .withDiskSizeGB(1497620633)
            .withBus(1089342550)
            .withLun(763703494)
            .withBusType("bmbexppbhtqqro")
            .withVhdType("p")
            .withTemplateDiskId("gzjaoyfhrtxilne")
            .withStorageQosPolicy(new StorageQosPolicyDetails().withName("jysvl").withId("uvfqawrlyxwj"))
            .withCreateDiffDisk(CreateDiffDisk.FALSE);
        model = BinaryData.fromObject(model).toObject(VirtualDisk.class);
        Assertions.assertEquals("uqktap", model.name());
        Assertions.assertEquals("tumkdosvqwhbm", model.diskId());
        Assertions.assertEquals(1497620633, model.diskSizeGB());
        Assertions.assertEquals(1089342550, model.bus());
        Assertions.assertEquals(763703494, model.lun());
        Assertions.assertEquals("bmbexppbhtqqro", model.busType());
        Assertions.assertEquals("p", model.vhdType());
        Assertions.assertEquals("gzjaoyfhrtxilne", model.templateDiskId());
        Assertions.assertEquals("jysvl", model.storageQosPolicy().name());
        Assertions.assertEquals("uvfqawrlyxwj", model.storageQosPolicy().id());
        Assertions.assertEquals(CreateDiffDisk.FALSE, model.createDiffDisk());
    }
}
