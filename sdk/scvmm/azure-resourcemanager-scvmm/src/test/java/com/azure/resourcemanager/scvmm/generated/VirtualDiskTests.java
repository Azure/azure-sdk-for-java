// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.CreateDiffDisk;
import com.azure.resourcemanager.scvmm.models.StorageQoSPolicyDetails;
import com.azure.resourcemanager.scvmm.models.VirtualDisk;
import org.junit.jupiter.api.Assertions;

public final class VirtualDiskTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualDisk model =
            BinaryData
                .fromString(
                    "{\"name\":\"ww\",\"displayName\":\"yqbexrmcqibycno\",\"diskId\":\"knme\",\"diskSizeGB\":1391032405,\"maxDiskSizeGB\":1995543121,\"bus\":488274582,\"lun\":673503494,\"busType\":\"jyzhpvgq\",\"vhdType\":\"j\",\"volumeType\":\"xdjzlmwlxk\",\"vhdFormatType\":\"gfhzovawjvzunlut\",\"templateDiskId\":\"n\",\"storageQoSPolicy\":{\"name\":\"xipeilpjzuaejx\",\"id\":\"ltskzbbtd\"},\"createDiffDisk\":\"false\"}")
                .toObject(VirtualDisk.class);
        Assertions.assertEquals("ww", model.name());
        Assertions.assertEquals("knme", model.diskId());
        Assertions.assertEquals(1391032405, model.diskSizeGB());
        Assertions.assertEquals(488274582, model.bus());
        Assertions.assertEquals(673503494, model.lun());
        Assertions.assertEquals("jyzhpvgq", model.busType());
        Assertions.assertEquals("j", model.vhdType());
        Assertions.assertEquals("n", model.templateDiskId());
        Assertions.assertEquals("xipeilpjzuaejx", model.storageQoSPolicy().name());
        Assertions.assertEquals("ltskzbbtd", model.storageQoSPolicy().id());
        Assertions.assertEquals(CreateDiffDisk.FALSE, model.createDiffDisk());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualDisk model =
            new VirtualDisk()
                .withName("ww")
                .withDiskId("knme")
                .withDiskSizeGB(1391032405)
                .withBus(488274582)
                .withLun(673503494)
                .withBusType("jyzhpvgq")
                .withVhdType("j")
                .withTemplateDiskId("n")
                .withStorageQoSPolicy(new StorageQoSPolicyDetails().withName("xipeilpjzuaejx").withId("ltskzbbtd"))
                .withCreateDiffDisk(CreateDiffDisk.FALSE);
        model = BinaryData.fromObject(model).toObject(VirtualDisk.class);
        Assertions.assertEquals("ww", model.name());
        Assertions.assertEquals("knme", model.diskId());
        Assertions.assertEquals(1391032405, model.diskSizeGB());
        Assertions.assertEquals(488274582, model.bus());
        Assertions.assertEquals(673503494, model.lun());
        Assertions.assertEquals("jyzhpvgq", model.busType());
        Assertions.assertEquals("j", model.vhdType());
        Assertions.assertEquals("n", model.templateDiskId());
        Assertions.assertEquals("xipeilpjzuaejx", model.storageQoSPolicy().name());
        Assertions.assertEquals("ltskzbbtd", model.storageQoSPolicy().id());
        Assertions.assertEquals(CreateDiffDisk.FALSE, model.createDiffDisk());
    }
}
