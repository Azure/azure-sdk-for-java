// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.DynamicMemoryEnabled;
import com.azure.resourcemanager.scvmm.models.HardwareProfile;
import com.azure.resourcemanager.scvmm.models.LimitCpuForMigration;
import org.junit.jupiter.api.Assertions;

public final class HardwareProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HardwareProfile model =
            BinaryData
                .fromString(
                    "{\"memoryMB\":2032728059,\"cpuCount\":1528851064,\"limitCpuForMigration\":\"true\",\"dynamicMemoryEnabled\":\"false\",\"dynamicMemoryMaxMB\":641008490,\"dynamicMemoryMinMB\":322973840,\"isHighlyAvailable\":\"true\"}")
                .toObject(HardwareProfile.class);
        Assertions.assertEquals(2032728059, model.memoryMB());
        Assertions.assertEquals(1528851064, model.cpuCount());
        Assertions.assertEquals(LimitCpuForMigration.TRUE, model.limitCpuForMigration());
        Assertions.assertEquals(DynamicMemoryEnabled.FALSE, model.dynamicMemoryEnabled());
        Assertions.assertEquals(641008490, model.dynamicMemoryMaxMB());
        Assertions.assertEquals(322973840, model.dynamicMemoryMinMB());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HardwareProfile model =
            new HardwareProfile()
                .withMemoryMB(2032728059)
                .withCpuCount(1528851064)
                .withLimitCpuForMigration(LimitCpuForMigration.TRUE)
                .withDynamicMemoryEnabled(DynamicMemoryEnabled.FALSE)
                .withDynamicMemoryMaxMB(641008490)
                .withDynamicMemoryMinMB(322973840);
        model = BinaryData.fromObject(model).toObject(HardwareProfile.class);
        Assertions.assertEquals(2032728059, model.memoryMB());
        Assertions.assertEquals(1528851064, model.cpuCount());
        Assertions.assertEquals(LimitCpuForMigration.TRUE, model.limitCpuForMigration());
        Assertions.assertEquals(DynamicMemoryEnabled.FALSE, model.dynamicMemoryEnabled());
        Assertions.assertEquals(641008490, model.dynamicMemoryMaxMB());
        Assertions.assertEquals(322973840, model.dynamicMemoryMinMB());
    }
}
