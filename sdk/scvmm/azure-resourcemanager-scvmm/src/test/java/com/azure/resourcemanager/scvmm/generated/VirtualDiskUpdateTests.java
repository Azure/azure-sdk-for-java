// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.StorageQosPolicyDetails;
import com.azure.resourcemanager.scvmm.models.VirtualDiskUpdate;
import org.junit.jupiter.api.Assertions;

public final class VirtualDiskUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualDiskUpdate model = BinaryData.fromString(
            "{\"name\":\"lexxbczwtru\",\"diskId\":\"qzbqjvsov\",\"diskSizeGB\":1785684937,\"bus\":1778259828,\"lun\":1485053733,\"busType\":\"kwlhzdo\",\"vhdType\":\"xjmflbvv\",\"storageQoSPolicy\":{\"name\":\"rkcciwwzjuqk\",\"id\":\"sa\"}}")
            .toObject(VirtualDiskUpdate.class);
        Assertions.assertEquals("lexxbczwtru", model.name());
        Assertions.assertEquals("qzbqjvsov", model.diskId());
        Assertions.assertEquals(1785684937, model.diskSizeGB());
        Assertions.assertEquals(1778259828, model.bus());
        Assertions.assertEquals(1485053733, model.lun());
        Assertions.assertEquals("kwlhzdo", model.busType());
        Assertions.assertEquals("xjmflbvv", model.vhdType());
        Assertions.assertEquals("rkcciwwzjuqk", model.storageQosPolicy().name());
        Assertions.assertEquals("sa", model.storageQosPolicy().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualDiskUpdate model = new VirtualDiskUpdate().withName("lexxbczwtru")
            .withDiskId("qzbqjvsov")
            .withDiskSizeGB(1785684937)
            .withBus(1778259828)
            .withLun(1485053733)
            .withBusType("kwlhzdo")
            .withVhdType("xjmflbvv")
            .withStorageQosPolicy(new StorageQosPolicyDetails().withName("rkcciwwzjuqk").withId("sa"));
        model = BinaryData.fromObject(model).toObject(VirtualDiskUpdate.class);
        Assertions.assertEquals("lexxbczwtru", model.name());
        Assertions.assertEquals("qzbqjvsov", model.diskId());
        Assertions.assertEquals(1785684937, model.diskSizeGB());
        Assertions.assertEquals(1778259828, model.bus());
        Assertions.assertEquals(1485053733, model.lun());
        Assertions.assertEquals("kwlhzdo", model.busType());
        Assertions.assertEquals("xjmflbvv", model.vhdType());
        Assertions.assertEquals("rkcciwwzjuqk", model.storageQosPolicy().name());
        Assertions.assertEquals("sa", model.storageQosPolicy().id());
    }
}
