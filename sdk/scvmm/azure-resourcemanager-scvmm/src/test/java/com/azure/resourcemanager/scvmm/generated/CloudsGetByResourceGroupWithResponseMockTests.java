// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.Cloud;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"inventoryItemId\":\"izbfhfovvacq\",\"uuid\":\"tuodxeszabbelaw\",\"vmmServerId\":\"ua\",\"cloudName\":\"zkwrrwoyc\",\"cloudCapacity\":{\"cpuCount\":3200915566855533052,\"memoryMB\":2884775904635449436,\"vmCount\":2467395859679855860},\"storageQoSPolicies\":[{\"name\":\"ywuhpsvfuur\",\"id\":\"lwexxwl\",\"iopsMaximum\":5454533877839303334,\"iopsMinimum\":9199175945719514627,\"bandwidthLimit\":6869025053356818243,\"policyId\":\"gepqtybbwwpg\"},{\"name\":\"k\",\"id\":\"zyvli\",\"iopsMaximum\":7764041210336820295,\"iopsMinimum\":8287274670039182556,\"bandwidthLimit\":848870221890738563,\"policyId\":\"nxm\"},{\"name\":\"uxswqrntvl\",\"id\":\"jpsttexoq\",\"iopsMaximum\":5287210425103137929,\"iopsMinimum\":5284910564957842889,\"bandwidthLimit\":62183573876209376,\"policyId\":\"uncuw\"}],\"provisioningState\":\"Provisioning\"},\"extendedLocation\":{\"type\":\"kcdqzhlct\",\"name\":\"unqndyfpchrqb\"},\"location\":\"jrcg\",\"tags\":{\"qqoli\":\"dcwboxjum\",\"aiouaubrjt\":\"r\",\"fuojrngif\":\"oq\"},\"id\":\"rzpasccbiuimzdly\",\"name\":\"dfqwmkyoq\",\"type\":\"fdvruz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Cloud response = manager.clouds()
            .getByResourceGroupWithResponse("xcudchxgsr", "oldforobw", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jrcg", response.location());
        Assertions.assertEquals("dcwboxjum", response.tags().get("qqoli"));
        Assertions.assertEquals("izbfhfovvacq", response.properties().inventoryItemId());
        Assertions.assertEquals("tuodxeszabbelaw", response.properties().uuid());
        Assertions.assertEquals("ua", response.properties().vmmServerId());
        Assertions.assertEquals("kcdqzhlct", response.extendedLocation().type());
        Assertions.assertEquals("unqndyfpchrqb", response.extendedLocation().name());
    }
}
