// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcloud.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hybridcloud.fluent.HybridCloudsClient;
import com.azure.resourcemanager.hybridcloud.fluent.models.OperationInner;
import com.azure.resourcemanager.hybridcloud.models.HybridClouds;
import com.azure.resourcemanager.hybridcloud.models.Operation;

public final class HybridCloudsImpl implements HybridClouds {
    private static final ClientLogger LOGGER = new ClientLogger(HybridCloudsImpl.class);

    private final HybridCloudsClient innerClient;

    private final com.azure.resourcemanager.hybridcloud.HybridCloudManager serviceManager;

    public HybridCloudsImpl(
        HybridCloudsClient innerClient, com.azure.resourcemanager.hybridcloud.HybridCloudManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Operation> listOperations() {
        PagedIterable<OperationInner> inner = this.serviceClient().listOperations();
        return Utils.mapPage(inner, inner1 -> new OperationImpl(inner1, this.manager()));
    }

    public PagedIterable<Operation> listOperations(Context context) {
        PagedIterable<OperationInner> inner = this.serviceClient().listOperations(context);
        return Utils.mapPage(inner, inner1 -> new OperationImpl(inner1, this.manager()));
    }

    private HybridCloudsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.hybridcloud.HybridCloudManager manager() {
        return this.serviceManager;
    }
}
