// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Remote Cloud Resource filter. */
@Fluent
public final class ResourceFilter {
    /*
     * Remote Resource name to filter on.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Remote Resource type to filter on.
     */
    @JsonProperty(value = "type")
    private String type;

    /*
     * Remote Resource location/region to filter on.
     */
    @JsonProperty(value = "region")
    private String region;

    /*
     * Remote Resource tags to filter on in key:value format.
     */
    @JsonProperty(value = "tag")
    private String tag;

    /** Creates an instance of ResourceFilter class. */
    public ResourceFilter() {
    }

    /**
     * Get the name property: Remote Resource name to filter on.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Remote Resource name to filter on.
     *
     * @param name the name value to set.
     * @return the ResourceFilter object itself.
     */
    public ResourceFilter withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: Remote Resource type to filter on.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Remote Resource type to filter on.
     *
     * @param type the type value to set.
     * @return the ResourceFilter object itself.
     */
    public ResourceFilter withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the region property: Remote Resource location/region to filter on.
     *
     * @return the region value.
     */
    public String region() {
        return this.region;
    }

    /**
     * Set the region property: Remote Resource location/region to filter on.
     *
     * @param region the region value to set.
     * @return the ResourceFilter object itself.
     */
    public ResourceFilter withRegion(String region) {
        this.region = region;
        return this;
    }

    /**
     * Get the tag property: Remote Resource tags to filter on in key:value format.
     *
     * @return the tag value.
     */
    public String tag() {
        return this.tag;
    }

    /**
     * Set the tag property: Remote Resource tags to filter on in key:value format.
     *
     * @param tag the tag value to set.
     * @return the ResourceFilter object itself.
     */
    public ResourceFilter withTag(String tag) {
        this.tag = tag;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
