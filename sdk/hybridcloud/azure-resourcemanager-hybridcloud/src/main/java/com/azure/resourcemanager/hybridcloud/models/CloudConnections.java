// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcloud.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of CloudConnections. */
public interface CloudConnections {
    /**
     * Return list of cloud connections in a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListCloudConnections API service call as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CloudConnection> list();

    /**
     * Return list of cloud connections in a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListCloudConnections API service call as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CloudConnection> list(Context context);

    /**
     * Return list of cloud connections in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListCloudConnections API service call as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CloudConnection> listByResourceGroup(String resourceGroupName);

    /**
     * Return list of cloud connections in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListCloudConnections API service call as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CloudConnection> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets the specified cloud connection in a specified resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudConnectionName The name of the cloud connection resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified cloud connection in a specified resource group along with {@link Response}.
     */
    Response<CloudConnection> getByResourceGroupWithResponse(
        String resourceGroupName, String cloudConnectionName, Context context);

    /**
     * Gets the specified cloud connection in a specified resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudConnectionName The name of the cloud connection resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified cloud connection in a specified resource group.
     */
    CloudConnection getByResourceGroup(String resourceGroupName, String cloudConnectionName);

    /**
     * Deletes a specified cloud connection resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudConnectionName The name of the cloud connection resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String cloudConnectionName);

    /**
     * Deletes a specified cloud connection resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudConnectionName The name of the cloud connection resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String cloudConnectionName, Context context);

    /**
     * Gets the specified cloud connection in a specified resource group.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified cloud connection in a specified resource group along with {@link Response}.
     */
    CloudConnection getById(String id);

    /**
     * Gets the specified cloud connection in a specified resource group.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified cloud connection in a specified resource group along with {@link Response}.
     */
    Response<CloudConnection> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a specified cloud connection resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a specified cloud connection resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new CloudConnection resource.
     *
     * @param name resource name.
     * @return the first stage of the new CloudConnection definition.
     */
    CloudConnection.DefinitionStages.Blank define(String name);
}
