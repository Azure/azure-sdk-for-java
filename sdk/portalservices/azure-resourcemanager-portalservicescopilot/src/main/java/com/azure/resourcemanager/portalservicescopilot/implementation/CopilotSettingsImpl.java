// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.portalservicescopilot.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.portalservicescopilot.fluent.CopilotSettingsClient;
import com.azure.resourcemanager.portalservicescopilot.fluent.models.CopilotSettingsResourceInner;
import com.azure.resourcemanager.portalservicescopilot.models.CopilotSettings;
import com.azure.resourcemanager.portalservicescopilot.models.CopilotSettingsResource;
import com.azure.resourcemanager.portalservicescopilot.models.CopilotSettingsResourceUpdate;

public final class CopilotSettingsImpl implements CopilotSettings {
    private static final ClientLogger LOGGER = new ClientLogger(CopilotSettingsImpl.class);

    private final CopilotSettingsClient innerClient;

    private final com.azure.resourcemanager.portalservicescopilot.PortalServicesCopilotManager serviceManager;

    public CopilotSettingsImpl(CopilotSettingsClient innerClient,
        com.azure.resourcemanager.portalservicescopilot.PortalServicesCopilotManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<CopilotSettingsResource> getWithResponse(Context context) {
        Response<CopilotSettingsResourceInner> inner = this.serviceClient().getWithResponse(context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new CopilotSettingsResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public CopilotSettingsResource get() {
        CopilotSettingsResourceInner inner = this.serviceClient().get();
        if (inner != null) {
            return new CopilotSettingsResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<CopilotSettingsResource> createOrUpdateWithResponse(CopilotSettingsResourceInner resource,
        Context context) {
        Response<CopilotSettingsResourceInner> inner
            = this.serviceClient().createOrUpdateWithResponse(resource, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new CopilotSettingsResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public CopilotSettingsResource createOrUpdate(CopilotSettingsResourceInner resource) {
        CopilotSettingsResourceInner inner = this.serviceClient().createOrUpdate(resource);
        if (inner != null) {
            return new CopilotSettingsResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<CopilotSettingsResource> updateWithResponse(CopilotSettingsResourceUpdate properties,
        Context context) {
        Response<CopilotSettingsResourceInner> inner = this.serviceClient().updateWithResponse(properties, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new CopilotSettingsResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public CopilotSettingsResource update(CopilotSettingsResourceUpdate properties) {
        CopilotSettingsResourceInner inner = this.serviceClient().update(properties);
        if (inner != null) {
            return new CopilotSettingsResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteWithResponse(Context context) {
        return this.serviceClient().deleteWithResponse(context);
    }

    public void delete() {
        this.serviceClient().delete();
    }

    private CopilotSettingsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.portalservicescopilot.PortalServicesCopilotManager manager() {
        return this.serviceManager;
    }
}
