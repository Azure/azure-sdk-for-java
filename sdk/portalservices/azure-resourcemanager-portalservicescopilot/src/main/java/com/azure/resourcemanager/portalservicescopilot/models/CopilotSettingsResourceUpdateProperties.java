// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.portalservicescopilot.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The updatable properties of the CopilotSettingsResource.
 */
@Fluent
public final class CopilotSettingsResourceUpdateProperties
    implements JsonSerializable<CopilotSettingsResourceUpdateProperties> {
    /*
     * Boolean indicating if role-based access control is enabled for copilot in this tenant.
     */
    private Boolean accessControlEnabled;

    /**
     * Creates an instance of CopilotSettingsResourceUpdateProperties class.
     */
    public CopilotSettingsResourceUpdateProperties() {
    }

    /**
     * Get the accessControlEnabled property: Boolean indicating if role-based access control is enabled for copilot in
     * this tenant.
     * 
     * @return the accessControlEnabled value.
     */
    public Boolean accessControlEnabled() {
        return this.accessControlEnabled;
    }

    /**
     * Set the accessControlEnabled property: Boolean indicating if role-based access control is enabled for copilot in
     * this tenant.
     * 
     * @param accessControlEnabled the accessControlEnabled value to set.
     * @return the CopilotSettingsResourceUpdateProperties object itself.
     */
    public CopilotSettingsResourceUpdateProperties withAccessControlEnabled(Boolean accessControlEnabled) {
        this.accessControlEnabled = accessControlEnabled;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("accessControlEnabled", this.accessControlEnabled);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CopilotSettingsResourceUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CopilotSettingsResourceUpdateProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CopilotSettingsResourceUpdateProperties.
     */
    public static CopilotSettingsResourceUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CopilotSettingsResourceUpdateProperties deserializedCopilotSettingsResourceUpdateProperties
                = new CopilotSettingsResourceUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accessControlEnabled".equals(fieldName)) {
                    deserializedCopilotSettingsResourceUpdateProperties.accessControlEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCopilotSettingsResourceUpdateProperties;
        });
    }
}
