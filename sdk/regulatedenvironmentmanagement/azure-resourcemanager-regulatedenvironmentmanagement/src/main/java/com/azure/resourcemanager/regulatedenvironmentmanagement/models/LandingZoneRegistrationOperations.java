// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.regulatedenvironmentmanagement.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of LandingZoneRegistrationOperations.
 */
public interface LandingZoneRegistrationOperations {
    /**
     * Get a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone registration along with {@link Response}.
     */
    Response<LZRegistration> getWithResponse(String resourceGroupName, String landingZoneAccountName,
        String landingZoneRegistrationName, Context context);

    /**
     * Get a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone registration.
     */
    LZRegistration get(String resourceGroupName, String landingZoneAccountName, String landingZoneRegistrationName);

    /**
     * Delete a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String landingZoneAccountName,
        String landingZoneRegistrationName, Context context);

    /**
     * Delete a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String landingZoneAccountName, String landingZoneRegistrationName);

    /**
     * List the landing zone registrations within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneRegistrationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<LZRegistration> listByResourceGroup(String resourceGroupName, String landingZoneAccountName);

    /**
     * List the landing zone registrations within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneRegistrationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<LZRegistration> listByResourceGroup(String resourceGroupName, String landingZoneAccountName,
        Context context);

    /**
     * List the landing zone registrations within a subscription.
     * 
     * @param landingZoneAccountName The landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneRegistrationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<LZRegistration> listBySubscription(String landingZoneAccountName);

    /**
     * List the landing zone registrations within a subscription.
     * 
     * @param landingZoneAccountName The landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneRegistrationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<LZRegistration> listBySubscription(String landingZoneAccountName, Context context);

    /**
     * Get a landing zone registration.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone registration along with {@link Response}.
     */
    LZRegistration getById(String id);

    /**
     * Get a landing zone registration.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone registration along with {@link Response}.
     */
    Response<LZRegistration> getByIdWithResponse(String id, Context context);

    /**
     * Delete a landing zone registration.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a landing zone registration.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new LZRegistration resource.
     * 
     * @param name resource name.
     * @return the first stage of the new LZRegistration definition.
     */
    LZRegistration.DefinitionStages.Blank define(String name);
}
