// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.regulatedenvironmentmanagement.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.regulatedenvironmentmanagement.fluent.models.LZRegistrationInner;

/**
 * An instance of this class provides access to all the operations defined in LandingZoneRegistrationOperationsClient.
 */
public interface LandingZoneRegistrationOperationsClient {
    /**
     * Get a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone registration along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LZRegistrationInner> getWithResponse(String resourceGroupName, String landingZoneAccountName,
        String landingZoneRegistrationName, Context context);

    /**
     * Get a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone registration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LZRegistrationInner get(String resourceGroupName, String landingZoneAccountName,
        String landingZoneRegistrationName);

    /**
     * Create a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone registration resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LZRegistrationInner>, LZRegistrationInner> beginCreate(String resourceGroupName,
        String landingZoneAccountName, String landingZoneRegistrationName, LZRegistrationInner resource);

    /**
     * Create a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone registration resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LZRegistrationInner>, LZRegistrationInner> beginCreate(String resourceGroupName,
        String landingZoneAccountName, String landingZoneRegistrationName, LZRegistrationInner resource,
        Context context);

    /**
     * Create a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone registration resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LZRegistrationInner create(String resourceGroupName, String landingZoneAccountName,
        String landingZoneRegistrationName, LZRegistrationInner resource);

    /**
     * Create a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone registration resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LZRegistrationInner create(String resourceGroupName, String landingZoneAccountName,
        String landingZoneRegistrationName, LZRegistrationInner resource, Context context);

    /**
     * Update a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone registration resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LZRegistrationInner>, LZRegistrationInner> beginUpdate(String resourceGroupName,
        String landingZoneAccountName, String landingZoneRegistrationName, LZRegistrationInner properties);

    /**
     * Update a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone registration resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LZRegistrationInner>, LZRegistrationInner> beginUpdate(String resourceGroupName,
        String landingZoneAccountName, String landingZoneRegistrationName, LZRegistrationInner properties,
        Context context);

    /**
     * Update a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone registration resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LZRegistrationInner update(String resourceGroupName, String landingZoneAccountName,
        String landingZoneRegistrationName, LZRegistrationInner properties);

    /**
     * Update a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone registration resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LZRegistrationInner update(String resourceGroupName, String landingZoneAccountName,
        String landingZoneRegistrationName, LZRegistrationInner properties, Context context);

    /**
     * Delete a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String landingZoneAccountName,
        String landingZoneRegistrationName, Context context);

    /**
     * Delete a landing zone registration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneRegistrationName The name of the landing zone registration resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String landingZoneAccountName, String landingZoneRegistrationName);

    /**
     * List the landing zone registrations within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneRegistrationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LZRegistrationInner> listByResourceGroup(String resourceGroupName, String landingZoneAccountName);

    /**
     * List the landing zone registrations within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneRegistrationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LZRegistrationInner> listByResourceGroup(String resourceGroupName, String landingZoneAccountName,
        Context context);

    /**
     * List the landing zone registrations within a subscription.
     * 
     * @param landingZoneAccountName The landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneRegistrationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LZRegistrationInner> listBySubscription(String landingZoneAccountName);

    /**
     * List the landing zone registrations within a subscription.
     * 
     * @param landingZoneAccountName The landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneRegistrationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LZRegistrationInner> listBySubscription(String landingZoneAccountName, Context context);
}
