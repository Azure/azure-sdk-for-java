// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.regulatedenvironmentmanagement.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.regulatedenvironmentmanagement.fluent.models.LZAccountInner;

/**
 * An instance of this class provides access to all the operations defined in LandingZoneAccountOperationsClient.
 */
public interface LandingZoneAccountOperationsClient {
    /**
     * Get a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone account along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LZAccountInner> getByResourceGroupWithResponse(String resourceGroupName, String landingZoneAccountName,
        Context context);

    /**
     * Get a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone account.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LZAccountInner getByResourceGroup(String resourceGroupName, String landingZoneAccountName);

    /**
     * Create a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone account resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LZAccountInner>, LZAccountInner> beginCreate(String resourceGroupName,
        String landingZoneAccountName, LZAccountInner resource);

    /**
     * Create a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone account resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LZAccountInner>, LZAccountInner> beginCreate(String resourceGroupName,
        String landingZoneAccountName, LZAccountInner resource, Context context);

    /**
     * Create a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone account resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LZAccountInner create(String resourceGroupName, String landingZoneAccountName, LZAccountInner resource);

    /**
     * Create a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone account resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LZAccountInner create(String resourceGroupName, String landingZoneAccountName, LZAccountInner resource,
        Context context);

    /**
     * Update a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone account resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LZAccountInner>, LZAccountInner> beginUpdate(String resourceGroupName,
        String landingZoneAccountName, LZAccountInner properties);

    /**
     * Update a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone account resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LZAccountInner>, LZAccountInner> beginUpdate(String resourceGroupName,
        String landingZoneAccountName, LZAccountInner properties, Context context);

    /**
     * Update a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone account resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LZAccountInner update(String resourceGroupName, String landingZoneAccountName, LZAccountInner properties);

    /**
     * Update a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone account resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LZAccountInner update(String resourceGroupName, String landingZoneAccountName, LZAccountInner properties,
        Context context);

    /**
     * Deletes a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String landingZoneAccountName);

    /**
     * Deletes a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String landingZoneAccountName,
        Context context);

    /**
     * Deletes a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String landingZoneAccountName);

    /**
     * Deletes a landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String landingZoneAccountName, Context context);

    /**
     * List the landing zone accounts within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneAccountResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LZAccountInner> listByResourceGroup(String resourceGroupName);

    /**
     * List the landing zone accounts within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneAccountResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LZAccountInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List the landing zone accounts within a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneAccountResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LZAccountInner> list();

    /**
     * List the landing zone accounts within a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneAccountResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LZAccountInner> list(Context context);
}
