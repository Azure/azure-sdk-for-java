// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.regulatedenvironmentmanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The details for the custom naming convention override for a specific resource type.
 */
@Fluent
public final class CustomNamingConvention implements JsonSerializable<CustomNamingConvention> {
    /*
     * The type of the resource.
     */
    private ResourceType resourceType;

    /*
     * The custom naming formula for the resource type.
     */
    private String formula;

    /**
     * Creates an instance of CustomNamingConvention class.
     */
    public CustomNamingConvention() {
    }

    /**
     * Get the resourceType property: The type of the resource.
     * 
     * @return the resourceType value.
     */
    public ResourceType resourceType() {
        return this.resourceType;
    }

    /**
     * Set the resourceType property: The type of the resource.
     * 
     * @param resourceType the resourceType value to set.
     * @return the CustomNamingConvention object itself.
     */
    public CustomNamingConvention withResourceType(ResourceType resourceType) {
        this.resourceType = resourceType;
        return this;
    }

    /**
     * Get the formula property: The custom naming formula for the resource type.
     * 
     * @return the formula value.
     */
    public String formula() {
        return this.formula;
    }

    /**
     * Set the formula property: The custom naming formula for the resource type.
     * 
     * @param formula the formula value to set.
     * @return the CustomNamingConvention object itself.
     */
    public CustomNamingConvention withFormula(String formula) {
        this.formula = formula;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property resourceType in model CustomNamingConvention"));
        }
        if (formula() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property formula in model CustomNamingConvention"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CustomNamingConvention.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceType", this.resourceType == null ? null : this.resourceType.toString());
        jsonWriter.writeStringField("formula", this.formula);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomNamingConvention from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomNamingConvention if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CustomNamingConvention.
     */
    public static CustomNamingConvention fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomNamingConvention deserializedCustomNamingConvention = new CustomNamingConvention();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceType".equals(fieldName)) {
                    deserializedCustomNamingConvention.resourceType = ResourceType.fromString(reader.getString());
                } else if ("formula".equals(fieldName)) {
                    deserializedCustomNamingConvention.formula = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomNamingConvention;
        });
    }
}
