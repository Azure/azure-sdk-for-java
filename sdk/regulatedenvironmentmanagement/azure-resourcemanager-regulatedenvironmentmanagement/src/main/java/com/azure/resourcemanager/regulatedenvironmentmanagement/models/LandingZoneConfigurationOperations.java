// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.regulatedenvironmentmanagement.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of LandingZoneConfigurationOperations.
 */
public interface LandingZoneConfigurationOperations {
    /**
     * Get a landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone configuration along with {@link Response}.
     */
    Response<LZConfiguration> getWithResponse(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, Context context);

    /**
     * Get a landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone configuration.
     */
    LZConfiguration get(String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName);

    /**
     * Delete a landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName);

    /**
     * Delete a landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName,
        Context context);

    /**
     * List the landing zone configurations within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneConfigurationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<LZConfiguration> listByResourceGroup(String resourceGroupName, String landingZoneAccountName);

    /**
     * List the landing zone configurations within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneConfigurationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<LZConfiguration> listByResourceGroup(String resourceGroupName, String landingZoneAccountName,
        Context context);

    /**
     * List the landing zone configurations within a subscription.
     * 
     * @param landingZoneAccountName The landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneConfigurationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<LZConfiguration> listBySubscription(String landingZoneAccountName);

    /**
     * List the landing zone configurations within a subscription.
     * 
     * @param landingZoneAccountName The landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneConfigurationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<LZConfiguration> listBySubscription(String landingZoneAccountName, Context context);

    /**
     * Generate infrastructure as code (IaC) for a landing zone deployment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    GenerateLandingZoneResult generateLandingZone(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, GenerateLandingZoneRequest body);

    /**
     * Generate infrastructure as code (IaC) for a landing zone deployment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    GenerateLandingZoneResult generateLandingZone(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, GenerateLandingZoneRequest body, Context context);

    /**
     * Update the authoring status on a landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    UpdateAuthoringStatusResult updateAuthoringStatus(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, UpdateAuthoringStatusRequest body);

    /**
     * Update the authoring status on a landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    UpdateAuthoringStatusResult updateAuthoringStatus(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, UpdateAuthoringStatusRequest body, Context context);

    /**
     * Create a duplicate of the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    CreateLZConfigurationCopyResult createCopy(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, CreateLZConfigurationCopyRequest body);

    /**
     * Create a duplicate of the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    CreateLZConfigurationCopyResult createCopy(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, CreateLZConfigurationCopyRequest body, Context context);

    /**
     * Get a landing zone configuration.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone configuration along with {@link Response}.
     */
    LZConfiguration getById(String id);

    /**
     * Get a landing zone configuration.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a landing zone configuration along with {@link Response}.
     */
    Response<LZConfiguration> getByIdWithResponse(String id, Context context);

    /**
     * Delete a landing zone configuration.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a landing zone configuration.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new LZConfiguration resource.
     * 
     * @param name resource name.
     * @return the first stage of the new LZConfiguration definition.
     */
    LZConfiguration.DefinitionStages.Blank define(String name);
}
