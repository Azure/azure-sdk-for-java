// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.regulatedenvironmentmanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The request to generate Infrastructure as Code (IaC) for a landing zone.
 */
@Fluent
public final class GenerateLandingZoneRequest implements JsonSerializable<GenerateLandingZoneRequest> {
    /*
     * The export options available for code generation.
     */
    private InfrastructureAsCodeOutputOptions infrastructureAsCodeOutputOptions;

    /*
     * Existing 'Management' subscription ID to be linked with this deployment when reusing instead of creating a new
     * subscription.
     */
    private String existingManagementSubscriptionId;

    /*
     * Existing 'Identity' subscription ID to be linked with this deployment when reusing instead of creating a new
     * subscription.
     */
    private String existingIdentitySubscriptionId;

    /*
     * Existing 'Connectivity' subscription ID to be linked with this deployment when reusing instead of creating a new
     * subscription.
     */
    private String existingConnectivitySubscriptionId;

    /*
     * The complete resource ID of the billing scope linked to the EA, MCA, or MPA account where you want to create the
     * subscription.
     */
    private String subscriptionBillingScope;

    /*
     * Optional parent for the management group hierarchy, serving as an intermediate root management group parent if
     * specified. If left empty, the default will be to deploy under the tenant root management group.
     */
    private String existingTopLevelMgParentId;

    /*
     * The prefix that will be added to all resources created by this deployment. Use between 2 and 5 characters,
     * consisting only of letters, digits, '-', '.', or '_'. No other special characters are supported.
     */
    private String deploymentPrefix;

    /*
     * The optional suffix that will be appended to all resources created by this deployment, maximum 5 characters.
     */
    private String deploymentSuffix;

    /*
     * The display name assigned to the top management group of the landing zone deployment hierarchy. It is recommended
     * to use unique names for each landing zone deployment.
     */
    private String topLevelMgDisplayName;

    /*
     * The Azure region where the landing zone will be deployed. All Azure regions are supported.
     */
    private String deploymentLocation;

    /*
     * The name of the organization or agency for which the landing zone is being deployed. This is optional.
     */
    private String organization;

    /*
     * The environment where the landing zone is being deployed, such as ppe, prod, test, etc.
     */
    private String environment;

    /**
     * Creates an instance of GenerateLandingZoneRequest class.
     */
    public GenerateLandingZoneRequest() {
    }

    /**
     * Get the infrastructureAsCodeOutputOptions property: The export options available for code generation.
     * 
     * @return the infrastructureAsCodeOutputOptions value.
     */
    public InfrastructureAsCodeOutputOptions infrastructureAsCodeOutputOptions() {
        return this.infrastructureAsCodeOutputOptions;
    }

    /**
     * Set the infrastructureAsCodeOutputOptions property: The export options available for code generation.
     * 
     * @param infrastructureAsCodeOutputOptions the infrastructureAsCodeOutputOptions value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest
        withInfrastructureAsCodeOutputOptions(InfrastructureAsCodeOutputOptions infrastructureAsCodeOutputOptions) {
        this.infrastructureAsCodeOutputOptions = infrastructureAsCodeOutputOptions;
        return this;
    }

    /**
     * Get the existingManagementSubscriptionId property: Existing 'Management' subscription ID to be linked with this
     * deployment when reusing instead of creating a new subscription.
     * 
     * @return the existingManagementSubscriptionId value.
     */
    public String existingManagementSubscriptionId() {
        return this.existingManagementSubscriptionId;
    }

    /**
     * Set the existingManagementSubscriptionId property: Existing 'Management' subscription ID to be linked with this
     * deployment when reusing instead of creating a new subscription.
     * 
     * @param existingManagementSubscriptionId the existingManagementSubscriptionId value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest withExistingManagementSubscriptionId(String existingManagementSubscriptionId) {
        this.existingManagementSubscriptionId = existingManagementSubscriptionId;
        return this;
    }

    /**
     * Get the existingIdentitySubscriptionId property: Existing 'Identity' subscription ID to be linked with this
     * deployment when reusing instead of creating a new subscription.
     * 
     * @return the existingIdentitySubscriptionId value.
     */
    public String existingIdentitySubscriptionId() {
        return this.existingIdentitySubscriptionId;
    }

    /**
     * Set the existingIdentitySubscriptionId property: Existing 'Identity' subscription ID to be linked with this
     * deployment when reusing instead of creating a new subscription.
     * 
     * @param existingIdentitySubscriptionId the existingIdentitySubscriptionId value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest withExistingIdentitySubscriptionId(String existingIdentitySubscriptionId) {
        this.existingIdentitySubscriptionId = existingIdentitySubscriptionId;
        return this;
    }

    /**
     * Get the existingConnectivitySubscriptionId property: Existing 'Connectivity' subscription ID to be linked with
     * this deployment when reusing instead of creating a new subscription.
     * 
     * @return the existingConnectivitySubscriptionId value.
     */
    public String existingConnectivitySubscriptionId() {
        return this.existingConnectivitySubscriptionId;
    }

    /**
     * Set the existingConnectivitySubscriptionId property: Existing 'Connectivity' subscription ID to be linked with
     * this deployment when reusing instead of creating a new subscription.
     * 
     * @param existingConnectivitySubscriptionId the existingConnectivitySubscriptionId value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest
        withExistingConnectivitySubscriptionId(String existingConnectivitySubscriptionId) {
        this.existingConnectivitySubscriptionId = existingConnectivitySubscriptionId;
        return this;
    }

    /**
     * Get the subscriptionBillingScope property: The complete resource ID of the billing scope linked to the EA, MCA,
     * or MPA account where you want to create the subscription.
     * 
     * @return the subscriptionBillingScope value.
     */
    public String subscriptionBillingScope() {
        return this.subscriptionBillingScope;
    }

    /**
     * Set the subscriptionBillingScope property: The complete resource ID of the billing scope linked to the EA, MCA,
     * or MPA account where you want to create the subscription.
     * 
     * @param subscriptionBillingScope the subscriptionBillingScope value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest withSubscriptionBillingScope(String subscriptionBillingScope) {
        this.subscriptionBillingScope = subscriptionBillingScope;
        return this;
    }

    /**
     * Get the existingTopLevelMgParentId property: Optional parent for the management group hierarchy, serving as an
     * intermediate root management group parent if specified. If left empty, the default will be to deploy under the
     * tenant root management group.
     * 
     * @return the existingTopLevelMgParentId value.
     */
    public String existingTopLevelMgParentId() {
        return this.existingTopLevelMgParentId;
    }

    /**
     * Set the existingTopLevelMgParentId property: Optional parent for the management group hierarchy, serving as an
     * intermediate root management group parent if specified. If left empty, the default will be to deploy under the
     * tenant root management group.
     * 
     * @param existingTopLevelMgParentId the existingTopLevelMgParentId value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest withExistingTopLevelMgParentId(String existingTopLevelMgParentId) {
        this.existingTopLevelMgParentId = existingTopLevelMgParentId;
        return this;
    }

    /**
     * Get the deploymentPrefix property: The prefix that will be added to all resources created by this deployment. Use
     * between 2 and 5 characters, consisting only of letters, digits, '-', '.', or '_'. No other special characters are
     * supported.
     * 
     * @return the deploymentPrefix value.
     */
    public String deploymentPrefix() {
        return this.deploymentPrefix;
    }

    /**
     * Set the deploymentPrefix property: The prefix that will be added to all resources created by this deployment. Use
     * between 2 and 5 characters, consisting only of letters, digits, '-', '.', or '_'. No other special characters are
     * supported.
     * 
     * @param deploymentPrefix the deploymentPrefix value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest withDeploymentPrefix(String deploymentPrefix) {
        this.deploymentPrefix = deploymentPrefix;
        return this;
    }

    /**
     * Get the deploymentSuffix property: The optional suffix that will be appended to all resources created by this
     * deployment, maximum 5 characters.
     * 
     * @return the deploymentSuffix value.
     */
    public String deploymentSuffix() {
        return this.deploymentSuffix;
    }

    /**
     * Set the deploymentSuffix property: The optional suffix that will be appended to all resources created by this
     * deployment, maximum 5 characters.
     * 
     * @param deploymentSuffix the deploymentSuffix value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest withDeploymentSuffix(String deploymentSuffix) {
        this.deploymentSuffix = deploymentSuffix;
        return this;
    }

    /**
     * Get the topLevelMgDisplayName property: The display name assigned to the top management group of the landing zone
     * deployment hierarchy. It is recommended to use unique names for each landing zone deployment.
     * 
     * @return the topLevelMgDisplayName value.
     */
    public String topLevelMgDisplayName() {
        return this.topLevelMgDisplayName;
    }

    /**
     * Set the topLevelMgDisplayName property: The display name assigned to the top management group of the landing zone
     * deployment hierarchy. It is recommended to use unique names for each landing zone deployment.
     * 
     * @param topLevelMgDisplayName the topLevelMgDisplayName value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest withTopLevelMgDisplayName(String topLevelMgDisplayName) {
        this.topLevelMgDisplayName = topLevelMgDisplayName;
        return this;
    }

    /**
     * Get the deploymentLocation property: The Azure region where the landing zone will be deployed. All Azure regions
     * are supported.
     * 
     * @return the deploymentLocation value.
     */
    public String deploymentLocation() {
        return this.deploymentLocation;
    }

    /**
     * Set the deploymentLocation property: The Azure region where the landing zone will be deployed. All Azure regions
     * are supported.
     * 
     * @param deploymentLocation the deploymentLocation value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest withDeploymentLocation(String deploymentLocation) {
        this.deploymentLocation = deploymentLocation;
        return this;
    }

    /**
     * Get the organization property: The name of the organization or agency for which the landing zone is being
     * deployed. This is optional.
     * 
     * @return the organization value.
     */
    public String organization() {
        return this.organization;
    }

    /**
     * Set the organization property: The name of the organization or agency for which the landing zone is being
     * deployed. This is optional.
     * 
     * @param organization the organization value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest withOrganization(String organization) {
        this.organization = organization;
        return this;
    }

    /**
     * Get the environment property: The environment where the landing zone is being deployed, such as ppe, prod, test,
     * etc.
     * 
     * @return the environment value.
     */
    public String environment() {
        return this.environment;
    }

    /**
     * Set the environment property: The environment where the landing zone is being deployed, such as ppe, prod, test,
     * etc.
     * 
     * @param environment the environment value to set.
     * @return the GenerateLandingZoneRequest object itself.
     */
    public GenerateLandingZoneRequest withEnvironment(String environment) {
        this.environment = environment;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (infrastructureAsCodeOutputOptions() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property infrastructureAsCodeOutputOptions in model GenerateLandingZoneRequest"));
        }
        if (deploymentPrefix() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property deploymentPrefix in model GenerateLandingZoneRequest"));
        }
        if (topLevelMgDisplayName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property topLevelMgDisplayName in model GenerateLandingZoneRequest"));
        }
        if (deploymentLocation() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property deploymentLocation in model GenerateLandingZoneRequest"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(GenerateLandingZoneRequest.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("infrastructureAsCodeOutputOptions",
            this.infrastructureAsCodeOutputOptions == null ? null : this.infrastructureAsCodeOutputOptions.toString());
        jsonWriter.writeStringField("deploymentPrefix", this.deploymentPrefix);
        jsonWriter.writeStringField("topLevelMgDisplayName", this.topLevelMgDisplayName);
        jsonWriter.writeStringField("deploymentLocation", this.deploymentLocation);
        jsonWriter.writeStringField("existingManagementSubscriptionId", this.existingManagementSubscriptionId);
        jsonWriter.writeStringField("existingIdentitySubscriptionId", this.existingIdentitySubscriptionId);
        jsonWriter.writeStringField("existingConnectivitySubscriptionId", this.existingConnectivitySubscriptionId);
        jsonWriter.writeStringField("subscriptionBillingScope", this.subscriptionBillingScope);
        jsonWriter.writeStringField("existingTopLevelMgParentId", this.existingTopLevelMgParentId);
        jsonWriter.writeStringField("deploymentSuffix", this.deploymentSuffix);
        jsonWriter.writeStringField("organization", this.organization);
        jsonWriter.writeStringField("environment", this.environment);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GenerateLandingZoneRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GenerateLandingZoneRequest if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the GenerateLandingZoneRequest.
     */
    public static GenerateLandingZoneRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GenerateLandingZoneRequest deserializedGenerateLandingZoneRequest = new GenerateLandingZoneRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("infrastructureAsCodeOutputOptions".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.infrastructureAsCodeOutputOptions
                        = InfrastructureAsCodeOutputOptions.fromString(reader.getString());
                } else if ("deploymentPrefix".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.deploymentPrefix = reader.getString();
                } else if ("topLevelMgDisplayName".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.topLevelMgDisplayName = reader.getString();
                } else if ("deploymentLocation".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.deploymentLocation = reader.getString();
                } else if ("existingManagementSubscriptionId".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.existingManagementSubscriptionId = reader.getString();
                } else if ("existingIdentitySubscriptionId".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.existingIdentitySubscriptionId = reader.getString();
                } else if ("existingConnectivitySubscriptionId".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.existingConnectivitySubscriptionId = reader.getString();
                } else if ("subscriptionBillingScope".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.subscriptionBillingScope = reader.getString();
                } else if ("existingTopLevelMgParentId".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.existingTopLevelMgParentId = reader.getString();
                } else if ("deploymentSuffix".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.deploymentSuffix = reader.getString();
                } else if ("organization".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.organization = reader.getString();
                } else if ("environment".equals(fieldName)) {
                    deserializedGenerateLandingZoneRequest.environment = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGenerateLandingZoneRequest;
        });
    }
}
