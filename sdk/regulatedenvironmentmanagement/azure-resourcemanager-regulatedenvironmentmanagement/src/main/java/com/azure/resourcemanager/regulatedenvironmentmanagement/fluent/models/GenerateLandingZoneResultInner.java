// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.regulatedenvironmentmanagement.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The response payload for generating infrastructure-as-code for the landing zone.
 */
@Immutable
public final class GenerateLandingZoneResultInner implements JsonSerializable<GenerateLandingZoneResultInner> {
    /*
     * The parent management group name of the landing zone deployment.
     */
    private String topLevelMgDisplayName;

    /*
     * The name of the Landing zone configuration resource.
     */
    private String landingZoneConfigurationName;

    /*
     * The url to access the generated code.
     */
    private String generatedCodeUrl;

    /*
     * The storage account name to access the generated code.
     */
    private String storageAccountName;

    /*
     * The storage account container to access the generated code.
     */
    private String containerName;

    /*
     * The storage account blob name to access the generated code.
     */
    private String blobName;

    /*
     * The generated code content in JSON string format.
     */
    private String generatedArmTemplate;

    /**
     * Creates an instance of GenerateLandingZoneResultInner class.
     */
    private GenerateLandingZoneResultInner() {
    }

    /**
     * Get the topLevelMgDisplayName property: The parent management group name of the landing zone deployment.
     * 
     * @return the topLevelMgDisplayName value.
     */
    public String topLevelMgDisplayName() {
        return this.topLevelMgDisplayName;
    }

    /**
     * Get the landingZoneConfigurationName property: The name of the Landing zone configuration resource.
     * 
     * @return the landingZoneConfigurationName value.
     */
    public String landingZoneConfigurationName() {
        return this.landingZoneConfigurationName;
    }

    /**
     * Get the generatedCodeUrl property: The url to access the generated code.
     * 
     * @return the generatedCodeUrl value.
     */
    public String generatedCodeUrl() {
        return this.generatedCodeUrl;
    }

    /**
     * Get the storageAccountName property: The storage account name to access the generated code.
     * 
     * @return the storageAccountName value.
     */
    public String storageAccountName() {
        return this.storageAccountName;
    }

    /**
     * Get the containerName property: The storage account container to access the generated code.
     * 
     * @return the containerName value.
     */
    public String containerName() {
        return this.containerName;
    }

    /**
     * Get the blobName property: The storage account blob name to access the generated code.
     * 
     * @return the blobName value.
     */
    public String blobName() {
        return this.blobName;
    }

    /**
     * Get the generatedArmTemplate property: The generated code content in JSON string format.
     * 
     * @return the generatedArmTemplate value.
     */
    public String generatedArmTemplate() {
        return this.generatedArmTemplate;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (topLevelMgDisplayName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property topLevelMgDisplayName in model GenerateLandingZoneResultInner"));
        }
        if (landingZoneConfigurationName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property landingZoneConfigurationName in model GenerateLandingZoneResultInner"));
        }
        if (generatedCodeUrl() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property generatedCodeUrl in model GenerateLandingZoneResultInner"));
        }
        if (storageAccountName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property storageAccountName in model GenerateLandingZoneResultInner"));
        }
        if (containerName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property containerName in model GenerateLandingZoneResultInner"));
        }
        if (blobName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property blobName in model GenerateLandingZoneResultInner"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(GenerateLandingZoneResultInner.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("topLevelMgDisplayName", this.topLevelMgDisplayName);
        jsonWriter.writeStringField("landingZoneConfigurationName", this.landingZoneConfigurationName);
        jsonWriter.writeStringField("generatedCodeUrl", this.generatedCodeUrl);
        jsonWriter.writeStringField("storageAccountName", this.storageAccountName);
        jsonWriter.writeStringField("containerName", this.containerName);
        jsonWriter.writeStringField("blobName", this.blobName);
        jsonWriter.writeStringField("generatedArmTemplate", this.generatedArmTemplate);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GenerateLandingZoneResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GenerateLandingZoneResultInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the GenerateLandingZoneResultInner.
     */
    public static GenerateLandingZoneResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GenerateLandingZoneResultInner deserializedGenerateLandingZoneResultInner
                = new GenerateLandingZoneResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("topLevelMgDisplayName".equals(fieldName)) {
                    deserializedGenerateLandingZoneResultInner.topLevelMgDisplayName = reader.getString();
                } else if ("landingZoneConfigurationName".equals(fieldName)) {
                    deserializedGenerateLandingZoneResultInner.landingZoneConfigurationName = reader.getString();
                } else if ("generatedCodeUrl".equals(fieldName)) {
                    deserializedGenerateLandingZoneResultInner.generatedCodeUrl = reader.getString();
                } else if ("storageAccountName".equals(fieldName)) {
                    deserializedGenerateLandingZoneResultInner.storageAccountName = reader.getString();
                } else if ("containerName".equals(fieldName)) {
                    deserializedGenerateLandingZoneResultInner.containerName = reader.getString();
                } else if ("blobName".equals(fieldName)) {
                    deserializedGenerateLandingZoneResultInner.blobName = reader.getString();
                } else if ("generatedArmTemplate".equals(fieldName)) {
                    deserializedGenerateLandingZoneResultInner.generatedArmTemplate = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGenerateLandingZoneResultInner;
        });
    }
}
