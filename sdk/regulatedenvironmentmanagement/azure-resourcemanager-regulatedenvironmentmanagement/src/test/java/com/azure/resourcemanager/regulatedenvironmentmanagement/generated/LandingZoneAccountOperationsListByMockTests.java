// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.regulatedenvironmentmanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.regulatedenvironmentmanagement.RegulatedEnvironmentManagementManager;
import com.azure.resourcemanager.regulatedenvironmentmanagement.models.LandingZoneAccountResource;
import com.azure.resourcemanager.regulatedenvironmentmanagement.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LandingZoneAccountOperationsListByMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Canceled\",\"storageAccount\":\"kdeemaofmxagkvtm\"},\"identity\":{\"principalId\":\"qkrhahvljua\",\"tenantId\":\"quhcdhmduala\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"vxpvgomz\":{\"clientId\":\"fadmws\",\"principalId\":\"r\"},\"auhashsfwx\":{\"clientId\":\"misgwbnb\",\"principalId\":\"ldawkzbaliourqha\"},\"ovbvmeueciv\":{\"clientId\":\"owzxcu\",\"principalId\":\"cjooxdjebwpucwwf\"}}},\"location\":\"zceuojgjrw\",\"tags\":{\"nrjawgqwg\":\"iotwmcdytdxwit\",\"klwndnhjdauwhv\":\"hniskxfbkpyc\",\"zbtd\":\"l\"},\"id\":\"xujznbmpowu\",\"name\":\"przqlveu\",\"type\":\"lupj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RegulatedEnvironmentManagementManager manager = RegulatedEnvironmentManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<LandingZoneAccountResource> response = manager.landingZoneAccountOperations()
            .listByResourceGroup("ehhseyvjusrts", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zceuojgjrw", response.iterator().next().location());
        Assertions.assertEquals("iotwmcdytdxwit", response.iterator().next().tags().get("nrjawgqwg"));
        Assertions.assertEquals("kdeemaofmxagkvtm", response.iterator().next().properties().storageAccount());
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.iterator().next().identity().type());
    }
}
