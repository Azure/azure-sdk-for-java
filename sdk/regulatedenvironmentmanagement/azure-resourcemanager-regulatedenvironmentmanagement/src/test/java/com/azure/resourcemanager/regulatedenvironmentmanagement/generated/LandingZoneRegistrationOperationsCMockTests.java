// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.regulatedenvironmentmanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.regulatedenvironmentmanagement.RegulatedEnvironmentManagementManager;
import com.azure.resourcemanager.regulatedenvironmentmanagement.models.LZRegistration;
import com.azure.resourcemanager.regulatedenvironmentmanagement.models.LZRegistrationProperties;
import com.azure.resourcemanager.regulatedenvironmentmanagement.models.ManagedIdentityProperties;
import com.azure.resourcemanager.regulatedenvironmentmanagement.models.ManagedIdentityResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LandingZoneRegistrationOperationsCMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"existingTopLevelMgId\":\"jihy\",\"existingLandingZoneConfigurationId\":\"ozphvwauyqncygu\",\"managedIdentity\":{\"type\":\"UserAssigned\",\"userAssignedIdentityResourceId\":\"p\"}},\"id\":\"scw\",\"name\":\"qupevzh\",\"type\":\"stotxh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RegulatedEnvironmentManagementManager manager = RegulatedEnvironmentManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        LZRegistration response = manager.landingZoneRegistrationOperations()
            .define("qkagfhsxt")
            .withExistingLandingZoneAccount("gplcrpwjxeznoigb", "njwmwkpnbsazejj")
            .withProperties(new LZRegistrationProperties().withExistingTopLevelMgId("zxnfaaz")
                .withExistingLandingZoneConfigurationId("xdtnkdmkqjjlw")
                .withManagedIdentity(
                    new ManagedIdentityProperties().withType(ManagedIdentityResourceType.SYSTEM_ASSIGNED)
                        .withUserAssignedIdentityResourceId("rkpyouaibrebqaay")))
            .create();

        Assertions.assertEquals("jihy", response.properties().existingTopLevelMgId());
        Assertions.assertEquals("ozphvwauyqncygu", response.properties().existingLandingZoneConfigurationId());
        Assertions.assertEquals(ManagedIdentityResourceType.USER_ASSIGNED,
            response.properties().managedIdentity().type());
        Assertions.assertEquals("p", response.properties().managedIdentity().userAssignedIdentityResourceId());
    }
}
