// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.regulatedenvironmentmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.regulatedenvironmentmanagement.fluent.models.LandingZoneRegistrationResourceInner;
import com.azure.resourcemanager.regulatedenvironmentmanagement.models.LandingZoneRegistrationResourceProperties;
import com.azure.resourcemanager.regulatedenvironmentmanagement.models.ManagedIdentityProperties;
import com.azure.resourcemanager.regulatedenvironmentmanagement.models.ManagedIdentityResourceType;
import org.junit.jupiter.api.Assertions;

public final class LandingZoneRegistrationResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LandingZoneRegistrationResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Deleting\",\"existingTopLevelMgId\":\"zpuzycisp\",\"existingLandingZoneConfigurationId\":\"qzahmgkbrp\",\"managedIdentity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentityResourceId\":\"ibnuqqkpik\"}},\"id\":\"rgvtqag\",\"name\":\"buynhijggm\",\"type\":\"bfs\"}")
            .toObject(LandingZoneRegistrationResourceInner.class);
        Assertions.assertEquals("zpuzycisp", model.properties().existingTopLevelMgId());
        Assertions.assertEquals("qzahmgkbrp", model.properties().existingLandingZoneConfigurationId());
        Assertions.assertEquals(ManagedIdentityResourceType.SYSTEM_ASSIGNED,
            model.properties().managedIdentity().type());
        Assertions.assertEquals("ibnuqqkpik", model.properties().managedIdentity().userAssignedIdentityResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LandingZoneRegistrationResourceInner model = new LandingZoneRegistrationResourceInner()
            .withProperties(new LandingZoneRegistrationResourceProperties().withExistingTopLevelMgId("zpuzycisp")
                .withExistingLandingZoneConfigurationId("qzahmgkbrp")
                .withManagedIdentity(
                    new ManagedIdentityProperties().withType(ManagedIdentityResourceType.SYSTEM_ASSIGNED)
                        .withUserAssignedIdentityResourceId("ibnuqqkpik")));
        model = BinaryData.fromObject(model).toObject(LandingZoneRegistrationResourceInner.class);
        Assertions.assertEquals("zpuzycisp", model.properties().existingTopLevelMgId());
        Assertions.assertEquals("qzahmgkbrp", model.properties().existingLandingZoneConfigurationId());
        Assertions.assertEquals(ManagedIdentityResourceType.SYSTEM_ASSIGNED,
            model.properties().managedIdentity().type());
        Assertions.assertEquals("ibnuqqkpik", model.properties().managedIdentity().userAssignedIdentityResourceId());
    }
}
