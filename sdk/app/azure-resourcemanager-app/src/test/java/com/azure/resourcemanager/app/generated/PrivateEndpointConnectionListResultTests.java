// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.app.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.app.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.app.models.PrivateEndpoint;
import com.azure.resourcemanager.app.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.app.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.app.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"groupIds\":[\"lembnkbwvqvxkdi\",\"qihebw\",\"swbzuwfmdurage\",\"izvcjfe\"],\"privateEndpoint\":{\"id\":\"djub\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"igkxkbsazga\",\"actionsRequired\":\"acy\"},\"provisioningState\":\"Waiting\"},\"id\":\"dmspof\",\"name\":\"pv\",\"type\":\"hryl\"}],\"nextLink\":\"ofrzgb\"}")
            .toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("igkxkbsazga", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("acy", model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResult model
            = new PrivateEndpointConnectionListResult()
                .withValue(Arrays.asList(new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                        .withDescription("igkxkbsazga")
                        .withActionsRequired("acy"))));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("igkxkbsazga", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("acy", model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
    }
}
