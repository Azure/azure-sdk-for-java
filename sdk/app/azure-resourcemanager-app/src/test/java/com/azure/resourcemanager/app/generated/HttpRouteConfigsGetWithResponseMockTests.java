// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.app.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.app.ContainerAppsApiManager;
import com.azure.resourcemanager.app.models.BindingType;
import com.azure.resourcemanager.app.models.HttpRouteConfig;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class HttpRouteConfigsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Canceled\",\"provisioningErrors\":[{\"timestamp\":\"2021-10-11T19:11:58Z\",\"message\":\"y\"}],\"fqdn\":\"jahwriuomzczf\",\"customDomains\":[{\"name\":\"eevsa\",\"bindingType\":\"Auto\",\"certificateId\":\"p\"},{\"name\":\"axikhfjqebglcxk\",\"bindingType\":\"SniEnabled\",\"certificateId\":\"romv\"}],\"rules\":[{\"targets\":[{\"containerApp\":\"mtmesrfsv\"}],\"routes\":[{},{},{},{}],\"description\":\"zpatqtd\"},{\"targets\":[{\"containerApp\":\"xspvckojazb\"},{\"containerApp\":\"gspftesu\"},{\"containerApp\":\"zpvpvdyly\"}],\"routes\":[{},{},{},{}],\"description\":\"qseusrfjbdxzfxnx\"},{\"targets\":[{\"containerApp\":\"muoswkjmdih\"}],\"routes\":[{},{},{}],\"description\":\"yzlwhbwzjnufzrf\"},{\"targets\":[{\"containerApp\":\"qgnnbz\"}],\"routes\":[{},{},{},{}],\"description\":\"edzuub\"}]},\"id\":\"vgjs\",\"name\":\"mt\",\"type\":\"jjvavdpww\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        HttpRouteConfig response = manager.httpRouteConfigs()
            .getWithResponse("clrvtzqnrbctbh", "jhxpcvrd", "y", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("eevsa", response.properties().customDomains().get(0).name());
        Assertions.assertEquals(BindingType.AUTO, response.properties().customDomains().get(0).bindingType());
        Assertions.assertEquals("p", response.properties().customDomains().get(0).certificateId());
        Assertions.assertEquals("mtmesrfsv", response.properties().rules().get(0).targets().get(0).containerApp());
        Assertions.assertEquals("zpatqtd", response.properties().rules().get(0).description());
    }
}
