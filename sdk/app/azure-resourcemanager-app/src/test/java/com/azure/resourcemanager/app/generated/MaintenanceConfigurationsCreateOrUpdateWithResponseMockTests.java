// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.app.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.app.ContainerAppsApiManager;
import com.azure.resourcemanager.app.models.MaintenanceConfigurationResource;
import com.azure.resourcemanager.app.models.ScheduledEntry;
import com.azure.resourcemanager.app.models.WeekDay;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MaintenanceConfigurationsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"scheduledEntries\":[{\"weekDay\":\"Tuesday\",\"startHourUtc\":1864342091,\"durationHours\":229729592},{\"weekDay\":\"Thursday\",\"startHourUtc\":1659751922,\"durationHours\":485350824},{\"weekDay\":\"Tuesday\",\"startHourUtc\":962255720,\"durationHours\":1456715008}]},\"id\":\"gprkjgu\",\"name\":\"rjmwvvbtuqkxxi\",\"type\":\"wgxql\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        MaintenanceConfigurationResource response = manager.maintenanceConfigurations()
            .define("hmxvvl")
            .withExistingManagedEnvironment("pcqzg", "hotjec")
            .withScheduledEntries(Arrays.asList(
                new ScheduledEntry().withWeekDay(WeekDay.FRIDAY)
                    .withStartHourUtc(1354713617)
                    .withDurationHours(1723467853),
                new ScheduledEntry().withWeekDay(WeekDay.MONDAY)
                    .withStartHourUtc(750981171)
                    .withDurationHours(709169599),
                new ScheduledEntry().withWeekDay(WeekDay.FRIDAY)
                    .withStartHourUtc(1117495980)
                    .withDurationHours(782286269)))
            .create();

        Assertions.assertEquals(WeekDay.TUESDAY, response.scheduledEntries().get(0).weekDay());
        Assertions.assertEquals(1864342091, response.scheduledEntries().get(0).startHourUtc());
        Assertions.assertEquals(229729592, response.scheduledEntries().get(0).durationHours());
    }
}
