// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.app.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.app.ContainerAppsApiManager;
import com.azure.resourcemanager.app.models.Diagnostics;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobsListDetectorsMockTests {
    @Test
    public void testListDetectors() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"metadata\":{\"id\":\"cmufunlcpxxv\",\"name\":\"yeyng\",\"description\":\"vrquv\",\"author\":\"gglpmcrdcuelj\",\"category\":\"ahxm\",\"supportTopicList\":[{\"id\":\"arvsx\",\"pesId\":\"bglcjkayspthzodu\"},{\"id\":\"lmjtg\",\"pesId\":\"ioskkfmkmfdjxyxg\"},{\"id\":\"kqvjcteoedlr\",\"pesId\":\"skkzpxvjnzdpvo\"}],\"analysisTypes\":[\"hpcnabxzfsn\",\"gyte\"],\"type\":\"zilmhivzkww\",\"score\":40.958393},\"dataset\":[{\"table\":{\"tableName\":\"dajlskzpt\",\"columns\":[{},{},{}],\"rows\":[\"dataeucyrth\",\"dataqlehmcgcjeinu\"]},\"renderingProperties\":{\"type\":1413570369,\"title\":\"mvfejvqnttmbqd\",\"description\":\"zfivfokpysthhzag\",\"isVisible\":false}},{\"table\":{\"tableName\":\"rlhgenuze\",\"columns\":[{},{},{}],\"rows\":[\"dataeba\"]},\"renderingProperties\":{\"type\":1830979931,\"title\":\"rzl\",\"description\":\"mdqgmihzpimcqr\",\"isVisible\":true}},{\"table\":{\"tableName\":\"inklogxs\",\"columns\":[{},{},{},{}],\"rows\":[\"datahzvqnsqktcmbjwz\",\"dataoslpky\"]},\"renderingProperties\":{\"type\":1502522516,\"title\":\"kzpgaj\",\"description\":\"jcemqbmfuvqar\",\"isVisible\":false}},{\"table\":{\"tableName\":\"rebluimmbwxsf\",\"columns\":[{},{},{}],\"rows\":[\"datavxekraokqkbud\"]},\"renderingProperties\":{\"type\":2107378541,\"title\":\"kbavlyt\",\"description\":\"aknwfrkebsmh\",\"isVisible\":false}}],\"status\":{\"message\":\"igatolekscbctna\",\"statusId\":1168856320},\"dataProviderMetadata\":{\"providerName\":\"bzxpdcld\",\"propertyBag\":[{\"name\":\"n\",\"value\":\"laimouxwk\"},{\"name\":\"mud\",\"value\":\"coibicziuswswjrk\"},{\"name\":\"sjhbtq\",\"value\":\"yfscyrfwbivqvo\"}]}},\"id\":\"uyzwvbhlimbyqecr\",\"name\":\"odlikcdrdaasax\",\"type\":\"obsmf\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Diagnostics> response
            = manager.jobs().listDetectors("xkecifhocj", "wkloozr", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hpcnabxzfsn",
            response.iterator().next().properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("dajlskzpt",
            response.iterator().next().properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(1413570369,
            response.iterator().next().properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("mvfejvqnttmbqd",
            response.iterator().next().properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("zfivfokpysthhzag",
            response.iterator().next().properties().dataset().get(0).renderingProperties().description());
        Assertions
            .assertFalse(response.iterator().next().properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("igatolekscbctna", response.iterator().next().properties().status().message());
        Assertions.assertEquals(1168856320, response.iterator().next().properties().status().statusId());
        Assertions.assertEquals("bzxpdcld",
            response.iterator().next().properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("n",
            response.iterator().next().properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("laimouxwk",
            response.iterator().next().properties().dataProviderMetadata().propertyBag().get(0).value());
    }
}
