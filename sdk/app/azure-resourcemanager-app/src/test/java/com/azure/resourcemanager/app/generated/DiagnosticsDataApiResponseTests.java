// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.app.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.app.models.DiagnosticDataTableResponseColumn;
import com.azure.resourcemanager.app.models.DiagnosticDataTableResponseObject;
import com.azure.resourcemanager.app.models.DiagnosticRendering;
import com.azure.resourcemanager.app.models.DiagnosticsDataApiResponse;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DiagnosticsDataApiResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiagnosticsDataApiResponse model = BinaryData.fromString(
            "{\"table\":{\"tableName\":\"rkjpvdwxfzwii\",\"columns\":[{\"columnName\":\"bhyzsxjr\",\"dataType\":\"mbtrnegvmnvu\",\"columnType\":\"qvldspastjbkkd\"}],\"rows\":[\"datavestmjl\"]},\"renderingProperties\":{\"type\":1811256055,\"title\":\"ozapeew\",\"description\":\"pxlktwkuziycsl\",\"isVisible\":true}}")
            .toObject(DiagnosticsDataApiResponse.class);
        Assertions.assertEquals("rkjpvdwxfzwii", model.table().tableName());
        Assertions.assertEquals("bhyzsxjr", model.table().columns().get(0).columnName());
        Assertions.assertEquals("mbtrnegvmnvu", model.table().columns().get(0).dataType());
        Assertions.assertEquals("qvldspastjbkkd", model.table().columns().get(0).columnType());
        Assertions.assertEquals(1811256055, model.renderingProperties().type());
        Assertions.assertEquals("ozapeew", model.renderingProperties().title());
        Assertions.assertEquals("pxlktwkuziycsl", model.renderingProperties().description());
        Assertions.assertTrue(model.renderingProperties().isVisible());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiagnosticsDataApiResponse model = new DiagnosticsDataApiResponse()
            .withTable(new DiagnosticDataTableResponseObject().withTableName("rkjpvdwxfzwii")
                .withColumns(Arrays.asList(new DiagnosticDataTableResponseColumn().withColumnName("bhyzsxjr")
                    .withDataType("mbtrnegvmnvu")
                    .withColumnType("qvldspastjbkkd")))
                .withRows(Arrays.asList("datavestmjl")))
            .withRenderingProperties(new DiagnosticRendering().withType(1811256055)
                .withTitle("ozapeew")
                .withDescription("pxlktwkuziycsl")
                .withIsVisible(true));
        model = BinaryData.fromObject(model).toObject(DiagnosticsDataApiResponse.class);
        Assertions.assertEquals("rkjpvdwxfzwii", model.table().tableName());
        Assertions.assertEquals("bhyzsxjr", model.table().columns().get(0).columnName());
        Assertions.assertEquals("mbtrnegvmnvu", model.table().columns().get(0).dataType());
        Assertions.assertEquals("qvldspastjbkkd", model.table().columns().get(0).columnType());
        Assertions.assertEquals(1811256055, model.renderingProperties().type());
        Assertions.assertEquals("ozapeew", model.renderingProperties().title());
        Assertions.assertEquals("pxlktwkuziycsl", model.renderingProperties().description());
        Assertions.assertTrue(model.renderingProperties().isVisible());
    }
}
