// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.app.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.app.fluent.models.DiagnosticsInner;
import com.azure.resourcemanager.app.models.DiagnosticDataProviderMetadata;
import com.azure.resourcemanager.app.models.DiagnosticDataProviderMetadataPropertyBagItem;
import com.azure.resourcemanager.app.models.DiagnosticDataTableResponseColumn;
import com.azure.resourcemanager.app.models.DiagnosticDataTableResponseObject;
import com.azure.resourcemanager.app.models.DiagnosticRendering;
import com.azure.resourcemanager.app.models.DiagnosticSupportTopic;
import com.azure.resourcemanager.app.models.DiagnosticsDataApiResponse;
import com.azure.resourcemanager.app.models.DiagnosticsDefinition;
import com.azure.resourcemanager.app.models.DiagnosticsProperties;
import com.azure.resourcemanager.app.models.DiagnosticsStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DiagnosticsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiagnosticsInner model = BinaryData.fromString(
            "{\"properties\":{\"metadata\":{\"id\":\"kwcf\",\"name\":\"ljyxgtczhe\",\"description\":\"bsdshmkxmaehvbbx\",\"author\":\"iplt\",\"category\":\"htba\",\"supportTopicList\":[{\"id\":\"ywrckp\",\"pesId\":\"lyhpluodpvruud\"}],\"analysisTypes\":[\"ibthostgktstvd\"],\"type\":\"clzedqbcvh\",\"score\":1.2831509},\"dataset\":[{\"table\":{\"tableName\":\"qkdlw\",\"columns\":[{},{}],\"rows\":[\"datamlkxtrqjfs\"]},\"renderingProperties\":{\"type\":539417397,\"title\":\"xhwgfwsrtaw\",\"description\":\"ezbrhubskh\",\"isVisible\":false}},{\"table\":{\"tableName\":\"ookk\",\"columns\":[{},{},{}],\"rows\":[\"datavleo\",\"datafmluiqtqzfavyvn\",\"dataqybaryeua\",\"datajkqa\"]},\"renderingProperties\":{\"type\":616874585,\"title\":\"lesjcbhe\",\"description\":\"ntiew\",\"isVisible\":false}},{\"table\":{\"tableName\":\"quwrbehwag\",\"columns\":[{},{},{},{}],\"rows\":[\"datafkmr\"]},\"renderingProperties\":{\"type\":226189444,\"title\":\"hmxtdr\",\"description\":\"utacoe\",\"isVisible\":false}},{\"table\":{\"tableName\":\"zcjznmwcpmgua\",\"columns\":[{},{},{},{}],\"rows\":[\"datafactka\",\"datazov\"]},\"renderingProperties\":{\"type\":753608642,\"title\":\"uxxpshne\",\"description\":\"ulfgslqu\",\"isVisible\":true}}],\"status\":{\"message\":\"enr\",\"statusId\":1559984904},\"dataProviderMetadata\":{\"providerName\":\"jbazpjuohminy\",\"propertyBag\":[{\"name\":\"rwm\",\"value\":\"vwpklvxwmygdxp\"},{\"name\":\"qchiszep\",\"value\":\"bjcrxgibbdaxco\"},{\"name\":\"ozauorsukokwb\",\"value\":\"lhlv\"},{\"name\":\"uepzl\",\"value\":\"hw\"}]}},\"id\":\"oldweyuqdu\",\"name\":\"vmnnrw\",\"type\":\"biorktal\"}")
            .toObject(DiagnosticsInner.class);
        Assertions.assertEquals("ibthostgktstvd", model.properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("qkdlw", model.properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(539417397, model.properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("xhwgfwsrtaw", model.properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("ezbrhubskh", model.properties().dataset().get(0).renderingProperties().description());
        Assertions.assertFalse(model.properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("enr", model.properties().status().message());
        Assertions.assertEquals(1559984904, model.properties().status().statusId());
        Assertions.assertEquals("jbazpjuohminy", model.properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("rwm", model.properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("vwpklvxwmygdxp",
            model.properties().dataProviderMetadata().propertyBag().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiagnosticsInner model = new DiagnosticsInner().withProperties(new DiagnosticsProperties()
            .withMetadata(new DiagnosticsDefinition().withSupportTopicList(Arrays.asList(new DiagnosticSupportTopic()))
                .withAnalysisTypes(Arrays.asList("ibthostgktstvd")))
            .withDataset(Arrays.asList(
                new DiagnosticsDataApiResponse()
                    .withTable(new DiagnosticDataTableResponseObject().withTableName("qkdlw")
                        .withColumns(Arrays.asList(new DiagnosticDataTableResponseColumn(),
                            new DiagnosticDataTableResponseColumn()))
                        .withRows(Arrays.asList("datamlkxtrqjfs")))
                    .withRenderingProperties(new DiagnosticRendering().withType(539417397)
                        .withTitle("xhwgfwsrtaw")
                        .withDescription("ezbrhubskh")
                        .withIsVisible(false)),
                new DiagnosticsDataApiResponse()
                    .withTable(new DiagnosticDataTableResponseObject().withTableName("ookk")
                        .withColumns(Arrays.asList(new DiagnosticDataTableResponseColumn(),
                            new DiagnosticDataTableResponseColumn(), new DiagnosticDataTableResponseColumn()))
                        .withRows(Arrays.asList("datavleo", "datafmluiqtqzfavyvn", "dataqybaryeua", "datajkqa")))
                    .withRenderingProperties(new DiagnosticRendering().withType(616874585)
                        .withTitle("lesjcbhe")
                        .withDescription("ntiew")
                        .withIsVisible(false)),
                new DiagnosticsDataApiResponse()
                    .withTable(new DiagnosticDataTableResponseObject().withTableName("quwrbehwag")
                        .withColumns(Arrays.asList(new DiagnosticDataTableResponseColumn(),
                            new DiagnosticDataTableResponseColumn(), new DiagnosticDataTableResponseColumn(),
                            new DiagnosticDataTableResponseColumn()))
                        .withRows(Arrays.asList("datafkmr")))
                    .withRenderingProperties(new DiagnosticRendering().withType(226189444)
                        .withTitle("hmxtdr")
                        .withDescription("utacoe")
                        .withIsVisible(false)),
                new DiagnosticsDataApiResponse()
                    .withTable(new DiagnosticDataTableResponseObject().withTableName("zcjznmwcpmgua")
                        .withColumns(Arrays.asList(new DiagnosticDataTableResponseColumn(),
                            new DiagnosticDataTableResponseColumn(), new DiagnosticDataTableResponseColumn(),
                            new DiagnosticDataTableResponseColumn()))
                        .withRows(Arrays.asList("datafactka", "datazov")))
                    .withRenderingProperties(new DiagnosticRendering().withType(753608642)
                        .withTitle("uxxpshne")
                        .withDescription("ulfgslqu")
                        .withIsVisible(true))))
            .withStatus(new DiagnosticsStatus().withMessage("enr").withStatusId(1559984904))
            .withDataProviderMetadata(new DiagnosticDataProviderMetadata().withProviderName("jbazpjuohminy")
                .withPropertyBag(Arrays.asList(
                    new DiagnosticDataProviderMetadataPropertyBagItem().withName("rwm").withValue("vwpklvxwmygdxp"),
                    new DiagnosticDataProviderMetadataPropertyBagItem().withName("qchiszep")
                        .withValue("bjcrxgibbdaxco"),
                    new DiagnosticDataProviderMetadataPropertyBagItem().withName("ozauorsukokwb").withValue("lhlv"),
                    new DiagnosticDataProviderMetadataPropertyBagItem().withName("uepzl").withValue("hw")))));
        model = BinaryData.fromObject(model).toObject(DiagnosticsInner.class);
        Assertions.assertEquals("ibthostgktstvd", model.properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("qkdlw", model.properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(539417397, model.properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("xhwgfwsrtaw", model.properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("ezbrhubskh", model.properties().dataset().get(0).renderingProperties().description());
        Assertions.assertFalse(model.properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("enr", model.properties().status().message());
        Assertions.assertEquals(1559984904, model.properties().status().statusId());
        Assertions.assertEquals("jbazpjuohminy", model.properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("rwm", model.properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("vwpklvxwmygdxp",
            model.properties().dataProviderMetadata().propertyBag().get(0).value());
    }
}
