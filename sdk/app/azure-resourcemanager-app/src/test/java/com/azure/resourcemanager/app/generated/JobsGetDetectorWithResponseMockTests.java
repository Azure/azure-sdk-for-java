// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.app.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.app.ContainerAppsApiManager;
import com.azure.resourcemanager.app.models.Diagnostics;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobsGetDetectorWithResponseMockTests {
    @Test
    public void testGetDetectorWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"metadata\":{\"id\":\"n\",\"name\":\"ywsxvjabjqqaxu\",\"description\":\"y\",\"author\":\"nudn\",\"category\":\"abhjx\",\"supportTopicList\":[{\"id\":\"euipmpvksmitnsq\",\"pesId\":\"l\"},{\"id\":\"lkrdpqgfhy\",\"pesId\":\"rakkld\"}],\"analysisTypes\":[\"wfcmfcnr\"],\"type\":\"jqmatxjtielnzq\",\"score\":22.43058},\"dataset\":[{\"table\":{\"tableName\":\"mtlpqagyno\",\"columns\":[{},{},{}],\"rows\":[\"datacalincryqxz\",\"dataaqzi\",\"datamqimiymqru\"]},\"renderingProperties\":{\"type\":1939195457,\"title\":\"upet\",\"description\":\"vvoqsbpkf\",\"isVisible\":true}},{\"table\":{\"tableName\":\"gxsyaowuzowpu\",\"columns\":[{},{}],\"rows\":[\"dataprgukxrztiochl\",\"datatixmqrudjiz\",\"databfzm\",\"datarunfhiucnmfb\"]},\"renderingProperties\":{\"type\":2078932157,\"title\":\"tk\",\"description\":\"mzuedkyzbfvxovq\",\"isVisible\":true}}],\"status\":{\"message\":\"q\",\"statusId\":1828475728},\"dataProviderMetadata\":{\"providerName\":\"nhyhlwcjsqggj\",\"propertyBag\":[{\"name\":\"xrqrkijpeuqlsd\",\"value\":\"qztvx\"}]}},\"id\":\"wwmjs\",\"name\":\"en\",\"type\":\"wwa\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Diagnostics response = manager.jobs()
            .getDetectorWithResponse("wiyjvzuko", "r", "awn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("wfcmfcnr", response.properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("mtlpqagyno", response.properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(1939195457, response.properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("upet", response.properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("vvoqsbpkf",
            response.properties().dataset().get(0).renderingProperties().description());
        Assertions.assertTrue(response.properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("q", response.properties().status().message());
        Assertions.assertEquals(1828475728, response.properties().status().statusId());
        Assertions.assertEquals("nhyhlwcjsqggj", response.properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("xrqrkijpeuqlsd",
            response.properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("qztvx", response.properties().dataProviderMetadata().propertyBag().get(0).value());
    }
}
