// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.app.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.app.models.DiagnosticDataTableResponseColumn;
import com.azure.resourcemanager.app.models.DiagnosticDataTableResponseObject;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DiagnosticDataTableResponseObjectTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiagnosticDataTableResponseObject model = BinaryData.fromString(
            "{\"tableName\":\"uztcktyhjtqed\",\"columns\":[{\"columnName\":\"lwmmrqzzrrjv\",\"dataType\":\"lydzgk\",\"columnType\":\"qeevt\"},{\"columnName\":\"pryu\",\"dataType\":\"wytpzdmovz\",\"columnType\":\"va\"},{\"columnName\":\"zqadf\",\"dataType\":\"z\",\"columnType\":\"iglaecx\"},{\"columnName\":\"t\",\"dataType\":\"okpvzm\",\"columnType\":\"t\"}],\"rows\":[\"datagxobfirclnp\",\"dataciayzriykhya\",\"datafvjlboxqvkjlmx\"]}")
            .toObject(DiagnosticDataTableResponseObject.class);
        Assertions.assertEquals("uztcktyhjtqed", model.tableName());
        Assertions.assertEquals("lwmmrqzzrrjv", model.columns().get(0).columnName());
        Assertions.assertEquals("lydzgk", model.columns().get(0).dataType());
        Assertions.assertEquals("qeevt", model.columns().get(0).columnType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiagnosticDataTableResponseObject model = new DiagnosticDataTableResponseObject().withTableName("uztcktyhjtqed")
            .withColumns(Arrays.asList(
                new DiagnosticDataTableResponseColumn().withColumnName("lwmmrqzzrrjv")
                    .withDataType("lydzgk")
                    .withColumnType("qeevt"),
                new DiagnosticDataTableResponseColumn().withColumnName("pryu")
                    .withDataType("wytpzdmovz")
                    .withColumnType("va"),
                new DiagnosticDataTableResponseColumn().withColumnName("zqadf")
                    .withDataType("z")
                    .withColumnType("iglaecx"),
                new DiagnosticDataTableResponseColumn().withColumnName("t").withDataType("okpvzm").withColumnType("t")))
            .withRows(Arrays.asList("datagxobfirclnp", "dataciayzriykhya", "datafvjlboxqvkjlmx"));
        model = BinaryData.fromObject(model).toObject(DiagnosticDataTableResponseObject.class);
        Assertions.assertEquals("uztcktyhjtqed", model.tableName());
        Assertions.assertEquals("lwmmrqzzrrjv", model.columns().get(0).columnName());
        Assertions.assertEquals("lydzgk", model.columns().get(0).dataType());
        Assertions.assertEquals("qeevt", model.columns().get(0).columnType());
    }
}
