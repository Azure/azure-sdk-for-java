// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.app.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.app.fluent.models.OperationDetailInner;
import com.azure.resourcemanager.app.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationDetailInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationDetailInner model = BinaryData.fromString(
            "{\"name\":\"enxpmyyefr\",\"isDataAction\":true,\"display\":{\"provider\":\"qqs\",\"resource\":\"waoqvmmb\",\"operation\":\"qfr\",\"description\":\"lkzmegnitgvkxl\"},\"origin\":\"qdrfegcealzxwhc\"}")
            .toObject(OperationDetailInner.class);
        Assertions.assertEquals("enxpmyyefr", model.name());
        Assertions.assertTrue(model.isDataAction());
        Assertions.assertEquals("qqs", model.display().provider());
        Assertions.assertEquals("waoqvmmb", model.display().resource());
        Assertions.assertEquals("qfr", model.display().operation());
        Assertions.assertEquals("lkzmegnitgvkxl", model.display().description());
        Assertions.assertEquals("qdrfegcealzxwhc", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationDetailInner model = new OperationDetailInner().withName("enxpmyyefr")
            .withIsDataAction(true)
            .withDisplay(new OperationDisplay().withProvider("qqs")
                .withResource("waoqvmmb")
                .withOperation("qfr")
                .withDescription("lkzmegnitgvkxl"))
            .withOrigin("qdrfegcealzxwhc");
        model = BinaryData.fromObject(model).toObject(OperationDetailInner.class);
        Assertions.assertEquals("enxpmyyefr", model.name());
        Assertions.assertTrue(model.isDataAction());
        Assertions.assertEquals("qqs", model.display().provider());
        Assertions.assertEquals("waoqvmmb", model.display().resource());
        Assertions.assertEquals("qfr", model.display().operation());
        Assertions.assertEquals("lkzmegnitgvkxl", model.display().description());
        Assertions.assertEquals("qdrfegcealzxwhc", model.origin());
    }
}
