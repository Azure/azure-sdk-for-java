// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.app.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.app.models.ManagedServiceIdentity;
import com.azure.resourcemanager.app.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.app.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedServiceIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedServiceIdentity model = BinaryData.fromString(
            "{\"principalId\":\"749e8cc7-9e6f-4031-ae0e-08758d775098\",\"tenantId\":\"b7d9372b-af4a-45ad-8ace-43c42e0e648c\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"jbhckfrlhr\":{\"principalId\":\"43d5fa5e-742d-408a-bb67-f75e5ef76906\",\"clientId\":\"0c9e7cfe-8cd4-4e55-be7c-43525565d1e3\"},\"kyv\":{\"principalId\":\"c92c77f0-86b9-4e68-82aa-f60d071b30db\",\"clientId\":\"40ce3f73-cc12-4cc0-8731-12ed86c18b12\"},\"anuzbpzkafkuw\":{\"principalId\":\"49d82a69-6ff2-4e80-a19f-e22ac566ff6e\",\"clientId\":\"8091cc86-fc06-4dd3-b621-d838a559224d\"}}}")
            .toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedServiceIdentity model = new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED)
            .withUserAssignedIdentities(mapOf("jbhckfrlhr", new UserAssignedIdentity(), "kyv",
                new UserAssignedIdentity(), "anuzbpzkafkuw", new UserAssignedIdentity()));
        model = BinaryData.fromObject(model).toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
