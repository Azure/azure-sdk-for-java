// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.app.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.app.fluent.models.ReplicaCollectionInner;
import com.azure.resourcemanager.app.fluent.models.ReplicaInner;
import com.azure.resourcemanager.app.models.ReplicaContainer;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ReplicaCollectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReplicaCollectionInner model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"createdTime\":\"2021-11-05T04:06:51Z\",\"runningState\":\"NotRunning\",\"runningStateDetails\":\"m\",\"containers\":[{\"name\":\"fktgplc\",\"containerId\":\"wjxeznoigbr\",\"ready\":false,\"started\":false,\"restartCount\":490713776,\"runningState\":\"Running\",\"runningStateDetails\":\"azej\",\"logStreamEndpoint\":\"qkagfhsxt\",\"execEndpoint\":\"ugzxnf\"}],\"initContainers\":[{\"name\":\"xdtnkdmkqjjlw\",\"containerId\":\"nvrk\",\"ready\":false,\"started\":true,\"restartCount\":583930793,\"runningState\":\"Terminated\",\"runningStateDetails\":\"qaaysjkixqt\",\"logStreamEndpoint\":\"ttezlw\",\"execEndpoint\":\"fiakpjpqqm\"},{\"name\":\"d\",\"containerId\":\"mmji\",\"ready\":false,\"started\":false,\"restartCount\":448290186,\"runningState\":\"Terminated\",\"runningStateDetails\":\"uyqncygupkvipmd\",\"logStreamEndpoint\":\"wx\",\"execEndpoint\":\"pevzhfst\"}]},\"id\":\"xhojuj\",\"name\":\"ypelmcu\",\"type\":\"hixbjxyfwnyl\"}]}")
            .toObject(ReplicaCollectionInner.class);
        Assertions.assertEquals("fktgplc", model.value().get(0).containers().get(0).name());
        Assertions.assertEquals("wjxeznoigbr", model.value().get(0).containers().get(0).containerId());
        Assertions.assertFalse(model.value().get(0).containers().get(0).ready());
        Assertions.assertFalse(model.value().get(0).containers().get(0).started());
        Assertions.assertEquals(490713776, model.value().get(0).containers().get(0).restartCount());
        Assertions.assertEquals("xdtnkdmkqjjlw", model.value().get(0).initContainers().get(0).name());
        Assertions.assertEquals("nvrk", model.value().get(0).initContainers().get(0).containerId());
        Assertions.assertFalse(model.value().get(0).initContainers().get(0).ready());
        Assertions.assertTrue(model.value().get(0).initContainers().get(0).started());
        Assertions.assertEquals(583930793, model.value().get(0).initContainers().get(0).restartCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReplicaCollectionInner model = new ReplicaCollectionInner().withValue(Arrays.asList(new ReplicaInner()
            .withContainers(Arrays.asList(new ReplicaContainer().withName("fktgplc")
                .withContainerId("wjxeznoigbr")
                .withReady(false)
                .withStarted(false)
                .withRestartCount(490713776)))
            .withInitContainers(Arrays.asList(
                new ReplicaContainer().withName("xdtnkdmkqjjlw")
                    .withContainerId("nvrk")
                    .withReady(false)
                    .withStarted(true)
                    .withRestartCount(583930793),
                new ReplicaContainer().withName("d")
                    .withContainerId("mmji")
                    .withReady(false)
                    .withStarted(false)
                    .withRestartCount(448290186)))));
        model = BinaryData.fromObject(model).toObject(ReplicaCollectionInner.class);
        Assertions.assertEquals("fktgplc", model.value().get(0).containers().get(0).name());
        Assertions.assertEquals("wjxeznoigbr", model.value().get(0).containers().get(0).containerId());
        Assertions.assertFalse(model.value().get(0).containers().get(0).ready());
        Assertions.assertFalse(model.value().get(0).containers().get(0).started());
        Assertions.assertEquals(490713776, model.value().get(0).containers().get(0).restartCount());
        Assertions.assertEquals("xdtnkdmkqjjlw", model.value().get(0).initContainers().get(0).name());
        Assertions.assertEquals("nvrk", model.value().get(0).initContainers().get(0).containerId());
        Assertions.assertFalse(model.value().get(0).initContainers().get(0).ready());
        Assertions.assertTrue(model.value().get(0).initContainers().get(0).started());
        Assertions.assertEquals(583930793, model.value().get(0).initContainers().get(0).restartCount());
    }
}
