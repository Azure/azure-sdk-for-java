// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loadtestservice.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.loadtestservice.fluent.models.LoadTestResourceInner;
import com.azure.resourcemanager.loadtestservice.models.LoadTestResource;
import com.azure.resourcemanager.loadtestservice.models.LoadTestResourcePatchRequestBody;
import com.azure.resourcemanager.loadtestservice.models.LoadTestResourcePatchRequestBodyProperties;
import com.azure.resourcemanager.loadtestservice.models.ResourceState;
import com.azure.resourcemanager.loadtestservice.models.SystemAssignedServiceIdentity;
import java.util.Collections;
import java.util.Map;

public final class LoadTestResourceImpl
    implements LoadTestResource, LoadTestResource.Definition, LoadTestResource.Update {
    private LoadTestResourceInner innerObject;

    private final com.azure.resourcemanager.loadtestservice.LoadTestManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemAssignedServiceIdentity identity() {
        return this.innerModel().identity();
    }

    public String description() {
        return this.innerModel().description();
    }

    public ResourceState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String dataPlaneUri() {
        return this.innerModel().dataPlaneUri();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public LoadTestResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.loadtestservice.LoadTestManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String loadTestName;

    private LoadTestResourcePatchRequestBody updateLoadTestResourcePatchRequestBody;

    public LoadTestResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public LoadTestResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLoadTests()
                .createOrUpdateWithResponse(resourceGroupName, loadTestName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public LoadTestResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLoadTests()
                .createOrUpdateWithResponse(resourceGroupName, loadTestName, this.innerModel(), context)
                .getValue();
        return this;
    }

    LoadTestResourceImpl(String name, com.azure.resourcemanager.loadtestservice.LoadTestManager serviceManager) {
        this.innerObject = new LoadTestResourceInner();
        this.serviceManager = serviceManager;
        this.loadTestName = name;
    }

    public LoadTestResourceImpl update() {
        this.updateLoadTestResourcePatchRequestBody = new LoadTestResourcePatchRequestBody();
        return this;
    }

    public LoadTestResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLoadTests()
                .updateWithResponse(
                    resourceGroupName, loadTestName, updateLoadTestResourcePatchRequestBody, Context.NONE)
                .getValue();
        return this;
    }

    public LoadTestResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLoadTests()
                .updateWithResponse(resourceGroupName, loadTestName, updateLoadTestResourcePatchRequestBody, context)
                .getValue();
        return this;
    }

    LoadTestResourceImpl(
        LoadTestResourceInner innerObject, com.azure.resourcemanager.loadtestservice.LoadTestManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.loadTestName = Utils.getValueFromIdByName(innerObject.id(), "loadTests");
    }

    public LoadTestResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLoadTests()
                .getByResourceGroupWithResponse(resourceGroupName, loadTestName, Context.NONE)
                .getValue();
        return this;
    }

    public LoadTestResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLoadTests()
                .getByResourceGroupWithResponse(resourceGroupName, loadTestName, context)
                .getValue();
        return this;
    }

    public LoadTestResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public LoadTestResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public LoadTestResourceImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public LoadTestResourceImpl withIdentity(SystemAssignedServiceIdentity identity) {
        if (isInCreateMode()) {
            this.innerModel().withIdentity(identity);
            return this;
        } else {
            this.updateLoadTestResourcePatchRequestBody.withIdentity(identity);
            return this;
        }
    }

    public LoadTestResourceImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public LoadTestResourceImpl withTags(Object tags) {
        this.updateLoadTestResourcePatchRequestBody.withTags(tags);
        return this;
    }

    public LoadTestResourceImpl withProperties(LoadTestResourcePatchRequestBodyProperties properties) {
        this.updateLoadTestResourcePatchRequestBody.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
