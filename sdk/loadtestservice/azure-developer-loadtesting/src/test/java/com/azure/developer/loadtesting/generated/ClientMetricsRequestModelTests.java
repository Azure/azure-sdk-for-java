// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.developer.loadtesting.generated;

import com.azure.core.util.BinaryData;
import com.azure.developer.loadtesting.implementation.models.ClientMetricsRequestModel;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ClientMetricsRequestModelTests {
    @Test
    public void testDeserialize() {
        ClientMetricsRequestModel model =
                BinaryData.fromString(
                                "{\"requestSamplers\":[\"n\",\"bglzpswi\",\"d\"],\"errors\":[\"yhz\",\"xssadbzmnvdf\"],\"percentiles\":[\"daodvxzbncblyl\"],\"groupByInterval\":\"tdbhhxsrzdzu\",\"startTime\":\"2021-10-15T02:58:18Z\",\"endTime\":\"2021-03-02T12:53:08Z\"}")
                        .toObject(ClientMetricsRequestModel.class);
        Assertions.assertEquals("n", model.getRequestSamplers().get(0));
        Assertions.assertEquals("yhz", model.getErrors().get(0));
        Assertions.assertEquals("daodvxzbncblyl", model.getPercentiles().get(0));
        Assertions.assertEquals("tdbhhxsrzdzu", model.getGroupByInterval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-15T02:58:18Z"), model.getStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-02T12:53:08Z"), model.getEndTime());
    }

    @Test
    public void testSerialize() {
        ClientMetricsRequestModel model =
                new ClientMetricsRequestModel(
                                OffsetDateTime.parse("2021-10-15T02:58:18Z"),
                                OffsetDateTime.parse("2021-03-02T12:53:08Z"))
                        .setRequestSamplers(Arrays.asList("n", "bglzpswi", "d"))
                        .setErrors(Arrays.asList("yhz", "xssadbzmnvdf"))
                        .setPercentiles(Arrays.asList("daodvxzbncblyl"))
                        .setGroupByInterval("tdbhhxsrzdzu");
        model = BinaryData.fromObject(model).toObject(ClientMetricsRequestModel.class);
        Assertions.assertEquals("n", model.getRequestSamplers().get(0));
        Assertions.assertEquals("yhz", model.getErrors().get(0));
        Assertions.assertEquals("daodvxzbncblyl", model.getPercentiles().get(0));
        Assertions.assertEquals("tdbhhxsrzdzu", model.getGroupByInterval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-15T02:58:18Z"), model.getStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-02T12:53:08Z"), model.getEndTime());
    }
}
