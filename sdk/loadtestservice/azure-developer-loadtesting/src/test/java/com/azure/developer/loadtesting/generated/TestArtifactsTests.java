// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.developer.loadtesting.generated;

import com.azure.core.util.BinaryData;
import com.azure.developer.loadtesting.implementation.models.FileType;
import com.azure.developer.loadtesting.implementation.models.FileUrl;
import com.azure.developer.loadtesting.implementation.models.InputTestArtifacts;
import com.azure.developer.loadtesting.implementation.models.OutputTestArtifacts;
import com.azure.developer.loadtesting.implementation.models.TestArtifacts;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class TestArtifactsTests {
    @Test
    public void testDeserialize() {
        TestArtifacts model =
                BinaryData.fromString(
                                "{\"inputArtifacts\":{\"configUrl\":{\"url\":\"cjooxdjebwpucwwf\",\"fileId\":\"vbvmeu\",\"filename\":\"ivyhzceuojgjrwju\",\"fileType\":0,\"expireTime\":\"2021-05-06T21:21:59Z\",\"validationStatus\":\"cdytdxw\"},\"testScriptUrl\":{\"url\":\"nrjawgqwg\",\"fileId\":\"ni\",\"filename\":\"x\",\"fileType\":1,\"expireTime\":\"2021-04-10T12:35:25Z\",\"validationStatus\":\"gklwn\"},\"userPropUrl\":{\"url\":\"jdauwhvy\",\"fileId\":\"zbtd\",\"filename\":\"ujznb\",\"fileType\":1,\"expireTime\":\"2021-05-19T00:36:02Z\",\"validationStatus\":\"przqlveu\"},\"inputArtifactsZipFileurl\":{\"url\":\"pjmkhfxobbc\",\"fileId\":\"s\",\"filename\":\"jriplrbpbewtghf\",\"fileType\":2,\"expireTime\":\"2021-09-03T22:44:02Z\",\"validationStatus\":\"xzvlvqhjkbegib\"},\"additionalUrls\":[{\"url\":\"iebwwaloayqcgwrt\",\"fileId\":\"uzgwyzmhtx\",\"filename\":\"gmtsavjcbpwxqpsr\",\"fileType\":0,\"expireTime\":\"2021-01-16T18:55:51Z\",\"validationStatus\":\"vriuhprwmdyvx\"},{\"url\":\"ayriwwroyqbexrm\",\"fileId\":\"ibycno\",\"filename\":\"knme\",\"fileType\":1,\"expireTime\":\"2021-05-25T06:46Z\",\"validationStatus\":\"ah\"}]},\"outputArtifacts\":{\"resultUrl\":{\"url\":\"zhpvgqzcjrvxd\",\"fileId\":\"lmwlxkvugfhzo\",\"filename\":\"wjvzunluthnn\",\"fileType\":0,\"expireTime\":\"2021-10-10T00:35:03Z\",\"validationStatus\":\"eilpjzuaejxdu\"},\"logsUrl\":{\"url\":\"kzbbtd\",\"fileId\":\"mv\",\"filename\":\"kgpwoz\",\"fileType\":0,\"expireTime\":\"2021-08-14T18:03:09Z\",\"validationStatus\":\"sjyofdx\"}}}")
                        .toObject(TestArtifacts.class);
        Assertions.assertEquals("zhpvgqzcjrvxd", model.getOutputArtifacts().getResultUrl().getUrl());
        Assertions.assertEquals("lmwlxkvugfhzo", model.getOutputArtifacts().getResultUrl().getFileId());
        Assertions.assertEquals("wjvzunluthnn", model.getOutputArtifacts().getResultUrl().getFilename());
        Assertions.assertEquals(FileType.ZERO, model.getOutputArtifacts().getResultUrl().getFileType());
        Assertions.assertEquals(
                OffsetDateTime.parse("2021-10-10T00:35:03Z"),
                model.getOutputArtifacts().getResultUrl().getExpireTime());
        Assertions.assertEquals("eilpjzuaejxdu", model.getOutputArtifacts().getResultUrl().getValidationStatus());
        Assertions.assertEquals("kzbbtd", model.getOutputArtifacts().getLogsUrl().getUrl());
        Assertions.assertEquals("mv", model.getOutputArtifacts().getLogsUrl().getFileId());
        Assertions.assertEquals("kgpwoz", model.getOutputArtifacts().getLogsUrl().getFilename());
        Assertions.assertEquals(FileType.ZERO, model.getOutputArtifacts().getLogsUrl().getFileType());
        Assertions.assertEquals(
                OffsetDateTime.parse("2021-08-14T18:03:09Z"), model.getOutputArtifacts().getLogsUrl().getExpireTime());
        Assertions.assertEquals("sjyofdx", model.getOutputArtifacts().getLogsUrl().getValidationStatus());
    }

    @Test
    public void testSerialize() {
        InputTestArtifacts inputTestArtifacts = new InputTestArtifacts()
                .setTestScriptUrl(new FileUrl()
                        .setUrl("ahcvkozczsvxe"));
        TestArtifacts model =
                new TestArtifacts(inputTestArtifacts)
                        .setOutputArtifacts(
                                new OutputTestArtifacts()
                                        .setResultUrl(
                                                new FileUrl()
                                                        .setUrl("zhpvgqzcjrvxd")
                                                        .setFileId("lmwlxkvugfhzo")
                                                        .setFilename("wjvzunluthnn")
                                                        .setFileType(FileType.ZERO)
                                                        .setExpireTime(OffsetDateTime.parse("2021-10-10T00:35:03Z"))
                                                        .setValidationStatus("eilpjzuaejxdu"))
                                        .setLogsUrl(
                                                new FileUrl()
                                                        .setUrl("kzbbtd")
                                                        .setFileId("mv")
                                                        .setFilename("kgpwoz")
                                                        .setFileType(FileType.ZERO)
                                                        .setExpireTime(OffsetDateTime.parse("2021-08-14T18:03:09Z"))
                                                        .setValidationStatus("sjyofdx")));
        model = BinaryData.fromObject(model).toObject(TestArtifacts.class);
        Assertions.assertEquals("zhpvgqzcjrvxd", model.getOutputArtifacts().getResultUrl().getUrl());
        Assertions.assertEquals("lmwlxkvugfhzo", model.getOutputArtifacts().getResultUrl().getFileId());
        Assertions.assertEquals("wjvzunluthnn", model.getOutputArtifacts().getResultUrl().getFilename());
        Assertions.assertEquals(FileType.ZERO, model.getOutputArtifacts().getResultUrl().getFileType());
        Assertions.assertEquals(
                OffsetDateTime.parse("2021-10-10T00:35:03Z"),
                model.getOutputArtifacts().getResultUrl().getExpireTime());
        Assertions.assertEquals("eilpjzuaejxdu", model.getOutputArtifacts().getResultUrl().getValidationStatus());
        Assertions.assertEquals("kzbbtd", model.getOutputArtifacts().getLogsUrl().getUrl());
        Assertions.assertEquals("mv", model.getOutputArtifacts().getLogsUrl().getFileId());
        Assertions.assertEquals("kgpwoz", model.getOutputArtifacts().getLogsUrl().getFilename());
        Assertions.assertEquals(FileType.ZERO, model.getOutputArtifacts().getLogsUrl().getFileType());
        Assertions.assertEquals(
                OffsetDateTime.parse("2021-08-14T18:03:09Z"), model.getOutputArtifacts().getLogsUrl().getExpireTime());
        Assertions.assertEquals("sjyofdx", model.getOutputArtifacts().getLogsUrl().getValidationStatus());
    }
}
