// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.developer.loadtesting.generated;

import com.azure.core.util.BinaryData;
import com.azure.developer.loadtesting.implementation.models.FileType;
import com.azure.developer.loadtesting.implementation.models.FileUrl;
import com.azure.developer.loadtesting.implementation.models.OutputTestArtifacts;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class OutputTestArtifactsTests {
    @Test
    public void testDeserialize() {
        OutputTestArtifacts model =
                BinaryData.fromString(
                                "{\"resultUrl\":{\"url\":\"sd\",\"fileId\":\"ouwaboekqvkeln\",\"filename\":\"vbxwyjsflhh\",\"fileType\":2,\"expireTime\":\"2021-02-06T03:40:59Z\",\"validationStatus\":\"ixisxyawjoy\"},\"logsUrl\":{\"url\":\"slyjpkiid\",\"fileId\":\"exznelixhnr\",\"filename\":\"folhbnxknal\",\"fileType\":2,\"expireTime\":\"2021-05-05T13:18:41Z\",\"validationStatus\":\"gdtpnapnyiro\"}}")
                        .toObject(OutputTestArtifacts.class);
        Assertions.assertEquals("sd", model.getResultUrl().getUrl());
        Assertions.assertEquals("ouwaboekqvkeln", model.getResultUrl().getFileId());
        Assertions.assertEquals("vbxwyjsflhh", model.getResultUrl().getFilename());
        Assertions.assertEquals(FileType.TWO, model.getResultUrl().getFileType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-06T03:40:59Z"), model.getResultUrl().getExpireTime());
        Assertions.assertEquals("ixisxyawjoy", model.getResultUrl().getValidationStatus());
        Assertions.assertEquals("slyjpkiid", model.getLogsUrl().getUrl());
        Assertions.assertEquals("exznelixhnr", model.getLogsUrl().getFileId());
        Assertions.assertEquals("folhbnxknal", model.getLogsUrl().getFilename());
        Assertions.assertEquals(FileType.TWO, model.getLogsUrl().getFileType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-05T13:18:41Z"), model.getLogsUrl().getExpireTime());
        Assertions.assertEquals("gdtpnapnyiro", model.getLogsUrl().getValidationStatus());
    }

    @Test
    public void testSerialize() {
        OutputTestArtifacts model =
                new OutputTestArtifacts()
                        .setResultUrl(
                                new FileUrl()
                                        .setUrl("sd")
                                        .setFileId("ouwaboekqvkeln")
                                        .setFilename("vbxwyjsflhh")
                                        .setFileType(FileType.TWO)
                                        .setExpireTime(OffsetDateTime.parse("2021-02-06T03:40:59Z"))
                                        .setValidationStatus("ixisxyawjoy"))
                        .setLogsUrl(
                                new FileUrl()
                                        .setUrl("slyjpkiid")
                                        .setFileId("exznelixhnr")
                                        .setFilename("folhbnxknal")
                                        .setFileType(FileType.TWO)
                                        .setExpireTime(OffsetDateTime.parse("2021-05-05T13:18:41Z"))
                                        .setValidationStatus("gdtpnapnyiro"));
        model = BinaryData.fromObject(model).toObject(OutputTestArtifacts.class);
        Assertions.assertEquals("sd", model.getResultUrl().getUrl());
        Assertions.assertEquals("ouwaboekqvkeln", model.getResultUrl().getFileId());
        Assertions.assertEquals("vbxwyjsflhh", model.getResultUrl().getFilename());
        Assertions.assertEquals(FileType.TWO, model.getResultUrl().getFileType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-06T03:40:59Z"), model.getResultUrl().getExpireTime());
        Assertions.assertEquals("ixisxyawjoy", model.getResultUrl().getValidationStatus());
        Assertions.assertEquals("slyjpkiid", model.getLogsUrl().getUrl());
        Assertions.assertEquals("exznelixhnr", model.getLogsUrl().getFileId());
        Assertions.assertEquals("folhbnxknal", model.getLogsUrl().getFilename());
        Assertions.assertEquals(FileType.TWO, model.getLogsUrl().getFileType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-05T13:18:41Z"), model.getLogsUrl().getExpireTime());
        Assertions.assertEquals("gdtpnapnyiro", model.getLogsUrl().getValidationStatus());
    }
}
