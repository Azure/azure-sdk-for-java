// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.developer.loadtesting.generated;

import com.azure.core.util.BinaryData;
import com.azure.developer.loadtesting.implementation.models.FileType;
import com.azure.developer.loadtesting.implementation.models.FileUrl;
import com.azure.developer.loadtesting.implementation.models.FileUrlList;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class FileUrlListTests {
    @Test
    public void testDeserialize() {
        FileUrlList model =
                BinaryData.fromString(
                                "{\"value\":[{\"url\":\"kzjancuxrhdwbav\",\"fileId\":\"niwdjsw\",\"filename\":\"s\",\"fileType\":2,\"expireTime\":\"2021-10-19T12:26:50Z\",\"validationStatus\":\"ytxhp\"},{\"url\":\"bzpfzab\",\"fileId\":\"cuh\",\"filename\":\"tcty\",\"fileType\":0,\"expireTime\":\"2021-06-27T19:00:45Z\",\"validationStatus\":\"ovplw\"},{\"url\":\"hvgyuguosvmk\",\"fileId\":\"sxqu\",\"filename\":\"fpl\",\"fileType\":2,\"expireTime\":\"2021-10-07T01:44:34Z\",\"validationStatus\":\"kjz\"}],\"nextLink\":\"es\"}")
                        .toObject(FileUrlList.class);
        Assertions.assertEquals("kzjancuxrhdwbav", model.getValue().get(0).getUrl());
        Assertions.assertEquals("niwdjsw", model.getValue().get(0).getFileId());
        Assertions.assertEquals("s", model.getValue().get(0).getFilename());
        Assertions.assertEquals(FileType.TWO, model.getValue().get(0).getFileType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-19T12:26:50Z"), model.getValue().get(0).getExpireTime());
        Assertions.assertEquals("ytxhp", model.getValue().get(0).getValidationStatus());
        Assertions.assertEquals("es", model.getNextLink());
    }

    @Test
    public void testSerialize() {
        FileUrlList model =
                new FileUrlList(
                                Arrays.asList(
                                        new FileUrl()
                                                .setUrl("kzjancuxrhdwbav")
                                                .setFileId("niwdjsw")
                                                .setFilename("s")
                                                .setFileType(FileType.TWO)
                                                .setExpireTime(OffsetDateTime.parse("2021-10-19T12:26:50Z"))
                                                .setValidationStatus("ytxhp"),
                                        new FileUrl()
                                                .setUrl("bzpfzab")
                                                .setFileId("cuh")
                                                .setFilename("tcty")
                                                .setFileType(FileType.ZERO)
                                                .setExpireTime(OffsetDateTime.parse("2021-06-27T19:00:45Z"))
                                                .setValidationStatus("ovplw"),
                                        new FileUrl()
                                                .setUrl("hvgyuguosvmk")
                                                .setFileId("sxqu")
                                                .setFilename("fpl")
                                                .setFileType(FileType.TWO)
                                                .setExpireTime(OffsetDateTime.parse("2021-10-07T01:44:34Z"))
                                                .setValidationStatus("kjz")))
                        .setNextLink("es");
        model = BinaryData.fromObject(model).toObject(FileUrlList.class);
        Assertions.assertEquals("kzjancuxrhdwbav", model.getValue().get(0).getUrl());
        Assertions.assertEquals("niwdjsw", model.getValue().get(0).getFileId());
        Assertions.assertEquals("s", model.getValue().get(0).getFilename());
        Assertions.assertEquals(FileType.TWO, model.getValue().get(0).getFileType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-19T12:26:50Z"), model.getValue().get(0).getExpireTime());
        Assertions.assertEquals("ytxhp", model.getValue().get(0).getValidationStatus());
        Assertions.assertEquals("es", model.getNextLink());
    }
}
