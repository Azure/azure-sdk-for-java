// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.developer.loadtesting;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.developer.loadtesting.implementation.AppComponentsImpl;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the asynchronous LoadTestClient type. */
@ServiceClient(builder = AppComponentClientBuilder.class, isAsync = true)
public final class AppComponentAsyncClient {

    @Generated private final AppComponentsImpl serviceClient;

    /**
     * Initializes an instance of AppComponentAsyncClient class.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    AppComponentAsyncClient(AppComponentsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Associate an App Component (Azure resource) to a test or test run.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     resourceId: String (Optional)
     *     testId: String (Optional)
     *     testRunId: String (Optional)
     *     name: String (Optional)
     *     value (Required): {
     *         String (Required): {
     *             resourceId: String (Required)
     *             resourceName: String (Required)
     *             resourceType: String (Required)
     *             displayName: String (Optional)
     *             resourceGroup: String (Optional)
     *             subscriptionId: String (Optional)
     *             kind: String (Optional)
     *         }
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     resourceId: String (Optional)
     *     testId: String (Optional)
     *     testRunId: String (Optional)
     *     name: String (Optional)
     *     value (Required): {
     *         String (Required): {
     *             resourceId: String (Required)
     *             resourceName: String (Required)
     *             resourceType: String (Required)
     *             displayName: String (Optional)
     *             resourceGroup: String (Optional)
     *             subscriptionId: String (Optional)
     *             kind: String (Optional)
     *         }
     *     }
     * }
     * }</pre>
     *
     * @param name Unique name of the App Component, must be a valid URL character ^[a-z0-9_-]*$.
     * @param body App Component model.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return app Components model along with {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> createOrUpdateAppComponentsWithResponse(
            String name, BinaryData body, RequestOptions requestOptions) {
        return this.serviceClient.createOrUpdateAppComponentsWithResponseAsync(name, body, requestOptions);
    }

    /**
     * Delete an App Component.
     *
     * @param name Unique name of the App Component, must be a valid URL character ^[a-z0-9_-]*$.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> deleteAppComponentWithResponse(String name, RequestOptions requestOptions) {
        return this.serviceClient.deleteAppComponentWithResponseAsync(name, requestOptions);
    }

    /**
     * Get App Component details by App Component name.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     resourceId: String (Optional)
     *     testId: String (Optional)
     *     testRunId: String (Optional)
     *     name: String (Optional)
     *     value (Required): {
     *         String (Required): {
     *             resourceId: String (Required)
     *             resourceName: String (Required)
     *             resourceType: String (Required)
     *             displayName: String (Optional)
     *             resourceGroup: String (Optional)
     *             subscriptionId: String (Optional)
     *             kind: String (Optional)
     *         }
     *     }
     * }
     * }</pre>
     *
     * @param name Unique name of the App Component, must be a valid URL character ^[a-z0-9_-]*$.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return app Component details by App Component name along with {@link Response} on successful completion of
     *     {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getAppComponentByNameWithResponse(String name, RequestOptions requestOptions) {
        return this.serviceClient.getAppComponentByNameWithResponseAsync(name, requestOptions);
    }

    /**
     * Get App Components for a test or a test run by its name.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>testRunId</td><td>String</td><td>No</td><td>[Required, if testId is not provided] Test run Id.</td></tr>
     *     <tr><td>testId</td><td>String</td><td>No</td><td>Unique name for load test, must be a valid URL character ^[a-z0-9_-]*$.</td></tr>
     * </table>
     *
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     resourceId: String (Optional)
     *     testId: String (Optional)
     *     testRunId: String (Optional)
     *     name: String (Optional)
     *     value (Required): {
     *         String (Required): {
     *             resourceId: String (Required)
     *             resourceName: String (Required)
     *             resourceType: String (Required)
     *             displayName: String (Optional)
     *             resourceGroup: String (Optional)
     *             subscriptionId: String (Optional)
     *             kind: String (Optional)
     *         }
     *     }
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return app Components for a test or a test run by its name along with {@link Response} on successful completion
     *     of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getAppComponentWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getAppComponentWithResponseAsync(requestOptions);
    }
}
