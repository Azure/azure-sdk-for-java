/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.operationsmanagement.v2015_11_01_preview;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Solution properties supported by the OperationsManagement resource provider.
 */
public class SolutionProperties {
    /**
     * The azure resourceId for the workspace where the solution will be
     * deployed/enabled.
     */
    @JsonProperty(value = "workspaceResourceId", required = true)
    private String workspaceResourceId;

    /**
     * The provisioning state for the solution.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /**
     * The azure resources that will be contained within the solutions. They
     * will be locked and gets deleted automatically when the solution is
     * deleted.
     */
    @JsonProperty(value = "containedResources")
    private List<String> containedResources;

    /**
     * The resources that will be referenced from this solution. Deleting any
     * of those solution out of band will break the solution.
     */
    @JsonProperty(value = "referencedResources")
    private List<String> referencedResources;

    /**
     * Get the azure resourceId for the workspace where the solution will be deployed/enabled.
     *
     * @return the workspaceResourceId value
     */
    public String workspaceResourceId() {
        return this.workspaceResourceId;
    }

    /**
     * Set the azure resourceId for the workspace where the solution will be deployed/enabled.
     *
     * @param workspaceResourceId the workspaceResourceId value to set
     * @return the SolutionProperties object itself.
     */
    public SolutionProperties withWorkspaceResourceId(String workspaceResourceId) {
        this.workspaceResourceId = workspaceResourceId;
        return this;
    }

    /**
     * Get the provisioning state for the solution.
     *
     * @return the provisioningState value
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the azure resources that will be contained within the solutions. They will be locked and gets deleted automatically when the solution is deleted.
     *
     * @return the containedResources value
     */
    public List<String> containedResources() {
        return this.containedResources;
    }

    /**
     * Set the azure resources that will be contained within the solutions. They will be locked and gets deleted automatically when the solution is deleted.
     *
     * @param containedResources the containedResources value to set
     * @return the SolutionProperties object itself.
     */
    public SolutionProperties withContainedResources(List<String> containedResources) {
        this.containedResources = containedResources;
        return this;
    }

    /**
     * Get the resources that will be referenced from this solution. Deleting any of those solution out of band will break the solution.
     *
     * @return the referencedResources value
     */
    public List<String> referencedResources() {
        return this.referencedResources;
    }

    /**
     * Set the resources that will be referenced from this solution. Deleting any of those solution out of band will break the solution.
     *
     * @param referencedResources the referencedResources value to set
     * @return the SolutionProperties object itself.
     */
    public SolutionProperties withReferencedResources(List<String> referencedResources) {
        this.referencedResources = referencedResources;
        return this;
    }

}
