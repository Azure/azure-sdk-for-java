// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.operationsmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.operationsmanagement.fluent.models.ManagementConfigurationInner;
import com.azure.resourcemanager.operationsmanagement.models.ArmTemplateParameter;
import com.azure.resourcemanager.operationsmanagement.models.ManagementConfigurationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ManagementConfigurationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagementConfigurationInner model = BinaryData.fromString(
            "{\"location\":\"awxklr\",\"properties\":{\"applicationId\":\"wckbasyypnd\",\"parentResourceType\":\"hsgcbacphejkot\",\"parameters\":[{\"name\":\"gou\",\"value\":\"ndlik\"},{\"name\":\"qkgfgibma\",\"value\":\"akeqs\"},{\"name\":\"yb\",\"value\":\"qedqytbciqfoufl\"}],\"provisioningState\":\"nkzsmodmglou\",\"template\":\"datapbkwtmu\"},\"id\":\"duqkt\",\"name\":\"pspwgcuertu\",\"type\":\"kdosvqw\"}")
            .toObject(ManagementConfigurationInner.class);
        Assertions.assertEquals("awxklr", model.location());
        Assertions.assertEquals("wckbasyypnd", model.properties().applicationId());
        Assertions.assertEquals("hsgcbacphejkot", model.properties().parentResourceType());
        Assertions.assertEquals("gou", model.properties().parameters().get(0).name());
        Assertions.assertEquals("ndlik", model.properties().parameters().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagementConfigurationInner model = new ManagementConfigurationInner().withLocation("awxklr")
            .withProperties(new ManagementConfigurationProperties().withApplicationId("wckbasyypnd")
                .withParentResourceType("hsgcbacphejkot")
                .withParameters(Arrays.asList(new ArmTemplateParameter().withName("gou").withValue("ndlik"),
                    new ArmTemplateParameter().withName("qkgfgibma").withValue("akeqs"),
                    new ArmTemplateParameter().withName("yb").withValue("qedqytbciqfoufl")))
                .withTemplate("datapbkwtmu"));
        model = BinaryData.fromObject(model).toObject(ManagementConfigurationInner.class);
        Assertions.assertEquals("awxklr", model.location());
        Assertions.assertEquals("wckbasyypnd", model.properties().applicationId());
        Assertions.assertEquals("hsgcbacphejkot", model.properties().parentResourceType());
        Assertions.assertEquals("gou", model.properties().parameters().get(0).name());
        Assertions.assertEquals("ndlik", model.properties().parameters().get(0).value());
    }
}
