// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.operationsmanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.operationsmanagement.OperationsManagementManager;
import com.azure.resourcemanager.operationsmanagement.models.ManagementConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagementConfigurationsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"location\":\"ocfs\",\"properties\":{\"applicationId\":\"ymddys\",\"parentResourceType\":\"kiiuxhqyudxor\",\"parameters\":[{\"name\":\"b\",\"value\":\"czvyifq\"}],\"provisioningState\":\"kdvjsll\",\"template\":\"datamvvd\"},\"id\":\"watkpnpulexxb\",\"name\":\"zwtruwiqzbqjvsov\",\"type\":\"yokacspkw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OperationsManagementManager manager = OperationsManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ManagementConfiguration response = manager.managementConfigurations()
            .getByResourceGroupWithResponse("dxwzywqsmbsurexi", "o", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ocfs", response.location());
        Assertions.assertEquals("ymddys", response.properties().applicationId());
        Assertions.assertEquals("kiiuxhqyudxor", response.properties().parentResourceType());
        Assertions.assertEquals("b", response.properties().parameters().get(0).name());
        Assertions.assertEquals("czvyifq", response.properties().parameters().get(0).value());
    }
}
