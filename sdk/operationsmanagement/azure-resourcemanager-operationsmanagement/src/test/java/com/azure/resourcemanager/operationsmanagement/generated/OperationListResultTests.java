// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.operationsmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.operationsmanagement.fluent.models.OperationInner;
import com.azure.resourcemanager.operationsmanagement.models.OperationDisplay;
import com.azure.resourcemanager.operationsmanagement.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"zdn\",\"display\":{\"provider\":\"qguhmuo\",\"resource\":\"f\",\"operation\":\"wzwbnguitn\"}},{\"name\":\"izgazxu\",\"display\":{\"provider\":\"uckyf\",\"resource\":\"rfidfvzwdz\",\"operation\":\"tymw\"}}]}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("zdn", model.value().get(0).name());
        Assertions.assertEquals("qguhmuo", model.value().get(0).display().provider());
        Assertions.assertEquals("f", model.value().get(0).display().resource());
        Assertions.assertEquals("wzwbnguitn", model.value().get(0).display().operation());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model = new OperationListResult().withValue(Arrays.asList(
            new OperationInner().withName("zdn")
                .withDisplay(
                    new OperationDisplay().withProvider("qguhmuo").withResource("f").withOperation("wzwbnguitn")),
            new OperationInner().withName("izgazxu")
                .withDisplay(
                    new OperationDisplay().withProvider("uckyf").withResource("rfidfvzwdz").withOperation("tymw"))));
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("zdn", model.value().get(0).name());
        Assertions.assertEquals("qguhmuo", model.value().get(0).display().provider());
        Assertions.assertEquals("f", model.value().get(0).display().resource());
        Assertions.assertEquals("wzwbnguitn", model.value().get(0).display().operation());
    }
}
