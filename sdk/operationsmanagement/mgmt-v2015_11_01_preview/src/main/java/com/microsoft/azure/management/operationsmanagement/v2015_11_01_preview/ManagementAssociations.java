/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.operationsmanagement.v2015_11_01_preview;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.operationsmanagement.v2015_11_01_preview.implementation.ManagementAssociationsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing ManagementAssociations.
 */
public interface ManagementAssociations extends SupportsCreating<ManagementAssociation.DefinitionStages.Blank>, HasInner<ManagementAssociationsInner> {
    /**
     * Deletes the ManagementAssociation.
     * Deletes the ManagementAssociation in the subscription.
     *
     * @param resourceGroupName The name of the resource group to get. The name is case insensitive.
     * @param managementAssociationName User ManagementAssociation Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String managementAssociationName);

    /**
     * Retrieve ManagementAssociation.
     * Retrieves the user ManagementAssociation.
     *
     * @param resourceGroupName The name of the resource group to get. The name is case insensitive.
     * @param managementAssociationName User ManagementAssociation Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ManagementAssociation> getAsync(String resourceGroupName, String managementAssociationName);

    /**
     * Retrieves the ManagementAssociations list for the subscription.
     * Retrieves the ManagementAssociations list.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ManagementAssociation> listAsync();

}
