// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.customerinsights.CustomerInsightsManager;
import com.azure.resourcemanager.customerinsights.models.CalculationWindowTypes;
import com.azure.resourcemanager.customerinsights.models.EntityTypes;
import com.azure.resourcemanager.customerinsights.models.KpiDefinition;
import com.azure.resourcemanager.customerinsights.models.KpiFunctions;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProfilesGetEnrichingKpisWithResponseMockTests {
    @Test
    public void testGetEnrichingKpisWithResponse() throws Exception {
        String responseStr
            = "[{\"entityType\":\"Profile\",\"entityTypeName\":\"efy\",\"tenantId\":\"veitit\",\"kpiName\":\"s\",\"displayName\":{\"wjuyxx\":\"jlnsj\",\"uadx\":\"xqvmvuay\",\"tghyksarcdr\":\"xeqbwp\",\"vlzladl\":\"xsl\"},\"description\":{\"wzdanojisgglmvo\":\"pbqhvfdqqjwkr\",\"bpvbkaehxsmzygd\":\"atuztjct\",\"wljuxlkbectvt\":\"wakwseivmakxhys\"},\"calculationWindow\":\"Week\",\"calculationWindowFieldName\":\"skdchmaiubavl\",\"function\":\"Sum\",\"expression\":\"pvgmfa\",\"unit\":\"zazmg\",\"filter\":\"e\",\"groupBy\":[\"qafkmkrokzrth\",\"etw\",\"qrtvaoznqni\"],\"groupByMetadata\":[{\"displayName\":{\"stlzm\":\"agmceituugedhfp\",\"eolctaebf\":\"lsyj\",\"jcustbvtq\":\"yrle\"},\"fieldName\":\"d\",\"fieldType\":\"vsgeafgf\"},{\"displayName\":{\"p\":\"hxlzsxez\",\"fjlpze\":\"kwaaesk\",\"pq\":\"toyrplixlajml\"},\"fieldName\":\"vh\",\"fieldType\":\"fowgwbtmkekx\"},{\"displayName\":{\"iqbplvfidusz\":\"waqxofqovc\",\"sfepxyihpq\":\"ekxbyjg\",\"jfowxwy\":\"dagrhrdicxdw\"},\"fieldName\":\"c\",\"fieldType\":\"sgbipcukdveksbuh\"},{\"displayName\":{\"bfdyjduss\":\"chvlscrdp\",\"ggkrehbf\":\"yszekbhwlka\",\"ybff\":\"n\"},\"fieldName\":\"fiimreoagsqt\",\"fieldType\":\"dusr\"}],\"participantProfilesMetadata\":[{\"typeName\":\"f\"},{\"typeName\":\"vsqw\"},{\"typeName\":\"d\"}],\"provisioningState\":\"Succeeded\",\"thresHolds\":{\"increasingKpi\":false},\"aliases\":[{\"aliasName\":\"nl\",\"expression\":\"kpsimsfeypofqp\"},{\"aliasName\":\"bh\",\"expression\":\"qgsdr\"}],\"extracts\":[{\"extractName\":\"tjxophgerhsmv\",\"expression\":\"ohtwzmqilr\"},{\"extractName\":\"xy\",\"expression\":\"fni\"},{\"extractName\":\"sqywwwmhkru\",\"expression\":\"aedrympmlqoin\"},{\"extractName\":\"zduewihapfjii\",\"expression\":\"njdiqfliejhpcl\"}]},{\"entityType\":\"Interaction\",\"entityTypeName\":\"edfsbwc\",\"tenantId\":\"vbvzipbwxgo\",\"kpiName\":\"x\",\"displayName\":{\"npd\":\"admskx\"},\"description\":{\"sugswhgsaod\":\"g\",\"aquvwsxbgnvkervq\":\"wwnbafoctohz\",\"pabdsrg\":\"hoadhrsxqvzv\"},\"calculationWindow\":\"Day\",\"calculationWindowFieldName\":\"glzrs\",\"function\":\"Min\",\"expression\":\"klrxhjnltce\",\"unit\":\"dvqydie\",\"filter\":\"kw\",\"groupBy\":[\"wdxvqzxoebwg\",\"xbibanbaupw\",\"zvpaklozkxbzrpej\",\"lssan\"],\"groupByMetadata\":[{\"displayName\":{\"xunrswgkpjhboy\":\"gs\",\"okhu\":\"kebhuhkslgw\",\"jy\":\"o\"},\"fieldName\":\"qypzqzufgs\",\"fieldType\":\"ej\"},{\"displayName\":{\"qayamk\":\"wtfxpt\",\"ybmx\":\"cf\"},\"fieldName\":\"xocuullojkpoyhgw\",\"fieldType\":\"j\"}],\"participantProfilesMetadata\":[{\"typeName\":\"bdl\"},{\"typeName\":\"zgdyrcvuqbs\"}],\"provisioningState\":\"Succeeded\",\"thresHolds\":{\"increasingKpi\":true},\"aliases\":[{\"aliasName\":\"jnqogdxwbsfpyx\",\"expression\":\"tjlflecomi\"},{\"aliasName\":\"xojjl\",\"expression\":\"xxdhilzzdzzqjm\"},{\"aliasName\":\"ezay\",\"expression\":\"vribqlotokht\"}],\"extracts\":[{\"extractName\":\"azn\",\"expression\":\"cqwwxwj\"},{\"extractName\":\"ofgwh\",\"expression\":\"kbtlwljssm\"},{\"extractName\":\"tsnld\",\"expression\":\"pwolgisubxb\"},{\"extractName\":\"eogfgfiijrykwl\",\"expression\":\"fksxqce\"}]}]";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CustomerInsightsManager manager = CustomerInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        List<KpiDefinition> response = manager.profiles()
            .getEnrichingKpisWithResponse("jodhdaqotwfhip", "wgsabvcipo", "zafczuumljci",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(EntityTypes.PROFILE, response.get(0).entityType());
        Assertions.assertEquals("efy", response.get(0).entityTypeName());
        Assertions.assertEquals("jlnsj", response.get(0).displayName().get("wjuyxx"));
        Assertions.assertEquals("pbqhvfdqqjwkr", response.get(0).description().get("wzdanojisgglmvo"));
        Assertions.assertEquals(CalculationWindowTypes.WEEK, response.get(0).calculationWindow());
        Assertions.assertEquals("skdchmaiubavl", response.get(0).calculationWindowFieldName());
        Assertions.assertEquals(KpiFunctions.SUM, response.get(0).function());
        Assertions.assertEquals("pvgmfa", response.get(0).expression());
        Assertions.assertEquals("zazmg", response.get(0).unit());
        Assertions.assertEquals("e", response.get(0).filter());
        Assertions.assertEquals("qafkmkrokzrth", response.get(0).groupBy().get(0));
        Assertions.assertEquals(false, response.get(0).thresHolds().increasingKpi());
        Assertions.assertEquals("nl", response.get(0).aliases().get(0).aliasName());
        Assertions.assertEquals("kpsimsfeypofqp", response.get(0).aliases().get(0).expression());
        Assertions.assertEquals("tjxophgerhsmv", response.get(0).extracts().get(0).extractName());
        Assertions.assertEquals("ohtwzmqilr", response.get(0).extracts().get(0).expression());
    }
}
