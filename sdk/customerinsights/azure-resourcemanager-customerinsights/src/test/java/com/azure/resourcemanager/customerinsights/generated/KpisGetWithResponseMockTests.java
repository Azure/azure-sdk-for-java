// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.customerinsights.CustomerInsightsManager;
import com.azure.resourcemanager.customerinsights.models.CalculationWindowTypes;
import com.azure.resourcemanager.customerinsights.models.EntityTypes;
import com.azure.resourcemanager.customerinsights.models.KpiFunctions;
import com.azure.resourcemanager.customerinsights.models.KpiResourceFormat;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class KpisGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"entityType\":\"Relationship\",\"entityTypeName\":\"udgjtfb\",\"tenantId\":\"akkuc\",\"kpiName\":\"wnhczbutou\",\"displayName\":{\"cqqwwvgwkslvlize\":\"tirjwayh\",\"v\":\"vbia\",\"wkhojqttbspvkhg\":\"srgekzyqxadyfhb\",\"xrk\":\"aqjsgyzstujr\"},\"description\":{\"lduyehiiittugyuq\":\"d\",\"csozjv\":\"rldaxurfqa\"},\"calculationWindow\":\"Hour\",\"calculationWindowFieldName\":\"ciggbnvtxof\",\"function\":\"Count\",\"expression\":\"lzy\",\"unit\":\"hoeamoeobdo\",\"filter\":\"sfpnimt\",\"groupBy\":[\"hau\"],\"groupByMetadata\":[{\"displayName\":{\"zjy\":\"mnfeub\",\"nqd\":\"kwfugiphrrkuu\",\"opueo\":\"rhzz\",\"pwnibittozt\":\"usvwluj\"},\"fieldName\":\"qumqvfmwcaddt\",\"fieldType\":\"txegtvgwyurbelfn\"},{\"displayName\":{\"unomir\":\"yizwbxgdebxla\",\"abenqlamwmg\":\"p\",\"f\":\"way\"},\"fieldName\":\"bcpjstbhem\",\"fieldType\":\"u\"},{\"displayName\":{\"eapdrbzyv\":\"snxfbxu\",\"dulpodkaxpfobk\":\"su\",\"lt\":\"hmhjd\",\"jadhfztl\":\"eluqr\"},\"fieldName\":\"ysrkgzkyhudbk\",\"fieldType\":\"pzqxlcweakfec\"}],\"participantProfilesMetadata\":[{\"typeName\":\"faqufqizjv\"},{\"typeName\":\"pwooajeyyj\"},{\"typeName\":\"jjx\"}],\"provisioningState\":\"Failed\",\"thresHolds\":{\"increasingKpi\":true},\"aliases\":[{\"aliasName\":\"zls\",\"expression\":\"ekcttgzkjtyqpdwa\"},{\"aliasName\":\"egh\",\"expression\":\"tldsvczdjiahuq\"}],\"extracts\":[{\"extractName\":\"zucwwmejjqhd\",\"expression\":\"wvmqxi\"},{\"extractName\":\"ookyfoz\",\"expression\":\"bn\"}]},\"id\":\"x\",\"name\":\"ypfqpgaixw\",\"type\":\"grkkderfrswq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CustomerInsightsManager manager = CustomerInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        KpiResourceFormat response = manager.kpis()
            .getWithResponse("ivrakfrryn", "cwmhlymgnukxrk", "mjpequlr", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(EntityTypes.RELATIONSHIP, response.entityType());
        Assertions.assertEquals("udgjtfb", response.entityTypeName());
        Assertions.assertEquals("tirjwayh", response.displayName().get("cqqwwvgwkslvlize"));
        Assertions.assertEquals("d", response.description().get("lduyehiiittugyuq"));
        Assertions.assertEquals(CalculationWindowTypes.HOUR, response.calculationWindow());
        Assertions.assertEquals("ciggbnvtxof", response.calculationWindowFieldName());
        Assertions.assertEquals(KpiFunctions.COUNT, response.function());
        Assertions.assertEquals("lzy", response.expression());
        Assertions.assertEquals("hoeamoeobdo", response.unit());
        Assertions.assertEquals("sfpnimt", response.filter());
        Assertions.assertEquals("hau", response.groupBy().get(0));
        Assertions.assertEquals(true, response.thresHolds().increasingKpi());
        Assertions.assertEquals("zls", response.aliases().get(0).aliasName());
        Assertions.assertEquals("ekcttgzkjtyqpdwa", response.aliases().get(0).expression());
        Assertions.assertEquals("zucwwmejjqhd", response.extracts().get(0).extractName());
        Assertions.assertEquals("wvmqxi", response.extracts().get(0).expression());
    }
}
