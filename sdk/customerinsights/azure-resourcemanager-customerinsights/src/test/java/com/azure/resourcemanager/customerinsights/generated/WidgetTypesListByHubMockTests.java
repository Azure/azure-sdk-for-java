// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.customerinsights.CustomerInsightsManager;
import com.azure.resourcemanager.customerinsights.models.WidgetTypeResourceFormat;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WidgetTypesListByHubMockTests {
    @Test
    public void testListByHub() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"widgetTypeName\":\"frbhseuerbg\",\"definition\":\"xebjl\",\"description\":\"caytujraxdtpryj\",\"displayName\":{\"msvvylj\":\"nsewouxl\",\"hqqylmpc\":\"rkepos\"},\"imageUrl\":\"jwd\",\"tenantId\":\"lzmkxerxxxotee\",\"widgetVersion\":\"howgomvvhxo\",\"changed\":\"2021-11-02T18:09:03Z\",\"created\":\"2021-11-11T13:57:07Z\"},\"id\":\"pnp\",\"name\":\"raq\",\"type\":\"wbmpspfeylqloc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CustomerInsightsManager manager = CustomerInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<WidgetTypeResourceFormat> response
            = manager.widgetTypes().listByHub("ryldsxeb", "hsxrznmgsdaluyc", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xebjl", response.iterator().next().definition());
        Assertions.assertEquals("caytujraxdtpryj", response.iterator().next().description());
        Assertions.assertEquals("nsewouxl", response.iterator().next().displayName().get("msvvylj"));
        Assertions.assertEquals("jwd", response.iterator().next().imageUrl());
        Assertions.assertEquals("howgomvvhxo", response.iterator().next().widgetVersion());
    }
}
