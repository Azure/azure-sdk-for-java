// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.customerinsights.fluent.models.View;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ViewTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        View model = BinaryData.fromString(
            "{\"viewName\":\"k\",\"userId\":\"ltn\",\"tenantId\":\"dhqoawj\",\"displayName\":{\"rrueqthwmg\":\"ueayfbpcmsplb\",\"gdhxi\":\"mbscbbx\",\"opedbwdpyqyybxub\":\"d\"},\"definition\":\"dnafcbqwre\",\"changed\":\"2021-11-27T22:04:53Z\",\"created\":\"2021-02-22T15:43:03Z\"}")
            .toObject(View.class);
        Assertions.assertEquals("ltn", model.userId());
        Assertions.assertEquals("ueayfbpcmsplb", model.displayName().get("rrueqthwmg"));
        Assertions.assertEquals("dnafcbqwre", model.definition());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        View model = new View().withUserId("ltn")
            .withDisplayName(mapOf("rrueqthwmg", "ueayfbpcmsplb", "gdhxi", "mbscbbx", "opedbwdpyqyybxub", "d"))
            .withDefinition("dnafcbqwre");
        model = BinaryData.fromObject(model).toObject(View.class);
        Assertions.assertEquals("ltn", model.userId());
        Assertions.assertEquals("ueayfbpcmsplb", model.displayName().get("rrueqthwmg"));
        Assertions.assertEquals("dnafcbqwre", model.definition());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
