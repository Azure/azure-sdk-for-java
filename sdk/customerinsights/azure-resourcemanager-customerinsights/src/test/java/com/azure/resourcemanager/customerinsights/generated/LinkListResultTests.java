// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.customerinsights.fluent.models.LinkResourceFormatInner;
import com.azure.resourcemanager.customerinsights.models.EntityType;
import com.azure.resourcemanager.customerinsights.models.InstanceOperationType;
import com.azure.resourcemanager.customerinsights.models.LinkListResult;
import com.azure.resourcemanager.customerinsights.models.LinkTypes;
import com.azure.resourcemanager.customerinsights.models.ParticipantPropertyReference;
import com.azure.resourcemanager.customerinsights.models.TypePropertiesMapping;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class LinkListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LinkListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"tenantId\":\"fgbrtt\",\"linkName\":\"aclkiexhajlfnt\",\"sourceEntityType\":\"Interaction\",\"targetEntityType\":\"Profile\",\"sourceEntityTypeName\":\"fyut\",\"targetEntityTypeName\":\"diygbpvnwswmtxky\",\"displayName\":{\"gzyvnee\":\"wgzwxjlmecvog\",\"ffhzbkrkjjjavfq\":\"aifghtmoqqt\",\"wdogiyetesyp\":\"vhnqo\",\"jhqt\":\"idbz\"},\"description\":{\"etnjuhpsprkz\":\"vnynkb\",\"cxnafbwqrooh\":\"aupia\",\"mghihp\":\"uovmaonurjt\",\"jxl\":\"ecmslclbl\"},\"mappings\":[{\"sourcePropertyName\":\"juscvsfx\",\"targetPropertyName\":\"gctmgxuupbezq\",\"linkType\":\"UpdateAlways\"},{\"sourcePropertyName\":\"drtc\",\"targetPropertyName\":\"ukdqkkyihztg\",\"linkType\":\"CopyIfNull\"},{\"sourcePropertyName\":\"gqzgwldoychill\",\"targetPropertyName\":\"ecfehuwa\",\"linkType\":\"UpdateAlways\"},{\"sourcePropertyName\":\"uhicqllizstacsjv\",\"targetPropertyName\":\"rweft\",\"linkType\":\"CopyIfNull\"}],\"participantPropertyReferences\":[{\"sourcePropertyName\":\"jp\",\"targetPropertyName\":\"vssehaepw\"},{\"sourcePropertyName\":\"mcxtczhu\",\"targetPropertyName\":\"euknijduyyes\"},{\"sourcePropertyName\":\"ydjfb\",\"targetPropertyName\":\"c\"},{\"sourcePropertyName\":\"v\",\"targetPropertyName\":\"hulrtywikdmhla\"}],\"provisioningState\":\"HumanIntervention\",\"referenceOnly\":false,\"operationType\":\"Delete\"},\"id\":\"gauacdixmxuf\",\"name\":\"sryjqgdkfno\",\"type\":\"oeoq\"}],\"nextLink\":\"jhvefgwbmqjchnt\"}")
            .toObject(LinkListResult.class);
        Assertions.assertEquals(EntityType.INTERACTION, model.value().get(0).sourceEntityType());
        Assertions.assertEquals(EntityType.PROFILE, model.value().get(0).targetEntityType());
        Assertions.assertEquals("fyut", model.value().get(0).sourceEntityTypeName());
        Assertions.assertEquals("diygbpvnwswmtxky", model.value().get(0).targetEntityTypeName());
        Assertions.assertEquals("wgzwxjlmecvog", model.value().get(0).displayName().get("gzyvnee"));
        Assertions.assertEquals("vnynkb", model.value().get(0).description().get("etnjuhpsprkz"));
        Assertions.assertEquals("juscvsfx", model.value().get(0).mappings().get(0).sourcePropertyName());
        Assertions.assertEquals("gctmgxuupbezq", model.value().get(0).mappings().get(0).targetPropertyName());
        Assertions.assertEquals(LinkTypes.UPDATE_ALWAYS, model.value().get(0).mappings().get(0).linkType());
        Assertions.assertEquals("jp", model.value().get(0).participantPropertyReferences().get(0).sourcePropertyName());
        Assertions.assertEquals("vssehaepw",
            model.value().get(0).participantPropertyReferences().get(0).targetPropertyName());
        Assertions.assertEquals(false, model.value().get(0).referenceOnly());
        Assertions.assertEquals(InstanceOperationType.DELETE, model.value().get(0).operationType());
        Assertions.assertEquals("jhvefgwbmqjchnt", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LinkListResult model = new LinkListResult().withValue(Arrays.asList(new LinkResourceFormatInner()
            .withSourceEntityType(EntityType.INTERACTION)
            .withTargetEntityType(EntityType.PROFILE)
            .withSourceEntityTypeName("fyut")
            .withTargetEntityTypeName("diygbpvnwswmtxky")
            .withDisplayName(mapOf("gzyvnee", "wgzwxjlmecvog", "ffhzbkrkjjjavfq", "aifghtmoqqt", "wdogiyetesyp",
                "vhnqo", "jhqt", "idbz"))
            .withDescription(
                mapOf("etnjuhpsprkz", "vnynkb", "cxnafbwqrooh", "aupia", "mghihp", "uovmaonurjt", "jxl", "ecmslclbl"))
            .withMappings(Arrays.asList(
                new TypePropertiesMapping().withSourcePropertyName("juscvsfx")
                    .withTargetPropertyName("gctmgxuupbezq")
                    .withLinkType(LinkTypes.UPDATE_ALWAYS),
                new TypePropertiesMapping().withSourcePropertyName("drtc")
                    .withTargetPropertyName("ukdqkkyihztg")
                    .withLinkType(LinkTypes.COPY_IF_NULL),
                new TypePropertiesMapping().withSourcePropertyName("gqzgwldoychill")
                    .withTargetPropertyName("ecfehuwa")
                    .withLinkType(LinkTypes.UPDATE_ALWAYS),
                new TypePropertiesMapping().withSourcePropertyName("uhicqllizstacsjv")
                    .withTargetPropertyName("rweft")
                    .withLinkType(LinkTypes.COPY_IF_NULL)))
            .withParticipantPropertyReferences(Arrays.asList(
                new ParticipantPropertyReference().withSourcePropertyName("jp").withTargetPropertyName("vssehaepw"),
                new ParticipantPropertyReference().withSourcePropertyName("mcxtczhu")
                    .withTargetPropertyName("euknijduyyes"),
                new ParticipantPropertyReference().withSourcePropertyName("ydjfb").withTargetPropertyName("c"),
                new ParticipantPropertyReference().withSourcePropertyName("v")
                    .withTargetPropertyName("hulrtywikdmhla")))
            .withReferenceOnly(false)
            .withOperationType(InstanceOperationType.DELETE))).withNextLink("jhvefgwbmqjchnt");
        model = BinaryData.fromObject(model).toObject(LinkListResult.class);
        Assertions.assertEquals(EntityType.INTERACTION, model.value().get(0).sourceEntityType());
        Assertions.assertEquals(EntityType.PROFILE, model.value().get(0).targetEntityType());
        Assertions.assertEquals("fyut", model.value().get(0).sourceEntityTypeName());
        Assertions.assertEquals("diygbpvnwswmtxky", model.value().get(0).targetEntityTypeName());
        Assertions.assertEquals("wgzwxjlmecvog", model.value().get(0).displayName().get("gzyvnee"));
        Assertions.assertEquals("vnynkb", model.value().get(0).description().get("etnjuhpsprkz"));
        Assertions.assertEquals("juscvsfx", model.value().get(0).mappings().get(0).sourcePropertyName());
        Assertions.assertEquals("gctmgxuupbezq", model.value().get(0).mappings().get(0).targetPropertyName());
        Assertions.assertEquals(LinkTypes.UPDATE_ALWAYS, model.value().get(0).mappings().get(0).linkType());
        Assertions.assertEquals("jp", model.value().get(0).participantPropertyReferences().get(0).sourcePropertyName());
        Assertions.assertEquals("vssehaepw",
            model.value().get(0).participantPropertyReferences().get(0).targetPropertyName());
        Assertions.assertEquals(false, model.value().get(0).referenceOnly());
        Assertions.assertEquals(InstanceOperationType.DELETE, model.value().get(0).operationType());
        Assertions.assertEquals("jhvefgwbmqjchnt", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
