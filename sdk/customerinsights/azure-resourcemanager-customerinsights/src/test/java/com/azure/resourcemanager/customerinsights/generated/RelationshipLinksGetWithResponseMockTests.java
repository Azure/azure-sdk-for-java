// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.customerinsights.CustomerInsightsManager;
import com.azure.resourcemanager.customerinsights.models.LinkTypes;
import com.azure.resourcemanager.customerinsights.models.RelationshipLinkResourceFormat;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RelationshipLinksGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":{\"qs\":\"c\"},\"description\":{\"fymkouih\":\"i\",\"zhogsmgbvmtdw\":\"eseuugci\",\"jnfveg\":\"qbe\"},\"interactionType\":\"abtvkbi\",\"linkName\":\"nhtfgfi\",\"mappings\":[{\"interactionFieldName\":\"yhizpaczmu\",\"linkType\":\"CopyIfNull\",\"relationshipFieldName\":\"akznhokhoitwhr\"}],\"profilePropertyReferences\":[{\"interactionPropertyName\":\"dmmazdnc\",\"profilePropertyName\":\"idb\"},{\"interactionPropertyName\":\"pglhzqp\",\"profilePropertyName\":\"zbawkikcdgfh\"}],\"provisioningState\":\"Provisioning\",\"relatedProfilePropertyReferences\":[{\"interactionPropertyName\":\"pjeyoqxded\",\"profilePropertyName\":\"cfiwhagxsurejq\"},{\"interactionPropertyName\":\"shzz\",\"profilePropertyName\":\"g\"},{\"interactionPropertyName\":\"ll\",\"profilePropertyName\":\"xiqqzjkoxdupna\"}],\"relationshipName\":\"gl\",\"relationshipGuidId\":\"uigdmfivjqterdq\",\"tenantId\":\"gd\"},\"id\":\"d\",\"name\":\"ghpcvrwqirvt\",\"type\":\"tyhhmvfxlapja\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CustomerInsightsManager manager = CustomerInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        RelationshipLinkResourceFormat response = manager.relationshipLinks()
            .getWithResponse("guuzh", "vladpcmhjha", "sybkekymffzt", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("c", response.displayName().get("qs"));
        Assertions.assertEquals("i", response.description().get("fymkouih"));
        Assertions.assertEquals("abtvkbi", response.interactionType());
        Assertions.assertEquals("yhizpaczmu", response.mappings().get(0).interactionFieldName());
        Assertions.assertEquals(LinkTypes.COPY_IF_NULL, response.mappings().get(0).linkType());
        Assertions.assertEquals("akznhokhoitwhr", response.mappings().get(0).relationshipFieldName());
        Assertions.assertEquals("dmmazdnc", response.profilePropertyReferences().get(0).interactionPropertyName());
        Assertions.assertEquals("idb", response.profilePropertyReferences().get(0).profilePropertyName());
        Assertions.assertEquals("pjeyoqxded",
            response.relatedProfilePropertyReferences().get(0).interactionPropertyName());
        Assertions.assertEquals("cfiwhagxsurejq",
            response.relatedProfilePropertyReferences().get(0).profilePropertyName());
        Assertions.assertEquals("gl", response.relationshipName());
    }
}
