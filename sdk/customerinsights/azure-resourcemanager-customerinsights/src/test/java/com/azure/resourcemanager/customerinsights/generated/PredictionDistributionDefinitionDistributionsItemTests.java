// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.customerinsights.models.PredictionDistributionDefinitionDistributionsItem;
import org.junit.jupiter.api.Assertions;

public final class PredictionDistributionDefinitionDistributionsItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PredictionDistributionDefinitionDistributionsItem model = BinaryData.fromString(
            "{\"scoreThreshold\":847050759,\"positives\":569117466292471912,\"negatives\":85823345653106968,\"positivesAboveThreshold\":3837932750220771347,\"negativesAboveThreshold\":7991864830112464952}")
            .toObject(PredictionDistributionDefinitionDistributionsItem.class);
        Assertions.assertEquals(847050759, model.scoreThreshold());
        Assertions.assertEquals(569117466292471912L, model.positives());
        Assertions.assertEquals(85823345653106968L, model.negatives());
        Assertions.assertEquals(3837932750220771347L, model.positivesAboveThreshold());
        Assertions.assertEquals(7991864830112464952L, model.negativesAboveThreshold());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PredictionDistributionDefinitionDistributionsItem model
            = new PredictionDistributionDefinitionDistributionsItem().withScoreThreshold(847050759)
                .withPositives(569117466292471912L)
                .withNegatives(85823345653106968L)
                .withPositivesAboveThreshold(3837932750220771347L)
                .withNegativesAboveThreshold(7991864830112464952L);
        model = BinaryData.fromObject(model).toObject(PredictionDistributionDefinitionDistributionsItem.class);
        Assertions.assertEquals(847050759, model.scoreThreshold());
        Assertions.assertEquals(569117466292471912L, model.positives());
        Assertions.assertEquals(85823345653106968L, model.negatives());
        Assertions.assertEquals(3837932750220771347L, model.positivesAboveThreshold());
        Assertions.assertEquals(7991864830112464952L, model.negativesAboveThreshold());
    }
}
