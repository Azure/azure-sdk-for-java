// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.customerinsights.models.MetadataDefinitionBase;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class MetadataDefinitionBaseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MetadataDefinitionBase model = BinaryData.fromString(
            "{\"attributes\":{\"hcjrefovgmk\":[\"nnaamdectehfiqsc\",\"eypvhezrkg\"],\"qjpkcattpngjcrc\":[\"leyyvx\"],\"kthfui\":[\"sqpjhvmdajvn\",\"sounqecanoaeu\",\"fhyhltrpmopjmcma\",\"u\"],\"dxwzywqsmbsurexi\":[\"odsfcpkvxodpuozm\",\"zydagfuaxbezyiuo\",\"ktwh\"]},\"description\":{\"fksymddystki\":\"yocf\",\"yudxorrqnbp\":\"uxh\",\"vkd\":\"czvyifq\",\"d\":\"jsllrmv\"},\"displayName\":{\"pnpulexxbczwtru\":\"t\",\"vsovmyokac\":\"iqzbq\"},\"localizedAttributes\":{\"kcciwwzjuqkhr\":{\"jmflbvvnch\":\"lhzdobp\"},\"v\":{\"imjm\":\"jiwkuofoskghsau\",\"byao\":\"xieduugidyjrr\"}},\"smallImage\":\"csonpclhoco\",\"mediumImage\":\"lkevle\",\"largeImage\":\"zfbuhf\"}")
            .toObject(MetadataDefinitionBase.class);
        Assertions.assertEquals("nnaamdectehfiqsc", model.attributes().get("hcjrefovgmk").get(0));
        Assertions.assertEquals("yocf", model.description().get("fksymddystki"));
        Assertions.assertEquals("t", model.displayName().get("pnpulexxbczwtru"));
        Assertions.assertEquals("lhzdobp", model.localizedAttributes().get("kcciwwzjuqkhr").get("jmflbvvnch"));
        Assertions.assertEquals("csonpclhoco", model.smallImage());
        Assertions.assertEquals("lkevle", model.mediumImage());
        Assertions.assertEquals("zfbuhf", model.largeImage());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MetadataDefinitionBase model = new MetadataDefinitionBase()
            .withAttributes(mapOf("hcjrefovgmk", Arrays.asList("nnaamdectehfiqsc", "eypvhezrkg"), "qjpkcattpngjcrc",
                Arrays.asList("leyyvx"), "kthfui",
                Arrays.asList("sqpjhvmdajvn", "sounqecanoaeu", "fhyhltrpmopjmcma", "u"), "dxwzywqsmbsurexi",
                Arrays.asList("odsfcpkvxodpuozm", "zydagfuaxbezyiuo", "ktwh")))
            .withDescription(mapOf("fksymddystki", "yocf", "yudxorrqnbp", "uxh", "vkd", "czvyifq", "d", "jsllrmv"))
            .withDisplayName(mapOf("pnpulexxbczwtru", "t", "vsovmyokac", "iqzbq"))
            .withLocalizedAttributes(mapOf("kcciwwzjuqkhr", mapOf("jmflbvvnch", "lhzdobp"), "v",
                mapOf("imjm", "jiwkuofoskghsau", "byao", "xieduugidyjrr")))
            .withSmallImage("csonpclhoco")
            .withMediumImage("lkevle")
            .withLargeImage("zfbuhf");
        model = BinaryData.fromObject(model).toObject(MetadataDefinitionBase.class);
        Assertions.assertEquals("nnaamdectehfiqsc", model.attributes().get("hcjrefovgmk").get(0));
        Assertions.assertEquals("yocf", model.description().get("fksymddystki"));
        Assertions.assertEquals("t", model.displayName().get("pnpulexxbczwtru"));
        Assertions.assertEquals("lhzdobp", model.localizedAttributes().get("kcciwwzjuqkhr").get("jmflbvvnch"));
        Assertions.assertEquals("csonpclhoco", model.smallImage());
        Assertions.assertEquals("lkevle", model.mediumImage());
        Assertions.assertEquals("zfbuhf", model.largeImage());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
