// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.customerinsights.CustomerInsightsManager;
import com.azure.resourcemanager.customerinsights.models.LinkTypes;
import com.azure.resourcemanager.customerinsights.models.RelationshipLinkResourceFormat;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RelationshipLinksListByHubMockTests {
    @Test
    public void testListByHub() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"displayName\":{\"gongr\":\"gzvzqazvbkarkp\",\"eq\":\"atsyiysjqhenig\",\"ysc\":\"gubabyjde\"},\"description\":{\"jemexmnv\":\"d\",\"xlniwmcpm\":\"vmuw\",\"eqjzm\":\"rdlhvdvmiphbe\"},\"interactionType\":\"kdclacroczf\",\"linkName\":\"ner\",\"mappings\":[{\"interactionFieldName\":\"uxzshxz\",\"linkType\":\"UpdateAlways\",\"relationshipFieldName\":\"zuzudlevzskejc\"},{\"interactionFieldName\":\"wfs\",\"linkType\":\"CopyIfNull\",\"relationshipFieldName\":\"styec\"},{\"interactionFieldName\":\"pyuijp\",\"linkType\":\"CopyIfNull\",\"relationshipFieldName\":\"avsjcfmazpzdq\"},{\"interactionFieldName\":\"uzvcmcok\",\"linkType\":\"UpdateAlways\",\"relationshipFieldName\":\"ekuvfrjwuca\"}],\"profilePropertyReferences\":[{\"interactionPropertyName\":\"zvajbvbnkrdem\",\"profilePropertyName\":\"idackzidgzwdyd\"},{\"interactionPropertyName\":\"misvpztd\",\"profilePropertyName\":\"vykpxkqe\"},{\"interactionPropertyName\":\"tpjfojiunrlshxuk\",\"profilePropertyName\":\"sykdtoi\"},{\"interactionPropertyName\":\"oancdrco\",\"profilePropertyName\":\"nvxuldxonckb\"}],\"provisioningState\":\"Deleting\",\"relatedProfilePropertyReferences\":[{\"interactionPropertyName\":\"fxlupibaq\",\"profilePropertyName\":\"izxzpzweghl\"},{\"interactionPropertyName\":\"wbogvgfklqiy\",\"profilePropertyName\":\"dve\"},{\"interactionPropertyName\":\"elsbfvd\",\"profilePropertyName\":\"trkzxsgtznsvlrds\"},{\"interactionPropertyName\":\"o\",\"profilePropertyName\":\"pimyndnoxax\"}],\"relationshipName\":\"rqaqotn\",\"relationshipGuidId\":\"xolousdv\",\"tenantId\":\"ptqmawzjdrpiz\"},\"id\":\"ulgyctsdbtqgku\",\"name\":\"dsooxr\",\"type\":\"w\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CustomerInsightsManager manager = CustomerInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<RelationshipLinkResourceFormat> response = manager.relationshipLinks()
            .listByHub("pqvctsfaeuhwwsk", "stvzuzhasupml", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("gzvzqazvbkarkp", response.iterator().next().displayName().get("gongr"));
        Assertions.assertEquals("d", response.iterator().next().description().get("jemexmnv"));
        Assertions.assertEquals("kdclacroczf", response.iterator().next().interactionType());
        Assertions.assertEquals("uxzshxz", response.iterator().next().mappings().get(0).interactionFieldName());
        Assertions.assertEquals(LinkTypes.UPDATE_ALWAYS, response.iterator().next().mappings().get(0).linkType());
        Assertions.assertEquals("zuzudlevzskejc", response.iterator().next().mappings().get(0).relationshipFieldName());
        Assertions.assertEquals("zvajbvbnkrdem",
            response.iterator().next().profilePropertyReferences().get(0).interactionPropertyName());
        Assertions.assertEquals("idackzidgzwdyd",
            response.iterator().next().profilePropertyReferences().get(0).profilePropertyName());
        Assertions.assertEquals("fxlupibaq",
            response.iterator().next().relatedProfilePropertyReferences().get(0).interactionPropertyName());
        Assertions.assertEquals("izxzpzweghl",
            response.iterator().next().relatedProfilePropertyReferences().get(0).profilePropertyName());
        Assertions.assertEquals("rqaqotn", response.iterator().next().relationshipName());
    }
}
