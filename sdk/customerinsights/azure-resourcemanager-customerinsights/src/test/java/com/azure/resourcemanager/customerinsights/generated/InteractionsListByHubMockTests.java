// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.customerinsights.CustomerInsightsManager;
import com.azure.resourcemanager.customerinsights.models.EntityTypes;
import com.azure.resourcemanager.customerinsights.models.InteractionResourceFormat;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InteractionsListByHubMockTests {
    @Test
    public void testListByHub() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"idPropertyNames\":[\"tfwfqchvczevj\",\"nctagfyvrtpqpem\",\"z\"],\"participantProfiles\":[{\"profileTypeName\":\"repdqhqyhwq\",\"participantPropertyReferences\":[{\"sourcePropertyName\":\"mvxqab\",\"targetPropertyName\":\"km\"}],\"participantName\":\"eoxinhgre\",\"displayName\":{\"angp\":\"whlpuzjpceezn\",\"phmsexroq\":\"bfaxyxzlbc\",\"nfee\":\"ndktxfv\"},\"description\":{\"bgnixxoww\":\"krie\",\"p\":\"kyfwnwpiwxeiicr\",\"dm\":\"pk\"},\"role\":\"xijvskwsdgkjgyac\"},{\"profileTypeName\":\"rasek\",\"participantPropertyReferences\":[{\"sourcePropertyName\":\"fcvoinwoqar\",\"targetPropertyName\":\"wyxqiclad\"},{\"sourcePropertyName\":\"atdavuqmcbyms\",\"targetPropertyName\":\"ob\"}],\"participantName\":\"lquvjezcjumvp\",\"displayName\":{\"nnraclibbfqpspkl\":\"ioyoiglkmiq\",\"gpmnmabe\":\"dydgnhautwukex\"},\"description\":{\"gq\":\"ilwgdfpfqfpcvstc\",\"jj\":\"vwerfwxbsmtb\",\"ci\":\"h\",\"ekqhs\":\"kwdvbtb\"},\"role\":\"tfpwpqbyejuw\"},{\"profileTypeName\":\"qwdqi\",\"participantPropertyReferences\":[{\"sourcePropertyName\":\"ghg\",\"targetPropertyName\":\"nztxlujkh\"}],\"participantName\":\"jcmrnkfm\",\"displayName\":{\"dvragpokddxejhh\":\"qtwmlmhjnqtqeahj\",\"tpt\":\"vgua\",\"wkqyns\":\"k\",\"vdxaexqokmyrljia\":\"gbvoffbkk\"},\"description\":{\"jtrpzuyud\":\"nobrqlpb\"},\"role\":\"bxnhsqeaeo\"},{\"profileTypeName\":\"qelwgdhuruzytza\",\"participantPropertyReferences\":[{\"sourcePropertyName\":\"gatmoljiy\",\"targetPropertyName\":\"mpinmzvfkneerzzt\"},{\"sourcePropertyName\":\"knsjulugd\",\"targetPropertyName\":\"bnhrxlelfjhkeiz\"},{\"sourcePropertyName\":\"pihtdmiwjekpt\",\"targetPropertyName\":\"caydbjzcqymlcfnz\"}],\"participantName\":\"mhsurlgwqkpmm\",\"displayName\":{\"gvvjhvvlr\":\"tauolawiubmom\",\"ajnkdflqionswae\":\"ohewjj\",\"totryegpkhxrme\":\"kzfzqxjosho\"},\"description\":{\"khup\":\"lwkbfok\",\"cemftzgyykyalu\":\"erufgjblcdrmy\",\"wrczfjjnnuxxrk\":\"ekdfqnhttwd\",\"cifrhjulrsulwzpf\":\"mhmnulwemp\"},\"role\":\"snawmhhgzotfri\"}],\"primaryParticipantProfilePropertyName\":\"gkoekvzwxxyxh\",\"dataSourcePrecedenceRules\":[{\"dataSource\":{\"name\":\"xb\",\"dataSourceType\":\"LinkInteraction\",\"status\":\"Deleted\",\"id\":1299436949,\"dataSourceReferenceId\":\"deykvskiczdfrje\"},\"precedence\":1297044346},{\"dataSource\":{\"name\":\"qaboohxbms\",\"dataSourceType\":\"SystemDefault\",\"status\":\"Deleted\",\"id\":1640456866,\"dataSourceReferenceId\":\"d\"},\"precedence\":1680456657},{\"dataSource\":{\"name\":\"qaeo\",\"dataSourceType\":\"LinkInteraction\",\"status\":\"None\",\"id\":1091848301,\"dataSourceReferenceId\":\"bvhhdaurgh\"},\"precedence\":1069326313},{\"dataSource\":{\"name\":\"xb\",\"dataSourceType\":\"LinkInteraction\",\"status\":\"Active\",\"id\":758265319,\"dataSourceReferenceId\":\"zlqxrkdknk\"},\"precedence\":1052717434}],\"defaultDataSource\":{\"name\":\"mbozom\",\"dataSourceType\":\"LinkInteraction\",\"status\":\"Active\",\"id\":1157535684,\"dataSourceReferenceId\":\"gwcd\"},\"isActivity\":false,\"apiEntitySetName\":\"znuxkeuairaabmdl\",\"entityType\":\"Relationship\",\"fields\":[{\"arrayValueSeparator\":\"f\",\"enumValidValues\":[{},{},{},{}],\"fieldName\":\"hupmomihzbd\",\"fieldType\":\"p\",\"isArray\":true,\"isEnum\":false,\"isFlagEnum\":true,\"isImage\":true,\"isLocalizedString\":false,\"isName\":false,\"isRequired\":false,\"propertyId\":\"hflrufssjyghsfx\",\"schemaItemPropLink\":\"bh\",\"maxLength\":2123821777,\"isAvailableInGraph\":true,\"dataSourcePrecedenceRules\":[{}]}],\"instancesCount\":1830189009,\"lastChangedUtc\":\"2021-07-26T05:49:51Z\",\"provisioningState\":\"Succeeded\",\"schemaItemTypeLink\":\"pd\",\"tenantId\":\"gquxweysland\",\"timestampFieldName\":\"cdjhunhg\",\"typeName\":\"gawnrrnquo\",\"attributes\":{\"xcjzlquze\":[\"ireimseobf\",\"xstcyilbvzm\"],\"v\":[\"kjxebj\",\"b\",\"inzabwmvoglj\"]},\"description\":{\"idoyzl\":\"idnwceha\"},\"displayName\":{\"pepiaeapfs\":\"omqo\",\"pqqncju\":\"rgdtpeqnacyheqw\",\"ymc\":\"khjoz\",\"upyvqyvliq\":\"m\"},\"localizedAttributes\":{\"yjln\":{\"hddzydisnuepy\":\"ejbsvsiaies\"},\"ph\":{\"i\":\"pxottd\",\"ihweeb\":\"ocqibz\"},\"jhfrzgdkkagv\":{\"dhzybsp\":\"vcjwqwoqsratj\"},\"bkut\":{\"zhwilzzh\":\"khsusmmorf\",\"r\":\"ijmri\",\"eyttlrcxiv\":\"kd\"}},\"smallImage\":\"mltwjfluxynbpvzl\",\"mediumImage\":\"wa\",\"largeImage\":\"qnjckhmocg\"},\"id\":\"shgouarhwvix\",\"name\":\"qggljkybs\",\"type\":\"rcl\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CustomerInsightsManager manager = CustomerInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<InteractionResourceFormat> response = manager.interactions()
            .listByHub("luiyuosnuudte", "vhyibdrqrsw", "buubpyrowt", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("tfwfqchvczevj", response.iterator().next().idPropertyNames().get(0));
        Assertions.assertEquals("repdqhqyhwq",
            response.iterator().next().participantProfiles().get(0).profileTypeName());
        Assertions.assertEquals("mvxqab",
            response.iterator()
                .next()
                .participantProfiles()
                .get(0)
                .participantPropertyReferences()
                .get(0)
                .sourcePropertyName());
        Assertions.assertEquals("km",
            response.iterator()
                .next()
                .participantProfiles()
                .get(0)
                .participantPropertyReferences()
                .get(0)
                .targetPropertyName());
        Assertions.assertEquals("eoxinhgre", response.iterator().next().participantProfiles().get(0).participantName());
        Assertions.assertEquals("whlpuzjpceezn",
            response.iterator().next().participantProfiles().get(0).displayName().get("angp"));
        Assertions.assertEquals("krie",
            response.iterator().next().participantProfiles().get(0).description().get("bgnixxoww"));
        Assertions.assertEquals("xijvskwsdgkjgyac", response.iterator().next().participantProfiles().get(0).role());
        Assertions.assertEquals("gkoekvzwxxyxh", response.iterator().next().primaryParticipantProfilePropertyName());
        Assertions.assertEquals(false, response.iterator().next().isActivity());
        Assertions.assertEquals("znuxkeuairaabmdl", response.iterator().next().apiEntitySetName());
        Assertions.assertEquals(EntityTypes.RELATIONSHIP, response.iterator().next().entityType());
        Assertions.assertEquals("f", response.iterator().next().fields().get(0).arrayValueSeparator());
        Assertions.assertEquals("hupmomihzbd", response.iterator().next().fields().get(0).fieldName());
        Assertions.assertEquals("p", response.iterator().next().fields().get(0).fieldType());
        Assertions.assertEquals(true, response.iterator().next().fields().get(0).isArray());
        Assertions.assertEquals(false, response.iterator().next().fields().get(0).isEnum());
        Assertions.assertEquals(true, response.iterator().next().fields().get(0).isFlagEnum());
        Assertions.assertEquals(true, response.iterator().next().fields().get(0).isImage());
        Assertions.assertEquals(false, response.iterator().next().fields().get(0).isLocalizedString());
        Assertions.assertEquals(false, response.iterator().next().fields().get(0).isName());
        Assertions.assertEquals(false, response.iterator().next().fields().get(0).isRequired());
        Assertions.assertEquals("hflrufssjyghsfx", response.iterator().next().fields().get(0).propertyId());
        Assertions.assertEquals("bh", response.iterator().next().fields().get(0).schemaItemPropLink());
        Assertions.assertEquals(2123821777, response.iterator().next().fields().get(0).maxLength());
        Assertions.assertEquals(true, response.iterator().next().fields().get(0).isAvailableInGraph());
        Assertions.assertEquals(1830189009, response.iterator().next().instancesCount());
        Assertions.assertEquals("pd", response.iterator().next().schemaItemTypeLink());
        Assertions.assertEquals("cdjhunhg", response.iterator().next().timestampFieldName());
        Assertions.assertEquals("gawnrrnquo", response.iterator().next().typeName());
        Assertions.assertEquals("ireimseobf", response.iterator().next().attributes().get("xcjzlquze").get(0));
        Assertions.assertEquals("idnwceha", response.iterator().next().description().get("idoyzl"));
        Assertions.assertEquals("omqo", response.iterator().next().displayName().get("pepiaeapfs"));
        Assertions.assertEquals("ejbsvsiaies",
            response.iterator().next().localizedAttributes().get("yjln").get("hddzydisnuepy"));
        Assertions.assertEquals("mltwjfluxynbpvzl", response.iterator().next().smallImage());
        Assertions.assertEquals("wa", response.iterator().next().mediumImage());
        Assertions.assertEquals("qnjckhmocg", response.iterator().next().largeImage());
    }
}
