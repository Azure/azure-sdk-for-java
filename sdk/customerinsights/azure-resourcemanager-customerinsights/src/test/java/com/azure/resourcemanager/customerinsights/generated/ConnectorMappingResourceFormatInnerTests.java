// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.customerinsights.fluent.models.ConnectorMappingResourceFormatInner;
import com.azure.resourcemanager.customerinsights.models.CompletionOperationTypes;
import com.azure.resourcemanager.customerinsights.models.ConnectorMappingAvailability;
import com.azure.resourcemanager.customerinsights.models.ConnectorMappingCompleteOperation;
import com.azure.resourcemanager.customerinsights.models.ConnectorMappingErrorManagement;
import com.azure.resourcemanager.customerinsights.models.ConnectorMappingFormat;
import com.azure.resourcemanager.customerinsights.models.ConnectorMappingProperties;
import com.azure.resourcemanager.customerinsights.models.ConnectorMappingStructure;
import com.azure.resourcemanager.customerinsights.models.ConnectorTypes;
import com.azure.resourcemanager.customerinsights.models.EntityTypes;
import com.azure.resourcemanager.customerinsights.models.ErrorManagementTypes;
import com.azure.resourcemanager.customerinsights.models.FrequencyTypes;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ConnectorMappingResourceFormatInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConnectorMappingResourceFormatInner model = BinaryData.fromString(
            "{\"properties\":{\"connectorName\":\"hlisngw\",\"connectorType\":\"Salesforce\",\"created\":\"2020-12-29T01:03:02Z\",\"lastModified\":\"2021-03-21T12:10:03Z\",\"entityType\":\"Profile\",\"entityTypeName\":\"ruwnpqxpx\",\"connectorMappingName\":\"fcngjsa\",\"displayName\":\"iixtmkzj\",\"description\":\"viirhgfgrws\",\"dataFormatId\":\"gratzvzbglbyvict\",\"mappingProperties\":{\"folderPath\":\"brxkjzwr\",\"fileFilter\":\"ffm\",\"hasHeader\":false,\"errorManagement\":{\"errorManagementType\":\"RejectAndContinue\",\"errorLimit\":1645764106},\"format\":{\"columnDelimiter\":\"gozxw\",\"acceptLanguage\":\"dby\",\"quoteCharacter\":\"izqaclnapxbiyg\",\"quoteEscapeCharacter\":\"gjkn\",\"arraySeparator\":\"mfcttux\"},\"availability\":{\"frequency\":\"Week\",\"interval\":19689952},\"structure\":[{\"propertyName\":\"flqo\",\"columnName\":\"quvre\",\"customFormatSpecifier\":\"rnjhvsujztczytqj\",\"isEncrypted\":false},{\"propertyName\":\"auunfprnjletlx\",\"columnName\":\"mr\",\"customFormatSpecifier\":\"do\",\"isEncrypted\":false}],\"completeOperation\":{\"completionOperationType\":\"MoveFile\",\"destinationFolder\":\"waziy\"}},\"nextRunTime\":\"2021-04-04T17:04:10Z\",\"runId\":\"qwzdvpiwhxq\",\"state\":\"Expiring\",\"tenantId\":\"maajquhuxylr\"},\"id\":\"vmtygj\",\"name\":\"mzyospspshck\",\"type\":\"kyjpmspbps\"}")
            .toObject(ConnectorMappingResourceFormatInner.class);
        Assertions.assertEquals(ConnectorTypes.SALESFORCE, model.connectorType());
        Assertions.assertEquals(EntityTypes.PROFILE, model.entityType());
        Assertions.assertEquals("ruwnpqxpx", model.entityTypeName());
        Assertions.assertEquals("iixtmkzj", model.displayName());
        Assertions.assertEquals("viirhgfgrws", model.description());
        Assertions.assertEquals("brxkjzwr", model.mappingProperties().folderPath());
        Assertions.assertEquals("ffm", model.mappingProperties().fileFilter());
        Assertions.assertEquals(false, model.mappingProperties().hasHeader());
        Assertions.assertEquals(ErrorManagementTypes.REJECT_AND_CONTINUE,
            model.mappingProperties().errorManagement().errorManagementType());
        Assertions.assertEquals(1645764106, model.mappingProperties().errorManagement().errorLimit());
        Assertions.assertEquals("gozxw", model.mappingProperties().format().columnDelimiter());
        Assertions.assertEquals("dby", model.mappingProperties().format().acceptLanguage());
        Assertions.assertEquals("izqaclnapxbiyg", model.mappingProperties().format().quoteCharacter());
        Assertions.assertEquals("gjkn", model.mappingProperties().format().quoteEscapeCharacter());
        Assertions.assertEquals("mfcttux", model.mappingProperties().format().arraySeparator());
        Assertions.assertEquals(FrequencyTypes.WEEK, model.mappingProperties().availability().frequency());
        Assertions.assertEquals(19689952, model.mappingProperties().availability().interval());
        Assertions.assertEquals("flqo", model.mappingProperties().structure().get(0).propertyName());
        Assertions.assertEquals("quvre", model.mappingProperties().structure().get(0).columnName());
        Assertions.assertEquals("rnjhvsujztczytqj",
            model.mappingProperties().structure().get(0).customFormatSpecifier());
        Assertions.assertEquals(false, model.mappingProperties().structure().get(0).isEncrypted());
        Assertions.assertEquals(CompletionOperationTypes.MOVE_FILE,
            model.mappingProperties().completeOperation().completionOperationType());
        Assertions.assertEquals("waziy", model.mappingProperties().completeOperation().destinationFolder());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConnectorMappingResourceFormatInner model
            = new ConnectorMappingResourceFormatInner().withConnectorType(ConnectorTypes.SALESFORCE)
                .withEntityType(EntityTypes.PROFILE)
                .withEntityTypeName("ruwnpqxpx")
                .withDisplayName("iixtmkzj")
                .withDescription("viirhgfgrws")
                .withMappingProperties(new ConnectorMappingProperties().withFolderPath("brxkjzwr")
                    .withFileFilter("ffm")
                    .withHasHeader(false)
                    .withErrorManagement(new ConnectorMappingErrorManagement()
                        .withErrorManagementType(ErrorManagementTypes.REJECT_AND_CONTINUE)
                        .withErrorLimit(1645764106))
                    .withFormat(new ConnectorMappingFormat().withColumnDelimiter("gozxw")
                        .withAcceptLanguage("dby")
                        .withQuoteCharacter("izqaclnapxbiyg")
                        .withQuoteEscapeCharacter("gjkn")
                        .withArraySeparator("mfcttux"))
                    .withAvailability(
                        new ConnectorMappingAvailability().withFrequency(FrequencyTypes.WEEK).withInterval(19689952))
                    .withStructure(Arrays.asList(
                        new ConnectorMappingStructure().withPropertyName("flqo")
                            .withColumnName("quvre")
                            .withCustomFormatSpecifier("rnjhvsujztczytqj")
                            .withIsEncrypted(false),
                        new ConnectorMappingStructure().withPropertyName("auunfprnjletlx")
                            .withColumnName("mr")
                            .withCustomFormatSpecifier("do")
                            .withIsEncrypted(false)))
                    .withCompleteOperation(new ConnectorMappingCompleteOperation()
                        .withCompletionOperationType(CompletionOperationTypes.MOVE_FILE)
                        .withDestinationFolder("waziy")));
        model = BinaryData.fromObject(model).toObject(ConnectorMappingResourceFormatInner.class);
        Assertions.assertEquals(ConnectorTypes.SALESFORCE, model.connectorType());
        Assertions.assertEquals(EntityTypes.PROFILE, model.entityType());
        Assertions.assertEquals("ruwnpqxpx", model.entityTypeName());
        Assertions.assertEquals("iixtmkzj", model.displayName());
        Assertions.assertEquals("viirhgfgrws", model.description());
        Assertions.assertEquals("brxkjzwr", model.mappingProperties().folderPath());
        Assertions.assertEquals("ffm", model.mappingProperties().fileFilter());
        Assertions.assertEquals(false, model.mappingProperties().hasHeader());
        Assertions.assertEquals(ErrorManagementTypes.REJECT_AND_CONTINUE,
            model.mappingProperties().errorManagement().errorManagementType());
        Assertions.assertEquals(1645764106, model.mappingProperties().errorManagement().errorLimit());
        Assertions.assertEquals("gozxw", model.mappingProperties().format().columnDelimiter());
        Assertions.assertEquals("dby", model.mappingProperties().format().acceptLanguage());
        Assertions.assertEquals("izqaclnapxbiyg", model.mappingProperties().format().quoteCharacter());
        Assertions.assertEquals("gjkn", model.mappingProperties().format().quoteEscapeCharacter());
        Assertions.assertEquals("mfcttux", model.mappingProperties().format().arraySeparator());
        Assertions.assertEquals(FrequencyTypes.WEEK, model.mappingProperties().availability().frequency());
        Assertions.assertEquals(19689952, model.mappingProperties().availability().interval());
        Assertions.assertEquals("flqo", model.mappingProperties().structure().get(0).propertyName());
        Assertions.assertEquals("quvre", model.mappingProperties().structure().get(0).columnName());
        Assertions.assertEquals("rnjhvsujztczytqj",
            model.mappingProperties().structure().get(0).customFormatSpecifier());
        Assertions.assertEquals(false, model.mappingProperties().structure().get(0).isEncrypted());
        Assertions.assertEquals(CompletionOperationTypes.MOVE_FILE,
            model.mappingProperties().completeOperation().completionOperationType());
        Assertions.assertEquals("waziy", model.mappingProperties().completeOperation().destinationFolder());
    }
}
