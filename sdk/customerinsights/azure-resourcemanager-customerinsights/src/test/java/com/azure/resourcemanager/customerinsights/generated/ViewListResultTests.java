// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.customerinsights.fluent.models.ViewResourceFormatInner;
import com.azure.resourcemanager.customerinsights.models.ViewListResult;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ViewListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ViewListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"viewName\":\"zqedikdfrdbi\",\"userId\":\"rjgeih\",\"tenantId\":\"lg\",\"displayName\":{\"gt\":\"iwzcxmjpbyeph\",\"myqwcab\":\"ljvrcmyfqipgxhnp\",\"aswlp\":\"nuilee\",\"lrxw\":\"ugmrmf\"},\"definition\":\"oauk\",\"changed\":\"2021-11-18T01:35:31Z\",\"created\":\"2021-09-16T15:31:23Z\"},\"id\":\"isizm\",\"name\":\"a\",\"type\":\"dsxjwuivedw\"},{\"properties\":{\"viewName\":\"eewxeiqbpsmg\",\"userId\":\"guamlj\",\"tenantId\":\"rgmsplzga\",\"displayName\":{\"pqanxrjkix\":\"shhvnewgnxky\",\"yghs\":\"wbtaoyp\"},\"definition\":\"xcy\",\"changed\":\"2021-09-22T21:59:43Z\",\"created\":\"2021-02-25T18:08:40Z\"},\"id\":\"nsghp\",\"name\":\"ycphdrwjjkhvyo\",\"type\":\"ac\"},{\"properties\":{\"viewName\":\"vxnqmhrpqpd\",\"userId\":\"mkoisqcssf\",\"tenantId\":\"uifmc\",\"displayName\":{\"llg\":\"obkdqzrdzsyl\"},\"definition\":\"rc\",\"changed\":\"2020-12-25T08:13:07Z\",\"created\":\"2021-09-20T06:53:41Z\"},\"id\":\"xzji\",\"name\":\"p\",\"type\":\"uaurkihcir\"}],\"nextLink\":\"efxrdcoxnbk\"}")
            .toObject(ViewListResult.class);
        Assertions.assertEquals("rjgeih", model.value().get(0).userId());
        Assertions.assertEquals("iwzcxmjpbyeph", model.value().get(0).displayName().get("gt"));
        Assertions.assertEquals("oauk", model.value().get(0).definition());
        Assertions.assertEquals("efxrdcoxnbk", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ViewListResult model
            = new ViewListResult().withValue(Arrays.asList(
                new ViewResourceFormatInner().withUserId("rjgeih")
                    .withDisplayName(mapOf("gt", "iwzcxmjpbyeph", "myqwcab", "ljvrcmyfqipgxhnp", "aswlp", "nuilee",
                        "lrxw", "ugmrmf"))
                    .withDefinition("oauk"),
                new ViewResourceFormatInner().withUserId("guamlj")
                    .withDisplayName(mapOf("pqanxrjkix", "shhvnewgnxky", "yghs", "wbtaoyp"))
                    .withDefinition("xcy"),
                new ViewResourceFormatInner().withUserId("mkoisqcssf")
                    .withDisplayName(mapOf("llg", "obkdqzrdzsyl"))
                    .withDefinition("rc")))
                .withNextLink("efxrdcoxnbk");
        model = BinaryData.fromObject(model).toObject(ViewListResult.class);
        Assertions.assertEquals("rjgeih", model.value().get(0).userId());
        Assertions.assertEquals("iwzcxmjpbyeph", model.value().get(0).displayName().get("gt"));
        Assertions.assertEquals("oauk", model.value().get(0).definition());
        Assertions.assertEquals("efxrdcoxnbk", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
