// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Salesforce table. */
@Fluent
public final class SalesforceTable {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SalesforceTable.class);

    /*
     * Indicating whether this instance is profile.
     */
    @JsonProperty(value = "isProfile")
    private String isProfile;

    /*
     * The table category.
     */
    @JsonProperty(value = "tableCategory", required = true)
    private String tableCategory;

    /*
     * The name of the table.
     */
    @JsonProperty(value = "tableName", required = true)
    private String tableName;

    /*
     * The table remarks.
     */
    @JsonProperty(value = "tableRemarks")
    private String tableRemarks;

    /*
     * The table schema.
     */
    @JsonProperty(value = "tableSchema", required = true)
    private String tableSchema;

    /**
     * Get the isProfile property: Indicating whether this instance is profile.
     *
     * @return the isProfile value.
     */
    public String isProfile() {
        return this.isProfile;
    }

    /**
     * Set the isProfile property: Indicating whether this instance is profile.
     *
     * @param isProfile the isProfile value to set.
     * @return the SalesforceTable object itself.
     */
    public SalesforceTable withIsProfile(String isProfile) {
        this.isProfile = isProfile;
        return this;
    }

    /**
     * Get the tableCategory property: The table category.
     *
     * @return the tableCategory value.
     */
    public String tableCategory() {
        return this.tableCategory;
    }

    /**
     * Set the tableCategory property: The table category.
     *
     * @param tableCategory the tableCategory value to set.
     * @return the SalesforceTable object itself.
     */
    public SalesforceTable withTableCategory(String tableCategory) {
        this.tableCategory = tableCategory;
        return this;
    }

    /**
     * Get the tableName property: The name of the table.
     *
     * @return the tableName value.
     */
    public String tableName() {
        return this.tableName;
    }

    /**
     * Set the tableName property: The name of the table.
     *
     * @param tableName the tableName value to set.
     * @return the SalesforceTable object itself.
     */
    public SalesforceTable withTableName(String tableName) {
        this.tableName = tableName;
        return this;
    }

    /**
     * Get the tableRemarks property: The table remarks.
     *
     * @return the tableRemarks value.
     */
    public String tableRemarks() {
        return this.tableRemarks;
    }

    /**
     * Set the tableRemarks property: The table remarks.
     *
     * @param tableRemarks the tableRemarks value to set.
     * @return the SalesforceTable object itself.
     */
    public SalesforceTable withTableRemarks(String tableRemarks) {
        this.tableRemarks = tableRemarks;
        return this;
    }

    /**
     * Get the tableSchema property: The table schema.
     *
     * @return the tableSchema value.
     */
    public String tableSchema() {
        return this.tableSchema;
    }

    /**
     * Set the tableSchema property: The table schema.
     *
     * @param tableSchema the tableSchema value to set.
     * @return the SalesforceTable object itself.
     */
    public SalesforceTable withTableSchema(String tableSchema) {
        this.tableSchema = tableSchema;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (tableCategory() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property tableCategory in model SalesforceTable"));
        }
        if (tableName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property tableName in model SalesforceTable"));
        }
        if (tableSchema() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property tableSchema in model SalesforceTable"));
        }
    }
}
