// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.customerinsights.fluent.models.RelationshipLinkResourceFormatInner;

/** An instance of this class provides access to all the operations defined in RelationshipLinksClient. */
public interface RelationshipLinksClient {
    /**
     * Creates a relationship link or updates an existing relationship link within a hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship link.
     * @param parameters Parameters supplied to the CreateOrUpdate relationship link operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the relationship link resource format.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<RelationshipLinkResourceFormatInner>, RelationshipLinkResourceFormatInner>
        beginCreateOrUpdate(
            String resourceGroupName,
            String hubName,
            String relationshipLinkName,
            RelationshipLinkResourceFormatInner parameters);

    /**
     * Creates a relationship link or updates an existing relationship link within a hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship link.
     * @param parameters Parameters supplied to the CreateOrUpdate relationship link operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the relationship link resource format.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<RelationshipLinkResourceFormatInner>, RelationshipLinkResourceFormatInner>
        beginCreateOrUpdate(
            String resourceGroupName,
            String hubName,
            String relationshipLinkName,
            RelationshipLinkResourceFormatInner parameters,
            Context context);

    /**
     * Creates a relationship link or updates an existing relationship link within a hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship link.
     * @param parameters Parameters supplied to the CreateOrUpdate relationship link operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the relationship link resource format.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RelationshipLinkResourceFormatInner createOrUpdate(
        String resourceGroupName,
        String hubName,
        String relationshipLinkName,
        RelationshipLinkResourceFormatInner parameters);

    /**
     * Creates a relationship link or updates an existing relationship link within a hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship link.
     * @param parameters Parameters supplied to the CreateOrUpdate relationship link operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the relationship link resource format.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RelationshipLinkResourceFormatInner createOrUpdate(
        String resourceGroupName,
        String hubName,
        String relationshipLinkName,
        RelationshipLinkResourceFormatInner parameters,
        Context context);

    /**
     * Gets information about the specified relationship Link.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship link.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified relationship Link.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RelationshipLinkResourceFormatInner get(String resourceGroupName, String hubName, String relationshipLinkName);

    /**
     * Gets information about the specified relationship Link.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship link.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified relationship Link.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RelationshipLinkResourceFormatInner> getWithResponse(
        String resourceGroupName, String hubName, String relationshipLinkName, Context context);

    /**
     * Deletes a relationship link within a hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String hubName, String relationshipLinkName);

    /**
     * Deletes a relationship link within a hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String hubName, String relationshipLinkName, Context context);

    /**
     * Deletes a relationship link within a hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String hubName, String relationshipLinkName);

    /**
     * Deletes a relationship link within a hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String hubName, String relationshipLinkName, Context context);

    /**
     * Gets all relationship links in the hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all relationship links in the hub.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RelationshipLinkResourceFormatInner> listByHub(String resourceGroupName, String hubName);

    /**
     * Gets all relationship links in the hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all relationship links in the hub.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RelationshipLinkResourceFormatInner> listByHub(
        String resourceGroupName, String hubName, Context context);
}
