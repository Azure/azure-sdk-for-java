// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The resource set description.
 */
@Fluent
public final class ResourceSetDescription implements JsonSerializable<ResourceSetDescription> {
    /*
     * The elements included in the set.
     */
    private List<String> elements;

    /*
     * The elements that are not included in the set, in case elements contains '*' indicating 'all'.
     */
    private List<String> exceptions;

    /**
     * Creates an instance of ResourceSetDescription class.
     */
    public ResourceSetDescription() {
    }

    /**
     * Get the elements property: The elements included in the set.
     * 
     * @return the elements value.
     */
    public List<String> elements() {
        return this.elements;
    }

    /**
     * Set the elements property: The elements included in the set.
     * 
     * @param elements the elements value to set.
     * @return the ResourceSetDescription object itself.
     */
    public ResourceSetDescription withElements(List<String> elements) {
        this.elements = elements;
        return this;
    }

    /**
     * Get the exceptions property: The elements that are not included in the set, in case elements contains '*'
     * indicating 'all'.
     * 
     * @return the exceptions value.
     */
    public List<String> exceptions() {
        return this.exceptions;
    }

    /**
     * Set the exceptions property: The elements that are not included in the set, in case elements contains '*'
     * indicating 'all'.
     * 
     * @param exceptions the exceptions value to set.
     * @return the ResourceSetDescription object itself.
     */
    public ResourceSetDescription withExceptions(List<String> exceptions) {
        this.exceptions = exceptions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("elements", this.elements, (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("exceptions", this.exceptions, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceSetDescription from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceSetDescription if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceSetDescription.
     */
    public static ResourceSetDescription fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceSetDescription deserializedResourceSetDescription = new ResourceSetDescription();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("elements".equals(fieldName)) {
                    List<String> elements = reader.readArray(reader1 -> reader1.getString());
                    deserializedResourceSetDescription.elements = elements;
                } else if ("exceptions".equals(fieldName)) {
                    List<String> exceptions = reader.readArray(reader1 -> reader1.getString());
                    deserializedResourceSetDescription.exceptions = exceptions;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceSetDescription;
        });
    }
}
