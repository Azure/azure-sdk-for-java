// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.customerinsights.fluent.models.RelationshipResourceFormatInner;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of RelationshipResourceFormat. */
public interface RelationshipResourceFormat {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the cardinality property: The Relationship Cardinality.
     *
     * @return the cardinality value.
     */
    CardinalityTypes cardinality();

    /**
     * Gets the displayName property: Localized display name for the Relationship.
     *
     * @return the displayName value.
     */
    Map<String, String> displayName();

    /**
     * Gets the description property: Localized descriptions for the Relationship.
     *
     * @return the description value.
     */
    Map<String, String> description();

    /**
     * Gets the expiryDateTimeUtc property: The expiry date time in UTC.
     *
     * @return the expiryDateTimeUtc value.
     */
    OffsetDateTime expiryDateTimeUtc();

    /**
     * Gets the fields property: The properties of the Relationship.
     *
     * @return the fields value.
     */
    List<PropertyDefinition> fields();

    /**
     * Gets the lookupMappings property: Optional property to be used to map fields in profile to their strong ids in
     * related profile.
     *
     * @return the lookupMappings value.
     */
    List<RelationshipTypeMapping> lookupMappings();

    /**
     * Gets the profileType property: Profile type.
     *
     * @return the profileType value.
     */
    String profileType();

    /**
     * Gets the provisioningState property: Provisioning state.
     *
     * @return the provisioningState value.
     */
    ProvisioningStates provisioningState();

    /**
     * Gets the relationshipName property: The Relationship name.
     *
     * @return the relationshipName value.
     */
    String relationshipName();

    /**
     * Gets the relatedProfileType property: Related profile being referenced.
     *
     * @return the relatedProfileType value.
     */
    String relatedProfileType();

    /**
     * Gets the relationshipGuidId property: The relationship guid id.
     *
     * @return the relationshipGuidId value.
     */
    String relationshipGuidId();

    /**
     * Gets the tenantId property: The hub name.
     *
     * @return the tenantId value.
     */
    String tenantId();

    /**
     * Gets the inner com.azure.resourcemanager.customerinsights.fluent.models.RelationshipResourceFormatInner object.
     *
     * @return the inner object.
     */
    RelationshipResourceFormatInner innerModel();

    /** The entirety of the RelationshipResourceFormat definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The RelationshipResourceFormat definition stages. */
    interface DefinitionStages {
        /** The first stage of the RelationshipResourceFormat definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the RelationshipResourceFormat definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, hubName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param hubName The name of the hub.
             * @return the next definition stage.
             */
            WithCreate withExistingHub(String resourceGroupName, String hubName);
        }
        /**
         * The stage of the RelationshipResourceFormat definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithCardinality,
                DefinitionStages.WithDisplayName,
                DefinitionStages.WithDescription,
                DefinitionStages.WithExpiryDateTimeUtc,
                DefinitionStages.WithFields,
                DefinitionStages.WithLookupMappings,
                DefinitionStages.WithProfileType,
                DefinitionStages.WithRelatedProfileType {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            RelationshipResourceFormat create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            RelationshipResourceFormat create(Context context);
        }
        /** The stage of the RelationshipResourceFormat definition allowing to specify cardinality. */
        interface WithCardinality {
            /**
             * Specifies the cardinality property: The Relationship Cardinality..
             *
             * @param cardinality The Relationship Cardinality.
             * @return the next definition stage.
             */
            WithCreate withCardinality(CardinalityTypes cardinality);
        }
        /** The stage of the RelationshipResourceFormat definition allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: Localized display name for the Relationship..
             *
             * @param displayName Localized display name for the Relationship.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(Map<String, String> displayName);
        }
        /** The stage of the RelationshipResourceFormat definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: Localized descriptions for the Relationship..
             *
             * @param description Localized descriptions for the Relationship.
             * @return the next definition stage.
             */
            WithCreate withDescription(Map<String, String> description);
        }
        /** The stage of the RelationshipResourceFormat definition allowing to specify expiryDateTimeUtc. */
        interface WithExpiryDateTimeUtc {
            /**
             * Specifies the expiryDateTimeUtc property: The expiry date time in UTC..
             *
             * @param expiryDateTimeUtc The expiry date time in UTC.
             * @return the next definition stage.
             */
            WithCreate withExpiryDateTimeUtc(OffsetDateTime expiryDateTimeUtc);
        }
        /** The stage of the RelationshipResourceFormat definition allowing to specify fields. */
        interface WithFields {
            /**
             * Specifies the fields property: The properties of the Relationship..
             *
             * @param fields The properties of the Relationship.
             * @return the next definition stage.
             */
            WithCreate withFields(List<PropertyDefinition> fields);
        }
        /** The stage of the RelationshipResourceFormat definition allowing to specify lookupMappings. */
        interface WithLookupMappings {
            /**
             * Specifies the lookupMappings property: Optional property to be used to map fields in profile to their
             * strong ids in related profile..
             *
             * @param lookupMappings Optional property to be used to map fields in profile to their strong ids in
             *     related profile.
             * @return the next definition stage.
             */
            WithCreate withLookupMappings(List<RelationshipTypeMapping> lookupMappings);
        }
        /** The stage of the RelationshipResourceFormat definition allowing to specify profileType. */
        interface WithProfileType {
            /**
             * Specifies the profileType property: Profile type..
             *
             * @param profileType Profile type.
             * @return the next definition stage.
             */
            WithCreate withProfileType(String profileType);
        }
        /** The stage of the RelationshipResourceFormat definition allowing to specify relatedProfileType. */
        interface WithRelatedProfileType {
            /**
             * Specifies the relatedProfileType property: Related profile being referenced..
             *
             * @param relatedProfileType Related profile being referenced.
             * @return the next definition stage.
             */
            WithCreate withRelatedProfileType(String relatedProfileType);
        }
    }
    /**
     * Begins update for the RelationshipResourceFormat resource.
     *
     * @return the stage of resource update.
     */
    RelationshipResourceFormat.Update update();

    /** The template for RelationshipResourceFormat update. */
    interface Update
        extends UpdateStages.WithCardinality,
            UpdateStages.WithDisplayName,
            UpdateStages.WithDescription,
            UpdateStages.WithExpiryDateTimeUtc,
            UpdateStages.WithFields,
            UpdateStages.WithLookupMappings,
            UpdateStages.WithProfileType,
            UpdateStages.WithRelatedProfileType {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        RelationshipResourceFormat apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        RelationshipResourceFormat apply(Context context);
    }
    /** The RelationshipResourceFormat update stages. */
    interface UpdateStages {
        /** The stage of the RelationshipResourceFormat update allowing to specify cardinality. */
        interface WithCardinality {
            /**
             * Specifies the cardinality property: The Relationship Cardinality..
             *
             * @param cardinality The Relationship Cardinality.
             * @return the next definition stage.
             */
            Update withCardinality(CardinalityTypes cardinality);
        }
        /** The stage of the RelationshipResourceFormat update allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: Localized display name for the Relationship..
             *
             * @param displayName Localized display name for the Relationship.
             * @return the next definition stage.
             */
            Update withDisplayName(Map<String, String> displayName);
        }
        /** The stage of the RelationshipResourceFormat update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: Localized descriptions for the Relationship..
             *
             * @param description Localized descriptions for the Relationship.
             * @return the next definition stage.
             */
            Update withDescription(Map<String, String> description);
        }
        /** The stage of the RelationshipResourceFormat update allowing to specify expiryDateTimeUtc. */
        interface WithExpiryDateTimeUtc {
            /**
             * Specifies the expiryDateTimeUtc property: The expiry date time in UTC..
             *
             * @param expiryDateTimeUtc The expiry date time in UTC.
             * @return the next definition stage.
             */
            Update withExpiryDateTimeUtc(OffsetDateTime expiryDateTimeUtc);
        }
        /** The stage of the RelationshipResourceFormat update allowing to specify fields. */
        interface WithFields {
            /**
             * Specifies the fields property: The properties of the Relationship..
             *
             * @param fields The properties of the Relationship.
             * @return the next definition stage.
             */
            Update withFields(List<PropertyDefinition> fields);
        }
        /** The stage of the RelationshipResourceFormat update allowing to specify lookupMappings. */
        interface WithLookupMappings {
            /**
             * Specifies the lookupMappings property: Optional property to be used to map fields in profile to their
             * strong ids in related profile..
             *
             * @param lookupMappings Optional property to be used to map fields in profile to their strong ids in
             *     related profile.
             * @return the next definition stage.
             */
            Update withLookupMappings(List<RelationshipTypeMapping> lookupMappings);
        }
        /** The stage of the RelationshipResourceFormat update allowing to specify profileType. */
        interface WithProfileType {
            /**
             * Specifies the profileType property: Profile type..
             *
             * @param profileType Profile type.
             * @return the next definition stage.
             */
            Update withProfileType(String profileType);
        }
        /** The stage of the RelationshipResourceFormat update allowing to specify relatedProfileType. */
        interface WithRelatedProfileType {
            /**
             * Specifies the relatedProfileType property: Related profile being referenced..
             *
             * @param relatedProfileType Related profile being referenced.
             * @return the next definition stage.
             */
            Update withRelatedProfileType(String relatedProfileType);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    RelationshipResourceFormat refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    RelationshipResourceFormat refresh(Context context);
}
