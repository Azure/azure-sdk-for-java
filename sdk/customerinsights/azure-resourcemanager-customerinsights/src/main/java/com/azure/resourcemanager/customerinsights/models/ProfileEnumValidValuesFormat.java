// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Valid enum values in case of an enum property. */
@Fluent
public final class ProfileEnumValidValuesFormat {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ProfileEnumValidValuesFormat.class);

    /*
     * The integer value of the enum member.
     */
    @JsonProperty(value = "value")
    private Integer value;

    /*
     * Localized names of the enum member.
     */
    @JsonProperty(value = "localizedValueNames")
    private Map<String, String> localizedValueNames;

    /**
     * Get the value property: The integer value of the enum member.
     *
     * @return the value value.
     */
    public Integer value() {
        return this.value;
    }

    /**
     * Set the value property: The integer value of the enum member.
     *
     * @param value the value value to set.
     * @return the ProfileEnumValidValuesFormat object itself.
     */
    public ProfileEnumValidValuesFormat withValue(Integer value) {
        this.value = value;
        return this;
    }

    /**
     * Get the localizedValueNames property: Localized names of the enum member.
     *
     * @return the localizedValueNames value.
     */
    public Map<String, String> localizedValueNames() {
        return this.localizedValueNames;
    }

    /**
     * Set the localizedValueNames property: Localized names of the enum member.
     *
     * @param localizedValueNames the localizedValueNames value to set.
     * @return the ProfileEnumValidValuesFormat object itself.
     */
    public ProfileEnumValidValuesFormat withLocalizedValueNames(Map<String, String> localizedValueNames) {
        this.localizedValueNames = localizedValueNames;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
