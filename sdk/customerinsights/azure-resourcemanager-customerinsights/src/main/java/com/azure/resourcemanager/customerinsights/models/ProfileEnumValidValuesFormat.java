// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Valid enum values in case of an enum property.
 */
@Fluent
public final class ProfileEnumValidValuesFormat implements JsonSerializable<ProfileEnumValidValuesFormat> {
    /*
     * The integer value of the enum member.
     */
    private Integer value;

    /*
     * Localized names of the enum member.
     */
    private Map<String, String> localizedValueNames;

    /**
     * Creates an instance of ProfileEnumValidValuesFormat class.
     */
    public ProfileEnumValidValuesFormat() {
    }

    /**
     * Get the value property: The integer value of the enum member.
     * 
     * @return the value value.
     */
    public Integer value() {
        return this.value;
    }

    /**
     * Set the value property: The integer value of the enum member.
     * 
     * @param value the value value to set.
     * @return the ProfileEnumValidValuesFormat object itself.
     */
    public ProfileEnumValidValuesFormat withValue(Integer value) {
        this.value = value;
        return this;
    }

    /**
     * Get the localizedValueNames property: Localized names of the enum member.
     * 
     * @return the localizedValueNames value.
     */
    public Map<String, String> localizedValueNames() {
        return this.localizedValueNames;
    }

    /**
     * Set the localizedValueNames property: Localized names of the enum member.
     * 
     * @param localizedValueNames the localizedValueNames value to set.
     * @return the ProfileEnumValidValuesFormat object itself.
     */
    public ProfileEnumValidValuesFormat withLocalizedValueNames(Map<String, String> localizedValueNames) {
        this.localizedValueNames = localizedValueNames;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("value", this.value);
        jsonWriter.writeMapField("localizedValueNames", this.localizedValueNames,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ProfileEnumValidValuesFormat from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ProfileEnumValidValuesFormat if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ProfileEnumValidValuesFormat.
     */
    public static ProfileEnumValidValuesFormat fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ProfileEnumValidValuesFormat deserializedProfileEnumValidValuesFormat = new ProfileEnumValidValuesFormat();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("value".equals(fieldName)) {
                    deserializedProfileEnumValidValuesFormat.value = reader.getNullable(JsonReader::getInt);
                } else if ("localizedValueNames".equals(fieldName)) {
                    Map<String, String> localizedValueNames = reader.readMap(reader1 -> reader1.getString());
                    deserializedProfileEnumValidValuesFormat.localizedValueNames = localizedValueNames;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedProfileEnumValidValuesFormat;
        });
    }
}
