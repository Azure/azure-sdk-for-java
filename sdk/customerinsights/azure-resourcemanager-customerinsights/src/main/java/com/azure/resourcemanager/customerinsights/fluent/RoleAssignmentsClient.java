// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.customerinsights.fluent.models.RoleAssignmentResourceFormatInner;

/** An instance of this class provides access to all the operations defined in RoleAssignmentsClient. */
public interface RoleAssignmentsClient {
    /**
     * Gets all the role assignments for the specified hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the role assignments for the specified hub.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RoleAssignmentResourceFormatInner> listByHub(String resourceGroupName, String hubName);

    /**
     * Gets all the role assignments for the specified hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the role assignments for the specified hub.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RoleAssignmentResourceFormatInner> listByHub(
        String resourceGroupName, String hubName, Context context);

    /**
     * Creates or updates a role assignment in the hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param assignmentName The assignment name.
     * @param parameters Parameters supplied to the CreateOrUpdate RoleAssignment operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Role Assignment resource format.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<RoleAssignmentResourceFormatInner>, RoleAssignmentResourceFormatInner> beginCreateOrUpdate(
        String resourceGroupName, String hubName, String assignmentName, RoleAssignmentResourceFormatInner parameters);

    /**
     * Creates or updates a role assignment in the hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param assignmentName The assignment name.
     * @param parameters Parameters supplied to the CreateOrUpdate RoleAssignment operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Role Assignment resource format.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<RoleAssignmentResourceFormatInner>, RoleAssignmentResourceFormatInner> beginCreateOrUpdate(
        String resourceGroupName,
        String hubName,
        String assignmentName,
        RoleAssignmentResourceFormatInner parameters,
        Context context);

    /**
     * Creates or updates a role assignment in the hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param assignmentName The assignment name.
     * @param parameters Parameters supplied to the CreateOrUpdate RoleAssignment operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Role Assignment resource format.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RoleAssignmentResourceFormatInner createOrUpdate(
        String resourceGroupName, String hubName, String assignmentName, RoleAssignmentResourceFormatInner parameters);

    /**
     * Creates or updates a role assignment in the hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param assignmentName The assignment name.
     * @param parameters Parameters supplied to the CreateOrUpdate RoleAssignment operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Role Assignment resource format.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RoleAssignmentResourceFormatInner createOrUpdate(
        String resourceGroupName,
        String hubName,
        String assignmentName,
        RoleAssignmentResourceFormatInner parameters,
        Context context);

    /**
     * Gets the role assignment in the hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param assignmentName The name of the role assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the role assignment in the hub.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RoleAssignmentResourceFormatInner get(String resourceGroupName, String hubName, String assignmentName);

    /**
     * Gets the role assignment in the hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param assignmentName The name of the role assignment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the role assignment in the hub.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RoleAssignmentResourceFormatInner> getWithResponse(
        String resourceGroupName, String hubName, String assignmentName, Context context);

    /**
     * Deletes the role assignment in the hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param assignmentName The name of the role assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String hubName, String assignmentName);

    /**
     * Deletes the role assignment in the hub.
     *
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param assignmentName The name of the role assignment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String hubName, String assignmentName, Context context);
}
