// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * The KPI GroupBy field metadata.
 */
@Fluent
public final class KpiGroupByMetadata implements JsonSerializable<KpiGroupByMetadata> {
    /*
     * The display name.
     */
    private Map<String, String> displayName;

    /*
     * The name of the field.
     */
    private String fieldName;

    /*
     * The type of the field.
     */
    private String fieldType;

    /**
     * Creates an instance of KpiGroupByMetadata class.
     */
    public KpiGroupByMetadata() {
    }

    /**
     * Get the displayName property: The display name.
     * 
     * @return the displayName value.
     */
    public Map<String, String> displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The display name.
     * 
     * @param displayName the displayName value to set.
     * @return the KpiGroupByMetadata object itself.
     */
    public KpiGroupByMetadata withDisplayName(Map<String, String> displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the fieldName property: The name of the field.
     * 
     * @return the fieldName value.
     */
    public String fieldName() {
        return this.fieldName;
    }

    /**
     * Set the fieldName property: The name of the field.
     * 
     * @param fieldName the fieldName value to set.
     * @return the KpiGroupByMetadata object itself.
     */
    public KpiGroupByMetadata withFieldName(String fieldName) {
        this.fieldName = fieldName;
        return this;
    }

    /**
     * Get the fieldType property: The type of the field.
     * 
     * @return the fieldType value.
     */
    public String fieldType() {
        return this.fieldType;
    }

    /**
     * Set the fieldType property: The type of the field.
     * 
     * @param fieldType the fieldType value to set.
     * @return the KpiGroupByMetadata object itself.
     */
    public KpiGroupByMetadata withFieldType(String fieldType) {
        this.fieldType = fieldType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("displayName", this.displayName, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("fieldName", this.fieldName);
        jsonWriter.writeStringField("fieldType", this.fieldType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KpiGroupByMetadata from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KpiGroupByMetadata if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the KpiGroupByMetadata.
     */
    public static KpiGroupByMetadata fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            KpiGroupByMetadata deserializedKpiGroupByMetadata = new KpiGroupByMetadata();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String jsonFieldName = reader.getFieldName();
                reader.nextToken();

                if ("displayName".equals(jsonFieldName)) {
                    Map<String, String> displayName = reader.readMap(reader1 -> reader1.getString());
                    deserializedKpiGroupByMetadata.displayName = displayName;
                } else if ("fieldName".equals(jsonFieldName)) {
                    deserializedKpiGroupByMetadata.fieldName = reader.getString();
                } else if ("fieldType".equals(jsonFieldName)) {
                    deserializedKpiGroupByMetadata.fieldType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedKpiGroupByMetadata;
        });
    }
}
