// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.customerinsights.models.HubBillingInfoFormat;
import java.io.IOException;

/**
 * Properties of hub.
 */
@Fluent
public final class HubPropertiesFormat implements JsonSerializable<HubPropertiesFormat> {
    /*
     * API endpoint URL of the hub.
     */
    private String apiEndpoint;

    /*
     * Web endpoint URL of the hub.
     */
    private String webEndpoint;

    /*
     * Provisioning state of the hub.
     */
    private String provisioningState;

    /*
     * The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0.
     * Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
     */
    private Integer tenantFeatures;

    /*
     * Billing settings of the hub.
     */
    private HubBillingInfoFormat hubBillingInfo;

    /**
     * Creates an instance of HubPropertiesFormat class.
     */
    public HubPropertiesFormat() {
    }

    /**
     * Get the apiEndpoint property: API endpoint URL of the hub.
     * 
     * @return the apiEndpoint value.
     */
    public String apiEndpoint() {
        return this.apiEndpoint;
    }

    /**
     * Get the webEndpoint property: Web endpoint URL of the hub.
     * 
     * @return the webEndpoint value.
     */
    public String webEndpoint() {
        return this.webEndpoint;
    }

    /**
     * Get the provisioningState property: Provisioning state of the hub.
     * 
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the tenantFeatures property: The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is
     * enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
     * 
     * @return the tenantFeatures value.
     */
    public Integer tenantFeatures() {
        return this.tenantFeatures;
    }

    /**
     * Set the tenantFeatures property: The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is
     * enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
     * 
     * @param tenantFeatures the tenantFeatures value to set.
     * @return the HubPropertiesFormat object itself.
     */
    public HubPropertiesFormat withTenantFeatures(Integer tenantFeatures) {
        this.tenantFeatures = tenantFeatures;
        return this;
    }

    /**
     * Get the hubBillingInfo property: Billing settings of the hub.
     * 
     * @return the hubBillingInfo value.
     */
    public HubBillingInfoFormat hubBillingInfo() {
        return this.hubBillingInfo;
    }

    /**
     * Set the hubBillingInfo property: Billing settings of the hub.
     * 
     * @param hubBillingInfo the hubBillingInfo value to set.
     * @return the HubPropertiesFormat object itself.
     */
    public HubPropertiesFormat withHubBillingInfo(HubBillingInfoFormat hubBillingInfo) {
        this.hubBillingInfo = hubBillingInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (hubBillingInfo() != null) {
            hubBillingInfo().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("tenantFeatures", this.tenantFeatures);
        jsonWriter.writeJsonField("hubBillingInfo", this.hubBillingInfo);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HubPropertiesFormat from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HubPropertiesFormat if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the HubPropertiesFormat.
     */
    public static HubPropertiesFormat fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HubPropertiesFormat deserializedHubPropertiesFormat = new HubPropertiesFormat();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("apiEndpoint".equals(fieldName)) {
                    deserializedHubPropertiesFormat.apiEndpoint = reader.getString();
                } else if ("webEndpoint".equals(fieldName)) {
                    deserializedHubPropertiesFormat.webEndpoint = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedHubPropertiesFormat.provisioningState = reader.getString();
                } else if ("tenantFeatures".equals(fieldName)) {
                    deserializedHubPropertiesFormat.tenantFeatures = reader.getNullable(JsonReader::getInt);
                } else if ("hubBillingInfo".equals(fieldName)) {
                    deserializedHubPropertiesFormat.hubBillingInfo = HubBillingInfoFormat.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHubPropertiesFormat;
        });
    }
}
