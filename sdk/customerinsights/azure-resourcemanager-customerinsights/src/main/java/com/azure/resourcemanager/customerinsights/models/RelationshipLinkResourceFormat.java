// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customerinsights.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.customerinsights.fluent.models.RelationshipLinkResourceFormatInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of RelationshipLinkResourceFormat. */
public interface RelationshipLinkResourceFormat {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the displayName property: Localized display name for the Relationship Link.
     *
     * @return the displayName value.
     */
    Map<String, String> displayName();

    /**
     * Gets the description property: Localized descriptions for the Relationship Link.
     *
     * @return the description value.
     */
    Map<String, String> description();

    /**
     * Gets the interactionType property: The InteractionType associated with the Relationship Link.
     *
     * @return the interactionType value.
     */
    String interactionType();

    /**
     * Gets the linkName property: The name of the Relationship Link.
     *
     * @return the linkName value.
     */
    String linkName();

    /**
     * Gets the mappings property: The mappings between Interaction and Relationship fields.
     *
     * @return the mappings value.
     */
    List<RelationshipLinkFieldMapping> mappings();

    /**
     * Gets the profilePropertyReferences property: The property references for the Profile of the Relationship.
     *
     * @return the profilePropertyReferences value.
     */
    List<ParticipantProfilePropertyReference> profilePropertyReferences();

    /**
     * Gets the provisioningState property: Provisioning state.
     *
     * @return the provisioningState value.
     */
    ProvisioningStates provisioningState();

    /**
     * Gets the relatedProfilePropertyReferences property: The property references for the Related Profile of the
     * Relationship.
     *
     * @return the relatedProfilePropertyReferences value.
     */
    List<ParticipantProfilePropertyReference> relatedProfilePropertyReferences();

    /**
     * Gets the relationshipName property: The Relationship associated with the Link.
     *
     * @return the relationshipName value.
     */
    String relationshipName();

    /**
     * Gets the relationshipGuidId property: The relationship guid id.
     *
     * @return the relationshipGuidId value.
     */
    String relationshipGuidId();

    /**
     * Gets the tenantId property: The hub name.
     *
     * @return the tenantId value.
     */
    String tenantId();

    /**
     * Gets the inner com.azure.resourcemanager.customerinsights.fluent.models.RelationshipLinkResourceFormatInner
     * object.
     *
     * @return the inner object.
     */
    RelationshipLinkResourceFormatInner innerModel();

    /** The entirety of the RelationshipLinkResourceFormat definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The RelationshipLinkResourceFormat definition stages. */
    interface DefinitionStages {
        /** The first stage of the RelationshipLinkResourceFormat definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the RelationshipLinkResourceFormat definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, hubName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param hubName The name of the hub.
             * @return the next definition stage.
             */
            WithCreate withExistingHub(String resourceGroupName, String hubName);
        }
        /**
         * The stage of the RelationshipLinkResourceFormat definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithDisplayName,
                DefinitionStages.WithDescription,
                DefinitionStages.WithInteractionType,
                DefinitionStages.WithMappings,
                DefinitionStages.WithProfilePropertyReferences,
                DefinitionStages.WithRelatedProfilePropertyReferences,
                DefinitionStages.WithRelationshipName {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            RelationshipLinkResourceFormat create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            RelationshipLinkResourceFormat create(Context context);
        }
        /** The stage of the RelationshipLinkResourceFormat definition allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: Localized display name for the Relationship Link..
             *
             * @param displayName Localized display name for the Relationship Link.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(Map<String, String> displayName);
        }
        /** The stage of the RelationshipLinkResourceFormat definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: Localized descriptions for the Relationship Link..
             *
             * @param description Localized descriptions for the Relationship Link.
             * @return the next definition stage.
             */
            WithCreate withDescription(Map<String, String> description);
        }
        /** The stage of the RelationshipLinkResourceFormat definition allowing to specify interactionType. */
        interface WithInteractionType {
            /**
             * Specifies the interactionType property: The InteractionType associated with the Relationship Link..
             *
             * @param interactionType The InteractionType associated with the Relationship Link.
             * @return the next definition stage.
             */
            WithCreate withInteractionType(String interactionType);
        }
        /** The stage of the RelationshipLinkResourceFormat definition allowing to specify mappings. */
        interface WithMappings {
            /**
             * Specifies the mappings property: The mappings between Interaction and Relationship fields..
             *
             * @param mappings The mappings between Interaction and Relationship fields.
             * @return the next definition stage.
             */
            WithCreate withMappings(List<RelationshipLinkFieldMapping> mappings);
        }
        /** The stage of the RelationshipLinkResourceFormat definition allowing to specify profilePropertyReferences. */
        interface WithProfilePropertyReferences {
            /**
             * Specifies the profilePropertyReferences property: The property references for the Profile of the
             * Relationship..
             *
             * @param profilePropertyReferences The property references for the Profile of the Relationship.
             * @return the next definition stage.
             */
            WithCreate withProfilePropertyReferences(
                List<ParticipantProfilePropertyReference> profilePropertyReferences);
        }
        /**
         * The stage of the RelationshipLinkResourceFormat definition allowing to specify
         * relatedProfilePropertyReferences.
         */
        interface WithRelatedProfilePropertyReferences {
            /**
             * Specifies the relatedProfilePropertyReferences property: The property references for the Related Profile
             * of the Relationship..
             *
             * @param relatedProfilePropertyReferences The property references for the Related Profile of the
             *     Relationship.
             * @return the next definition stage.
             */
            WithCreate withRelatedProfilePropertyReferences(
                List<ParticipantProfilePropertyReference> relatedProfilePropertyReferences);
        }
        /** The stage of the RelationshipLinkResourceFormat definition allowing to specify relationshipName. */
        interface WithRelationshipName {
            /**
             * Specifies the relationshipName property: The Relationship associated with the Link..
             *
             * @param relationshipName The Relationship associated with the Link.
             * @return the next definition stage.
             */
            WithCreate withRelationshipName(String relationshipName);
        }
    }
    /**
     * Begins update for the RelationshipLinkResourceFormat resource.
     *
     * @return the stage of resource update.
     */
    RelationshipLinkResourceFormat.Update update();

    /** The template for RelationshipLinkResourceFormat update. */
    interface Update
        extends UpdateStages.WithDisplayName,
            UpdateStages.WithDescription,
            UpdateStages.WithInteractionType,
            UpdateStages.WithMappings,
            UpdateStages.WithProfilePropertyReferences,
            UpdateStages.WithRelatedProfilePropertyReferences,
            UpdateStages.WithRelationshipName {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        RelationshipLinkResourceFormat apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        RelationshipLinkResourceFormat apply(Context context);
    }
    /** The RelationshipLinkResourceFormat update stages. */
    interface UpdateStages {
        /** The stage of the RelationshipLinkResourceFormat update allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: Localized display name for the Relationship Link..
             *
             * @param displayName Localized display name for the Relationship Link.
             * @return the next definition stage.
             */
            Update withDisplayName(Map<String, String> displayName);
        }
        /** The stage of the RelationshipLinkResourceFormat update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: Localized descriptions for the Relationship Link..
             *
             * @param description Localized descriptions for the Relationship Link.
             * @return the next definition stage.
             */
            Update withDescription(Map<String, String> description);
        }
        /** The stage of the RelationshipLinkResourceFormat update allowing to specify interactionType. */
        interface WithInteractionType {
            /**
             * Specifies the interactionType property: The InteractionType associated with the Relationship Link..
             *
             * @param interactionType The InteractionType associated with the Relationship Link.
             * @return the next definition stage.
             */
            Update withInteractionType(String interactionType);
        }
        /** The stage of the RelationshipLinkResourceFormat update allowing to specify mappings. */
        interface WithMappings {
            /**
             * Specifies the mappings property: The mappings between Interaction and Relationship fields..
             *
             * @param mappings The mappings between Interaction and Relationship fields.
             * @return the next definition stage.
             */
            Update withMappings(List<RelationshipLinkFieldMapping> mappings);
        }
        /** The stage of the RelationshipLinkResourceFormat update allowing to specify profilePropertyReferences. */
        interface WithProfilePropertyReferences {
            /**
             * Specifies the profilePropertyReferences property: The property references for the Profile of the
             * Relationship..
             *
             * @param profilePropertyReferences The property references for the Profile of the Relationship.
             * @return the next definition stage.
             */
            Update withProfilePropertyReferences(List<ParticipantProfilePropertyReference> profilePropertyReferences);
        }
        /**
         * The stage of the RelationshipLinkResourceFormat update allowing to specify relatedProfilePropertyReferences.
         */
        interface WithRelatedProfilePropertyReferences {
            /**
             * Specifies the relatedProfilePropertyReferences property: The property references for the Related Profile
             * of the Relationship..
             *
             * @param relatedProfilePropertyReferences The property references for the Related Profile of the
             *     Relationship.
             * @return the next definition stage.
             */
            Update withRelatedProfilePropertyReferences(
                List<ParticipantProfilePropertyReference> relatedProfilePropertyReferences);
        }
        /** The stage of the RelationshipLinkResourceFormat update allowing to specify relationshipName. */
        interface WithRelationshipName {
            /**
             * Specifies the relationshipName property: The Relationship associated with the Link..
             *
             * @param relationshipName The Relationship associated with the Link.
             * @return the next definition stage.
             */
            Update withRelationshipName(String relationshipName);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    RelationshipLinkResourceFormat refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    RelationshipLinkResourceFormat refresh(Context context);
}
