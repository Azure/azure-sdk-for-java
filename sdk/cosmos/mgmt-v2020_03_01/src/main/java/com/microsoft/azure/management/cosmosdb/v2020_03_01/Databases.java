/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.cosmosdb.v2020_03_01;

import rx.Observable;
import com.microsoft.azure.management.cosmosdb.v2020_03_01.DatabasisDatabaseAccountMetricDefinition;
import com.microsoft.azure.management.cosmosdb.v2020_03_01.DatabasisDatabaseAccountMetric;
import com.microsoft.azure.management.cosmosdb.v2020_03_01.DatabasisDatabaseAccountUsage;

/**
 * Type representing Databases.
 */
public interface Databases {
    /**
     * Retrieves metric definitions for the given database.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Cosmos DB database account name.
     * @param databaseRid Cosmos DB database rid.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DatabasisDatabaseAccountMetricDefinition> listMetricDefinitionsAsync(String resourceGroupName, String accountName, String databaseRid);

    /**
     * Retrieves the metrics determined by the given filter for the given database account and database.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Cosmos DB database account name.
     * @param databaseRid Cosmos DB database rid.
     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DatabasisDatabaseAccountMetric> listMetricsAsync(String resourceGroupName, String accountName, String databaseRid, String filter);

    /**
     * Retrieves the usages (most recent data) for the given database.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Cosmos DB database account name.
     * @param databaseRid Cosmos DB database rid.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DatabasisDatabaseAccountUsage> listUsagesAsync(String resourceGroupName, String accountName, String databaseRid);

}
