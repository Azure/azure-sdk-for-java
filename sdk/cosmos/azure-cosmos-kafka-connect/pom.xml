<!--
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.azure</groupId>
    <artifactId>azure-client-sdk-parent</artifactId>
    <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->
    <relativePath>../../parents/azure-client-sdk-parent</relativePath>
  </parent>

  <groupId>com.azure.cosmos.kafka</groupId>
  <artifactId>azure-cosmos-kafka-connect</artifactId>
  <version>1.0.0-beta.3</version> <!-- {x-version-update;com.azure.cosmos.kafka:azure-cosmos-kafka-connect;current} -->
  <name>Apache Kafka Connect connector for Azure Cosmos DB</name>
  <description>This Package contains an Apache Kafka Connect source and sink connector for Azure Cosmos DB</description>
  <packaging>jar</packaging>
  <url>https://github.com/Azure/azure-sdk-for-java</url>

  <distributionManagement>
    <site>
      <id>azure-java-build-docs</id>
      <url>${site.url}/site/${project.artifactId}</url>
    </site>
  </distributionManagement>

  <repositories>
    <repository>
      <id>confluent</id>
      <name>Confluent</name>
      <url>https://packages.confluent.io/maven/</url>
    </repository>
  </repositories>

  <scm>
    <url>scm:git:https://github.com/Azure/azure-sdk-for-java</url>
    <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>
    <tag>HEAD</tag>
  </scm>

  <!-- CosmosSkip - Needed temporary values to 10% not fail. -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jacoco.skip>true</jacoco.skip>
    <shadingPrefix>azure_cosmos_kafka_connect</shadingPrefix>

    <!-- CosmosSkip - This is not a module we want/expect external customers to consume. Skip breaking API checks. -->
    <!-- This can only be enabled once we release GA, as it needs a stable version to check for breaking changes. -->
    <revapi.skip>true</revapi.skip>
    <!-- Configures the Java 9+ run to perform the required module exports, opens, and reads that are necessary for testing but shouldn't be part of the module-info. -->
    <javaModulesSurefireArgLine>
      --add-opens com.azure.core/com.azure.core.implementation.util=ALL-UNNAMED
      --add-opens com.azure.cosmos/com.azure.cosmos.implementation=ALL-UNNAMED
      --add-opens com.azure.cosmos/com.azure.cosmos.implementation.apachecommons.lang=ALL-UNNAMED
      --add-opens com.azure.cosmos/com.azure.cosmos.implementation.caches=ALL-UNNAMED
      --add-opens com.azure.cosmos/com.azure.cosmos.implementation.faultinjection=ALL-UNNAMED
      --add-opens com.azure.cosmos/com.azure.cosmos.implementation.guava25.base=ALL-UNNAMED
      --add-opens com.azure.cosmos/com.azure.cosmos.implementation.routing=ALL-UNNAMED
      --add-opens com.azure.cosmos.kafka.connect/com.azure.cosmos.kafka.connect=ALL-UNNAMED
      --add-opens com.azure.cosmos.kafka.connect/com.azure.cosmos.kafka.connect.implementation=ALL-UNNAMED
      --add-opens com.azure.cosmos.kafka.connect/com.azure.cosmos.kafka.connect.implementation.sink=ALL-UNNAMED,com.fasterxml.jackson.databind
      --add-opens com.azure.cosmos.kafka.connect/com.azure.cosmos.kafka.connect.implementation.sink.idStrategy=ALL-UNNAMED
      --add-opens com.azure.cosmos.kafka.connect/com.azure.cosmos.kafka.connect.implementation.source=com.fasterxml.jackson.databind,ALL-UNNAMED

      --add-exports com.azure.cosmos/com.azure.cosmos.implementation.changefeed.common=com.azure.cosmos.kafka.connect
      --add-exports com.azure.cosmos/com.azure.cosmos.implementation.feedranges=com.azure.cosmos.kafka.connect
      --add-exports com.azure.cosmos/com.azure.cosmos.implementation.query=com.azure.cosmos.kafka.connect

    </javaModulesSurefireArgLine>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>connect-api</artifactId>
      <version>3.6.0</version> <!-- {x-version-update;cosmos_org.apache.kafka:connect-api;external_dependency} -->
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-cosmos</artifactId>
      <version>4.61.0</version> <!-- {x-version-update;com.azure:azure-cosmos;current} -->
    </dependency>

    <!-- Added this provided dependency to include necessary annotations used by "reactor-core".
         Without this dependency, javadoc throws a warning as it cannot find enum When.MAYBE
         which is used in @Nullable annotation in reactor core classes.

         Similar provided dependency exits for "azure-core" as well.
    -->
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.2</version> <!-- {x-version-update;com.google.code.findbugs:jsr305;external_dependency} -->
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-cosmos-test</artifactId>
      <version>1.0.0-beta.8</version> <!-- {x-version-update;com.azure:azure-cosmos-test;current} -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <scope>test</scope>
      <version>4.4</version> <!-- {x-version-update;org.apache.commons:commons-collections4;external_dependency} -->
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <scope>test</scope>
      <version>1.10.0</version> <!-- {x-version-update;org.apache.commons:commons-text;external_dependency} -->
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>2.9.0</version> <!-- {x-version-update;cosmos_com.jayway.jsonpath:json-path;external_dependency} -->
    </dependency>
    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-identity</artifactId>
      <version>1.12.1</version> <!-- {x-version-update;com.azure:azure-identity;dependency} -->
      <exclusions>
        <exclusion>
          <groupId>com.azure</groupId>
          <artifactId>azure-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>connect-runtime</artifactId>
      <version>3.6.0</version> <!-- {x-version-update;cosmos_org.apache.kafka:connect-runtime;external_dependency} -->
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>jackson-jaxrs-json-provider</artifactId>
          <groupId>com.fasterxml.jackson.jaxrs</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>7.5.1</version> <!-- {x-version-update;org.testng:testng;external_dependency} -->
      <scope>test</scope>
      <exclusions>
        <!-- Excluding these 2 dependencies as they have vulnerabilities and we don't use them -->
        <exclusion>
          <groupId>org.apache.ant</groupId>
          <artifactId>ant</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.yaml</groupId>
          <artifactId>snakeyaml</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.22.0</version> <!-- {x-version-update;org.assertj:assertj-core;external_dependency} -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>2.17.2</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-slf4j-impl;external_dependency} -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.17.2</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-api;external_dependency} -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.17.2</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-core;external_dependency} -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>4.11.0</version> <!-- {x-version-update;org.mockito:mockito-core;external_dependency} -->
      <scope>test</scope>
    </dependency>
    <!-- bytebuddy dependencies are required for mockito 4.11.0 to work with Java 21. Mockito 4.11.0 is the last release -->
    <!-- of Mockito supporting Java 8 as a baseline. -->
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
      <version>1.14.12</version> <!-- {x-version-update;testdep_net.bytebuddy:byte-buddy;external_dependency} -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy-agent</artifactId>
      <version>1.14.12</version> <!-- {x-version-update;testdep_net.bytebuddy:byte-buddy-agent;external_dependency} -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>1.19.5</version> <!-- {x-version-update;cosmos_org.testcontainers:testcontainers;external_dependency} -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <version>1.19.5</version> <!-- {x-version-update;cosmos_org.testcontainers:kafka;external_dependency} -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sourcelab</groupId>
      <artifactId>kafka-connect-client</artifactId>
      <version>4.0.4</version> <!-- {x-version-update;cosmos_org.sourcelab:kafka-connect-client;external_dependency} -->
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/io.confluent/kafka-avro-serializer -->
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-avro-serializer</artifactId>
      <version>7.6.0</version><!-- {x-version-update;cosmos_io.confluent:kafka-avro-serializer;external_dependency} -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>1.11.3</version><!-- {x-version-update;cosmos_org.apache.avro:avro;external_dependency} -->
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version> <!-- {x-version-update;org.apache.maven.plugins:maven-jar-plugin;external_dependency} -->
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version> <!-- {x-version-update;org.apache.maven.plugins:maven-surefire-plugin;external_dependency} -->
        <configuration>
          <groups>unit</groups>
          <includes>
            <include>%regex[.*]</include>
          </includes>
          <properties>
            <property>
              <name>surefire.testng.verbose</name>
              <value>2</value>
            </property>
          </properties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.4.1</version> <!-- {x-version-update;org.apache.maven.plugins:maven-enforcer-plugin;external_dependency} -->
        <configuration>
          <rules>
            <bannedDependencies>
              <includes>
                <include>com.azure:*</include>
                <include>org.apache.kafka:connect-api:[3.6.0]</include> <!-- {x-include-update;cosmos_org.apache.kafka:connect-api;external_dependency} -->
                <include>io.confluent:kafka-connect-maven-plugin:[0.12.0]</include> <!-- {x-include-update;cosmos_io.confluent:kafka-connect-maven-plugin;external_dependency} -->
                <include>com.jayway.jsonpath:json-path:[2.9.0]</include> <!-- {x-include-update;cosmos_com.jayway.jsonpath:json-path;external_dependency} -->
                <include>org.sourcelab:kafka-connect-client:[4.0.4]</include> <!-- {x-include-update;cosmos_org.sourcelab:kafka-connect-client;external_dependency} -->
              </includes>
            </bannedDependencies>
          </rules>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>build-kafka</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>3.5.2</version> <!-- {x-version-update;org.apache.maven.plugins:maven-shade-plugin;external_dependency} -->
            <executions>
              <execution>
                <id>shade</id>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <filters>
                    <filter>
                      <artifact>*:*:*:*</artifact>
                      <excludes>
                        <!-- suppress warning: Discovered module-info.class. Shading will break its strong encapsulation. -->
                        <!-- https://stackoverflow.com/questions/56063566/maven-how-to-remove-module-info-class-warning-for-shaded-jar -->
                        <exclude>module-info.class</exclude>
                        <!-- remove the dependencies signature as not relevant-->
                        <exclude>META-INF/*.MF</exclude>
                        <exclude>META-INF/*.SF</exclude>
                        <exclude>META-INF/*.DSA</exclude>
                        <exclude>META-INF/*.RSA</exclude>
                        <exclude>META-INF/license/LICENSE.aix-netbsd.txt</exclude>
                        <exclude>META-INF/license/LICENSE.boringssl.txt</exclude>
                        <exclude>META-INF/license/LICENSE.mvn-wrapper.txt</exclude>
                        <exclude>META-INF/license/LICENSE.tomcat-native.txt</exclude>
                        <exclude>META-INF.versions.9.module-info.class</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <artifact>io.micrometer:micrometer-core</artifact>
                      <includes>
                        <include>**</include>
                      </includes>
                    </filter>
                  </filters>
                  <relocations>
                    <relocation>
                      <pattern>com.azure</pattern>
                      <shadedPattern>${shadingPrefix}.com.azure</shadedPattern>
                      <excludes>
                        <exclude>com.azure.cosmos.kafka.**</exclude>
                      </excludes>
                    </relocation>
                    <relocation>
                      <pattern>io.netty</pattern>
                      <shadedPattern>${shadingPrefix}.io.netty</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.codehaus</pattern>
                      <shadedPattern>${shadingPrefix}.org.codehaus</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.fasterxml</pattern>
                      <shadedPattern>${shadingPrefix}.com.fasterxml</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.ctc.wstx</pattern>
                      <shadedPattern>${shadingPrefix}.com.ctc.wstx</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.codahale.metrics</pattern>
                      <shadedPattern>${shadingPrefix}.com.codahale.metrics</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.thoughtworks.paranamer</pattern>
                      <shadedPattern>${shadingPrefix}.com.thoughtworks.paranamer</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.HdrHistogram</pattern>
                      <shadedPattern>${shadingPrefix}.org.HdrHistogram</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>reactor</pattern>
                      <shadedPattern>${shadingPrefix}.reactor</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.jayway.jsonpath</pattern>
                      <shadedPattern>${shadingPrefix}.com.jayway.jsonpath</shadedPattern>
                    </relocation>
                  </relocations>
                  <artifactSet>
                    <excludes>
                      <exclude>org.slf4j</exclude>
                      <exclude>io.confluent:*</exclude>
                      <exclude>org.apache.kafka:*</exclude>
                    </excludes>
                  </artifactSet>
                  <minimizeJar>true</minimizeJar>
                  <transformers>
                    <!-- prevents apache license duplication -->
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer">
                    </transformer>

                    <!-- Some licenses (including the Apache License, Version 2)
                     require that notices are preserved by downstream distributors.
                      ApacheNoticeResourceTransformer automates the assembly of an appropriate NOTICE. -->
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                      <addHeader>false</addHeader>
                    </transformer>

                    <!-- The PropertiesTransformer allows a set of properties files to be merged
                     and to resolve conflicts based on an ordinal giving the priority of each file.
                     An optional alreadyMergedKey enables to have a boolean flag in the file which,
                     if set to true, request to use the file as it as the result of the merge.
                     If two files are considered complete in the merge process then the shade will fail.-->
                    <transformer implementation="org.apache.maven.plugins.shade.resource.properties.PropertiesTransformer">
                      <!-- required configuration -->
                      <!-- merges all netty lib version files into one file -->
                      <resource>META-INF/io.netty.versions.properties</resource>
                      <ordinalKey>ordinal</ordinalKey>
                      <!-- optional configuration -->

                      <alreadyMergedKey>already_merged</alreadyMergedKey>
                      <defaultOrdinal>0</defaultOrdinal>
                      <reverseOrder>false</reverseOrder>
                    </transformer>

                    <!-- this handles and properly merges the content of META-INF/services in the dependencies -->
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>

                    <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                      <!-- once 3.3.0 shade plugin is release upgrade the maven plugin and remove AppendingTransformer
                        https://issues.apache.org/jira/browse/MSHADE-371 -->
                      <resource>META-INF/NOTICE.md</resource>
                    </transformer>

                    <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                      <!-- once 3.3.0 shade plugin is release upgrade the maven plugin and remove AppendingTransformer
                        https://issues.apache.org/jira/browse/MSHADE-371 -->
                      <resource>META-INF/LICENSE.md</resource>
                    </transformer>
                  </transformers>

                  <!-- When true, it will attempt to shade the contents of the java source files when creating the sources jar. -->
                  <shadeSourcesContent>true</shadeSourcesContent>
                  <createDependencyReducedPom>true</createDependencyReducedPom>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- unit test -->
      <id>unit</id>
      <properties>
        <env>default</env>
        <test.groups>unit</test.groups>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>3.2.5</version> <!-- {x-version-update;org.apache.maven.plugins:maven-surefire-plugin;external_dependency} -->
            <configuration>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- integration tests with cosmos emulator endpoint -->
      <id>kafka-emulator</id>
      <properties>
        <test.groups>kafka-emulator</test.groups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.2.5</version> <!-- {x-version-update;org.apache.maven.plugins:maven-failsafe-plugin;external_dependency} -->
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>src/test/resources/kafka-emulator-testng.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- integration tests with cosmos prod endpoint -->
      <id>kafka</id>
      <properties>
        <test.groups>kafka</test.groups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.2.5</version> <!-- {x-version-update;org.apache.maven.plugins:maven-failsafe-plugin;external_dependency} -->
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>src/test/resources/kafka-testng.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- integration tests with test container, also requires cosmosdb prod endpoints -->
      <id>kafka-integration</id>
      <properties>
        <test.groups>kafka-integration</test.groups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.2.5</version> <!-- {x-version-update;org.apache.maven.plugins:maven-failsafe-plugin;external_dependency} -->
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>src/test/resources/kafka-integration-testng.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
