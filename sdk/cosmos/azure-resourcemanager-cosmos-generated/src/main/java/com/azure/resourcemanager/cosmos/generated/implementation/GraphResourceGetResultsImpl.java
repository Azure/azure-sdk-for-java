// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cosmos.generated.fluent.models.GraphResourceGetResultsInner;
import com.azure.resourcemanager.cosmos.generated.models.CreateUpdateOptions;
import com.azure.resourcemanager.cosmos.generated.models.GraphResource;
import com.azure.resourcemanager.cosmos.generated.models.GraphResourceCreateUpdateParameters;
import com.azure.resourcemanager.cosmos.generated.models.GraphResourceGetPropertiesOptions;
import com.azure.resourcemanager.cosmos.generated.models.GraphResourceGetPropertiesResource;
import com.azure.resourcemanager.cosmos.generated.models.GraphResourceGetResults;
import com.azure.resourcemanager.cosmos.generated.models.ManagedServiceIdentity;
import java.util.Collections;
import java.util.Map;

public final class GraphResourceGetResultsImpl
    implements GraphResourceGetResults, GraphResourceGetResults.Definition, GraphResourceGetResults.Update {
    private GraphResourceGetResultsInner innerObject;

    private final com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ManagedServiceIdentity identity() {
        return this.innerModel().identity();
    }

    public GraphResourceGetPropertiesResource resource() {
        return this.innerModel().resource();
    }

    public GraphResourceGetPropertiesOptions options() {
        return this.innerModel().options();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public GraphResourceGetResultsInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String accountName;

    private String graphName;

    private GraphResourceCreateUpdateParameters createCreateUpdateGraphParameters;

    private GraphResourceCreateUpdateParameters updateCreateUpdateGraphParameters;

    public GraphResourceGetResultsImpl withExistingDatabaseAccount(String resourceGroupName, String accountName) {
        this.resourceGroupName = resourceGroupName;
        this.accountName = accountName;
        return this;
    }

    public GraphResourceGetResults create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getGraphResources()
                .createUpdateGraph(
                    resourceGroupName, accountName, graphName, createCreateUpdateGraphParameters, Context.NONE);
        return this;
    }

    public GraphResourceGetResults create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getGraphResources()
                .createUpdateGraph(
                    resourceGroupName, accountName, graphName, createCreateUpdateGraphParameters, context);
        return this;
    }

    GraphResourceGetResultsImpl(
        String name, com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager) {
        this.innerObject = new GraphResourceGetResultsInner();
        this.serviceManager = serviceManager;
        this.graphName = name;
        this.createCreateUpdateGraphParameters = new GraphResourceCreateUpdateParameters();
    }

    public GraphResourceGetResultsImpl update() {
        this.updateCreateUpdateGraphParameters = new GraphResourceCreateUpdateParameters();
        return this;
    }

    public GraphResourceGetResults apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getGraphResources()
                .createUpdateGraph(
                    resourceGroupName, accountName, graphName, updateCreateUpdateGraphParameters, Context.NONE);
        return this;
    }

    public GraphResourceGetResults apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getGraphResources()
                .createUpdateGraph(
                    resourceGroupName, accountName, graphName, updateCreateUpdateGraphParameters, context);
        return this;
    }

    GraphResourceGetResultsImpl(
        GraphResourceGetResultsInner innerObject,
        com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.accountName = Utils.getValueFromIdByName(innerObject.id(), "databaseAccounts");
        this.graphName = Utils.getValueFromIdByName(innerObject.id(), "graphs");
    }

    public GraphResourceGetResults refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getGraphResources()
                .getGraphWithResponse(resourceGroupName, accountName, graphName, Context.NONE)
                .getValue();
        return this;
    }

    public GraphResourceGetResults refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getGraphResources()
                .getGraphWithResponse(resourceGroupName, accountName, graphName, context)
                .getValue();
        return this;
    }

    public GraphResourceGetResultsImpl withRegion(Region location) {
        this.createCreateUpdateGraphParameters.withLocation(location.toString());
        return this;
    }

    public GraphResourceGetResultsImpl withRegion(String location) {
        this.createCreateUpdateGraphParameters.withLocation(location);
        return this;
    }

    public GraphResourceGetResultsImpl withResource(GraphResource resource) {
        if (isInCreateMode()) {
            this.createCreateUpdateGraphParameters.withResource(resource);
            return this;
        } else {
            this.updateCreateUpdateGraphParameters.withResource(resource);
            return this;
        }
    }

    public GraphResourceGetResultsImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.createCreateUpdateGraphParameters.withTags(tags);
            return this;
        } else {
            this.updateCreateUpdateGraphParameters.withTags(tags);
            return this;
        }
    }

    public GraphResourceGetResultsImpl withIdentity(ManagedServiceIdentity identity) {
        if (isInCreateMode()) {
            this.createCreateUpdateGraphParameters.withIdentity(identity);
            return this;
        } else {
            this.updateCreateUpdateGraphParameters.withIdentity(identity);
            return this;
        }
    }

    public GraphResourceGetResultsImpl withOptions(CreateUpdateOptions options) {
        if (isInCreateMode()) {
            this.createCreateUpdateGraphParameters.withOptions(options);
            return this;
        } else {
            this.updateCreateUpdateGraphParameters.withOptions(options);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
