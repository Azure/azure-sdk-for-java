// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.exception.ManagementError;
import com.azure.resourcemanager.cosmos.generated.models.ArmProxyResource;
import com.azure.resourcemanager.cosmos.generated.models.DataTransferDataSourceSink;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** A Cosmos DB Data Transfer Job. */
@Fluent
public final class DataTransferJobGetResultsInner extends ArmProxyResource {
    /*
     * The properties of a DataTransfer Job
     */
    @JsonProperty(value = "properties")
    private DataTransferJobProperties innerProperties;

    /**
     * Get the innerProperties property: The properties of a DataTransfer Job.
     *
     * @return the innerProperties value.
     */
    private DataTransferJobProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the jobName property: Job Name.
     *
     * @return the jobName value.
     */
    public String jobName() {
        return this.innerProperties() == null ? null : this.innerProperties().jobName();
    }

    /**
     * Get the source property: Source DataStore details.
     *
     * @return the source value.
     */
    public DataTransferDataSourceSink source() {
        return this.innerProperties() == null ? null : this.innerProperties().source();
    }

    /**
     * Set the source property: Source DataStore details.
     *
     * @param source the source value to set.
     * @return the DataTransferJobGetResultsInner object itself.
     */
    public DataTransferJobGetResultsInner withSource(DataTransferDataSourceSink source) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataTransferJobProperties();
        }
        this.innerProperties().withSource(source);
        return this;
    }

    /**
     * Get the destination property: Destination DataStore details.
     *
     * @return the destination value.
     */
    public DataTransferDataSourceSink destination() {
        return this.innerProperties() == null ? null : this.innerProperties().destination();
    }

    /**
     * Set the destination property: Destination DataStore details.
     *
     * @param destination the destination value to set.
     * @return the DataTransferJobGetResultsInner object itself.
     */
    public DataTransferJobGetResultsInner withDestination(DataTransferDataSourceSink destination) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataTransferJobProperties();
        }
        this.innerProperties().withDestination(destination);
        return this;
    }

    /**
     * Get the status property: Job Status.
     *
     * @return the status value.
     */
    public String status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Get the percentageComplete property: Percentage of completion.
     *
     * @return the percentageComplete value.
     */
    public Float percentageComplete() {
        return this.innerProperties() == null ? null : this.innerProperties().percentageComplete();
    }

    /**
     * Get the lastUpdatedUtcTime property: Last Updated Time (ISO-8601 format).
     *
     * @return the lastUpdatedUtcTime value.
     */
    public OffsetDateTime lastUpdatedUtcTime() {
        return this.innerProperties() == null ? null : this.innerProperties().lastUpdatedUtcTime();
    }

    /**
     * Get the workerCount property: Worker count.
     *
     * @return the workerCount value.
     */
    public Integer workerCount() {
        return this.innerProperties() == null ? null : this.innerProperties().workerCount();
    }

    /**
     * Set the workerCount property: Worker count.
     *
     * @param workerCount the workerCount value to set.
     * @return the DataTransferJobGetResultsInner object itself.
     */
    public DataTransferJobGetResultsInner withWorkerCount(Integer workerCount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataTransferJobProperties();
        }
        this.innerProperties().withWorkerCount(workerCount);
        return this;
    }

    /**
     * Get the error property: Error response for Faulted job.
     *
     * @return the error value.
     */
    public ManagementError error() {
        return this.innerProperties() == null ? null : this.innerProperties().error();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
