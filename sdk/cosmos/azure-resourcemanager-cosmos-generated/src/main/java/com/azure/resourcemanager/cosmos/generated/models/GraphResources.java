// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of GraphResources. */
public interface GraphResources {
    /**
     * Lists the graphs under an existing Azure Cosmos DB database account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List operation response, that contains the Graph resource and their properties as paginated response
     *     with {@link PagedIterable}.
     */
    PagedIterable<GraphResourceGetResults> listGraphs(String resourceGroupName, String accountName);

    /**
     * Lists the graphs under an existing Azure Cosmos DB database account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List operation response, that contains the Graph resource and their properties as paginated response
     *     with {@link PagedIterable}.
     */
    PagedIterable<GraphResourceGetResults> listGraphs(String resourceGroupName, String accountName, Context context);

    /**
     * Gets the Graph resource under an existing Azure Cosmos DB database account with the provided name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @param graphName Cosmos DB graph resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Graph resource under an existing Azure Cosmos DB database account with the provided name.
     */
    GraphResourceGetResults getGraph(String resourceGroupName, String accountName, String graphName);

    /**
     * Gets the Graph resource under an existing Azure Cosmos DB database account with the provided name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @param graphName Cosmos DB graph resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Graph resource under an existing Azure Cosmos DB database account with the provided name along with
     *     {@link Response}.
     */
    Response<GraphResourceGetResults> getGraphWithResponse(
        String resourceGroupName, String accountName, String graphName, Context context);

    /**
     * Deletes an existing Azure Cosmos DB Graph Resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @param graphName Cosmos DB graph resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteGraphResource(String resourceGroupName, String accountName, String graphName);

    /**
     * Deletes an existing Azure Cosmos DB Graph Resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @param graphName Cosmos DB graph resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteGraphResource(String resourceGroupName, String accountName, String graphName, Context context);

    /**
     * Gets the Graph resource under an existing Azure Cosmos DB database account with the provided name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Graph resource under an existing Azure Cosmos DB database account with the provided name along with
     *     {@link Response}.
     */
    GraphResourceGetResults getGraphById(String id);

    /**
     * Gets the Graph resource under an existing Azure Cosmos DB database account with the provided name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Graph resource under an existing Azure Cosmos DB database account with the provided name along with
     *     {@link Response}.
     */
    Response<GraphResourceGetResults> getGraphByIdWithResponse(String id, Context context);

    /**
     * Deletes an existing Azure Cosmos DB Graph Resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteGraphResourceById(String id);

    /**
     * Deletes an existing Azure Cosmos DB Graph Resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteGraphResourceByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new GraphResourceGetResults resource.
     *
     * @param name resource name.
     * @return the first stage of the new GraphResourceGetResults definition.
     */
    GraphResourceGetResults.DefinitionStages.Blank define(String name);
}
