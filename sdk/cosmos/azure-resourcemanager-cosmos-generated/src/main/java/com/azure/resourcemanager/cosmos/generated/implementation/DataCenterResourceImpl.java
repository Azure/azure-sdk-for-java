// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.cosmos.generated.fluent.models.DataCenterResourceInner;
import com.azure.resourcemanager.cosmos.generated.models.DataCenterResource;
import com.azure.resourcemanager.cosmos.generated.models.DataCenterResourceProperties;

public final class DataCenterResourceImpl
    implements DataCenterResource, DataCenterResource.Definition, DataCenterResource.Update {
    private DataCenterResourceInner innerObject;

    private final com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public DataCenterResourceProperties properties() {
        return this.innerModel().properties();
    }

    public DataCenterResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String clusterName;

    private String dataCenterName;

    public DataCenterResourceImpl withExistingCassandraCluster(String resourceGroupName, String clusterName) {
        this.resourceGroupName = resourceGroupName;
        this.clusterName = clusterName;
        return this;
    }

    public DataCenterResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .createUpdate(resourceGroupName, clusterName, dataCenterName, this.innerModel(), Context.NONE);
        return this;
    }

    public DataCenterResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .createUpdate(resourceGroupName, clusterName, dataCenterName, this.innerModel(), context);
        return this;
    }

    DataCenterResourceImpl(String name, com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager) {
        this.innerObject = new DataCenterResourceInner();
        this.serviceManager = serviceManager;
        this.dataCenterName = name;
    }

    public DataCenterResourceImpl update() {
        return this;
    }

    public DataCenterResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .update(resourceGroupName, clusterName, dataCenterName, this.innerModel(), Context.NONE);
        return this;
    }

    public DataCenterResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .update(resourceGroupName, clusterName, dataCenterName, this.innerModel(), context);
        return this;
    }

    DataCenterResourceImpl(
        DataCenterResourceInner innerObject,
        com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.clusterName = Utils.getValueFromIdByName(innerObject.id(), "cassandraClusters");
        this.dataCenterName = Utils.getValueFromIdByName(innerObject.id(), "dataCenters");
    }

    public DataCenterResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .getWithResponse(resourceGroupName, clusterName, dataCenterName, Context.NONE)
                .getValue();
        return this;
    }

    public DataCenterResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .getWithResponse(resourceGroupName, clusterName, dataCenterName, context)
                .getValue();
        return this;
    }

    public DataCenterResourceImpl withProperties(DataCenterResourceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
