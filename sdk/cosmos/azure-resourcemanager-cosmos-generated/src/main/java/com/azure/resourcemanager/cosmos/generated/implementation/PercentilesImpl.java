// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.cosmos.generated.CosmosDBManager;
import com.azure.resourcemanager.cosmos.generated.fluent.PercentilesClient;
import com.azure.resourcemanager.cosmos.generated.fluent.models.PercentileMetricInner;
import com.azure.resourcemanager.cosmos.generated.models.PercentileMetric;
import com.azure.resourcemanager.cosmos.generated.models.Percentiles;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class PercentilesImpl implements Percentiles {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PercentilesImpl.class);

    private final PercentilesClient innerClient;

    private final CosmosDBManager serviceManager;

    public PercentilesImpl(PercentilesClient innerClient, CosmosDBManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<PercentileMetric> listMetrics(String resourceGroupName, String accountName, String filter) {
        PagedIterable<PercentileMetricInner> inner =
            this.serviceClient().listMetrics(resourceGroupName, accountName, filter);
        return inner.mapPage(inner1 -> new PercentileMetricImpl(inner1, this.manager()));
    }

    public PagedIterable<PercentileMetric> listMetrics(
        String resourceGroupName, String accountName, String filter, Context context) {
        PagedIterable<PercentileMetricInner> inner =
            this.serviceClient().listMetrics(resourceGroupName, accountName, filter, context);
        return inner.mapPage(inner1 -> new PercentileMetricImpl(inner1, this.manager()));
    }

    private PercentilesClient serviceClient() {
        return this.innerClient;
    }

    private CosmosDBManager manager() {
        return this.serviceManager;
    }
}
