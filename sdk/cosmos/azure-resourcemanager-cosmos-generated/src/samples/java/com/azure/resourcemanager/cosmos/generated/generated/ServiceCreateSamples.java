// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.generated;

import com.azure.resourcemanager.cosmos.generated.models.ServiceSize;
import com.azure.resourcemanager.cosmos.generated.models.ServiceType;

/** Samples for Service Create. */
public final class ServiceCreateSamples {
    /*
     * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2022-02-15-preview/examples/CosmosDBSqlDedicatedGatewayServiceCreate.json
     */
    /**
     * Sample code: SqlDedicatedGatewayServiceCreate.
     *
     * @param manager Entry point to CosmosDBManager.
     */
    public static void sqlDedicatedGatewayServiceCreate(
        com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager) {
        manager
            .services()
            .define("SqlDedicatedGateway")
            .withExistingDatabaseAccount("rg1", "ddb1")
            .withInstanceSize(ServiceSize.COSMOS_D4S)
            .withInstanceCount(1)
            .withServiceType(ServiceType.SQL_DEDICATED_GATEWAY)
            .create();
    }

    /*
     * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2022-02-15-preview/examples/CosmosDBDataTransferServiceCreate.json
     */
    /**
     * Sample code: DataTransferServiceCreate.
     *
     * @param manager Entry point to CosmosDBManager.
     */
    public static void dataTransferServiceCreate(com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager) {
        manager
            .services()
            .define("DataTransfer")
            .withExistingDatabaseAccount("rg1", "ddb1")
            .withInstanceSize(ServiceSize.COSMOS_D4S)
            .withInstanceCount(1)
            .withServiceType(ServiceType.DATA_TRANSFER)
            .create();
    }

    /*
     * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2022-02-15-preview/examples/CosmosDBMaterializedViewsBuilderServiceCreate.json
     */
    /**
     * Sample code: MaterializedViewsBuilderServiceCreate.
     *
     * @param manager Entry point to CosmosDBManager.
     */
    public static void materializedViewsBuilderServiceCreate(
        com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager) {
        manager
            .services()
            .define("MaterializedViewsBuilder")
            .withExistingDatabaseAccount("rg1", "ddb1")
            .withInstanceSize(ServiceSize.COSMOS_D4S)
            .withInstanceCount(1)
            .withServiceType(ServiceType.MATERIALIZED_VIEWS_BUILDER)
            .create();
    }

    /*
     * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2022-02-15-preview/examples/CosmosDBGraphAPIComputeServiceCreate.json
     */
    /**
     * Sample code: GraphAPIComputeServiceCreate.
     *
     * @param manager Entry point to CosmosDBManager.
     */
    public static void graphAPIComputeServiceCreate(
        com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager) {
        manager
            .services()
            .define("GraphAPICompute")
            .withExistingDatabaseAccount("rg1", "ddb1")
            .withInstanceSize(ServiceSize.COSMOS_D4S)
            .withInstanceCount(1)
            .withServiceType(ServiceType.GRAPH_APICOMPUTE)
            .create();
    }
}
