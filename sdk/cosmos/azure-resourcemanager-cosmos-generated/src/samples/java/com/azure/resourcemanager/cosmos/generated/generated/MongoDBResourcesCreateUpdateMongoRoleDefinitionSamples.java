// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.generated;

import com.azure.resourcemanager.cosmos.generated.models.Privilege;
import com.azure.resourcemanager.cosmos.generated.models.PrivilegeResource;
import com.azure.resourcemanager.cosmos.generated.models.Role;
import java.util.Arrays;

/** Samples for MongoDBResources CreateUpdateMongoRoleDefinition. */
public final class MongoDBResourcesCreateUpdateMongoRoleDefinitionSamples {
    /*
     * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2022-02-15-preview/examples/CosmosDBMongoDBRoleDefinitionCreateUpdate.json
     */
    /**
     * Sample code: CosmosDBMongoDBRoleDefinitionCreateUpdate.
     *
     * @param manager Entry point to CosmosDBManager.
     */
    public static void cosmosDBMongoDBRoleDefinitionCreateUpdate(
        com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager) {
        manager
            .mongoDBResources()
            .defineUpdateMongoRoleDefinition("myMongoRoleDefinitionId")
            .withExistingDatabaseAccount("myResourceGroupName", "myAccountName")
            .withRoleName("myRoleName")
            .withDatabaseName("sales")
            .withPrivileges(
                Arrays
                    .asList(
                        new Privilege()
                            .withResource(new PrivilegeResource().withDb("sales").withCollection("sales"))
                            .withActions(Arrays.asList("insert", "find"))))
            .withRoles(Arrays.asList(new Role().withDb("sales").withRole("myInheritedRole")))
            .create();
    }
}
