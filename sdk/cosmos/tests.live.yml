trigger:
  branches:
    include:
    - master
  paths:
    include:
    - sdk/cosmos

variables:
  pomFile: './sdk/cosmos/pom.xml'
  DefaultOptions: '--batch-mode -Dmaven.wagon.http.pool=false'
  LoggingOptions: '-Dorg.slf4j.simpleLogger.defaultLogLevel=error -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn'

jobs:
  - job: 'Build'

    pool:
      vmImage: 'vs2017-win2016'

    steps:
    - task: Maven@3
      displayName: 'Install reporting tools'
      inputs:
        mavenPomFile: ./eng/code-quality-reports/pom.xml
        options: '$(DefaultOptions) -DskipTests -Dgpg.skip'
        mavenOptions: '$(LoggingOptions)'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        goals: 'install'

    - task: Maven@1
      displayName: Build
      inputs:
        mavenPomFile: $(pomFile)
        goals: 'package package'
        options: '-DskipTests -Dgpg.skip'
        publishJUnitResults: false
        checkStyleRunAnalysis: true
        pmdRunAnalysis: true
        findBugsRunAnalysis: true
      condition: succeededOrFailed()

  - job: 'Test'

    timeoutInMinutes: 240

    strategy:
      maxParallel: 1
      matrix:
        Session_Single_Region_ReadMyWrites:
          OSVmImage: 'macOS-10.13'
          CosmosAccountHost: $(SINGLE_SESSION_ONE_ACCOUNT_HOST)
          CosmosAccountKey: $(SINGLE_SESSION_ONE_ACCOUNT_KEY)
          Consistency: 'Session'
          TestDisplayName: 'ReadMyWrites Integration Tests'
          ProfileFlag: '-Pe2e'
          cosmos.directModeProtocol: 'Https'


        Strong_Single_Region_ReadMyWrites:
          OSVmImage: 'macOS-10.13'
          CosmosAccountHost: $(SINGLE_STRONG_ACCOUNT_HOST)
          CosmosAccountKey: $(SINGLE_STRONG_ACCOUNT_KEY)
          Consistency: 'Strong'
          TestDisplayName: 'ReadMyWrites Integration Tests'
          ProfileFlag: '-Pe2e'
          cosmos.directModeProtocol: 'Https'

        # Temporarily Disabled as V3 code lacks the support to run this pipeline. Will be enabled later.
        # Strong_Multi_Region_ReadMyWrites:
        #   OSVmImage: 'macOS-10.13'
        #   CosmosAccountHost: $(MULTI_STRONG_ACCOUNT_HOST)
        #   CosmosAccountKey: $(MULTI_STRONG_ACCOUNT_KEY)
        #   Consistency: 'Strong'
        #   TestDisplayName: 'ReadMyWrites Integration Tests'
        #   ProfileFlag: '-Pe2e'
        #   cosmos.directModeProtocol: 'Https'

    pool:
      vmImage: $(OSVmImage)
        
    #Your build pipeline references a secret variable named ‘ACCOUNT_HOST’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references a secret variable named ‘ACCOUNT_KEY’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
    steps:
    - task: Maven@3
      displayName: 'Install reporting tools'
      inputs:
        mavenPomFile: ./eng/code-quality-reports/pom.xml
        options: '$(DefaultOptions) -DskipTests -Dgpg.skip'
        mavenOptions: '$(LoggingOptions)'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        goals: 'install'

    - task: Maven@1
      displayName: $(TestDisplayName)
      inputs:
        mavenPomFile: $(pomFile)
        goals: verify
        options: '$(ProfileFlag) -Dgpg.skip -DargLine="-Dcosmos.directModeProtocol=$(cosmos.directModeProtocol)" -DACCOUNT_HOST=$(CosmosAccountHost) -DACCOUNT_KEY=$(CosmosAccountKey)'
        testResultsFiles: '**/junitreports/TEST-*.xml'
      env:
        DESIRED_CONSISTENCY: $(Consistency)
      condition: succeededOrFailed()

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: |
         **/target/**
         **/collectedArtifactsForRelease/**
        TargetFolder: '$(build.artifactstagingdirectory)'
      continueOnError: true
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      continueOnError: true
      condition: succeededOrFailed()


  - job: 'Long_Tests'

    timeoutInMinutes: 240

    strategy:
      maxParallel: 1
      matrix:
        MultiMaster_Multi_Region_Long:
         OSVmImage: 'vs2017-win2016'
         CosmosAccountHost: $(ACCOUNT_HOST)
         CosmosAccountKey: $(ACCOUNT_KEY)
         Consistency: '["Session"]'
         TestDisplayName: 'Long Integration Tests'
         ProfileFlag: '-e -Plong'
         PreferredLocations: '["East US 2"]'

        Session_Single_Region_Long:
         OSVmImage: 'vs2017-win2016'
         CosmosAccountHost: $(SINGLE_SESSION_ACCOUNT_HOST)
         CosmosAccountKey: $(SINGLE_SESSION_ACCOUNT_KEY)
         Consistency: '["Session"]'
         TestDisplayName: 'Long Integration Tests'
         ProfileFlag: '-e -Plong'
         PreferredLocations: null

    pool:
      vmImage: $(OSVmImage)
        
    #Your build pipeline references a secret variable named ‘ACCOUNT_HOST’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references a secret variable named ‘ACCOUNT_KEY’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
    steps:
    - task: Maven@3
      displayName: 'Install reporting tools'
      inputs:
        mavenPomFile: ./eng/code-quality-reports/pom.xml
        options: '$(DefaultOptions) -DskipTests -Dgpg.skip'
        mavenOptions: '$(LoggingOptions)'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        goals: 'install'

    - task: Maven@1
      displayName: 'Long Integration Tests'
      inputs:
       mavenPomFile: $(pomFile)
       goals: verify
       options: '$(ProfileFlag) -Dgpg.skip -DACCOUNT_HOST=$(ACCOUNT_HOST) -DACCOUNT_KEY=$(ACCOUNT_KEY)'
       testResultsFiles: '**/junitreports/TEST-*.xml'
      env:
        DESIRED_CONSISTENCIES: $(Consistency)
        PREFERRED_LOCATIONS: $(PreferredLocations)
      condition: succeededOrFailed()

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: |
         **/target/**
         **/collectedArtifactsForRelease/**
        TargetFolder: '$(build.artifactstagingdirectory)'
      continueOnError: true
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      continueOnError: true
      condition: succeededOrFailed()

  - job: 'MultiMaster'

    timeoutInMinutes: 240

    strategy:
      maxParallel: 1
      matrix:
        Single_Region:
         OSVmImage: 'macOS-10.13'
         CosmosAccountHost: $(MULTIMASTER_SINGLE_ACCOUNT_HOST)
         CosmosAccountKey: $(MULTIMASTER_SINGLE_ACCOUNT_KEY)
         PreferredLocations: null

        Multi_Region:
          OSVmImage: 'macOS-10.13'
          CosmosAccountHost: $(ACCOUNT_HOST)
          CosmosAccountKey: $(ACCOUNT_KEY)
          PreferredLocations: '["East US 2"]'

    pool:
      vmImage: $(OSVmImage)

    steps:
    - task: Maven@3
      displayName: 'Install reporting tools'
      inputs:
        mavenPomFile: ./eng/code-quality-reports/pom.xml
        options: '$(DefaultOptions) -DskipTests -Dgpg.skip'
        mavenOptions: '$(LoggingOptions)'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        goals: 'install'

    - task: Maven@1
      displayName: 'Multi-Master Integration Tests'
      inputs:
        mavenPomFile: $(pomFile)
        goals: verify
        options: '-Pmulti-master -Dgpg.skip -DACCOUNT_HOST=$(CosmosAccountHost) -DACCOUNT_KEY=$(CosmosAccountKey)'
        testResultsFiles: '**/junitreports/TEST-*.xml'
      env:
        DESIRED_CONSISTENCIES: '["Session"]'
        PREFERRED_LOCATIONS: $(PreferredLocations)
      condition: succeededOrFailed()

    - task: Maven@1
      displayName: 'Fast Integration Tests'
      inputs:
        mavenPomFile: $(pomFile)
        goals: verify
        options: '-Pfast -Dgpg.skip -DACCOUNT_HOST=$(CosmosAccountHost) -DACCOUNT_KEY=$(CosmosAccountKey)'
        testResultsFiles: '**/junitreports/TEST-*.xml'
      env:
        DESIRED_CONSISTENCIES: '["Session"]'
        PREFERRED_LOCATION: $(PreferredLocations)
      condition: succeededOrFailed()

    - task: Maven@1
      displayName: 'DirectHttps Integration Tests'
      inputs:
        mavenPomFile: $(pomFile)
        goals: verify
        options: '-Pdirect -Dgpg.skip -DACCOUNT_HOST=$(CosmosAccountHost) -DACCOUNT_KEY=$(CosmosAccountKey)'
        testResultsFiles: '**/junitreports/TEST-*.xml'
      env:
        DESIRED_CONSISTENCIES: '["Session"]'
        PREFERRED_LOCATION: $(PreferredLocations)
      condition: succeededOrFailed()

    - task: Maven@1
      displayName: 'Examples Integration Tests'
      inputs:
        mavenPomFile: $(pomFile)
        goals: verify
        options: '-Pexamples -Dgpg.skip -DACCOUNT_HOST=$(CosmosAccountHost) -DACCOUNT_KEY=$(CosmosAccountKey)'
        testResultsFiles: '**/junitreports/TEST-*.xml'
      env:
        DESIRED_CONSISTENCIES: '["Session"]'
        PREFERRED_LOCATION: $(PreferredLocations)
      condition: succeededOrFailed()

    - task: Maven@1
      displayName: 'Non Emulator Tests'
      inputs:
        mavenPomFile: $(pomFile)
        goals: verify
        options: '-Pnon-emulator -Dgpg.skip -DACCOUNT_HOST=$(CosmosAccountHost) -DACCOUNT_KEY=$(CosmosAccountKey)'
        testResultsFiles: '**/junitreports/TEST-*.xml'
      env:
        DESIRED_CONSISTENCIES: '["Session"]'
        PREFERRED_LOCATION: $(PreferredLocations)
      condition: succeededOrFailed()

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: |
         **/target/**
         **/collectedArtifactsForRelease/**
        TargetFolder: '$(build.artifactstagingdirectory)'
      continueOnError: true
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      continueOnError: true
      condition: succeededOrFailed()

  - job: 'Single_Region'

    timeoutInMinutes: 120

    strategy:
      maxParallel: 2
      matrix:
        Strong_Tcp:
          OSVmImage: 'macOS-10.13'
          CosmosAccountHost: $(SINGLE_STRONG_ONE_ACCOUNT_HOST)
          CosmosAccountKey: $(SINGLE_STRONG_ONE_ACCOUNT_KEY)
          ProtocolFlag: '["Tcp"]'
          Consistency: '["Strong", "Session"]'

        Strong_Https:
         OSVmImage: 'macOS-10.13'
         CosmosAccountHost: $(SINGLE_STRONG_TWO_ACCOUNT_HOST)
         CosmosAccountKey: $(SINGLE_STRONG_TWO_ACCOUNT_KEY)
         ProtocolFlag: '["Https"]'
         Consistency: '["Strong", "Session"]'

        Session_Tcp:
          OSVmImage: 'macOS-10.13'
          CosmosAccountHost: $(SINGLE_SESSION_ONE_ACCOUNT_HOST)
          CosmosAccountKey: $(SINGLE_SESSION_ONE_ACCOUNT_KEY)
          ProtocolFlag: '["Tcp"]'
          Consistency: '["Session"]'

        Session_Https:
         OSVmImage: 'macOS-10.13'
         CosmosAccountHost: $(SINGLE_SESSION_ACCOUNT_HOST)
         CosmosAccountKey: $(SINGLE_SESSION_ACCOUNT_KEY)
         ProtocolFlag: '["Https"]'
         Consistency: '["Session"]'
    pool:
      vmImage: $(OSVmImage)

    steps:
    - task: Maven@3
      displayName: 'Install reporting tools'
      inputs:
        mavenPomFile: ./eng/code-quality-reports/pom.xml
        options: '$(DefaultOptions) -DskipTests -Dgpg.skip'
        mavenOptions: '$(LoggingOptions)'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        goals: 'install'

    - task: Maven@1
      displayName: 'Fast Integration Tests'
      inputs:
        mavenPomFile: $(pomFile)
        goals: verify
        options: '-Pfast -Dgpg.skip -DargLine="-DACCOUNT_DEFAULT_CONSISTENCY=Strong" -DACCOUNT_HOST=$(CosmosAccountHost) -DACCOUNT_KEY=$(CosmosAccountKey)'
        testResultsFiles: '**/junitreports/TEST-*.xml'
      env:
        DESIRED_CONSISTENCIES: $(Consistency)
        PROTOCOLS: $(ProtocolFlag)
      condition: succeededOrFailed()
    
    - task: Maven@1
      displayName: 'DirectHttps Integration Tests'
      inputs:
        mavenPomFile: $(pomFile)
        goals: verify
        options: '-Pdirect -Dgpg.skip -DargLine="-DACCOUNT_DEFAULT_CONSISTENCY=Strong" -DACCOUNT_HOST=$(CosmosAccountHost) -DACCOUNT_KEY=$(CosmosAccountKey)'
        testResultsFiles: '**/junitreports/TEST-*.xml'
      env:
        DESIRED_CONSISTENCIES: $(Consistency)
        PROTOCOLS: $(ProtocolFlag)
      condition: succeededOrFailed()

    - task: Maven@1
      displayName: 'Examples Integration Tests'
      inputs:
        mavenPomFile: $(pomFile)
        goals: verify
        options: '-Pexamples -Dgpg.skip -DargLine="-DACCOUNT_DEFAULT_CONSISTENCY=Strong" -DACCOUNT_HOST=$(CosmosAccountHost) -DACCOUNT_KEY=$(CosmosAccountKey)'
        testResultsFiles: '**/junitreports/TEST-*.xml'
      env:
        DESIRED_CONSISTENCIES: $(Consistency)
        PROTOCOLS: $(ProtocolFlag)
      condition: succeededOrFailed()

    - task: Maven@1
      displayName: 'Non Emulator Tests'
      inputs:
        mavenPomFile: $(pomFile)
        goals: verify
        options: '-Pnon-emulator -Dgpg.skip -DargLine="-DACCOUNT_DEFAULT_CONSISTENCY=Strong" -DACCOUNT_HOST=$(CosmosAccountHost) -DACCOUNT_KEY=$(CosmosAccountKey)'
        testResultsFiles: '**/junitreports/TEST-*.xml'
      env:
        DESIRED_CONSISTENCIES: $(Consistency)
        PROTOCOLS: $(ProtocolFlag)
      condition: succeededOrFailed()

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: |
         **/target/**
         **/collectedArtifactsForRelease/**
        TargetFolder: '$(build.artifactstagingdirectory)'
      continueOnError: true
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      continueOnError: true
      condition: succeededOrFailed()