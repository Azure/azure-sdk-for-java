# NOTE: Please refer to https://aka.ms/azsdk/engsys/ci-yaml before editing this file.

trigger:
  branches:
    include:
      - main
      - hotfix/*
      - release/*
  paths:
    include:
      - sdk/cosmos/ci.yml
      - sdk/cosmos/azure-cosmos/
      - sdk/cosmos/azure-cosmos-benchmark/
      - sdk/cosmos/azure-cosmos-dotnet-benchmark/
      - sdk/cosmos/azure-cosmos-encryption/
      - sdk/cosmos/azure-cosmos-examples/
      - sdk/cosmos/azure-cosmos-spark_3_2-12/
      - sdk/cosmos/azure-cosmos-spark_3-1_2-12/
      - sdk/cosmos/azure-cosmos-spark_3-2_2-12/
      - sdk/cosmos/azure-spring-data-cosmos/
      - sdk/cosmos/azure-spring-data-cosmos-test/
      - sdk/cosmos/faq/
    exclude:
      - sdk/cosmos/pom.xml
      - sdk/cosmos/azure-cosmos/pom.xml
      - sdk/cosmos/azure-cosmos-benchmark/pom.xml
      - sdk/cosmos/azure-cosmos-dotnet-benchmark/pom.xml
      - sdk/cosmos/azure-cosmos-encryption/pom.xml
      - sdk/cosmos/azure-cosmos-spark_3_2-12/pom.xml
      - sdk/cosmos/azure-cosmos-spark_3-1_2-12/pom.xml
      - sdk/cosmos/azure-cosmos-spark_3-2_2-12/pom.xml
      - sdk/cosmos/azure-spring-data-cosmos/pom.xml
      - sdk/cosmos/azure-spring-data-cosmos-test/pom.xml

pr:
  branches:
    include:
      - main
      - feature/*
      - feature/cosmos/spark30
      - hotfix/*
      - release/*
  paths:
    include:
      - sdk/cosmos/ci.yml
      - sdk/cosmos/azure-cosmos/
      - sdk/cosmos/azure-cosmos-benchmark/
      - sdk/cosmos/azure-cosmos-dotnet-benchmark/
      - sdk/cosmos/azure-cosmos-encryption/
      - sdk/cosmos/azure-cosmos-examples/
      - sdk/cosmos/azure-cosmos-spark_3_2-12/
      - sdk/cosmos/azure-cosmos-spark_3-1_2-12/
      - sdk/cosmos/azure-cosmos-spark_3-2_2-12/
      - sdk/cosmos/azure-spring-data-cosmos/
      - sdk/cosmos/azure-spring-data-cosmos-test/
      - sdk/cosmos/faq/
    exclude:
      - sdk/cosmos/pom.xml
      - sdk/cosmos/azure-cosmos/pom.xml
      - sdk/cosmos/azure-cosmos-benchmark/pom.xml
      - sdk/cosmos/azure-cosmos-dotnet-benchmark/pom.xml
      - sdk/cosmos/azure-cosmos-encryption/pom.xml
      - sdk/cosmos/azure-cosmos-spark_3_2-12/pom.xml
      - sdk/cosmos/azure-cosmos-spark_3-1_2-12/pom.xml
      - sdk/cosmos/azure-cosmos-spark_3-2_2-12/pom.xml
      - sdk/cosmos/azure-spring-data-cosmos/pom.xml
      - sdk/cosmos/azure-spring-data-cosmos-test/pom.xml

parameters:
- name: release_azurecosmos
  displayName: 'azure-cosmos'
  type: boolean
  default: true
- name: release_azurespringdatacosmos
  displayName: 'azure-spring-data-cosmos'
  type: boolean
  default: true
- name: release_azurecosmosencryption
  displayName: 'azure-cosmos-encryption'
  type: boolean
  default: true
- name: release_azurecosmosspark31
  displayName: 'azure-cosmos-spark_3-1_2-12'
  type: boolean
  default: true
- name: release_azurecosmosspark32
  displayName: 'azure-cosmos-spark_3-2_2-12'
  type: boolean
  default: true

extends:
  template: ../../eng/pipelines/templates/stages/archetype-sdk-client.yml
  parameters:
    ServiceDirectory: cosmos
    EnableBatchRelease: true
    SDKType: client
    MatrixConfigs:
      - Name: Cosmos_emulator_integration
        Path: ./sdk/cosmos/cosmos-emulator-matrix.json
        Selection: all
        GenerateVMJobs: true
    MatrixReplace:
      - JavaTestVersion=(.*1)\.17(.*)/$1.11$2
    PreTestSteps:
      - template: /eng/common/pipelines/templates/steps/cosmos-emulator.yml
        parameters:
          StartParameters: '/noexplorer /noui /enablepreview /disableratelimiting /enableaadauthentication /partitioncount=50 /consistency=Strong'
      - powershell: |
          $Key = 'C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=='
          $password = ConvertTo-SecureString -String $Key -Force -AsPlainText
          $cert = Get-ChildItem cert:\LocalMachine\My | Where-Object { $_.FriendlyName -eq "DocumentDbEmulatorCertificate" }
          Export-PfxCertificate -Cert $cert -FilePath ".\CosmosDbEmulatorCert.pfx" -Password $password | Out-Null
          $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
          $cert.Import(".\CosmosDbEmulatorCert.pfx", $Key, "DefaultKeySet")
          $cert | Export-Certificate -FilePath "$env:temp\CosmosDbEmulatorCert.cer" -Type CERT
        displayName: 'Export Cosmos DB Emulator Certificate'
      - powershell: |
          cd $env:java_home\jre\lib\security
          cp $env:temp\CosmosDbEmulatorCert.cer .
          keytool -keystore cacerts -importcert -noprompt -trustcacerts -alias CosmosDbEmulatorCert -file CosmosDbEmulatorCert.cer -storepass changeit
        displayName: 'Create Java TrustStore'
      - powershell: |
          $downloadTarget = Join-Path -Path $env:temp -ChildPath "hadoopsource.zip"
          $targetDir = "D:\Hadoop"
          Write-Host "Downloading and extracting Hadoop winutils - https://aka.ms/cosmos-hadoop-for-spark-ci-pipeline"
          Write-Host "Target: $targetDir"
          Invoke-WebRequest "https://aka.ms/cosmos-hadoop-for-spark-ci-pipeline" -OutFile $downloadTarget
          if (Test-Path $targetDir) { Remove-Item -Recurse -Force $targetDir }
          Expand-Archive -LiteralPath $downloadTarget -DestinationPath $targetDir
          Write-Host "Copying binaries to windows sytem32 folder"
          Copy-Item -Path "D:\Hadoop\bin\*" -Destination "C:\Windows\System32" -Recurse
          Write-Host "Updating environment variables for Hadoop usage"
          [System.Environment]::SetEnvironmentVariable("HADOOP_HOME", "D:\Hadoop", [System.EnvironmentVariableTarget]::Machine)
          $hadoopHome = [System.Environment]::GetEnvironmentVariable("HADOOP_HOME", [System.EnvironmentVariableTarget]::Machine)
          Write-Host "New HADOOP_HOME environment variable: $hadoopHome"
          $path = [System.Environment]::GetEnvironmentVariable("Path", [System.EnvironmentVariableTarget]::Machine)
          Write-Host "Original Path environment variable: $path"
          $newPath = $path + ";D:\Hadoop\bin"
          [System.Environment]::SetEnvironmentVariable("Path", $newPath,[System.EnvironmentVariableTarget]::Machine)
          $updatedPath = [System.Environment]::GetEnvironmentVariable("Path", [System.EnvironmentVariableTarget]::Machine)
          Write-Host "New Path environment variable: $updatedPath"
        displayName: 'Download and Extract Hadoop winutils and update env variables for Hadoop usage'
    Artifacts:
      - name: azure-cosmos
        groupId: com.azure
        safeName: azurecosmos
        releaseInBatch: ${{ parameters.release_azurecosmos }}
      - name: azure-spring-data-cosmos
        groupId: com.azure
        safeName: azurespringdatacosmos
        releaseInBatch: ${{ parameters.release_azurespringdatacosmos }}
      - name: azure-cosmos-encryption
        groupId: com.azure
        safeName: azurecosmosencryption
        releaseInBatch: ${{ parameters.release_azurecosmosencryption }}
      - name: azure-cosmos-spark_3-1_2-12
        groupId: com.azure.cosmos.spark
        safeName: azurecosmosspark31
        uberJar: true
        skipPublishDocGithubIo: true
        skipPublishDocMs: true
        releaseInBatch: ${{ parameters.release_azurecosmosspark31 }}
      - name: azure-cosmos-spark_3-2_2-12
        groupId: com.azure.cosmos.spark
        safeName: azurecosmosspark32
        uberJar: true
        skipPublishDocGithubIo: true
        skipPublishDocMs: true
        releaseInBatch: ${{ parameters.release_azurecosmosspark32 }}
    AdditionalModules:
      - name: azure-cosmos-benchmark
        groupId: com.azure
      - name: azure-spring-data-cosmos-test
        groupId: com.azure
      - name: azure-cosmos-spark_3_2-12
        groupId: com.azure.cosmos.spark
