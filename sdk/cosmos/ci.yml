trigger:
  branches:
    include:
    - master
  paths:
    include:
    - sdk/cosmos/

pr:
  branches:
    include:
      - master
  paths:
    include:
      - sdk/cosmos/

variables:
  EmulatorMsiUrl: 'https://acpedaily1.blob.core.windows.net/emulator/azure-cosmos-emulator.msi'

jobs:
  - template: ../../eng/pipelines/templates/jobs/archetype-sdk-client.yml
    parameters:
      ServiceDirectory: cosmos
      TestGoals: test
      TestMatrix:
        Windows - java8:
          OSVmImage: 'vs2017-win2016'
          JavaVersion: '1.8'
          OSName: Windows
          ProfileFlag: '-Punit'
        MacOS - java8:
          OSVmImage: 'macOS-10.13'
          JavaVersion: '1.8'
          OSName: macOS
          ProfileFlag: '-Punit'
      PreTestSteps:
        - template: ../steps/install-reporting-tools.yml

  - template: ../../eng/pipelines/templates/jobs/archetype-sdk-tests.yml
    parameters:
      TestName: Emulator
      ServiceDirectory: cosmos
      Matrix:
        Tcp_Integration_Tests_Java8:
          OSVmImage: 'vs2017-win2016'
          JavaVersion: '1.8'
          ProfileFlag: '-Pemulator'
          DisplayName: 'Emulator only Integration Tests'
          PROTOCOLS: '["Tcp"]'
          DESIRED_CONSISTENCIES: '["Strong", "Session"]'
        Https_Integration_Tests_Java8:
          OSVmImage: 'vs2017-win2016'
          JavaVersion: '1.8'
          ProfileFlag: '-Pemulator'
          DisplayName: 'Emulator only Integration Tests'
          PROTOCOLS: '["Https"]'
          DESIRED_CONSISTENCIES: '["Strong", "Session"]'
        Examples_Integration_Tests_Java8:
          OSVmImage: 'vs2017-win2016'
          JavaVersion: '1.8'
          ProfileFlag: '-Pexamples'
          DisplayName: 'Examples Integration Tests'
          PROTOCOLS: '["Https", "Tcp"]'
          DESIRED_CONSISTENCIES: '["Strong", "Session"]'

      TestStepMavenInputs:
        goals: 'verify'
        options: '$(ProfileFlag) -Dgpg.skip -DargLine="-DACCOUNT_HOST=https://localhost:8081/"'
        mavenAuthenticateFeed: true
        jdkVersionOption: $(JavaVersion)

      PreRunSteps:
      - powershell: |
          Write-Host "Downloading Cosmos Emulator - $(EmulatorMsiUrl)"
          wget "$(EmulatorMsiUrl)" -outfile "$env:temp\azure-cosmosdb-emulator.msi"
          Write-Host "Finished Downloading Cosmos Emulator - $env:temp\azure-cosmosdb-emulator.msi"
          dir "$env:temp"
        displayName: 'Download Public Cosmos DB Emulator'

      - script: |
          choco install lessmsi
          choco upgrade lessmsi
          mkdir "%TEMP%\Azure Cosmos DB Emulator"
          lessmsi x "%TEMP%\azure-cosmosdb-emulator.msi" "%TEMP%\Azure Cosmos DB Emulator\"
        displayName: 'Install Public Cosmos DB Emulator'

      - powershell: |
          Write-Host "Starting Comsos DB Emulator"
          Start-Process "$env:Temp\Azure Cosmos DB Emulator\SourceDir\Azure Cosmos DB Emulator\CosmosDB.Emulator.exe" "/NoExplorer /NoUI /DisableRateLimiting /PartitionCount=100 /Consistency=Strong" -Verb RunAs
        displayName: 'Run Public Cosmos DB Emulator'

      - powershell: |
          Import-Module "$env:Temp\Azure Cosmos DB Emulator\SourceDir\Azure Cosmos DB Emulator\PSModules\Microsoft.Azure.CosmosDB.Emulator"

          Do {
              sleep 5
              $cosmosStatus = Get-CosmosDbEmulatorStatus
              Write-Host "Cosmos Status: $cosmosStatus"
          } While ($cosmosStatus -ne 'Running')

          Write-Host "Done"
        displayName: 'Check Public Cosmos DB Emulator Status'

      - powershell: |
          $Key = 'C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=='
          $password = ConvertTo-SecureString -String $Key -Force -AsPlainText
          $cert = Get-ChildItem cert:\LocalMachine\My | Where-Object { $_.FriendlyName -eq "DocumentDbEmulatorCertificate" }
          Export-PfxCertificate -Cert $cert -FilePath ".\CosmosDbEmulatorCert.pfx" -Password $password | Out-Null
          $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
          $cert.Import(".\CosmosDbEmulatorCert.pfx", $Key, "DefaultKeySet")
          $cert | Export-Certificate -FilePath "$env:temp\CosmosDbEmulatorCert.cer" -Type CERT
        displayName: 'Export Cosmos DB Emulator Certificate'

      - powershell: |
          cd $env:java_home\jre\lib\security
          cp $env:temp\CosmosDbEmulatorCert.cer .
          keytool -keystore cacerts -importcert -noprompt -trustcacerts -alias CosmosDbEmulatorCert -file CosmosDbEmulatorCert.cer -storepass changeit
        displayName: 'Create Java TrustStore'

      # We `install` separately from running `site:site site:stage` so that the `install` brings in the non-shipping-modules,
      # but we don't include them in the Maven site commands (so that we don't generate reports for the non-shipping modules).
      - template: ../steps/install-reporting-tools.yml
