trigger: none

variables:
  - template: ../../eng/pipelines/templates/variables/globals.yml
  - name: AdditionalArgs
    value: ''

stages:
  - template: /eng/pipelines/templates/stages/archetype-sdk-tests.yml
    parameters:
      CloudConfig:
        Cosmos_Public:
          SubscriptionConfigurations:
            - $(sub-config-azure-cloud-test-resources)
            - $(sub-config-cosmos-azure-cloud-test-resources)
      Clouds: 'Cosmos_Public'
      MatrixConfigs:
        - Name: Cosmos_live_test
          Path: sdk/cosmos/platform-matrix.json
          Selection: all
          GenerateVMJobs: true
      ServiceDirectory: cosmos
      Artifacts:
        - name: azure-cosmos
          groupId: com.azure
          safeName: azurecosmos
      AdditionalModules:
        - name: azure-cosmos-benchmark
          groupId: com.azure
      TimeoutInMinutes: 120
      MaxParallel: 8
      PreSteps:
        - template: /eng/pipelines/templates/steps/install-reporting-tools.yml
      TestStepMavenInputs:
        goals: verify
        options: '$(ProfileFlag) -Dgpg.skip $(AdditionalArgs) -pl $(ProjectList)'
      TestResultsFiles: '**/junitreports/TEST-*.xml'

  - template: /eng/pipelines/templates/stages/archetype-sdk-tests.yml
    parameters:
      TestName: 'Integration'
      CloudConfig:
        Public:
          SubscriptionConfigurations:
            - $(sub-config-azure-cloud-test-resources)
            - $(sub-config-cosmos-azure-cloud-test-resources)
      MatrixConfigs:
        - Name: Cosmos_live_test_integration
          Path: sdk/cosmos/integration-matrix.json
          Selection: all
          GenerateVMJobs: true
      ServiceDirectory: cosmos
      Artifacts:
        - name: azure-spring-data-cosmos-test
          groupId: com.azure
          safeName: azurespringdatacosmostest
      TimeoutInMinutes: 90
      PreSteps:
        - template: /eng/pipelines/templates/steps/install-reporting-tools.yml
      TestStepMavenInputs:
        goals: clean verify
        options: '$(ProfileFlag) -Dgpg.skip -Dmaven.wagon.http.pool=false $(DefaultOptions) -Dmaven.javadoc.skip=true -Drevapi.skip=true -pl $(ProjectList)'

  - ${{ if or(eq(variables['Build.Reason'], 'Manual'), eq(variables['Build.Reason'], 'PullRequest')) }}:
    - template: /sdk/cosmos/ci.spark.databricks.yml
      parameters:
        CosmosEndpoint: $(spark-databricks-cosmos-endpoint)
        CosmosKey: $(spark-databricks-cosmos-key)
        DatabricksEndpoint: $(spark-databricks-endpoint)
        DatabricksToken: $(spark-databricks-token)
