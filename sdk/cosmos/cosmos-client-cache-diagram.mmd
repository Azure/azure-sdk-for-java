graph TD
    subgraph Connectors["Kafka Connectors"]
        Source[CosmosSourceConnector]
        Sink[CosmosSinkConnector]
    end

    subgraph ClientCache["CosmosClientCache (Singleton)"]
        Cache[(Client Cache Map)]
        Cleanup[Cleanup Thread]
        ToBeCleanedMap[(To Be Cleaned Map)]
    end

    subgraph CacheItem["Cache Components"]
        Config[CosmosClientCacheConfig]
        Metadata[CosmosClientCacheMetadata]
        Client[CosmosAsyncClient]
    end

    Source -->|1. getCosmosClient()| ClientCache
    Sink -->|1. getCosmosClient()| ClientCache
    ClientCache -->|2. Creates if not exists| CacheItem
    ClientCache -->|3. Returns| CacheItem
    
    Config -->|Identifies| Client
    Metadata -->|Tracks| Client
    Metadata -->|Contains| RefCount[Reference Count]
    Metadata -->|Contains| LastAccessed[Last Accessed Time]
    
    Cleanup -->|Every 60s| Cache
    Cleanup -->|Moves unused clients| ToBeCleanedMap
    Cleanup -->|Closes clients with refCount=0| ToBeCleanedMap

    Source -->|4. releaseCosmosClient()| ClientCache
    Sink -->|4. releaseCosmosClient()| ClientCache
    
    style ClientCache fill:#f9f,stroke:#333,stroke-width:2px
    style CacheItem fill:#bbf,stroke:#333,stroke-width:2px
    style Connectors fill:#bfb,stroke:#333,stroke-width:2px
    
    classDef component fill:#eee,stroke:#333,stroke-width:1px
    class Cache,ToBeCleanedMap,Config,Metadata,Client,RefCount,LastAccessed,Cleanup component