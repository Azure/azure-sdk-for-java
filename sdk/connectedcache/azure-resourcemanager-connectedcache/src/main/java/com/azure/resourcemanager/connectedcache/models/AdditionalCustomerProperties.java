// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.connectedcache.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Model representing customer for connected cache resource.
 */
@Fluent
public final class AdditionalCustomerProperties implements JsonSerializable<AdditionalCustomerProperties> {
    /*
     * Customer resource last PeeringDB update timestamp.
     */
    private OffsetDateTime peeringDbLastUpdateTime;

    /*
     * Customer resource cache efficiency.
     */
    private Double customerPropertiesOverviewCacheEfficiency;

    /*
     * Customer resource average egress in Mbps.
     */
    private Double customerPropertiesOverviewAverageEgressMbps;

    /*
     * Customer resource average cache miss throughput in Mbps.
     */
    private Double customerPropertiesOverviewAverageMissMbps;

    /*
     * Customer resource maximum egress in Mbps.
     */
    private Double customerPropertiesOverviewEgressMbpsMax;

    /*
     * Customer resource peak egress timestamp.
     */
    private OffsetDateTime customerPropertiesOverviewEgressMbpsMaxDateTime;

    /*
     * Customer resource maximum cache miss throughput in Mbps.
     */
    private Double customerPropertiesOverviewMissMbpsMax;

    /*
     * Customer resource peak cache miss throughput timestamp.
     */
    private OffsetDateTime customerPropertiesOverviewMissMbpsMaxDateTime;

    /*
     * Customer resource total healthy cache nodes.
     */
    private Integer customerPropertiesOverviewCacheNodesHealthyCount;

    /*
     * Customer resource total unhealthy cache nodes.
     */
    private Integer customerPropertiesOverviewCacheNodesUnhealthyCount;

    /*
     * Customer resource signup status as boolean.
     */
    private Boolean signupStatus;

    /*
     * Customer resource signup status as integer code.
     */
    private Integer signupStatusCode;

    /*
     * Customer resource signup status as string text.
     */
    private String signupStatusText;

    /*
     * Customer resource signup phase status code as integer.
     */
    private Integer signupPhaseStatusCode;

    /*
     * Customer resource signup phase status as string text.
     */
    private String signupPhaseStatusText;

    /*
     * Customer resource last PeeringDB update timestamp.
     */
    private OffsetDateTime peeringDbLastUpdateDate;

    /*
     * Customer resource owner organization name.
     */
    private String customerOrgName;

    /*
     * Customer resource contact email.
     */
    private String customerEmail;

    /*
     * Customer resource transit Asn (autonomous system number).
     */
    private String customerTransitAsn;

    /*
     * Customer resource transit state.
     */
    private CustomerTransitState customerTransitState;

    /*
     * Customer resource Asn (autonomous system number).
     */
    private String customerAsn;

    /*
     * Customer resource estimated Asn peering peak in Gbps.
     */
    private Double customerAsnEstimatedEgressPeekGbps;

    /*
     * Customer resource entitlement Sku Id.
     */
    private String customerEntitlementSkuId;

    /*
     * Customer resource entitlement Sku Guid.
     */
    private String customerEntitlementSkuGuid;

    /*
     * Customer resource entitlement Sku name.
     */
    private String customerEntitlementSkuName;

    /*
     * Customer resource entitlement expiration date string.
     */
    private OffsetDateTime customerEntitlementExpiration;

    /*
     * Optional property #1 of Mcc response object.
     */
    private String optionalProperty1;

    /*
     * Optional property #2 of Mcc response object.
     */
    private String optionalProperty2;

    /*
     * Optional property #3 of Mcc response object.
     */
    private String optionalProperty3;

    /*
     * Optional property #4 of Mcc response object.
     */
    private String optionalProperty4;

    /*
     * Optional property #5 of Mcc response object.
     */
    private String optionalProperty5;

    /**
     * Creates an instance of AdditionalCustomerProperties class.
     */
    public AdditionalCustomerProperties() {
    }

    /**
     * Get the peeringDbLastUpdateTime property: Customer resource last PeeringDB update timestamp.
     * 
     * @return the peeringDbLastUpdateTime value.
     */
    public OffsetDateTime peeringDbLastUpdateTime() {
        return this.peeringDbLastUpdateTime;
    }

    /**
     * Get the customerPropertiesOverviewCacheEfficiency property: Customer resource cache efficiency.
     * 
     * @return the customerPropertiesOverviewCacheEfficiency value.
     */
    public Double customerPropertiesOverviewCacheEfficiency() {
        return this.customerPropertiesOverviewCacheEfficiency;
    }

    /**
     * Get the customerPropertiesOverviewAverageEgressMbps property: Customer resource average egress in Mbps.
     * 
     * @return the customerPropertiesOverviewAverageEgressMbps value.
     */
    public Double customerPropertiesOverviewAverageEgressMbps() {
        return this.customerPropertiesOverviewAverageEgressMbps;
    }

    /**
     * Get the customerPropertiesOverviewAverageMissMbps property: Customer resource average cache miss throughput in
     * Mbps.
     * 
     * @return the customerPropertiesOverviewAverageMissMbps value.
     */
    public Double customerPropertiesOverviewAverageMissMbps() {
        return this.customerPropertiesOverviewAverageMissMbps;
    }

    /**
     * Get the customerPropertiesOverviewEgressMbpsMax property: Customer resource maximum egress in Mbps.
     * 
     * @return the customerPropertiesOverviewEgressMbpsMax value.
     */
    public Double customerPropertiesOverviewEgressMbpsMax() {
        return this.customerPropertiesOverviewEgressMbpsMax;
    }

    /**
     * Get the customerPropertiesOverviewEgressMbpsMaxDateTime property: Customer resource peak egress timestamp.
     * 
     * @return the customerPropertiesOverviewEgressMbpsMaxDateTime value.
     */
    public OffsetDateTime customerPropertiesOverviewEgressMbpsMaxDateTime() {
        return this.customerPropertiesOverviewEgressMbpsMaxDateTime;
    }

    /**
     * Get the customerPropertiesOverviewMissMbpsMax property: Customer resource maximum cache miss throughput in Mbps.
     * 
     * @return the customerPropertiesOverviewMissMbpsMax value.
     */
    public Double customerPropertiesOverviewMissMbpsMax() {
        return this.customerPropertiesOverviewMissMbpsMax;
    }

    /**
     * Get the customerPropertiesOverviewMissMbpsMaxDateTime property: Customer resource peak cache miss throughput
     * timestamp.
     * 
     * @return the customerPropertiesOverviewMissMbpsMaxDateTime value.
     */
    public OffsetDateTime customerPropertiesOverviewMissMbpsMaxDateTime() {
        return this.customerPropertiesOverviewMissMbpsMaxDateTime;
    }

    /**
     * Get the customerPropertiesOverviewCacheNodesHealthyCount property: Customer resource total healthy cache nodes.
     * 
     * @return the customerPropertiesOverviewCacheNodesHealthyCount value.
     */
    public Integer customerPropertiesOverviewCacheNodesHealthyCount() {
        return this.customerPropertiesOverviewCacheNodesHealthyCount;
    }

    /**
     * Get the customerPropertiesOverviewCacheNodesUnhealthyCount property: Customer resource total unhealthy cache
     * nodes.
     * 
     * @return the customerPropertiesOverviewCacheNodesUnhealthyCount value.
     */
    public Integer customerPropertiesOverviewCacheNodesUnhealthyCount() {
        return this.customerPropertiesOverviewCacheNodesUnhealthyCount;
    }

    /**
     * Get the signupStatus property: Customer resource signup status as boolean.
     * 
     * @return the signupStatus value.
     */
    public Boolean signupStatus() {
        return this.signupStatus;
    }

    /**
     * Get the signupStatusCode property: Customer resource signup status as integer code.
     * 
     * @return the signupStatusCode value.
     */
    public Integer signupStatusCode() {
        return this.signupStatusCode;
    }

    /**
     * Get the signupStatusText property: Customer resource signup status as string text.
     * 
     * @return the signupStatusText value.
     */
    public String signupStatusText() {
        return this.signupStatusText;
    }

    /**
     * Get the signupPhaseStatusCode property: Customer resource signup phase status code as integer.
     * 
     * @return the signupPhaseStatusCode value.
     */
    public Integer signupPhaseStatusCode() {
        return this.signupPhaseStatusCode;
    }

    /**
     * Get the signupPhaseStatusText property: Customer resource signup phase status as string text.
     * 
     * @return the signupPhaseStatusText value.
     */
    public String signupPhaseStatusText() {
        return this.signupPhaseStatusText;
    }

    /**
     * Get the peeringDbLastUpdateDate property: Customer resource last PeeringDB update timestamp.
     * 
     * @return the peeringDbLastUpdateDate value.
     */
    public OffsetDateTime peeringDbLastUpdateDate() {
        return this.peeringDbLastUpdateDate;
    }

    /**
     * Get the customerOrgName property: Customer resource owner organization name.
     * 
     * @return the customerOrgName value.
     */
    public String customerOrgName() {
        return this.customerOrgName;
    }

    /**
     * Get the customerEmail property: Customer resource contact email.
     * 
     * @return the customerEmail value.
     */
    public String customerEmail() {
        return this.customerEmail;
    }

    /**
     * Set the customerEmail property: Customer resource contact email.
     * 
     * @param customerEmail the customerEmail value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withCustomerEmail(String customerEmail) {
        this.customerEmail = customerEmail;
        return this;
    }

    /**
     * Get the customerTransitAsn property: Customer resource transit Asn (autonomous system number).
     * 
     * @return the customerTransitAsn value.
     */
    public String customerTransitAsn() {
        return this.customerTransitAsn;
    }

    /**
     * Set the customerTransitAsn property: Customer resource transit Asn (autonomous system number).
     * 
     * @param customerTransitAsn the customerTransitAsn value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withCustomerTransitAsn(String customerTransitAsn) {
        this.customerTransitAsn = customerTransitAsn;
        return this;
    }

    /**
     * Get the customerTransitState property: Customer resource transit state.
     * 
     * @return the customerTransitState value.
     */
    public CustomerTransitState customerTransitState() {
        return this.customerTransitState;
    }

    /**
     * Set the customerTransitState property: Customer resource transit state.
     * 
     * @param customerTransitState the customerTransitState value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withCustomerTransitState(CustomerTransitState customerTransitState) {
        this.customerTransitState = customerTransitState;
        return this;
    }

    /**
     * Get the customerAsn property: Customer resource Asn (autonomous system number).
     * 
     * @return the customerAsn value.
     */
    public String customerAsn() {
        return this.customerAsn;
    }

    /**
     * Set the customerAsn property: Customer resource Asn (autonomous system number).
     * 
     * @param customerAsn the customerAsn value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withCustomerAsn(String customerAsn) {
        this.customerAsn = customerAsn;
        return this;
    }

    /**
     * Get the customerAsnEstimatedEgressPeekGbps property: Customer resource estimated Asn peering peak in Gbps.
     * 
     * @return the customerAsnEstimatedEgressPeekGbps value.
     */
    public Double customerAsnEstimatedEgressPeekGbps() {
        return this.customerAsnEstimatedEgressPeekGbps;
    }

    /**
     * Get the customerEntitlementSkuId property: Customer resource entitlement Sku Id.
     * 
     * @return the customerEntitlementSkuId value.
     */
    public String customerEntitlementSkuId() {
        return this.customerEntitlementSkuId;
    }

    /**
     * Set the customerEntitlementSkuId property: Customer resource entitlement Sku Id.
     * 
     * @param customerEntitlementSkuId the customerEntitlementSkuId value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withCustomerEntitlementSkuId(String customerEntitlementSkuId) {
        this.customerEntitlementSkuId = customerEntitlementSkuId;
        return this;
    }

    /**
     * Get the customerEntitlementSkuGuid property: Customer resource entitlement Sku Guid.
     * 
     * @return the customerEntitlementSkuGuid value.
     */
    public String customerEntitlementSkuGuid() {
        return this.customerEntitlementSkuGuid;
    }

    /**
     * Set the customerEntitlementSkuGuid property: Customer resource entitlement Sku Guid.
     * 
     * @param customerEntitlementSkuGuid the customerEntitlementSkuGuid value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withCustomerEntitlementSkuGuid(String customerEntitlementSkuGuid) {
        this.customerEntitlementSkuGuid = customerEntitlementSkuGuid;
        return this;
    }

    /**
     * Get the customerEntitlementSkuName property: Customer resource entitlement Sku name.
     * 
     * @return the customerEntitlementSkuName value.
     */
    public String customerEntitlementSkuName() {
        return this.customerEntitlementSkuName;
    }

    /**
     * Set the customerEntitlementSkuName property: Customer resource entitlement Sku name.
     * 
     * @param customerEntitlementSkuName the customerEntitlementSkuName value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withCustomerEntitlementSkuName(String customerEntitlementSkuName) {
        this.customerEntitlementSkuName = customerEntitlementSkuName;
        return this;
    }

    /**
     * Get the customerEntitlementExpiration property: Customer resource entitlement expiration date string.
     * 
     * @return the customerEntitlementExpiration value.
     */
    public OffsetDateTime customerEntitlementExpiration() {
        return this.customerEntitlementExpiration;
    }

    /**
     * Set the customerEntitlementExpiration property: Customer resource entitlement expiration date string.
     * 
     * @param customerEntitlementExpiration the customerEntitlementExpiration value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties
        withCustomerEntitlementExpiration(OffsetDateTime customerEntitlementExpiration) {
        this.customerEntitlementExpiration = customerEntitlementExpiration;
        return this;
    }

    /**
     * Get the optionalProperty1 property: Optional property #1 of Mcc response object.
     * 
     * @return the optionalProperty1 value.
     */
    public String optionalProperty1() {
        return this.optionalProperty1;
    }

    /**
     * Set the optionalProperty1 property: Optional property #1 of Mcc response object.
     * 
     * @param optionalProperty1 the optionalProperty1 value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withOptionalProperty1(String optionalProperty1) {
        this.optionalProperty1 = optionalProperty1;
        return this;
    }

    /**
     * Get the optionalProperty2 property: Optional property #2 of Mcc response object.
     * 
     * @return the optionalProperty2 value.
     */
    public String optionalProperty2() {
        return this.optionalProperty2;
    }

    /**
     * Set the optionalProperty2 property: Optional property #2 of Mcc response object.
     * 
     * @param optionalProperty2 the optionalProperty2 value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withOptionalProperty2(String optionalProperty2) {
        this.optionalProperty2 = optionalProperty2;
        return this;
    }

    /**
     * Get the optionalProperty3 property: Optional property #3 of Mcc response object.
     * 
     * @return the optionalProperty3 value.
     */
    public String optionalProperty3() {
        return this.optionalProperty3;
    }

    /**
     * Set the optionalProperty3 property: Optional property #3 of Mcc response object.
     * 
     * @param optionalProperty3 the optionalProperty3 value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withOptionalProperty3(String optionalProperty3) {
        this.optionalProperty3 = optionalProperty3;
        return this;
    }

    /**
     * Get the optionalProperty4 property: Optional property #4 of Mcc response object.
     * 
     * @return the optionalProperty4 value.
     */
    public String optionalProperty4() {
        return this.optionalProperty4;
    }

    /**
     * Set the optionalProperty4 property: Optional property #4 of Mcc response object.
     * 
     * @param optionalProperty4 the optionalProperty4 value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withOptionalProperty4(String optionalProperty4) {
        this.optionalProperty4 = optionalProperty4;
        return this;
    }

    /**
     * Get the optionalProperty5 property: Optional property #5 of Mcc response object.
     * 
     * @return the optionalProperty5 value.
     */
    public String optionalProperty5() {
        return this.optionalProperty5;
    }

    /**
     * Set the optionalProperty5 property: Optional property #5 of Mcc response object.
     * 
     * @param optionalProperty5 the optionalProperty5 value to set.
     * @return the AdditionalCustomerProperties object itself.
     */
    public AdditionalCustomerProperties withOptionalProperty5(String optionalProperty5) {
        this.optionalProperty5 = optionalProperty5;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("customerEmail", this.customerEmail);
        jsonWriter.writeStringField("customerTransitAsn", this.customerTransitAsn);
        jsonWriter.writeStringField("customerTransitState",
            this.customerTransitState == null ? null : this.customerTransitState.toString());
        jsonWriter.writeStringField("customerAsn", this.customerAsn);
        jsonWriter.writeStringField("customerEntitlementSkuId", this.customerEntitlementSkuId);
        jsonWriter.writeStringField("customerEntitlementSkuGuid", this.customerEntitlementSkuGuid);
        jsonWriter.writeStringField("customerEntitlementSkuName", this.customerEntitlementSkuName);
        jsonWriter.writeStringField("customerEntitlementExpiration",
            this.customerEntitlementExpiration == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.customerEntitlementExpiration));
        jsonWriter.writeStringField("optionalProperty1", this.optionalProperty1);
        jsonWriter.writeStringField("optionalProperty2", this.optionalProperty2);
        jsonWriter.writeStringField("optionalProperty3", this.optionalProperty3);
        jsonWriter.writeStringField("optionalProperty4", this.optionalProperty4);
        jsonWriter.writeStringField("optionalProperty5", this.optionalProperty5);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AdditionalCustomerProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AdditionalCustomerProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AdditionalCustomerProperties.
     */
    public static AdditionalCustomerProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AdditionalCustomerProperties deserializedAdditionalCustomerProperties = new AdditionalCustomerProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("peeringDbLastUpdateTime".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.peeringDbLastUpdateTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("customerPropertiesOverviewCacheEfficiency".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerPropertiesOverviewCacheEfficiency
                        = reader.getNullable(JsonReader::getDouble);
                } else if ("customerPropertiesOverviewAverageEgressMbps".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerPropertiesOverviewAverageEgressMbps
                        = reader.getNullable(JsonReader::getDouble);
                } else if ("customerPropertiesOverviewAverageMissMbps".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerPropertiesOverviewAverageMissMbps
                        = reader.getNullable(JsonReader::getDouble);
                } else if ("customerPropertiesOverviewEgressMbpsMax".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerPropertiesOverviewEgressMbpsMax
                        = reader.getNullable(JsonReader::getDouble);
                } else if ("customerPropertiesOverviewEgressMbpsMaxDateTime".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerPropertiesOverviewEgressMbpsMaxDateTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("customerPropertiesOverviewMissMbpsMax".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerPropertiesOverviewMissMbpsMax
                        = reader.getNullable(JsonReader::getDouble);
                } else if ("customerPropertiesOverviewMissMbpsMaxDateTime".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerPropertiesOverviewMissMbpsMaxDateTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("customerPropertiesOverviewCacheNodesHealthyCount".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerPropertiesOverviewCacheNodesHealthyCount
                        = reader.getNullable(JsonReader::getInt);
                } else if ("customerPropertiesOverviewCacheNodesUnhealthyCount".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerPropertiesOverviewCacheNodesUnhealthyCount
                        = reader.getNullable(JsonReader::getInt);
                } else if ("signupStatus".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.signupStatus = reader.getNullable(JsonReader::getBoolean);
                } else if ("signupStatusCode".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.signupStatusCode = reader.getNullable(JsonReader::getInt);
                } else if ("signupStatusText".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.signupStatusText = reader.getString();
                } else if ("signupPhaseStatusCode".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.signupPhaseStatusCode
                        = reader.getNullable(JsonReader::getInt);
                } else if ("signupPhaseStatusText".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.signupPhaseStatusText = reader.getString();
                } else if ("peeringDbLastUpdateDate".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.peeringDbLastUpdateDate = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("customerOrgName".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerOrgName = reader.getString();
                } else if ("customerEmail".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerEmail = reader.getString();
                } else if ("customerTransitAsn".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerTransitAsn = reader.getString();
                } else if ("customerTransitState".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerTransitState
                        = CustomerTransitState.fromString(reader.getString());
                } else if ("customerAsn".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerAsn = reader.getString();
                } else if ("customerAsnEstimatedEgressPeekGbps".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerAsnEstimatedEgressPeekGbps
                        = reader.getNullable(JsonReader::getDouble);
                } else if ("customerEntitlementSkuId".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerEntitlementSkuId = reader.getString();
                } else if ("customerEntitlementSkuGuid".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerEntitlementSkuGuid = reader.getString();
                } else if ("customerEntitlementSkuName".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerEntitlementSkuName = reader.getString();
                } else if ("customerEntitlementExpiration".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.customerEntitlementExpiration = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("optionalProperty1".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.optionalProperty1 = reader.getString();
                } else if ("optionalProperty2".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.optionalProperty2 = reader.getString();
                } else if ("optionalProperty3".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.optionalProperty3 = reader.getString();
                } else if ("optionalProperty4".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.optionalProperty4 = reader.getString();
                } else if ("optionalProperty5".equals(fieldName)) {
                    deserializedAdditionalCustomerProperties.optionalProperty5 = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAdditionalCustomerProperties;
        });
    }
}
