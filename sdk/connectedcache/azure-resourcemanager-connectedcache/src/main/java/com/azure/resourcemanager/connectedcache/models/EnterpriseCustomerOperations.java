// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.connectedcache.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of EnterpriseCustomerOperations.
 */
public interface EnterpriseCustomerOperations {
    /**
     * Retrieves the properties of a Enterprise customer.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return connectedCache Resource along with {@link Response}.
     */
    Response<EnterprisePreviewResource> getByResourceGroupWithResponse(String resourceGroupName,
        String customerResourceName, Context context);

    /**
     * Retrieves the properties of a Enterprise customer.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return connectedCache Resource.
     */
    EnterprisePreviewResource getByResourceGroup(String resourceGroupName, String customerResourceName);

    /**
     * Deletes an existing customer Enterprise resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(String resourceGroupName, String customerResourceName,
        Context context);

    /**
     * Deletes an existing customer Enterprise resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String customerResourceName);

    /**
     * Retrieves the properties of all ConnectedCache enterpriseCustomers.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnterprisePreviewResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EnterprisePreviewResource> listByResourceGroup(String resourceGroupName);

    /**
     * Retrieves the properties of all ConnectedCache enterpriseCustomers.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnterprisePreviewResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EnterprisePreviewResource> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Retrieves the properties of all ConnectedCaches.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnterprisePreviewResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EnterprisePreviewResource> list();

    /**
     * Retrieves the properties of all ConnectedCaches.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnterprisePreviewResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EnterprisePreviewResource> list(Context context);

    /**
     * Retrieves the properties of a Enterprise customer.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return connectedCache Resource along with {@link Response}.
     */
    EnterprisePreviewResource getById(String id);

    /**
     * Retrieves the properties of a Enterprise customer.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return connectedCache Resource along with {@link Response}.
     */
    Response<EnterprisePreviewResource> getByIdWithResponse(String id, Context context);

    /**
     * Deletes an existing customer Enterprise resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes an existing customer Enterprise resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new EnterprisePreviewResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new EnterprisePreviewResource definition.
     */
    EnterprisePreviewResource.DefinitionStages.Blank define(String name);
}
