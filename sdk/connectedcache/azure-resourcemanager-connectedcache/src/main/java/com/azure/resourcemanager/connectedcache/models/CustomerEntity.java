// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.connectedcache.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Model representing Customer resource for ConnectedCache resource.
 */
@Fluent
public final class CustomerEntity implements JsonSerializable<CustomerEntity> {
    /*
     * Customer resource Azure fully qualified resource Id.
     */
    private String fullyQualifiedResourceId;

    /*
     * Customer resource Guid Id.
     */
    private String customerId;

    /*
     * Customer resource name.
     */
    private String customerName;

    /*
     * Customer resource contact email.
     */
    private String contactEmail;

    /*
     * Customer resource contact phone.
     */
    private String contactPhone;

    /*
     * Customer resource contact full name.
     */
    private String contactName;

    /*
     * Customer resource entitlement flag as boolean.
     */
    private Boolean isEntitled;

    /*
     * Customer resource Mcc release version.
     */
    private Integer releaseVersion;

    /*
     * Customer resource create async operation Id.
     */
    private String createAsyncOperationId;

    /*
     * Customer resource deletion async operation Id.
     */
    private String deleteAsyncOperationId;

    /*
     * Customer resource client tenant Id of subscription.
     */
    private String clientTenantId;

    /*
     * Customer resource sync attempts.
     */
    private Integer synchWithAzureAttemptsCount;

    /*
     * Customer resource last Azure sync timestamp.
     */
    private OffsetDateTime lastSyncWithAzureTimestamp;

    /*
     * Customer resource flag for enterprise management as boolean.
     */
    private Boolean isEnterpriseManaged;

    /*
     * Customer resource flag for migration.
     */
    private Boolean shouldMigrate;

    /*
     * Customer resource flag for resending signup code as boolean.
     */
    private Boolean resendSignupCode;

    /*
     * Customer resource flag for requiring verification of signup code as boolean.
     */
    private Boolean verifySignupCode;

    /*
     * Customer resource phrase for verifying signup.
     */
    private String verifySignupPhrase;

    /**
     * Creates an instance of CustomerEntity class.
     */
    public CustomerEntity() {
    }

    /**
     * Get the fullyQualifiedResourceId property: Customer resource Azure fully qualified resource Id.
     * 
     * @return the fullyQualifiedResourceId value.
     */
    public String fullyQualifiedResourceId() {
        return this.fullyQualifiedResourceId;
    }

    /**
     * Set the fullyQualifiedResourceId property: Customer resource Azure fully qualified resource Id.
     * 
     * @param fullyQualifiedResourceId the fullyQualifiedResourceId value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withFullyQualifiedResourceId(String fullyQualifiedResourceId) {
        this.fullyQualifiedResourceId = fullyQualifiedResourceId;
        return this;
    }

    /**
     * Get the customerId property: Customer resource Guid Id.
     * 
     * @return the customerId value.
     */
    public String customerId() {
        return this.customerId;
    }

    /**
     * Get the customerName property: Customer resource name.
     * 
     * @return the customerName value.
     */
    public String customerName() {
        return this.customerName;
    }

    /**
     * Set the customerName property: Customer resource name.
     * 
     * @param customerName the customerName value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withCustomerName(String customerName) {
        this.customerName = customerName;
        return this;
    }

    /**
     * Get the contactEmail property: Customer resource contact email.
     * 
     * @return the contactEmail value.
     */
    public String contactEmail() {
        return this.contactEmail;
    }

    /**
     * Set the contactEmail property: Customer resource contact email.
     * 
     * @param contactEmail the contactEmail value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withContactEmail(String contactEmail) {
        this.contactEmail = contactEmail;
        return this;
    }

    /**
     * Get the contactPhone property: Customer resource contact phone.
     * 
     * @return the contactPhone value.
     */
    public String contactPhone() {
        return this.contactPhone;
    }

    /**
     * Set the contactPhone property: Customer resource contact phone.
     * 
     * @param contactPhone the contactPhone value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withContactPhone(String contactPhone) {
        this.contactPhone = contactPhone;
        return this;
    }

    /**
     * Get the contactName property: Customer resource contact full name.
     * 
     * @return the contactName value.
     */
    public String contactName() {
        return this.contactName;
    }

    /**
     * Set the contactName property: Customer resource contact full name.
     * 
     * @param contactName the contactName value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withContactName(String contactName) {
        this.contactName = contactName;
        return this;
    }

    /**
     * Get the isEntitled property: Customer resource entitlement flag as boolean.
     * 
     * @return the isEntitled value.
     */
    public Boolean isEntitled() {
        return this.isEntitled;
    }

    /**
     * Set the isEntitled property: Customer resource entitlement flag as boolean.
     * 
     * @param isEntitled the isEntitled value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withIsEntitled(Boolean isEntitled) {
        this.isEntitled = isEntitled;
        return this;
    }

    /**
     * Get the releaseVersion property: Customer resource Mcc release version.
     * 
     * @return the releaseVersion value.
     */
    public Integer releaseVersion() {
        return this.releaseVersion;
    }

    /**
     * Set the releaseVersion property: Customer resource Mcc release version.
     * 
     * @param releaseVersion the releaseVersion value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withReleaseVersion(Integer releaseVersion) {
        this.releaseVersion = releaseVersion;
        return this;
    }

    /**
     * Get the createAsyncOperationId property: Customer resource create async operation Id.
     * 
     * @return the createAsyncOperationId value.
     */
    public String createAsyncOperationId() {
        return this.createAsyncOperationId;
    }

    /**
     * Get the deleteAsyncOperationId property: Customer resource deletion async operation Id.
     * 
     * @return the deleteAsyncOperationId value.
     */
    public String deleteAsyncOperationId() {
        return this.deleteAsyncOperationId;
    }

    /**
     * Get the clientTenantId property: Customer resource client tenant Id of subscription.
     * 
     * @return the clientTenantId value.
     */
    public String clientTenantId() {
        return this.clientTenantId;
    }

    /**
     * Set the clientTenantId property: Customer resource client tenant Id of subscription.
     * 
     * @param clientTenantId the clientTenantId value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withClientTenantId(String clientTenantId) {
        this.clientTenantId = clientTenantId;
        return this;
    }

    /**
     * Get the synchWithAzureAttemptsCount property: Customer resource sync attempts.
     * 
     * @return the synchWithAzureAttemptsCount value.
     */
    public Integer synchWithAzureAttemptsCount() {
        return this.synchWithAzureAttemptsCount;
    }

    /**
     * Get the lastSyncWithAzureTimestamp property: Customer resource last Azure sync timestamp.
     * 
     * @return the lastSyncWithAzureTimestamp value.
     */
    public OffsetDateTime lastSyncWithAzureTimestamp() {
        return this.lastSyncWithAzureTimestamp;
    }

    /**
     * Get the isEnterpriseManaged property: Customer resource flag for enterprise management as boolean.
     * 
     * @return the isEnterpriseManaged value.
     */
    public Boolean isEnterpriseManaged() {
        return this.isEnterpriseManaged;
    }

    /**
     * Set the isEnterpriseManaged property: Customer resource flag for enterprise management as boolean.
     * 
     * @param isEnterpriseManaged the isEnterpriseManaged value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withIsEnterpriseManaged(Boolean isEnterpriseManaged) {
        this.isEnterpriseManaged = isEnterpriseManaged;
        return this;
    }

    /**
     * Get the shouldMigrate property: Customer resource flag for migration.
     * 
     * @return the shouldMigrate value.
     */
    public Boolean shouldMigrate() {
        return this.shouldMigrate;
    }

    /**
     * Set the shouldMigrate property: Customer resource flag for migration.
     * 
     * @param shouldMigrate the shouldMigrate value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withShouldMigrate(Boolean shouldMigrate) {
        this.shouldMigrate = shouldMigrate;
        return this;
    }

    /**
     * Get the resendSignupCode property: Customer resource flag for resending signup code as boolean.
     * 
     * @return the resendSignupCode value.
     */
    public Boolean resendSignupCode() {
        return this.resendSignupCode;
    }

    /**
     * Set the resendSignupCode property: Customer resource flag for resending signup code as boolean.
     * 
     * @param resendSignupCode the resendSignupCode value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withResendSignupCode(Boolean resendSignupCode) {
        this.resendSignupCode = resendSignupCode;
        return this;
    }

    /**
     * Get the verifySignupCode property: Customer resource flag for requiring verification of signup code as boolean.
     * 
     * @return the verifySignupCode value.
     */
    public Boolean verifySignupCode() {
        return this.verifySignupCode;
    }

    /**
     * Set the verifySignupCode property: Customer resource flag for requiring verification of signup code as boolean.
     * 
     * @param verifySignupCode the verifySignupCode value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withVerifySignupCode(Boolean verifySignupCode) {
        this.verifySignupCode = verifySignupCode;
        return this;
    }

    /**
     * Get the verifySignupPhrase property: Customer resource phrase for verifying signup.
     * 
     * @return the verifySignupPhrase value.
     */
    public String verifySignupPhrase() {
        return this.verifySignupPhrase;
    }

    /**
     * Set the verifySignupPhrase property: Customer resource phrase for verifying signup.
     * 
     * @param verifySignupPhrase the verifySignupPhrase value to set.
     * @return the CustomerEntity object itself.
     */
    public CustomerEntity withVerifySignupPhrase(String verifySignupPhrase) {
        this.verifySignupPhrase = verifySignupPhrase;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("fullyQualifiedResourceId", this.fullyQualifiedResourceId);
        jsonWriter.writeStringField("customerName", this.customerName);
        jsonWriter.writeStringField("contactEmail", this.contactEmail);
        jsonWriter.writeStringField("contactPhone", this.contactPhone);
        jsonWriter.writeStringField("contactName", this.contactName);
        jsonWriter.writeBooleanField("isEntitled", this.isEntitled);
        jsonWriter.writeNumberField("releaseVersion", this.releaseVersion);
        jsonWriter.writeStringField("clientTenantId", this.clientTenantId);
        jsonWriter.writeBooleanField("isEnterpriseManaged", this.isEnterpriseManaged);
        jsonWriter.writeBooleanField("shouldMigrate", this.shouldMigrate);
        jsonWriter.writeBooleanField("resendSignupCode", this.resendSignupCode);
        jsonWriter.writeBooleanField("verifySignupCode", this.verifySignupCode);
        jsonWriter.writeStringField("verifySignupPhrase", this.verifySignupPhrase);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomerEntity from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomerEntity if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the CustomerEntity.
     */
    public static CustomerEntity fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomerEntity deserializedCustomerEntity = new CustomerEntity();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("fullyQualifiedResourceId".equals(fieldName)) {
                    deserializedCustomerEntity.fullyQualifiedResourceId = reader.getString();
                } else if ("customerId".equals(fieldName)) {
                    deserializedCustomerEntity.customerId = reader.getString();
                } else if ("customerName".equals(fieldName)) {
                    deserializedCustomerEntity.customerName = reader.getString();
                } else if ("contactEmail".equals(fieldName)) {
                    deserializedCustomerEntity.contactEmail = reader.getString();
                } else if ("contactPhone".equals(fieldName)) {
                    deserializedCustomerEntity.contactPhone = reader.getString();
                } else if ("contactName".equals(fieldName)) {
                    deserializedCustomerEntity.contactName = reader.getString();
                } else if ("isEntitled".equals(fieldName)) {
                    deserializedCustomerEntity.isEntitled = reader.getNullable(JsonReader::getBoolean);
                } else if ("releaseVersion".equals(fieldName)) {
                    deserializedCustomerEntity.releaseVersion = reader.getNullable(JsonReader::getInt);
                } else if ("createAsyncOperationId".equals(fieldName)) {
                    deserializedCustomerEntity.createAsyncOperationId = reader.getString();
                } else if ("deleteAsyncOperationId".equals(fieldName)) {
                    deserializedCustomerEntity.deleteAsyncOperationId = reader.getString();
                } else if ("clientTenantId".equals(fieldName)) {
                    deserializedCustomerEntity.clientTenantId = reader.getString();
                } else if ("synchWithAzureAttemptsCount".equals(fieldName)) {
                    deserializedCustomerEntity.synchWithAzureAttemptsCount = reader.getNullable(JsonReader::getInt);
                } else if ("lastSyncWithAzureTimestamp".equals(fieldName)) {
                    deserializedCustomerEntity.lastSyncWithAzureTimestamp = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("isEnterpriseManaged".equals(fieldName)) {
                    deserializedCustomerEntity.isEnterpriseManaged = reader.getNullable(JsonReader::getBoolean);
                } else if ("shouldMigrate".equals(fieldName)) {
                    deserializedCustomerEntity.shouldMigrate = reader.getNullable(JsonReader::getBoolean);
                } else if ("resendSignupCode".equals(fieldName)) {
                    deserializedCustomerEntity.resendSignupCode = reader.getNullable(JsonReader::getBoolean);
                } else if ("verifySignupCode".equals(fieldName)) {
                    deserializedCustomerEntity.verifySignupCode = reader.getNullable(JsonReader::getBoolean);
                } else if ("verifySignupPhrase".equals(fieldName)) {
                    deserializedCustomerEntity.verifySignupPhrase = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomerEntity;
        });
    }
}
