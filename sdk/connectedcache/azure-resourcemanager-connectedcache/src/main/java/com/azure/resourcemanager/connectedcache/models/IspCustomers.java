// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.connectedcache.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of IspCustomers.
 */
public interface IspCustomers {
    /**
     * Gets the ispCustomer resource information using this get call.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ispCustomer resource information using this get call along with {@link Response}.
     */
    Response<IspCustomerResource> getByResourceGroupWithResponse(String resourceGroupName, String customerResourceName,
        Context context);

    /**
     * Gets the ispCustomer resource information using this get call.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ispCustomer resource information using this get call.
     */
    IspCustomerResource getByResourceGroup(String resourceGroupName, String customerResourceName);

    /**
     * This api deletes an existing ispCustomer resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String customerResourceName);

    /**
     * This api deletes an existing ispCustomer resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String customerResourceName, Context context);

    /**
     * This api gets the information about all ispCustomer resources under the given subscription and resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a IspCustomerResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<IspCustomerResource> listByResourceGroup(String resourceGroupName);

    /**
     * This api gets the information about all ispCustomer resources under the given subscription and resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a IspCustomerResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<IspCustomerResource> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * This api gets information about all ispCustomer resources under the given subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a IspCustomerResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<IspCustomerResource> list();

    /**
     * This api gets information about all ispCustomer resources under the given subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a IspCustomerResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<IspCustomerResource> list(Context context);

    /**
     * Gets the ispCustomer resource information using this get call.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ispCustomer resource information using this get call along with {@link Response}.
     */
    IspCustomerResource getById(String id);

    /**
     * Gets the ispCustomer resource information using this get call.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ispCustomer resource information using this get call along with {@link Response}.
     */
    Response<IspCustomerResource> getByIdWithResponse(String id, Context context);

    /**
     * This api deletes an existing ispCustomer resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * This api deletes an existing ispCustomer resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new IspCustomerResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new IspCustomerResource definition.
     */
    IspCustomerResource.DefinitionStages.Blank define(String name);
}
