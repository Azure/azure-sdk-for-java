// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.connectedcache.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Mcc cache node resource auto update history properties.
 */
@Immutable
public final class MccCacheNodeAutoUpdateHistoryProperties
    implements JsonSerializable<MccCacheNodeAutoUpdateHistoryProperties> {
    /*
     * Mcc customer resource Id.
     */
    private String customerId;

    /*
     * Mcc cache node resource Id.
     */
    private String cacheNodeId;

    /*
     * Cache node resource auto update history information.
     */
    private List<MccCacheNodeAutoUpdateInfo> autoUpdateHistory;

    /**
     * Creates an instance of MccCacheNodeAutoUpdateHistoryProperties class.
     */
    private MccCacheNodeAutoUpdateHistoryProperties() {
    }

    /**
     * Get the customerId property: Mcc customer resource Id.
     * 
     * @return the customerId value.
     */
    public String customerId() {
        return this.customerId;
    }

    /**
     * Get the cacheNodeId property: Mcc cache node resource Id.
     * 
     * @return the cacheNodeId value.
     */
    public String cacheNodeId() {
        return this.cacheNodeId;
    }

    /**
     * Get the autoUpdateHistory property: Cache node resource auto update history information.
     * 
     * @return the autoUpdateHistory value.
     */
    public List<MccCacheNodeAutoUpdateInfo> autoUpdateHistory() {
        return this.autoUpdateHistory;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (autoUpdateHistory() != null) {
            autoUpdateHistory().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("autoUpdateHistory", this.autoUpdateHistory,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MccCacheNodeAutoUpdateHistoryProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MccCacheNodeAutoUpdateHistoryProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MccCacheNodeAutoUpdateHistoryProperties.
     */
    public static MccCacheNodeAutoUpdateHistoryProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MccCacheNodeAutoUpdateHistoryProperties deserializedMccCacheNodeAutoUpdateHistoryProperties
                = new MccCacheNodeAutoUpdateHistoryProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("customerId".equals(fieldName)) {
                    deserializedMccCacheNodeAutoUpdateHistoryProperties.customerId = reader.getString();
                } else if ("cacheNodeId".equals(fieldName)) {
                    deserializedMccCacheNodeAutoUpdateHistoryProperties.cacheNodeId = reader.getString();
                } else if ("autoUpdateHistory".equals(fieldName)) {
                    List<MccCacheNodeAutoUpdateInfo> autoUpdateHistory
                        = reader.readArray(reader1 -> MccCacheNodeAutoUpdateInfo.fromJson(reader1));
                    deserializedMccCacheNodeAutoUpdateHistoryProperties.autoUpdateHistory = autoUpdateHistory;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMccCacheNodeAutoUpdateHistoryProperties;
        });
    }
}
