// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.connectedcache.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.connectedcache.fluent.models.IspCustomerResourceInner;
import com.azure.resourcemanager.connectedcache.models.ConnectedCachePatchResource;

/**
 * An instance of this class provides access to all the operations defined in IspCustomersClient.
 */
public interface IspCustomersClient {
    /**
     * Gets the ispCustomer resource information using this get call.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ispCustomer resource information using this get call along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<IspCustomerResourceInner> getByResourceGroupWithResponse(String resourceGroupName,
        String customerResourceName, Context context);

    /**
     * Gets the ispCustomer resource information using this get call.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ispCustomer resource information using this get call.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IspCustomerResourceInner getByResourceGroup(String resourceGroupName, String customerResourceName);

    /**
     * This api creates an ispCustomer with the specified create parameters.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents the high level Nodes needed to provision isp customer
     * resources.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<IspCustomerResourceInner>, IspCustomerResourceInner>
        beginCreateOrUpdate(String resourceGroupName, String customerResourceName, IspCustomerResourceInner resource);

    /**
     * This api creates an ispCustomer with the specified create parameters.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents the high level Nodes needed to provision isp customer
     * resources.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<IspCustomerResourceInner>, IspCustomerResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String customerResourceName, IspCustomerResourceInner resource, Context context);

    /**
     * This api creates an ispCustomer with the specified create parameters.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents the high level Nodes needed to provision isp customer resources.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IspCustomerResourceInner createOrUpdate(String resourceGroupName, String customerResourceName,
        IspCustomerResourceInner resource);

    /**
     * This api creates an ispCustomer with the specified create parameters.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents the high level Nodes needed to provision isp customer resources.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IspCustomerResourceInner createOrUpdate(String resourceGroupName, String customerResourceName,
        IspCustomerResourceInner resource, Context context);

    /**
     * This api updates an existing ispCustomer resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents the high level Nodes needed to provision isp customer resources along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<IspCustomerResourceInner> updateWithResponse(String resourceGroupName, String customerResourceName,
        ConnectedCachePatchResource properties, Context context);

    /**
     * This api updates an existing ispCustomer resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents the high level Nodes needed to provision isp customer resources.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IspCustomerResourceInner update(String resourceGroupName, String customerResourceName,
        ConnectedCachePatchResource properties);

    /**
     * This api deletes an existing ispCustomer resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String customerResourceName);

    /**
     * This api deletes an existing ispCustomer resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String customerResourceName,
        Context context);

    /**
     * This api deletes an existing ispCustomer resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String customerResourceName);

    /**
     * This api deletes an existing ispCustomer resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String customerResourceName, Context context);

    /**
     * This api gets the information about all ispCustomer resources under the given subscription and resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a IspCustomerResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IspCustomerResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * This api gets the information about all ispCustomer resources under the given subscription and resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a IspCustomerResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IspCustomerResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * This api gets information about all ispCustomer resources under the given subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a IspCustomerResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IspCustomerResourceInner> list();

    /**
     * This api gets information about all ispCustomer resources under the given subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a IspCustomerResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IspCustomerResourceInner> list(Context context);
}
