// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.connectedcache.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of EnterpriseMccCustomers.
 */
public interface EnterpriseMccCustomers {
    /**
     * Gets the enterprise mcc customer resource information using this get call.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the enterprise mcc customer resource information using this get call along with {@link Response}.
     */
    Response<EnterpriseMccCustomerResource> getByResourceGroupWithResponse(String resourceGroupName,
        String customerResourceName, Context context);

    /**
     * Gets the enterprise mcc customer resource information using this get call.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the enterprise mcc customer resource information using this get call.
     */
    EnterpriseMccCustomerResource getByResourceGroup(String resourceGroupName, String customerResourceName);

    /**
     * This api deletes an existing enterprise mcc customer resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String customerResourceName);

    /**
     * This api deletes an existing enterprise mcc customer resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param customerResourceName Name of the Customer resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String customerResourceName, Context context);

    /**
     * This api gets the information about all enterprise mcc customer resources under the given subscription and
     * resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnterpriseMccCustomerResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EnterpriseMccCustomerResource> listByResourceGroup(String resourceGroupName);

    /**
     * This api gets the information about all enterprise mcc customer resources under the given subscription and
     * resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnterpriseMccCustomerResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EnterpriseMccCustomerResource> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * This api gets information about all enterpriseMccCustomer resources under the given subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnterpriseMccCustomerResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EnterpriseMccCustomerResource> list();

    /**
     * This api gets information about all enterpriseMccCustomer resources under the given subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnterpriseMccCustomerResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EnterpriseMccCustomerResource> list(Context context);

    /**
     * Gets the enterprise mcc customer resource information using this get call.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the enterprise mcc customer resource information using this get call along with {@link Response}.
     */
    EnterpriseMccCustomerResource getById(String id);

    /**
     * Gets the enterprise mcc customer resource information using this get call.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the enterprise mcc customer resource information using this get call along with {@link Response}.
     */
    Response<EnterpriseMccCustomerResource> getByIdWithResponse(String id, Context context);

    /**
     * This api deletes an existing enterprise mcc customer resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * This api deletes an existing enterprise mcc customer resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new EnterpriseMccCustomerResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new EnterpriseMccCustomerResource definition.
     */
    EnterpriseMccCustomerResource.DefinitionStages.Blank define(String name);
}
