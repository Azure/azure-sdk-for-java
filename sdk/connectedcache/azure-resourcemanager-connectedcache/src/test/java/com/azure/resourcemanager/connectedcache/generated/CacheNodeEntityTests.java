// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.connectedcache.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.connectedcache.models.AutoUpdateRingType;
import com.azure.resourcemanager.connectedcache.models.CacheNodeEntity;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CacheNodeEntityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CacheNodeEntity model = BinaryData.fromString(
            "{\"fullyQualifiedResourceId\":\"gnzscxaqwo\",\"customerId\":\"hcbonqvpkvlr\",\"customerName\":\"jease\",\"ipAddress\":\"heoflokeyyienjbd\",\"customerIndex\":\"tgrhpdjpjumas\",\"cacheNodeId\":\"zj\",\"cacheNodeName\":\"yegu\",\"customerAsn\":285130790,\"isEnabled\":true,\"maxAllowableEgressInMbps\":1163750271,\"maxAllowableProbability\":8.031827791444979,\"xCid\":\"zvdudgwdslfhotwm\",\"isEnterpriseManaged\":true,\"createAsyncOperationId\":\"wlbjnpgacftade\",\"deleteAsyncOperationId\":\"nltyfsoppusuesnz\",\"clientTenantId\":\"ej\",\"category\":\"vorxzdmohct\",\"releaseVersion\":1095350861,\"lastSyncWithAzureTimestamp\":\"2021-09-06T08:59:32Z\",\"lastUpdatedTimestamp\":\"2021-02-11T14:48:18Z\",\"synchWithAzureAttemptsCount\":1222672575,\"containerConfigurations\":\"nvowgujju\",\"cidrCsv\":[\"kcglhslaz\",\"dyggdtjixhbku\"],\"cidrCsvLastUpdateTime\":\"2020-12-23T07:48:17Z\",\"bgpCidrCsvLastUpdateTime\":\"2021-02-13T10:06:52Z\",\"bgpLastReportedTime\":\"2021-11-08T12:34:04Z\",\"bgpReviewStateText\":\"menevfyexfwh\",\"bgpReviewState\":\"AttentionRequired\",\"bgpReviewFeedback\":\"bvyvdcsity\",\"bgpNumberOfTimesUpdated\":1750107554,\"bgpNumberOfRecords\":1611277697,\"bgpCidrBlocksCount\":1553066482,\"bgpAddressSpace\":1602339472,\"shouldMigrate\":true,\"bgpFileBytesTruncated\":113034311,\"cidrSelectionType\":1860942440,\"isFrozen\":false,\"reviewState\":230831104,\"reviewStateText\":\"vhezrkgqhcj\",\"reviewFeedback\":\"fovgmkqsleyyvxy\",\"configurationState\":\"Configured\",\"configurationStateText\":\"cattpngjcrcczsq\",\"addressSpace\":1452431495,\"workerConnections\":1112494803,\"workerConnectionsLastUpdatedDateTime\":\"2021-01-08T07:37:25Z\",\"containerResyncTrigger\":243553198,\"imageUri\":\"ysou\",\"fullyQualifiedDomainName\":\"e\",\"autoUpdateRingType\":\"Fast\",\"autoUpdateRequestedWeek\":389510865,\"autoUpdateRequestedDay\":996084293,\"autoUpdateRequestedTime\":\"fhyhltrpmopjmcma\"}")
            .toObject(CacheNodeEntity.class);
        Assertions.assertEquals("gnzscxaqwo", model.fullyQualifiedResourceId());
        Assertions.assertEquals("jease", model.customerName());
        Assertions.assertEquals("heoflokeyyienjbd", model.ipAddress());
        Assertions.assertEquals("tgrhpdjpjumas", model.customerIndex());
        Assertions.assertEquals("zj", model.cacheNodeId());
        Assertions.assertEquals("yegu", model.cacheNodeName());
        Assertions.assertEquals(285130790, model.customerAsn());
        Assertions.assertTrue(model.isEnabled());
        Assertions.assertEquals(1163750271, model.maxAllowableEgressInMbps());
        Assertions.assertTrue(model.isEnterpriseManaged());
        Assertions.assertEquals("kcglhslaz", model.cidrCsv().get(0));
        Assertions.assertTrue(model.shouldMigrate());
        Assertions.assertEquals(1860942440, model.cidrSelectionType());
        Assertions.assertEquals("e", model.fullyQualifiedDomainName());
        Assertions.assertEquals(AutoUpdateRingType.FAST, model.autoUpdateRingType());
        Assertions.assertEquals(389510865, model.autoUpdateRequestedWeek());
        Assertions.assertEquals(996084293, model.autoUpdateRequestedDay());
        Assertions.assertEquals("fhyhltrpmopjmcma", model.autoUpdateRequestedTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CacheNodeEntity model = new CacheNodeEntity().withFullyQualifiedResourceId("gnzscxaqwo")
            .withCustomerName("jease")
            .withIpAddress("heoflokeyyienjbd")
            .withCustomerIndex("tgrhpdjpjumas")
            .withCacheNodeId("zj")
            .withCacheNodeName("yegu")
            .withCustomerAsn(285130790)
            .withIsEnabled(true)
            .withMaxAllowableEgressInMbps(1163750271)
            .withIsEnterpriseManaged(true)
            .withCidrCsv(Arrays.asList("kcglhslaz", "dyggdtjixhbku"))
            .withShouldMigrate(true)
            .withCidrSelectionType(1860942440)
            .withFullyQualifiedDomainName("e")
            .withAutoUpdateRingType(AutoUpdateRingType.FAST)
            .withAutoUpdateRequestedWeek(389510865)
            .withAutoUpdateRequestedDay(996084293)
            .withAutoUpdateRequestedTime("fhyhltrpmopjmcma");
        model = BinaryData.fromObject(model).toObject(CacheNodeEntity.class);
        Assertions.assertEquals("gnzscxaqwo", model.fullyQualifiedResourceId());
        Assertions.assertEquals("jease", model.customerName());
        Assertions.assertEquals("heoflokeyyienjbd", model.ipAddress());
        Assertions.assertEquals("tgrhpdjpjumas", model.customerIndex());
        Assertions.assertEquals("zj", model.cacheNodeId());
        Assertions.assertEquals("yegu", model.cacheNodeName());
        Assertions.assertEquals(285130790, model.customerAsn());
        Assertions.assertTrue(model.isEnabled());
        Assertions.assertEquals(1163750271, model.maxAllowableEgressInMbps());
        Assertions.assertTrue(model.isEnterpriseManaged());
        Assertions.assertEquals("kcglhslaz", model.cidrCsv().get(0));
        Assertions.assertTrue(model.shouldMigrate());
        Assertions.assertEquals(1860942440, model.cidrSelectionType());
        Assertions.assertEquals("e", model.fullyQualifiedDomainName());
        Assertions.assertEquals(AutoUpdateRingType.FAST, model.autoUpdateRingType());
        Assertions.assertEquals(389510865, model.autoUpdateRequestedWeek());
        Assertions.assertEquals(996084293, model.autoUpdateRequestedDay());
        Assertions.assertEquals("fhyhltrpmopjmcma", model.autoUpdateRequestedTime());
    }
}
