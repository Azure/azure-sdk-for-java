// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;

/** option A properties object. */
@Fluent
public final class ExternalNetworkPropertiesOptionAProperties extends Layer3OptionAProperties {
    /** Creates an instance of ExternalNetworkPropertiesOptionAProperties class. */
    public ExternalNetworkPropertiesOptionAProperties() {
    }

    /** {@inheritDoc} */
    @Override
    public ExternalNetworkPropertiesOptionAProperties withMtu(Integer mtu) {
        super.withMtu(mtu);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ExternalNetworkPropertiesOptionAProperties withVlanId(Integer vlanId) {
        super.withVlanId(vlanId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ExternalNetworkPropertiesOptionAProperties withPeerAsn(Integer peerAsn) {
        super.withPeerAsn(peerAsn);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ExternalNetworkPropertiesOptionAProperties withBfdConfiguration(BfdConfiguration bfdConfiguration) {
        super.withBfdConfiguration(bfdConfiguration);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ExternalNetworkPropertiesOptionAProperties withPrimaryIpv4Prefix(String primaryIpv4Prefix) {
        super.withPrimaryIpv4Prefix(primaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ExternalNetworkPropertiesOptionAProperties withPrimaryIpv6Prefix(String primaryIpv6Prefix) {
        super.withPrimaryIpv6Prefix(primaryIpv6Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ExternalNetworkPropertiesOptionAProperties withSecondaryIpv4Prefix(String secondaryIpv4Prefix) {
        super.withSecondaryIpv4Prefix(secondaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ExternalNetworkPropertiesOptionAProperties withSecondaryIpv6Prefix(String secondaryIpv6Prefix) {
        super.withSecondaryIpv6Prefix(secondaryIpv6Prefix);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
