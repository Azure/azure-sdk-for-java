// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.IpCommunityListInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of IpCommunityList. */
public interface IpCommunityList {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the action property: action. Example: allow | deny.
     *
     * @return the action value.
     */
    CommunityActionType action();

    /**
     * Gets the localAS property: Local Autonomous System. Example: true | false.
     *
     * @return the localAS value.
     */
    LocalASBoolean localAS();

    /**
     * Gets the gshut property: Graceful Shutdown (GSHUT). Example: true | false.
     *
     * @return the gshut value.
     */
    GshutBoolean gshut();

    /**
     * Gets the internet property: Internet access. Example: true | false.
     *
     * @return the internet value.
     */
    InternetBoolean internet();

    /**
     * Gets the advertise property: noAdvertise. Example: true | false.
     *
     * @return the advertise value.
     */
    AdvertiseBoolean advertise();

    /**
     * Gets the export property: noExport. Example: true | false.
     *
     * @return the export value.
     */
    ExportBoolean export();

    /**
     * Gets the communityMembers property: Ip Community List communityMembers.
     *
     * @return the communityMembers value.
     */
    List<IpCommunityListPropertiesCommunityMembersItem> communityMembers();

    /**
     * Gets the evpnEsImportRouteTargets property: Ip Community List evpnEsImportRouteTargets.
     *
     * @return the evpnEsImportRouteTargets value.
     */
    List<IpCommunityListPropertiesEvpnEsImportRouteTargetsItem> evpnEsImportRouteTargets();

    /**
     * Gets the provisioningState property: Gets the provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the annotation property: Switch configuration description.
     *
     * @return the annotation value.
     */
    String annotation();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.managednetworkfabric.fluent.models.IpCommunityListInner object.
     *
     * @return the inner object.
     */
    IpCommunityListInner innerModel();

    /** The entirety of the IpCommunityList definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The IpCommunityList definition stages. */
    interface DefinitionStages {
        /** The first stage of the IpCommunityList definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the IpCommunityList definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the IpCommunityList definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the IpCommunityList definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithAction,
                DefinitionStages.WithLocalAS,
                DefinitionStages.WithGshut,
                DefinitionStages.WithInternet,
                DefinitionStages.WithAdvertise,
                DefinitionStages.WithExport,
                DefinitionStages.WithCommunityMembers,
                DefinitionStages.WithEvpnEsImportRouteTargets,
                DefinitionStages.WithAnnotation {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            IpCommunityList create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            IpCommunityList create(Context context);
        }
        /** The stage of the IpCommunityList definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the IpCommunityList definition allowing to specify action. */
        interface WithAction {
            /**
             * Specifies the action property: action. Example: allow | deny..
             *
             * @param action action. Example: allow | deny.
             * @return the next definition stage.
             */
            WithCreate withAction(CommunityActionType action);
        }
        /** The stage of the IpCommunityList definition allowing to specify localAS. */
        interface WithLocalAS {
            /**
             * Specifies the localAS property: Local Autonomous System. Example: true | false..
             *
             * @param localAS Local Autonomous System. Example: true | false.
             * @return the next definition stage.
             */
            WithCreate withLocalAS(LocalASBoolean localAS);
        }
        /** The stage of the IpCommunityList definition allowing to specify gshut. */
        interface WithGshut {
            /**
             * Specifies the gshut property: Graceful Shutdown (GSHUT). Example: true | false..
             *
             * @param gshut Graceful Shutdown (GSHUT). Example: true | false.
             * @return the next definition stage.
             */
            WithCreate withGshut(GshutBoolean gshut);
        }
        /** The stage of the IpCommunityList definition allowing to specify internet. */
        interface WithInternet {
            /**
             * Specifies the internet property: Internet access. Example: true | false..
             *
             * @param internet Internet access. Example: true | false.
             * @return the next definition stage.
             */
            WithCreate withInternet(InternetBoolean internet);
        }
        /** The stage of the IpCommunityList definition allowing to specify advertise. */
        interface WithAdvertise {
            /**
             * Specifies the advertise property: noAdvertise. Example: true | false..
             *
             * @param advertise noAdvertise. Example: true | false.
             * @return the next definition stage.
             */
            WithCreate withAdvertise(AdvertiseBoolean advertise);
        }
        /** The stage of the IpCommunityList definition allowing to specify export. */
        interface WithExport {
            /**
             * Specifies the export property: noExport. Example: true | false..
             *
             * @param export noExport. Example: true | false.
             * @return the next definition stage.
             */
            WithCreate withExport(ExportBoolean export);
        }
        /** The stage of the IpCommunityList definition allowing to specify communityMembers. */
        interface WithCommunityMembers {
            /**
             * Specifies the communityMembers property: Ip Community List communityMembers..
             *
             * @param communityMembers Ip Community List communityMembers.
             * @return the next definition stage.
             */
            WithCreate withCommunityMembers(List<IpCommunityListPropertiesCommunityMembersItem> communityMembers);
        }
        /** The stage of the IpCommunityList definition allowing to specify evpnEsImportRouteTargets. */
        interface WithEvpnEsImportRouteTargets {
            /**
             * Specifies the evpnEsImportRouteTargets property: Ip Community List evpnEsImportRouteTargets..
             *
             * @param evpnEsImportRouteTargets Ip Community List evpnEsImportRouteTargets.
             * @return the next definition stage.
             */
            WithCreate withEvpnEsImportRouteTargets(
                List<IpCommunityListPropertiesEvpnEsImportRouteTargetsItem> evpnEsImportRouteTargets);
        }
        /** The stage of the IpCommunityList definition allowing to specify annotation. */
        interface WithAnnotation {
            /**
             * Specifies the annotation property: Switch configuration description..
             *
             * @param annotation Switch configuration description.
             * @return the next definition stage.
             */
            WithCreate withAnnotation(String annotation);
        }
    }
    /**
     * Begins update for the IpCommunityList resource.
     *
     * @return the stage of resource update.
     */
    IpCommunityList.Update update();

    /** The template for IpCommunityList update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithAction,
            UpdateStages.WithLocalAS,
            UpdateStages.WithAdvertise,
            UpdateStages.WithExport,
            UpdateStages.WithCommunityMembers,
            UpdateStages.WithEvpnEsImportRouteTargets,
            UpdateStages.WithAnnotation {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        IpCommunityList apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        IpCommunityList apply(Context context);
    }
    /** The IpCommunityList update stages. */
    interface UpdateStages {
        /** The stage of the IpCommunityList update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags.
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the IpCommunityList update allowing to specify action. */
        interface WithAction {
            /**
             * Specifies the action property: action. Example: allow | deny..
             *
             * @param action action. Example: allow | deny.
             * @return the next definition stage.
             */
            Update withAction(CommunityActionType action);
        }
        /** The stage of the IpCommunityList update allowing to specify localAS. */
        interface WithLocalAS {
            /**
             * Specifies the localAS property: Local Autonomous System. Example: true | false..
             *
             * @param localAS Local Autonomous System. Example: true | false.
             * @return the next definition stage.
             */
            Update withLocalAS(LocalASBoolean localAS);
        }
        /** The stage of the IpCommunityList update allowing to specify advertise. */
        interface WithAdvertise {
            /**
             * Specifies the advertise property: noAdvertise. Example: true | false..
             *
             * @param advertise noAdvertise. Example: true | false.
             * @return the next definition stage.
             */
            Update withAdvertise(AdvertiseBoolean advertise);
        }
        /** The stage of the IpCommunityList update allowing to specify export. */
        interface WithExport {
            /**
             * Specifies the export property: noExport. Example: true | false..
             *
             * @param export noExport. Example: true | false.
             * @return the next definition stage.
             */
            Update withExport(ExportBoolean export);
        }
        /** The stage of the IpCommunityList update allowing to specify communityMembers. */
        interface WithCommunityMembers {
            /**
             * Specifies the communityMembers property: Ip Community List communityMembers..
             *
             * @param communityMembers Ip Community List communityMembers.
             * @return the next definition stage.
             */
            Update withCommunityMembersForUpdate(
                List<IpCommunityListPatchPropertiesCommunityMembersItem> communityMembers);
        }
        /** The stage of the IpCommunityList update allowing to specify evpnEsImportRouteTargets. */
        interface WithEvpnEsImportRouteTargets {
            /**
             * Specifies the evpnEsImportRouteTargets property: Ip Community List evpnEsImportRouteTargets..
             *
             * @param evpnEsImportRouteTargets Ip Community List evpnEsImportRouteTargets.
             * @return the next definition stage.
             */
            Update withEvpnEsImportRouteTargetsForUpdate(
                List<IpCommunityListPatchPropertiesEvpnEsImportRouteTargetsItem> evpnEsImportRouteTargets);
        }
        /** The stage of the IpCommunityList update allowing to specify annotation. */
        interface WithAnnotation {
            /**
             * Specifies the annotation property: Switch configuration description..
             *
             * @param annotation Switch configuration description.
             * @return the next definition stage.
             */
            Update withAnnotation(String annotation);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    IpCommunityList refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    IpCommunityList refresh(Context context);
}
