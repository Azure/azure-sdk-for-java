// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Option B configuration to be used for Management VPN. */
@Fluent
public final class OptionBProperties {
    /*
     * Route Targets to be applied for incoming routes into CE. This is for backward compatibility.
     */
    @JsonProperty(value = "importRouteTargets")
    private List<String> importRouteTargets;

    /*
     * Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.
     */
    @JsonProperty(value = "exportRouteTargets")
    private List<String> exportRouteTargets;

    /*
     * Route Targets to be applied.
     */
    @JsonProperty(value = "routeTargets")
    private RouteTargetInformation routeTargets;

    /** Creates an instance of OptionBProperties class. */
    public OptionBProperties() {
    }

    /**
     * Get the importRouteTargets property: Route Targets to be applied for incoming routes into CE. This is for
     * backward compatibility.
     *
     * @return the importRouteTargets value.
     */
    public List<String> importRouteTargets() {
        return this.importRouteTargets;
    }

    /**
     * Set the importRouteTargets property: Route Targets to be applied for incoming routes into CE. This is for
     * backward compatibility.
     *
     * @param importRouteTargets the importRouteTargets value to set.
     * @return the OptionBProperties object itself.
     */
    public OptionBProperties withImportRouteTargets(List<String> importRouteTargets) {
        this.importRouteTargets = importRouteTargets;
        return this;
    }

    /**
     * Get the exportRouteTargets property: Route Targets to be applied for outgoing routes from CE. This is for
     * backward compatibility.
     *
     * @return the exportRouteTargets value.
     */
    public List<String> exportRouteTargets() {
        return this.exportRouteTargets;
    }

    /**
     * Set the exportRouteTargets property: Route Targets to be applied for outgoing routes from CE. This is for
     * backward compatibility.
     *
     * @param exportRouteTargets the exportRouteTargets value to set.
     * @return the OptionBProperties object itself.
     */
    public OptionBProperties withExportRouteTargets(List<String> exportRouteTargets) {
        this.exportRouteTargets = exportRouteTargets;
        return this;
    }

    /**
     * Get the routeTargets property: Route Targets to be applied.
     *
     * @return the routeTargets value.
     */
    public RouteTargetInformation routeTargets() {
        return this.routeTargets;
    }

    /**
     * Set the routeTargets property: Route Targets to be applied.
     *
     * @param routeTargets the routeTargets value to set.
     * @return the OptionBProperties object itself.
     */
    public OptionBProperties withRouteTargets(RouteTargetInformation routeTargets) {
        this.routeTargets = routeTargets;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (routeTargets() != null) {
            routeTargets().validate();
        }
    }
}
