// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.IpPrefixListPatchProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The IpPrefixList patch resource definition. */
@Fluent
public final class IpPrefixListPatch {
    /*
     * Resource properties.
     */
    @JsonProperty(value = "properties")
    private IpPrefixListPatchProperties innerProperties;

    /*
     * Resource tags
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /** Creates an instance of IpPrefixListPatch class. */
    public IpPrefixListPatch() {
    }

    /**
     * Get the innerProperties property: Resource properties.
     *
     * @return the innerProperties value.
     */
    private IpPrefixListPatchProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the tags property: Resource tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     *
     * @param tags the tags value to set.
     * @return the IpPrefixListPatch object itself.
     */
    public IpPrefixListPatch withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the action property: action. Example: allow | deny.
     *
     * @return the action value.
     */
    public PrefixActionType action() {
        return this.innerProperties() == null ? null : this.innerProperties().action();
    }

    /**
     * Set the action property: action. Example: allow | deny.
     *
     * @param action the action value to set.
     * @return the IpPrefixListPatch object itself.
     */
    public IpPrefixListPatch withAction(PrefixActionType action) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IpPrefixListPatchProperties();
        }
        this.innerProperties().withAction(action);
        return this;
    }

    /**
     * Get the sequenceNumber property: sequenceNumber of the Ip Prefix List.
     *
     * @return the sequenceNumber value.
     */
    public Integer sequenceNumber() {
        return this.innerProperties() == null ? null : this.innerProperties().sequenceNumber();
    }

    /**
     * Set the sequenceNumber property: sequenceNumber of the Ip Prefix List.
     *
     * @param sequenceNumber the sequenceNumber value to set.
     * @return the IpPrefixListPatch object itself.
     */
    public IpPrefixListPatch withSequenceNumber(Integer sequenceNumber) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IpPrefixListPatchProperties();
        }
        this.innerProperties().withSequenceNumber(sequenceNumber);
        return this;
    }

    /**
     * Get the networkAddress property: networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
     *
     * @return the networkAddress value.
     */
    public String networkAddress() {
        return this.innerProperties() == null ? null : this.innerProperties().networkAddress();
    }

    /**
     * Set the networkAddress property: networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
     *
     * @param networkAddress the networkAddress value to set.
     * @return the IpPrefixListPatch object itself.
     */
    public IpPrefixListPatch withNetworkAddress(String networkAddress) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IpPrefixListPatchProperties();
        }
        this.innerProperties().withNetworkAddress(networkAddress);
        return this;
    }

    /**
     * Get the annotation property: Switch configuration description.
     *
     * @return the annotation value.
     */
    public String annotation() {
        return this.innerProperties() == null ? null : this.innerProperties().annotation();
    }

    /**
     * Set the annotation property: Switch configuration description.
     *
     * @param annotation the annotation value to set.
     * @return the IpPrefixListPatch object itself.
     */
    public IpPrefixListPatch withAnnotation(String annotation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IpPrefixListPatchProperties();
        }
        this.innerProperties().withAnnotation(annotation);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
