// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Defines the port condition that needs to be matched. */
@Fluent
public final class AccessControlListPortCondition extends PortCondition {
    /*
     * List of protocol flags that needs to be matched.
     */
    @JsonProperty(value = "flags")
    private List<String> flags;

    /** Creates an instance of AccessControlListPortCondition class. */
    public AccessControlListPortCondition() {
    }

    /**
     * Get the flags property: List of protocol flags that needs to be matched.
     *
     * @return the flags value.
     */
    public List<String> flags() {
        return this.flags;
    }

    /**
     * Set the flags property: List of protocol flags that needs to be matched.
     *
     * @param flags the flags value to set.
     * @return the AccessControlListPortCondition object itself.
     */
    public AccessControlListPortCondition withFlags(List<String> flags) {
        this.flags = flags;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AccessControlListPortCondition withPortType(PortType portType) {
        super.withPortType(portType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AccessControlListPortCondition withLayer4Protocol(Layer4Protocol layer4Protocol) {
        super.withLayer4Protocol(layer4Protocol);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AccessControlListPortCondition withPorts(List<String> ports) {
        super.withPorts(ports);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AccessControlListPortCondition withPortGroupNames(List<String> portGroupNames) {
        super.withPortGroupNames(portGroupNames);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
