// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.IpPrefixListInner;
import com.azure.resourcemanager.managednetworkfabric.models.IpPrefixList;
import com.azure.resourcemanager.managednetworkfabric.models.IpPrefixListPatch;
import com.azure.resourcemanager.managednetworkfabric.models.PrefixActionType;
import com.azure.resourcemanager.managednetworkfabric.models.ProvisioningState;
import java.util.Collections;
import java.util.Map;

public final class IpPrefixListImpl implements IpPrefixList, IpPrefixList.Definition, IpPrefixList.Update {
    private IpPrefixListInner innerObject;

    private final com.azure.resourcemanager.managednetworkfabric.ManagednetworkfabricManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public PrefixActionType action() {
        return this.innerModel().action();
    }

    public int sequenceNumber() {
        return this.innerModel().sequenceNumber();
    }

    public String networkAddress() {
        return this.innerModel().networkAddress();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String annotation() {
        return this.innerModel().annotation();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public IpPrefixListInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.managednetworkfabric.ManagednetworkfabricManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String ipPrefixListName;

    private IpPrefixListPatch updateBody;

    public IpPrefixListImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public IpPrefixList create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIpPrefixLists()
                .createWithResponse(resourceGroupName, ipPrefixListName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public IpPrefixList create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIpPrefixLists()
                .createWithResponse(resourceGroupName, ipPrefixListName, this.innerModel(), context)
                .getValue();
        return this;
    }

    IpPrefixListImpl(
        String name, com.azure.resourcemanager.managednetworkfabric.ManagednetworkfabricManager serviceManager) {
        this.innerObject = new IpPrefixListInner();
        this.serviceManager = serviceManager;
        this.ipPrefixListName = name;
    }

    public IpPrefixListImpl update() {
        this.updateBody = new IpPrefixListPatch();
        return this;
    }

    public IpPrefixList apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIpPrefixLists()
                .updateWithResponse(resourceGroupName, ipPrefixListName, updateBody, Context.NONE)
                .getValue();
        return this;
    }

    public IpPrefixList apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIpPrefixLists()
                .updateWithResponse(resourceGroupName, ipPrefixListName, updateBody, context)
                .getValue();
        return this;
    }

    IpPrefixListImpl(
        IpPrefixListInner innerObject,
        com.azure.resourcemanager.managednetworkfabric.ManagednetworkfabricManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.ipPrefixListName = Utils.getValueFromIdByName(innerObject.id(), "ipPrefixLists");
    }

    public IpPrefixList refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIpPrefixLists()
                .getByResourceGroupWithResponse(resourceGroupName, ipPrefixListName, Context.NONE)
                .getValue();
        return this;
    }

    public IpPrefixList refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIpPrefixLists()
                .getByResourceGroupWithResponse(resourceGroupName, ipPrefixListName, context)
                .getValue();
        return this;
    }

    public IpPrefixListImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public IpPrefixListImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public IpPrefixListImpl withAction(PrefixActionType action) {
        if (isInCreateMode()) {
            this.innerModel().withAction(action);
            return this;
        } else {
            this.updateBody.withAction(action);
            return this;
        }
    }

    public IpPrefixListImpl withSequenceNumber(int sequenceNumber) {
        this.innerModel().withSequenceNumber(sequenceNumber);
        return this;
    }

    public IpPrefixListImpl withNetworkAddress(String networkAddress) {
        if (isInCreateMode()) {
            this.innerModel().withNetworkAddress(networkAddress);
            return this;
        } else {
            this.updateBody.withNetworkAddress(networkAddress);
            return this;
        }
    }

    public IpPrefixListImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public IpPrefixListImpl withAnnotation(String annotation) {
        if (isInCreateMode()) {
            this.innerModel().withAnnotation(annotation);
            return this;
        } else {
            this.updateBody.withAnnotation(annotation);
            return this;
        }
    }

    public IpPrefixListImpl withSequenceNumber(Integer sequenceNumber) {
        this.updateBody.withSequenceNumber(sequenceNumber);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
