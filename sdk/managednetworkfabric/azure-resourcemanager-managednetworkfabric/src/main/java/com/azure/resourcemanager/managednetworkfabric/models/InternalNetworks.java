// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of InternalNetworks. */
public interface InternalNetworks {
    /**
     * Retrieves details of InternalNetworks using GET method.
     *
     * <p>Gets a InternalNetworks.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InternalNetworks along with {@link Response}.
     */
    Response<InternalNetwork> getWithResponse(
        String resourceGroupName, String l3IsolationDomainName, String internalNetworkName, Context context);

    /**
     * Retrieves details of InternalNetworks using GET method.
     *
     * <p>Gets a InternalNetworks.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InternalNetworks.
     */
    InternalNetwork get(String resourceGroupName, String l3IsolationDomainName, String internalNetworkName);

    /**
     * Deletes a InternalNetworks.
     *
     * <p>Implements InternalNetworks DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String l3IsolationDomainName, String internalNetworkName);

    /**
     * Deletes a InternalNetworks.
     *
     * <p>Implements InternalNetworks DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String l3IsolationDomainName, String internalNetworkName, Context context);

    /**
     * Executes list operation to display list of all internal networks
     *
     * <p>Displays InternalNetworks list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Internal Networks as paginated response with {@link PagedIterable}.
     */
    PagedIterable<InternalNetwork> listByL3IsolationDomain(String resourceGroupName, String l3IsolationDomainName);

    /**
     * Executes list operation to display list of all internal networks
     *
     * <p>Displays InternalNetworks list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Internal Networks as paginated response with {@link PagedIterable}.
     */
    PagedIterable<InternalNetwork> listByL3IsolationDomain(
        String resourceGroupName, String l3IsolationDomainName, Context context);

    /**
     * Executes the operation to the underlying resources.
     *
     * <p>Update Administrative state of InternalNetworks on resources referred by their resource ids.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    CommonPostActionResponseForStateUpdate updateAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body);

    /**
     * Executes the operation to the underlying resources.
     *
     * <p>Update Administrative state of InternalNetworks on resources referred by their resource ids.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    CommonPostActionResponseForStateUpdate updateAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body,
        Context context);

    /**
     * Executes the operation to the underlying resources for updating BGP state on edge devices.
     *
     * <p>Update BGP state for internalNetwork. Allowed only on edge devices.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    CommonPostActionResponseForStateUpdate updateBgpAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body);

    /**
     * Executes the operation to the underlying resources for updating BGP state on edge devices.
     *
     * <p>Update BGP state for internalNetwork. Allowed only on edge devices.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    CommonPostActionResponseForStateUpdate updateBgpAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body,
        Context context);

    /**
     * Implements the operation to the underlying resources.
     *
     * <p>Update Static Route BFD administrative state for internalNetwork.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    CommonPostActionResponseForStateUpdate updateStaticRouteBfdAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body);

    /**
     * Implements the operation to the underlying resources.
     *
     * <p>Update Static Route BFD administrative state for internalNetwork.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    CommonPostActionResponseForStateUpdate updateStaticRouteBfdAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body,
        Context context);

    /**
     * Retrieves details of InternalNetworks using GET method.
     *
     * <p>Gets a InternalNetworks.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InternalNetworks along with {@link Response}.
     */
    InternalNetwork getById(String id);

    /**
     * Retrieves details of InternalNetworks using GET method.
     *
     * <p>Gets a InternalNetworks.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InternalNetworks along with {@link Response}.
     */
    Response<InternalNetwork> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a InternalNetworks.
     *
     * <p>Implements InternalNetworks DELETE method.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a InternalNetworks.
     *
     * <p>Implements InternalNetworks DELETE method.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new InternalNetwork resource.
     *
     * @param name resource name.
     * @return the first stage of the new InternalNetwork definition.
     */
    InternalNetwork.DefinitionStages.Blank define(String name);
}
