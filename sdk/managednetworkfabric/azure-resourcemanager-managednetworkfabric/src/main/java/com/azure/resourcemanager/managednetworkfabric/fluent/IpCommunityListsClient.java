// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.IpCommunityListInner;
import com.azure.resourcemanager.managednetworkfabric.models.IpCommunityListPatch;

/** An instance of this class provides access to all the operations defined in IpCommunityListsClient. */
public interface IpCommunityListsClient {
    /**
     * Create Ip Community List.
     *
     * <p>Implements Ip Community List PUT method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the IpCommunityList resource definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<IpCommunityListInner> createWithResponse(
        String resourceGroupName, String ipCommunityListName, IpCommunityListInner body, Context context);

    /**
     * Create Ip Community List.
     *
     * <p>Implements Ip Community List PUT method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the IpCommunityList resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IpCommunityListInner create(String resourceGroupName, String ipCommunityListName, IpCommunityListInner body);

    /**
     * Gets a Ip Community List.
     *
     * <p>Implements Ip Community List GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the IpCommunityList resource definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<IpCommunityListInner> getByResourceGroupWithResponse(
        String resourceGroupName, String ipCommunityListName, Context context);

    /**
     * Gets a Ip Community List.
     *
     * <p>Implements Ip Community List GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the IpCommunityList resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IpCommunityListInner getByResourceGroup(String resourceGroupName, String ipCommunityListName);

    /**
     * Updates a Ip Community List.
     *
     * <p>API to update certain properties of the Ip Community List resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @param body Ip Community List properties to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the IpCommunityList resource definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<IpCommunityListInner> updateWithResponse(
        String resourceGroupName, String ipCommunityListName, IpCommunityListPatch body, Context context);

    /**
     * Updates a Ip Community List.
     *
     * <p>API to update certain properties of the Ip Community List resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @param body Ip Community List properties to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the IpCommunityList resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IpCommunityListInner update(String resourceGroupName, String ipCommunityListName, IpCommunityListPatch body);

    /**
     * Deletes a Ip Community List.
     *
     * <p>Implements Ip Community List DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String ipCommunityListName, Context context);

    /**
     * Deletes a Ip Community List.
     *
     * <p>Implements Ip Community List DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String ipCommunityListName);

    /**
     * List IpCommunityLists by resource group.
     *
     * <p>Implements IpCommunityLists list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of IpCommunityLists as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IpCommunityListInner> listByResourceGroup(String resourceGroupName);

    /**
     * List IpCommunityLists by resource group.
     *
     * <p>Implements IpCommunityLists list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of IpCommunityLists as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IpCommunityListInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List IpCommunityLists by subscription.
     *
     * <p>Implements IpCommunityLists list by subscription GET method.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of IpCommunityLists as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IpCommunityListInner> list();

    /**
     * List IpCommunityLists by subscription.
     *
     * <p>Implements IpCommunityLists list by subscription GET method.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of IpCommunityLists as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IpCommunityListInner> list(Context context);
}
