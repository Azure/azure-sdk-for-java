// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Common properties for Layer2 Configuration.
 */
@Fluent
public final class Layer2Configuration implements JsonSerializable<Layer2Configuration> {
    /*
     * MTU of the packets between PE & CE.
     */
    private Integer mtu;

    /*
     * List of network device interfaces resource IDs.
     */
    private List<String> interfaces;

    /**
     * Creates an instance of Layer2Configuration class.
     */
    public Layer2Configuration() {
    }

    /**
     * Get the mtu property: MTU of the packets between PE &amp; CE.
     * 
     * @return the mtu value.
     */
    public Integer mtu() {
        return this.mtu;
    }

    /**
     * Set the mtu property: MTU of the packets between PE &amp; CE.
     * 
     * @param mtu the mtu value to set.
     * @return the Layer2Configuration object itself.
     */
    public Layer2Configuration withMtu(Integer mtu) {
        this.mtu = mtu;
        return this;
    }

    /**
     * Get the interfaces property: List of network device interfaces resource IDs.
     * 
     * @return the interfaces value.
     */
    public List<String> interfaces() {
        return this.interfaces;
    }

    /**
     * Set the interfaces property: List of network device interfaces resource IDs.
     * 
     * @param interfaces the interfaces value to set.
     * @return the Layer2Configuration object itself.
     */
    public Layer2Configuration withInterfaces(List<String> interfaces) {
        this.interfaces = interfaces;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("mtu", this.mtu);
        jsonWriter.writeArrayField("interfaces", this.interfaces, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Layer2Configuration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Layer2Configuration if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the Layer2Configuration.
     */
    public static Layer2Configuration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Layer2Configuration deserializedLayer2Configuration = new Layer2Configuration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("mtu".equals(fieldName)) {
                    deserializedLayer2Configuration.mtu = reader.getNullable(JsonReader::getInt);
                } else if ("interfaces".equals(fieldName)) {
                    List<String> interfaces = reader.readArray(reader1 -> reader1.getString());
                    deserializedLayer2Configuration.interfaces = interfaces;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLayer2Configuration;
        });
    }
}
