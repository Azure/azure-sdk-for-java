// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.L2IsolationDomainPatchProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The L2 Isolation Domain patch resource definition. */
@Fluent
public final class L2IsolationDomainPatch extends TagsUpdate {
    /*
     * Resource properties.
     */
    @JsonProperty(value = "properties")
    private L2IsolationDomainPatchProperties innerProperties;

    /** Creates an instance of L2IsolationDomainPatch class. */
    public L2IsolationDomainPatch() {
    }

    /**
     * Get the innerProperties property: Resource properties.
     *
     * @return the innerProperties value.
     */
    private L2IsolationDomainPatchProperties innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public L2IsolationDomainPatch withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the mtu property: Maximum transmission unit. Default value is 1500.
     *
     * @return the mtu value.
     */
    public Integer mtu() {
        return this.innerProperties() == null ? null : this.innerProperties().mtu();
    }

    /**
     * Set the mtu property: Maximum transmission unit. Default value is 1500.
     *
     * @param mtu the mtu value to set.
     * @return the L2IsolationDomainPatch object itself.
     */
    public L2IsolationDomainPatch withMtu(Integer mtu) {
        if (this.innerProperties() == null) {
            this.innerProperties = new L2IsolationDomainPatchProperties();
        }
        this.innerProperties().withMtu(mtu);
        return this;
    }

    /**
     * Get the annotation property: Switch configuration description.
     *
     * @return the annotation value.
     */
    public String annotation() {
        return this.innerProperties() == null ? null : this.innerProperties().annotation();
    }

    /**
     * Set the annotation property: Switch configuration description.
     *
     * @param annotation the annotation value to set.
     * @return the L2IsolationDomainPatch object itself.
     */
    public L2IsolationDomainPatch withAnnotation(String annotation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new L2IsolationDomainPatchProperties();
        }
        this.innerProperties().withAnnotation(annotation);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
