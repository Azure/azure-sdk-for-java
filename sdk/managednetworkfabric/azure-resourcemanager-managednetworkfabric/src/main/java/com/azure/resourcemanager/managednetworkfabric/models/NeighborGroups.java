// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of NeighborGroups. */
public interface NeighborGroups {
    /**
     * Retrieves details of neighbor Group using GET method.
     *
     * <p>Gets the Neighbor Group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param neighborGroupName Name of the Neighbor Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Neighbor Group along with {@link Response}.
     */
    Response<NeighborGroup> getByResourceGroupWithResponse(
        String resourceGroupName, String neighborGroupName, Context context);

    /**
     * Retrieves details of neighbor Group using GET method.
     *
     * <p>Gets the Neighbor Group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param neighborGroupName Name of the Neighbor Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Neighbor Group.
     */
    NeighborGroup getByResourceGroup(String resourceGroupName, String neighborGroupName);

    /**
     * Deletes a Neighbor Group.
     *
     * <p>Implements Neighbor Group DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param neighborGroupName Name of the Neighbor Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String neighborGroupName);

    /**
     * Deletes a Neighbor Group.
     *
     * <p>Implements Neighbor Group DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param neighborGroupName Name of the Neighbor Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String neighborGroupName, Context context);

    /**
     * List Neighbor Groups by resource group.
     *
     * <p>Displays NeighborGroups list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Neighbor Group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NeighborGroup> listByResourceGroup(String resourceGroupName);

    /**
     * List Neighbor Groups by resource group.
     *
     * <p>Displays NeighborGroups list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Neighbor Group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NeighborGroup> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List Neighbor Groups by subscription.
     *
     * <p>Displays NeighborGroups list by subscription GET method.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Neighbor Group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NeighborGroup> list();

    /**
     * List Neighbor Groups by subscription.
     *
     * <p>Displays NeighborGroups list by subscription GET method.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Neighbor Group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NeighborGroup> list(Context context);

    /**
     * Retrieves details of neighbor Group using GET method.
     *
     * <p>Gets the Neighbor Group.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Neighbor Group along with {@link Response}.
     */
    NeighborGroup getById(String id);

    /**
     * Retrieves details of neighbor Group using GET method.
     *
     * <p>Gets the Neighbor Group.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Neighbor Group along with {@link Response}.
     */
    Response<NeighborGroup> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a Neighbor Group.
     *
     * <p>Implements Neighbor Group DELETE method.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a Neighbor Group.
     *
     * <p>Implements Neighbor Group DELETE method.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new NeighborGroup resource.
     *
     * @param name resource name.
     * @return the first stage of the new NeighborGroup definition.
     */
    NeighborGroup.DefinitionStages.Blank define(String name);
}
