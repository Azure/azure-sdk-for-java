// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Internet Gateway Patchable Properties defines the patchable properties of the resource.
 */
@Fluent
public class InternetGatewayPatchableProperties implements JsonSerializable<InternetGatewayPatchableProperties> {
    /*
     * ARM Resource ID of the Internet Gateway Rule.
     */
    private String internetGatewayRuleId;

    /**
     * Creates an instance of InternetGatewayPatchableProperties class.
     */
    public InternetGatewayPatchableProperties() {
    }

    /**
     * Get the internetGatewayRuleId property: ARM Resource ID of the Internet Gateway Rule.
     * 
     * @return the internetGatewayRuleId value.
     */
    public String internetGatewayRuleId() {
        return this.internetGatewayRuleId;
    }

    /**
     * Set the internetGatewayRuleId property: ARM Resource ID of the Internet Gateway Rule.
     * 
     * @param internetGatewayRuleId the internetGatewayRuleId value to set.
     * @return the InternetGatewayPatchableProperties object itself.
     */
    public InternetGatewayPatchableProperties withInternetGatewayRuleId(String internetGatewayRuleId) {
        this.internetGatewayRuleId = internetGatewayRuleId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("internetGatewayRuleId", this.internetGatewayRuleId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InternetGatewayPatchableProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InternetGatewayPatchableProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InternetGatewayPatchableProperties.
     */
    public static InternetGatewayPatchableProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InternetGatewayPatchableProperties deserializedInternetGatewayPatchableProperties
                = new InternetGatewayPatchableProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("internetGatewayRuleId".equals(fieldName)) {
                    deserializedInternetGatewayPatchableProperties.internetGatewayRuleId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInternetGatewayPatchableProperties;
        });
    }
}
