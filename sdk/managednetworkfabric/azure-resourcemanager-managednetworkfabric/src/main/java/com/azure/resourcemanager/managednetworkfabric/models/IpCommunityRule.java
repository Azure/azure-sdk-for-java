// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** IP Community patchable properties. */
@Fluent
public final class IpCommunityRule {
    /*
     * Action to be taken on the configuration. Example: Permit | Deny.
     */
    @JsonProperty(value = "action", required = true)
    private CommunityActionTypes action;

    /*
     * Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence
     * number and continue down the list until a match is made. Once a match is made, the permit or deny statement is
     * applied to that network and the rest of the list is ignored.
     */
    @JsonProperty(value = "sequenceNumber", required = true)
    private long sequenceNumber;

    /*
     * Supported well known Community List.
     */
    @JsonProperty(value = "wellKnownCommunities")
    private List<WellKnownCommunities> wellKnownCommunities;

    /*
     * List the community members of IP Community.
     */
    @JsonProperty(value = "communityMembers", required = true)
    private List<String> communityMembers;

    /** Creates an instance of IpCommunityRule class. */
    public IpCommunityRule() {
    }

    /**
     * Get the action property: Action to be taken on the configuration. Example: Permit | Deny.
     *
     * @return the action value.
     */
    public CommunityActionTypes action() {
        return this.action;
    }

    /**
     * Set the action property: Action to be taken on the configuration. Example: Permit | Deny.
     *
     * @param action the action value to set.
     * @return the IpCommunityRule object itself.
     */
    public IpCommunityRule withAction(CommunityActionTypes action) {
        this.action = action;
        return this;
    }

    /**
     * Get the sequenceNumber property: Sequence to insert to/delete from existing route. Prefix lists are evaluated
     * starting with the lowest sequence number and continue down the list until a match is made. Once a match is made,
     * the permit or deny statement is applied to that network and the rest of the list is ignored.
     *
     * @return the sequenceNumber value.
     */
    public long sequenceNumber() {
        return this.sequenceNumber;
    }

    /**
     * Set the sequenceNumber property: Sequence to insert to/delete from existing route. Prefix lists are evaluated
     * starting with the lowest sequence number and continue down the list until a match is made. Once a match is made,
     * the permit or deny statement is applied to that network and the rest of the list is ignored.
     *
     * @param sequenceNumber the sequenceNumber value to set.
     * @return the IpCommunityRule object itself.
     */
    public IpCommunityRule withSequenceNumber(long sequenceNumber) {
        this.sequenceNumber = sequenceNumber;
        return this;
    }

    /**
     * Get the wellKnownCommunities property: Supported well known Community List.
     *
     * @return the wellKnownCommunities value.
     */
    public List<WellKnownCommunities> wellKnownCommunities() {
        return this.wellKnownCommunities;
    }

    /**
     * Set the wellKnownCommunities property: Supported well known Community List.
     *
     * @param wellKnownCommunities the wellKnownCommunities value to set.
     * @return the IpCommunityRule object itself.
     */
    public IpCommunityRule withWellKnownCommunities(List<WellKnownCommunities> wellKnownCommunities) {
        this.wellKnownCommunities = wellKnownCommunities;
        return this;
    }

    /**
     * Get the communityMembers property: List the community members of IP Community.
     *
     * @return the communityMembers value.
     */
    public List<String> communityMembers() {
        return this.communityMembers;
    }

    /**
     * Set the communityMembers property: List the community members of IP Community.
     *
     * @param communityMembers the communityMembers value to set.
     * @return the IpCommunityRule object itself.
     */
    public IpCommunityRule withCommunityMembers(List<String> communityMembers) {
        this.communityMembers = communityMembers;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (action() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property action in model IpCommunityRule"));
        }
        if (communityMembers() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property communityMembers in model IpCommunityRule"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(IpCommunityRule.class);
}
