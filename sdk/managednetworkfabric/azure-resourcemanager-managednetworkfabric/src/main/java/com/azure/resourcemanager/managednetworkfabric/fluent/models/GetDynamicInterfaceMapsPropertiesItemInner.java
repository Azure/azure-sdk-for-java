// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Get Device static interface maps as per topology. */
@Fluent
public final class GetDynamicInterfaceMapsPropertiesItemInner extends InterfaceStatusInner {
    /*
     * The interface name.
     */
    @JsonProperty(value = "name")
    private String name;

    /** Creates an instance of GetDynamicInterfaceMapsPropertiesItemInner class. */
    public GetDynamicInterfaceMapsPropertiesItemInner() {
    }

    /**
     * Get the name property: The interface name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The interface name.
     *
     * @param name the name value to set.
     * @return the GetDynamicInterfaceMapsPropertiesItemInner object itself.
     */
    public GetDynamicInterfaceMapsPropertiesItemInner withName(String name) {
        this.name = name;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public GetDynamicInterfaceMapsPropertiesItemInner withOperationalStatus(String operationalStatus) {
        super.withOperationalStatus(operationalStatus);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public GetDynamicInterfaceMapsPropertiesItemInner withPhyStatus(String phyStatus) {
        super.withPhyStatus(phyStatus);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public GetDynamicInterfaceMapsPropertiesItemInner withTransceiverStatus(String transceiverStatus) {
        super.withTransceiverStatus(transceiverStatus);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public GetDynamicInterfaceMapsPropertiesItemInner withConnectedTo(String connectedTo) {
        super.withConnectedTo(connectedTo);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
