// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.managednetworkfabric.models.AdvertiseBoolean;
import com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionType;
import com.azure.resourcemanager.managednetworkfabric.models.ExportBoolean;
import com.azure.resourcemanager.managednetworkfabric.models.GshutBoolean;
import com.azure.resourcemanager.managednetworkfabric.models.InternetBoolean;
import com.azure.resourcemanager.managednetworkfabric.models.IpCommunityListPropertiesCommunityMembersItem;
import com.azure.resourcemanager.managednetworkfabric.models.IpCommunityListPropertiesEvpnEsImportRouteTargetsItem;
import com.azure.resourcemanager.managednetworkfabric.models.LocalASBoolean;
import com.azure.resourcemanager.managednetworkfabric.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** IpCommunityListProperties define the resource properties. */
@Fluent
public final class IpCommunityListProperties extends AnnotationResource {
    /*
     * action. Example: allow | deny.
     */
    @JsonProperty(value = "action", required = true)
    private CommunityActionType action;

    /*
     * Local Autonomous System. Example: true | false.
     */
    @JsonProperty(value = "localAS", required = true)
    private LocalASBoolean localAS;

    /*
     * Graceful Shutdown (GSHUT). Example: true | false.
     */
    @JsonProperty(value = "gshut")
    private GshutBoolean gshut;

    /*
     * Internet access. Example: true | false.
     */
    @JsonProperty(value = "internet")
    private InternetBoolean internet;

    /*
     * noAdvertise. Example: true | false.
     */
    @JsonProperty(value = "advertise", required = true)
    private AdvertiseBoolean advertise;

    /*
     * noExport. Example: true | false.
     */
    @JsonProperty(value = "export", required = true)
    private ExportBoolean export;

    /*
     * Ip Community List communityMembers.
     */
    @JsonProperty(value = "communityMembers")
    private List<IpCommunityListPropertiesCommunityMembersItem> communityMembers;

    /*
     * Ip Community List evpnEsImportRouteTargets.
     */
    @JsonProperty(value = "evpnEsImportRouteTargets")
    private List<IpCommunityListPropertiesEvpnEsImportRouteTargetsItem> evpnEsImportRouteTargets;

    /*
     * Gets the provisioning state of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /** Creates an instance of IpCommunityListProperties class. */
    public IpCommunityListProperties() {
    }

    /**
     * Get the action property: action. Example: allow | deny.
     *
     * @return the action value.
     */
    public CommunityActionType action() {
        return this.action;
    }

    /**
     * Set the action property: action. Example: allow | deny.
     *
     * @param action the action value to set.
     * @return the IpCommunityListProperties object itself.
     */
    public IpCommunityListProperties withAction(CommunityActionType action) {
        this.action = action;
        return this;
    }

    /**
     * Get the localAS property: Local Autonomous System. Example: true | false.
     *
     * @return the localAS value.
     */
    public LocalASBoolean localAS() {
        return this.localAS;
    }

    /**
     * Set the localAS property: Local Autonomous System. Example: true | false.
     *
     * @param localAS the localAS value to set.
     * @return the IpCommunityListProperties object itself.
     */
    public IpCommunityListProperties withLocalAS(LocalASBoolean localAS) {
        this.localAS = localAS;
        return this;
    }

    /**
     * Get the gshut property: Graceful Shutdown (GSHUT). Example: true | false.
     *
     * @return the gshut value.
     */
    public GshutBoolean gshut() {
        return this.gshut;
    }

    /**
     * Set the gshut property: Graceful Shutdown (GSHUT). Example: true | false.
     *
     * @param gshut the gshut value to set.
     * @return the IpCommunityListProperties object itself.
     */
    public IpCommunityListProperties withGshut(GshutBoolean gshut) {
        this.gshut = gshut;
        return this;
    }

    /**
     * Get the internet property: Internet access. Example: true | false.
     *
     * @return the internet value.
     */
    public InternetBoolean internet() {
        return this.internet;
    }

    /**
     * Set the internet property: Internet access. Example: true | false.
     *
     * @param internet the internet value to set.
     * @return the IpCommunityListProperties object itself.
     */
    public IpCommunityListProperties withInternet(InternetBoolean internet) {
        this.internet = internet;
        return this;
    }

    /**
     * Get the advertise property: noAdvertise. Example: true | false.
     *
     * @return the advertise value.
     */
    public AdvertiseBoolean advertise() {
        return this.advertise;
    }

    /**
     * Set the advertise property: noAdvertise. Example: true | false.
     *
     * @param advertise the advertise value to set.
     * @return the IpCommunityListProperties object itself.
     */
    public IpCommunityListProperties withAdvertise(AdvertiseBoolean advertise) {
        this.advertise = advertise;
        return this;
    }

    /**
     * Get the export property: noExport. Example: true | false.
     *
     * @return the export value.
     */
    public ExportBoolean export() {
        return this.export;
    }

    /**
     * Set the export property: noExport. Example: true | false.
     *
     * @param export the export value to set.
     * @return the IpCommunityListProperties object itself.
     */
    public IpCommunityListProperties withExport(ExportBoolean export) {
        this.export = export;
        return this;
    }

    /**
     * Get the communityMembers property: Ip Community List communityMembers.
     *
     * @return the communityMembers value.
     */
    public List<IpCommunityListPropertiesCommunityMembersItem> communityMembers() {
        return this.communityMembers;
    }

    /**
     * Set the communityMembers property: Ip Community List communityMembers.
     *
     * @param communityMembers the communityMembers value to set.
     * @return the IpCommunityListProperties object itself.
     */
    public IpCommunityListProperties withCommunityMembers(
        List<IpCommunityListPropertiesCommunityMembersItem> communityMembers) {
        this.communityMembers = communityMembers;
        return this;
    }

    /**
     * Get the evpnEsImportRouteTargets property: Ip Community List evpnEsImportRouteTargets.
     *
     * @return the evpnEsImportRouteTargets value.
     */
    public List<IpCommunityListPropertiesEvpnEsImportRouteTargetsItem> evpnEsImportRouteTargets() {
        return this.evpnEsImportRouteTargets;
    }

    /**
     * Set the evpnEsImportRouteTargets property: Ip Community List evpnEsImportRouteTargets.
     *
     * @param evpnEsImportRouteTargets the evpnEsImportRouteTargets value to set.
     * @return the IpCommunityListProperties object itself.
     */
    public IpCommunityListProperties withEvpnEsImportRouteTargets(
        List<IpCommunityListPropertiesEvpnEsImportRouteTargetsItem> evpnEsImportRouteTargets) {
        this.evpnEsImportRouteTargets = evpnEsImportRouteTargets;
        return this;
    }

    /**
     * Get the provisioningState property: Gets the provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /** {@inheritDoc} */
    @Override
    public IpCommunityListProperties withAnnotation(String annotation) {
        super.withAnnotation(annotation);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (action() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property action in model IpCommunityListProperties"));
        }
        if (localAS() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property localAS in model IpCommunityListProperties"));
        }
        if (advertise() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property advertise in model IpCommunityListProperties"));
        }
        if (export() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property export in model IpCommunityListProperties"));
        }
        if (communityMembers() != null) {
            communityMembers().forEach(e -> e.validate());
        }
        if (evpnEsImportRouteTargets() != null) {
            evpnEsImportRouteTargets().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(IpCommunityListProperties.class);
}
