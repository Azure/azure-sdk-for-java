// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of IpCommunityLists. */
public interface IpCommunityLists {
    /**
     * Gets a Ip Community List.
     *
     * <p>Implements Ip Community List GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the IpCommunityList resource definition along with {@link Response}.
     */
    Response<IpCommunityList> getByResourceGroupWithResponse(
        String resourceGroupName, String ipCommunityListName, Context context);

    /**
     * Gets a Ip Community List.
     *
     * <p>Implements Ip Community List GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the IpCommunityList resource definition.
     */
    IpCommunityList getByResourceGroup(String resourceGroupName, String ipCommunityListName);

    /**
     * Deletes a Ip Community List.
     *
     * <p>Implements Ip Community List DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(
        String resourceGroupName, String ipCommunityListName, Context context);

    /**
     * Deletes a Ip Community List.
     *
     * <p>Implements Ip Community List DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipCommunityListName Name of the Ip Community List.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String ipCommunityListName);

    /**
     * List IpCommunityLists by resource group.
     *
     * <p>Implements IpCommunityLists list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of IpCommunityLists as paginated response with {@link PagedIterable}.
     */
    PagedIterable<IpCommunityList> listByResourceGroup(String resourceGroupName);

    /**
     * List IpCommunityLists by resource group.
     *
     * <p>Implements IpCommunityLists list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of IpCommunityLists as paginated response with {@link PagedIterable}.
     */
    PagedIterable<IpCommunityList> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List IpCommunityLists by subscription.
     *
     * <p>Implements IpCommunityLists list by subscription GET method.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of IpCommunityLists as paginated response with {@link PagedIterable}.
     */
    PagedIterable<IpCommunityList> list();

    /**
     * List IpCommunityLists by subscription.
     *
     * <p>Implements IpCommunityLists list by subscription GET method.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of IpCommunityLists as paginated response with {@link PagedIterable}.
     */
    PagedIterable<IpCommunityList> list(Context context);

    /**
     * Gets a Ip Community List.
     *
     * <p>Implements Ip Community List GET method.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the IpCommunityList resource definition along with {@link Response}.
     */
    IpCommunityList getById(String id);

    /**
     * Gets a Ip Community List.
     *
     * <p>Implements Ip Community List GET method.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the IpCommunityList resource definition along with {@link Response}.
     */
    Response<IpCommunityList> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a Ip Community List.
     *
     * <p>Implements Ip Community List DELETE method.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a Ip Community List.
     *
     * <p>Implements Ip Community List DELETE method.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new IpCommunityList resource.
     *
     * @param name resource name.
     * @return the first stage of the new IpCommunityList definition.
     */
    IpCommunityList.DefinitionStages.Blank define(String name);
}
