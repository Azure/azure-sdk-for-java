// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.CommonPostActionResponseForStateUpdateInner;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.InternalNetworkInner;
import com.azure.resourcemanager.managednetworkfabric.models.InternalNetworkPatch;
import com.azure.resourcemanager.managednetworkfabric.models.UpdateAdministrativeState;

/** An instance of this class provides access to all the operations defined in InternalNetworksClient. */
public interface InternalNetworksClient {
    /**
     * Creates InternalNetwork for Layer3 Isolation Domain for communication of compute within and across racks.
     *
     * <p>Creates InternalNetwork PUT method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of defines the Internal Network resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InternalNetworkInner>, InternalNetworkInner> beginCreate(
        String resourceGroupName, String l3IsolationDomainName, String internalNetworkName, InternalNetworkInner body);

    /**
     * Creates InternalNetwork for Layer3 Isolation Domain for communication of compute within and across racks.
     *
     * <p>Creates InternalNetwork PUT method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of defines the Internal Network resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InternalNetworkInner>, InternalNetworkInner> beginCreate(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        InternalNetworkInner body,
        Context context);

    /**
     * Creates InternalNetwork for Layer3 Isolation Domain for communication of compute within and across racks.
     *
     * <p>Creates InternalNetwork PUT method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return defines the Internal Network resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InternalNetworkInner create(
        String resourceGroupName, String l3IsolationDomainName, String internalNetworkName, InternalNetworkInner body);

    /**
     * Creates InternalNetwork for Layer3 Isolation Domain for communication of compute within and across racks.
     *
     * <p>Creates InternalNetwork PUT method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return defines the Internal Network resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InternalNetworkInner create(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        InternalNetworkInner body,
        Context context);

    /**
     * Retrieves details of InternalNetworks using GET method.
     *
     * <p>Gets a InternalNetworks.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InternalNetworks along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<InternalNetworkInner> getWithResponse(
        String resourceGroupName, String l3IsolationDomainName, String internalNetworkName, Context context);

    /**
     * Retrieves details of InternalNetworks using GET method.
     *
     * <p>Gets a InternalNetworks.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InternalNetworks.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InternalNetworkInner get(String resourceGroupName, String l3IsolationDomainName, String internalNetworkName);

    /**
     * API to update certain properties of the InternalNetworks resources.
     *
     * <p>Updates a InternalNetworks.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body InternalNetwork properties to update. Only annotations are supported.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of defines the Internal Network resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InternalNetworkInner>, InternalNetworkInner> beginUpdate(
        String resourceGroupName, String l3IsolationDomainName, String internalNetworkName, InternalNetworkPatch body);

    /**
     * API to update certain properties of the InternalNetworks resources.
     *
     * <p>Updates a InternalNetworks.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body InternalNetwork properties to update. Only annotations are supported.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of defines the Internal Network resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InternalNetworkInner>, InternalNetworkInner> beginUpdate(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        InternalNetworkPatch body,
        Context context);

    /**
     * API to update certain properties of the InternalNetworks resources.
     *
     * <p>Updates a InternalNetworks.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body InternalNetwork properties to update. Only annotations are supported.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return defines the Internal Network resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InternalNetworkInner update(
        String resourceGroupName, String l3IsolationDomainName, String internalNetworkName, InternalNetworkPatch body);

    /**
     * API to update certain properties of the InternalNetworks resources.
     *
     * <p>Updates a InternalNetworks.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body InternalNetwork properties to update. Only annotations are supported.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return defines the Internal Network resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InternalNetworkInner update(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        InternalNetworkPatch body,
        Context context);

    /**
     * Deletes a InternalNetworks.
     *
     * <p>Implements InternalNetworks DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String l3IsolationDomainName, String internalNetworkName);

    /**
     * Deletes a InternalNetworks.
     *
     * <p>Implements InternalNetworks DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String l3IsolationDomainName, String internalNetworkName, Context context);

    /**
     * Deletes a InternalNetworks.
     *
     * <p>Implements InternalNetworks DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String l3IsolationDomainName, String internalNetworkName);

    /**
     * Deletes a InternalNetworks.
     *
     * <p>Implements InternalNetworks DELETE method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String l3IsolationDomainName, String internalNetworkName, Context context);

    /**
     * Executes list operation to display list of all internal networks
     *
     * <p>Displays InternalNetworks list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Internal Networks as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InternalNetworkInner> listByL3IsolationDomain(String resourceGroupName, String l3IsolationDomainName);

    /**
     * Executes list operation to display list of all internal networks
     *
     * <p>Displays InternalNetworks list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Internal Networks as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InternalNetworkInner> listByL3IsolationDomain(
        String resourceGroupName, String l3IsolationDomainName, Context context);

    /**
     * Executes the operation to the underlying resources.
     *
     * <p>Update Administrative state of InternalNetworks on resources referred by their resource ids.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CommonPostActionResponseForStateUpdateInner>, CommonPostActionResponseForStateUpdateInner>
        beginUpdateAdministrativeState(
            String resourceGroupName,
            String l3IsolationDomainName,
            String internalNetworkName,
            UpdateAdministrativeState body);

    /**
     * Executes the operation to the underlying resources.
     *
     * <p>Update Administrative state of InternalNetworks on resources referred by their resource ids.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CommonPostActionResponseForStateUpdateInner>, CommonPostActionResponseForStateUpdateInner>
        beginUpdateAdministrativeState(
            String resourceGroupName,
            String l3IsolationDomainName,
            String internalNetworkName,
            UpdateAdministrativeState body,
            Context context);

    /**
     * Executes the operation to the underlying resources.
     *
     * <p>Update Administrative state of InternalNetworks on resources referred by their resource ids.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CommonPostActionResponseForStateUpdateInner updateAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body);

    /**
     * Executes the operation to the underlying resources.
     *
     * <p>Update Administrative state of InternalNetworks on resources referred by their resource ids.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CommonPostActionResponseForStateUpdateInner updateAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body,
        Context context);

    /**
     * Executes the operation to the underlying resources for updating BGP state on edge devices.
     *
     * <p>Update BGP state for internalNetwork. Allowed only on edge devices.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CommonPostActionResponseForStateUpdateInner>, CommonPostActionResponseForStateUpdateInner>
        beginUpdateBgpAdministrativeState(
            String resourceGroupName,
            String l3IsolationDomainName,
            String internalNetworkName,
            UpdateAdministrativeState body);

    /**
     * Executes the operation to the underlying resources for updating BGP state on edge devices.
     *
     * <p>Update BGP state for internalNetwork. Allowed only on edge devices.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CommonPostActionResponseForStateUpdateInner>, CommonPostActionResponseForStateUpdateInner>
        beginUpdateBgpAdministrativeState(
            String resourceGroupName,
            String l3IsolationDomainName,
            String internalNetworkName,
            UpdateAdministrativeState body,
            Context context);

    /**
     * Executes the operation to the underlying resources for updating BGP state on edge devices.
     *
     * <p>Update BGP state for internalNetwork. Allowed only on edge devices.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CommonPostActionResponseForStateUpdateInner updateBgpAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body);

    /**
     * Executes the operation to the underlying resources for updating BGP state on edge devices.
     *
     * <p>Update BGP state for internalNetwork. Allowed only on edge devices.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CommonPostActionResponseForStateUpdateInner updateBgpAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body,
        Context context);

    /**
     * Implements the operation to the underlying resources.
     *
     * <p>Update Static Route BFD administrative state for internalNetwork.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CommonPostActionResponseForStateUpdateInner>, CommonPostActionResponseForStateUpdateInner>
        beginUpdateStaticRouteBfdAdministrativeState(
            String resourceGroupName,
            String l3IsolationDomainName,
            String internalNetworkName,
            UpdateAdministrativeState body);

    /**
     * Implements the operation to the underlying resources.
     *
     * <p>Update Static Route BFD administrative state for internalNetwork.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CommonPostActionResponseForStateUpdateInner>, CommonPostActionResponseForStateUpdateInner>
        beginUpdateStaticRouteBfdAdministrativeState(
            String resourceGroupName,
            String l3IsolationDomainName,
            String internalNetworkName,
            UpdateAdministrativeState body,
            Context context);

    /**
     * Implements the operation to the underlying resources.
     *
     * <p>Update Static Route BFD administrative state for internalNetwork.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CommonPostActionResponseForStateUpdateInner updateStaticRouteBfdAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body);

    /**
     * Implements the operation to the underlying resources.
     *
     * <p>Update Static Route BFD administrative state for internalNetwork.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l3IsolationDomainName Name of the L3 Isolation Domain.
     * @param internalNetworkName Name of the Internal Network.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return common response for the state updates.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CommonPostActionResponseForStateUpdateInner updateStaticRouteBfdAdministrativeState(
        String resourceGroupName,
        String l3IsolationDomainName,
        String internalNetworkName,
        UpdateAdministrativeState body,
        Context context);
}
