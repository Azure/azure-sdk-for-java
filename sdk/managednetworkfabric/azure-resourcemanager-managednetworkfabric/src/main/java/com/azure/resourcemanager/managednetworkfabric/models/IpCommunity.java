// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.IpCommunityInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of IpCommunity. */
public interface IpCommunity {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the action property: Action to be taken on the configuration. Example: Permit | Deny.
     *
     * @return the action value.
     */
    CommunityActionTypes action();

    /**
     * Gets the wellKnownCommunities property: Supported well known Community List.
     *
     * @return the wellKnownCommunities value.
     */
    List<WellKnownCommunities> wellKnownCommunities();

    /**
     * Gets the communityMembers property: List the communityMembers of IP Community .
     *
     * @return the communityMembers value.
     */
    List<String> communityMembers();

    /**
     * Gets the provisioningState property: Gets the provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the annotation property: Switch configuration description.
     *
     * @return the annotation value.
     */
    String annotation();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.managednetworkfabric.fluent.models.IpCommunityInner object.
     *
     * @return the inner object.
     */
    IpCommunityInner innerModel();

    /** The entirety of the IpCommunity definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The IpCommunity definition stages. */
    interface DefinitionStages {
        /** The first stage of the IpCommunity definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the IpCommunity definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the IpCommunity definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the IpCommunity definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithAction,
                DefinitionStages.WithWellKnownCommunities,
                DefinitionStages.WithCommunityMembers,
                DefinitionStages.WithAnnotation {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            IpCommunity create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            IpCommunity create(Context context);
        }
        /** The stage of the IpCommunity definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the IpCommunity definition allowing to specify action. */
        interface WithAction {
            /**
             * Specifies the action property: Action to be taken on the configuration. Example: Permit | Deny..
             *
             * @param action Action to be taken on the configuration. Example: Permit | Deny.
             * @return the next definition stage.
             */
            WithCreate withAction(CommunityActionTypes action);
        }
        /** The stage of the IpCommunity definition allowing to specify wellKnownCommunities. */
        interface WithWellKnownCommunities {
            /**
             * Specifies the wellKnownCommunities property: Supported well known Community List..
             *
             * @param wellKnownCommunities Supported well known Community List.
             * @return the next definition stage.
             */
            WithCreate withWellKnownCommunities(List<WellKnownCommunities> wellKnownCommunities);
        }
        /** The stage of the IpCommunity definition allowing to specify communityMembers. */
        interface WithCommunityMembers {
            /**
             * Specifies the communityMembers property: List the communityMembers of IP Community ..
             *
             * @param communityMembers List the communityMembers of IP Community .
             * @return the next definition stage.
             */
            WithCreate withCommunityMembers(List<String> communityMembers);
        }
        /** The stage of the IpCommunity definition allowing to specify annotation. */
        interface WithAnnotation {
            /**
             * Specifies the annotation property: Switch configuration description..
             *
             * @param annotation Switch configuration description.
             * @return the next definition stage.
             */
            WithCreate withAnnotation(String annotation);
        }
    }
    /**
     * Begins update for the IpCommunity resource.
     *
     * @return the stage of resource update.
     */
    IpCommunity.Update update();

    /** The template for IpCommunity update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        IpCommunity apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        IpCommunity apply(Context context);
    }
    /** The IpCommunity update stages. */
    interface UpdateStages {
        /** The stage of the IpCommunity update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags.
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    IpCommunity refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    IpCommunity refresh(Context context);
}
