// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;

/** Common properties for Layer3Configuration. */
@Fluent
public final class NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration extends OptionBLayer3Configuration {
    /** Creates an instance of NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration class. */
    public NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration() {
    }

    /** {@inheritDoc} */
    @Override
    public NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration withPeerAsn(Long peerAsn) {
        super.withPeerAsn(peerAsn);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration withVlanId(Integer vlanId) {
        super.withVlanId(vlanId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration withPrimaryIpv4Prefix(
        String primaryIpv4Prefix) {
        super.withPrimaryIpv4Prefix(primaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration withPrimaryIpv6Prefix(
        String primaryIpv6Prefix) {
        super.withPrimaryIpv6Prefix(primaryIpv6Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration withSecondaryIpv4Prefix(
        String secondaryIpv4Prefix) {
        super.withSecondaryIpv4Prefix(secondaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration withSecondaryIpv6Prefix(
        String secondaryIpv6Prefix) {
        super.withSecondaryIpv6Prefix(secondaryIpv6Prefix);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
