// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Peering optionA properties.
 */
@Fluent
public class L3OptionAProperties implements JsonSerializable<L3OptionAProperties> {
    /*
     * MTU to use for option A peering.
     */
    private Integer mtu;

    /*
     * Vlan identifier. Example : 501
     */
    private Integer vlanId;

    /*
     * Fabric ASN number. Example 65001
     */
    private Long fabricAsn;

    /*
     * Peer ASN number.Example : 28
     */
    private Long peerAsn;

    /*
     * BFD configuration properties
     */
    private BfdConfiguration bfdConfiguration;

    /*
     * Ingress Acl. ARM resource ID of Access Control Lists.
     */
    private String ingressAclId;

    /*
     * Egress Acl. ARM resource ID of Access Control Lists.
     */
    private String egressAclId;

    /**
     * Creates an instance of L3OptionAProperties class.
     */
    public L3OptionAProperties() {
    }

    /**
     * Get the mtu property: MTU to use for option A peering.
     * 
     * @return the mtu value.
     */
    public Integer mtu() {
        return this.mtu;
    }

    /**
     * Set the mtu property: MTU to use for option A peering.
     * 
     * @param mtu the mtu value to set.
     * @return the L3OptionAProperties object itself.
     */
    public L3OptionAProperties withMtu(Integer mtu) {
        this.mtu = mtu;
        return this;
    }

    /**
     * Get the vlanId property: Vlan identifier. Example : 501.
     * 
     * @return the vlanId value.
     */
    public Integer vlanId() {
        return this.vlanId;
    }

    /**
     * Set the vlanId property: Vlan identifier. Example : 501.
     * 
     * @param vlanId the vlanId value to set.
     * @return the L3OptionAProperties object itself.
     */
    public L3OptionAProperties withVlanId(Integer vlanId) {
        this.vlanId = vlanId;
        return this;
    }

    /**
     * Get the fabricAsn property: Fabric ASN number. Example 65001.
     * 
     * @return the fabricAsn value.
     */
    public Long fabricAsn() {
        return this.fabricAsn;
    }

    /**
     * Set the fabricAsn property: Fabric ASN number. Example 65001.
     * 
     * @param fabricAsn the fabricAsn value to set.
     * @return the L3OptionAProperties object itself.
     */
    L3OptionAProperties withFabricAsn(Long fabricAsn) {
        this.fabricAsn = fabricAsn;
        return this;
    }

    /**
     * Get the peerAsn property: Peer ASN number.Example : 28.
     * 
     * @return the peerAsn value.
     */
    public Long peerAsn() {
        return this.peerAsn;
    }

    /**
     * Set the peerAsn property: Peer ASN number.Example : 28.
     * 
     * @param peerAsn the peerAsn value to set.
     * @return the L3OptionAProperties object itself.
     */
    public L3OptionAProperties withPeerAsn(Long peerAsn) {
        this.peerAsn = peerAsn;
        return this;
    }

    /**
     * Get the bfdConfiguration property: BFD configuration properties.
     * 
     * @return the bfdConfiguration value.
     */
    public BfdConfiguration bfdConfiguration() {
        return this.bfdConfiguration;
    }

    /**
     * Set the bfdConfiguration property: BFD configuration properties.
     * 
     * @param bfdConfiguration the bfdConfiguration value to set.
     * @return the L3OptionAProperties object itself.
     */
    public L3OptionAProperties withBfdConfiguration(BfdConfiguration bfdConfiguration) {
        this.bfdConfiguration = bfdConfiguration;
        return this;
    }

    /**
     * Get the ingressAclId property: Ingress Acl. ARM resource ID of Access Control Lists.
     * 
     * @return the ingressAclId value.
     */
    public String ingressAclId() {
        return this.ingressAclId;
    }

    /**
     * Set the ingressAclId property: Ingress Acl. ARM resource ID of Access Control Lists.
     * 
     * @param ingressAclId the ingressAclId value to set.
     * @return the L3OptionAProperties object itself.
     */
    public L3OptionAProperties withIngressAclId(String ingressAclId) {
        this.ingressAclId = ingressAclId;
        return this;
    }

    /**
     * Get the egressAclId property: Egress Acl. ARM resource ID of Access Control Lists.
     * 
     * @return the egressAclId value.
     */
    public String egressAclId() {
        return this.egressAclId;
    }

    /**
     * Set the egressAclId property: Egress Acl. ARM resource ID of Access Control Lists.
     * 
     * @param egressAclId the egressAclId value to set.
     * @return the L3OptionAProperties object itself.
     */
    public L3OptionAProperties withEgressAclId(String egressAclId) {
        this.egressAclId = egressAclId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (bfdConfiguration() != null) {
            bfdConfiguration().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("mtu", this.mtu);
        jsonWriter.writeNumberField("vlanId", this.vlanId);
        jsonWriter.writeNumberField("peerASN", this.peerAsn);
        jsonWriter.writeJsonField("bfdConfiguration", this.bfdConfiguration);
        jsonWriter.writeStringField("ingressAclId", this.ingressAclId);
        jsonWriter.writeStringField("egressAclId", this.egressAclId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of L3OptionAProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of L3OptionAProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the L3OptionAProperties.
     */
    public static L3OptionAProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            L3OptionAProperties deserializedL3OptionAProperties = new L3OptionAProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("mtu".equals(fieldName)) {
                    deserializedL3OptionAProperties.mtu = reader.getNullable(JsonReader::getInt);
                } else if ("vlanId".equals(fieldName)) {
                    deserializedL3OptionAProperties.vlanId = reader.getNullable(JsonReader::getInt);
                } else if ("fabricASN".equals(fieldName)) {
                    deserializedL3OptionAProperties.fabricAsn = reader.getNullable(JsonReader::getLong);
                } else if ("peerASN".equals(fieldName)) {
                    deserializedL3OptionAProperties.peerAsn = reader.getNullable(JsonReader::getLong);
                } else if ("bfdConfiguration".equals(fieldName)) {
                    deserializedL3OptionAProperties.bfdConfiguration = BfdConfiguration.fromJson(reader);
                } else if ("ingressAclId".equals(fieldName)) {
                    deserializedL3OptionAProperties.ingressAclId = reader.getString();
                } else if ("egressAclId".equals(fieldName)) {
                    deserializedL3OptionAProperties.egressAclId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedL3OptionAProperties;
        });
    }
}
