// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.managednetworkfabric.models.PrefixActionType;
import com.azure.resourcemanager.managednetworkfabric.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The IpPrefixList resource definition. */
@Fluent
public final class IpPrefixListInner extends Resource {
    /*
     * Resource properties.
     */
    @JsonProperty(value = "properties", required = true)
    private IpPrefixListProperties innerProperties = new IpPrefixListProperties();

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of IpPrefixListInner class. */
    public IpPrefixListInner() {
    }

    /**
     * Get the innerProperties property: Resource properties.
     *
     * @return the innerProperties value.
     */
    private IpPrefixListProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /** {@inheritDoc} */
    @Override
    public IpPrefixListInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public IpPrefixListInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the action property: action. Example: allow | deny.
     *
     * @return the action value.
     */
    public PrefixActionType action() {
        return this.innerProperties() == null ? null : this.innerProperties().action();
    }

    /**
     * Set the action property: action. Example: allow | deny.
     *
     * @param action the action value to set.
     * @return the IpPrefixListInner object itself.
     */
    public IpPrefixListInner withAction(PrefixActionType action) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IpPrefixListProperties();
        }
        this.innerProperties().withAction(action);
        return this;
    }

    /**
     * Get the sequenceNumber property: sequenceNumber of the Ip Prefix List.
     *
     * @return the sequenceNumber value.
     */
    public int sequenceNumber() {
        return this.innerProperties() == null ? 0 : this.innerProperties().sequenceNumber();
    }

    /**
     * Set the sequenceNumber property: sequenceNumber of the Ip Prefix List.
     *
     * @param sequenceNumber the sequenceNumber value to set.
     * @return the IpPrefixListInner object itself.
     */
    public IpPrefixListInner withSequenceNumber(int sequenceNumber) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IpPrefixListProperties();
        }
        this.innerProperties().withSequenceNumber(sequenceNumber);
        return this;
    }

    /**
     * Get the networkAddress property: networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
     *
     * @return the networkAddress value.
     */
    public String networkAddress() {
        return this.innerProperties() == null ? null : this.innerProperties().networkAddress();
    }

    /**
     * Set the networkAddress property: networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
     *
     * @param networkAddress the networkAddress value to set.
     * @return the IpPrefixListInner object itself.
     */
    public IpPrefixListInner withNetworkAddress(String networkAddress) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IpPrefixListProperties();
        }
        this.innerProperties().withNetworkAddress(networkAddress);
        return this;
    }

    /**
     * Get the provisioningState property: Gets the provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the annotation property: Switch configuration description.
     *
     * @return the annotation value.
     */
    public String annotation() {
        return this.innerProperties() == null ? null : this.innerProperties().annotation();
    }

    /**
     * Set the annotation property: Switch configuration description.
     *
     * @param annotation the annotation value to set.
     * @return the IpPrefixListInner object itself.
     */
    public IpPrefixListInner withAnnotation(String annotation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IpPrefixListProperties();
        }
        this.innerProperties().withAnnotation(annotation);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property innerProperties in model IpPrefixListInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(IpPrefixListInner.class);
}
