// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.exception.ManagementError;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.managednetworkfabric.models.ConfigurationState;
import java.io.IOException;

/**
 * The response of the action validate configuration.
 */
@Fluent
public final class ValidateConfigurationResponseInner implements JsonSerializable<ValidateConfigurationResponseInner> {
    /*
     * Gets the configuration state.
     */
    private ConfigurationState configurationState;

    /*
     * URL for the details of the response.
     */
    private String url;

    /*
     * The error object.
     */
    private ManagementError error;

    /**
     * Creates an instance of ValidateConfigurationResponseInner class.
     */
    public ValidateConfigurationResponseInner() {
    }

    /**
     * Get the configurationState property: Gets the configuration state.
     * 
     * @return the configurationState value.
     */
    public ConfigurationState configurationState() {
        return this.configurationState;
    }

    /**
     * Get the url property: URL for the details of the response.
     * 
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Set the url property: URL for the details of the response.
     * 
     * @param url the url value to set.
     * @return the ValidateConfigurationResponseInner object itself.
     */
    public ValidateConfigurationResponseInner withUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Get the error property: The error object.
     * 
     * @return the error value.
     */
    public ManagementError error() {
        return this.error;
    }

    /**
     * Set the error property: The error object.
     * 
     * @param error the error value to set.
     * @return the ValidateConfigurationResponseInner object itself.
     */
    public ValidateConfigurationResponseInner withError(ManagementError error) {
        this.error = error;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("url", this.url);
        jsonWriter.writeJsonField("error", this.error);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ValidateConfigurationResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ValidateConfigurationResponseInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ValidateConfigurationResponseInner.
     */
    public static ValidateConfigurationResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ValidateConfigurationResponseInner deserializedValidateConfigurationResponseInner
                = new ValidateConfigurationResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("configurationState".equals(fieldName)) {
                    deserializedValidateConfigurationResponseInner.configurationState
                        = ConfigurationState.fromString(reader.getString());
                } else if ("url".equals(fieldName)) {
                    deserializedValidateConfigurationResponseInner.url = reader.getString();
                } else if ("error".equals(fieldName)) {
                    deserializedValidateConfigurationResponseInner.error = ManagementError.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedValidateConfigurationResponseInner;
        });
    }
}
