// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Supported connector properties.
 */
@Fluent
public final class SupportedConnectorProperties implements JsonSerializable<SupportedConnectorProperties> {
    /*
     * Type of connector used. Example: Optical.
     */
    private String connectorType;

    /*
     * Maximum speed of the connector in Mbps.
     */
    private Integer maxSpeedInMbps;

    /**
     * Creates an instance of SupportedConnectorProperties class.
     */
    public SupportedConnectorProperties() {
    }

    /**
     * Get the connectorType property: Type of connector used. Example: Optical.
     * 
     * @return the connectorType value.
     */
    public String connectorType() {
        return this.connectorType;
    }

    /**
     * Set the connectorType property: Type of connector used. Example: Optical.
     * 
     * @param connectorType the connectorType value to set.
     * @return the SupportedConnectorProperties object itself.
     */
    public SupportedConnectorProperties withConnectorType(String connectorType) {
        this.connectorType = connectorType;
        return this;
    }

    /**
     * Get the maxSpeedInMbps property: Maximum speed of the connector in Mbps.
     * 
     * @return the maxSpeedInMbps value.
     */
    public Integer maxSpeedInMbps() {
        return this.maxSpeedInMbps;
    }

    /**
     * Set the maxSpeedInMbps property: Maximum speed of the connector in Mbps.
     * 
     * @param maxSpeedInMbps the maxSpeedInMbps value to set.
     * @return the SupportedConnectorProperties object itself.
     */
    public SupportedConnectorProperties withMaxSpeedInMbps(Integer maxSpeedInMbps) {
        this.maxSpeedInMbps = maxSpeedInMbps;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("connectorType", this.connectorType);
        jsonWriter.writeNumberField("maxSpeedInMbps", this.maxSpeedInMbps);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SupportedConnectorProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SupportedConnectorProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SupportedConnectorProperties.
     */
    public static SupportedConnectorProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SupportedConnectorProperties deserializedSupportedConnectorProperties = new SupportedConnectorProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("connectorType".equals(fieldName)) {
                    deserializedSupportedConnectorProperties.connectorType = reader.getString();
                } else if ("maxSpeedInMbps".equals(fieldName)) {
                    deserializedSupportedConnectorProperties.maxSpeedInMbps = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSupportedConnectorProperties;
        });
    }
}
