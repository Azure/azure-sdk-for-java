// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.IpPrefixListInner;
import java.util.Map;

/** An immutable client-side representation of IpPrefixList. */
public interface IpPrefixList {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the action property: action. Example: allow | deny.
     *
     * @return the action value.
     */
    PrefixActionType action();

    /**
     * Gets the sequenceNumber property: sequenceNumber of the Ip Prefix List.
     *
     * @return the sequenceNumber value.
     */
    int sequenceNumber();

    /**
     * Gets the networkAddress property: networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
     *
     * @return the networkAddress value.
     */
    String networkAddress();

    /**
     * Gets the provisioningState property: Gets the provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the annotation property: Switch configuration description.
     *
     * @return the annotation value.
     */
    String annotation();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.managednetworkfabric.fluent.models.IpPrefixListInner object.
     *
     * @return the inner object.
     */
    IpPrefixListInner innerModel();

    /** The entirety of the IpPrefixList definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithAction,
            DefinitionStages.WithSequenceNumber,
            DefinitionStages.WithNetworkAddress,
            DefinitionStages.WithCreate {
    }
    /** The IpPrefixList definition stages. */
    interface DefinitionStages {
        /** The first stage of the IpPrefixList definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the IpPrefixList definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the IpPrefixList definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithAction withExistingResourceGroup(String resourceGroupName);
        }
        /** The stage of the IpPrefixList definition allowing to specify action. */
        interface WithAction {
            /**
             * Specifies the action property: action. Example: allow | deny..
             *
             * @param action action. Example: allow | deny.
             * @return the next definition stage.
             */
            WithSequenceNumber withAction(PrefixActionType action);
        }
        /** The stage of the IpPrefixList definition allowing to specify sequenceNumber. */
        interface WithSequenceNumber {
            /**
             * Specifies the sequenceNumber property: sequenceNumber of the Ip Prefix List..
             *
             * @param sequenceNumber sequenceNumber of the Ip Prefix List.
             * @return the next definition stage.
             */
            WithNetworkAddress withSequenceNumber(int sequenceNumber);
        }
        /** The stage of the IpPrefixList definition allowing to specify networkAddress. */
        interface WithNetworkAddress {
            /**
             * Specifies the networkAddress property: networkAddress. Example:1.1.1.0/24 | 1.1.10.10..
             *
             * @param networkAddress networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
             * @return the next definition stage.
             */
            WithCreate withNetworkAddress(String networkAddress);
        }
        /**
         * The stage of the IpPrefixList definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithAnnotation {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            IpPrefixList create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            IpPrefixList create(Context context);
        }
        /** The stage of the IpPrefixList definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the IpPrefixList definition allowing to specify annotation. */
        interface WithAnnotation {
            /**
             * Specifies the annotation property: Switch configuration description..
             *
             * @param annotation Switch configuration description.
             * @return the next definition stage.
             */
            WithCreate withAnnotation(String annotation);
        }
    }
    /**
     * Begins update for the IpPrefixList resource.
     *
     * @return the stage of resource update.
     */
    IpPrefixList.Update update();

    /** The template for IpPrefixList update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithAction,
            UpdateStages.WithSequenceNumber,
            UpdateStages.WithNetworkAddress,
            UpdateStages.WithAnnotation {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        IpPrefixList apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        IpPrefixList apply(Context context);
    }
    /** The IpPrefixList update stages. */
    interface UpdateStages {
        /** The stage of the IpPrefixList update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags.
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the IpPrefixList update allowing to specify action. */
        interface WithAction {
            /**
             * Specifies the action property: action. Example: allow | deny..
             *
             * @param action action. Example: allow | deny.
             * @return the next definition stage.
             */
            Update withAction(PrefixActionType action);
        }
        /** The stage of the IpPrefixList update allowing to specify sequenceNumber. */
        interface WithSequenceNumber {
            /**
             * Specifies the sequenceNumber property: sequenceNumber of the Ip Prefix List..
             *
             * @param sequenceNumber sequenceNumber of the Ip Prefix List.
             * @return the next definition stage.
             */
            Update withSequenceNumber(Integer sequenceNumber);
        }
        /** The stage of the IpPrefixList update allowing to specify networkAddress. */
        interface WithNetworkAddress {
            /**
             * Specifies the networkAddress property: networkAddress. Example:1.1.1.0/24 | 1.1.10.10..
             *
             * @param networkAddress networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
             * @return the next definition stage.
             */
            Update withNetworkAddress(String networkAddress);
        }
        /** The stage of the IpPrefixList update allowing to specify annotation. */
        interface WithAnnotation {
            /**
             * Specifies the annotation property: Switch configuration description..
             *
             * @param annotation Switch configuration description.
             * @return the next definition stage.
             */
            Update withAnnotation(String annotation);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    IpPrefixList refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    IpPrefixList refresh(Context context);
}
