// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.managednetworkfabric.fluent.NetworkRackSkusClient;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.NetworkRackSkuInner;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkRackSku;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkRackSkus;

public final class NetworkRackSkusImpl implements NetworkRackSkus {
    private static final ClientLogger LOGGER = new ClientLogger(NetworkRackSkusImpl.class);

    private final NetworkRackSkusClient innerClient;

    private final com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager serviceManager;

    public NetworkRackSkusImpl(
        NetworkRackSkusClient innerClient,
        com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<NetworkRackSku> getWithResponse(String networkRackSkuName, Context context) {
        Response<NetworkRackSkuInner> inner = this.serviceClient().getWithResponse(networkRackSkuName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new NetworkRackSkuImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public NetworkRackSku get(String networkRackSkuName) {
        NetworkRackSkuInner inner = this.serviceClient().get(networkRackSkuName);
        if (inner != null) {
            return new NetworkRackSkuImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<NetworkRackSku> list() {
        PagedIterable<NetworkRackSkuInner> inner = this.serviceClient().list();
        return Utils.mapPage(inner, inner1 -> new NetworkRackSkuImpl(inner1, this.manager()));
    }

    public PagedIterable<NetworkRackSku> list(Context context) {
        PagedIterable<NetworkRackSkuInner> inner = this.serviceClient().list(context);
        return Utils.mapPage(inner, inner1 -> new NetworkRackSkuImpl(inner1, this.manager()));
    }

    private NetworkRackSkusClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager manager() {
        return this.serviceManager;
    }
}
