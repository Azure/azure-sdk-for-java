// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.InternetGatewayInner;
import com.azure.resourcemanager.managednetworkfabric.models.InternetGatewayPatch;

/** An instance of this class provides access to all the operations defined in InternetGatewaysClient. */
public interface InternetGatewaysClient {
    /**
     * Create a Network Fabric Service Internet Gateway.
     *
     * <p>Creates a Network Fabric Service Internet Gateway resource instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Internet Gateway resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InternetGatewayInner>, InternetGatewayInner> beginCreate(
        String resourceGroupName, String internetGatewayName, InternetGatewayInner body);

    /**
     * Create a Network Fabric Service Internet Gateway.
     *
     * <p>Creates a Network Fabric Service Internet Gateway resource instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Internet Gateway resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InternetGatewayInner>, InternetGatewayInner> beginCreate(
        String resourceGroupName, String internetGatewayName, InternetGatewayInner body, Context context);

    /**
     * Create a Network Fabric Service Internet Gateway.
     *
     * <p>Creates a Network Fabric Service Internet Gateway resource instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Internet Gateway resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InternetGatewayInner create(String resourceGroupName, String internetGatewayName, InternetGatewayInner body);

    /**
     * Create a Network Fabric Service Internet Gateway.
     *
     * <p>Creates a Network Fabric Service Internet Gateway resource instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Internet Gateway resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InternetGatewayInner create(
        String resourceGroupName, String internetGatewayName, InternetGatewayInner body, Context context);

    /**
     * Retrieves details of Network Fabric Service Internet Gateway.
     *
     * <p>Implements Gateway GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Internet Gateway resource definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<InternetGatewayInner> getByResourceGroupWithResponse(
        String resourceGroupName, String internetGatewayName, Context context);

    /**
     * Retrieves details of Network Fabric Service Internet Gateway.
     *
     * <p>Implements Gateway GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Internet Gateway resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InternetGatewayInner getByResourceGroup(String resourceGroupName, String internetGatewayName);

    /**
     * Updates a Network Fabric Service Internet Gateway.
     *
     * <p>Execute patch on Network Fabric Service Internet Gateway.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @param body API to update certain properties of the L2 Isolation Domain resource..
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Internet Gateway resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InternetGatewayInner>, InternetGatewayInner> beginUpdate(
        String resourceGroupName, String internetGatewayName, InternetGatewayPatch body);

    /**
     * Updates a Network Fabric Service Internet Gateway.
     *
     * <p>Execute patch on Network Fabric Service Internet Gateway.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @param body API to update certain properties of the L2 Isolation Domain resource..
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Internet Gateway resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InternetGatewayInner>, InternetGatewayInner> beginUpdate(
        String resourceGroupName, String internetGatewayName, InternetGatewayPatch body, Context context);

    /**
     * Updates a Network Fabric Service Internet Gateway.
     *
     * <p>Execute patch on Network Fabric Service Internet Gateway.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @param body API to update certain properties of the L2 Isolation Domain resource..
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Internet Gateway resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InternetGatewayInner update(String resourceGroupName, String internetGatewayName, InternetGatewayPatch body);

    /**
     * Updates a Network Fabric Service Internet Gateway.
     *
     * <p>Execute patch on Network Fabric Service Internet Gateway.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @param body API to update certain properties of the L2 Isolation Domain resource..
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Internet Gateway resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InternetGatewayInner update(
        String resourceGroupName, String internetGatewayName, InternetGatewayPatch body, Context context);

    /**
     * Deletes a Network Fabric Service Internet Gateway.
     *
     * <p>Execute a delete on Network Fabric Service Internet Gateway.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String internetGatewayName);

    /**
     * Deletes a Network Fabric Service Internet Gateway.
     *
     * <p>Execute a delete on Network Fabric Service Internet Gateway.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String internetGatewayName, Context context);

    /**
     * Deletes a Network Fabric Service Internet Gateway.
     *
     * <p>Execute a delete on Network Fabric Service Internet Gateway.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String internetGatewayName);

    /**
     * Deletes a Network Fabric Service Internet Gateway.
     *
     * <p>Execute a delete on Network Fabric Service Internet Gateway.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param internetGatewayName Name of the Internet Gateway.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String internetGatewayName, Context context);

    /**
     * List Internet Gateways by resource group.
     *
     * <p>Displays Internet Gateways list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of InternetGateways as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InternetGatewayInner> listByResourceGroup(String resourceGroupName);

    /**
     * List Internet Gateways by resource group.
     *
     * <p>Displays Internet Gateways list by resource group GET method.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of InternetGateways as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InternetGatewayInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List Internet Gateways by subscription.
     *
     * <p>Displays Internet Gateways list by subscription GET method.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of InternetGateways as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InternetGatewayInner> list();

    /**
     * List Internet Gateways by subscription.
     *
     * <p>Displays Internet Gateways list by subscription GET method.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of InternetGateways as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InternetGatewayInner> list(Context context);
}
