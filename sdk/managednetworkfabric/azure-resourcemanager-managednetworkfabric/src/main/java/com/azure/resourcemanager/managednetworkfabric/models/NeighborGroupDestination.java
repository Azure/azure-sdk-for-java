// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** An array of destination IPv4 Addresses or IPv6 Addresses. */
@Fluent
public final class NeighborGroupDestination {
    /*
     * Array of IPv4 Addresses.
     */
    @JsonProperty(value = "ipv4Addresses")
    private List<String> ipv4Addresses;

    /*
     * Array of IPv6 Addresses.
     */
    @JsonProperty(value = "ipv6Addresses")
    private List<String> ipv6Addresses;

    /** Creates an instance of NeighborGroupDestination class. */
    public NeighborGroupDestination() {
    }

    /**
     * Get the ipv4Addresses property: Array of IPv4 Addresses.
     *
     * @return the ipv4Addresses value.
     */
    public List<String> ipv4Addresses() {
        return this.ipv4Addresses;
    }

    /**
     * Set the ipv4Addresses property: Array of IPv4 Addresses.
     *
     * @param ipv4Addresses the ipv4Addresses value to set.
     * @return the NeighborGroupDestination object itself.
     */
    public NeighborGroupDestination withIpv4Addresses(List<String> ipv4Addresses) {
        this.ipv4Addresses = ipv4Addresses;
        return this;
    }

    /**
     * Get the ipv6Addresses property: Array of IPv6 Addresses.
     *
     * @return the ipv6Addresses value.
     */
    public List<String> ipv6Addresses() {
        return this.ipv6Addresses;
    }

    /**
     * Set the ipv6Addresses property: Array of IPv6 Addresses.
     *
     * @param ipv6Addresses the ipv6Addresses value to set.
     * @return the NeighborGroupDestination object itself.
     */
    public NeighborGroupDestination withIpv6Addresses(List<String> ipv6Addresses) {
        this.ipv6Addresses = ipv6Addresses;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
