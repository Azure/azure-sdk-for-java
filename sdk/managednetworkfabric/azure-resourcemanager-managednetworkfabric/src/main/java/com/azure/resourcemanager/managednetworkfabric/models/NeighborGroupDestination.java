// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * An array of destination IPv4 Addresses or IPv6 Addresses.
 */
@Fluent
public final class NeighborGroupDestination implements JsonSerializable<NeighborGroupDestination> {
    /*
     * Array of IPv4 Addresses.
     */
    private List<String> ipv4Addresses;

    /*
     * Array of IPv6 Addresses.
     */
    private List<String> ipv6Addresses;

    /**
     * Creates an instance of NeighborGroupDestination class.
     */
    public NeighborGroupDestination() {
    }

    /**
     * Get the ipv4Addresses property: Array of IPv4 Addresses.
     * 
     * @return the ipv4Addresses value.
     */
    public List<String> ipv4Addresses() {
        return this.ipv4Addresses;
    }

    /**
     * Set the ipv4Addresses property: Array of IPv4 Addresses.
     * 
     * @param ipv4Addresses the ipv4Addresses value to set.
     * @return the NeighborGroupDestination object itself.
     */
    public NeighborGroupDestination withIpv4Addresses(List<String> ipv4Addresses) {
        this.ipv4Addresses = ipv4Addresses;
        return this;
    }

    /**
     * Get the ipv6Addresses property: Array of IPv6 Addresses.
     * 
     * @return the ipv6Addresses value.
     */
    public List<String> ipv6Addresses() {
        return this.ipv6Addresses;
    }

    /**
     * Set the ipv6Addresses property: Array of IPv6 Addresses.
     * 
     * @param ipv6Addresses the ipv6Addresses value to set.
     * @return the NeighborGroupDestination object itself.
     */
    public NeighborGroupDestination withIpv6Addresses(List<String> ipv6Addresses) {
        this.ipv6Addresses = ipv6Addresses;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("ipv4Addresses", this.ipv4Addresses,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("ipv6Addresses", this.ipv6Addresses,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NeighborGroupDestination from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NeighborGroupDestination if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the NeighborGroupDestination.
     */
    public static NeighborGroupDestination fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NeighborGroupDestination deserializedNeighborGroupDestination = new NeighborGroupDestination();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("ipv4Addresses".equals(fieldName)) {
                    List<String> ipv4Addresses = reader.readArray(reader1 -> reader1.getString());
                    deserializedNeighborGroupDestination.ipv4Addresses = ipv4Addresses;
                } else if ("ipv6Addresses".equals(fieldName)) {
                    List<String> ipv6Addresses = reader.readArray(reader1 -> reader1.getString());
                    deserializedNeighborGroupDestination.ipv6Addresses = ipv6Addresses;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNeighborGroupDestination;
        });
    }
}
