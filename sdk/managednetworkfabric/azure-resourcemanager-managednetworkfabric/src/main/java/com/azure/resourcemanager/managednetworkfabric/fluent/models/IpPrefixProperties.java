// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.managednetworkfabric.models.AdministrativeState;
import com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource;
import com.azure.resourcemanager.managednetworkfabric.models.ConfigurationState;
import com.azure.resourcemanager.managednetworkfabric.models.IpPrefixRule;
import com.azure.resourcemanager.managednetworkfabric.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** IP Prefix Properties defines the properties of the resource. */
@Fluent
public final class IpPrefixProperties extends AnnotationResource {
    /*
     * Configuration state of the resource.
     */
    @JsonProperty(value = "configurationState", access = JsonProperty.Access.WRITE_ONLY)
    private ConfigurationState configurationState;

    /*
     * Provisioning state of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Administrative state of the resource.
     */
    @JsonProperty(value = "administrativeState", access = JsonProperty.Access.WRITE_ONLY)
    private AdministrativeState administrativeState;

    /*
     * The list of IP Prefix Rules.
     */
    @JsonProperty(value = "ipPrefixRules")
    private List<IpPrefixRule> ipPrefixRules;

    /** Creates an instance of IpPrefixProperties class. */
    public IpPrefixProperties() {
    }

    /**
     * Get the configurationState property: Configuration state of the resource.
     *
     * @return the configurationState value.
     */
    public ConfigurationState configurationState() {
        return this.configurationState;
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the administrativeState property: Administrative state of the resource.
     *
     * @return the administrativeState value.
     */
    public AdministrativeState administrativeState() {
        return this.administrativeState;
    }

    /**
     * Get the ipPrefixRules property: The list of IP Prefix Rules.
     *
     * @return the ipPrefixRules value.
     */
    public List<IpPrefixRule> ipPrefixRules() {
        return this.ipPrefixRules;
    }

    /**
     * Set the ipPrefixRules property: The list of IP Prefix Rules.
     *
     * @param ipPrefixRules the ipPrefixRules value to set.
     * @return the IpPrefixProperties object itself.
     */
    public IpPrefixProperties withIpPrefixRules(List<IpPrefixRule> ipPrefixRules) {
        this.ipPrefixRules = ipPrefixRules;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public IpPrefixProperties withAnnotation(String annotation) {
        super.withAnnotation(annotation);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (ipPrefixRules() != null) {
            ipPrefixRules().forEach(e -> e.validate());
        }
    }
}
