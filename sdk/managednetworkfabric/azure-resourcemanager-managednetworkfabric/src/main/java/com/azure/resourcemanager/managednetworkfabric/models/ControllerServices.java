// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Network Fabric Controller services. */
@Fluent
public final class ControllerServices {
    /*
     * The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default
     * value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional attribute.
     */
    @JsonProperty(value = "ipv4AddressSpaces")
    private List<String> ipv4AddressSpaces;

    /*
     * The IPv6 is not supported right now.
     */
    @JsonProperty(value = "ipv6AddressSpaces")
    private List<String> ipv6AddressSpaces;

    /** Creates an instance of ControllerServices class. */
    public ControllerServices() {
    }

    /**
     * Get the ipv4AddressSpaces property: The IPv4 Address space is optional, if the value is not defined at the time
     * of NFC creation, then the default value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional
     * attribute.
     *
     * @return the ipv4AddressSpaces value.
     */
    public List<String> ipv4AddressSpaces() {
        return this.ipv4AddressSpaces;
    }

    /**
     * Set the ipv4AddressSpaces property: The IPv4 Address space is optional, if the value is not defined at the time
     * of NFC creation, then the default value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional
     * attribute.
     *
     * @param ipv4AddressSpaces the ipv4AddressSpaces value to set.
     * @return the ControllerServices object itself.
     */
    public ControllerServices withIpv4AddressSpaces(List<String> ipv4AddressSpaces) {
        this.ipv4AddressSpaces = ipv4AddressSpaces;
        return this;
    }

    /**
     * Get the ipv6AddressSpaces property: The IPv6 is not supported right now.
     *
     * @return the ipv6AddressSpaces value.
     */
    public List<String> ipv6AddressSpaces() {
        return this.ipv6AddressSpaces;
    }

    /**
     * Set the ipv6AddressSpaces property: The IPv6 is not supported right now.
     *
     * @param ipv6AddressSpaces the ipv6AddressSpaces value to set.
     * @return the ControllerServices object itself.
     */
    public ControllerServices withIpv6AddressSpaces(List<String> ipv6AddressSpaces) {
        this.ipv6AddressSpaces = ipv6AddressSpaces;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
