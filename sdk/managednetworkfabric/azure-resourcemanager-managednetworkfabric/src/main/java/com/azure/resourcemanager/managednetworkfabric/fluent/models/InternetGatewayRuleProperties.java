// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource;
import com.azure.resourcemanager.managednetworkfabric.models.ProvisioningState;
import com.azure.resourcemanager.managednetworkfabric.models.RuleProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Internet Gateway Rule Properties defines the resource properties. */
@Fluent
public final class InternetGatewayRuleProperties extends AnnotationResource {
    /*
     * Rules for the InternetGateways
     */
    @JsonProperty(value = "ruleProperties", required = true)
    private RuleProperties ruleProperties;

    /*
     * Provisioning state of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * List of Internet Gateway resource Id.
     */
    @JsonProperty(value = "internetGatewayIds", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> internetGatewayIds;

    /** Creates an instance of InternetGatewayRuleProperties class. */
    public InternetGatewayRuleProperties() {
    }

    /**
     * Get the ruleProperties property: Rules for the InternetGateways.
     *
     * @return the ruleProperties value.
     */
    public RuleProperties ruleProperties() {
        return this.ruleProperties;
    }

    /**
     * Set the ruleProperties property: Rules for the InternetGateways.
     *
     * @param ruleProperties the ruleProperties value to set.
     * @return the InternetGatewayRuleProperties object itself.
     */
    public InternetGatewayRuleProperties withRuleProperties(RuleProperties ruleProperties) {
        this.ruleProperties = ruleProperties;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the internetGatewayIds property: List of Internet Gateway resource Id.
     *
     * @return the internetGatewayIds value.
     */
    public List<String> internetGatewayIds() {
        return this.internetGatewayIds;
    }

    /** {@inheritDoc} */
    @Override
    public InternetGatewayRuleProperties withAnnotation(String annotation) {
        super.withAnnotation(annotation);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (ruleProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property ruleProperties in model InternetGatewayRuleProperties"));
        } else {
            ruleProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(InternetGatewayRuleProperties.class);
}
