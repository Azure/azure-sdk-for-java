// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * BFD configuration properties.
 */
@Fluent
public final class BfdConfiguration implements JsonSerializable<BfdConfiguration> {
    /*
     * Administrative state of the BfdConfiguration. Example: Enabled | Disabled.
     */
    private BfdAdministrativeState administrativeState;

    /*
     * Interval in milliseconds. Example: 300.
     */
    private Integer intervalInMilliSeconds;

    /*
     * Multiplier for the Bfd Configuration. Example: 5.
     */
    private Integer multiplier;

    /**
     * Creates an instance of BfdConfiguration class.
     */
    public BfdConfiguration() {
    }

    /**
     * Get the administrativeState property: Administrative state of the BfdConfiguration. Example: Enabled | Disabled.
     * 
     * @return the administrativeState value.
     */
    public BfdAdministrativeState administrativeState() {
        return this.administrativeState;
    }

    /**
     * Get the intervalInMilliSeconds property: Interval in milliseconds. Example: 300.
     * 
     * @return the intervalInMilliSeconds value.
     */
    public Integer intervalInMilliSeconds() {
        return this.intervalInMilliSeconds;
    }

    /**
     * Set the intervalInMilliSeconds property: Interval in milliseconds. Example: 300.
     * 
     * @param intervalInMilliSeconds the intervalInMilliSeconds value to set.
     * @return the BfdConfiguration object itself.
     */
    public BfdConfiguration withIntervalInMilliSeconds(Integer intervalInMilliSeconds) {
        this.intervalInMilliSeconds = intervalInMilliSeconds;
        return this;
    }

    /**
     * Get the multiplier property: Multiplier for the Bfd Configuration. Example: 5.
     * 
     * @return the multiplier value.
     */
    public Integer multiplier() {
        return this.multiplier;
    }

    /**
     * Set the multiplier property: Multiplier for the Bfd Configuration. Example: 5.
     * 
     * @param multiplier the multiplier value to set.
     * @return the BfdConfiguration object itself.
     */
    public BfdConfiguration withMultiplier(Integer multiplier) {
        this.multiplier = multiplier;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("intervalInMilliSeconds", this.intervalInMilliSeconds);
        jsonWriter.writeNumberField("multiplier", this.multiplier);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BfdConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BfdConfiguration if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the BfdConfiguration.
     */
    public static BfdConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BfdConfiguration deserializedBfdConfiguration = new BfdConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("administrativeState".equals(fieldName)) {
                    deserializedBfdConfiguration.administrativeState
                        = BfdAdministrativeState.fromString(reader.getString());
                } else if ("intervalInMilliSeconds".equals(fieldName)) {
                    deserializedBfdConfiguration.intervalInMilliSeconds = reader.getNullable(JsonReader::getInt);
                } else if ("multiplier".equals(fieldName)) {
                    deserializedBfdConfiguration.multiplier = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBfdConfiguration;
        });
    }
}
