// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Supported version details of the network device. */
@Fluent
public final class SupportedVersionProperties {
    /*
     * Operating system and firmware combined versions.
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * Operating system version.
     */
    @JsonProperty(value = "vendorOsVersion")
    private String vendorOsVersion;

    /*
     * Firmware version.
     */
    @JsonProperty(value = "vendorFirmwareVersion")
    private String vendorFirmwareVersion;

    /*
     * If true newly provisioned Fabric will use this device version by default to bootstrap the network devices for
     * the first time.
     */
    @JsonProperty(value = "isDefault")
    private BooleanEnumProperty isDefault;

    /** Creates an instance of SupportedVersionProperties class. */
    public SupportedVersionProperties() {
    }

    /**
     * Get the version property: Operating system and firmware combined versions.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: Operating system and firmware combined versions.
     *
     * @param version the version value to set.
     * @return the SupportedVersionProperties object itself.
     */
    public SupportedVersionProperties withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the vendorOsVersion property: Operating system version.
     *
     * @return the vendorOsVersion value.
     */
    public String vendorOsVersion() {
        return this.vendorOsVersion;
    }

    /**
     * Set the vendorOsVersion property: Operating system version.
     *
     * @param vendorOsVersion the vendorOsVersion value to set.
     * @return the SupportedVersionProperties object itself.
     */
    public SupportedVersionProperties withVendorOsVersion(String vendorOsVersion) {
        this.vendorOsVersion = vendorOsVersion;
        return this;
    }

    /**
     * Get the vendorFirmwareVersion property: Firmware version.
     *
     * @return the vendorFirmwareVersion value.
     */
    public String vendorFirmwareVersion() {
        return this.vendorFirmwareVersion;
    }

    /**
     * Set the vendorFirmwareVersion property: Firmware version.
     *
     * @param vendorFirmwareVersion the vendorFirmwareVersion value to set.
     * @return the SupportedVersionProperties object itself.
     */
    public SupportedVersionProperties withVendorFirmwareVersion(String vendorFirmwareVersion) {
        this.vendorFirmwareVersion = vendorFirmwareVersion;
        return this;
    }

    /**
     * Get the isDefault property: If true newly provisioned Fabric will use this device version by default to bootstrap
     * the network devices for the first time.
     *
     * @return the isDefault value.
     */
    public BooleanEnumProperty isDefault() {
        return this.isDefault;
    }

    /**
     * Set the isDefault property: If true newly provisioned Fabric will use this device version by default to bootstrap
     * the network devices for the first time.
     *
     * @param isDefault the isDefault value to set.
     * @return the SupportedVersionProperties object itself.
     */
    public SupportedVersionProperties withIsDefault(BooleanEnumProperty isDefault) {
        this.isDefault = isDefault;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
