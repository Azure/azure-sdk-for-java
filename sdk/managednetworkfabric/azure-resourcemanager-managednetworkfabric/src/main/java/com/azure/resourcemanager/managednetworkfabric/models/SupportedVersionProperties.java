// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Supported version details of the network device.
 */
@Fluent
public final class SupportedVersionProperties implements JsonSerializable<SupportedVersionProperties> {
    /*
     * Operating system and firmware combined versions.
     */
    private String version;

    /*
     * Operating system version.
     */
    private String vendorOsVersion;

    /*
     * Firmware version.
     */
    private String vendorFirmwareVersion;

    /*
     * If true newly provisioned Fabric will use this device version by default to bootstrap the network devices for the
     * first time.
     */
    private BooleanEnumProperty isDefault;

    /**
     * Creates an instance of SupportedVersionProperties class.
     */
    public SupportedVersionProperties() {
    }

    /**
     * Get the version property: Operating system and firmware combined versions.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: Operating system and firmware combined versions.
     * 
     * @param version the version value to set.
     * @return the SupportedVersionProperties object itself.
     */
    public SupportedVersionProperties withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the vendorOsVersion property: Operating system version.
     * 
     * @return the vendorOsVersion value.
     */
    public String vendorOsVersion() {
        return this.vendorOsVersion;
    }

    /**
     * Set the vendorOsVersion property: Operating system version.
     * 
     * @param vendorOsVersion the vendorOsVersion value to set.
     * @return the SupportedVersionProperties object itself.
     */
    public SupportedVersionProperties withVendorOsVersion(String vendorOsVersion) {
        this.vendorOsVersion = vendorOsVersion;
        return this;
    }

    /**
     * Get the vendorFirmwareVersion property: Firmware version.
     * 
     * @return the vendorFirmwareVersion value.
     */
    public String vendorFirmwareVersion() {
        return this.vendorFirmwareVersion;
    }

    /**
     * Set the vendorFirmwareVersion property: Firmware version.
     * 
     * @param vendorFirmwareVersion the vendorFirmwareVersion value to set.
     * @return the SupportedVersionProperties object itself.
     */
    public SupportedVersionProperties withVendorFirmwareVersion(String vendorFirmwareVersion) {
        this.vendorFirmwareVersion = vendorFirmwareVersion;
        return this;
    }

    /**
     * Get the isDefault property: If true newly provisioned Fabric will use this device version by default to bootstrap
     * the network devices for the first time.
     * 
     * @return the isDefault value.
     */
    public BooleanEnumProperty isDefault() {
        return this.isDefault;
    }

    /**
     * Set the isDefault property: If true newly provisioned Fabric will use this device version by default to bootstrap
     * the network devices for the first time.
     * 
     * @param isDefault the isDefault value to set.
     * @return the SupportedVersionProperties object itself.
     */
    public SupportedVersionProperties withIsDefault(BooleanEnumProperty isDefault) {
        this.isDefault = isDefault;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("version", this.version);
        jsonWriter.writeStringField("vendorOsVersion", this.vendorOsVersion);
        jsonWriter.writeStringField("vendorFirmwareVersion", this.vendorFirmwareVersion);
        jsonWriter.writeStringField("isDefault", this.isDefault == null ? null : this.isDefault.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SupportedVersionProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SupportedVersionProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SupportedVersionProperties.
     */
    public static SupportedVersionProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SupportedVersionProperties deserializedSupportedVersionProperties = new SupportedVersionProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("version".equals(fieldName)) {
                    deserializedSupportedVersionProperties.version = reader.getString();
                } else if ("vendorOsVersion".equals(fieldName)) {
                    deserializedSupportedVersionProperties.vendorOsVersion = reader.getString();
                } else if ("vendorFirmwareVersion".equals(fieldName)) {
                    deserializedSupportedVersionProperties.vendorFirmwareVersion = reader.getString();
                } else if ("isDefault".equals(fieldName)) {
                    deserializedSupportedVersionProperties.isDefault
                        = BooleanEnumProperty.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSupportedVersionProperties;
        });
    }
}
