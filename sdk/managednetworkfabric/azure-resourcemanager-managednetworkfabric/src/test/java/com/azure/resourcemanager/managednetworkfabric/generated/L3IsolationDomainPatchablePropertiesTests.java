// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.AggregateRoute;
import com.azure.resourcemanager.managednetworkfabric.models.AggregateRouteConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.ConnectedSubnetRoutePolicy;
import com.azure.resourcemanager.managednetworkfabric.models.L3ExportRoutePolicy;
import com.azure.resourcemanager.managednetworkfabric.models.L3IsolationDomainPatchableProperties;
import com.azure.resourcemanager.managednetworkfabric.models.RedistributeConnectedSubnets;
import com.azure.resourcemanager.managednetworkfabric.models.RedistributeStaticRoutes;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class L3IsolationDomainPatchablePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        L3IsolationDomainPatchableProperties model = BinaryData.fromString(
            "{\"redistributeConnectedSubnets\":\"True\",\"redistributeStaticRoutes\":\"False\",\"aggregateRouteConfiguration\":{\"ipv4Routes\":[{\"prefix\":\"oiqtamtyvskn\"},{\"prefix\":\"rwzawnvs\"}],\"ipv6Routes\":[{\"prefix\":\"hzagxnvhycvdimw\"},{\"prefix\":\"zregzgyufutrwpw\"}]},\"connectedSubnetRoutePolicy\":{\"exportRoutePolicyId\":\"ekzkdhmeottaw\",\"exportRoutePolicy\":{\"exportIpv4RoutePolicyId\":\"sxwwhnhjtf\",\"exportIpv6RoutePolicyId\":\"n\"}}}")
            .toObject(L3IsolationDomainPatchableProperties.class);
        Assertions.assertEquals(RedistributeConnectedSubnets.TRUE, model.redistributeConnectedSubnets());
        Assertions.assertEquals(RedistributeStaticRoutes.FALSE, model.redistributeStaticRoutes());
        Assertions.assertEquals("oiqtamtyvskn", model.aggregateRouteConfiguration().ipv4Routes().get(0).prefix());
        Assertions.assertEquals("hzagxnvhycvdimw", model.aggregateRouteConfiguration().ipv6Routes().get(0).prefix());
        Assertions.assertEquals("ekzkdhmeottaw", model.connectedSubnetRoutePolicy().exportRoutePolicyId());
        Assertions.assertEquals("sxwwhnhjtf",
            model.connectedSubnetRoutePolicy().exportRoutePolicy().exportIpv4RoutePolicyId());
        Assertions.assertEquals("n", model.connectedSubnetRoutePolicy().exportRoutePolicy().exportIpv6RoutePolicyId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        L3IsolationDomainPatchableProperties model = new L3IsolationDomainPatchableProperties()
            .withRedistributeConnectedSubnets(RedistributeConnectedSubnets.TRUE)
            .withRedistributeStaticRoutes(RedistributeStaticRoutes.FALSE)
            .withAggregateRouteConfiguration(new AggregateRouteConfiguration()
                .withIpv4Routes(Arrays.asList(new AggregateRoute().withPrefix("oiqtamtyvskn"),
                    new AggregateRoute().withPrefix("rwzawnvs")))
                .withIpv6Routes(Arrays.asList(new AggregateRoute().withPrefix("hzagxnvhycvdimw"),
                    new AggregateRoute().withPrefix("zregzgyufutrwpw"))))
            .withConnectedSubnetRoutePolicy(new ConnectedSubnetRoutePolicy().withExportRoutePolicyId("ekzkdhmeottaw")
                .withExportRoutePolicy(new L3ExportRoutePolicy().withExportIpv4RoutePolicyId("sxwwhnhjtf")
                    .withExportIpv6RoutePolicyId("n")));
        model = BinaryData.fromObject(model).toObject(L3IsolationDomainPatchableProperties.class);
        Assertions.assertEquals(RedistributeConnectedSubnets.TRUE, model.redistributeConnectedSubnets());
        Assertions.assertEquals(RedistributeStaticRoutes.FALSE, model.redistributeStaticRoutes());
        Assertions.assertEquals("oiqtamtyvskn", model.aggregateRouteConfiguration().ipv4Routes().get(0).prefix());
        Assertions.assertEquals("hzagxnvhycvdimw", model.aggregateRouteConfiguration().ipv6Routes().get(0).prefix());
        Assertions.assertEquals("ekzkdhmeottaw", model.connectedSubnetRoutePolicy().exportRoutePolicyId());
        Assertions.assertEquals("sxwwhnhjtf",
            model.connectedSubnetRoutePolicy().exportRoutePolicy().exportIpv4RoutePolicyId());
        Assertions.assertEquals("n", model.connectedSubnetRoutePolicy().exportRoutePolicy().exportIpv6RoutePolicyId());
    }
}
