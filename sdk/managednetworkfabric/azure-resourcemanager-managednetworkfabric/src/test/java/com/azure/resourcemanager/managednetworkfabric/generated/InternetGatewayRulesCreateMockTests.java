// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.Action;
import com.azure.resourcemanager.managednetworkfabric.models.InternetGatewayRule;
import com.azure.resourcemanager.managednetworkfabric.models.RuleProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InternetGatewayRulesCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"ruleProperties\":{\"action\":\"Deny\",\"addressList\":[\"kzstzpzecdlc\",\"irtahtu\",\"cimtcaumviud\"]},\"provisioningState\":\"Succeeded\",\"internetGatewayIds\":[\"rmlujmtunlo\",\"wuzebfqvm\",\"jbhzyenf\"],\"annotation\":\"etxeudw\"},\"location\":\"dlckdoxocjcdevz\",\"tags\":{\"hfxmrhjnnhbcj\":\"eortwwyjmgvr\",\"fictptplkossjbzv\":\"wkdywkszavuafan\",\"czhfjdcc\":\"pzwdqzuhfgti\"},\"id\":\"nyuvbtcuhjcgjt\",\"name\":\"kntomnlz\",\"type\":\"hcdb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        InternetGatewayRule response = manager.internetGatewayRules()
            .define("hdbitq")
            .withRegion("rrvkx")
            .withExistingResourceGroup("xsxoxvimdvet")
            .withRuleProperties(
                new RuleProperties().withAction(Action.ALLOW).withAddressList(Arrays.asList("ujsgomrihumgrm", "d")))
            .withTags(mapOf("zjighd", "tanetinqxdhnpjn", "wvwetqffuxvfh", "mltpmr", "clmr", "qhngqqxjbsot",
                "xbboceksramqch", "tujydeatwxpxbxed"))
            .withAnnotation("yt")
            .create();

        Assertions.assertEquals("dlckdoxocjcdevz", response.location());
        Assertions.assertEquals("eortwwyjmgvr", response.tags().get("hfxmrhjnnhbcj"));
        Assertions.assertEquals(Action.DENY, response.ruleProperties().action());
        Assertions.assertEquals("kzstzpzecdlc", response.ruleProperties().addressList().get(0));
        Assertions.assertEquals("etxeudw", response.annotation());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
