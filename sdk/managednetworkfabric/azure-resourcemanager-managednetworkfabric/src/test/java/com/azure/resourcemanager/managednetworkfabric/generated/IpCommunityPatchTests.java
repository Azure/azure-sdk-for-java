// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.IpCommunityPatch;
import com.azure.resourcemanager.managednetworkfabric.models.IpCommunityRule;
import com.azure.resourcemanager.managednetworkfabric.models.WellKnownCommunities;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IpCommunityPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpCommunityPatch model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"ipCommunityRules\":[{\"action\":\"Permit\",\"sequenceNumber\":5282438425697483362,\"wellKnownCommunities\":[\"LocalAS\",\"LocalAS\"],\"communityMembers\":[\"gygvfltgvdiho\",\"nkrxwetwkdrcy\",\"ucpcunnuzdqumoen\"]},{\"action\":\"Deny\",\"sequenceNumber\":3818690305014881198,\"wellKnownCommunities\":[\"GShut\",\"Internet\",\"NoAdvertise\",\"Internet\"],\"communityMembers\":[\"knd\",\"elqkaadlkn\",\"foanniyopetx\",\"vcnrly\"]}]},\"tags\":{\"wqpatvbqsdtcj\":\"caephbl\"}}")
                .toObject(IpCommunityPatch.class);
        Assertions.assertEquals("caephbl", model.tags().get("wqpatvbqsdtcj"));
        Assertions.assertEquals(CommunityActionTypes.PERMIT, model.ipCommunityRules().get(0).action());
        Assertions.assertEquals(5282438425697483362L, model.ipCommunityRules().get(0).sequenceNumber());
        Assertions
            .assertEquals(WellKnownCommunities.LOCAL_AS, model.ipCommunityRules().get(0).wellKnownCommunities().get(0));
        Assertions.assertEquals("gygvfltgvdiho", model.ipCommunityRules().get(0).communityMembers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpCommunityPatch model =
            new IpCommunityPatch()
                .withTags(mapOf("wqpatvbqsdtcj", "caephbl"))
                .withIpCommunityRules(
                    Arrays
                        .asList(
                            new IpCommunityRule()
                                .withAction(CommunityActionTypes.PERMIT)
                                .withSequenceNumber(5282438425697483362L)
                                .withWellKnownCommunities(
                                    Arrays.asList(WellKnownCommunities.LOCAL_AS, WellKnownCommunities.LOCAL_AS))
                                .withCommunityMembers(
                                    Arrays.asList("gygvfltgvdiho", "nkrxwetwkdrcy", "ucpcunnuzdqumoen")),
                            new IpCommunityRule()
                                .withAction(CommunityActionTypes.DENY)
                                .withSequenceNumber(3818690305014881198L)
                                .withWellKnownCommunities(
                                    Arrays
                                        .asList(
                                            WellKnownCommunities.GSHUT,
                                            WellKnownCommunities.INTERNET,
                                            WellKnownCommunities.NO_ADVERTISE,
                                            WellKnownCommunities.INTERNET))
                                .withCommunityMembers(Arrays.asList("knd", "elqkaadlkn", "foanniyopetx", "vcnrly"))));
        model = BinaryData.fromObject(model).toObject(IpCommunityPatch.class);
        Assertions.assertEquals("caephbl", model.tags().get("wqpatvbqsdtcj"));
        Assertions.assertEquals(CommunityActionTypes.PERMIT, model.ipCommunityRules().get(0).action());
        Assertions.assertEquals(5282438425697483362L, model.ipCommunityRules().get(0).sequenceNumber());
        Assertions
            .assertEquals(WellKnownCommunities.LOCAL_AS, model.ipCommunityRules().get(0).wellKnownCommunities().get(0));
        Assertions.assertEquals("gygvfltgvdiho", model.ipCommunityRules().get(0).communityMembers().get(0));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
