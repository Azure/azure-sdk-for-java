// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.BfdConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.NpbStaticRouteConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.StaticRouteProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NpbStaticRouteConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NpbStaticRouteConfiguration model = BinaryData.fromString(
            "{\"bfdConfiguration\":{\"administrativeState\":\"MAT\",\"intervalInMilliSeconds\":703140986,\"multiplier\":468071165},\"ipv4Routes\":[{\"prefix\":\"gbzxmbtplefoioy\",\"nextHop\":[\"oxznvgvd\",\"muuv\"]},{\"prefix\":\"awsxmrszbknimxlp\",\"nextHop\":[\"rxrzutylcur\",\"aqmnbxqaehtd\",\"jmbnvynf\",\"ooeactedc\"]}],\"ipv6Routes\":[{\"prefix\":\"kakddidahzllrqm\",\"nextHop\":[\"pbyxroiduyqy\",\"ffmnoiics\",\"dyhbrjj\"]}]}")
            .toObject(NpbStaticRouteConfiguration.class);
        Assertions.assertEquals(703140986, model.bfdConfiguration().intervalInMilliSeconds());
        Assertions.assertEquals(468071165, model.bfdConfiguration().multiplier());
        Assertions.assertEquals("gbzxmbtplefoioy", model.ipv4Routes().get(0).prefix());
        Assertions.assertEquals("oxznvgvd", model.ipv4Routes().get(0).nextHop().get(0));
        Assertions.assertEquals("kakddidahzllrqm", model.ipv6Routes().get(0).prefix());
        Assertions.assertEquals("pbyxroiduyqy", model.ipv6Routes().get(0).nextHop().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NpbStaticRouteConfiguration model = new NpbStaticRouteConfiguration()
            .withBfdConfiguration(
                new BfdConfiguration().withIntervalInMilliSeconds(703140986).withMultiplier(468071165))
            .withIpv4Routes(Arrays.asList(
                new StaticRouteProperties().withPrefix("gbzxmbtplefoioy")
                    .withNextHop(Arrays.asList("oxznvgvd", "muuv")),
                new StaticRouteProperties().withPrefix("awsxmrszbknimxlp")
                    .withNextHop(Arrays.asList("rxrzutylcur", "aqmnbxqaehtd", "jmbnvynf", "ooeactedc"))))
            .withIpv6Routes(Arrays.asList(new StaticRouteProperties().withPrefix("kakddidahzllrqm")
                .withNextHop(Arrays.asList("pbyxroiduyqy", "ffmnoiics", "dyhbrjj"))));
        model = BinaryData.fromObject(model).toObject(NpbStaticRouteConfiguration.class);
        Assertions.assertEquals(703140986, model.bfdConfiguration().intervalInMilliSeconds());
        Assertions.assertEquals(468071165, model.bfdConfiguration().multiplier());
        Assertions.assertEquals("gbzxmbtplefoioy", model.ipv4Routes().get(0).prefix());
        Assertions.assertEquals("oxznvgvd", model.ipv4Routes().get(0).nextHop().get(0));
        Assertions.assertEquals("kakddidahzllrqm", model.ipv6Routes().get(0).prefix());
        Assertions.assertEquals("pbyxroiduyqy", model.ipv6Routes().get(0).nextHop().get(0));
    }
}
