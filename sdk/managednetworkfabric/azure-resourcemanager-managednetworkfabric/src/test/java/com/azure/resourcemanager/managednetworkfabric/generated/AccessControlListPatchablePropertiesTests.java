// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.AccessControlListAction;
import com.azure.resourcemanager.managednetworkfabric.models.AccessControlListMatchCondition;
import com.azure.resourcemanager.managednetworkfabric.models.AccessControlListMatchConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.AccessControlListPatchableProperties;
import com.azure.resourcemanager.managednetworkfabric.models.AccessControlListPortCondition;
import com.azure.resourcemanager.managednetworkfabric.models.AclActionType;
import com.azure.resourcemanager.managednetworkfabric.models.CommonDynamicMatchConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.ConfigurationType;
import com.azure.resourcemanager.managednetworkfabric.models.IpAddressType;
import com.azure.resourcemanager.managednetworkfabric.models.IpGroupProperties;
import com.azure.resourcemanager.managednetworkfabric.models.IpMatchCondition;
import com.azure.resourcemanager.managednetworkfabric.models.Layer4Protocol;
import com.azure.resourcemanager.managednetworkfabric.models.PortGroupProperties;
import com.azure.resourcemanager.managednetworkfabric.models.PortType;
import com.azure.resourcemanager.managednetworkfabric.models.PrefixType;
import com.azure.resourcemanager.managednetworkfabric.models.SourceDestinationType;
import com.azure.resourcemanager.managednetworkfabric.models.VlanGroupProperties;
import com.azure.resourcemanager.managednetworkfabric.models.VlanMatchCondition;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AccessControlListPatchablePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AccessControlListPatchableProperties model =
            BinaryData
                .fromString(
                    "{\"configurationType\":\"Inline\",\"aclsUrl\":\"hmkxmaehvbb\",\"matchConfigurations\":[{\"matchConfigurationName\":\"pltfnhtba\",\"sequenceNumber\":1750720875062450600,\"ipAddressType\":\"IPv4\",\"matchConditions\":[{\"etherTypes\":[\"yklyhpluodpvruud\",\"gzibthostgktstv\",\"xeclzedqbcvhzlhp\",\"odqkdlwwqfb\"],\"fragments\":[\"kxtrq\"],\"ipLengths\":[\"mlmbtxhwgfwsrta\",\"coezbrhubskh\",\"dyg\",\"ookk\"],\"ttlValues\":[\"jb\",\"leorfmluiqtqz\",\"avyvnqqyba\"],\"dscpMarkings\":[\"uayjkqa\",\"qgzsles\",\"cbhernntiewdj\",\"vbquwr\"],\"portCondition\":{\"flags\":[\"agohbuff\",\"mrqemvvhmx\",\"drjf\"],\"portType\":\"SourcePort\",\"layer4Protocol\":\"UDP\",\"ports\":[\"bj\",\"ewzcjznmwcp\",\"guaadraufactkahz\"],\"portGroupNames\":[\"jjziuxxpsh\",\"eekulfgslqubkwd\",\"enr\",\"sutujba\"]},\"protocolTypes\":[\"uo\",\"minyflnorwm\",\"uvwpklvxwmyg\",\"xpgpq\"],\"vlanMatchCondition\":{\"vlans\":[\"zepn\"],\"innerVlans\":[\"crxgibb\",\"axconfozauo\",\"sukokwbqplhl\",\"nuuepzlrp\"],\"vlanGroupNames\":[\"soldweyuqdunv\",\"nnrwrbiork\"]},\"ipCondition\":{\"type\":\"DestinationIP\",\"prefixType\":\"LongestPrefix\",\"ipPrefixValues\":[\"gdnhxmsiv\",\"omi\",\"ox\"],\"ipGroupNames\":[\"ufiqndieuzaof\",\"chvcyyysfgdo\"]}},{\"etherTypes\":[\"biipuip\",\"oqonma\",\"jeknizshq\",\"cimpevfg\"],\"fragments\":[\"rrilbywdxsmic\"],\"ipLengths\":[\"wfscjfn\",\"nszqujiz\",\"voqyt\",\"byowbblgyavutp\"],\"ttlValues\":[\"oxoismsksbpim\",\"qolj\"],\"dscpMarkings\":[\"gxxlxsffgcvizq\",\"dwl\"],\"portCondition\":{\"flags\":[\"oupfgfb\",\"jub\",\"yhgk\"],\"portType\":\"SourcePort\",\"layer4Protocol\":\"UDP\",\"ports\":[\"owzfttsttkt\"],\"portGroupNames\":[\"bqactxtgzukx\"]},\"protocolTypes\":[\"m\",\"tg\",\"qqxhrnxrxcpj\"],\"vlanMatchCondition\":{\"vlans\":[\"vokqdzfv\"],\"innerVlans\":[\"vjlfrqtt\",\"ajlkatnw\",\"yiopi\",\"kqqfk\"],\"vlanGroupNames\":[\"cxkdmligovi\"]},\"ipCondition\":{\"type\":\"SourceIP\",\"prefixType\":\"Prefix\",\"ipPrefixValues\":[\"azur\"],\"ipGroupNames\":[\"bgo\",\"rb\"]}},{\"etherTypes\":[\"ybfhjxa\",\"vvjgslor\",\"il\"],\"fragments\":[\"wt\",\"gkxnyedabg\"],\"ipLengths\":[\"dtj\",\"ewbcihxuuw\",\"c\"],\"ttlValues\":[\"ccybvp\",\"yakk\"],\"dscpMarkings\":[\"px\"],\"portCondition\":{\"flags\":[\"lma\",\"stcyohpfkyrkdbd\"],\"portType\":\"DestinationPort\",\"layer4Protocol\":\"TCP\",\"ports\":[\"kmnwqjnobaiyhddv\",\"acegfnmntf\"],\"portGroupNames\":[\"memfnczdwvvbalxl\"]},\"protocolTypes\":[\"hpodbzev\"],\"vlanMatchCondition\":{\"vlans\":[\"hfuk\"],\"innerVlans\":[\"jcswsmys\",\"uluqypfc\",\"lerchpq\",\"mfpjbabw\"],\"vlanGroupNames\":[\"cxsspuunnoxyh\",\"xgqddrih\",\"fhoqca\",\"ewda\"]},\"ipCondition\":{\"type\":\"DestinationIP\",\"prefixType\":\"Prefix\",\"ipPrefixValues\":[\"x\",\"kzbrmsgeivsiy\",\"zkdnc\"],\"ipGroupNames\":[\"onbzoggculapzwy\",\"pgogtqxepny\",\"b\",\"uajlyj\"]}}],\"actions\":[{\"type\":\"Drop\",\"counterName\":\"zhvfcibyfmowuxr\"},{\"type\":\"Count\",\"counterName\":\"dwxf\"},{\"type\":\"Log\",\"counterName\":\"vwzjbhyz\"}]},{\"matchConfigurationName\":\"jrkambtrnegvmnv\",\"sequenceNumber\":2282219520310913281,\"ipAddressType\":\"IPv4\",\"matchConditions\":[{\"etherTypes\":[\"stjbkkdmfl\",\"est\",\"jlxr\",\"ilozapeewchpxlk\"],\"fragments\":[\"uziycsl\",\"vu\",\"uztcktyhjtqed\"],\"ipLengths\":[\"ulwm\",\"rqzz\",\"rjvpglydzgkrvqee\",\"toepryu\"],\"ttlValues\":[\"ytp\",\"dmovzvfva\",\"wzqa\"],\"dscpMarkings\":[\"gzuriglaecxndt\",\"cokpv\"],\"portCondition\":{\"flags\":[\"t\",\"ld\"],\"portType\":\"DestinationPort\",\"layer4Protocol\":\"TCP\",\"ports\":[\"rclnpkc\",\"ayzri\"],\"portGroupNames\":[\"yawfvjlboxq\"]},\"protocolTypes\":[\"lmxhomdyn\",\"dwdigumb\",\"raauzzpt\"],\"vlanMatchCondition\":{\"vlans\":[\"sdzhezww\",\"aiqyuvvfo\"],\"innerVlans\":[\"hhqyi\"],\"vlanGroupNames\":[\"lauyav\"]},\"ipCondition\":{\"type\":\"DestinationIP\",\"prefixType\":\"LongestPrefix\",\"ipPrefixValues\":[\"tijfybvp\",\"ekrsgs\",\"b\",\"huzqgn\"],\"ipGroupNames\":[\"kynscliqhzv\",\"xnkomtkubo\",\"ppnvdxz\"]}},{\"etherTypes\":[\"hfrbbc\",\"vqagtltdhlf\",\"qojpy\"],\"fragments\":[\"trdcnifmzzs\"],\"ipLengths\":[\"brn\"],\"ttlValues\":[\"xmprafwg\"],\"dscpMarkings\":[\"ocxvdfffwafqr\",\"udaspavehh\",\"vkbunzozudh\",\"xg\"],\"portCondition\":{\"flags\":[\"xcdyuibhmfdnb\",\"ydvfvfcjnae\",\"isrvhm\",\"orffukiscv\"],\"portType\":\"DestinationPort\",\"layer4Protocol\":\"UDP\",\"ports\":[\"lefaxvxilcbtgn\"],\"portGroupNames\":[\"eyqxtjjfzql\",\"hycav\",\"dggxdbeesmi\",\"knlrariaawiuagy\"]},\"protocolTypes\":[\"fbylyrfg\"],\"vlanMatchCondition\":{\"vlans\":[\"cojocqwogfnzjvus\",\"zldmozuxy\",\"fsbtkad\"],\"innerVlans\":[\"own\"],\"vlanGroupNames\":[\"kb\",\"grjqctojcmi\",\"of\"]},\"ipCondition\":{\"type\":\"SourceIP\",\"prefixType\":\"Prefix\",\"ipPrefixValues\":[\"yqdhcuplcplcw\"],\"ipGroupNames\":[\"hihlhzdsqtzbs\"]}},{\"etherTypes\":[\"o\"],\"fragments\":[\"hfgmvecactxm\"],\"ipLengths\":[\"e\",\"owcluqo\"],\"ttlValues\":[\"qvgqouw\",\"fzmpjwyivq\"],\"dscpMarkings\":[\"xcvhrfs\"],\"portCondition\":{\"flags\":[\"grttikteusqczk\"],\"portType\":\"SourcePort\",\"layer4Protocol\":\"TCP\",\"ports\":[\"byjaffmmf\",\"lcqcuubgqibrt\",\"lmetttwgdslqxi\"],\"portGroupNames\":[\"moo\",\"z\",\"seypxiutcxapz\"]},\"protocolTypes\":[\"petogebjox\",\"lhvnhlab\",\"q\",\"kkzjcjbtrga\"],\"vlanMatchCondition\":{\"vlans\":[\"ib\"],\"innerVlans\":[\"jsto\"],\"vlanGroupNames\":[\"it\",\"kxzt\",\"oobklftidgfcwq\"]},\"ipCondition\":{\"type\":\"DestinationIP\",\"prefixType\":\"Prefix\",\"ipPrefixValues\":[\"hemjy\"],\"ipGroupNames\":[\"uj\",\"wtwko\",\"zwculkbawpfajnj\",\"ltlwtjjguktalhs\"]}}],\"actions\":[{\"type\":\"Drop\",\"counterName\":\"xzrpo\"},{\"type\":\"Drop\",\"counterName\":\"nwiaaomyl\"},{\"type\":\"Drop\",\"counterName\":\"ulcsethwwnpj\"},{\"type\":\"Log\",\"counterName\":\"swpchwahfbousn\"}]}],\"dynamicMatchConfigurations\":[{\"ipGroups\":[{\"name\":\"wetwlyxgncxykxh\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"mmbcxfhbcp\",\"rxvxcjzh\"]},{\"name\":\"zxfpxtgqsc\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"juhdqazkmtgguwpi\"]},{\"name\":\"ajc\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"hfcf\",\"wrxgkneuvy\",\"nzqodfvpg\",\"hoxgsgbpf\"]},{\"name\":\"djtxvzflbq\",\"ipAddressType\":\"IPv6\",\"ipPrefixes\":[\"lgafcqusrdve\"]}],\"vlanGroups\":[{\"name\":\"dtutnwldu\",\"vlans\":[\"uzhyrmewipmvekdx\",\"kuqgsjjxundxgket\"]},{\"name\":\"hhzjhfj\",\"vlans\":[\"vmuvgpmu\"]},{\"name\":\"qsxvmhf\",\"vlans\":[\"jyihsasbhudypo\"]}],\"portGroups\":[{\"name\":\"ms\",\"ports\":[\"sqy\",\"pfoobr\",\"ttymsjny\",\"qdnfwqzdz\"]},{\"name\":\"ilaxhn\",\"ports\":[\"lyvijouwiv\",\"xoyzunbix\"]}]},{\"ipGroups\":[{\"name\":\"kvcpwpgclr\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"oxfrkenxpmyyefr\",\"mpdnqqskawa\"]}],\"vlanGroups\":[{\"name\":\"mbnpqf\",\"vlans\":[\"lkzmegnitgvkxl\",\"yqdrf\"]}],\"portGroups\":[{\"name\":\"alzxwhcan\",\"ports\":[\"oyqhlwig\"]},{\"name\":\"vbkbxgomf\",\"ports\":[\"wasqvdaeyyg\",\"xakjsqzhzb\"]}]},{\"ipGroups\":[{\"name\":\"imsidxasicddyvvj\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"ocwah\",\"qgatjeaahhvjhhn\"]},{\"name\":\"zybbj\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"syxkyxvxevblb\",\"ednljl\",\"geuaulx\",\"nsmjbnkppxynen\"]},{\"name\":\"vxei\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"lnsrmffe\",\"cxcktpi\",\"merteeammxqiek\"]}],\"vlanGroups\":[{\"name\":\"drtkgdoj\",\"vlans\":[\"vavrefdees\"]},{\"name\":\"cuijpxt\",\"vlans\":[\"wprtu\",\"wsawddjibabxvi\",\"itvtzeexavo\"]}],\"portGroups\":[{\"name\":\"lecdmdqbw\",\"ports\":[\"q\",\"gsfjac\",\"slhhxudbxv\"]},{\"name\":\"htnsi\",\"ports\":[\"hzmme\",\"ckdlpag\",\"rcxfailcfxwmdb\"]},{\"name\":\"dfgsftufqobrj\",\"ports\":[\"cgcckknhxkizvyt\",\"rzvul\",\"r\"]}]}]}")
                .toObject(AccessControlListPatchableProperties.class);
        Assertions.assertEquals(ConfigurationType.INLINE, model.configurationType());
        Assertions.assertEquals("hmkxmaehvbb", model.aclsUrl());
        Assertions.assertEquals("pltfnhtba", model.matchConfigurations().get(0).matchConfigurationName());
        Assertions.assertEquals(1750720875062450600L, model.matchConfigurations().get(0).sequenceNumber());
        Assertions.assertEquals(IpAddressType.IPV4, model.matchConfigurations().get(0).ipAddressType());
        Assertions
            .assertEquals("uo", model.matchConfigurations().get(0).matchConditions().get(0).protocolTypes().get(0));
        Assertions
            .assertEquals(
                "zepn",
                model.matchConfigurations().get(0).matchConditions().get(0).vlanMatchCondition().vlans().get(0));
        Assertions
            .assertEquals(
                "crxgibb",
                model.matchConfigurations().get(0).matchConditions().get(0).vlanMatchCondition().innerVlans().get(0));
        Assertions
            .assertEquals(
                "soldweyuqdunv",
                model
                    .matchConfigurations()
                    .get(0)
                    .matchConditions()
                    .get(0)
                    .vlanMatchCondition()
                    .vlanGroupNames()
                    .get(0));
        Assertions
            .assertEquals(
                SourceDestinationType.DESTINATION_IP,
                model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().type());
        Assertions
            .assertEquals(
                PrefixType.LONGEST_PREFIX,
                model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().prefixType());
        Assertions
            .assertEquals(
                "gdnhxmsiv",
                model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().ipPrefixValues().get(0));
        Assertions
            .assertEquals(
                "ufiqndieuzaof",
                model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().ipGroupNames().get(0));
        Assertions
            .assertEquals(
                "yklyhpluodpvruud", model.matchConfigurations().get(0).matchConditions().get(0).etherTypes().get(0));
        Assertions
            .assertEquals("kxtrq", model.matchConfigurations().get(0).matchConditions().get(0).fragments().get(0));
        Assertions
            .assertEquals(
                "mlmbtxhwgfwsrta", model.matchConfigurations().get(0).matchConditions().get(0).ipLengths().get(0));
        Assertions.assertEquals("jb", model.matchConfigurations().get(0).matchConditions().get(0).ttlValues().get(0));
        Assertions
            .assertEquals("uayjkqa", model.matchConfigurations().get(0).matchConditions().get(0).dscpMarkings().get(0));
        Assertions
            .assertEquals(
                PortType.SOURCE_PORT,
                model.matchConfigurations().get(0).matchConditions().get(0).portCondition().portType());
        Assertions
            .assertEquals(
                Layer4Protocol.UDP,
                model.matchConfigurations().get(0).matchConditions().get(0).portCondition().layer4Protocol());
        Assertions
            .assertEquals(
                "bj", model.matchConfigurations().get(0).matchConditions().get(0).portCondition().ports().get(0));
        Assertions
            .assertEquals(
                "jjziuxxpsh",
                model.matchConfigurations().get(0).matchConditions().get(0).portCondition().portGroupNames().get(0));
        Assertions
            .assertEquals(
                "agohbuff", model.matchConfigurations().get(0).matchConditions().get(0).portCondition().flags().get(0));
        Assertions.assertEquals(AclActionType.DROP, model.matchConfigurations().get(0).actions().get(0).type());
        Assertions.assertEquals("zhvfcibyfmowuxr", model.matchConfigurations().get(0).actions().get(0).counterName());
        Assertions.assertEquals("wetwlyxgncxykxh", model.dynamicMatchConfigurations().get(0).ipGroups().get(0).name());
        Assertions
            .assertEquals(
                IpAddressType.IPV4, model.dynamicMatchConfigurations().get(0).ipGroups().get(0).ipAddressType());
        Assertions
            .assertEquals(
                "mmbcxfhbcp", model.dynamicMatchConfigurations().get(0).ipGroups().get(0).ipPrefixes().get(0));
        Assertions.assertEquals("dtutnwldu", model.dynamicMatchConfigurations().get(0).vlanGroups().get(0).name());
        Assertions
            .assertEquals(
                "uzhyrmewipmvekdx", model.dynamicMatchConfigurations().get(0).vlanGroups().get(0).vlans().get(0));
        Assertions.assertEquals("ms", model.dynamicMatchConfigurations().get(0).portGroups().get(0).name());
        Assertions.assertEquals("sqy", model.dynamicMatchConfigurations().get(0).portGroups().get(0).ports().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AccessControlListPatchableProperties model =
            new AccessControlListPatchableProperties()
                .withConfigurationType(ConfigurationType.INLINE)
                .withAclsUrl("hmkxmaehvbb")
                .withMatchConfigurations(
                    Arrays
                        .asList(
                            new AccessControlListMatchConfiguration()
                                .withMatchConfigurationName("pltfnhtba")
                                .withSequenceNumber(1750720875062450600L)
                                .withIpAddressType(IpAddressType.IPV4)
                                .withMatchConditions(
                                    Arrays
                                        .asList(
                                            new AccessControlListMatchCondition()
                                                .withProtocolTypes(
                                                    Arrays.asList("uo", "minyflnorwm", "uvwpklvxwmyg", "xpgpq"))
                                                .withVlanMatchCondition(
                                                    new VlanMatchCondition()
                                                        .withVlans(Arrays.asList("zepn"))
                                                        .withInnerVlans(
                                                            Arrays
                                                                .asList(
                                                                    "crxgibb",
                                                                    "axconfozauo",
                                                                    "sukokwbqplhl",
                                                                    "nuuepzlrp"))
                                                        .withVlanGroupNames(
                                                            Arrays.asList("soldweyuqdunv", "nnrwrbiork")))
                                                .withIpCondition(
                                                    new IpMatchCondition()
                                                        .withType(SourceDestinationType.DESTINATION_IP)
                                                        .withPrefixType(PrefixType.LONGEST_PREFIX)
                                                        .withIpPrefixValues(Arrays.asList("gdnhxmsiv", "omi", "ox"))
                                                        .withIpGroupNames(
                                                            Arrays.asList("ufiqndieuzaof", "chvcyyysfgdo")))
                                                .withEtherTypes(
                                                    Arrays
                                                        .asList(
                                                            "yklyhpluodpvruud",
                                                            "gzibthostgktstv",
                                                            "xeclzedqbcvhzlhp",
                                                            "odqkdlwwqfb"))
                                                .withFragments(Arrays.asList("kxtrq"))
                                                .withIpLengths(
                                                    Arrays.asList("mlmbtxhwgfwsrta", "coezbrhubskh", "dyg", "ookk"))
                                                .withTtlValues(Arrays.asList("jb", "leorfmluiqtqz", "avyvnqqyba"))
                                                .withDscpMarkings(
                                                    Arrays.asList("uayjkqa", "qgzsles", "cbhernntiewdj", "vbquwr"))
                                                .withPortCondition(
                                                    new AccessControlListPortCondition()
                                                        .withPortType(PortType.SOURCE_PORT)
                                                        .withLayer4Protocol(Layer4Protocol.UDP)
                                                        .withPorts(
                                                            Arrays.asList("bj", "ewzcjznmwcp", "guaadraufactkahz"))
                                                        .withPortGroupNames(
                                                            Arrays
                                                                .asList(
                                                                    "jjziuxxpsh", "eekulfgslqubkwd", "enr", "sutujba"))
                                                        .withFlags(Arrays.asList("agohbuff", "mrqemvvhmx", "drjf"))),
                                            new AccessControlListMatchCondition()
                                                .withProtocolTypes(Arrays.asList("m", "tg", "qqxhrnxrxcpj"))
                                                .withVlanMatchCondition(
                                                    new VlanMatchCondition()
                                                        .withVlans(Arrays.asList("vokqdzfv"))
                                                        .withInnerVlans(
                                                            Arrays.asList("vjlfrqtt", "ajlkatnw", "yiopi", "kqqfk"))
                                                        .withVlanGroupNames(Arrays.asList("cxkdmligovi")))
                                                .withIpCondition(
                                                    new IpMatchCondition()
                                                        .withType(SourceDestinationType.SOURCE_IP)
                                                        .withPrefixType(PrefixType.PREFIX)
                                                        .withIpPrefixValues(Arrays.asList("azur"))
                                                        .withIpGroupNames(Arrays.asList("bgo", "rb")))
                                                .withEtherTypes(
                                                    Arrays.asList("biipuip", "oqonma", "jeknizshq", "cimpevfg"))
                                                .withFragments(Arrays.asList("rrilbywdxsmic"))
                                                .withIpLengths(
                                                    Arrays.asList("wfscjfn", "nszqujiz", "voqyt", "byowbblgyavutp"))
                                                .withTtlValues(Arrays.asList("oxoismsksbpim", "qolj"))
                                                .withDscpMarkings(Arrays.asList("gxxlxsffgcvizq", "dwl"))
                                                .withPortCondition(
                                                    new AccessControlListPortCondition()
                                                        .withPortType(PortType.SOURCE_PORT)
                                                        .withLayer4Protocol(Layer4Protocol.UDP)
                                                        .withPorts(Arrays.asList("owzfttsttkt"))
                                                        .withPortGroupNames(Arrays.asList("bqactxtgzukx"))
                                                        .withFlags(Arrays.asList("oupfgfb", "jub", "yhgk"))),
                                            new AccessControlListMatchCondition()
                                                .withProtocolTypes(Arrays.asList("hpodbzev"))
                                                .withVlanMatchCondition(
                                                    new VlanMatchCondition()
                                                        .withVlans(Arrays.asList("hfuk"))
                                                        .withInnerVlans(
                                                            Arrays
                                                                .asList("jcswsmys", "uluqypfc", "lerchpq", "mfpjbabw"))
                                                        .withVlanGroupNames(
                                                            Arrays
                                                                .asList("cxsspuunnoxyh", "xgqddrih", "fhoqca", "ewda")))
                                                .withIpCondition(
                                                    new IpMatchCondition()
                                                        .withType(SourceDestinationType.DESTINATION_IP)
                                                        .withPrefixType(PrefixType.PREFIX)
                                                        .withIpPrefixValues(
                                                            Arrays.asList("x", "kzbrmsgeivsiy", "zkdnc"))
                                                        .withIpGroupNames(
                                                            Arrays
                                                                .asList(
                                                                    "onbzoggculapzwy", "pgogtqxepny", "b", "uajlyj")))
                                                .withEtherTypes(Arrays.asList("ybfhjxa", "vvjgslor", "il"))
                                                .withFragments(Arrays.asList("wt", "gkxnyedabg"))
                                                .withIpLengths(Arrays.asList("dtj", "ewbcihxuuw", "c"))
                                                .withTtlValues(Arrays.asList("ccybvp", "yakk"))
                                                .withDscpMarkings(Arrays.asList("px"))
                                                .withPortCondition(
                                                    new AccessControlListPortCondition()
                                                        .withPortType(PortType.DESTINATION_PORT)
                                                        .withLayer4Protocol(Layer4Protocol.TCP)
                                                        .withPorts(Arrays.asList("kmnwqjnobaiyhddv", "acegfnmntf"))
                                                        .withPortGroupNames(Arrays.asList("memfnczdwvvbalxl"))
                                                        .withFlags(Arrays.asList("lma", "stcyohpfkyrkdbd")))))
                                .withActions(
                                    Arrays
                                        .asList(
                                            new AccessControlListAction()
                                                .withType(AclActionType.DROP)
                                                .withCounterName("zhvfcibyfmowuxr"),
                                            new AccessControlListAction()
                                                .withType(AclActionType.COUNT)
                                                .withCounterName("dwxf"),
                                            new AccessControlListAction()
                                                .withType(AclActionType.LOG)
                                                .withCounterName("vwzjbhyz"))),
                            new AccessControlListMatchConfiguration()
                                .withMatchConfigurationName("jrkambtrnegvmnv")
                                .withSequenceNumber(2282219520310913281L)
                                .withIpAddressType(IpAddressType.IPV4)
                                .withMatchConditions(
                                    Arrays
                                        .asList(
                                            new AccessControlListMatchCondition()
                                                .withProtocolTypes(Arrays.asList("lmxhomdyn", "dwdigumb", "raauzzpt"))
                                                .withVlanMatchCondition(
                                                    new VlanMatchCondition()
                                                        .withVlans(Arrays.asList("sdzhezww", "aiqyuvvfo"))
                                                        .withInnerVlans(Arrays.asList("hhqyi"))
                                                        .withVlanGroupNames(Arrays.asList("lauyav")))
                                                .withIpCondition(
                                                    new IpMatchCondition()
                                                        .withType(SourceDestinationType.DESTINATION_IP)
                                                        .withPrefixType(PrefixType.LONGEST_PREFIX)
                                                        .withIpPrefixValues(
                                                            Arrays.asList("tijfybvp", "ekrsgs", "b", "huzqgn"))
                                                        .withIpGroupNames(
                                                            Arrays.asList("kynscliqhzv", "xnkomtkubo", "ppnvdxz")))
                                                .withEtherTypes(
                                                    Arrays.asList("stjbkkdmfl", "est", "jlxr", "ilozapeewchpxlk"))
                                                .withFragments(Arrays.asList("uziycsl", "vu", "uztcktyhjtqed"))
                                                .withIpLengths(
                                                    Arrays.asList("ulwm", "rqzz", "rjvpglydzgkrvqee", "toepryu"))
                                                .withTtlValues(Arrays.asList("ytp", "dmovzvfva", "wzqa"))
                                                .withDscpMarkings(Arrays.asList("gzuriglaecxndt", "cokpv"))
                                                .withPortCondition(
                                                    new AccessControlListPortCondition()
                                                        .withPortType(PortType.DESTINATION_PORT)
                                                        .withLayer4Protocol(Layer4Protocol.TCP)
                                                        .withPorts(Arrays.asList("rclnpkc", "ayzri"))
                                                        .withPortGroupNames(Arrays.asList("yawfvjlboxq"))
                                                        .withFlags(Arrays.asList("t", "ld"))),
                                            new AccessControlListMatchCondition()
                                                .withProtocolTypes(Arrays.asList("fbylyrfg"))
                                                .withVlanMatchCondition(
                                                    new VlanMatchCondition()
                                                        .withVlans(
                                                            Arrays.asList("cojocqwogfnzjvus", "zldmozuxy", "fsbtkad"))
                                                        .withInnerVlans(Arrays.asList("own"))
                                                        .withVlanGroupNames(Arrays.asList("kb", "grjqctojcmi", "of")))
                                                .withIpCondition(
                                                    new IpMatchCondition()
                                                        .withType(SourceDestinationType.SOURCE_IP)
                                                        .withPrefixType(PrefixType.PREFIX)
                                                        .withIpPrefixValues(Arrays.asList("yqdhcuplcplcw"))
                                                        .withIpGroupNames(Arrays.asList("hihlhzdsqtzbs")))
                                                .withEtherTypes(Arrays.asList("hfrbbc", "vqagtltdhlf", "qojpy"))
                                                .withFragments(Arrays.asList("trdcnifmzzs"))
                                                .withIpLengths(Arrays.asList("brn"))
                                                .withTtlValues(Arrays.asList("xmprafwg"))
                                                .withDscpMarkings(
                                                    Arrays.asList("ocxvdfffwafqr", "udaspavehh", "vkbunzozudh", "xg"))
                                                .withPortCondition(
                                                    new AccessControlListPortCondition()
                                                        .withPortType(PortType.DESTINATION_PORT)
                                                        .withLayer4Protocol(Layer4Protocol.UDP)
                                                        .withPorts(Arrays.asList("lefaxvxilcbtgn"))
                                                        .withPortGroupNames(
                                                            Arrays
                                                                .asList(
                                                                    "eyqxtjjfzql",
                                                                    "hycav",
                                                                    "dggxdbeesmi",
                                                                    "knlrariaawiuagy"))
                                                        .withFlags(
                                                            Arrays
                                                                .asList(
                                                                    "xcdyuibhmfdnb",
                                                                    "ydvfvfcjnae",
                                                                    "isrvhm",
                                                                    "orffukiscv"))),
                                            new AccessControlListMatchCondition()
                                                .withProtocolTypes(
                                                    Arrays.asList("petogebjox", "lhvnhlab", "q", "kkzjcjbtrga"))
                                                .withVlanMatchCondition(
                                                    new VlanMatchCondition()
                                                        .withVlans(Arrays.asList("ib"))
                                                        .withInnerVlans(Arrays.asList("jsto"))
                                                        .withVlanGroupNames(
                                                            Arrays.asList("it", "kxzt", "oobklftidgfcwq")))
                                                .withIpCondition(
                                                    new IpMatchCondition()
                                                        .withType(SourceDestinationType.DESTINATION_IP)
                                                        .withPrefixType(PrefixType.PREFIX)
                                                        .withIpPrefixValues(Arrays.asList("hemjy"))
                                                        .withIpGroupNames(
                                                            Arrays
                                                                .asList(
                                                                    "uj",
                                                                    "wtwko",
                                                                    "zwculkbawpfajnj",
                                                                    "ltlwtjjguktalhs")))
                                                .withEtherTypes(Arrays.asList("o"))
                                                .withFragments(Arrays.asList("hfgmvecactxm"))
                                                .withIpLengths(Arrays.asList("e", "owcluqo"))
                                                .withTtlValues(Arrays.asList("qvgqouw", "fzmpjwyivq"))
                                                .withDscpMarkings(Arrays.asList("xcvhrfs"))
                                                .withPortCondition(
                                                    new AccessControlListPortCondition()
                                                        .withPortType(PortType.SOURCE_PORT)
                                                        .withLayer4Protocol(Layer4Protocol.TCP)
                                                        .withPorts(
                                                            Arrays
                                                                .asList("byjaffmmf", "lcqcuubgqibrt", "lmetttwgdslqxi"))
                                                        .withPortGroupNames(Arrays.asList("moo", "z", "seypxiutcxapz"))
                                                        .withFlags(Arrays.asList("grttikteusqczk")))))
                                .withActions(
                                    Arrays
                                        .asList(
                                            new AccessControlListAction()
                                                .withType(AclActionType.DROP)
                                                .withCounterName("xzrpo"),
                                            new AccessControlListAction()
                                                .withType(AclActionType.DROP)
                                                .withCounterName("nwiaaomyl"),
                                            new AccessControlListAction()
                                                .withType(AclActionType.DROP)
                                                .withCounterName("ulcsethwwnpj"),
                                            new AccessControlListAction()
                                                .withType(AclActionType.LOG)
                                                .withCounterName("swpchwahfbousn")))))
                .withDynamicMatchConfigurations(
                    Arrays
                        .asList(
                            new CommonDynamicMatchConfiguration()
                                .withIpGroups(
                                    Arrays
                                        .asList(
                                            new IpGroupProperties()
                                                .withName("wetwlyxgncxykxh")
                                                .withIpAddressType(IpAddressType.IPV4)
                                                .withIpPrefixes(Arrays.asList("mmbcxfhbcp", "rxvxcjzh")),
                                            new IpGroupProperties()
                                                .withName("zxfpxtgqsc")
                                                .withIpAddressType(IpAddressType.IPV4)
                                                .withIpPrefixes(Arrays.asList("juhdqazkmtgguwpi")),
                                            new IpGroupProperties()
                                                .withName("ajc")
                                                .withIpAddressType(IpAddressType.IPV4)
                                                .withIpPrefixes(
                                                    Arrays.asList("hfcf", "wrxgkneuvy", "nzqodfvpg", "hoxgsgbpf")),
                                            new IpGroupProperties()
                                                .withName("djtxvzflbq")
                                                .withIpAddressType(IpAddressType.IPV6)
                                                .withIpPrefixes(Arrays.asList("lgafcqusrdve"))))
                                .withVlanGroups(
                                    Arrays
                                        .asList(
                                            new VlanGroupProperties()
                                                .withName("dtutnwldu")
                                                .withVlans(Arrays.asList("uzhyrmewipmvekdx", "kuqgsjjxundxgket")),
                                            new VlanGroupProperties()
                                                .withName("hhzjhfj")
                                                .withVlans(Arrays.asList("vmuvgpmu")),
                                            new VlanGroupProperties()
                                                .withName("qsxvmhf")
                                                .withVlans(Arrays.asList("jyihsasbhudypo"))))
                                .withPortGroups(
                                    Arrays
                                        .asList(
                                            new PortGroupProperties()
                                                .withName("ms")
                                                .withPorts(Arrays.asList("sqy", "pfoobr", "ttymsjny", "qdnfwqzdz")),
                                            new PortGroupProperties()
                                                .withName("ilaxhn")
                                                .withPorts(Arrays.asList("lyvijouwiv", "xoyzunbix")))),
                            new CommonDynamicMatchConfiguration()
                                .withIpGroups(
                                    Arrays
                                        .asList(
                                            new IpGroupProperties()
                                                .withName("kvcpwpgclr")
                                                .withIpAddressType(IpAddressType.IPV4)
                                                .withIpPrefixes(Arrays.asList("oxfrkenxpmyyefr", "mpdnqqskawa"))))
                                .withVlanGroups(
                                    Arrays
                                        .asList(
                                            new VlanGroupProperties()
                                                .withName("mbnpqf")
                                                .withVlans(Arrays.asList("lkzmegnitgvkxl", "yqdrf"))))
                                .withPortGroups(
                                    Arrays
                                        .asList(
                                            new PortGroupProperties()
                                                .withName("alzxwhcan")
                                                .withPorts(Arrays.asList("oyqhlwig")),
                                            new PortGroupProperties()
                                                .withName("vbkbxgomf")
                                                .withPorts(Arrays.asList("wasqvdaeyyg", "xakjsqzhzb")))),
                            new CommonDynamicMatchConfiguration()
                                .withIpGroups(
                                    Arrays
                                        .asList(
                                            new IpGroupProperties()
                                                .withName("imsidxasicddyvvj")
                                                .withIpAddressType(IpAddressType.IPV4)
                                                .withIpPrefixes(Arrays.asList("ocwah", "qgatjeaahhvjhhn")),
                                            new IpGroupProperties()
                                                .withName("zybbj")
                                                .withIpAddressType(IpAddressType.IPV4)
                                                .withIpPrefixes(
                                                    Arrays
                                                        .asList(
                                                            "syxkyxvxevblb", "ednljl", "geuaulx", "nsmjbnkppxynen")),
                                            new IpGroupProperties()
                                                .withName("vxei")
                                                .withIpAddressType(IpAddressType.IPV4)
                                                .withIpPrefixes(
                                                    Arrays.asList("lnsrmffe", "cxcktpi", "merteeammxqiek"))))
                                .withVlanGroups(
                                    Arrays
                                        .asList(
                                            new VlanGroupProperties()
                                                .withName("drtkgdoj")
                                                .withVlans(Arrays.asList("vavrefdees")),
                                            new VlanGroupProperties()
                                                .withName("cuijpxt")
                                                .withVlans(Arrays.asList("wprtu", "wsawddjibabxvi", "itvtzeexavo"))))
                                .withPortGroups(
                                    Arrays
                                        .asList(
                                            new PortGroupProperties()
                                                .withName("lecdmdqbw")
                                                .withPorts(Arrays.asList("q", "gsfjac", "slhhxudbxv")),
                                            new PortGroupProperties()
                                                .withName("htnsi")
                                                .withPorts(Arrays.asList("hzmme", "ckdlpag", "rcxfailcfxwmdb")),
                                            new PortGroupProperties()
                                                .withName("dfgsftufqobrj")
                                                .withPorts(Arrays.asList("cgcckknhxkizvyt", "rzvul", "r"))))));
        model = BinaryData.fromObject(model).toObject(AccessControlListPatchableProperties.class);
        Assertions.assertEquals(ConfigurationType.INLINE, model.configurationType());
        Assertions.assertEquals("hmkxmaehvbb", model.aclsUrl());
        Assertions.assertEquals("pltfnhtba", model.matchConfigurations().get(0).matchConfigurationName());
        Assertions.assertEquals(1750720875062450600L, model.matchConfigurations().get(0).sequenceNumber());
        Assertions.assertEquals(IpAddressType.IPV4, model.matchConfigurations().get(0).ipAddressType());
        Assertions
            .assertEquals("uo", model.matchConfigurations().get(0).matchConditions().get(0).protocolTypes().get(0));
        Assertions
            .assertEquals(
                "zepn",
                model.matchConfigurations().get(0).matchConditions().get(0).vlanMatchCondition().vlans().get(0));
        Assertions
            .assertEquals(
                "crxgibb",
                model.matchConfigurations().get(0).matchConditions().get(0).vlanMatchCondition().innerVlans().get(0));
        Assertions
            .assertEquals(
                "soldweyuqdunv",
                model
                    .matchConfigurations()
                    .get(0)
                    .matchConditions()
                    .get(0)
                    .vlanMatchCondition()
                    .vlanGroupNames()
                    .get(0));
        Assertions
            .assertEquals(
                SourceDestinationType.DESTINATION_IP,
                model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().type());
        Assertions
            .assertEquals(
                PrefixType.LONGEST_PREFIX,
                model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().prefixType());
        Assertions
            .assertEquals(
                "gdnhxmsiv",
                model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().ipPrefixValues().get(0));
        Assertions
            .assertEquals(
                "ufiqndieuzaof",
                model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().ipGroupNames().get(0));
        Assertions
            .assertEquals(
                "yklyhpluodpvruud", model.matchConfigurations().get(0).matchConditions().get(0).etherTypes().get(0));
        Assertions
            .assertEquals("kxtrq", model.matchConfigurations().get(0).matchConditions().get(0).fragments().get(0));
        Assertions
            .assertEquals(
                "mlmbtxhwgfwsrta", model.matchConfigurations().get(0).matchConditions().get(0).ipLengths().get(0));
        Assertions.assertEquals("jb", model.matchConfigurations().get(0).matchConditions().get(0).ttlValues().get(0));
        Assertions
            .assertEquals("uayjkqa", model.matchConfigurations().get(0).matchConditions().get(0).dscpMarkings().get(0));
        Assertions
            .assertEquals(
                PortType.SOURCE_PORT,
                model.matchConfigurations().get(0).matchConditions().get(0).portCondition().portType());
        Assertions
            .assertEquals(
                Layer4Protocol.UDP,
                model.matchConfigurations().get(0).matchConditions().get(0).portCondition().layer4Protocol());
        Assertions
            .assertEquals(
                "bj", model.matchConfigurations().get(0).matchConditions().get(0).portCondition().ports().get(0));
        Assertions
            .assertEquals(
                "jjziuxxpsh",
                model.matchConfigurations().get(0).matchConditions().get(0).portCondition().portGroupNames().get(0));
        Assertions
            .assertEquals(
                "agohbuff", model.matchConfigurations().get(0).matchConditions().get(0).portCondition().flags().get(0));
        Assertions.assertEquals(AclActionType.DROP, model.matchConfigurations().get(0).actions().get(0).type());
        Assertions.assertEquals("zhvfcibyfmowuxr", model.matchConfigurations().get(0).actions().get(0).counterName());
        Assertions.assertEquals("wetwlyxgncxykxh", model.dynamicMatchConfigurations().get(0).ipGroups().get(0).name());
        Assertions
            .assertEquals(
                IpAddressType.IPV4, model.dynamicMatchConfigurations().get(0).ipGroups().get(0).ipAddressType());
        Assertions
            .assertEquals(
                "mmbcxfhbcp", model.dynamicMatchConfigurations().get(0).ipGroups().get(0).ipPrefixes().get(0));
        Assertions.assertEquals("dtutnwldu", model.dynamicMatchConfigurations().get(0).vlanGroups().get(0).name());
        Assertions
            .assertEquals(
                "uzhyrmewipmvekdx", model.dynamicMatchConfigurations().get(0).vlanGroups().get(0).vlans().get(0));
        Assertions.assertEquals("ms", model.dynamicMatchConfigurations().get(0).portGroups().get(0).name());
        Assertions.assertEquals("sqy", model.dynamicMatchConfigurations().get(0).portGroups().get(0).ports().get(0));
    }
}
