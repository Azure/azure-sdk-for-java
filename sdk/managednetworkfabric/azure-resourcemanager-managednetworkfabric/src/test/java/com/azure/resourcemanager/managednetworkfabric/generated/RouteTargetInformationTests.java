// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.RouteTargetInformation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RouteTargetInformationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RouteTargetInformation model = BinaryData.fromString(
            "{\"importIpv4RouteTargets\":[\"cmh\",\"dfjeceho\",\"wcpqtwl\"],\"importIpv6RouteTargets\":[\"qrg\",\"vrbnyrukoil\",\"ciduwjle\",\"pjlh\"],\"exportIpv4RouteTargets\":[\"p\",\"ruzythqkkwhbg\",\"vellvulnxdmnitm\"],\"exportIpv6RouteTargets\":[\"tvmcly\"]}")
            .toObject(RouteTargetInformation.class);
        Assertions.assertEquals("cmh", model.importIpv4RouteTargets().get(0));
        Assertions.assertEquals("qrg", model.importIpv6RouteTargets().get(0));
        Assertions.assertEquals("p", model.exportIpv4RouteTargets().get(0));
        Assertions.assertEquals("tvmcly", model.exportIpv6RouteTargets().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RouteTargetInformation model
            = new RouteTargetInformation().withImportIpv4RouteTargets(Arrays.asList("cmh", "dfjeceho", "wcpqtwl"))
                .withImportIpv6RouteTargets(Arrays.asList("qrg", "vrbnyrukoil", "ciduwjle", "pjlh"))
                .withExportIpv4RouteTargets(Arrays.asList("p", "ruzythqkkwhbg", "vellvulnxdmnitm"))
                .withExportIpv6RouteTargets(Arrays.asList("tvmcly"));
        model = BinaryData.fromObject(model).toObject(RouteTargetInformation.class);
        Assertions.assertEquals("cmh", model.importIpv4RouteTargets().get(0));
        Assertions.assertEquals("qrg", model.importIpv6RouteTargets().get(0));
        Assertions.assertEquals("p", model.exportIpv4RouteTargets().get(0));
        Assertions.assertEquals("tvmcly", model.exportIpv6RouteTargets().get(0));
    }
}
