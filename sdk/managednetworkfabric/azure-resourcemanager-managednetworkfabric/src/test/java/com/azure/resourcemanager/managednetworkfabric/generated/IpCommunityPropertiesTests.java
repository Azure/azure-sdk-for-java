// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.IpCommunityProperties;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.IpCommunityRule;
import com.azure.resourcemanager.managednetworkfabric.models.WellKnownCommunities;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IpCommunityPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpCommunityProperties model =
            BinaryData
                .fromString(
                    "{\"configurationState\":\"Deprovisioned\",\"provisioningState\":\"Failed\",\"administrativeState\":\"Enabled\",\"ipCommunityRules\":[{\"action\":\"Deny\",\"sequenceNumber\":7243568569040001370,\"wellKnownCommunities\":[\"NoExport\",\"LocalAS\",\"GShut\",\"NoAdvertise\"],\"communityMembers\":[\"uzpjlxeehux\",\"qhzlray\"]}],\"annotation\":\"zxlskihmxr\"}")
                .toObject(IpCommunityProperties.class);
        Assertions.assertEquals("zxlskihmxr", model.annotation());
        Assertions.assertEquals(CommunityActionTypes.DENY, model.ipCommunityRules().get(0).action());
        Assertions.assertEquals(7243568569040001370L, model.ipCommunityRules().get(0).sequenceNumber());
        Assertions
            .assertEquals(
                WellKnownCommunities.NO_EXPORT, model.ipCommunityRules().get(0).wellKnownCommunities().get(0));
        Assertions.assertEquals("uzpjlxeehux", model.ipCommunityRules().get(0).communityMembers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpCommunityProperties model =
            new IpCommunityProperties()
                .withAnnotation("zxlskihmxr")
                .withIpCommunityRules(
                    Arrays
                        .asList(
                            new IpCommunityRule()
                                .withAction(CommunityActionTypes.DENY)
                                .withSequenceNumber(7243568569040001370L)
                                .withWellKnownCommunities(
                                    Arrays
                                        .asList(
                                            WellKnownCommunities.NO_EXPORT,
                                            WellKnownCommunities.LOCAL_AS,
                                            WellKnownCommunities.GSHUT,
                                            WellKnownCommunities.NO_ADVERTISE))
                                .withCommunityMembers(Arrays.asList("uzpjlxeehux", "qhzlray"))));
        model = BinaryData.fromObject(model).toObject(IpCommunityProperties.class);
        Assertions.assertEquals("zxlskihmxr", model.annotation());
        Assertions.assertEquals(CommunityActionTypes.DENY, model.ipCommunityRules().get(0).action());
        Assertions.assertEquals(7243568569040001370L, model.ipCommunityRules().get(0).sequenceNumber());
        Assertions
            .assertEquals(
                WellKnownCommunities.NO_EXPORT, model.ipCommunityRules().get(0).wellKnownCommunities().get(0));
        Assertions.assertEquals("uzpjlxeehux", model.ipCommunityRules().get(0).communityMembers().get(0));
    }
}
