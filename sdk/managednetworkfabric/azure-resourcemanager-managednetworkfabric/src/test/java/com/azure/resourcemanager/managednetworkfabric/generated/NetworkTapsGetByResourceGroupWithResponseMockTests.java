// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.DestinationType;
import com.azure.resourcemanager.managednetworkfabric.models.Encapsulation;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkTap;
import com.azure.resourcemanager.managednetworkfabric.models.PollingType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkTapsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"networkPacketBrokerId\":\"elsrymzvtzyf\",\"sourceTapRuleId\":\"bayhas\",\"destinations\":[{\"name\":\"lk\",\"destinationType\":\"Direct\",\"destinationId\":\"kqyezyzxkr\",\"isolationDomainProperties\":{\"encapsulation\":\"GRE\",\"neighborGroupIds\":[\"fuxystltkq\",\"ikoiiqajfwzubf\",\"oq\"]},\"destinationTapRuleId\":\"bueiydoqbruxl\"},{\"name\":\"txhednkzjt\",\"destinationType\":\"IsolationDomain\",\"destinationId\":\"pzrtseixpk\",\"isolationDomainProperties\":{\"encapsulation\":\"None\",\"neighborGroupIds\":[\"cmkwcyeljni\",\"dgzxbwn\",\"yihct\"]},\"destinationTapRuleId\":\"kmzozbk\"}],\"pollingType\":\"Push\",\"configurationState\":\"Deprovisioning\",\"provisioningState\":\"Deleting\",\"administrativeState\":\"Enabled\",\"annotation\":\"lm\"},\"location\":\"fyfyftkvzbdljyk\",\"tags\":{\"majjzplgtwfkflcv\":\"agfyi\",\"fqynmldhgzzohtag\":\"zkbebuafbddm\",\"fxzobovsvhbtdgxg\":\"yuhdqhqgrksypoo\"},\"id\":\"lmdeoub\",\"name\":\"fxiswemncjhmvvze\",\"type\":\"icmvbsjt\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NetworkTap response = manager.networkTaps()
            .getByResourceGroupWithResponse("dvbxqxo", "ix", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("fyfyftkvzbdljyk", response.location());
        Assertions.assertEquals("agfyi", response.tags().get("majjzplgtwfkflcv"));
        Assertions.assertEquals("elsrymzvtzyf", response.networkPacketBrokerId());
        Assertions.assertEquals("lk", response.destinations().get(0).name());
        Assertions.assertEquals(DestinationType.DIRECT, response.destinations().get(0).destinationType());
        Assertions.assertEquals("kqyezyzxkr", response.destinations().get(0).destinationId());
        Assertions.assertEquals(Encapsulation.GRE,
            response.destinations().get(0).isolationDomainProperties().encapsulation());
        Assertions.assertEquals("fuxystltkq",
            response.destinations().get(0).isolationDomainProperties().neighborGroupIds().get(0));
        Assertions.assertEquals("bueiydoqbruxl", response.destinations().get(0).destinationTapRuleId());
        Assertions.assertEquals(PollingType.PUSH, response.pollingType());
        Assertions.assertEquals("lm", response.annotation());
    }
}
