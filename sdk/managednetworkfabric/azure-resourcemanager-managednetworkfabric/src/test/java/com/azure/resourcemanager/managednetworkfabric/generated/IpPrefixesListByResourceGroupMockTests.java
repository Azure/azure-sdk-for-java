// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.Condition;
import com.azure.resourcemanager.managednetworkfabric.models.IpPrefix;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IpPrefixesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"configurationState\":\"Accepted\",\"provisioningState\":\"Updating\",\"administrativeState\":\"MAT\",\"ipPrefixRules\":[{\"action\":\"Permit\",\"sequenceNumber\":245835078321548908,\"networkPrefix\":\"u\",\"condition\":\"GreaterThanOrEqualTo\",\"subnetMaskLength\":\"aglyyhrgmabspmlu\"},{\"action\":\"Permit\",\"sequenceNumber\":4123582002679106167,\"networkPrefix\":\"kk\",\"condition\":\"GreaterThanOrEqualTo\",\"subnetMaskLength\":\"tocrbfgqicmdrgcu\"}],\"annotation\":\"m\"},\"location\":\"r\",\"tags\":{\"qjvfio\":\"cqhgcmljzksqimy\",\"szopeuku\":\"hcaqpv\",\"emosq\":\"dswbsskgq\",\"gipdzym\":\"fsjbpwjwz\"},\"id\":\"khxfpz\",\"name\":\"uudqhadxjvvl\",\"type\":\"ibweua\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<IpPrefix> response
            = manager.ipPrefixes().listByResourceGroup("fywwnax", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("r", response.iterator().next().location());
        Assertions.assertEquals("cqhgcmljzksqimy", response.iterator().next().tags().get("qjvfio"));
        Assertions.assertEquals(CommunityActionTypes.PERMIT,
            response.iterator().next().ipPrefixRules().get(0).action());
        Assertions.assertEquals(245835078321548908L,
            response.iterator().next().ipPrefixRules().get(0).sequenceNumber());
        Assertions.assertEquals("u", response.iterator().next().ipPrefixRules().get(0).networkPrefix());
        Assertions.assertEquals(Condition.GREATER_THAN_OR_EQUAL_TO,
            response.iterator().next().ipPrefixRules().get(0).condition());
        Assertions.assertEquals("aglyyhrgmabspmlu",
            response.iterator().next().ipPrefixRules().get(0).subnetMaskLength());
        Assertions.assertEquals("m", response.iterator().next().annotation());
    }
}
