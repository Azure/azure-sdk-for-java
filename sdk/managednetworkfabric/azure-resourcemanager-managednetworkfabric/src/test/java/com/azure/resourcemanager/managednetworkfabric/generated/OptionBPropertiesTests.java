// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.OptionBProperties;
import com.azure.resourcemanager.managednetworkfabric.models.RouteTargetInformation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OptionBPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OptionBProperties model = BinaryData.fromString(
            "{\"importRouteTargets\":[\"bcakzn\",\"okh\",\"itwhrjsdmmazdnck\",\"dbjp\"],\"exportRouteTargets\":[\"zqpxzbawkikcd\",\"fhbssdpjeyoqxded\",\"cfiwhagxsurejq\",\"shzz\"],\"routeTargets\":{\"importIpv4RouteTargets\":[\"lcxiqqzjko\"],\"importIpv6RouteTargets\":[\"pnamgl\",\"ouigdmfivjqte\",\"dqqigdydkghpc\"],\"exportIpv4RouteTargets\":[\"qirvtk\",\"yhhmvfxl\",\"pjajodmkrrwe\"],\"exportIpv6RouteTargets\":[\"vqokql\",\"jqgir\"]}}")
            .toObject(OptionBProperties.class);
        Assertions.assertEquals("bcakzn", model.importRouteTargets().get(0));
        Assertions.assertEquals("zqpxzbawkikcd", model.exportRouteTargets().get(0));
        Assertions.assertEquals("lcxiqqzjko", model.routeTargets().importIpv4RouteTargets().get(0));
        Assertions.assertEquals("pnamgl", model.routeTargets().importIpv6RouteTargets().get(0));
        Assertions.assertEquals("qirvtk", model.routeTargets().exportIpv4RouteTargets().get(0));
        Assertions.assertEquals("vqokql", model.routeTargets().exportIpv6RouteTargets().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OptionBProperties model
            = new OptionBProperties().withImportRouteTargets(Arrays.asList("bcakzn", "okh", "itwhrjsdmmazdnck", "dbjp"))
                .withExportRouteTargets(Arrays.asList("zqpxzbawkikcd", "fhbssdpjeyoqxded", "cfiwhagxsurejq", "shzz"))
                .withRouteTargets(new RouteTargetInformation().withImportIpv4RouteTargets(Arrays.asList("lcxiqqzjko"))
                    .withImportIpv6RouteTargets(Arrays.asList("pnamgl", "ouigdmfivjqte", "dqqigdydkghpc"))
                    .withExportIpv4RouteTargets(Arrays.asList("qirvtk", "yhhmvfxl", "pjajodmkrrwe"))
                    .withExportIpv6RouteTargets(Arrays.asList("vqokql", "jqgir")));
        model = BinaryData.fromObject(model).toObject(OptionBProperties.class);
        Assertions.assertEquals("bcakzn", model.importRouteTargets().get(0));
        Assertions.assertEquals("zqpxzbawkikcd", model.exportRouteTargets().get(0));
        Assertions.assertEquals("lcxiqqzjko", model.routeTargets().importIpv4RouteTargets().get(0));
        Assertions.assertEquals("pnamgl", model.routeTargets().importIpv6RouteTargets().get(0));
        Assertions.assertEquals("qirvtk", model.routeTargets().exportIpv4RouteTargets().get(0));
        Assertions.assertEquals("vqokql", model.routeTargets().exportIpv6RouteTargets().get(0));
    }
}
