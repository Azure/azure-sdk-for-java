// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.IpCommunity;
import com.azure.resourcemanager.managednetworkfabric.models.WellKnownCommunities;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IpCommunitiesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"configurationState\":\"Deprovisioned\",\"provisioningState\":\"Failed\",\"administrativeState\":\"MAT\",\"ipCommunityRules\":[{\"action\":\"Permit\",\"sequenceNumber\":6487978937622546147,\"wellKnownCommunities\":[\"NoExport\"],\"communityMembers\":[\"dfiekkiskyy\",\"aeknfffy\"]},{\"action\":\"Permit\",\"sequenceNumber\":2958499754343838175,\"wellKnownCommunities\":[\"NoExport\",\"GShut\",\"NoExport\"],\"communityMembers\":[\"ufbbjiu\",\"fofhoajjyls\"]},{\"action\":\"Permit\",\"sequenceNumber\":3348662806706509828,\"wellKnownCommunities\":[\"LocalAS\",\"LocalAS\",\"NoExport\"],\"communityMembers\":[\"qquyhbcee\"]},{\"action\":\"Permit\",\"sequenceNumber\":7959928209860796152,\"wellKnownCommunities\":[\"LocalAS\",\"NoExport\",\"Internet\"],\"communityMembers\":[\"tvuxeu\",\"mds\",\"ij\",\"axxfdlypkcpw\"]}],\"annotation\":\"qnnmjundt\"},\"location\":\"cltjhbcycgqa\",\"tags\":{\"acww\":\"ihxv\",\"qgugwl\":\"opxpryxnsbubwhz\"},\"id\":\"xahtqmmkdhwqc\",\"name\":\"webagmfpkephu\",\"type\":\"eucosvkk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IpCommunity response = manager.ipCommunities()
            .getByResourceGroupWithResponse("zsbzrrxeyvidcowl", "mbdctqxavejo", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cltjhbcycgqa", response.location());
        Assertions.assertEquals("ihxv", response.tags().get("acww"));
        Assertions.assertEquals(CommunityActionTypes.PERMIT, response.ipCommunityRules().get(0).action());
        Assertions.assertEquals(6487978937622546147L, response.ipCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals(WellKnownCommunities.NO_EXPORT,
            response.ipCommunityRules().get(0).wellKnownCommunities().get(0));
        Assertions.assertEquals("dfiekkiskyy", response.ipCommunityRules().get(0).communityMembers().get(0));
        Assertions.assertEquals("qnnmjundt", response.annotation());
    }
}
