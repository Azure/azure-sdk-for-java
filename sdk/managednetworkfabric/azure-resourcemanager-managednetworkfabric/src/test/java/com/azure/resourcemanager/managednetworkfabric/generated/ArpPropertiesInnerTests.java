// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.ArpPropertiesInner;
import org.junit.jupiter.api.Assertions;

public final class ArpPropertiesInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ArpPropertiesInner model =
            BinaryData
                .fromString(
                    "{\"address\":\"tvfcivfsn\",\"age\":\"ymuctqhjfbebrj\",\"macAddress\":\"xerf\",\"interface\":\"wutttxfvjrbi\",\"state\":\"hxepcyvahfnlj\"}")
                .toObject(ArpPropertiesInner.class);
        Assertions.assertEquals("tvfcivfsn", model.address());
        Assertions.assertEquals("ymuctqhjfbebrj", model.age());
        Assertions.assertEquals("xerf", model.macAddress());
        Assertions.assertEquals("wutttxfvjrbi", model.interfaceProperty());
        Assertions.assertEquals("hxepcyvahfnlj", model.state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ArpPropertiesInner model =
            new ArpPropertiesInner()
                .withAddress("tvfcivfsn")
                .withAge("ymuctqhjfbebrj")
                .withMacAddress("xerf")
                .withInterfaceProperty("wutttxfvjrbi")
                .withState("hxepcyvahfnlj");
        model = BinaryData.fromObject(model).toObject(ArpPropertiesInner.class);
        Assertions.assertEquals("tvfcivfsn", model.address());
        Assertions.assertEquals("ymuctqhjfbebrj", model.age());
        Assertions.assertEquals("xerf", model.macAddress());
        Assertions.assertEquals("wutttxfvjrbi", model.interfaceProperty());
        Assertions.assertEquals("hxepcyvahfnlj", model.state());
    }
}
