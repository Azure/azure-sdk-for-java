// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.NetworkDeviceInner;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class NetworkDeviceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkDeviceInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"version\":\"kbnbmxlxmwtyg\",\"networkDeviceSku\":\"zusitoqcahfs\",\"networkDeviceRole\":\"Management\",\"networkRackId\":\"lreesrfwsszvlcwl\",\"managementIpv4Address\":\"olntfx\",\"managementIpv6Address\":\"rqmipfjwf\",\"configurationState\":\"ErrorDeprovisioning\",\"provisioningState\":\"Accepted\",\"administrativeState\":\"Enabled\",\"hostName\":\"xxbaizabuln\",\"serialNumber\":\"skjto\",\"annotation\":\"dzjs\"},\"location\":\"nvhxqqmqip\",\"tags\":{\"tfshksnyzm\":\"hfnzocx\",\"bnl\":\"pamwbw\",\"kvi\":\"lcefiqdktw\",\"uuzhw\":\"lpfliwoyn\"},\"id\":\"ladpcmhjha\",\"name\":\"sybkekymffzt\",\"type\":\"ilscv\"}")
                .toObject(NetworkDeviceInner.class);
        Assertions.assertEquals("nvhxqqmqip", model.location());
        Assertions.assertEquals("hfnzocx", model.tags().get("tfshksnyzm"));
        Assertions.assertEquals("zusitoqcahfs", model.networkDeviceSku());
        Assertions.assertEquals("xxbaizabuln", model.hostname());
        Assertions.assertEquals("skjto", model.serialNumber());
        Assertions.assertEquals("dzjs", model.annotation());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkDeviceInner model =
            new NetworkDeviceInner()
                .withLocation("nvhxqqmqip")
                .withTags(mapOf("tfshksnyzm", "hfnzocx", "bnl", "pamwbw", "kvi", "lcefiqdktw", "uuzhw", "lpfliwoyn"))
                .withNetworkDeviceSku("zusitoqcahfs")
                .withHostname("xxbaizabuln")
                .withSerialNumber("skjto")
                .withAnnotation("dzjs");
        model = BinaryData.fromObject(model).toObject(NetworkDeviceInner.class);
        Assertions.assertEquals("nvhxqqmqip", model.location());
        Assertions.assertEquals("hfnzocx", model.tags().get("tfshksnyzm"));
        Assertions.assertEquals("zusitoqcahfs", model.networkDeviceSku());
        Assertions.assertEquals("xxbaizabuln", model.hostname());
        Assertions.assertEquals("skjto", model.serialNumber());
        Assertions.assertEquals("dzjs", model.annotation());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
