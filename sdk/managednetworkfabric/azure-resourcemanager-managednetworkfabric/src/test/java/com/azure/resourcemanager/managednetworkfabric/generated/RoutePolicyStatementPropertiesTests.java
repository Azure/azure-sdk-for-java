// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.ActionIpCommunityProperties;
import com.azure.resourcemanager.managednetworkfabric.models.ActionIpExtendedCommunityProperties;
import com.azure.resourcemanager.managednetworkfabric.models.IpCommunityIdList;
import com.azure.resourcemanager.managednetworkfabric.models.IpExtendedCommunityIdList;
import com.azure.resourcemanager.managednetworkfabric.models.RoutePolicyActionType;
import com.azure.resourcemanager.managednetworkfabric.models.RoutePolicyConditionType;
import com.azure.resourcemanager.managednetworkfabric.models.RoutePolicyStatementProperties;
import com.azure.resourcemanager.managednetworkfabric.models.StatementActionProperties;
import com.azure.resourcemanager.managednetworkfabric.models.StatementConditionProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RoutePolicyStatementPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RoutePolicyStatementProperties model = BinaryData.fromString(
            "{\"sequenceNumber\":7155823942423502567,\"condition\":{\"type\":\"Or\",\"ipPrefixId\":\"eeoxvqjmrnbl\",\"ipExtendedCommunityIds\":[\"dbfbmdiv\",\"xzhpjgqzmiaoawea\",\"fxaubuhruetcnx\"],\"ipCommunityIds\":[\"zzdckhs\",\"drrjsu\",\"nowobwx\"]},\"action\":{\"localPreference\":836975660473857424,\"actionType\":\"Continue\",\"ipCommunityProperties\":{\"delete\":{\"ipCommunityIds\":[\"sfjfouqjpzheahu\",\"kqxqkva\"]},\"set\":{\"ipCommunityIds\":[\"ymudj\",\"aajzdebhsermcl\"]},\"add\":{\"ipCommunityIds\":[\"uhyqkaaptbssv\"]}},\"ipExtendedCommunityProperties\":{\"delete\":{\"ipExtendedCommunityIds\":[\"twybloccuhplxzbn\",\"shvqnpszbeuyb\",\"tc\",\"zjfjtvpey\"]},\"set\":{\"ipExtendedCommunityIds\":[\"xurxrltqmmijgp\",\"fkwnaeikczscymqf\"]},\"add\":{\"ipExtendedCommunityIds\":[\"pqnyumzapdok\"]}}},\"annotation\":\"vpezknfzqnzbflbq\"}")
            .toObject(RoutePolicyStatementProperties.class);
        Assertions.assertEquals("vpezknfzqnzbflbq", model.annotation());
        Assertions.assertEquals(7155823942423502567L, model.sequenceNumber());
        Assertions.assertEquals("zzdckhs", model.condition().ipCommunityIds().get(0));
        Assertions.assertEquals(RoutePolicyConditionType.OR, model.condition().type());
        Assertions.assertEquals("eeoxvqjmrnbl", model.condition().ipPrefixId());
        Assertions.assertEquals("dbfbmdiv", model.condition().ipExtendedCommunityIds().get(0));
        Assertions.assertEquals(836975660473857424L, model.action().localPreference());
        Assertions.assertEquals(RoutePolicyActionType.CONTINUE, model.action().actionType());
        Assertions.assertEquals("uhyqkaaptbssv", model.action().ipCommunityProperties().add().ipCommunityIds().get(0));
        Assertions.assertEquals("sfjfouqjpzheahu",
            model.action().ipCommunityProperties().delete().ipCommunityIds().get(0));
        Assertions.assertEquals("ymudj", model.action().ipCommunityProperties().set().ipCommunityIds().get(0));
        Assertions.assertEquals("pqnyumzapdok",
            model.action().ipExtendedCommunityProperties().add().ipExtendedCommunityIds().get(0));
        Assertions.assertEquals("twybloccuhplxzbn",
            model.action().ipExtendedCommunityProperties().delete().ipExtendedCommunityIds().get(0));
        Assertions.assertEquals("xurxrltqmmijgp",
            model.action().ipExtendedCommunityProperties().set().ipExtendedCommunityIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RoutePolicyStatementProperties model
            = new RoutePolicyStatementProperties().withAnnotation("vpezknfzqnzbflbq")
                .withSequenceNumber(7155823942423502567L)
                .withCondition(new StatementConditionProperties()
                    .withIpCommunityIds(Arrays.asList("zzdckhs", "drrjsu", "nowobwx"))
                    .withType(RoutePolicyConditionType.OR)
                    .withIpPrefixId("eeoxvqjmrnbl")
                    .withIpExtendedCommunityIds(Arrays.asList("dbfbmdiv", "xzhpjgqzmiaoawea", "fxaubuhruetcnx")))
                .withAction(new StatementActionProperties().withLocalPreference(836975660473857424L)
                    .withActionType(RoutePolicyActionType.CONTINUE)
                    .withIpCommunityProperties(new ActionIpCommunityProperties()
                        .withAdd(new IpCommunityIdList().withIpCommunityIds(Arrays.asList("uhyqkaaptbssv")))
                        .withDelete(
                            new IpCommunityIdList().withIpCommunityIds(Arrays.asList("sfjfouqjpzheahu", "kqxqkva")))
                        .withSet(new IpCommunityIdList().withIpCommunityIds(Arrays.asList("ymudj", "aajzdebhsermcl"))))
                    .withIpExtendedCommunityProperties(new ActionIpExtendedCommunityProperties()
                        .withAdd(
                            new IpExtendedCommunityIdList().withIpExtendedCommunityIds(Arrays.asList("pqnyumzapdok")))
                        .withDelete(new IpExtendedCommunityIdList().withIpExtendedCommunityIds(
                            Arrays.asList("twybloccuhplxzbn", "shvqnpszbeuyb", "tc", "zjfjtvpey")))
                        .withSet(new IpExtendedCommunityIdList()
                            .withIpExtendedCommunityIds(Arrays.asList("xurxrltqmmijgp", "fkwnaeikczscymqf")))));
        model = BinaryData.fromObject(model).toObject(RoutePolicyStatementProperties.class);
        Assertions.assertEquals("vpezknfzqnzbflbq", model.annotation());
        Assertions.assertEquals(7155823942423502567L, model.sequenceNumber());
        Assertions.assertEquals("zzdckhs", model.condition().ipCommunityIds().get(0));
        Assertions.assertEquals(RoutePolicyConditionType.OR, model.condition().type());
        Assertions.assertEquals("eeoxvqjmrnbl", model.condition().ipPrefixId());
        Assertions.assertEquals("dbfbmdiv", model.condition().ipExtendedCommunityIds().get(0));
        Assertions.assertEquals(836975660473857424L, model.action().localPreference());
        Assertions.assertEquals(RoutePolicyActionType.CONTINUE, model.action().actionType());
        Assertions.assertEquals("uhyqkaaptbssv", model.action().ipCommunityProperties().add().ipCommunityIds().get(0));
        Assertions.assertEquals("sfjfouqjpzheahu",
            model.action().ipCommunityProperties().delete().ipCommunityIds().get(0));
        Assertions.assertEquals("ymudj", model.action().ipCommunityProperties().set().ipCommunityIds().get(0));
        Assertions.assertEquals("pqnyumzapdok",
            model.action().ipExtendedCommunityProperties().add().ipExtendedCommunityIds().get(0));
        Assertions.assertEquals("twybloccuhplxzbn",
            model.action().ipExtendedCommunityProperties().delete().ipExtendedCommunityIds().get(0));
        Assertions.assertEquals("xurxrltqmmijgp",
            model.action().ipExtendedCommunityProperties().set().ipExtendedCommunityIds().get(0));
    }
}
