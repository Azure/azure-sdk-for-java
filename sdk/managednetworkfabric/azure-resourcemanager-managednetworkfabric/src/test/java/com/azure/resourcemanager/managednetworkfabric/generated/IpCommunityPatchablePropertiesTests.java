// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.IpCommunityPatchableProperties;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.IpCommunityRule;
import com.azure.resourcemanager.managednetworkfabric.models.WellKnownCommunities;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IpCommunityPatchablePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpCommunityPatchableProperties model = BinaryData.fromString(
            "{\"ipCommunityRules\":[{\"action\":\"Deny\",\"sequenceNumber\":3602928584762894021,\"wellKnownCommunities\":[\"Internet\",\"LocalAS\",\"GShut\"],\"communityMembers\":[\"rldefxrdcox\",\"b\"]},{\"action\":\"Permit\",\"sequenceNumber\":2255670015013104702,\"wellKnownCommunities\":[\"LocalAS\",\"Internet\",\"Internet\"],\"communityMembers\":[\"bnqbpizxqltgrd\",\"gypxrxvbfihwuhvc\",\"a\",\"s\"]}]}")
            .toObject(IpCommunityPatchableProperties.class);
        Assertions.assertEquals(CommunityActionTypes.DENY, model.ipCommunityRules().get(0).action());
        Assertions.assertEquals(3602928584762894021L, model.ipCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals(WellKnownCommunities.INTERNET,
            model.ipCommunityRules().get(0).wellKnownCommunities().get(0));
        Assertions.assertEquals("rldefxrdcox", model.ipCommunityRules().get(0).communityMembers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpCommunityPatchableProperties model = new IpCommunityPatchableProperties().withIpCommunityRules(Arrays.asList(
            new IpCommunityRule().withAction(CommunityActionTypes.DENY)
                .withSequenceNumber(3602928584762894021L)
                .withWellKnownCommunities(Arrays.asList(WellKnownCommunities.INTERNET, WellKnownCommunities.LOCAL_AS,
                    WellKnownCommunities.GSHUT))
                .withCommunityMembers(Arrays.asList("rldefxrdcox", "b")),
            new IpCommunityRule().withAction(CommunityActionTypes.PERMIT)
                .withSequenceNumber(2255670015013104702L)
                .withWellKnownCommunities(Arrays.asList(WellKnownCommunities.LOCAL_AS, WellKnownCommunities.INTERNET,
                    WellKnownCommunities.INTERNET))
                .withCommunityMembers(Arrays.asList("bnqbpizxqltgrd", "gypxrxvbfihwuhvc", "a", "s"))));
        model = BinaryData.fromObject(model).toObject(IpCommunityPatchableProperties.class);
        Assertions.assertEquals(CommunityActionTypes.DENY, model.ipCommunityRules().get(0).action());
        Assertions.assertEquals(3602928584762894021L, model.ipCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals(WellKnownCommunities.INTERNET,
            model.ipCommunityRules().get(0).wellKnownCommunities().get(0));
        Assertions.assertEquals("rldefxrdcox", model.ipCommunityRules().get(0).communityMembers().get(0));
    }
}
