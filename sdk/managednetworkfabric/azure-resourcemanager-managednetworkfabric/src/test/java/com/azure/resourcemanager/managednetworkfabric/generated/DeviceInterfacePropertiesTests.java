// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.DeviceInterfaceProperties;
import com.azure.resourcemanager.managednetworkfabric.models.SupportedConnectorProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DeviceInterfacePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeviceInterfaceProperties model = BinaryData.fromString(
            "{\"identifier\":\"tbhpjhxpcvrdnye\",\"interfaceType\":\"aneqadynzja\",\"supportedConnectorTypes\":[{\"connectorType\":\"uomzczfki\",\"maxSpeedInMbps\":1238351045},{\"connectorType\":\"saaxwspca\",\"maxSpeedInMbps\":1087934112},{\"connectorType\":\"fjqebglcxkx\",\"maxSpeedInMbps\":133600558}]}")
            .toObject(DeviceInterfaceProperties.class);
        Assertions.assertEquals("tbhpjhxpcvrdnye", model.identifier());
        Assertions.assertEquals("aneqadynzja", model.interfaceType());
        Assertions.assertEquals("uomzczfki", model.supportedConnectorTypes().get(0).connectorType());
        Assertions.assertEquals(1238351045, model.supportedConnectorTypes().get(0).maxSpeedInMbps());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeviceInterfaceProperties model = new DeviceInterfaceProperties().withIdentifier("tbhpjhxpcvrdnye")
            .withInterfaceType("aneqadynzja")
            .withSupportedConnectorTypes(Arrays.asList(
                new SupportedConnectorProperties().withConnectorType("uomzczfki").withMaxSpeedInMbps(1238351045),
                new SupportedConnectorProperties().withConnectorType("saaxwspca").withMaxSpeedInMbps(1087934112),
                new SupportedConnectorProperties().withConnectorType("fjqebglcxkx").withMaxSpeedInMbps(133600558)));
        model = BinaryData.fromObject(model).toObject(DeviceInterfaceProperties.class);
        Assertions.assertEquals("tbhpjhxpcvrdnye", model.identifier());
        Assertions.assertEquals("aneqadynzja", model.interfaceType());
        Assertions.assertEquals("uomzczfki", model.supportedConnectorTypes().get(0).connectorType());
        Assertions.assertEquals(1238351045, model.supportedConnectorTypes().get(0).maxSpeedInMbps());
    }
}
