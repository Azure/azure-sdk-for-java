// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.InternetGatewayProperties;
import com.azure.resourcemanager.managednetworkfabric.models.GatewayType;
import org.junit.jupiter.api.Assertions;

public final class InternetGatewayPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InternetGatewayProperties model = BinaryData.fromString(
            "{\"ipv4Address\":\"bopfppdbwnup\",\"port\":2068855752,\"type\":\"Workload\",\"networkFabricControllerId\":\"kuma\",\"provisioningState\":\"Canceled\",\"internetGatewayRuleId\":\"acfdmmcpugme\",\"annotation\":\"epvufhbzehew\"}")
            .toObject(InternetGatewayProperties.class);
        Assertions.assertEquals("epvufhbzehew", model.annotation());
        Assertions.assertEquals(GatewayType.WORKLOAD, model.type());
        Assertions.assertEquals("kuma", model.networkFabricControllerId());
        Assertions.assertEquals("acfdmmcpugme", model.internetGatewayRuleId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InternetGatewayProperties model = new InternetGatewayProperties().withAnnotation("epvufhbzehew")
            .withType(GatewayType.WORKLOAD)
            .withNetworkFabricControllerId("kuma")
            .withInternetGatewayRuleId("acfdmmcpugme");
        model = BinaryData.fromObject(model).toObject(InternetGatewayProperties.class);
        Assertions.assertEquals("epvufhbzehew", model.annotation());
        Assertions.assertEquals(GatewayType.WORKLOAD, model.type());
        Assertions.assertEquals("kuma", model.networkFabricControllerId());
        Assertions.assertEquals("acfdmmcpugme", model.internetGatewayRuleId());
    }
}
