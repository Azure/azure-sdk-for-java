// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.AccessControlList;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.ConfigurationType;
import com.azure.resourcemanager.managednetworkfabric.models.IpAddressType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AccessControlListsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"lastSyncedTime\":\"2021-11-22T15:22:40Z\",\"configurationState\":\"Provisioned\",\"provisioningState\":\"Deleting\",\"administrativeState\":\"Enabled\",\"configurationType\":\"Inline\",\"aclsUrl\":\"ciyoypoedk\",\"defaultAction\":\"Permit\",\"matchConfigurations\":[{\"matchConfigurationName\":\"py\",\"sequenceNumber\":2877359021254224088,\"ipAddressType\":\"IPv6\",\"matchConditions\":[{}],\"actions\":[{},{},{},{}]},{\"matchConfigurationName\":\"te\",\"sequenceNumber\":5641083204128969165,\"ipAddressType\":\"IPv4\",\"matchConditions\":[{},{},{},{}],\"actions\":[{},{}]}],\"dynamicMatchConfigurations\":[{\"ipGroups\":[{}],\"vlanGroups\":[{},{},{}],\"portGroups\":[{},{},{},{}]},{\"ipGroups\":[{}],\"vlanGroups\":[{},{},{},{}],\"portGroups\":[{},{},{}]},{\"ipGroups\":[{},{}],\"vlanGroups\":[{}],\"portGroups\":[{}]}],\"annotation\":\"obpmgqlw\"},\"location\":\"znbbyzposzfut\",\"tags\":{\"ewflwzhxzuxe\":\"ygbnbcmoiqgtzpv\",\"jdajdqxymxxyfrd\":\"xhywlrkqsqvvdkfp\"},\"id\":\"idcetfvgwfwsldi\",\"name\":\"wouppvyddq\",\"type\":\"vclrsn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AccessControlList response = manager.accessControlLists()
            .getByResourceGroupWithResponse("hgxuwudgcyqruvum", "yddnqivah", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("znbbyzposzfut", response.location());
        Assertions.assertEquals("ygbnbcmoiqgtzpv", response.tags().get("ewflwzhxzuxe"));
        Assertions.assertEquals(ConfigurationType.INLINE, response.configurationType());
        Assertions.assertEquals("ciyoypoedk", response.aclsUrl());
        Assertions.assertEquals(CommunityActionTypes.PERMIT, response.defaultAction());
        Assertions.assertEquals("py", response.matchConfigurations().get(0).matchConfigurationName());
        Assertions.assertEquals(2877359021254224088L, response.matchConfigurations().get(0).sequenceNumber());
        Assertions.assertEquals(IpAddressType.IPV6, response.matchConfigurations().get(0).ipAddressType());
        Assertions.assertEquals("obpmgqlw", response.annotation());
    }
}
