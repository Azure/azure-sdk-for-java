// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.ConfigurationType;
import com.azure.resourcemanager.managednetworkfabric.models.IpAddressType;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRule;
import com.azure.resourcemanager.managednetworkfabric.models.PollingIntervalInSeconds;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkTapRulesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"networkTapId\":\"upirvdonka\",\"pollingIntervalInSeconds\":60,\"lastSyncedTime\":\"2021-04-11T15:36:29Z\",\"configurationState\":\"DeferredControl\",\"provisioningState\":\"Updating\",\"administrativeState\":\"Disabled\",\"configurationType\":\"File\",\"tapRulesUrl\":\"jhtcyznrhighnxh\",\"matchConfigurations\":[{\"matchConfigurationName\":\"nktsvwqdarjteq\",\"sequenceNumber\":3721982071130664130,\"ipAddressType\":\"IPv4\",\"matchConditions\":[{},{},{}],\"actions\":[{},{},{}]},{\"matchConfigurationName\":\"sttximeztasflgme\",\"sequenceNumber\":6905114670976295777,\"ipAddressType\":\"IPv4\",\"matchConditions\":[{},{},{},{}],\"actions\":[{}]}],\"dynamicMatchConfigurations\":[{\"ipGroups\":[{},{},{},{}],\"vlanGroups\":[{},{},{}],\"portGroups\":[{},{},{},{}]},{\"ipGroups\":[{},{}],\"vlanGroups\":[{},{},{},{}],\"portGroups\":[{},{},{}]},{\"ipGroups\":[{}],\"vlanGroups\":[{},{},{},{}],\"portGroups\":[{}]}],\"annotation\":\"pleirjr\"},\"location\":\"k\",\"tags\":{\"bdukid\":\"dubmazlx\",\"kpardo\":\"qeyqrlgpkypb\",\"yhbzmgzsyt\":\"dtedxz\",\"sqsbq\":\"pfslrx\"},\"id\":\"q\",\"name\":\"pi\",\"type\":\"fstkdlyj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<NetworkTapRule> response = manager.networkTapRules().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("k", response.iterator().next().location());
        Assertions.assertEquals("dubmazlx", response.iterator().next().tags().get("bdukid"));
        Assertions.assertEquals(PollingIntervalInSeconds.SIX_ZERO,
            response.iterator().next().pollingIntervalInSeconds());
        Assertions.assertEquals(ConfigurationType.FILE, response.iterator().next().configurationType());
        Assertions.assertEquals("jhtcyznrhighnxh", response.iterator().next().tapRulesUrl());
        Assertions.assertEquals("nktsvwqdarjteq",
            response.iterator().next().matchConfigurations().get(0).matchConfigurationName());
        Assertions.assertEquals(3721982071130664130L,
            response.iterator().next().matchConfigurations().get(0).sequenceNumber());
        Assertions.assertEquals(IpAddressType.IPV4,
            response.iterator().next().matchConfigurations().get(0).ipAddressType());
        Assertions.assertEquals("pleirjr", response.iterator().next().annotation());
    }
}
