// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.L3OptionBProperties;
import com.azure.resourcemanager.managednetworkfabric.models.RouteTargetInformation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class L3OptionBPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        L3OptionBProperties model = BinaryData.fromString(
            "{\"importRouteTargets\":[\"njzudr\"],\"exportRouteTargets\":[\"kgmeb\"],\"routeTargets\":{\"importIpv4RouteTargets\":[\"czzqrhmngqbedyg\",\"s\"],\"importIpv6RouteTargets\":[\"nykdi\",\"jch\",\"rmpwctofld\",\"eacdhztx\"],\"exportIpv4RouteTargets\":[\"fg\",\"rwjiyew\"],\"exportIpv6RouteTargets\":[\"srwqrxetfg\",\"wvrrmdqn\",\"ycnawthvmaxgnuy\"]}}")
            .toObject(L3OptionBProperties.class);
        Assertions.assertEquals("njzudr", model.importRouteTargets().get(0));
        Assertions.assertEquals("kgmeb", model.exportRouteTargets().get(0));
        Assertions.assertEquals("czzqrhmngqbedyg", model.routeTargets().importIpv4RouteTargets().get(0));
        Assertions.assertEquals("nykdi", model.routeTargets().importIpv6RouteTargets().get(0));
        Assertions.assertEquals("fg", model.routeTargets().exportIpv4RouteTargets().get(0));
        Assertions.assertEquals("srwqrxetfg", model.routeTargets().exportIpv6RouteTargets().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        L3OptionBProperties model = new L3OptionBProperties().withImportRouteTargets(Arrays.asList("njzudr"))
            .withExportRouteTargets(Arrays.asList("kgmeb"))
            .withRouteTargets(
                new RouteTargetInformation().withImportIpv4RouteTargets(Arrays.asList("czzqrhmngqbedyg", "s"))
                    .withImportIpv6RouteTargets(Arrays.asList("nykdi", "jch", "rmpwctofld", "eacdhztx"))
                    .withExportIpv4RouteTargets(Arrays.asList("fg", "rwjiyew"))
                    .withExportIpv6RouteTargets(Arrays.asList("srwqrxetfg", "wvrrmdqn", "ycnawthvmaxgnuy")));
        model = BinaryData.fromObject(model).toObject(L3OptionBProperties.class);
        Assertions.assertEquals("njzudr", model.importRouteTargets().get(0));
        Assertions.assertEquals("kgmeb", model.exportRouteTargets().get(0));
        Assertions.assertEquals("czzqrhmngqbedyg", model.routeTargets().importIpv4RouteTargets().get(0));
        Assertions.assertEquals("nykdi", model.routeTargets().importIpv6RouteTargets().get(0));
        Assertions.assertEquals("fg", model.routeTargets().exportIpv4RouteTargets().get(0));
        Assertions.assertEquals("srwqrxetfg", model.routeTargets().exportIpv6RouteTargets().get(0));
    }
}
