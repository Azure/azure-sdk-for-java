// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.NetworkPacketBrokerInner;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkPacketBrokersListResult;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class NetworkPacketBrokersListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkPacketBrokersListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"networkFabricId\":\"wo\",\"networkDeviceIds\":[\"eyyjmjj\",\"izxpxhnzlsle\",\"cttgzkjt\",\"qpdwad\"],\"sourceInterfaceIds\":[\"ztldsvczdjiah\"],\"networkTapIds\":[\"mjzucwwme\",\"jqhddwvmqxiyoo\"],\"neighborGroupIds\":[\"ozkbnzxbypfq\",\"gaixwrgrkkd\"],\"provisioningState\":\"Deleting\"},\"location\":\"swqi\",\"tags\":{\"g\":\"pw\",\"d\":\"gicwnxhtfmcqbs\"},\"id\":\"pgchzpgfqum\",\"name\":\"djxh\",\"type\":\"ghgodkynrceq\"},{\"properties\":{\"networkFabricId\":\"v\",\"networkDeviceIds\":[\"dfmmxjdnajuopjy\",\"qmkw\"],\"sourceInterfaceIds\":[\"cwlo\",\"dejkluxxrwzobuz\"],\"networkTapIds\":[\"g\"],\"neighborGroupIds\":[\"dtkwppth\",\"zdprmimrljdpoqfx\",\"emhkftbaewht\"],\"provisioningState\":\"Updating\"},\"location\":\"amfmxtllfl\",\"tags\":{\"amklilirwdv\":\"qcnrrfijhggabqb\"},\"id\":\"fhsdpzouhkt\",\"name\":\"rxqwqnjxrd\",\"type\":\"ddtullygta\"},{\"properties\":{\"networkFabricId\":\"czcxdfw\",\"networkDeviceIds\":[\"yf\",\"lxrljphraspifl\"],\"sourceInterfaceIds\":[\"ixlmdbgic\"],\"networkTapIds\":[\"gs\",\"drjuqbp\",\"tokljmtznpaxw\"],\"neighborGroupIds\":[\"yyqiprcltungbsol\",\"ckmiig\",\"b\",\"uck\"],\"provisioningState\":\"Failed\"},\"location\":\"ksw\",\"tags\":{\"sswoykdnona\":\"qqcqikclsmal\",\"lei\":\"xwmgzrujlqcwnyn\"},\"id\":\"bcbgv\",\"name\":\"btsertoxa\",\"type\":\"hxuvjhxm\"}],\"nextLink\":\"qstjc\"}")
            .toObject(NetworkPacketBrokersListResult.class);
        Assertions.assertEquals("swqi", model.value().get(0).location());
        Assertions.assertEquals("pw", model.value().get(0).tags().get("g"));
        Assertions.assertEquals("wo", model.value().get(0).networkFabricId());
        Assertions.assertEquals("qstjc", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkPacketBrokersListResult model = new NetworkPacketBrokersListResult().withValue(Arrays.asList(
            new NetworkPacketBrokerInner().withLocation("swqi")
                .withTags(mapOf("g", "pw", "d", "gicwnxhtfmcqbs"))
                .withNetworkFabricId("wo"),
            new NetworkPacketBrokerInner().withLocation("amfmxtllfl")
                .withTags(mapOf("amklilirwdv", "qcnrrfijhggabqb"))
                .withNetworkFabricId("v"),
            new NetworkPacketBrokerInner().withLocation("ksw")
                .withTags(mapOf("sswoykdnona", "qqcqikclsmal", "lei", "xwmgzrujlqcwnyn"))
                .withNetworkFabricId("czcxdfw")))
            .withNextLink("qstjc");
        model = BinaryData.fromObject(model).toObject(NetworkPacketBrokersListResult.class);
        Assertions.assertEquals("swqi", model.value().get(0).location());
        Assertions.assertEquals("pw", model.value().get(0).tags().get("g"));
        Assertions.assertEquals("wo", model.value().get(0).networkFabricId());
        Assertions.assertEquals("qstjc", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
