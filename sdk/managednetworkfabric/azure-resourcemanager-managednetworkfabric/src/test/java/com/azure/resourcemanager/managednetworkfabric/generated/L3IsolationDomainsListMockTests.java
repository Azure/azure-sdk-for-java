// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.L3IsolationDomain;
import com.azure.resourcemanager.managednetworkfabric.models.RedistributeConnectedSubnets;
import com.azure.resourcemanager.managednetworkfabric.models.RedistributeStaticRoutes;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class L3IsolationDomainsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"networkFabricId\":\"guzlweoyxfoaf\",\"configurationState\":\"Accepted\",\"provisioningState\":\"Deleting\",\"administrativeState\":\"Disabled\",\"redistributeConnectedSubnets\":\"False\",\"redistributeStaticRoutes\":\"False\",\"aggregateRouteConfiguration\":{\"ipv4Routes\":[{\"prefix\":\"hlbpjuajzq\"},{\"prefix\":\"avmitnwlyhbuj\"},{\"prefix\":\"svdtyydd\"}],\"ipv6Routes\":[{\"prefix\":\"tmabtpgn\"},{\"prefix\":\"tjtnnrjewih\"},{\"prefix\":\"igaahm\"},{\"prefix\":\"fspkdnx\"}]},\"connectedSubnetRoutePolicy\":{\"exportRoutePolicyId\":\"xtert\",\"exportRoutePolicy\":{\"exportIpv4RoutePolicyId\":\"rwscic\",\"exportIpv6RoutePolicyId\":\"dwienv\"}},\"annotation\":\"lzj\"},\"location\":\"kr\",\"tags\":{\"qw\":\"ghaknklt\",\"bmwrvpvdrohul\":\"pvi\",\"nirnygtixk\":\"bkabhvxjuaivx\",\"kphvdlo\":\"yob\"},\"id\":\"xzpqditudcltf\",\"name\":\"ieileemw\",\"type\":\"kehldopjsxvbbwsg\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<L3IsolationDomain> response = manager.l3IsolationDomains().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("kr", response.iterator().next().location());
        Assertions.assertEquals("ghaknklt", response.iterator().next().tags().get("qw"));
        Assertions.assertEquals("guzlweoyxfoaf", response.iterator().next().networkFabricId());
        Assertions.assertEquals(RedistributeConnectedSubnets.FALSE,
            response.iterator().next().redistributeConnectedSubnets());
        Assertions.assertEquals(RedistributeStaticRoutes.FALSE, response.iterator().next().redistributeStaticRoutes());
        Assertions.assertEquals("hlbpjuajzq",
            response.iterator().next().aggregateRouteConfiguration().ipv4Routes().get(0).prefix());
        Assertions.assertEquals("tmabtpgn",
            response.iterator().next().aggregateRouteConfiguration().ipv6Routes().get(0).prefix());
        Assertions.assertEquals("xtert", response.iterator().next().connectedSubnetRoutePolicy().exportRoutePolicyId());
        Assertions.assertEquals("rwscic",
            response.iterator().next().connectedSubnetRoutePolicy().exportRoutePolicy().exportIpv4RoutePolicyId());
        Assertions.assertEquals("dwienv",
            response.iterator().next().connectedSubnetRoutePolicy().exportRoutePolicy().exportIpv6RoutePolicyId());
        Assertions.assertEquals("lzj", response.iterator().next().annotation());
    }
}
