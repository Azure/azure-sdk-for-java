// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.IpExtendedCommunityProperties;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.IpExtendedCommunityRule;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IpExtendedCommunityPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpExtendedCommunityProperties model = BinaryData.fromString(
            "{\"configurationState\":\"Rejected\",\"provisioningState\":\"Canceled\",\"administrativeState\":\"RMA\",\"ipExtendedCommunityRules\":[{\"action\":\"Deny\",\"sequenceNumber\":2275725598738013501,\"routeTargets\":[\"iexhajl\",\"n\",\"hiqfyuttdiy\",\"b\"]}],\"annotation\":\"n\"}")
            .toObject(IpExtendedCommunityProperties.class);
        Assertions.assertEquals("n", model.annotation());
        Assertions.assertEquals(CommunityActionTypes.DENY, model.ipExtendedCommunityRules().get(0).action());
        Assertions.assertEquals(2275725598738013501L, model.ipExtendedCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals("iexhajl", model.ipExtendedCommunityRules().get(0).routeTargets().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpExtendedCommunityProperties model = new IpExtendedCommunityProperties().withAnnotation("n")
            .withIpExtendedCommunityRules(
                Arrays.asList(new IpExtendedCommunityRule().withAction(CommunityActionTypes.DENY)
                    .withSequenceNumber(2275725598738013501L)
                    .withRouteTargets(Arrays.asList("iexhajl", "n", "hiqfyuttdiy", "b"))));
        model = BinaryData.fromObject(model).toObject(IpExtendedCommunityProperties.class);
        Assertions.assertEquals("n", model.annotation());
        Assertions.assertEquals(CommunityActionTypes.DENY, model.ipExtendedCommunityRules().get(0).action());
        Assertions.assertEquals(2275725598738013501L, model.ipExtendedCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals("iexhajl", model.ipExtendedCommunityRules().get(0).routeTargets().get(0));
    }
}
