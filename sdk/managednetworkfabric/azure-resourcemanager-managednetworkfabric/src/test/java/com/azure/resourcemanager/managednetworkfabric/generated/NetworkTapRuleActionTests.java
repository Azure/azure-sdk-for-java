// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.BooleanEnumProperty;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleAction;
import com.azure.resourcemanager.managednetworkfabric.models.TapRuleActionType;
import org.junit.jupiter.api.Assertions;

public final class NetworkTapRuleActionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkTapRuleAction model = BinaryData.fromString(
            "{\"type\":\"Mirror\",\"truncate\":\"hczygpmg\",\"isTimestampEnabled\":\"True\",\"destinationId\":\"lojhhyl\",\"matchConfigurationName\":\"evfiyymotu\"}")
            .toObject(NetworkTapRuleAction.class);
        Assertions.assertEquals(TapRuleActionType.MIRROR, model.type());
        Assertions.assertEquals("hczygpmg", model.truncate());
        Assertions.assertEquals(BooleanEnumProperty.TRUE, model.isTimestampEnabled());
        Assertions.assertEquals("lojhhyl", model.destinationId());
        Assertions.assertEquals("evfiyymotu", model.matchConfigurationName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkTapRuleAction model = new NetworkTapRuleAction().withType(TapRuleActionType.MIRROR)
            .withTruncate("hczygpmg")
            .withIsTimestampEnabled(BooleanEnumProperty.TRUE)
            .withDestinationId("lojhhyl")
            .withMatchConfigurationName("evfiyymotu");
        model = BinaryData.fromObject(model).toObject(NetworkTapRuleAction.class);
        Assertions.assertEquals(TapRuleActionType.MIRROR, model.type());
        Assertions.assertEquals("hczygpmg", model.truncate());
        Assertions.assertEquals(BooleanEnumProperty.TRUE, model.isTimestampEnabled());
        Assertions.assertEquals("lojhhyl", model.destinationId());
        Assertions.assertEquals("evfiyymotu", model.matchConfigurationName());
    }
}
