// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.L3IsolationDomain;
import com.azure.resourcemanager.managednetworkfabric.models.RedistributeConnectedSubnets;
import com.azure.resourcemanager.managednetworkfabric.models.RedistributeStaticRoutes;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class L3IsolationDomainsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"networkFabricId\":\"t\",\"configurationState\":\"ErrorProvisioning\",\"provisioningState\":\"Failed\",\"administrativeState\":\"MAT\",\"redistributeConnectedSubnets\":\"True\",\"redistributeStaticRoutes\":\"True\",\"aggregateRouteConfiguration\":{\"ipv4Routes\":[{\"prefix\":\"tnlrlcmwbejyw\"}],\"ipv6Routes\":[{\"prefix\":\"nhw\"},{\"prefix\":\"krmqevrhhafqf\"},{\"prefix\":\"dfyziruqvgnjxi\"}]},\"connectedSubnetRoutePolicy\":{\"exportRoutePolicyId\":\"yjmzbmxgikyl\",\"exportRoutePolicy\":{\"exportIpv4RoutePolicyId\":\"gmbrdcvolo\",\"exportIpv6RoutePolicyId\":\"vqcbnryh\"}},\"annotation\":\"glvnbenkpsvokky\"},\"location\":\"kxvcptfgfbhnkxas\",\"tags\":{\"a\":\"fe\",\"rdxpcpautfzptr\":\"h\",\"dxcyuwen\":\"dzytrtffvp\"},\"id\":\"qvp\",\"name\":\"awvoqatdjkal\",\"type\":\"pmecsmxfzynf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        L3IsolationDomain response = manager.l3IsolationDomains()
            .getByResourceGroupWithResponse("hn", "z", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("kxvcptfgfbhnkxas", response.location());
        Assertions.assertEquals("fe", response.tags().get("a"));
        Assertions.assertEquals("t", response.networkFabricId());
        Assertions.assertEquals(RedistributeConnectedSubnets.TRUE, response.redistributeConnectedSubnets());
        Assertions.assertEquals(RedistributeStaticRoutes.TRUE, response.redistributeStaticRoutes());
        Assertions.assertEquals("tnlrlcmwbejyw", response.aggregateRouteConfiguration().ipv4Routes().get(0).prefix());
        Assertions.assertEquals("nhw", response.aggregateRouteConfiguration().ipv6Routes().get(0).prefix());
        Assertions.assertEquals("yjmzbmxgikyl", response.connectedSubnetRoutePolicy().exportRoutePolicyId());
        Assertions.assertEquals("gmbrdcvolo",
            response.connectedSubnetRoutePolicy().exportRoutePolicy().exportIpv4RoutePolicyId());
        Assertions.assertEquals("vqcbnryh",
            response.connectedSubnetRoutePolicy().exportRoutePolicy().exportIpv6RoutePolicyId());
        Assertions.assertEquals("glvnbenkpsvokky", response.annotation());
    }
}
