// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.L2IsolationDomain;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class L2IsolationDomainsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"networkFabricId\":\"szhh\",\"vlanId\":1061055925,\"mtu\":2093232505,\"configurationState\":\"DeferredControl\",\"provisioningState\":\"Failed\",\"administrativeState\":\"RMA\",\"annotation\":\"lffqgdodn\"},\"location\":\"yipgkmjt\",\"tags\":{\"tgdrfzj\":\"mdzesime\",\"gvd\":\"flz\",\"rzbidaebez\":\"vabxiefc\"},\"id\":\"icew\",\"name\":\"fajw\",\"type\":\"ylciobb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<L2IsolationDomain> response
            = manager.l2IsolationDomains().listByResourceGroup("o", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("yipgkmjt", response.iterator().next().location());
        Assertions.assertEquals("mdzesime", response.iterator().next().tags().get("tgdrfzj"));
        Assertions.assertEquals("szhh", response.iterator().next().networkFabricId());
        Assertions.assertEquals(1061055925, response.iterator().next().vlanId());
        Assertions.assertEquals(2093232505, response.iterator().next().mtu());
        Assertions.assertEquals("lffqgdodn", response.iterator().next().annotation());
    }
}
