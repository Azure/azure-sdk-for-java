// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.AccessControlListPortCondition;
import com.azure.resourcemanager.managednetworkfabric.models.Layer4Protocol;
import com.azure.resourcemanager.managednetworkfabric.models.PortType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AccessControlListPortConditionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AccessControlListPortCondition model = BinaryData.fromString(
            "{\"flags\":[\"oljxkcgx\"],\"portType\":\"DestinationPort\",\"layer4Protocol\":\"UDP\",\"ports\":[\"gcvizqzdwlvwlyou\",\"fgfb\"],\"portGroupNames\":[\"bdyhgkfminsgowz\",\"ttsttktlahbqact\"]}")
            .toObject(AccessControlListPortCondition.class);
        Assertions.assertEquals(PortType.DESTINATION_PORT, model.portType());
        Assertions.assertEquals(Layer4Protocol.UDP, model.layer4Protocol());
        Assertions.assertEquals("gcvizqzdwlvwlyou", model.ports().get(0));
        Assertions.assertEquals("bdyhgkfminsgowz", model.portGroupNames().get(0));
        Assertions.assertEquals("oljxkcgx", model.flags().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AccessControlListPortCondition model
            = new AccessControlListPortCondition().withPortType(PortType.DESTINATION_PORT)
                .withLayer4Protocol(Layer4Protocol.UDP)
                .withPorts(Arrays.asList("gcvizqzdwlvwlyou", "fgfb"))
                .withPortGroupNames(Arrays.asList("bdyhgkfminsgowz", "ttsttktlahbqact"))
                .withFlags(Arrays.asList("oljxkcgx"));
        model = BinaryData.fromObject(model).toObject(AccessControlListPortCondition.class);
        Assertions.assertEquals(PortType.DESTINATION_PORT, model.portType());
        Assertions.assertEquals(Layer4Protocol.UDP, model.layer4Protocol());
        Assertions.assertEquals("gcvizqzdwlvwlyou", model.ports().get(0));
        Assertions.assertEquals("bdyhgkfminsgowz", model.portGroupNames().get(0));
        Assertions.assertEquals("oljxkcgx", model.flags().get(0));
    }
}
