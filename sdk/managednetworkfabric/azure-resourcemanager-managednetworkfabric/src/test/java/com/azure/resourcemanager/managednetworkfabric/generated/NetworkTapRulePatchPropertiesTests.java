// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.NetworkTapRulePatchProperties;
import com.azure.resourcemanager.managednetworkfabric.models.BooleanEnumProperty;
import com.azure.resourcemanager.managednetworkfabric.models.CommonDynamicMatchConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.ConfigurationType;
import com.azure.resourcemanager.managednetworkfabric.models.EncapsulationType;
import com.azure.resourcemanager.managednetworkfabric.models.IpAddressType;
import com.azure.resourcemanager.managednetworkfabric.models.IpGroupProperties;
import com.azure.resourcemanager.managednetworkfabric.models.IpMatchCondition;
import com.azure.resourcemanager.managednetworkfabric.models.Layer4Protocol;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleAction;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.PortCondition;
import com.azure.resourcemanager.managednetworkfabric.models.PortGroupProperties;
import com.azure.resourcemanager.managednetworkfabric.models.PortType;
import com.azure.resourcemanager.managednetworkfabric.models.PrefixType;
import com.azure.resourcemanager.managednetworkfabric.models.SourceDestinationType;
import com.azure.resourcemanager.managednetworkfabric.models.TapRuleActionType;
import com.azure.resourcemanager.managednetworkfabric.models.VlanGroupProperties;
import com.azure.resourcemanager.managednetworkfabric.models.VlanMatchCondition;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkTapRulePatchPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkTapRulePatchProperties model = BinaryData.fromString(
            "{\"configurationType\":\"File\",\"tapRulesUrl\":\"rmhnmizhvpr\",\"matchConfigurations\":[{\"matchConfigurationName\":\"cubleh\",\"sequenceNumber\":1571375428500855687,\"ipAddressType\":\"IPv6\",\"matchConditions\":[{\"encapsulationType\":\"None\",\"portCondition\":{\"portType\":\"SourcePort\",\"layer4Protocol\":\"UDP\",\"ports\":[\"zigh\"],\"portGroupNames\":[\"b\",\"dvucfvvra\"]},\"protocolTypes\":[\"urdeewlsuxp\",\"bwkdwjyjiznioroo\",\"m\"],\"vlanMatchCondition\":{\"vlans\":[\"pmcreihu\",\"trnighm\",\"nuwqxungro\",\"gwfmsxjwdylwxm\"],\"innerVlans\":[\"ow\"],\"vlanGroupNames\":[\"eerclbltbhpw\",\"chy\"]},\"ipCondition\":{\"type\":\"DestinationIP\",\"prefixType\":\"LongestPrefix\",\"ipPrefixValues\":[\"r\",\"vdifkiikg\"],\"ipGroupNames\":[\"ccwmecbtxsytrtex\",\"gwmrqjywiwhvy\"]}},{\"encapsulationType\":\"GTPv1\",\"portCondition\":{\"portType\":\"SourcePort\",\"layer4Protocol\":\"UDP\",\"ports\":[\"loqkajwjuri\",\"rsbcl\"],\"portGroupNames\":[\"hzcknjxiz\",\"axdy\",\"zkz\"]},\"protocolTypes\":[\"e\",\"wacyyjmlxppdndzk\"],\"vlanMatchCondition\":{\"vlans\":[\"iiuiibf\"],\"innerVlans\":[\"ytqdcizeqqfop\",\"nopm\",\"tdsfh\",\"xqlyoazyfbkmvl\"],\"vlanGroupNames\":[\"x\",\"jzsvmaigb\",\"kvhyejth\",\"eecbpergwlc\"]},\"ipCondition\":{\"type\":\"DestinationIP\",\"prefixType\":\"Prefix\",\"ipPrefixValues\":[\"sokknpugzjwdizc\",\"jixiujzkc\",\"exgkrsw\"],\"ipGroupNames\":[\"kkbxktxbbwlmnw\",\"okn\",\"uqddlggbqaolgzu\"]}},{\"encapsulationType\":\"None\",\"portCondition\":{\"portType\":\"DestinationPort\",\"layer4Protocol\":\"TCP\",\"ports\":[\"cmfnsffet\",\"kmixwewzls\",\"gsmepnqvxgvoh\",\"bthhxmoevvude\"],\"portGroupNames\":[\"hgannvwxqhpjhub\",\"hxvzgayb\",\"rhhogalgxnw\",\"mzvztauebpa\"]},\"protocolTypes\":[\"fcssanybzzghvd\"],\"vlanMatchCondition\":{\"vlans\":[\"yj\",\"v\",\"dhlywkho\"],\"innerVlans\":[\"unzxezriw\",\"oewapcqksaaapxjh\",\"itibenwsdf\"],\"vlanGroupNames\":[\"aahlfr\"]},\"ipCondition\":{\"type\":\"SourceIP\",\"prefixType\":\"Prefix\",\"ipPrefixValues\":[\"pireszyaqgomlbmf\",\"geokfekcjj\"],\"ipGroupNames\":[\"yeahhhutpulnrfcq\",\"fmcihpinowr\",\"rjpxptch\"]}}],\"actions\":[{\"type\":\"Drop\",\"truncate\":\"dqimlgbbfjm\",\"isTimestampEnabled\":\"False\",\"destinationId\":\"xlhmpmhef\",\"matchConfigurationName\":\"aphqeofytl\"},{\"type\":\"Goto\",\"truncate\":\"wmcm\",\"isTimestampEnabled\":\"False\",\"destinationId\":\"uanccq\",\"matchConfigurationName\":\"fdgfqpmquxpj\"},{\"type\":\"Log\",\"truncate\":\"arad\",\"isTimestampEnabled\":\"False\",\"destinationId\":\"mufzgugrbl\",\"matchConfigurationName\":\"l\"},{\"type\":\"Mirror\",\"truncate\":\"nqebaotbptgc\",\"isTimestampEnabled\":\"False\",\"destinationId\":\"xxrwqfmdqecvtamq\",\"matchConfigurationName\":\"mnobfeww\"}]},{\"matchConfigurationName\":\"ibxovu\",\"sequenceNumber\":7832491699982446512,\"ipAddressType\":\"IPv4\",\"matchConditions\":[{\"encapsulationType\":\"None\",\"portCondition\":{\"portType\":\"DestinationPort\",\"layer4Protocol\":\"UDP\",\"ports\":[\"cvtqnzjcyqqzhemb\",\"bwna\",\"ba\"],\"portGroupNames\":[\"sjdle\"]},\"protocolTypes\":[\"mvvlooubs\",\"xipjeopskgocjom\",\"upfazusj\",\"dhuslgdwz\"],\"vlanMatchCondition\":{\"vlans\":[\"yxajc\",\"grcavqc\"],\"innerVlans\":[\"oqzkmqcwwsjnki\"],\"vlanGroupNames\":[\"pbntqqwwgf\",\"sqxile\"]},\"ipCondition\":{\"type\":\"SourceIP\",\"prefixType\":\"Prefix\",\"ipPrefixValues\":[\"ne\",\"uqynttwk\"],\"ipGroupNames\":[\"jksb\",\"yogjmqjh\"]}},{\"encapsulationType\":\"None\",\"portCondition\":{\"portType\":\"DestinationPort\",\"layer4Protocol\":\"TCP\",\"ports\":[\"vjbssfcriqxz\",\"xtdlxwmvcdkucp\"],\"portGroupNames\":[\"afr\",\"rgorogeuvmkrspn\"]},\"protocolTypes\":[\"semlzofrsnq\",\"ljpetexutikelpmw\"],\"vlanMatchCondition\":{\"vlans\":[\"bwudhvosgjzs\"],\"innerVlans\":[\"zalivdfwgq\",\"hewcffrx\",\"gezkhzpriqisse\"],\"vlanGroupNames\":[\"rusyzai\",\"npsjnpc\",\"plujyduonb\"]},\"ipCondition\":{\"type\":\"DestinationIP\",\"prefixType\":\"LongestPrefix\",\"ipPrefixValues\":[\"vvm\",\"bkxjar\",\"bbdddwokqx\"],\"ipGroupNames\":[\"xqkdyqjvzvcgrds\"]}},{\"encapsulationType\":\"GTPv1\",\"portCondition\":{\"portType\":\"DestinationPort\",\"layer4Protocol\":\"TCP\",\"ports\":[\"uhvz\",\"lbrouszxac\",\"wukokgoojj\"],\"portGroupNames\":[\"tubcmu\",\"h\",\"btzvxxv\"]},\"protocolTypes\":[\"uufkrfnkcnihkswx\",\"furqm\"],\"vlanMatchCondition\":{\"vlans\":[\"pntumotahb\",\"svnkxmyt\",\"u\"],\"innerVlans\":[\"rlhxgcqmyrhkv\",\"zzmiemqyft\"],\"vlanGroupNames\":[\"oswgfqvj\",\"ghpakbqyhlsorn\",\"b\"]},\"ipCondition\":{\"type\":\"DestinationIP\",\"prefixType\":\"Prefix\",\"ipPrefixValues\":[\"jm\"],\"ipGroupNames\":[\"yevztnjaw\",\"hul\",\"mmqmbwppx\",\"rxbkitzmnhitax\"]}}],\"actions\":[{\"type\":\"Count\",\"truncate\":\"lxsgcemegdz\",\"isTimestampEnabled\":\"True\",\"destinationId\":\"jubvfjyzuf\",\"matchConfigurationName\":\"ifnivlut\"},{\"type\":\"Count\",\"truncate\":\"acxauh\",\"isTimestampEnabled\":\"False\",\"destinationId\":\"xhklsqxt\",\"matchConfigurationName\":\"yygktsrjyxxoxwf\"}]},{\"matchConfigurationName\":\"kvecnxfx\",\"sequenceNumber\":6127027006710190293,\"ipAddressType\":\"IPv4\",\"matchConditions\":[{\"encapsulationType\":\"GTPv1\",\"portCondition\":{\"portType\":\"DestinationPort\",\"layer4Protocol\":\"UDP\",\"ports\":[\"uwmsu\",\"ustihtgrafjajvky\",\"mmjczvog\",\"derjennmk\"],\"portGroupNames\":[\"uwqdwxhhlbmyphf\"]},\"protocolTypes\":[\"pdhewokyqs\",\"kx\",\"sy\"],\"vlanMatchCondition\":{\"vlans\":[\"qbtodjfy\",\"bvkvwzdmvdd\",\"wcrugyozzz\",\"wnjdvvlrh\"],\"innerVlans\":[\"kkvxu\",\"dqzbvbpsuvqhx\",\"ozf\"],\"vlanGroupNames\":[\"wbkurklpiigf\"]},\"ipCondition\":{\"type\":\"DestinationIP\",\"prefixType\":\"LongestPrefix\",\"ipPrefixValues\":[\"pjclzjwaqdzqyd\",\"wuwxyllz\",\"zevtzqwczoc\"],\"ipGroupNames\":[\"ekmuynfpkyvnhiy\"]}},{\"encapsulationType\":\"GTPv1\",\"portCondition\":{\"portType\":\"SourcePort\",\"layer4Protocol\":\"UDP\",\"ports\":[\"raqkiwlw\"],\"portGroupNames\":[\"la\",\"wmwqoguflte\",\"t\"]},\"protocolTypes\":[\"ef\",\"jxnjtqbgy\"],\"vlanMatchCondition\":{\"vlans\":[\"hnvxwtd\",\"tcbjdbtqy\",\"kxunsaujqgbb\",\"vovoa\"],\"innerVlans\":[\"js\",\"bc\"],\"vlanGroupNames\":[\"ygsa\",\"d\",\"d\",\"e\"]},\"ipCondition\":{\"type\":\"DestinationIP\",\"prefixType\":\"Prefix\",\"ipPrefixValues\":[\"kzvzuatqhgzuyxtr\",\"fdbqskgqjbvitp\"],\"ipGroupNames\":[\"sffavdhpiwrmuwk\"]}},{\"encapsulationType\":\"GTPv1\",\"portCondition\":{\"portType\":\"SourcePort\",\"layer4Protocol\":\"TCP\",\"ports\":[\"bwxyldqtmggcpd\",\"megaj\",\"zctwymzsk\",\"qkkge\"],\"portGroupNames\":[\"phgliupqscoobk\",\"lcaxsqcomjiqi\"]},\"protocolTypes\":[\"evxxkdevpximzii\",\"meqmduvtvodqxxpq\",\"ml\",\"ibtblmcvrjazno\"],\"vlanMatchCondition\":{\"vlans\":[\"qvpbq\",\"dqk\",\"sb\",\"sbbmitaftazgcx\"],\"innerVlans\":[\"lcqufylamxow\"],\"vlanGroupNames\":[\"joyutehlkarvtipq\",\"ksxiknsgofunswh\",\"cekggvmfnnb\",\"xn\"]},\"ipCondition\":{\"type\":\"DestinationIP\",\"prefixType\":\"Prefix\",\"ipPrefixValues\":[\"etxtpw\",\"vgifws\",\"njzijaciwm\"],\"ipGroupNames\":[\"tqdonbzzs\",\"fzyviiwsua\"]}}],\"actions\":[{\"type\":\"Mirror\",\"truncate\":\"uifkzqqhb\",\"isTimestampEnabled\":\"False\",\"destinationId\":\"ilm\",\"matchConfigurationName\":\"beoiip\"},{\"type\":\"Goto\",\"truncate\":\"vyvuoikdlpsx\",\"isTimestampEnabled\":\"True\",\"destinationId\":\"fwimqnryclocfmv\",\"matchConfigurationName\":\"xvjeleifqhdxtww\"},{\"type\":\"Drop\",\"truncate\":\"ybpaevykbyjecrq\",\"isTimestampEnabled\":\"True\",\"destinationId\":\"kchsfoul\",\"matchConfigurationName\":\"rcxuibsdqbdyblp\"},{\"type\":\"Mirror\",\"truncate\":\"m\",\"isTimestampEnabled\":\"False\",\"destinationId\":\"eoqhbjql\",\"matchConfigurationName\":\"bleru\"}]}],\"dynamicMatchConfigurations\":[{\"ipGroups\":[{\"name\":\"hjucihbymjj\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"rxvjeazrahelhb\"]}],\"vlanGroups\":[{\"name\":\"ieqamcthtpqgf\",\"vlans\":[\"sizkdiuvflg\",\"hcw\"]},{\"name\":\"wahcrxofgrutv\",\"vlans\":[\"cxzivxpmhz\"]},{\"name\":\"hhkvnnjdtujqz\",\"vlans\":[\"jvpmxnht\",\"zstqlf\"]}],\"portGroups\":[{\"name\":\"wvtlgxy\",\"ports\":[\"wequfl\",\"yyopoaytwwgw\",\"ubotbvufrkw\",\"iemimdtn\"]},{\"name\":\"wew\",\"ports\":[\"reeedddrftfquul\",\"clhsiigeeuw\"]}]},{\"ipGroups\":[{\"name\":\"yxfedqnetd\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"oqgvbzpggp\",\"meyobqajejirvavr\",\"kgpogplbjuvlnh\"]},{\"name\":\"rnjhinaeges\",\"ipAddressType\":\"IPv6\",\"ipPrefixes\":[\"qmjmoplukfyk\"]}],\"vlanGroups\":[{\"name\":\"ovadkrmjx\",\"vlans\":[\"pdkesjqbzkqmx\",\"poriwbwggijtspzj\",\"rrh\",\"kwsbzrhdugquh\"]},{\"name\":\"gzfrunjfhrjhi\",\"vlans\":[\"ause\",\"nczk\",\"ihvtuwyjsqw\"]},{\"name\":\"zoszjg\",\"vlans\":[\"kfnyskwwunqhc\",\"avoj\",\"slhip\"]}],\"portGroups\":[{\"name\":\"bljp\",\"ports\":[\"rvchyluqalp\"]},{\"name\":\"fjjfxtizt\",\"ports\":[\"tahhhsa\",\"xxsri\",\"rcwbaae\",\"yyefmxwoqotiiqb\"]},{\"name\":\"asrvrmtist\",\"ports\":[\"jhorlxkpy\",\"k\",\"nnycntrqxxwtd\"]}]},{\"ipGroups\":[{\"name\":\"tsuhqhtoxtd\",\"ipAddressType\":\"IPv6\",\"ipPrefixes\":[\"x\",\"qmzxsyaks\",\"npaami\"]},{\"name\":\"bgh\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"bgchcgsfzhbjkiy\",\"qbjsdjpgxeysgw\",\"cfferznzc\"]},{\"name\":\"voveomkhfeqcoop\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"imgckycjpeebznbz\",\"xsuloutnpb\"]}],\"vlanGroups\":[{\"name\":\"qo\",\"vlans\":[\"ncdmwkh\",\"pfhsldqdza\",\"iunyevdyzdsytc\"]},{\"name\":\"swhcamwuy\",\"vlans\":[\"kcgsfcmvh\",\"drp\",\"atvyrkljqkqws\",\"jtvjkowggxawwd\"]}],\"portGroups\":[{\"name\":\"nkteiidlbovwbclp\",\"ports\":[\"gani\",\"kjcnerek\"]}]}],\"annotation\":\"uls\"}")
            .toObject(NetworkTapRulePatchProperties.class);
        Assertions.assertEquals("uls", model.annotation());
        Assertions.assertEquals(ConfigurationType.FILE, model.configurationType());
        Assertions.assertEquals("rmhnmizhvpr", model.tapRulesUrl());
        Assertions.assertEquals("cubleh", model.matchConfigurations().get(0).matchConfigurationName());
        Assertions.assertEquals(1571375428500855687L, model.matchConfigurations().get(0).sequenceNumber());
        Assertions.assertEquals(IpAddressType.IPV6, model.matchConfigurations().get(0).ipAddressType());
        Assertions.assertEquals("urdeewlsuxp",
            model.matchConfigurations().get(0).matchConditions().get(0).protocolTypes().get(0));
        Assertions.assertEquals("pmcreihu",
            model.matchConfigurations().get(0).matchConditions().get(0).vlanMatchCondition().vlans().get(0));
        Assertions.assertEquals("ow",
            model.matchConfigurations().get(0).matchConditions().get(0).vlanMatchCondition().innerVlans().get(0));
        Assertions.assertEquals("eerclbltbhpw",
            model.matchConfigurations().get(0).matchConditions().get(0).vlanMatchCondition().vlanGroupNames().get(0));
        Assertions.assertEquals(SourceDestinationType.DESTINATION_IP,
            model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().type());
        Assertions.assertEquals(PrefixType.LONGEST_PREFIX,
            model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().prefixType());
        Assertions.assertEquals("r",
            model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().ipPrefixValues().get(0));
        Assertions.assertEquals("ccwmecbtxsytrtex",
            model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().ipGroupNames().get(0));
        Assertions.assertEquals(EncapsulationType.NONE,
            model.matchConfigurations().get(0).matchConditions().get(0).encapsulationType());
        Assertions.assertEquals(PortType.SOURCE_PORT,
            model.matchConfigurations().get(0).matchConditions().get(0).portCondition().portType());
        Assertions.assertEquals(Layer4Protocol.UDP,
            model.matchConfigurations().get(0).matchConditions().get(0).portCondition().layer4Protocol());
        Assertions.assertEquals("zigh",
            model.matchConfigurations().get(0).matchConditions().get(0).portCondition().ports().get(0));
        Assertions.assertEquals("b",
            model.matchConfigurations().get(0).matchConditions().get(0).portCondition().portGroupNames().get(0));
        Assertions.assertEquals(TapRuleActionType.DROP, model.matchConfigurations().get(0).actions().get(0).type());
        Assertions.assertEquals("dqimlgbbfjm", model.matchConfigurations().get(0).actions().get(0).truncate());
        Assertions.assertEquals(BooleanEnumProperty.FALSE,
            model.matchConfigurations().get(0).actions().get(0).isTimestampEnabled());
        Assertions.assertEquals("xlhmpmhef", model.matchConfigurations().get(0).actions().get(0).destinationId());
        Assertions.assertEquals("aphqeofytl",
            model.matchConfigurations().get(0).actions().get(0).matchConfigurationName());
        Assertions.assertEquals("hjucihbymjj", model.dynamicMatchConfigurations().get(0).ipGroups().get(0).name());
        Assertions.assertEquals(IpAddressType.IPV4,
            model.dynamicMatchConfigurations().get(0).ipGroups().get(0).ipAddressType());
        Assertions.assertEquals("rxvjeazrahelhb",
            model.dynamicMatchConfigurations().get(0).ipGroups().get(0).ipPrefixes().get(0));
        Assertions.assertEquals("ieqamcthtpqgf", model.dynamicMatchConfigurations().get(0).vlanGroups().get(0).name());
        Assertions.assertEquals("sizkdiuvflg",
            model.dynamicMatchConfigurations().get(0).vlanGroups().get(0).vlans().get(0));
        Assertions.assertEquals("wvtlgxy", model.dynamicMatchConfigurations().get(0).portGroups().get(0).name());
        Assertions.assertEquals("wequfl", model.dynamicMatchConfigurations().get(0).portGroups().get(0).ports().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkTapRulePatchProperties model
            = new NetworkTapRulePatchProperties().withAnnotation("uls")
                .withConfigurationType(ConfigurationType.FILE)
                .withTapRulesUrl("rmhnmizhvpr")
                .withMatchConfigurations(
                    Arrays
                        .asList(
                            new NetworkTapRuleMatchConfiguration().withMatchConfigurationName("cubleh")
                                .withSequenceNumber(1571375428500855687L)
                                .withIpAddressType(IpAddressType.IPV6)
                                .withMatchConditions(
                                    Arrays.asList(
                                        new NetworkTapRuleMatchCondition()
                                            .withProtocolTypes(Arrays.asList("urdeewlsuxp", "bwkdwjyjiznioroo", "m"))
                                            .withVlanMatchCondition(new VlanMatchCondition()
                                                .withVlans(Arrays.asList("pmcreihu", "trnighm", "nuwqxungro",
                                                    "gwfmsxjwdylwxm"))
                                                .withInnerVlans(Arrays.asList("ow"))
                                                .withVlanGroupNames(Arrays.asList("eerclbltbhpw", "chy")))
                                            .withIpCondition(new IpMatchCondition()
                                                .withType(SourceDestinationType.DESTINATION_IP)
                                                .withPrefixType(PrefixType.LONGEST_PREFIX)
                                                .withIpPrefixValues(Arrays.asList("r", "vdifkiikg"))
                                                .withIpGroupNames(Arrays.asList("ccwmecbtxsytrtex", "gwmrqjywiwhvy")))
                                            .withEncapsulationType(EncapsulationType.NONE)
                                            .withPortCondition(new PortCondition()
                                                .withPortType(PortType.SOURCE_PORT)
                                                .withLayer4Protocol(Layer4Protocol.UDP)
                                                .withPorts(Arrays.asList("zigh"))
                                                .withPortGroupNames(Arrays.asList("b", "dvucfvvra"))),
                                        new NetworkTapRuleMatchCondition()
                                            .withProtocolTypes(Arrays.asList("e", "wacyyjmlxppdndzk"))
                                            .withVlanMatchCondition(new VlanMatchCondition()
                                                .withVlans(Arrays.asList("iiuiibf"))
                                                .withInnerVlans(
                                                    Arrays.asList("ytqdcizeqqfop", "nopm", "tdsfh", "xqlyoazyfbkmvl"))
                                                .withVlanGroupNames(
                                                    Arrays.asList("x", "jzsvmaigb", "kvhyejth", "eecbpergwlc")))
                                            .withIpCondition(new IpMatchCondition()
                                                .withType(SourceDestinationType.DESTINATION_IP)
                                                .withPrefixType(PrefixType.PREFIX)
                                                .withIpPrefixValues(
                                                    Arrays.asList("sokknpugzjwdizc", "jixiujzkc", "exgkrsw"))
                                                .withIpGroupNames(
                                                    Arrays.asList("kkbxktxbbwlmnw", "okn", "uqddlggbqaolgzu")))
                                            .withEncapsulationType(EncapsulationType.GTPV1)
                                            .withPortCondition(new PortCondition()
                                                .withPortType(PortType.SOURCE_PORT)
                                                .withLayer4Protocol(Layer4Protocol.UDP)
                                                .withPorts(Arrays.asList("loqkajwjuri", "rsbcl"))
                                                .withPortGroupNames(Arrays.asList("hzcknjxiz", "axdy", "zkz"))),
                                        new NetworkTapRuleMatchCondition()
                                            .withProtocolTypes(Arrays.asList("fcssanybzzghvd"))
                                            .withVlanMatchCondition(
                                                new VlanMatchCondition().withVlans(Arrays.asList("yj", "v", "dhlywkho"))
                                                    .withInnerVlans(
                                                        Arrays.asList("unzxezriw", "oewapcqksaaapxjh", "itibenwsdf"))
                                                    .withVlanGroupNames(Arrays.asList("aahlfr")))
                                            .withIpCondition(
                                                new IpMatchCondition().withType(SourceDestinationType.SOURCE_IP)
                                                    .withPrefixType(PrefixType.PREFIX)
                                                    .withIpPrefixValues(Arrays.asList("pireszyaqgomlbmf", "geokfekcjj"))
                                                    .withIpGroupNames(
                                                        Arrays.asList("yeahhhutpulnrfcq", "fmcihpinowr", "rjpxptch")))
                                            .withEncapsulationType(EncapsulationType.NONE)
                                            .withPortCondition(
                                                new PortCondition().withPortType(PortType.DESTINATION_PORT)
                                                    .withLayer4Protocol(Layer4Protocol.TCP)
                                                    .withPorts(Arrays.asList("cmfnsffet", "kmixwewzls", "gsmepnqvxgvoh",
                                                        "bthhxmoevvude"))
                                                    .withPortGroupNames(Arrays.asList("hgannvwxqhpjhub", "hxvzgayb",
                                                        "rhhogalgxnw", "mzvztauebpa")))))
                                .withActions(Arrays.asList(new NetworkTapRuleAction()
                                    .withType(TapRuleActionType.DROP)
                                    .withTruncate("dqimlgbbfjm")
                                    .withIsTimestampEnabled(BooleanEnumProperty.FALSE)
                                    .withDestinationId("xlhmpmhef")
                                    .withMatchConfigurationName("aphqeofytl"),
                                    new NetworkTapRuleAction().withType(TapRuleActionType.GOTO)
                                        .withTruncate("wmcm")
                                        .withIsTimestampEnabled(BooleanEnumProperty.FALSE)
                                        .withDestinationId("uanccq")
                                        .withMatchConfigurationName("fdgfqpmquxpj"),
                                    new NetworkTapRuleAction().withType(TapRuleActionType.LOG)
                                        .withTruncate("arad")
                                        .withIsTimestampEnabled(BooleanEnumProperty.FALSE)
                                        .withDestinationId("mufzgugrbl")
                                        .withMatchConfigurationName("l"),
                                    new NetworkTapRuleAction()
                                        .withType(TapRuleActionType.MIRROR)
                                        .withTruncate("nqebaotbptgc")
                                        .withIsTimestampEnabled(BooleanEnumProperty.FALSE)
                                        .withDestinationId("xxrwqfmdqecvtamq")
                                        .withMatchConfigurationName("mnobfeww"))),
                            new NetworkTapRuleMatchConfiguration().withMatchConfigurationName("ibxovu")
                                .withSequenceNumber(7832491699982446512L)
                                .withIpAddressType(IpAddressType.IPV4)
                                .withMatchConditions(
                                    Arrays
                                        .asList(
                                            new NetworkTapRuleMatchCondition()
                                                .withProtocolTypes(Arrays.asList("mvvlooubs", "xipjeopskgocjom",
                                                    "upfazusj", "dhuslgdwz"))
                                                .withVlanMatchCondition(new VlanMatchCondition()
                                                    .withVlans(Arrays.asList("yxajc", "grcavqc"))
                                                    .withInnerVlans(Arrays.asList("oqzkmqcwwsjnki"))
                                                    .withVlanGroupNames(Arrays.asList("pbntqqwwgf", "sqxile")))
                                                .withIpCondition(new IpMatchCondition()
                                                    .withType(SourceDestinationType.SOURCE_IP)
                                                    .withPrefixType(PrefixType.PREFIX)
                                                    .withIpPrefixValues(Arrays.asList("ne", "uqynttwk"))
                                                    .withIpGroupNames(Arrays.asList("jksb", "yogjmqjh")))
                                                .withEncapsulationType(EncapsulationType.NONE)
                                                .withPortCondition(new PortCondition()
                                                    .withPortType(PortType.DESTINATION_PORT)
                                                    .withLayer4Protocol(Layer4Protocol.UDP)
                                                    .withPorts(Arrays.asList("cvtqnzjcyqqzhemb", "bwna", "ba"))
                                                    .withPortGroupNames(Arrays.asList("sjdle"))),
                                            new NetworkTapRuleMatchCondition()
                                                .withProtocolTypes(Arrays.asList("semlzofrsnq", "ljpetexutikelpmw"))
                                                .withVlanMatchCondition(
                                                    new VlanMatchCondition().withVlans(Arrays.asList("bwudhvosgjzs"))
                                                        .withInnerVlans(
                                                            Arrays.asList("zalivdfwgq", "hewcffrx", "gezkhzpriqisse"))
                                                        .withVlanGroupNames(
                                                            Arrays.asList("rusyzai", "npsjnpc", "plujyduonb")))
                                                .withIpCondition(new IpMatchCondition()
                                                    .withType(SourceDestinationType.DESTINATION_IP)
                                                    .withPrefixType(PrefixType.LONGEST_PREFIX)
                                                    .withIpPrefixValues(Arrays.asList("vvm", "bkxjar", "bbdddwokqx"))
                                                    .withIpGroupNames(Arrays.asList("xqkdyqjvzvcgrds")))
                                                .withEncapsulationType(EncapsulationType.NONE)
                                                .withPortCondition(new PortCondition()
                                                    .withPortType(PortType.DESTINATION_PORT)
                                                    .withLayer4Protocol(Layer4Protocol.TCP)
                                                    .withPorts(Arrays.asList("vjbssfcriqxz", "xtdlxwmvcdkucp"))
                                                    .withPortGroupNames(Arrays.asList("afr", "rgorogeuvmkrspn"))),
                                            new NetworkTapRuleMatchCondition()
                                                .withProtocolTypes(Arrays.asList("uufkrfnkcnihkswx", "furqm"))
                                                .withVlanMatchCondition(new VlanMatchCondition()
                                                    .withVlans(Arrays.asList("pntumotahb", "svnkxmyt", "u"))
                                                    .withInnerVlans(Arrays.asList("rlhxgcqmyrhkv", "zzmiemqyft"))
                                                    .withVlanGroupNames(Arrays.asList("oswgfqvj", "ghpakbqyhlsorn",
                                                        "b")))
                                                .withIpCondition(new IpMatchCondition().withType(
                                                    SourceDestinationType.DESTINATION_IP)
                                                    .withPrefixType(PrefixType.PREFIX)
                                                    .withIpPrefixValues(Arrays.asList("jm"))
                                                    .withIpGroupNames(Arrays.asList("yevztnjaw", "hul", "mmqmbwppx",
                                                        "rxbkitzmnhitax")))
                                                .withEncapsulationType(EncapsulationType.GTPV1)
                                                .withPortCondition(
                                                    new PortCondition().withPortType(PortType.DESTINATION_PORT)
                                                        .withLayer4Protocol(Layer4Protocol.TCP)
                                                        .withPorts(Arrays.asList("uhvz", "lbrouszxac", "wukokgoojj"))
                                                        .withPortGroupNames(Arrays.asList("tubcmu", "h", "btzvxxv")))))
                                .withActions(Arrays
                                    .asList(
                                        new NetworkTapRuleAction().withType(TapRuleActionType.COUNT)
                                            .withTruncate("lxsgcemegdz")
                                            .withIsTimestampEnabled(BooleanEnumProperty.TRUE)
                                            .withDestinationId("jubvfjyzuf")
                                            .withMatchConfigurationName("ifnivlut"),
                                        new NetworkTapRuleAction().withType(TapRuleActionType.COUNT)
                                            .withTruncate("acxauh")
                                            .withIsTimestampEnabled(BooleanEnumProperty.FALSE)
                                            .withDestinationId("xhklsqxt")
                                            .withMatchConfigurationName("yygktsrjyxxoxwf"))),
                            new NetworkTapRuleMatchConfiguration().withMatchConfigurationName("kvecnxfx")
                                .withSequenceNumber(6127027006710190293L)
                                .withIpAddressType(IpAddressType.IPV4)
                                .withMatchConditions(
                                    Arrays
                                        .asList(
                                            new NetworkTapRuleMatchCondition()
                                                .withProtocolTypes(Arrays.asList("pdhewokyqs", "kx", "sy"))
                                                .withVlanMatchCondition(new VlanMatchCondition()
                                                    .withVlans(Arrays.asList("qbtodjfy", "bvkvwzdmvdd", "wcrugyozzz",
                                                        "wnjdvvlrh"))
                                                    .withInnerVlans(Arrays.asList("kkvxu", "dqzbvbpsuvqhx", "ozf"))
                                                    .withVlanGroupNames(Arrays.asList("wbkurklpiigf")))
                                                .withIpCondition(new IpMatchCondition()
                                                    .withType(SourceDestinationType.DESTINATION_IP)
                                                    .withPrefixType(PrefixType.LONGEST_PREFIX)
                                                    .withIpPrefixValues(
                                                        Arrays.asList("pjclzjwaqdzqyd", "wuwxyllz", "zevtzqwczoc"))
                                                    .withIpGroupNames(Arrays.asList("ekmuynfpkyvnhiy")))
                                                .withEncapsulationType(EncapsulationType.GTPV1)
                                                .withPortCondition(new PortCondition()
                                                    .withPortType(PortType.DESTINATION_PORT)
                                                    .withLayer4Protocol(Layer4Protocol.UDP)
                                                    .withPorts(Arrays
                                                        .asList("uwmsu", "ustihtgrafjajvky", "mmjczvog", "derjennmk"))
                                                    .withPortGroupNames(Arrays.asList("uwqdwxhhlbmyphf"))),
                                            new NetworkTapRuleMatchCondition()
                                                .withProtocolTypes(Arrays.asList("ef", "jxnjtqbgy"))
                                                .withVlanMatchCondition(new VlanMatchCondition()
                                                    .withVlans(
                                                        Arrays.asList("hnvxwtd", "tcbjdbtqy", "kxunsaujqgbb", "vovoa"))
                                                    .withInnerVlans(Arrays.asList("js", "bc"))
                                                    .withVlanGroupNames(Arrays.asList("ygsa", "d", "d", "e")))
                                                .withIpCondition(new IpMatchCondition()
                                                    .withType(SourceDestinationType.DESTINATION_IP)
                                                    .withPrefixType(PrefixType.PREFIX)
                                                    .withIpPrefixValues(
                                                        Arrays.asList("kzvzuatqhgzuyxtr", "fdbqskgqjbvitp"))
                                                    .withIpGroupNames(Arrays.asList("sffavdhpiwrmuwk")))
                                                .withEncapsulationType(EncapsulationType.GTPV1)
                                                .withPortCondition(new PortCondition()
                                                    .withPortType(PortType.SOURCE_PORT)
                                                    .withLayer4Protocol(Layer4Protocol.UDP)
                                                    .withPorts(Arrays.asList("raqkiwlw"))
                                                    .withPortGroupNames(Arrays.asList("la", "wmwqoguflte", "t"))),
                                            new NetworkTapRuleMatchCondition()
                                                .withProtocolTypes(Arrays.asList("evxxkdevpximzii", "meqmduvtvodqxxpq",
                                                    "ml", "ibtblmcvrjazno"))
                                                .withVlanMatchCondition(new VlanMatchCondition()
                                                    .withVlans(Arrays.asList("qvpbq", "dqk", "sb", "sbbmitaftazgcx"))
                                                    .withInnerVlans(Arrays.asList("lcqufylamxow"))
                                                    .withVlanGroupNames(Arrays.asList("joyutehlkarvtipq",
                                                        "ksxiknsgofunswh", "cekggvmfnnb", "xn")))
                                                .withIpCondition(new IpMatchCondition()
                                                    .withType(SourceDestinationType.DESTINATION_IP)
                                                    .withPrefixType(PrefixType.PREFIX)
                                                    .withIpPrefixValues(Arrays.asList("etxtpw", "vgifws", "njzijaciwm"))
                                                    .withIpGroupNames(Arrays.asList("tqdonbzzs", "fzyviiwsua")))
                                                .withEncapsulationType(EncapsulationType.GTPV1)
                                                .withPortCondition(new PortCondition()
                                                    .withPortType(PortType.SOURCE_PORT)
                                                    .withLayer4Protocol(Layer4Protocol.TCP)
                                                    .withPorts(
                                                        Arrays.asList("bwxyldqtmggcpd", "megaj", "zctwymzsk", "qkkge"))
                                                    .withPortGroupNames(
                                                        Arrays.asList("phgliupqscoobk", "lcaxsqcomjiqi")))))
                                .withActions(Arrays.asList(
                                    new NetworkTapRuleAction().withType(TapRuleActionType.MIRROR)
                                        .withTruncate("uifkzqqhb")
                                        .withIsTimestampEnabled(BooleanEnumProperty.FALSE)
                                        .withDestinationId("ilm")
                                        .withMatchConfigurationName("beoiip"),
                                    new NetworkTapRuleAction().withType(TapRuleActionType.GOTO)
                                        .withTruncate("vyvuoikdlpsx")
                                        .withIsTimestampEnabled(BooleanEnumProperty.TRUE)
                                        .withDestinationId("fwimqnryclocfmv")
                                        .withMatchConfigurationName("xvjeleifqhdxtww"),
                                    new NetworkTapRuleAction().withType(TapRuleActionType.DROP)
                                        .withTruncate("ybpaevykbyjecrq")
                                        .withIsTimestampEnabled(BooleanEnumProperty.TRUE)
                                        .withDestinationId("kchsfoul")
                                        .withMatchConfigurationName("rcxuibsdqbdyblp"),
                                    new NetworkTapRuleAction().withType(TapRuleActionType.MIRROR)
                                        .withTruncate("m")
                                        .withIsTimestampEnabled(BooleanEnumProperty.FALSE)
                                        .withDestinationId("eoqhbjql")
                                        .withMatchConfigurationName("bleru")))))
                .withDynamicMatchConfigurations(Arrays.asList(
                    new CommonDynamicMatchConfiguration()
                        .withIpGroups(Arrays.asList(new IpGroupProperties().withName("hjucihbymjj")
                            .withIpAddressType(IpAddressType.IPV4)
                            .withIpPrefixes(Arrays.asList("rxvjeazrahelhb"))))
                        .withVlanGroups(Arrays.asList(
                            new VlanGroupProperties().withName("ieqamcthtpqgf")
                                .withVlans(Arrays.asList("sizkdiuvflg", "hcw")),
                            new VlanGroupProperties().withName("wahcrxofgrutv").withVlans(Arrays.asList("cxzivxpmhz")),
                            new VlanGroupProperties().withName("hhkvnnjdtujqz")
                                .withVlans(Arrays.asList("jvpmxnht", "zstqlf"))))
                        .withPortGroups(Arrays.asList(
                            new PortGroupProperties().withName("wvtlgxy")
                                .withPorts(Arrays.asList("wequfl", "yyopoaytwwgw", "ubotbvufrkw", "iemimdtn")),
                            new PortGroupProperties().withName("wew")
                                .withPorts(Arrays.asList("reeedddrftfquul", "clhsiigeeuw")))),
                    new CommonDynamicMatchConfiguration()
                        .withIpGroups(Arrays.asList(
                            new IpGroupProperties().withName("yxfedqnetd")
                                .withIpAddressType(IpAddressType.IPV4)
                                .withIpPrefixes(Arrays.asList("oqgvbzpggp", "meyobqajejirvavr", "kgpogplbjuvlnh")),
                            new IpGroupProperties().withName("rnjhinaeges")
                                .withIpAddressType(IpAddressType.IPV6)
                                .withIpPrefixes(Arrays.asList("qmjmoplukfyk"))))
                        .withVlanGroups(Arrays.asList(
                            new VlanGroupProperties().withName("ovadkrmjx")
                                .withVlans(Arrays.asList("pdkesjqbzkqmx", "poriwbwggijtspzj", "rrh", "kwsbzrhdugquh")),
                            new VlanGroupProperties().withName("gzfrunjfhrjhi")
                                .withVlans(Arrays.asList("ause", "nczk", "ihvtuwyjsqw")),
                            new VlanGroupProperties().withName("zoszjg")
                                .withVlans(Arrays.asList("kfnyskwwunqhc", "avoj", "slhip"))))
                        .withPortGroups(Arrays.asList(
                            new PortGroupProperties().withName("bljp").withPorts(Arrays.asList("rvchyluqalp")),
                            new PortGroupProperties().withName("fjjfxtizt")
                                .withPorts(Arrays.asList("tahhhsa", "xxsri", "rcwbaae", "yyefmxwoqotiiqb")),
                            new PortGroupProperties().withName("asrvrmtist")
                                .withPorts(Arrays.asList("jhorlxkpy", "k", "nnycntrqxxwtd")))),
                    new CommonDynamicMatchConfiguration()
                        .withIpGroups(Arrays.asList(
                            new IpGroupProperties().withName("tsuhqhtoxtd")
                                .withIpAddressType(IpAddressType.IPV6)
                                .withIpPrefixes(Arrays.asList("x", "qmzxsyaks", "npaami")),
                            new IpGroupProperties().withName("bgh")
                                .withIpAddressType(IpAddressType.IPV4)
                                .withIpPrefixes(Arrays.asList("bgchcgsfzhbjkiy", "qbjsdjpgxeysgw", "cfferznzc")),
                            new IpGroupProperties().withName("voveomkhfeqcoop")
                                .withIpAddressType(IpAddressType.IPV4)
                                .withIpPrefixes(Arrays.asList("imgckycjpeebznbz", "xsuloutnpb"))))
                        .withVlanGroups(Arrays.asList(
                            new VlanGroupProperties().withName("qo")
                                .withVlans(Arrays.asList("ncdmwkh", "pfhsldqdza", "iunyevdyzdsytc")),
                            new VlanGroupProperties().withName("swhcamwuy")
                                .withVlans(Arrays.asList("kcgsfcmvh", "drp", "atvyrkljqkqws", "jtvjkowggxawwd"))))
                        .withPortGroups(Arrays.asList(new PortGroupProperties().withName("nkteiidlbovwbclp")
                            .withPorts(Arrays.asList("gani", "kjcnerek"))))));
        model = BinaryData.fromObject(model).toObject(NetworkTapRulePatchProperties.class);
        Assertions.assertEquals("uls", model.annotation());
        Assertions.assertEquals(ConfigurationType.FILE, model.configurationType());
        Assertions.assertEquals("rmhnmizhvpr", model.tapRulesUrl());
        Assertions.assertEquals("cubleh", model.matchConfigurations().get(0).matchConfigurationName());
        Assertions.assertEquals(1571375428500855687L, model.matchConfigurations().get(0).sequenceNumber());
        Assertions.assertEquals(IpAddressType.IPV6, model.matchConfigurations().get(0).ipAddressType());
        Assertions.assertEquals("urdeewlsuxp",
            model.matchConfigurations().get(0).matchConditions().get(0).protocolTypes().get(0));
        Assertions.assertEquals("pmcreihu",
            model.matchConfigurations().get(0).matchConditions().get(0).vlanMatchCondition().vlans().get(0));
        Assertions.assertEquals("ow",
            model.matchConfigurations().get(0).matchConditions().get(0).vlanMatchCondition().innerVlans().get(0));
        Assertions.assertEquals("eerclbltbhpw",
            model.matchConfigurations().get(0).matchConditions().get(0).vlanMatchCondition().vlanGroupNames().get(0));
        Assertions.assertEquals(SourceDestinationType.DESTINATION_IP,
            model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().type());
        Assertions.assertEquals(PrefixType.LONGEST_PREFIX,
            model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().prefixType());
        Assertions.assertEquals("r",
            model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().ipPrefixValues().get(0));
        Assertions.assertEquals("ccwmecbtxsytrtex",
            model.matchConfigurations().get(0).matchConditions().get(0).ipCondition().ipGroupNames().get(0));
        Assertions.assertEquals(EncapsulationType.NONE,
            model.matchConfigurations().get(0).matchConditions().get(0).encapsulationType());
        Assertions.assertEquals(PortType.SOURCE_PORT,
            model.matchConfigurations().get(0).matchConditions().get(0).portCondition().portType());
        Assertions.assertEquals(Layer4Protocol.UDP,
            model.matchConfigurations().get(0).matchConditions().get(0).portCondition().layer4Protocol());
        Assertions.assertEquals("zigh",
            model.matchConfigurations().get(0).matchConditions().get(0).portCondition().ports().get(0));
        Assertions.assertEquals("b",
            model.matchConfigurations().get(0).matchConditions().get(0).portCondition().portGroupNames().get(0));
        Assertions.assertEquals(TapRuleActionType.DROP, model.matchConfigurations().get(0).actions().get(0).type());
        Assertions.assertEquals("dqimlgbbfjm", model.matchConfigurations().get(0).actions().get(0).truncate());
        Assertions.assertEquals(BooleanEnumProperty.FALSE,
            model.matchConfigurations().get(0).actions().get(0).isTimestampEnabled());
        Assertions.assertEquals("xlhmpmhef", model.matchConfigurations().get(0).actions().get(0).destinationId());
        Assertions.assertEquals("aphqeofytl",
            model.matchConfigurations().get(0).actions().get(0).matchConfigurationName());
        Assertions.assertEquals("hjucihbymjj", model.dynamicMatchConfigurations().get(0).ipGroups().get(0).name());
        Assertions.assertEquals(IpAddressType.IPV4,
            model.dynamicMatchConfigurations().get(0).ipGroups().get(0).ipAddressType());
        Assertions.assertEquals("rxvjeazrahelhb",
            model.dynamicMatchConfigurations().get(0).ipGroups().get(0).ipPrefixes().get(0));
        Assertions.assertEquals("ieqamcthtpqgf", model.dynamicMatchConfigurations().get(0).vlanGroups().get(0).name());
        Assertions.assertEquals("sizkdiuvflg",
            model.dynamicMatchConfigurations().get(0).vlanGroups().get(0).vlans().get(0));
        Assertions.assertEquals("wvtlgxy", model.dynamicMatchConfigurations().get(0).portGroups().get(0).name());
        Assertions.assertEquals("wequfl", model.dynamicMatchConfigurations().get(0).portGroups().get(0).ports().get(0));
    }
}
