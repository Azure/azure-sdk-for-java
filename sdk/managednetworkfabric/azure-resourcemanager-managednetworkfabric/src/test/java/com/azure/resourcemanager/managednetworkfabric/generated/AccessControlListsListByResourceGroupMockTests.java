// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.AccessControlList;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.ConfigurationType;
import com.azure.resourcemanager.managednetworkfabric.models.IpAddressType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AccessControlListsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"lastSyncedTime\":\"2021-06-10T23:25:07Z\",\"configurationState\":\"Succeeded\",\"provisioningState\":\"Succeeded\",\"administrativeState\":\"MAT\",\"configurationType\":\"File\",\"aclsUrl\":\"qzfxaitiqmcjbs\",\"defaultAction\":\"Deny\",\"matchConfigurations\":[{\"matchConfigurationName\":\"n\",\"sequenceNumber\":4707408565326769917,\"ipAddressType\":\"IPv6\",\"matchConditions\":[{}],\"actions\":[{},{},{},{}]},{\"matchConfigurationName\":\"obwkeuzlte\",\"sequenceNumber\":349078752510706470,\"ipAddressType\":\"IPv4\",\"matchConditions\":[{},{}],\"actions\":[{},{},{}]}],\"dynamicMatchConfigurations\":[{\"ipGroups\":[{},{}],\"vlanGroups\":[{},{},{}],\"portGroups\":[{},{},{}]}],\"annotation\":\"txjbrixy\"},\"location\":\"kikkqyvurhwishy\",\"tags\":{\"evnkyakck\":\"zcq\",\"uaz\":\"ehognsddjkkdede\",\"g\":\"gfcnxc\",\"ifjc\":\"umtcqxmyvkxixypa\"},\"id\":\"g\",\"name\":\"hvpsuwichm\",\"type\":\"czbyfkocgm\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AccessControlList> response
            = manager.accessControlLists().listByResourceGroup("frppwwqclmdmt", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("kikkqyvurhwishy", response.iterator().next().location());
        Assertions.assertEquals("zcq", response.iterator().next().tags().get("evnkyakck"));
        Assertions.assertEquals(ConfigurationType.FILE, response.iterator().next().configurationType());
        Assertions.assertEquals("qzfxaitiqmcjbs", response.iterator().next().aclsUrl());
        Assertions.assertEquals(CommunityActionTypes.DENY, response.iterator().next().defaultAction());
        Assertions.assertEquals("n", response.iterator().next().matchConfigurations().get(0).matchConfigurationName());
        Assertions.assertEquals(4707408565326769917L,
            response.iterator().next().matchConfigurations().get(0).sequenceNumber());
        Assertions.assertEquals(IpAddressType.IPV6,
            response.iterator().next().matchConfigurations().get(0).ipAddressType());
        Assertions.assertEquals("txjbrixy", response.iterator().next().annotation());
    }
}
