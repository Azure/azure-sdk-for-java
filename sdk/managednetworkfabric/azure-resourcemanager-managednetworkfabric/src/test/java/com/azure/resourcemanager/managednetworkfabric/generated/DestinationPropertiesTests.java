// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.DestinationProperties;
import com.azure.resourcemanager.managednetworkfabric.models.DestinationType;
import com.azure.resourcemanager.managednetworkfabric.models.Encapsulation;
import com.azure.resourcemanager.managednetworkfabric.models.IsolationDomainProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DestinationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DestinationProperties model =
            BinaryData
                .fromString(
                    "{\"name\":\"wscrngtwgxrolw\",\"destinationType\":\"IsolationDomain\",\"destinationId\":\"sdksut\",\"isolationDomainProperties\":{\"encapsulation\":\"GRE\",\"neighborGroupIds\":[\"havishbvjhxvpmq\",\"uquxlphngrxl\"]},\"destinationTapRuleId\":\"oweorocrq\"}")
                .toObject(DestinationProperties.class);
        Assertions.assertEquals("wscrngtwgxrolw", model.name());
        Assertions.assertEquals(DestinationType.ISOLATION_DOMAIN, model.destinationType());
        Assertions.assertEquals("sdksut", model.destinationId());
        Assertions.assertEquals(Encapsulation.GRE, model.isolationDomainProperties().encapsulation());
        Assertions.assertEquals("havishbvjhxvpmq", model.isolationDomainProperties().neighborGroupIds().get(0));
        Assertions.assertEquals("oweorocrq", model.destinationTapRuleId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DestinationProperties model =
            new DestinationProperties()
                .withName("wscrngtwgxrolw")
                .withDestinationType(DestinationType.ISOLATION_DOMAIN)
                .withDestinationId("sdksut")
                .withIsolationDomainProperties(
                    new IsolationDomainProperties()
                        .withEncapsulation(Encapsulation.GRE)
                        .withNeighborGroupIds(Arrays.asList("havishbvjhxvpmq", "uquxlphngrxl")))
                .withDestinationTapRuleId("oweorocrq");
        model = BinaryData.fromObject(model).toObject(DestinationProperties.class);
        Assertions.assertEquals("wscrngtwgxrolw", model.name());
        Assertions.assertEquals(DestinationType.ISOLATION_DOMAIN, model.destinationType());
        Assertions.assertEquals("sdksut", model.destinationId());
        Assertions.assertEquals(Encapsulation.GRE, model.isolationDomainProperties().encapsulation());
        Assertions.assertEquals("havishbvjhxvpmq", model.isolationDomainProperties().neighborGroupIds().get(0));
        Assertions.assertEquals("oweorocrq", model.destinationTapRuleId());
    }
}
