// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.ConfigurationType;
import com.azure.resourcemanager.managednetworkfabric.models.IpAddressType;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRule;
import com.azure.resourcemanager.managednetworkfabric.models.PollingIntervalInSeconds;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkTapRulesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"networkTapId\":\"gcemjtiljxa\",\"pollingIntervalInSeconds\":30,\"lastSyncedTime\":\"2021-04-17T10:46:29Z\",\"configurationState\":\"Provisioned\",\"provisioningState\":\"Updating\",\"administrativeState\":\"RMA\",\"configurationType\":\"Inline\",\"tapRulesUrl\":\"dxcmpdmdsypks\",\"matchConfigurations\":[{\"matchConfigurationName\":\"ehxjoupxehsbecxu\",\"sequenceNumber\":2810565747523667294,\"ipAddressType\":\"IPv6\",\"matchConditions\":[{},{},{}],\"actions\":[{},{},{}]}],\"dynamicMatchConfigurations\":[{\"ipGroups\":[{}],\"vlanGroups\":[{},{}],\"portGroups\":[{},{}]},{\"ipGroups\":[{},{},{}],\"vlanGroups\":[{},{},{},{}],\"portGroups\":[{}]},{\"ipGroups\":[{},{}],\"vlanGroups\":[{},{},{},{}],\"portGroups\":[{},{}]}],\"annotation\":\"i\"},\"location\":\"vucyackgkavpmg\",\"tags\":{\"jabpnxohagcojgmy\":\"ohfksixvwkpcesmu\",\"ehrq\":\"jdgm\",\"pbnjiweyuig\":\"gd\"},\"id\":\"zsebkbfykgmwurcx\",\"name\":\"jyxyunypf\",\"type\":\"vjgovbbn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NetworkTapRule response = manager.networkTapRules()
            .getByResourceGroupWithResponse("flhhbupqovuw", "vqihmqhqjd", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("vucyackgkavpmg", response.location());
        Assertions.assertEquals("ohfksixvwkpcesmu", response.tags().get("jabpnxohagcojgmy"));
        Assertions.assertEquals(PollingIntervalInSeconds.THREE_ZERO, response.pollingIntervalInSeconds());
        Assertions.assertEquals(ConfigurationType.INLINE, response.configurationType());
        Assertions.assertEquals("dxcmpdmdsypks", response.tapRulesUrl());
        Assertions.assertEquals("ehxjoupxehsbecxu", response.matchConfigurations().get(0).matchConfigurationName());
        Assertions.assertEquals(2810565747523667294L, response.matchConfigurations().get(0).sequenceNumber());
        Assertions.assertEquals(IpAddressType.IPV6, response.matchConfigurations().get(0).ipAddressType());
        Assertions.assertEquals("i", response.annotation());
    }
}
