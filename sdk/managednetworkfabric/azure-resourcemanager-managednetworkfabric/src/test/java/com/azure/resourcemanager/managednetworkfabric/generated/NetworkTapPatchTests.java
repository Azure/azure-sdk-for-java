// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.DestinationType;
import com.azure.resourcemanager.managednetworkfabric.models.Encapsulation;
import com.azure.resourcemanager.managednetworkfabric.models.IsolationDomainProperties;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkTapPatch;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkTapPatchableParametersDestinationsItem;
import com.azure.resourcemanager.managednetworkfabric.models.PollingType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class NetworkTapPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkTapPatch model = BinaryData.fromString(
            "{\"properties\":{\"pollingType\":\"Push\",\"destinations\":[{\"name\":\"zsyqagqllcbrvaid\",\"destinationType\":\"Direct\",\"destinationId\":\"htrrqwfy\",\"isolationDomainProperties\":{\"encapsulation\":\"None\",\"neighborGroupIds\":[\"jrnogykugdl\",\"vsa\",\"gthkslgeu\",\"fkbzbfbxjblajy\"]},\"destinationTapRuleId\":\"nbycs\"},{\"name\":\"oisaz\",\"destinationType\":\"IsolationDomain\",\"destinationId\":\"fsvpzxg\",\"isolationDomainProperties\":{\"encapsulation\":\"None\",\"neighborGroupIds\":[\"mlfjymgw\"]},\"destinationTapRuleId\":\"szcfyzqpeqreg\"},{\"name\":\"rdpagknxmaovr\",\"destinationType\":\"IsolationDomain\",\"destinationId\":\"nzf\",\"isolationDomainProperties\":{\"encapsulation\":\"None\",\"neighborGroupIds\":[\"ycjcgeipqxxsdy\",\"fwtyd\"]},\"destinationTapRuleId\":\"mabhgc\"}],\"annotation\":\"jqzhpvhxpba\"},\"tags\":{\"qscjpvqerqxk\":\"eullgfyog\",\"zlhcu\":\"mwdz\",\"qpwwvmbjecfwlbgh\":\"x\"}}")
            .toObject(NetworkTapPatch.class);
        Assertions.assertEquals("eullgfyog", model.tags().get("qscjpvqerqxk"));
        Assertions.assertEquals(PollingType.PUSH, model.pollingType());
        Assertions.assertEquals("zsyqagqllcbrvaid", model.destinations().get(0).name());
        Assertions.assertEquals(DestinationType.DIRECT, model.destinations().get(0).destinationType());
        Assertions.assertEquals("htrrqwfy", model.destinations().get(0).destinationId());
        Assertions.assertEquals(Encapsulation.NONE,
            model.destinations().get(0).isolationDomainProperties().encapsulation());
        Assertions.assertEquals("jrnogykugdl",
            model.destinations().get(0).isolationDomainProperties().neighborGroupIds().get(0));
        Assertions.assertEquals("nbycs", model.destinations().get(0).destinationTapRuleId());
        Assertions.assertEquals("jqzhpvhxpba", model.annotation());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkTapPatch model = new NetworkTapPatch()
            .withTags(mapOf("qscjpvqerqxk", "eullgfyog", "zlhcu", "mwdz", "qpwwvmbjecfwlbgh", "x"))
            .withPollingType(PollingType.PUSH)
            .withDestinations(Arrays.asList(
                new NetworkTapPatchableParametersDestinationsItem().withName("zsyqagqllcbrvaid")
                    .withDestinationType(DestinationType.DIRECT)
                    .withDestinationId("htrrqwfy")
                    .withIsolationDomainProperties(new IsolationDomainProperties().withEncapsulation(Encapsulation.NONE)
                        .withNeighborGroupIds(Arrays.asList("jrnogykugdl", "vsa", "gthkslgeu", "fkbzbfbxjblajy")))
                    .withDestinationTapRuleId("nbycs"),
                new NetworkTapPatchableParametersDestinationsItem().withName("oisaz")
                    .withDestinationType(DestinationType.ISOLATION_DOMAIN)
                    .withDestinationId("fsvpzxg")
                    .withIsolationDomainProperties(new IsolationDomainProperties().withEncapsulation(Encapsulation.NONE)
                        .withNeighborGroupIds(Arrays.asList("mlfjymgw")))
                    .withDestinationTapRuleId("szcfyzqpeqreg"),
                new NetworkTapPatchableParametersDestinationsItem().withName("rdpagknxmaovr")
                    .withDestinationType(DestinationType.ISOLATION_DOMAIN)
                    .withDestinationId("nzf")
                    .withIsolationDomainProperties(new IsolationDomainProperties().withEncapsulation(Encapsulation.NONE)
                        .withNeighborGroupIds(Arrays.asList("ycjcgeipqxxsdy", "fwtyd")))
                    .withDestinationTapRuleId("mabhgc")))
            .withAnnotation("jqzhpvhxpba");
        model = BinaryData.fromObject(model).toObject(NetworkTapPatch.class);
        Assertions.assertEquals("eullgfyog", model.tags().get("qscjpvqerqxk"));
        Assertions.assertEquals(PollingType.PUSH, model.pollingType());
        Assertions.assertEquals("zsyqagqllcbrvaid", model.destinations().get(0).name());
        Assertions.assertEquals(DestinationType.DIRECT, model.destinations().get(0).destinationType());
        Assertions.assertEquals("htrrqwfy", model.destinations().get(0).destinationId());
        Assertions.assertEquals(Encapsulation.NONE,
            model.destinations().get(0).isolationDomainProperties().encapsulation());
        Assertions.assertEquals("jrnogykugdl",
            model.destinations().get(0).isolationDomainProperties().neighborGroupIds().get(0));
        Assertions.assertEquals("nbycs", model.destinations().get(0).destinationTapRuleId());
        Assertions.assertEquals("jqzhpvhxpba", model.annotation());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
