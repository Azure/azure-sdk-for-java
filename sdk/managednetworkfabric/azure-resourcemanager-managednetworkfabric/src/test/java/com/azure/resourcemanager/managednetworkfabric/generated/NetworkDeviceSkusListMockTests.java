// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.BooleanEnumProperty;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkDeviceRoleName;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkDeviceSku;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkDeviceSkusListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"model\":\"fmazhkqqsjk\",\"manufacturer\":\"q\",\"supportedVersions\":[{\"version\":\"gpmdmwiwevv\",\"vendorOsVersion\":\"wghhbqqhdldar\",\"vendorFirmwareVersion\":\"wimtcceeeuquu\",\"isDefault\":\"True\"},{\"version\":\"cujwxvb\",\"vendorOsVersion\":\"rgknhfwlajwda\",\"vendorFirmwareVersion\":\"djbjg\",\"isDefault\":\"False\"}],\"supportedRoleTypes\":[\"Management\",\"CE\",\"TS\",\"NPB\"],\"interfaces\":[{\"identifier\":\"tkbmtrs\",\"interfaceType\":\"lviaigarma\",\"supportedConnectorTypes\":[{},{},{},{}]},{\"identifier\":\"cnev\",\"interfaceType\":\"cwbqy\",\"supportedConnectorTypes\":[{}]}],\"provisioningState\":\"Accepted\"},\"id\":\"giynqryo\",\"name\":\"sweofvsxauphzefi\",\"type\":\"eyydx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<NetworkDeviceSku> response = manager.networkDeviceSkus().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("fmazhkqqsjk", response.iterator().next().model());
        Assertions.assertEquals("q", response.iterator().next().manufacturer());
        Assertions.assertEquals("gpmdmwiwevv", response.iterator().next().supportedVersions().get(0).version());
        Assertions.assertEquals("wghhbqqhdldar",
            response.iterator().next().supportedVersions().get(0).vendorOsVersion());
        Assertions.assertEquals("wimtcceeeuquu",
            response.iterator().next().supportedVersions().get(0).vendorFirmwareVersion());
        Assertions.assertEquals(BooleanEnumProperty.TRUE,
            response.iterator().next().supportedVersions().get(0).isDefault());
        Assertions.assertEquals(NetworkDeviceRoleName.MANAGEMENT,
            response.iterator().next().supportedRoleTypes().get(0));
        Assertions.assertEquals("tkbmtrs", response.iterator().next().interfaces().get(0).identifier());
        Assertions.assertEquals("lviaigarma", response.iterator().next().interfaces().get(0).interfaceType());
    }
}
