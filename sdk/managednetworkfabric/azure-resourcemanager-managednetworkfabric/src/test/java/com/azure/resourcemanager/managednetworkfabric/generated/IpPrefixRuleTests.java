// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.Condition;
import com.azure.resourcemanager.managednetworkfabric.models.IpPrefixRule;
import org.junit.jupiter.api.Assertions;

public final class IpPrefixRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpPrefixRule model = BinaryData.fromString(
            "{\"action\":\"Deny\",\"sequenceNumber\":667258597321052143,\"networkPrefix\":\"apx\",\"condition\":\"EqualTo\",\"subnetMaskLength\":\"jjk\"}")
            .toObject(IpPrefixRule.class);
        Assertions.assertEquals(CommunityActionTypes.DENY, model.action());
        Assertions.assertEquals(667258597321052143L, model.sequenceNumber());
        Assertions.assertEquals("apx", model.networkPrefix());
        Assertions.assertEquals(Condition.EQUAL_TO, model.condition());
        Assertions.assertEquals("jjk", model.subnetMaskLength());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpPrefixRule model = new IpPrefixRule().withAction(CommunityActionTypes.DENY)
            .withSequenceNumber(667258597321052143L)
            .withNetworkPrefix("apx")
            .withCondition(Condition.EQUAL_TO)
            .withSubnetMaskLength("jjk");
        model = BinaryData.fromObject(model).toObject(IpPrefixRule.class);
        Assertions.assertEquals(CommunityActionTypes.DENY, model.action());
        Assertions.assertEquals(667258597321052143L, model.sequenceNumber());
        Assertions.assertEquals("apx", model.networkPrefix());
        Assertions.assertEquals(Condition.EQUAL_TO, model.condition());
        Assertions.assertEquals("jjk", model.subnetMaskLength());
    }
}
