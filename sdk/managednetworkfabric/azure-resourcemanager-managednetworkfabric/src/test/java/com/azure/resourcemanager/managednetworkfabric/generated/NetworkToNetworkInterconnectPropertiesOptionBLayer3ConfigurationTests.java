// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration;
import org.junit.jupiter.api.Assertions;

public final class NetworkToNetworkInterconnectPropertiesOptionBLayer3ConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration model =
            BinaryData
                .fromString(
                    "{\"peerASN\":8932988459385064197,\"vlanId\":1349785118,\"fabricASN\":9052438089668649681,\"primaryIpv4Prefix\":\"mbrwg\",\"primaryIpv6Prefix\":\"xljbkhxsd\",\"secondaryIpv4Prefix\":\"au\",\"secondaryIpv6Prefix\":\"dmhweqjfyxydgto\"}")
                .toObject(NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration.class);
        Assertions.assertEquals("mbrwg", model.primaryIpv4Prefix());
        Assertions.assertEquals("xljbkhxsd", model.primaryIpv6Prefix());
        Assertions.assertEquals("au", model.secondaryIpv4Prefix());
        Assertions.assertEquals("dmhweqjfyxydgto", model.secondaryIpv6Prefix());
        Assertions.assertEquals(8932988459385064197L, model.peerAsn());
        Assertions.assertEquals(1349785118, model.vlanId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration model =
            new NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration()
                .withPrimaryIpv4Prefix("mbrwg")
                .withPrimaryIpv6Prefix("xljbkhxsd")
                .withSecondaryIpv4Prefix("au")
                .withSecondaryIpv6Prefix("dmhweqjfyxydgto")
                .withPeerAsn(8932988459385064197L)
                .withVlanId(1349785118);
        model =
            BinaryData
                .fromObject(model)
                .toObject(NetworkToNetworkInterconnectPropertiesOptionBLayer3Configuration.class);
        Assertions.assertEquals("mbrwg", model.primaryIpv4Prefix());
        Assertions.assertEquals("xljbkhxsd", model.primaryIpv6Prefix());
        Assertions.assertEquals("au", model.secondaryIpv4Prefix());
        Assertions.assertEquals("dmhweqjfyxydgto", model.secondaryIpv6Prefix());
        Assertions.assertEquals(8932988459385064197L, model.peerAsn());
        Assertions.assertEquals(1349785118, model.vlanId());
    }
}
