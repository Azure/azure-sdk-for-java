// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.IpExtendedCommunityPatch;
import com.azure.resourcemanager.managednetworkfabric.models.IpExtendedCommunityRule;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IpExtendedCommunityPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpExtendedCommunityPatch model = BinaryData.fromString(
            "{\"properties\":{\"annotation\":\"vnynkb\",\"ipExtendedCommunityRules\":[{\"action\":\"Deny\",\"sequenceNumber\":3587482268659031002,\"routeTargets\":[\"hpsprkzyaupiac\",\"xnafbw\",\"ro\",\"htuov\"]},{\"action\":\"Deny\",\"sequenceNumber\":6160359867810551901,\"routeTargets\":[\"rjtumghih\",\"ve\",\"mslclblyjxlt\"]},{\"action\":\"Deny\",\"sequenceNumber\":8653084665379016179,\"routeTargets\":[\"c\",\"sfxigctmgx\",\"upbezqccydrt\"]}]},\"tags\":{\"eq\":\"kdqkkyihzt\",\"ecfehuwa\":\"gqzgwldoychill\",\"uhicqllizstacsjv\":\"a\"}}")
            .toObject(IpExtendedCommunityPatch.class);
        Assertions.assertEquals("kdqkkyihzt", model.tags().get("eq"));
        Assertions.assertEquals("vnynkb", model.annotation());
        Assertions.assertEquals(CommunityActionTypes.DENY, model.ipExtendedCommunityRules().get(0).action());
        Assertions.assertEquals(3587482268659031002L, model.ipExtendedCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals("hpsprkzyaupiac", model.ipExtendedCommunityRules().get(0).routeTargets().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpExtendedCommunityPatch model = new IpExtendedCommunityPatch()
            .withTags(mapOf("eq", "kdqkkyihzt", "ecfehuwa", "gqzgwldoychill", "uhicqllizstacsjv", "a"))
            .withAnnotation("vnynkb")
            .withIpExtendedCommunityRules(Arrays.asList(
                new IpExtendedCommunityRule().withAction(CommunityActionTypes.DENY)
                    .withSequenceNumber(3587482268659031002L)
                    .withRouteTargets(Arrays.asList("hpsprkzyaupiac", "xnafbw", "ro", "htuov")),
                new IpExtendedCommunityRule().withAction(CommunityActionTypes.DENY)
                    .withSequenceNumber(6160359867810551901L)
                    .withRouteTargets(Arrays.asList("rjtumghih", "ve", "mslclblyjxlt")),
                new IpExtendedCommunityRule().withAction(CommunityActionTypes.DENY)
                    .withSequenceNumber(8653084665379016179L)
                    .withRouteTargets(Arrays.asList("c", "sfxigctmgx", "upbezqccydrt"))));
        model = BinaryData.fromObject(model).toObject(IpExtendedCommunityPatch.class);
        Assertions.assertEquals("kdqkkyihzt", model.tags().get("eq"));
        Assertions.assertEquals("vnynkb", model.annotation());
        Assertions.assertEquals(CommunityActionTypes.DENY, model.ipExtendedCommunityRules().get(0).action());
        Assertions.assertEquals(3587482268659031002L, model.ipExtendedCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals("hpsprkzyaupiac", model.ipExtendedCommunityRules().get(0).routeTargets().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
