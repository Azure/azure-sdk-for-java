// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.CommonDynamicMatchConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.IpAddressType;
import com.azure.resourcemanager.managednetworkfabric.models.IpGroupProperties;
import com.azure.resourcemanager.managednetworkfabric.models.PortGroupProperties;
import com.azure.resourcemanager.managednetworkfabric.models.VlanGroupProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CommonDynamicMatchConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CommonDynamicMatchConfiguration model = BinaryData.fromString(
            "{\"ipGroups\":[{\"name\":\"qxepnylbfuaj\",\"ipAddressType\":\"IPv6\",\"ipPrefixes\":[\"vofqzhvfc\",\"byfmowuxr\",\"jpvd\",\"xfzwi\"]},{\"name\":\"wzjbh\",\"ipAddressType\":\"IPv4\",\"ipPrefixes\":[\"rkambt\",\"negvmnvuqe\",\"vldspa\",\"tjb\"]}],\"vlanGroups\":[{\"name\":\"flvestmjlxrrilo\",\"vlans\":[\"eewchpxlktw\",\"uziycsl\",\"vu\"]},{\"name\":\"ztcktyh\",\"vlans\":[\"edcg\",\"ulwm\",\"rqzz\"]}],\"portGroups\":[{\"name\":\"pglydz\",\"ports\":[\"vqeevtoep\",\"yutnwytpzdmov\",\"vf\",\"aawzqadfl\"]},{\"name\":\"ur\",\"ports\":[\"aecxndtic\",\"kpvzmlq\",\"mldgxobfirc\"]},{\"name\":\"pkc\",\"ports\":[\"zriykhy\",\"wf\"]}]}")
            .toObject(CommonDynamicMatchConfiguration.class);
        Assertions.assertEquals("qxepnylbfuaj", model.ipGroups().get(0).name());
        Assertions.assertEquals(IpAddressType.IPV6, model.ipGroups().get(0).ipAddressType());
        Assertions.assertEquals("vofqzhvfc", model.ipGroups().get(0).ipPrefixes().get(0));
        Assertions.assertEquals("flvestmjlxrrilo", model.vlanGroups().get(0).name());
        Assertions.assertEquals("eewchpxlktw", model.vlanGroups().get(0).vlans().get(0));
        Assertions.assertEquals("pglydz", model.portGroups().get(0).name());
        Assertions.assertEquals("vqeevtoep", model.portGroups().get(0).ports().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CommonDynamicMatchConfiguration model = new CommonDynamicMatchConfiguration()
            .withIpGroups(Arrays.asList(
                new IpGroupProperties().withName("qxepnylbfuaj")
                    .withIpAddressType(IpAddressType.IPV6)
                    .withIpPrefixes(Arrays.asList("vofqzhvfc", "byfmowuxr", "jpvd", "xfzwi")),
                new IpGroupProperties().withName("wzjbh")
                    .withIpAddressType(IpAddressType.IPV4)
                    .withIpPrefixes(Arrays.asList("rkambt", "negvmnvuqe", "vldspa", "tjb"))))
            .withVlanGroups(Arrays.asList(
                new VlanGroupProperties().withName("flvestmjlxrrilo")
                    .withVlans(Arrays.asList("eewchpxlktw", "uziycsl", "vu")),
                new VlanGroupProperties().withName("ztcktyh").withVlans(Arrays.asList("edcg", "ulwm", "rqzz"))))
            .withPortGroups(Arrays.asList(
                new PortGroupProperties().withName("pglydz")
                    .withPorts(Arrays.asList("vqeevtoep", "yutnwytpzdmov", "vf", "aawzqadfl")),
                new PortGroupProperties().withName("ur")
                    .withPorts(Arrays.asList("aecxndtic", "kpvzmlq", "mldgxobfirc")),
                new PortGroupProperties().withName("pkc").withPorts(Arrays.asList("zriykhy", "wf"))));
        model = BinaryData.fromObject(model).toObject(CommonDynamicMatchConfiguration.class);
        Assertions.assertEquals("qxepnylbfuaj", model.ipGroups().get(0).name());
        Assertions.assertEquals(IpAddressType.IPV6, model.ipGroups().get(0).ipAddressType());
        Assertions.assertEquals("vofqzhvfc", model.ipGroups().get(0).ipPrefixes().get(0));
        Assertions.assertEquals("flvestmjlxrrilo", model.vlanGroups().get(0).name());
        Assertions.assertEquals("eewchpxlktw", model.vlanGroups().get(0).vlans().get(0));
        Assertions.assertEquals("pglydz", model.portGroups().get(0).name());
        Assertions.assertEquals("vqeevtoep", model.portGroups().get(0).ports().get(0));
    }
}
