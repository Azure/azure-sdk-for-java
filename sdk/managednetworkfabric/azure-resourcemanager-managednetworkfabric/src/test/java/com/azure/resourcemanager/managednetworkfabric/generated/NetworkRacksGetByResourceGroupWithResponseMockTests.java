// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkRack;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkRackType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkRacksGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"networkRackType\":\"Aggregate\",\"networkFabricId\":\"jgptxvzhyun\",\"networkDevices\":[\"fjjsel\"],\"provisioningState\":\"Succeeded\",\"annotation\":\"f\"},\"location\":\"pn\",\"tags\":{\"tytrivfle\":\"wfmf\"},\"id\":\"vefnzv\",\"name\":\"miwbaksz\",\"type\":\"cmscezasjyil\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NetworkRack response = manager.networkRacks()
            .getByResourceGroupWithResponse("tkvoivcktjscjkex", "bx", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("pn", response.location());
        Assertions.assertEquals("wfmf", response.tags().get("tytrivfle"));
        Assertions.assertEquals(NetworkRackType.AGGREGATE, response.networkRackType());
        Assertions.assertEquals("jgptxvzhyun", response.networkFabricId());
        Assertions.assertEquals("f", response.annotation());
    }
}
