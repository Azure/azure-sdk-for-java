// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.Condition;
import com.azure.resourcemanager.managednetworkfabric.models.IpPrefix;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IpPrefixesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"configurationState\":\"PendingCommit\",\"provisioningState\":\"Canceled\",\"administrativeState\":\"Enabled\",\"ipPrefixRules\":[{\"action\":\"Deny\",\"sequenceNumber\":8148053506381843263,\"networkPrefix\":\"tbltytvnpbgcesfd\",\"condition\":\"LesserThanOrEqualTo\",\"subnetMaskLength\":\"mowurofof\"},{\"action\":\"Permit\",\"sequenceNumber\":1224957652054116236,\"networkPrefix\":\"zzwweoblb\",\"condition\":\"EqualTo\",\"subnetMaskLength\":\"hixcc\"},{\"action\":\"Permit\",\"sequenceNumber\":7690295423276930746,\"networkPrefix\":\"og\",\"condition\":\"LesserThanOrEqualTo\",\"subnetMaskLength\":\"myqzyqepgbbzdsl\"}],\"annotation\":\"kcevoxdd\"},\"location\":\"wmgwxwukfjv\",\"tags\":{\"gyphheovejkpalec\":\"axseisvv\",\"pu\":\"tlthrt\"},\"id\":\"fssrgrq\",\"name\":\"fnquollouurmuz\",\"type\":\"mbqqiehdhj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IpPrefix response = manager.ipPrefixes()
            .getByResourceGroupWithResponse("ure", "vivkiglioklsu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("wmgwxwukfjv", response.location());
        Assertions.assertEquals("axseisvv", response.tags().get("gyphheovejkpalec"));
        Assertions.assertEquals(CommunityActionTypes.DENY, response.ipPrefixRules().get(0).action());
        Assertions.assertEquals(8148053506381843263L, response.ipPrefixRules().get(0).sequenceNumber());
        Assertions.assertEquals("tbltytvnpbgcesfd", response.ipPrefixRules().get(0).networkPrefix());
        Assertions.assertEquals(Condition.LESSER_THAN_OR_EQUAL_TO, response.ipPrefixRules().get(0).condition());
        Assertions.assertEquals("mowurofof", response.ipPrefixRules().get(0).subnetMaskLength());
        Assertions.assertEquals("kcevoxdd", response.annotation());
    }
}
