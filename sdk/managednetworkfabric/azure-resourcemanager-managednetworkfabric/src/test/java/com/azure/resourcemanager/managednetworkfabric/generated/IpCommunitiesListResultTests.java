// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.IpCommunityInner;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.IpCommunitiesListResult;
import com.azure.resourcemanager.managednetworkfabric.models.IpCommunityRule;
import com.azure.resourcemanager.managednetworkfabric.models.WellKnownCommunities;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IpCommunitiesListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpCommunitiesListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"configurationState\":\"Deprovisioning\",\"provisioningState\":\"Accepted\",\"administrativeState\":\"Disabled\",\"ipCommunityRules\":[{\"action\":\"Permit\",\"sequenceNumber\":4356169983765004043,\"wellKnownCommunities\":[\"Internet\",\"GShut\",\"LocalAS\"],\"communityMembers\":[\"geleohdbvq\",\"wzkjopwbeonrlkw\"]}],\"annotation\":\"qybxceakxcp\"},\"location\":\"oqfyiaseqch\",\"tags\":{\"uem\":\"tzrazisgyk\",\"klinhmdptysprq\":\"anbwzohmnrxxbso\",\"pli\":\"gnzxojpslsvj\"},\"id\":\"fiqwoy\",\"name\":\"qvapcohhoucq\",\"type\":\"q\"},{\"properties\":{\"configurationState\":\"Accepted\",\"provisioningState\":\"Updating\",\"administrativeState\":\"RMA\",\"ipCommunityRules\":[{\"action\":\"Permit\",\"sequenceNumber\":8065845285267929372,\"wellKnownCommunities\":[\"Internet\",\"Internet\",\"Internet\",\"LocalAS\"],\"communityMembers\":[\"cawetzqddt\",\"wflj\"]},{\"action\":\"Permit\",\"sequenceNumber\":1601336838590319246,\"wellKnownCommunities\":[\"Internet\",\"NoAdvertise\",\"NoExport\"],\"communityMembers\":[\"zwcjjncqtj\",\"mizvgbgatzuuvbx\",\"grebwggahttzlsw\"]},{\"action\":\"Permit\",\"sequenceNumber\":8685578675388239679,\"wellKnownCommunities\":[\"Internet\",\"Internet\",\"NoAdvertise\",\"NoExport\"],\"communityMembers\":[\"qzasunwqrjzfrgqh\"]},{\"action\":\"Permit\",\"sequenceNumber\":8053513658904619463,\"wellKnownCommunities\":[\"LocalAS\",\"NoExport\"],\"communityMembers\":[\"njrohmbpy\",\"yx\",\"meblyd\",\"vkfkmr\"]}],\"annotation\":\"xne\"},\"location\":\"sm\",\"tags\":{\"ucygvo\":\"lfpya\"},\"id\":\"vyuns\",\"name\":\"xlghieegj\",\"type\":\"gvvpasek\"}],\"nextLink\":\"buxantuyg\"}")
            .toObject(IpCommunitiesListResult.class);
        Assertions.assertEquals("oqfyiaseqch", model.value().get(0).location());
        Assertions.assertEquals("tzrazisgyk", model.value().get(0).tags().get("uem"));
        Assertions.assertEquals(CommunityActionTypes.PERMIT, model.value().get(0).ipCommunityRules().get(0).action());
        Assertions.assertEquals(4356169983765004043L, model.value().get(0).ipCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals(WellKnownCommunities.INTERNET,
            model.value().get(0).ipCommunityRules().get(0).wellKnownCommunities().get(0));
        Assertions.assertEquals("geleohdbvq", model.value().get(0).ipCommunityRules().get(0).communityMembers().get(0));
        Assertions.assertEquals("qybxceakxcp", model.value().get(0).annotation());
        Assertions.assertEquals("buxantuyg", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpCommunitiesListResult model
            = new IpCommunitiesListResult().withValue(Arrays.asList(
                new IpCommunityInner().withLocation("oqfyiaseqch")
                    .withTags(mapOf("uem", "tzrazisgyk", "klinhmdptysprq", "anbwzohmnrxxbso", "pli", "gnzxojpslsvj"))
                    .withIpCommunityRules(Arrays.asList(new IpCommunityRule().withAction(CommunityActionTypes.PERMIT)
                        .withSequenceNumber(4356169983765004043L)
                        .withWellKnownCommunities(Arrays.asList(
                            WellKnownCommunities.INTERNET, WellKnownCommunities.GSHUT, WellKnownCommunities.LOCAL_AS))
                        .withCommunityMembers(Arrays.asList("geleohdbvq", "wzkjopwbeonrlkw"))))
                    .withAnnotation("qybxceakxcp"),
                new IpCommunityInner().withLocation("sm")
                    .withTags(mapOf("ucygvo", "lfpya"))
                    .withIpCommunityRules(Arrays.asList(
                        new IpCommunityRule().withAction(CommunityActionTypes.PERMIT)
                            .withSequenceNumber(8065845285267929372L)
                            .withWellKnownCommunities(
                                Arrays.asList(WellKnownCommunities.INTERNET, WellKnownCommunities.INTERNET,
                                    WellKnownCommunities.INTERNET, WellKnownCommunities.LOCAL_AS))
                            .withCommunityMembers(Arrays.asList("cawetzqddt", "wflj")),
                        new IpCommunityRule().withAction(CommunityActionTypes.PERMIT)
                            .withSequenceNumber(1601336838590319246L)
                            .withWellKnownCommunities(Arrays.asList(WellKnownCommunities.INTERNET,
                                WellKnownCommunities.NO_ADVERTISE, WellKnownCommunities.NO_EXPORT))
                            .withCommunityMembers(Arrays.asList("zwcjjncqtj", "mizvgbgatzuuvbx", "grebwggahttzlsw")),
                        new IpCommunityRule().withAction(CommunityActionTypes.PERMIT)
                            .withSequenceNumber(8685578675388239679L)
                            .withWellKnownCommunities(
                                Arrays.asList(WellKnownCommunities.INTERNET, WellKnownCommunities.INTERNET,
                                    WellKnownCommunities.NO_ADVERTISE, WellKnownCommunities.NO_EXPORT))
                            .withCommunityMembers(Arrays.asList("qzasunwqrjzfrgqh")),
                        new IpCommunityRule().withAction(CommunityActionTypes.PERMIT)
                            .withSequenceNumber(8053513658904619463L)
                            .withWellKnownCommunities(
                                Arrays.asList(WellKnownCommunities.LOCAL_AS, WellKnownCommunities.NO_EXPORT))
                            .withCommunityMembers(Arrays.asList("njrohmbpy", "yx", "meblyd", "vkfkmr"))))
                    .withAnnotation("xne")))
                .withNextLink("buxantuyg");
        model = BinaryData.fromObject(model).toObject(IpCommunitiesListResult.class);
        Assertions.assertEquals("oqfyiaseqch", model.value().get(0).location());
        Assertions.assertEquals("tzrazisgyk", model.value().get(0).tags().get("uem"));
        Assertions.assertEquals(CommunityActionTypes.PERMIT, model.value().get(0).ipCommunityRules().get(0).action());
        Assertions.assertEquals(4356169983765004043L, model.value().get(0).ipCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals(WellKnownCommunities.INTERNET,
            model.value().get(0).ipCommunityRules().get(0).wellKnownCommunities().get(0));
        Assertions.assertEquals("geleohdbvq", model.value().get(0).ipCommunityRules().get(0).communityMembers().get(0));
        Assertions.assertEquals("qybxceakxcp", model.value().get(0).annotation());
        Assertions.assertEquals("buxantuyg", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
