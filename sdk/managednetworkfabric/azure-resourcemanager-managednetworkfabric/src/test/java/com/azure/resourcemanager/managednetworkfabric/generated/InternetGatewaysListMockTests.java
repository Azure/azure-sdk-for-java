// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.GatewayType;
import com.azure.resourcemanager.managednetworkfabric.models.InternetGateway;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InternetGatewaysListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ipv4Address\":\"oxl\",\"port\":397632568,\"type\":\"Workload\",\"networkFabricControllerId\":\"yf\",\"provisioningState\":\"Succeeded\",\"internetGatewayRuleId\":\"ifbwbl\",\"annotation\":\"hpxukxgoyxon\"},\"location\":\"wdqrxros\",\"tags\":{\"atktwjrppifeyrq\":\"rldxfuaefew\",\"ojklwjpzw\":\"elrmdcizhvks\"},\"id\":\"ncw\",\"name\":\"smpyeyzolbfnfly\",\"type\":\"fxudui\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<InternetGateway> response = manager.internetGateways().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wdqrxros", response.iterator().next().location());
        Assertions.assertEquals("rldxfuaefew", response.iterator().next().tags().get("atktwjrppifeyrq"));
        Assertions.assertEquals(GatewayType.WORKLOAD, response.iterator().next().typePropertiesType());
        Assertions.assertEquals("yf", response.iterator().next().networkFabricControllerId());
        Assertions.assertEquals("ifbwbl", response.iterator().next().internetGatewayRuleId());
        Assertions.assertEquals("hpxukxgoyxon", response.iterator().next().annotation());
    }
}
