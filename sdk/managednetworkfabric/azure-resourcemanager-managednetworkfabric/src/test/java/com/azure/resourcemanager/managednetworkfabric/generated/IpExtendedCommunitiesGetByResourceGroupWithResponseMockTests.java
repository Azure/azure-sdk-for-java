// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managednetworkfabric.ManagedNetworkFabricManager;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.IpExtendedCommunity;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IpExtendedCommunitiesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"configurationState\":\"Provisioning\",\"provisioningState\":\"Failed\",\"administrativeState\":\"Disabled\",\"ipExtendedCommunityRules\":[{\"action\":\"Deny\",\"sequenceNumber\":3845588111981176241,\"routeTargets\":[\"oxovlz\",\"kleldkqdlqqhnt\",\"rykkxakruuptiicg\",\"pz\"]},{\"action\":\"Deny\",\"sequenceNumber\":5786331397833650098,\"routeTargets\":[\"n\",\"xiemacmztje\"]},{\"action\":\"Deny\",\"sequenceNumber\":7768651645848572236,\"routeTargets\":[\"brysgktfmocnqbb\",\"rtb\",\"fzghfuifwxudyn\",\"hocqxugjx\"]},{\"action\":\"Deny\",\"sequenceNumber\":649725561434329546,\"routeTargets\":[\"rfbplvhmhu\",\"osdjlz\",\"dmddghqeuyaorse\",\"vp\"]}],\"annotation\":\"sorsbegcl\"},\"location\":\"x\",\"tags\":{\"lunssky\":\"qzyhzydyvtuqvi\",\"hxzjdcwuzs\":\"igtvjxsocsvjekej\",\"aojeeyvfxb\":\"yfyixecmasjnfgng\"},\"id\":\"ckmoaljaxvwxt\",\"name\":\"uzhvojyffwflbk\",\"type\":\"cdzuiygtcyzc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagedNetworkFabricManager manager = ManagedNetworkFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IpExtendedCommunity response = manager.ipExtendedCommunities()
            .getByResourceGroupWithResponse("sbnuc", "xh", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("x", response.location());
        Assertions.assertEquals("qzyhzydyvtuqvi", response.tags().get("lunssky"));
        Assertions.assertEquals(CommunityActionTypes.DENY, response.ipExtendedCommunityRules().get(0).action());
        Assertions.assertEquals(3845588111981176241L, response.ipExtendedCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals("oxovlz", response.ipExtendedCommunityRules().get(0).routeTargets().get(0));
        Assertions.assertEquals("sorsbegcl", response.annotation());
    }
}
