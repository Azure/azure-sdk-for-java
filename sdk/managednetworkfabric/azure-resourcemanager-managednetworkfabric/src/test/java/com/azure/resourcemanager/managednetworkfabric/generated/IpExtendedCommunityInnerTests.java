// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.IpExtendedCommunityInner;
import com.azure.resourcemanager.managednetworkfabric.models.CommunityActionTypes;
import com.azure.resourcemanager.managednetworkfabric.models.IpExtendedCommunityRule;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IpExtendedCommunityInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpExtendedCommunityInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"configurationState\":\"Rejected\",\"provisioningState\":\"Updating\",\"administrativeState\":\"Enabled\",\"ipExtendedCommunityRules\":[{\"action\":\"Deny\",\"sequenceNumber\":3106144557754641608,\"routeTargets\":[\"llizhce\",\"moqodka\",\"ppyi\"]}],\"annotation\":\"gqladywrxwhyd\"},\"location\":\"uvvadswzsnu\",\"tags\":{\"ouvblgmo\":\"lowuowhlxlnwyr\",\"ih\":\"zkltrfowtdvrfmv\",\"hdxlw\":\"vjdrqcrjidhftuk\"},\"id\":\"ojbf\",\"name\":\"zd\",\"type\":\"fnjyix\"}")
                .toObject(IpExtendedCommunityInner.class);
        Assertions.assertEquals("uvvadswzsnu", model.location());
        Assertions.assertEquals("lowuowhlxlnwyr", model.tags().get("ouvblgmo"));
        Assertions.assertEquals(CommunityActionTypes.DENY, model.ipExtendedCommunityRules().get(0).action());
        Assertions.assertEquals(3106144557754641608L, model.ipExtendedCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals("llizhce", model.ipExtendedCommunityRules().get(0).routeTargets().get(0));
        Assertions.assertEquals("gqladywrxwhyd", model.annotation());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpExtendedCommunityInner model =
            new IpExtendedCommunityInner()
                .withLocation("uvvadswzsnu")
                .withTags(mapOf("ouvblgmo", "lowuowhlxlnwyr", "ih", "zkltrfowtdvrfmv", "hdxlw", "vjdrqcrjidhftuk"))
                .withIpExtendedCommunityRules(
                    Arrays
                        .asList(
                            new IpExtendedCommunityRule()
                                .withAction(CommunityActionTypes.DENY)
                                .withSequenceNumber(3106144557754641608L)
                                .withRouteTargets(Arrays.asList("llizhce", "moqodka", "ppyi"))))
                .withAnnotation("gqladywrxwhyd");
        model = BinaryData.fromObject(model).toObject(IpExtendedCommunityInner.class);
        Assertions.assertEquals("uvvadswzsnu", model.location());
        Assertions.assertEquals("lowuowhlxlnwyr", model.tags().get("ouvblgmo"));
        Assertions.assertEquals(CommunityActionTypes.DENY, model.ipExtendedCommunityRules().get(0).action());
        Assertions.assertEquals(3106144557754641608L, model.ipExtendedCommunityRules().get(0).sequenceNumber());
        Assertions.assertEquals("llizhce", model.ipExtendedCommunityRules().get(0).routeTargets().get(0));
        Assertions.assertEquals("gqladywrxwhyd", model.annotation());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
