// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.IpMatchCondition;
import com.azure.resourcemanager.managednetworkfabric.models.PrefixType;
import com.azure.resourcemanager.managednetworkfabric.models.SourceDestinationType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IpMatchConditionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpMatchCondition model =
            BinaryData
                .fromString(
                    "{\"type\":\"SourceIP\",\"prefixType\":\"Prefix\",\"ipPrefixValues\":[\"hcvsqltnzoi\"],\"ipGroupNames\":[\"xgnxfyqonmpqoxwd\",\"fdbxiqxeiiqbim\"]}")
                .toObject(IpMatchCondition.class);
        Assertions.assertEquals(SourceDestinationType.SOURCE_IP, model.type());
        Assertions.assertEquals(PrefixType.PREFIX, model.prefixType());
        Assertions.assertEquals("hcvsqltnzoi", model.ipPrefixValues().get(0));
        Assertions.assertEquals("xgnxfyqonmpqoxwd", model.ipGroupNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpMatchCondition model =
            new IpMatchCondition()
                .withType(SourceDestinationType.SOURCE_IP)
                .withPrefixType(PrefixType.PREFIX)
                .withIpPrefixValues(Arrays.asList("hcvsqltnzoi"))
                .withIpGroupNames(Arrays.asList("xgnxfyqonmpqoxwd", "fdbxiqxeiiqbim"));
        model = BinaryData.fromObject(model).toObject(IpMatchCondition.class);
        Assertions.assertEquals(SourceDestinationType.SOURCE_IP, model.type());
        Assertions.assertEquals(PrefixType.PREFIX, model.prefixType());
        Assertions.assertEquals("hcvsqltnzoi", model.ipPrefixValues().get(0));
        Assertions.assertEquals("xgnxfyqonmpqoxwd", model.ipGroupNames().get(0));
    }
}
