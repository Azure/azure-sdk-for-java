// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.IpMatchCondition;
import com.azure.resourcemanager.managednetworkfabric.models.PrefixType;
import com.azure.resourcemanager.managednetworkfabric.models.SourceDestinationType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IpMatchConditionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpMatchCondition model = BinaryData.fromString(
            "{\"type\":\"DestinationIP\",\"prefixType\":\"LongestPrefix\",\"ipPrefixValues\":[\"unnoxyhk\",\"g\",\"ddrihpf\",\"oqcaaewdaomdj\"],\"ipGroupNames\":[\"jxxkzbrmsgei\",\"siykzkdncjdxonbz\"]}")
            .toObject(IpMatchCondition.class);
        Assertions.assertEquals(SourceDestinationType.DESTINATION_IP, model.type());
        Assertions.assertEquals(PrefixType.LONGEST_PREFIX, model.prefixType());
        Assertions.assertEquals("unnoxyhk", model.ipPrefixValues().get(0));
        Assertions.assertEquals("jxxkzbrmsgei", model.ipGroupNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpMatchCondition model = new IpMatchCondition().withType(SourceDestinationType.DESTINATION_IP)
            .withPrefixType(PrefixType.LONGEST_PREFIX)
            .withIpPrefixValues(Arrays.asList("unnoxyhk", "g", "ddrihpf", "oqcaaewdaomdj"))
            .withIpGroupNames(Arrays.asList("jxxkzbrmsgei", "siykzkdncjdxonbz"));
        model = BinaryData.fromObject(model).toObject(IpMatchCondition.class);
        Assertions.assertEquals(SourceDestinationType.DESTINATION_IP, model.type());
        Assertions.assertEquals(PrefixType.LONGEST_PREFIX, model.prefixType());
        Assertions.assertEquals("unnoxyhk", model.ipPrefixValues().get(0));
        Assertions.assertEquals("jxxkzbrmsgei", model.ipGroupNames().get(0));
    }
}
