// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.InternetGatewayRuleInner;
import com.azure.resourcemanager.managednetworkfabric.models.Action;
import com.azure.resourcemanager.managednetworkfabric.models.InternetGatewayRulesListResult;
import com.azure.resourcemanager.managednetworkfabric.models.RuleProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class InternetGatewayRulesListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InternetGatewayRulesListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"ruleProperties\":{\"action\":\"Allow\",\"addressList\":[\"v\",\"hlaiwd\",\"xsmlz\",\"hzdtxetlgydlh\"]},\"provisioningState\":\"Succeeded\",\"internetGatewayIds\":[\"pxy\",\"afiqgeaarbgjekg\",\"klbyulidwcw\"],\"annotation\":\"zegjonfhjirwgdn\"},\"location\":\"brfkspz\",\"tags\":{\"jcitdigsxcdglj\":\"tk\",\"tomflrytswfpf\":\"lkeuac\",\"lurlpshhkvp\":\"dgycxnmskwhqjjy\",\"skondcbrwimu\":\"dwqslsrhmpqvw\"},\"id\":\"qejo\",\"name\":\"ovyrrleaesinu\",\"type\":\"tljqobbpih\"},{\"properties\":{\"ruleProperties\":{\"action\":\"Deny\",\"addressList\":[\"ecybmrqbrj\",\"bmpxdlvykfrexc\",\"s\",\"qwjksghudgz\"]},\"provisioningState\":\"Deleting\",\"internetGatewayIds\":[\"ggsvoujkxibdaf\",\"rkmdyom\"],\"annotation\":\"fbvfbhdy\"},\"location\":\"hpwpgddeimawzovg\",\"tags\":{\"sqowxwc\":\"muikjcjcaztbws\"},\"id\":\"mlikytw\",\"name\":\"czcswka\",\"type\":\"ve\"},{\"properties\":{\"ruleProperties\":{\"action\":\"Deny\",\"addressList\":[\"dvlvhbwrnfxtgdd\"]},\"provisioningState\":\"Accepted\",\"internetGatewayIds\":[\"hn\",\"naoyank\",\"oe\",\"swankltytmh\"],\"annotation\":\"oznnhdrlktgj\"},\"location\":\"gguxhemlwyw\",\"tags\":{\"bukklels\":\"czg\",\"srlsmd\":\"xblycsxzuj\"},\"id\":\"sqplpvmjcd\",\"name\":\"ewbidyvteowxv\",\"type\":\"piudeugfsxzecpa\"},{\"properties\":{\"ruleProperties\":{\"action\":\"Deny\",\"addressList\":[\"ufykhvuhxepmru\",\"znabaobns\"]},\"provisioningState\":\"Accepted\",\"internetGatewayIds\":[\"ltymkmvguihywart\",\"pphkixkykxds\",\"j\",\"emmucfxh\"],\"annotation\":\"kflrmymy\"},\"location\":\"cqlh\",\"tags\":{\"uugqk\":\"wslmiiiovgqcg\"},\"id\":\"totiowlxteqdptjg\",\"name\":\"dtguk\",\"type\":\"anblwphqlkccu\"}],\"nextLink\":\"ygqwahoiu\"}")
            .toObject(InternetGatewayRulesListResult.class);
        Assertions.assertEquals("brfkspz", model.value().get(0).location());
        Assertions.assertEquals("tk", model.value().get(0).tags().get("jcitdigsxcdglj"));
        Assertions.assertEquals(Action.ALLOW, model.value().get(0).ruleProperties().action());
        Assertions.assertEquals("v", model.value().get(0).ruleProperties().addressList().get(0));
        Assertions.assertEquals("zegjonfhjirwgdn", model.value().get(0).annotation());
        Assertions.assertEquals("ygqwahoiu", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InternetGatewayRulesListResult model = new InternetGatewayRulesListResult().withValue(Arrays.asList(
            new InternetGatewayRuleInner().withLocation("brfkspz")
                .withTags(mapOf("jcitdigsxcdglj", "tk", "tomflrytswfpf", "lkeuac", "lurlpshhkvp", "dgycxnmskwhqjjy",
                    "skondcbrwimu", "dwqslsrhmpqvw"))
                .withRuleProperties(new RuleProperties().withAction(Action.ALLOW)
                    .withAddressList(Arrays.asList("v", "hlaiwd", "xsmlz", "hzdtxetlgydlh")))
                .withAnnotation("zegjonfhjirwgdn"),
            new InternetGatewayRuleInner().withLocation("hpwpgddeimawzovg")
                .withTags(mapOf("sqowxwc", "muikjcjcaztbws"))
                .withRuleProperties(new RuleProperties().withAction(Action.DENY)
                    .withAddressList(Arrays.asList("ecybmrqbrj", "bmpxdlvykfrexc", "s", "qwjksghudgz")))
                .withAnnotation("fbvfbhdy"),
            new InternetGatewayRuleInner().withLocation("gguxhemlwyw")
                .withTags(mapOf("bukklels", "czg", "srlsmd", "xblycsxzuj"))
                .withRuleProperties(
                    new RuleProperties().withAction(Action.DENY).withAddressList(Arrays.asList("dvlvhbwrnfxtgdd")))
                .withAnnotation("oznnhdrlktgj"),
            new InternetGatewayRuleInner().withLocation("cqlh")
                .withTags(mapOf("uugqk", "wslmiiiovgqcg"))
                .withRuleProperties(new RuleProperties().withAction(Action.DENY)
                    .withAddressList(Arrays.asList("ufykhvuhxepmru", "znabaobns")))
                .withAnnotation("kflrmymy")))
            .withNextLink("ygqwahoiu");
        model = BinaryData.fromObject(model).toObject(InternetGatewayRulesListResult.class);
        Assertions.assertEquals("brfkspz", model.value().get(0).location());
        Assertions.assertEquals("tk", model.value().get(0).tags().get("jcitdigsxcdglj"));
        Assertions.assertEquals(Action.ALLOW, model.value().get(0).ruleProperties().action());
        Assertions.assertEquals("v", model.value().get(0).ruleProperties().addressList().get(0));
        Assertions.assertEquals("zegjonfhjirwgdn", model.value().get(0).annotation());
        Assertions.assertEquals("ygqwahoiu", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
