// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managednetworkfabric.models.AllowASOverride;
import com.azure.resourcemanager.managednetworkfabric.models.BfdConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.BooleanEnumProperty;
import com.azure.resourcemanager.managednetworkfabric.models.InternalNetworkPropertiesBgpConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.NeighborAddress;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InternalNetworkPropertiesBgpConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InternalNetworkPropertiesBgpConfiguration model = BinaryData.fromString(
            "{\"bfdConfiguration\":{\"administrativeState\":\"MAT\",\"intervalInMilliSeconds\":479544259,\"multiplier\":2023428837},\"defaultRouteOriginate\":\"True\",\"allowAS\":313574832,\"allowASOverride\":\"Disable\",\"fabricASN\":9116002011177336524,\"peerASN\":6420721020164105387,\"ipv4ListenRangePrefixes\":[\"ncq\",\"azqicqchygtv\",\"byjanep\",\"bdpkxyqvgx\"],\"ipv6ListenRangePrefixes\":[\"detv\"],\"ipv4NeighborAddress\":[{\"address\":\"dxuwsaifm\",\"configurationState\":\"Succeeded\"},{\"address\":\"s\",\"configurationState\":\"PendingCommit\"},{\"address\":\"hg\",\"configurationState\":\"Deprovisioned\"},{\"address\":\"cknjolgj\",\"configurationState\":\"Succeeded\"}],\"ipv6NeighborAddress\":[{\"address\":\"lszerqzevx\",\"configurationState\":\"ErrorDeprovisioning\"},{\"address\":\"ntxwaljglzob\",\"configurationState\":\"Succeeded\"}],\"annotation\":\"afrqulhm\"}")
            .toObject(InternalNetworkPropertiesBgpConfiguration.class);
        Assertions.assertEquals("afrqulhm", model.annotation());
        Assertions.assertEquals(479544259, model.bfdConfiguration().intervalInMilliSeconds());
        Assertions.assertEquals(2023428837, model.bfdConfiguration().multiplier());
        Assertions.assertEquals(BooleanEnumProperty.TRUE, model.defaultRouteOriginate());
        Assertions.assertEquals(313574832, model.allowAS());
        Assertions.assertEquals(AllowASOverride.DISABLE, model.allowASOverride());
        Assertions.assertEquals(6420721020164105387L, model.peerAsn());
        Assertions.assertEquals("ncq", model.ipv4ListenRangePrefixes().get(0));
        Assertions.assertEquals("detv", model.ipv6ListenRangePrefixes().get(0));
        Assertions.assertEquals("dxuwsaifm", model.ipv4NeighborAddress().get(0).address());
        Assertions.assertEquals("lszerqzevx", model.ipv6NeighborAddress().get(0).address());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InternalNetworkPropertiesBgpConfiguration model
            = new InternalNetworkPropertiesBgpConfiguration().withAnnotation("afrqulhm")
                .withBfdConfiguration(
                    new BfdConfiguration().withIntervalInMilliSeconds(479544259).withMultiplier(2023428837))
                .withDefaultRouteOriginate(BooleanEnumProperty.TRUE)
                .withAllowAS(313574832)
                .withAllowASOverride(AllowASOverride.DISABLE)
                .withPeerAsn(6420721020164105387L)
                .withIpv4ListenRangePrefixes(Arrays.asList("ncq", "azqicqchygtv", "byjanep", "bdpkxyqvgx"))
                .withIpv6ListenRangePrefixes(Arrays.asList("detv"))
                .withIpv4NeighborAddress(Arrays.asList(new NeighborAddress().withAddress("dxuwsaifm"),
                    new NeighborAddress().withAddress("s"), new NeighborAddress().withAddress("hg"),
                    new NeighborAddress().withAddress("cknjolgj")))
                .withIpv6NeighborAddress(Arrays.asList(new NeighborAddress().withAddress("lszerqzevx"),
                    new NeighborAddress().withAddress("ntxwaljglzob")));
        model = BinaryData.fromObject(model).toObject(InternalNetworkPropertiesBgpConfiguration.class);
        Assertions.assertEquals("afrqulhm", model.annotation());
        Assertions.assertEquals(479544259, model.bfdConfiguration().intervalInMilliSeconds());
        Assertions.assertEquals(2023428837, model.bfdConfiguration().multiplier());
        Assertions.assertEquals(BooleanEnumProperty.TRUE, model.defaultRouteOriginate());
        Assertions.assertEquals(313574832, model.allowAS());
        Assertions.assertEquals(AllowASOverride.DISABLE, model.allowASOverride());
        Assertions.assertEquals(6420721020164105387L, model.peerAsn());
        Assertions.assertEquals("ncq", model.ipv4ListenRangePrefixes().get(0));
        Assertions.assertEquals("detv", model.ipv6ListenRangePrefixes().get(0));
        Assertions.assertEquals("dxuwsaifm", model.ipv4NeighborAddress().get(0).address());
        Assertions.assertEquals("lszerqzevx", model.ipv6NeighborAddress().get(0).address());
    }
}
