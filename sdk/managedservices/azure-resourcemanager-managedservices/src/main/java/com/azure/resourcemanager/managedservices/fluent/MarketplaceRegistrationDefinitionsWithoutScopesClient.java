// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedservices.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managedservices.fluent.models.MarketplaceRegistrationDefinitionInner;

/**
 * An instance of this class provides access to all the operations defined in
 * MarketplaceRegistrationDefinitionsWithoutScopesClient.
 */
public interface MarketplaceRegistrationDefinitionsWithoutScopesClient {
    /**
     * Gets a list of the marketplace registration definitions for the marketplace identifier.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the marketplace registration definitions for the marketplace identifier.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MarketplaceRegistrationDefinitionInner> list();

    /**
     * Gets a list of the marketplace registration definitions for the marketplace identifier.
     *
     * @param filter The filter query parameter. Might be used to filter marketplace registration definition by plan
     *     identifier, publisher, version etc.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the marketplace registration definitions for the marketplace identifier.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MarketplaceRegistrationDefinitionInner> list(String filter, Context context);

    /**
     * Get the marketplace registration definition for the marketplace identifier.
     *
     * @param marketplaceIdentifier Market place identifer. Expected Formats -
     *     {publisher}.{product[-preview]}.{planName}.{version} or {publisher}.{product[-preview]}.{planName} or
     *     {publisher}.{product[-preview]} or {publisher}).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the marketplace registration definition for the marketplace identifier.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MarketplaceRegistrationDefinitionInner get(String marketplaceIdentifier);

    /**
     * Get the marketplace registration definition for the marketplace identifier.
     *
     * @param marketplaceIdentifier Market place identifer. Expected Formats -
     *     {publisher}.{product[-preview]}.{planName}.{version} or {publisher}.{product[-preview]}.{planName} or
     *     {publisher}.{product[-preview]} or {publisher}).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the marketplace registration definition for the marketplace identifier.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MarketplaceRegistrationDefinitionInner> getWithResponse(String marketplaceIdentifier, Context context);
}
