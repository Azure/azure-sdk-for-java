/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.machinelearningservices.v2019_05_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.machinelearningservices.v2019_05_01.implementation.MachineLearningServicesManager;
import org.joda.time.DateTime;
import com.microsoft.azure.management.machinelearningservices.v2019_05_01.implementation.WorkspaceInner;

/**
 * Type representing Workspace.
 */
public interface Workspace extends HasInner<WorkspaceInner>, Resource, GroupableResourceCore<MachineLearningServicesManager, WorkspaceInner>, HasResourceGroup, Refreshable<Workspace>, Updatable<Workspace.Update>, HasManager<MachineLearningServicesManager> {
    /**
     * @return the applicationInsights value.
     */
    String applicationInsights();

    /**
     * @return the containerRegistry value.
     */
    String containerRegistry();

    /**
     * @return the creationTime value.
     */
    DateTime creationTime();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the discoveryUrl value.
     */
    String discoveryUrl();

    /**
     * @return the friendlyName value.
     */
    String friendlyName();

    /**
     * @return the identity value.
     */
    Identity identity();

    /**
     * @return the keyVault value.
     */
    String keyVault();

    /**
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * @return the storageAccount value.
     */
    String storageAccount();

    /**
     * @return the workspaceId value.
     */
    String workspaceId();

    /**
     * The entirety of the Workspace definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Workspace definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Workspace definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the Workspace definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the workspace definition allowing to specify ApplicationInsights.
         */
        interface WithApplicationInsights {
            /**
             * Specifies applicationInsights.
             * @param applicationInsights ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created
             * @return the next definition stage
             */
            WithCreate withApplicationInsights(String applicationInsights);
        }

        /**
         * The stage of the workspace definition allowing to specify ContainerRegistry.
         */
        interface WithContainerRegistry {
            /**
             * Specifies containerRegistry.
             * @param containerRegistry ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created
             * @return the next definition stage
             */
            WithCreate withContainerRegistry(String containerRegistry);
        }

        /**
         * The stage of the workspace definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The description of this workspace
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the workspace definition allowing to specify DiscoveryUrl.
         */
        interface WithDiscoveryUrl {
            /**
             * Specifies discoveryUrl.
             * @param discoveryUrl Url for the discovery service to identify regional endpoints for machine learning experimentation services
             * @return the next definition stage
             */
            WithCreate withDiscoveryUrl(String discoveryUrl);
        }

        /**
         * The stage of the workspace definition allowing to specify FriendlyName.
         */
        interface WithFriendlyName {
            /**
             * Specifies friendlyName.
             * @param friendlyName The friendly name for this workspace. This name in mutable
             * @return the next definition stage
             */
            WithCreate withFriendlyName(String friendlyName);
        }

        /**
         * The stage of the workspace definition allowing to specify KeyVault.
         */
        interface WithKeyVault {
            /**
             * Specifies keyVault.
             * @param keyVault ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
             * @return the next definition stage
             */
            WithCreate withKeyVault(String keyVault);
        }

        /**
         * The stage of the workspace definition allowing to specify StorageAccount.
         */
        interface WithStorageAccount {
            /**
             * Specifies storageAccount.
             * @param storageAccount ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
             * @return the next definition stage
             */
            WithCreate withStorageAccount(String storageAccount);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Workspace>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithApplicationInsights, DefinitionStages.WithContainerRegistry, DefinitionStages.WithDescription, DefinitionStages.WithDiscoveryUrl, DefinitionStages.WithFriendlyName, DefinitionStages.WithKeyVault, DefinitionStages.WithStorageAccount {
        }
    }
    /**
     * The template for a Workspace update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Workspace>, Resource.UpdateWithTags<Update>, UpdateStages.WithDescription, UpdateStages.WithFriendlyName {
    }

    /**
     * Grouping of Workspace update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the workspace update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The description of this workspace
             * @return the next update stage
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the workspace update allowing to specify FriendlyName.
         */
        interface WithFriendlyName {
            /**
             * Specifies friendlyName.
             * @param friendlyName The friendly name for this workspace
             * @return the next update stage
             */
            Update withFriendlyName(String friendlyName);
        }

    }
}
