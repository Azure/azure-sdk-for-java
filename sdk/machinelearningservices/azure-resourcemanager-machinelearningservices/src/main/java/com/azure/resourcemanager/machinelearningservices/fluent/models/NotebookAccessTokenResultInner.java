// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The NotebookAccessTokenResult model. */
@Immutable
public final class NotebookAccessTokenResultInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(NotebookAccessTokenResultInner.class);

    /*
     * The notebookResourceId property.
     */
    @JsonProperty(value = "notebookResourceId", access = JsonProperty.Access.WRITE_ONLY)
    private String notebookResourceId;

    /*
     * The hostName property.
     */
    @JsonProperty(value = "hostName", access = JsonProperty.Access.WRITE_ONLY)
    private String hostname;

    /*
     * The publicDns property.
     */
    @JsonProperty(value = "publicDns", access = JsonProperty.Access.WRITE_ONLY)
    private String publicDns;

    /*
     * The accessToken property.
     */
    @JsonProperty(value = "accessToken", access = JsonProperty.Access.WRITE_ONLY)
    private String accessToken;

    /*
     * The tokenType property.
     */
    @JsonProperty(value = "tokenType", access = JsonProperty.Access.WRITE_ONLY)
    private String tokenType;

    /*
     * The expiresIn property.
     */
    @JsonProperty(value = "expiresIn", access = JsonProperty.Access.WRITE_ONLY)
    private Integer expiresIn;

    /*
     * The refreshToken property.
     */
    @JsonProperty(value = "refreshToken", access = JsonProperty.Access.WRITE_ONLY)
    private String refreshToken;

    /*
     * The scope property.
     */
    @JsonProperty(value = "scope", access = JsonProperty.Access.WRITE_ONLY)
    private String scope;

    /**
     * Get the notebookResourceId property: The notebookResourceId property.
     *
     * @return the notebookResourceId value.
     */
    public String notebookResourceId() {
        return this.notebookResourceId;
    }

    /**
     * Get the hostname property: The hostName property.
     *
     * @return the hostname value.
     */
    public String hostname() {
        return this.hostname;
    }

    /**
     * Get the publicDns property: The publicDns property.
     *
     * @return the publicDns value.
     */
    public String publicDns() {
        return this.publicDns;
    }

    /**
     * Get the accessToken property: The accessToken property.
     *
     * @return the accessToken value.
     */
    public String accessToken() {
        return this.accessToken;
    }

    /**
     * Get the tokenType property: The tokenType property.
     *
     * @return the tokenType value.
     */
    public String tokenType() {
        return this.tokenType;
    }

    /**
     * Get the expiresIn property: The expiresIn property.
     *
     * @return the expiresIn value.
     */
    public Integer expiresIn() {
        return this.expiresIn;
    }

    /**
     * Get the refreshToken property: The refreshToken property.
     *
     * @return the refreshToken value.
     */
    public String refreshToken() {
        return this.refreshToken;
    }

    /**
     * Get the scope property: The scope property.
     *
     * @return the scope value.
     */
    public String scope() {
        return this.scope;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
