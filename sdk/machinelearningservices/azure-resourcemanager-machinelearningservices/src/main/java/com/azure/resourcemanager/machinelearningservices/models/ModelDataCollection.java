// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The Model data collection properties. */
@Fluent
public class ModelDataCollection {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ModelDataCollection.class);

    /*
     * Option for enabling/disabling Event Hub.
     */
    @JsonProperty(value = "eventHubEnabled")
    private Boolean eventHubEnabled;

    /*
     * Option for enabling/disabling storage.
     */
    @JsonProperty(value = "storageEnabled")
    private Boolean storageEnabled;

    /**
     * Get the eventHubEnabled property: Option for enabling/disabling Event Hub.
     *
     * @return the eventHubEnabled value.
     */
    public Boolean eventHubEnabled() {
        return this.eventHubEnabled;
    }

    /**
     * Set the eventHubEnabled property: Option for enabling/disabling Event Hub.
     *
     * @param eventHubEnabled the eventHubEnabled value to set.
     * @return the ModelDataCollection object itself.
     */
    public ModelDataCollection withEventHubEnabled(Boolean eventHubEnabled) {
        this.eventHubEnabled = eventHubEnabled;
        return this;
    }

    /**
     * Get the storageEnabled property: Option for enabling/disabling storage.
     *
     * @return the storageEnabled value.
     */
    public Boolean storageEnabled() {
        return this.storageEnabled;
    }

    /**
     * Set the storageEnabled property: Option for enabling/disabling storage.
     *
     * @param storageEnabled the storageEnabled value to set.
     * @return the ModelDataCollection object itself.
     */
    public ModelDataCollection withStorageEnabled(Boolean storageEnabled) {
        this.storageEnabled = storageEnabled;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
