// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** An Image asset. */
@Fluent
public final class ImageAsset {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ImageAsset.class);

    /*
     * The Asset Id.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * The mime type.
     */
    @JsonProperty(value = "mimeType")
    private String mimeType;

    /*
     * The Url of the Asset.
     */
    @JsonProperty(value = "url")
    private String url;

    /*
     * Whether the Asset is unpacked.
     */
    @JsonProperty(value = "unpack")
    private Boolean unpack;

    /**
     * Get the id property: The Asset Id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: The Asset Id.
     *
     * @param id the id value to set.
     * @return the ImageAsset object itself.
     */
    public ImageAsset withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the mimeType property: The mime type.
     *
     * @return the mimeType value.
     */
    public String mimeType() {
        return this.mimeType;
    }

    /**
     * Set the mimeType property: The mime type.
     *
     * @param mimeType the mimeType value to set.
     * @return the ImageAsset object itself.
     */
    public ImageAsset withMimeType(String mimeType) {
        this.mimeType = mimeType;
        return this;
    }

    /**
     * Get the url property: The Url of the Asset.
     *
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Set the url property: The Url of the Asset.
     *
     * @param url the url value to set.
     * @return the ImageAsset object itself.
     */
    public ImageAsset withUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Get the unpack property: Whether the Asset is unpacked.
     *
     * @return the unpack value.
     */
    public Boolean unpack() {
        return this.unpack;
    }

    /**
     * Set the unpack property: Whether the Asset is unpacked.
     *
     * @param unpack the unpack value to set.
     * @return the ImageAsset object itself.
     */
    public ImageAsset withUnpack(Boolean unpack) {
        this.unpack = unpack;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
