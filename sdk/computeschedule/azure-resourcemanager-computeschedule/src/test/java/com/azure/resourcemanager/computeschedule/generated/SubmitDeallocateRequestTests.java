// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.models.DeadlineType;
import com.azure.resourcemanager.computeschedule.models.ExecutionParameters;
import com.azure.resourcemanager.computeschedule.models.OptimizationPreference;
import com.azure.resourcemanager.computeschedule.models.Resources;
import com.azure.resourcemanager.computeschedule.models.RetryPolicy;
import com.azure.resourcemanager.computeschedule.models.Schedule;
import com.azure.resourcemanager.computeschedule.models.SubmitDeallocateRequest;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubmitDeallocateRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubmitDeallocateRequest model = BinaryData.fromString(
            "{\"schedule\":{\"deadLine\":\"2021-10-11T02:15:13Z\",\"timeZone\":\"ijbpzvgnwzsymgl\",\"deadlineType\":\"InitiateAt\"},\"executionParameters\":{\"optimizationPreference\":\"Cost\",\"retryPolicy\":{\"retryCount\":2049014083,\"retryWindowInMinutes\":1760407196}},\"resources\":{\"ids\":[\"bihanuf\",\"fcbjysagithxqha\",\"ifpikxwczby\",\"cnpqxuhivyqniwby\"]},\"correlationid\":\"rkxvdum\"}")
            .toObject(SubmitDeallocateRequest.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-11T02:15:13Z"), model.schedule().deadLine());
        Assertions.assertEquals("ijbpzvgnwzsymgl", model.schedule().timeZone());
        Assertions.assertEquals(DeadlineType.INITIATE_AT, model.schedule().deadlineType());
        Assertions.assertEquals(OptimizationPreference.COST, model.executionParameters().optimizationPreference());
        Assertions.assertEquals(2049014083, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(1760407196, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("bihanuf", model.resources().ids().get(0));
        Assertions.assertEquals("rkxvdum", model.correlationid());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubmitDeallocateRequest model = new SubmitDeallocateRequest()
            .withSchedule(new Schedule().withDeadLine(OffsetDateTime.parse("2021-10-11T02:15:13Z"))
                .withTimeZone("ijbpzvgnwzsymgl")
                .withDeadlineType(DeadlineType.INITIATE_AT))
            .withExecutionParameters(new ExecutionParameters().withOptimizationPreference(OptimizationPreference.COST)
                .withRetryPolicy(new RetryPolicy().withRetryCount(2049014083).withRetryWindowInMinutes(1760407196)))
            .withResources(
                new Resources().withIds(Arrays.asList("bihanuf", "fcbjysagithxqha", "ifpikxwczby", "cnpqxuhivyqniwby")))
            .withCorrelationid("rkxvdum");
        model = BinaryData.fromObject(model).toObject(SubmitDeallocateRequest.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-11T02:15:13Z"), model.schedule().deadLine());
        Assertions.assertEquals("ijbpzvgnwzsymgl", model.schedule().timeZone());
        Assertions.assertEquals(DeadlineType.INITIATE_AT, model.schedule().deadlineType());
        Assertions.assertEquals(OptimizationPreference.COST, model.executionParameters().optimizationPreference());
        Assertions.assertEquals(2049014083, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(1760407196, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("bihanuf", model.resources().ids().get(0));
        Assertions.assertEquals("rkxvdum", model.correlationid());
    }
}
