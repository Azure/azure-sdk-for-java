// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.models.ExecuteHibernateRequest;
import com.azure.resourcemanager.computeschedule.models.ExecutionParameters;
import com.azure.resourcemanager.computeschedule.models.OptimizationPreference;
import com.azure.resourcemanager.computeschedule.models.Resources;
import com.azure.resourcemanager.computeschedule.models.RetryPolicy;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ExecuteHibernateRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExecuteHibernateRequest model = BinaryData.fromString(
            "{\"executionParameters\":{\"optimizationPreference\":\"Cost\",\"retryPolicy\":{\"retryCount\":1862600222,\"retryWindowInMinutes\":2027059656}},\"resources\":{\"ids\":[\"sabkyqduujitcjcz\",\"zevndhkrwpdappds\",\"dkvwrwjfe\"]},\"correlationid\":\"snhu\"}")
            .toObject(ExecuteHibernateRequest.class);
        Assertions.assertEquals(OptimizationPreference.COST, model.executionParameters().optimizationPreference());
        Assertions.assertEquals(1862600222, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(2027059656, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("sabkyqduujitcjcz", model.resources().ids().get(0));
        Assertions.assertEquals("snhu", model.correlationid());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExecuteHibernateRequest model = new ExecuteHibernateRequest()
            .withExecutionParameters(new ExecutionParameters().withOptimizationPreference(OptimizationPreference.COST)
                .withRetryPolicy(new RetryPolicy().withRetryCount(1862600222).withRetryWindowInMinutes(2027059656)))
            .withResources(new Resources().withIds(Arrays.asList("sabkyqduujitcjcz", "zevndhkrwpdappds", "dkvwrwjfe")))
            .withCorrelationid("snhu");
        model = BinaryData.fromObject(model).toObject(ExecuteHibernateRequest.class);
        Assertions.assertEquals(OptimizationPreference.COST, model.executionParameters().optimizationPreference());
        Assertions.assertEquals(1862600222, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(2027059656, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("sabkyqduujitcjcz", model.resources().ids().get(0));
        Assertions.assertEquals("snhu", model.correlationid());
    }
}
