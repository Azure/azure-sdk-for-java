// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.models.DeadlineType;
import com.azure.resourcemanager.computeschedule.models.ExecutionParameters;
import com.azure.resourcemanager.computeschedule.models.Language;
import com.azure.resourcemanager.computeschedule.models.Month;
import com.azure.resourcemanager.computeschedule.models.NotificationProperties;
import com.azure.resourcemanager.computeschedule.models.NotificationType;
import com.azure.resourcemanager.computeschedule.models.OptimizationPreference;
import com.azure.resourcemanager.computeschedule.models.ResourceType;
import com.azure.resourcemanager.computeschedule.models.RetryPolicy;
import com.azure.resourcemanager.computeschedule.models.ScheduledActionType;
import com.azure.resourcemanager.computeschedule.models.ScheduledActionUpdateProperties;
import com.azure.resourcemanager.computeschedule.models.ScheduledActionsSchedule;
import com.azure.resourcemanager.computeschedule.models.WeekDay;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScheduledActionUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScheduledActionUpdateProperties model = BinaryData.fromString(
            "{\"resourceType\":\"VirtualMachine\",\"actionType\":\"Start\",\"startTime\":\"2021-01-14T00:40:13Z\",\"endTime\":\"2021-01-18T17:02:06Z\",\"schedule\":{\"scheduledTime\":\"dt\",\"timeZone\":\"hzrvqd\",\"requestedWeekDays\":[\"Tuesday\",\"Sunday\"],\"requestedMonths\":[\"October\",\"December\"],\"requestedDaysOfTheMonth\":[1370032032,837766841],\"executionParameters\":{\"optimizationPreference\":\"CostAvailabilityBalanced\",\"retryPolicy\":{\"retryCount\":336183826,\"retryWindowInMinutes\":1522081541}},\"deadlineType\":\"Unknown\"},\"notificationSettings\":[{\"destination\":\"ktzlcuiywg\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true}],\"disabled\":true}")
            .toObject(ScheduledActionUpdateProperties.class);
        Assertions.assertEquals(ResourceType.VIRTUAL_MACHINE, model.resourceType());
        Assertions.assertEquals(ScheduledActionType.START, model.actionType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-14T00:40:13Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-18T17:02:06Z"), model.endTime());
        Assertions.assertEquals("dt", model.schedule().scheduledTime());
        Assertions.assertEquals("hzrvqd", model.schedule().timeZone());
        Assertions.assertEquals(WeekDay.TUESDAY, model.schedule().requestedWeekDays().get(0));
        Assertions.assertEquals(Month.OCTOBER, model.schedule().requestedMonths().get(0));
        Assertions.assertEquals(1370032032, model.schedule().requestedDaysOfTheMonth().get(0));
        Assertions.assertEquals(OptimizationPreference.COST_AVAILABILITY_BALANCED,
            model.schedule().executionParameters().optimizationPreference());
        Assertions.assertEquals(336183826, model.schedule().executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(1522081541,
            model.schedule().executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals(DeadlineType.UNKNOWN, model.schedule().deadlineType());
        Assertions.assertEquals("ktzlcuiywg", model.notificationSettings().get(0).destination());
        Assertions.assertEquals(NotificationType.EMAIL, model.notificationSettings().get(0).type());
        Assertions.assertEquals(Language.EN_US, model.notificationSettings().get(0).language());
        Assertions.assertTrue(model.notificationSettings().get(0).disabled());
        Assertions.assertTrue(model.disabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScheduledActionUpdateProperties model = new ScheduledActionUpdateProperties()
            .withResourceType(ResourceType.VIRTUAL_MACHINE)
            .withActionType(ScheduledActionType.START)
            .withStartTime(OffsetDateTime.parse("2021-01-14T00:40:13Z"))
            .withEndTime(OffsetDateTime.parse("2021-01-18T17:02:06Z"))
            .withSchedule(new ScheduledActionsSchedule().withScheduledTime("dt")
                .withTimeZone("hzrvqd")
                .withRequestedWeekDays(Arrays.asList(WeekDay.TUESDAY, WeekDay.SUNDAY))
                .withRequestedMonths(Arrays.asList(Month.OCTOBER, Month.DECEMBER))
                .withRequestedDaysOfTheMonth(Arrays.asList(1370032032, 837766841))
                .withExecutionParameters(new ExecutionParameters()
                    .withOptimizationPreference(OptimizationPreference.COST_AVAILABILITY_BALANCED)
                    .withRetryPolicy(new RetryPolicy().withRetryCount(336183826).withRetryWindowInMinutes(1522081541)))
                .withDeadlineType(DeadlineType.UNKNOWN))
            .withNotificationSettings(Arrays.asList(new NotificationProperties().withDestination("ktzlcuiywg")
                .withType(NotificationType.EMAIL)
                .withLanguage(Language.EN_US)
                .withDisabled(true)))
            .withDisabled(true);
        model = BinaryData.fromObject(model).toObject(ScheduledActionUpdateProperties.class);
        Assertions.assertEquals(ResourceType.VIRTUAL_MACHINE, model.resourceType());
        Assertions.assertEquals(ScheduledActionType.START, model.actionType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-14T00:40:13Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-18T17:02:06Z"), model.endTime());
        Assertions.assertEquals("dt", model.schedule().scheduledTime());
        Assertions.assertEquals("hzrvqd", model.schedule().timeZone());
        Assertions.assertEquals(WeekDay.TUESDAY, model.schedule().requestedWeekDays().get(0));
        Assertions.assertEquals(Month.OCTOBER, model.schedule().requestedMonths().get(0));
        Assertions.assertEquals(1370032032, model.schedule().requestedDaysOfTheMonth().get(0));
        Assertions.assertEquals(OptimizationPreference.COST_AVAILABILITY_BALANCED,
            model.schedule().executionParameters().optimizationPreference());
        Assertions.assertEquals(336183826, model.schedule().executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(1522081541,
            model.schedule().executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals(DeadlineType.UNKNOWN, model.schedule().deadlineType());
        Assertions.assertEquals("ktzlcuiywg", model.notificationSettings().get(0).destination());
        Assertions.assertEquals(NotificationType.EMAIL, model.notificationSettings().get(0).type());
        Assertions.assertEquals(Language.EN_US, model.notificationSettings().get(0).language());
        Assertions.assertTrue(model.notificationSettings().get(0).disabled());
        Assertions.assertTrue(model.disabled());
    }
}
