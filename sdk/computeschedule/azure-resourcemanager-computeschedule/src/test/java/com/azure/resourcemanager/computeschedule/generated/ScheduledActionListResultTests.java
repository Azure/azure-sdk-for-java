// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.implementation.models.ScheduledActionListResult;
import com.azure.resourcemanager.computeschedule.models.DeadlineType;
import com.azure.resourcemanager.computeschedule.models.Language;
import com.azure.resourcemanager.computeschedule.models.Month;
import com.azure.resourcemanager.computeschedule.models.NotificationType;
import com.azure.resourcemanager.computeschedule.models.OptimizationPreference;
import com.azure.resourcemanager.computeschedule.models.ResourceType;
import com.azure.resourcemanager.computeschedule.models.ScheduledActionType;
import com.azure.resourcemanager.computeschedule.models.WeekDay;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ScheduledActionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScheduledActionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"resourceType\":\"VirtualMachineScaleSet\",\"actionType\":\"Start\",\"startTime\":\"2021-03-27T22:11:53Z\",\"endTime\":\"2021-09-20T08:20:08Z\",\"schedule\":{\"scheduledTime\":\"phrcgyncoc\",\"timeZone\":\"ecfvmm\",\"requestedWeekDays\":[\"Tuesday\"],\"requestedMonths\":[\"June\",\"June\",\"November\",\"December\"],\"requestedDaysOfTheMonth\":[164546469,1343274314],\"executionParameters\":{\"optimizationPreference\":\"Availability\",\"retryPolicy\":{}},\"deadlineType\":\"Unknown\"},\"notificationSettings\":[{\"destination\":\"c\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true},{\"destination\":\"kwlzuvccfwnfn\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false}],\"disabled\":true,\"provisioningState\":\"Canceled\"},\"location\":\"x\",\"tags\":{\"bqqwxrj\":\"gtzxdpn\"},\"id\":\"eallnwsubisnj\",\"name\":\"mpmngnzscxaqwoo\",\"type\":\"hcbonqvpkvlr\"},{\"properties\":{\"resourceType\":\"VirtualMachine\",\"actionType\":\"Start\",\"startTime\":\"2021-04-17T15:50:50Z\",\"endTime\":\"2021-10-21T11:16:02Z\",\"schedule\":{\"scheduledTime\":\"ipheoflokeyyien\",\"timeZone\":\"bdlwtgrhpdjpj\",\"requestedWeekDays\":[\"All\",\"Thursday\",\"Saturday\",\"All\"],\"requestedMonths\":[\"All\"],\"requestedDaysOfTheMonth\":[958851014,1063088657,184362773,973371108],\"executionParameters\":{\"optimizationPreference\":\"Availability\",\"retryPolicy\":{}},\"deadlineType\":\"Unknown\"},\"notificationSettings\":[{\"destination\":\"hejjz\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true},{\"destination\":\"gwdslfhotwm\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true},{\"destination\":\"lbjnpgacftadehx\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true}],\"disabled\":true,\"provisioningState\":\"Failed\"},\"location\":\"suesnzw\",\"tags\":{\"xzdmohctb\":\"bavo\",\"ndnvo\":\"vudwx\",\"lazjdyggdtjixhbk\":\"gujjugwdkcglh\"},\"id\":\"ofqweykhmenevfye\",\"name\":\"fwhybcibvy\",\"type\":\"dcsi\"},{\"properties\":{\"resourceType\":\"VirtualMachineScaleSet\",\"actionType\":\"Hibernate\",\"startTime\":\"2021-05-28T22:29:37Z\",\"endTime\":\"2021-01-25T02:11:12Z\",\"schedule\":{\"scheduledTime\":\"dectehfiqsc\",\"timeZone\":\"eypvhezrkg\",\"requestedWeekDays\":[\"Monday\",\"Sunday\",\"All\"],\"requestedMonths\":[\"May\",\"June\"],\"requestedDaysOfTheMonth\":[450468139,34828913,509090660,668805249],\"executionParameters\":{\"optimizationPreference\":\"Cost\",\"retryPolicy\":{}},\"deadlineType\":\"Unknown\"},\"notificationSettings\":[{\"destination\":\"yqjpkcatt\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false}],\"disabled\":false,\"provisioningState\":\"Deleting\"},\"location\":\"qpjhvmda\",\"tags\":{\"q\":\"ysou\",\"yhltrpmopjmcm\":\"canoaeupf\"},\"id\":\"tuo\",\"name\":\"thfuiuaodsfcpkvx\",\"type\":\"dpuozmyz\"}],\"nextLink\":\"agfuaxbezyiu\"}")
            .toObject(ScheduledActionListResult.class);
        Assertions.assertEquals("x", model.value().get(0).location());
        Assertions.assertEquals("gtzxdpn", model.value().get(0).tags().get("bqqwxrj"));
        Assertions.assertEquals(ResourceType.VIRTUAL_MACHINE_SCALE_SET,
            model.value().get(0).properties().resourceType());
        Assertions.assertEquals(ScheduledActionType.START, model.value().get(0).properties().actionType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-27T22:11:53Z"),
            model.value().get(0).properties().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-20T08:20:08Z"),
            model.value().get(0).properties().endTime());
        Assertions.assertEquals("phrcgyncoc", model.value().get(0).properties().schedule().scheduledTime());
        Assertions.assertEquals("ecfvmm", model.value().get(0).properties().schedule().timeZone());
        Assertions.assertEquals(WeekDay.TUESDAY,
            model.value().get(0).properties().schedule().requestedWeekDays().get(0));
        Assertions.assertEquals(Month.JUNE, model.value().get(0).properties().schedule().requestedMonths().get(0));
        Assertions.assertEquals(164546469,
            model.value().get(0).properties().schedule().requestedDaysOfTheMonth().get(0));
        Assertions.assertEquals(OptimizationPreference.AVAILABILITY,
            model.value().get(0).properties().schedule().executionParameters().optimizationPreference());
        Assertions.assertEquals(DeadlineType.UNKNOWN, model.value().get(0).properties().schedule().deadlineType());
        Assertions.assertEquals("c", model.value().get(0).properties().notificationSettings().get(0).destination());
        Assertions.assertEquals(NotificationType.EMAIL,
            model.value().get(0).properties().notificationSettings().get(0).type());
        Assertions.assertEquals(Language.EN_US,
            model.value().get(0).properties().notificationSettings().get(0).language());
        Assertions.assertTrue(model.value().get(0).properties().notificationSettings().get(0).disabled());
        Assertions.assertTrue(model.value().get(0).properties().disabled());
        Assertions.assertEquals("agfuaxbezyiu", model.nextLink());
    }
}
