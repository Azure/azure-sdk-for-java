// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.models.DeadlineType;
import com.azure.resourcemanager.computeschedule.models.ExecutionParameters;
import com.azure.resourcemanager.computeschedule.models.OptimizationPreference;
import com.azure.resourcemanager.computeschedule.models.Resources;
import com.azure.resourcemanager.computeschedule.models.RetryPolicy;
import com.azure.resourcemanager.computeschedule.models.Schedule;
import com.azure.resourcemanager.computeschedule.models.SubmitHibernateRequest;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubmitHibernateRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubmitHibernateRequest model = BinaryData.fromString(
            "{\"schedule\":{\"deadLine\":\"2021-11-13T06:20:15Z\",\"timeZone\":\"ahbc\",\"deadlineType\":\"InitiateAt\"},\"executionParameters\":{\"optimizationPreference\":\"CostAvailabilityBalanced\",\"retryPolicy\":{\"retryCount\":1276886479,\"retryWindowInMinutes\":491201544}},\"resources\":{\"ids\":[\"gexpaojakhmsbz\",\"hcrzevd\",\"hlxaolthqtr\",\"qjbpfzfsin\"]},\"correlationid\":\"gvfcj\"}")
            .toObject(SubmitHibernateRequest.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-13T06:20:15Z"), model.schedule().deadLine());
        Assertions.assertEquals("ahbc", model.schedule().timeZone());
        Assertions.assertEquals(DeadlineType.INITIATE_AT, model.schedule().deadlineType());
        Assertions.assertEquals(OptimizationPreference.COST_AVAILABILITY_BALANCED,
            model.executionParameters().optimizationPreference());
        Assertions.assertEquals(1276886479, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(491201544, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("gexpaojakhmsbz", model.resources().ids().get(0));
        Assertions.assertEquals("gvfcj", model.correlationid());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubmitHibernateRequest model = new SubmitHibernateRequest()
            .withSchedule(new Schedule().withDeadLine(OffsetDateTime.parse("2021-11-13T06:20:15Z"))
                .withTimeZone("ahbc")
                .withDeadlineType(DeadlineType.INITIATE_AT))
            .withExecutionParameters(
                new ExecutionParameters().withOptimizationPreference(OptimizationPreference.COST_AVAILABILITY_BALANCED)
                    .withRetryPolicy(new RetryPolicy().withRetryCount(1276886479).withRetryWindowInMinutes(491201544)))
            .withResources(
                new Resources().withIds(Arrays.asList("gexpaojakhmsbz", "hcrzevd", "hlxaolthqtr", "qjbpfzfsin")))
            .withCorrelationid("gvfcj");
        model = BinaryData.fromObject(model).toObject(SubmitHibernateRequest.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-13T06:20:15Z"), model.schedule().deadLine());
        Assertions.assertEquals("ahbc", model.schedule().timeZone());
        Assertions.assertEquals(DeadlineType.INITIATE_AT, model.schedule().deadlineType());
        Assertions.assertEquals(OptimizationPreference.COST_AVAILABILITY_BALANCED,
            model.executionParameters().optimizationPreference());
        Assertions.assertEquals(1276886479, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(491201544, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("gexpaojakhmsbz", model.resources().ids().get(0));
        Assertions.assertEquals("gvfcj", model.correlationid());
    }
}
