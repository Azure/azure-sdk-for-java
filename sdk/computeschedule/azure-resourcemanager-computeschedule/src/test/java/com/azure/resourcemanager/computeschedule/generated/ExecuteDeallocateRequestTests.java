// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.models.ExecuteDeallocateRequest;
import com.azure.resourcemanager.computeschedule.models.ExecutionParameters;
import com.azure.resourcemanager.computeschedule.models.OptimizationPreference;
import com.azure.resourcemanager.computeschedule.models.Resources;
import com.azure.resourcemanager.computeschedule.models.RetryPolicy;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ExecuteDeallocateRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExecuteDeallocateRequest model = BinaryData.fromString(
            "{\"executionParameters\":{\"optimizationPreference\":\"Cost\",\"retryPolicy\":{\"retryCount\":2070892597,\"retryWindowInMinutes\":412158498}},\"resources\":{\"ids\":[\"sntnbybkzgcw\",\"wclxxwrl\",\"douskcqvkocrcjdk\",\"tnhxbn\"]},\"correlationid\":\"biksq\"}")
            .toObject(ExecuteDeallocateRequest.class);
        Assertions.assertEquals(OptimizationPreference.COST, model.executionParameters().optimizationPreference());
        Assertions.assertEquals(2070892597, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(412158498, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("sntnbybkzgcw", model.resources().ids().get(0));
        Assertions.assertEquals("biksq", model.correlationid());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExecuteDeallocateRequest model = new ExecuteDeallocateRequest()
            .withExecutionParameters(new ExecutionParameters().withOptimizationPreference(OptimizationPreference.COST)
                .withRetryPolicy(new RetryPolicy().withRetryCount(2070892597).withRetryWindowInMinutes(412158498)))
            .withResources(
                new Resources().withIds(Arrays.asList("sntnbybkzgcw", "wclxxwrl", "douskcqvkocrcjdk", "tnhxbn")))
            .withCorrelationid("biksq");
        model = BinaryData.fromObject(model).toObject(ExecuteDeallocateRequest.class);
        Assertions.assertEquals(OptimizationPreference.COST, model.executionParameters().optimizationPreference());
        Assertions.assertEquals(2070892597, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(412158498, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("sntnbybkzgcw", model.resources().ids().get(0));
        Assertions.assertEquals("biksq", model.correlationid());
    }
}
