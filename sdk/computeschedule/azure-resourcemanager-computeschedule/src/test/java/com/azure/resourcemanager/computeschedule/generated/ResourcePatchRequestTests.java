// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.fluent.models.ScheduledActionResourceInner;
import com.azure.resourcemanager.computeschedule.models.Language;
import com.azure.resourcemanager.computeschedule.models.NotificationProperties;
import com.azure.resourcemanager.computeschedule.models.NotificationType;
import com.azure.resourcemanager.computeschedule.models.ResourcePatchRequest;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourcePatchRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourcePatchRequest model = BinaryData.fromString(
            "{\"resources\":[{\"name\":\"j\",\"id\":\"uujqgidokgjljyo\",\"type\":\"vcltbgsncgh\",\"resourceId\":\"jeszzhbijhtxfv\",\"notificationSettings\":[{\"destination\":\"fsm\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true}]},{\"name\":\"pvecxgodeb\",\"id\":\"qkkrb\",\"type\":\"ukgri\",\"resourceId\":\"flz\",\"notificationSettings\":[{\"destination\":\"xzpuzycisp\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true},{\"destination\":\"mgkbrpyydhibn\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false},{\"destination\":\"ik\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false}]},{\"name\":\"tqagnbuynh\",\"id\":\"jggmebfsiarbu\",\"type\":\"cvpnazzmhjrunmpx\",\"resourceId\":\"tdbhrbnla\",\"notificationSettings\":[{\"destination\":\"myskpbhenbtkcxy\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false},{\"destination\":\"rsyn\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false}]},{\"name\":\"by\",\"id\":\"czfc\",\"type\":\"aaxdbabphlwrq\",\"resourceId\":\"fkts\",\"notificationSettings\":[{\"destination\":\"ucoc\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false},{\"destination\":\"zt\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false},{\"destination\":\"rq\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true},{\"destination\":\"kzywbiex\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false}]}]}")
            .toObject(ResourcePatchRequest.class);
        Assertions.assertEquals("jeszzhbijhtxfv", model.resources().get(0).resourceId());
        Assertions.assertEquals("fsm", model.resources().get(0).notificationSettings().get(0).destination());
        Assertions.assertEquals(NotificationType.EMAIL, model.resources().get(0).notificationSettings().get(0).type());
        Assertions.assertEquals(Language.EN_US, model.resources().get(0).notificationSettings().get(0).language());
        Assertions.assertTrue(model.resources().get(0).notificationSettings().get(0).disabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourcePatchRequest model = new ResourcePatchRequest().withResources(Arrays.asList(
            new ScheduledActionResourceInner().withResourceId("jeszzhbijhtxfv")
                .withNotificationSettings(Arrays.asList(new NotificationProperties().withDestination("fsm")
                    .withType(NotificationType.EMAIL)
                    .withLanguage(Language.EN_US)
                    .withDisabled(true))),
            new ScheduledActionResourceInner().withResourceId("flz")
                .withNotificationSettings(Arrays.asList(
                    new NotificationProperties().withDestination("xzpuzycisp")
                        .withType(NotificationType.EMAIL)
                        .withLanguage(Language.EN_US)
                        .withDisabled(true),
                    new NotificationProperties().withDestination("mgkbrpyydhibn")
                        .withType(NotificationType.EMAIL)
                        .withLanguage(Language.EN_US)
                        .withDisabled(false),
                    new NotificationProperties().withDestination("ik")
                        .withType(NotificationType.EMAIL)
                        .withLanguage(Language.EN_US)
                        .withDisabled(false))),
            new ScheduledActionResourceInner().withResourceId("tdbhrbnla")
                .withNotificationSettings(Arrays.asList(
                    new NotificationProperties().withDestination("myskpbhenbtkcxy")
                        .withType(NotificationType.EMAIL)
                        .withLanguage(Language.EN_US)
                        .withDisabled(false),
                    new NotificationProperties().withDestination("rsyn")
                        .withType(NotificationType.EMAIL)
                        .withLanguage(Language.EN_US)
                        .withDisabled(false))),
            new ScheduledActionResourceInner().withResourceId("fkts")
                .withNotificationSettings(Arrays.asList(
                    new NotificationProperties().withDestination("ucoc")
                        .withType(NotificationType.EMAIL)
                        .withLanguage(Language.EN_US)
                        .withDisabled(false),
                    new NotificationProperties().withDestination("zt")
                        .withType(NotificationType.EMAIL)
                        .withLanguage(Language.EN_US)
                        .withDisabled(false),
                    new NotificationProperties().withDestination("rq")
                        .withType(NotificationType.EMAIL)
                        .withLanguage(Language.EN_US)
                        .withDisabled(true),
                    new NotificationProperties().withDestination("kzywbiex")
                        .withType(NotificationType.EMAIL)
                        .withLanguage(Language.EN_US)
                        .withDisabled(false)))));
        model = BinaryData.fromObject(model).toObject(ResourcePatchRequest.class);
        Assertions.assertEquals("jeszzhbijhtxfv", model.resources().get(0).resourceId());
        Assertions.assertEquals("fsm", model.resources().get(0).notificationSettings().get(0).destination());
        Assertions.assertEquals(NotificationType.EMAIL, model.resources().get(0).notificationSettings().get(0).type());
        Assertions.assertEquals(Language.EN_US, model.resources().get(0).notificationSettings().get(0).language());
        Assertions.assertTrue(model.resources().get(0).notificationSettings().get(0).disabled());
    }
}
