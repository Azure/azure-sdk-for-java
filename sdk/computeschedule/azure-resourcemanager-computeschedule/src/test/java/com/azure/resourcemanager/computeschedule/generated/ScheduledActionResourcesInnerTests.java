// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.fluent.models.ScheduledActionResourcesInner;
import com.azure.resourcemanager.computeschedule.models.DeadlineType;
import com.azure.resourcemanager.computeschedule.models.Language;
import com.azure.resourcemanager.computeschedule.models.Month;
import com.azure.resourcemanager.computeschedule.models.NotificationType;
import com.azure.resourcemanager.computeschedule.models.OptimizationPreference;
import com.azure.resourcemanager.computeschedule.models.ResourceType;
import com.azure.resourcemanager.computeschedule.models.ScheduledActionType;
import com.azure.resourcemanager.computeschedule.models.WeekDay;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ScheduledActionResourcesInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScheduledActionResourcesInner model = BinaryData.fromString(
            "{\"properties\":{\"resourceType\":\"VirtualMachine\",\"actionType\":\"Start\",\"startTime\":\"2021-06-16T02:23:20Z\",\"endTime\":\"2020-12-27T11:26:29Z\",\"schedule\":{\"scheduledTime\":\"bckhsmtxpsi\",\"timeZone\":\"btfhvpesaps\",\"requestedWeekDays\":[\"Tuesday\",\"Friday\",\"Sunday\",\"All\"],\"requestedMonths\":[\"October\",\"October\"],\"requestedDaysOfTheMonth\":[871941711,1056627326],\"executionParameters\":{\"optimizationPreference\":\"Availability\",\"retryPolicy\":{\"retryCount\":1234804558,\"retryWindowInMinutes\":1335454628}},\"deadlineType\":\"Unknown\"},\"notificationSettings\":[{\"destination\":\"cwscwsvlx\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true},{\"destination\":\"wrupqsxvnmicykvc\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false},{\"destination\":\"lo\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true},{\"destination\":\"fj\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false}],\"disabled\":false,\"provisioningState\":\"Succeeded\",\"resourceNotificationSettings\":[{\"destination\":\"bttk\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true},{\"destination\":\"nv\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false},{\"destination\":\"ermclfplphoxuscr\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":false}]},\"id\":\"psbjta\",\"name\":\"qugxywpmueefjzwf\",\"type\":\"kqujidsuyono\"}")
            .toObject(ScheduledActionResourcesInner.class);
        Assertions.assertEquals(ResourceType.VIRTUAL_MACHINE, model.properties().resourceType());
        Assertions.assertEquals(ScheduledActionType.START, model.properties().actionType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-16T02:23:20Z"), model.properties().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-27T11:26:29Z"), model.properties().endTime());
        Assertions.assertEquals("bckhsmtxpsi", model.properties().schedule().scheduledTime());
        Assertions.assertEquals("btfhvpesaps", model.properties().schedule().timeZone());
        Assertions.assertEquals(WeekDay.TUESDAY, model.properties().schedule().requestedWeekDays().get(0));
        Assertions.assertEquals(Month.OCTOBER, model.properties().schedule().requestedMonths().get(0));
        Assertions.assertEquals(871941711, model.properties().schedule().requestedDaysOfTheMonth().get(0));
        Assertions.assertEquals(OptimizationPreference.AVAILABILITY,
            model.properties().schedule().executionParameters().optimizationPreference());
        Assertions.assertEquals(1234804558,
            model.properties().schedule().executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(1335454628,
            model.properties().schedule().executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals(DeadlineType.UNKNOWN, model.properties().schedule().deadlineType());
        Assertions.assertEquals("cwscwsvlx", model.properties().notificationSettings().get(0).destination());
        Assertions.assertEquals(NotificationType.EMAIL, model.properties().notificationSettings().get(0).type());
        Assertions.assertEquals(Language.EN_US, model.properties().notificationSettings().get(0).language());
        Assertions.assertTrue(model.properties().notificationSettings().get(0).disabled());
        Assertions.assertFalse(model.properties().disabled());
    }
}
