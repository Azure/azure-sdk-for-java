// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.models.ActionType;
import com.azure.resourcemanager.computeschedule.models.DeadlineType;
import com.azure.resourcemanager.computeschedule.models.ExecutionParameters;
import com.azure.resourcemanager.computeschedule.models.Language;
import com.azure.resourcemanager.computeschedule.models.Month;
import com.azure.resourcemanager.computeschedule.models.NotificationProperties;
import com.azure.resourcemanager.computeschedule.models.NotificationType;
import com.azure.resourcemanager.computeschedule.models.OptimizationPreference;
import com.azure.resourcemanager.computeschedule.models.ResourceType;
import com.azure.resourcemanager.computeschedule.models.RetryPolicy;
import com.azure.resourcemanager.computeschedule.models.ScheduledActionProperties;
import com.azure.resourcemanager.computeschedule.models.ScheduledActionsSchedule;
import com.azure.resourcemanager.computeschedule.models.WeekDay;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScheduledActionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScheduledActionProperties model = BinaryData.fromString(
            "{\"resourceType\":\"VirtualMachineScaleSet\",\"actionType\":\"Hibernate\",\"startTime\":\"2021-07-23T07:35:18Z\",\"endTime\":\"2021-08-03T08:21:01Z\",\"schedule\":{\"scheduledTime\":\"ulpkudjkrl\",\"timeZone\":\"hbzhfepg\",\"requestedWeekDays\":[\"Tuesday\",\"Monday\",\"Friday\"],\"requestedMonths\":[\"All\"],\"requestedDaysOfTheMonth\":[208705149,1054800376,1323879070,149734817],\"executionParameters\":{\"optimizationPreference\":\"Cost\",\"retryPolicy\":{\"retryCount\":2010275395,\"retryWindowInMinutes\":78216934}},\"deadlineType\":\"Unknown\"},\"notificationSettings\":[{\"destination\":\"l\",\"type\":\"Email\",\"language\":\"en-us\",\"disabled\":true}],\"disabled\":false,\"provisioningState\":\"Deleting\"}")
            .toObject(ScheduledActionProperties.class);
        Assertions.assertEquals(ResourceType.VIRTUAL_MACHINE_SCALE_SET, model.resourceType());
        Assertions.assertEquals(ActionType.HIBERNATE, model.actionType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-23T07:35:18Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-03T08:21:01Z"), model.endTime());
        Assertions.assertEquals("ulpkudjkrl", model.schedule().scheduledTime());
        Assertions.assertEquals("hbzhfepg", model.schedule().timeZone());
        Assertions.assertEquals(WeekDay.TUESDAY, model.schedule().requestedWeekDays().get(0));
        Assertions.assertEquals(Month.ALL, model.schedule().requestedMonths().get(0));
        Assertions.assertEquals(208705149, model.schedule().requestedDaysOfTheMonth().get(0));
        Assertions.assertEquals(OptimizationPreference.COST,
            model.schedule().executionParameters().optimizationPreference());
        Assertions.assertEquals(2010275395, model.schedule().executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(78216934, model.schedule().executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals(DeadlineType.UNKNOWN, model.schedule().deadlineType());
        Assertions.assertEquals("l", model.notificationSettings().get(0).destination());
        Assertions.assertEquals(NotificationType.EMAIL, model.notificationSettings().get(0).type());
        Assertions.assertEquals(Language.EN_US, model.notificationSettings().get(0).language());
        Assertions.assertTrue(model.notificationSettings().get(0).disabled());
        Assertions.assertFalse(model.disabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScheduledActionProperties model = new ScheduledActionProperties()
            .withResourceType(ResourceType.VIRTUAL_MACHINE_SCALE_SET)
            .withActionType(ActionType.HIBERNATE)
            .withStartTime(OffsetDateTime.parse("2021-07-23T07:35:18Z"))
            .withEndTime(OffsetDateTime.parse("2021-08-03T08:21:01Z"))
            .withSchedule(new ScheduledActionsSchedule().withScheduledTime("ulpkudjkrl")
                .withTimeZone("hbzhfepg")
                .withRequestedWeekDays(Arrays.asList(WeekDay.TUESDAY, WeekDay.MONDAY, WeekDay.FRIDAY))
                .withRequestedMonths(Arrays.asList(Month.ALL))
                .withRequestedDaysOfTheMonth(Arrays.asList(208705149, 1054800376, 1323879070, 149734817))
                .withExecutionParameters(new ExecutionParameters()
                    .withOptimizationPreference(OptimizationPreference.COST)
                    .withRetryPolicy(new RetryPolicy().withRetryCount(2010275395).withRetryWindowInMinutes(78216934)))
                .withDeadlineType(DeadlineType.UNKNOWN))
            .withNotificationSettings(Arrays.asList(new NotificationProperties().withDestination("l")
                .withType(NotificationType.EMAIL)
                .withLanguage(Language.EN_US)
                .withDisabled(true)))
            .withDisabled(false);
        model = BinaryData.fromObject(model).toObject(ScheduledActionProperties.class);
        Assertions.assertEquals(ResourceType.VIRTUAL_MACHINE_SCALE_SET, model.resourceType());
        Assertions.assertEquals(ActionType.HIBERNATE, model.actionType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-23T07:35:18Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-03T08:21:01Z"), model.endTime());
        Assertions.assertEquals("ulpkudjkrl", model.schedule().scheduledTime());
        Assertions.assertEquals("hbzhfepg", model.schedule().timeZone());
        Assertions.assertEquals(WeekDay.TUESDAY, model.schedule().requestedWeekDays().get(0));
        Assertions.assertEquals(Month.ALL, model.schedule().requestedMonths().get(0));
        Assertions.assertEquals(208705149, model.schedule().requestedDaysOfTheMonth().get(0));
        Assertions.assertEquals(OptimizationPreference.COST,
            model.schedule().executionParameters().optimizationPreference());
        Assertions.assertEquals(2010275395, model.schedule().executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(78216934, model.schedule().executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals(DeadlineType.UNKNOWN, model.schedule().deadlineType());
        Assertions.assertEquals("l", model.notificationSettings().get(0).destination());
        Assertions.assertEquals(NotificationType.EMAIL, model.notificationSettings().get(0).type());
        Assertions.assertEquals(Language.EN_US, model.notificationSettings().get(0).language());
        Assertions.assertTrue(model.notificationSettings().get(0).disabled());
        Assertions.assertFalse(model.disabled());
    }
}
