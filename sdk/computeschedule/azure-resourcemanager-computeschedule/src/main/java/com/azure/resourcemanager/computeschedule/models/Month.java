// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Representation of the months available selection in a gregorian calendar.
 */
public final class Month extends ExpandableStringEnum<Month> {
    /**
     * The January month.
     */
    public static final Month JANUARY = fromString("January");

    /**
     * The February month.
     */
    public static final Month FEBRUARY = fromString("February");

    /**
     * The March month.
     */
    public static final Month MARCH = fromString("March");

    /**
     * The April month.
     */
    public static final Month APRIL = fromString("April");

    /**
     * The May month.
     */
    public static final Month MAY = fromString("May");

    /**
     * The June month.
     */
    public static final Month JUNE = fromString("June");

    /**
     * The July month.
     */
    public static final Month JULY = fromString("July");

    /**
     * The August month.
     */
    public static final Month AUGUST = fromString("August");

    /**
     * The September month.
     */
    public static final Month SEPTEMBER = fromString("September");

    /**
     * The October month.
     */
    public static final Month OCTOBER = fromString("October");

    /**
     * The November month.
     */
    public static final Month NOVEMBER = fromString("November");

    /**
     * The December month.
     */
    public static final Month DECEMBER = fromString("December");

    /**
     * All months.
     */
    public static final Month ALL = fromString("All");

    /**
     * Creates a new instance of Month value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public Month() {
    }

    /**
     * Creates or finds a Month from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding Month.
     */
    public static Month fromString(String name) {
        return fromString(name, Month.class);
    }

    /**
     * Gets known Month values.
     * 
     * @return known Month values.
     */
    public static Collection<Month> values() {
        return values(Month.class);
    }
}
