// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.computeschedule.fluent.models.ScheduledActionInner;
import com.azure.resourcemanager.computeschedule.models.CancelOccurrenceRequest;
import com.azure.resourcemanager.computeschedule.models.Occurrence;
import com.azure.resourcemanager.computeschedule.models.ResourceAttachRequest;
import com.azure.resourcemanager.computeschedule.models.ResourceDetachRequest;
import com.azure.resourcemanager.computeschedule.models.ResourceOperationResponse;
import com.azure.resourcemanager.computeschedule.models.ResourcePatchRequest;
import com.azure.resourcemanager.computeschedule.models.ScheduledAction;
import com.azure.resourcemanager.computeschedule.models.ScheduledActionProperties;
import java.util.Collections;
import java.util.Map;

public final class ScheduledActionImpl implements ScheduledAction, ScheduledAction.Definition, ScheduledAction.Update {
    private ScheduledActionInner innerObject;

    private final com.azure.resourcemanager.computeschedule.ComputeScheduleManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ScheduledActionProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ScheduledActionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.computeschedule.ComputeScheduleManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String scheduledActionName;

    public ScheduledActionImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public ScheduledAction create() {
        this.innerObject = serviceManager.serviceClient()
            .getScheduledActions()
            .createOrUpdate(resourceGroupName, scheduledActionName, this.innerModel(), Context.NONE);
        return this;
    }

    public ScheduledAction create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getScheduledActions()
            .createOrUpdate(resourceGroupName, scheduledActionName, this.innerModel(), context);
        return this;
    }

    ScheduledActionImpl(String name, com.azure.resourcemanager.computeschedule.ComputeScheduleManager serviceManager) {
        this.innerObject = new ScheduledActionInner();
        this.serviceManager = serviceManager;
        this.scheduledActionName = name;
    }

    public ScheduledActionImpl update() {
        return this;
    }

    public ScheduledAction apply() {
        this.innerObject = serviceManager.serviceClient()
            .getScheduledActions()
            .updateWithResponse(resourceGroupName, scheduledActionName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public ScheduledAction apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getScheduledActions()
            .updateWithResponse(resourceGroupName, scheduledActionName, this.innerModel(), context)
            .getValue();
        return this;
    }

    ScheduledActionImpl(ScheduledActionInner innerObject,
        com.azure.resourcemanager.computeschedule.ComputeScheduleManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.scheduledActionName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "scheduledActions");
    }

    public ScheduledAction refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getScheduledActions()
            .getByResourceGroupWithResponse(resourceGroupName, scheduledActionName, Context.NONE)
            .getValue();
        return this;
    }

    public ScheduledAction refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getScheduledActions()
            .getByResourceGroupWithResponse(resourceGroupName, scheduledActionName, context)
            .getValue();
        return this;
    }

    public Response<ResourceOperationResponse> attachResourcesWithResponse(ResourceAttachRequest body,
        Context context) {
        return serviceManager.scheduledActions()
            .attachResourcesWithResponse(resourceGroupName, scheduledActionName, body, context);
    }

    public ResourceOperationResponse attachResources(ResourceAttachRequest body) {
        return serviceManager.scheduledActions().attachResources(resourceGroupName, scheduledActionName, body);
    }

    public Response<ResourceOperationResponse> detachResourcesWithResponse(ResourceDetachRequest body,
        Context context) {
        return serviceManager.scheduledActions()
            .detachResourcesWithResponse(resourceGroupName, scheduledActionName, body, context);
    }

    public ResourceOperationResponse detachResources(ResourceDetachRequest body) {
        return serviceManager.scheduledActions().detachResources(resourceGroupName, scheduledActionName, body);
    }

    public Response<ResourceOperationResponse> patchResourcesWithResponse(ResourcePatchRequest body, Context context) {
        return serviceManager.scheduledActions()
            .patchResourcesWithResponse(resourceGroupName, scheduledActionName, body, context);
    }

    public ResourceOperationResponse patchResources(ResourcePatchRequest body) {
        return serviceManager.scheduledActions().patchResources(resourceGroupName, scheduledActionName, body);
    }

    public Response<Void> disableWithResponse(Context context) {
        return serviceManager.scheduledActions().disableWithResponse(resourceGroupName, scheduledActionName, context);
    }

    public void disable() {
        serviceManager.scheduledActions().disable(resourceGroupName, scheduledActionName);
    }

    public Response<Void> enableWithResponse(Context context) {
        return serviceManager.scheduledActions().enableWithResponse(resourceGroupName, scheduledActionName, context);
    }

    public void enable() {
        serviceManager.scheduledActions().enable(resourceGroupName, scheduledActionName);
    }

    public Response<ResourceOperationResponse> cancelNextOccurrenceWithResponse(CancelOccurrenceRequest body,
        Context context) {
        return serviceManager.scheduledActions()
            .cancelNextOccurrenceWithResponse(resourceGroupName, scheduledActionName, body, context);
    }

    public ResourceOperationResponse cancelNextOccurrence(CancelOccurrenceRequest body) {
        return serviceManager.scheduledActions().cancelNextOccurrence(resourceGroupName, scheduledActionName, body);
    }

    public Response<Occurrence> triggerManualOccurrenceWithResponse(Context context) {
        return serviceManager.scheduledActions()
            .triggerManualOccurrenceWithResponse(resourceGroupName, scheduledActionName, context);
    }

    public Occurrence triggerManualOccurrence() {
        return serviceManager.scheduledActions().triggerManualOccurrence(resourceGroupName, scheduledActionName);
    }

    public ScheduledActionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ScheduledActionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ScheduledActionImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public ScheduledActionImpl withProperties(ScheduledActionProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
