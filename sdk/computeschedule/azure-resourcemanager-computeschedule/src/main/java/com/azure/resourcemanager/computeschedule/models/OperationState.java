// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Values that define the states of operations in Scheduled Actions.
 */
public final class OperationState extends ExpandableStringEnum<OperationState> {
    /**
     * Static value Unknown for OperationState.
     */
    public static final OperationState UNKNOWN = fromString("Unknown");

    /**
     * Static value PendingScheduling for OperationState.
     */
    public static final OperationState PENDING_SCHEDULING = fromString("PendingScheduling");

    /**
     * Static value Scheduled for OperationState.
     */
    public static final OperationState SCHEDULED = fromString("Scheduled");

    /**
     * Static value PendingExecution for OperationState.
     */
    public static final OperationState PENDING_EXECUTION = fromString("PendingExecution");

    /**
     * Static value Executing for OperationState.
     */
    public static final OperationState EXECUTING = fromString("Executing");

    /**
     * Static value Succeeded for OperationState.
     */
    public static final OperationState SUCCEEDED = fromString("Succeeded");

    /**
     * Static value Failed for OperationState.
     */
    public static final OperationState FAILED = fromString("Failed");

    /**
     * Static value Cancelled for OperationState.
     */
    public static final OperationState CANCELLED = fromString("Cancelled");

    /**
     * Static value Blocked for OperationState.
     */
    public static final OperationState BLOCKED = fromString("Blocked");

    /**
     * Creates a new instance of OperationState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public OperationState() {
    }

    /**
     * Creates or finds a OperationState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding OperationState.
     */
    public static OperationState fromString(String name) {
        return fromString(name, OperationState.class);
    }

    /**
     * Gets known OperationState values.
     * 
     * @return known OperationState values.
     */
    public static Collection<OperationState> values() {
        return values(OperationState.class);
    }
}
