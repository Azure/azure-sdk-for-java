// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The state the occurrence is at a given time.
 */
public final class OccurrenceState extends ExpandableStringEnum<OccurrenceState> {
    /**
     * The occurrence was created.
     */
    public static final OccurrenceState CREATED = fromString("Created");

    /**
     * The occurrence is being rescheduled.
     */
    public static final OccurrenceState RESCHEDULING = fromString("Rescheduling");

    /**
     * The occurrence has been scheduled.
     */
    public static final OccurrenceState SCHEDULED = fromString("Scheduled");

    /**
     * The occurrence has successfully ran.
     */
    public static final OccurrenceState SUCCEEDED = fromString("Succeeded");

    /**
     * The occurrence has failed during its scheduling.
     */
    public static final OccurrenceState FAILED = fromString("Failed");

    /**
     * The occurrence is going through cancellation.
     */
    public static final OccurrenceState CANCELLING = fromString("Cancelling");

    /**
     * The occurrence has been canceled.
     */
    public static final OccurrenceState CANCELED = fromString("Canceled");

    /**
     * Creates a new instance of OccurrenceState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public OccurrenceState() {
    }

    /**
     * Creates or finds a OccurrenceState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding OccurrenceState.
     */
    public static OccurrenceState fromString(String name) {
        return fromString(name, OccurrenceState.class);
    }

    /**
     * Gets known OccurrenceState values.
     * 
     * @return known OccurrenceState values.
     */
    public static Collection<OccurrenceState> values() {
        return values(OccurrenceState.class);
    }
}
