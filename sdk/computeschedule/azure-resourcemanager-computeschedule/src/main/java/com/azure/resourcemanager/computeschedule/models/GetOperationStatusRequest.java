// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * This is the request to get operation status using operationids.
 */
@Fluent
public final class GetOperationStatusRequest implements JsonSerializable<GetOperationStatusRequest> {
    /*
     * The list of operation ids to get the status of
     */
    private List<String> operationIds;

    /*
     * Correlationid item
     */
    private String correlationid;

    /**
     * Creates an instance of GetOperationStatusRequest class.
     */
    public GetOperationStatusRequest() {
    }

    /**
     * Get the operationIds property: The list of operation ids to get the status of.
     * 
     * @return the operationIds value.
     */
    public List<String> operationIds() {
        return this.operationIds;
    }

    /**
     * Set the operationIds property: The list of operation ids to get the status of.
     * 
     * @param operationIds the operationIds value to set.
     * @return the GetOperationStatusRequest object itself.
     */
    public GetOperationStatusRequest withOperationIds(List<String> operationIds) {
        this.operationIds = operationIds;
        return this;
    }

    /**
     * Get the correlationid property: Correlationid item.
     * 
     * @return the correlationid value.
     */
    public String correlationid() {
        return this.correlationid;
    }

    /**
     * Set the correlationid property: Correlationid item.
     * 
     * @param correlationid the correlationid value to set.
     * @return the GetOperationStatusRequest object itself.
     */
    public GetOperationStatusRequest withCorrelationid(String correlationid) {
        this.correlationid = correlationid;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (operationIds() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property operationIds in model GetOperationStatusRequest"));
        }
        if (correlationid() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property correlationid in model GetOperationStatusRequest"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(GetOperationStatusRequest.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("operationIds", this.operationIds, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("correlationid", this.correlationid);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GetOperationStatusRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GetOperationStatusRequest if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the GetOperationStatusRequest.
     */
    public static GetOperationStatusRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GetOperationStatusRequest deserializedGetOperationStatusRequest = new GetOperationStatusRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("operationIds".equals(fieldName)) {
                    List<String> operationIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedGetOperationStatusRequest.operationIds = operationIds;
                } else if ("correlationid".equals(fieldName)) {
                    deserializedGetOperationStatusRequest.correlationid = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGetOperationStatusRequest;
        });
    }
}
