// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computerecommender.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computerecommender.fluent.models.SpotPlacementScoresResponseInner;
import org.junit.jupiter.api.Assertions;

public final class SpotPlacementScoresResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SpotPlacementScoresResponseInner model = BinaryData.fromString(
            "{\"desiredLocations\":[\"aqwi\",\"jsprozvcpute\",\"jvwmfda\"],\"desiredSizes\":[{\"sku\":\"dvpjhulsuuvmk\"}],\"desiredCount\":1523765181,\"availabilityZones\":false,\"placementScores\":[{\"sku\":\"dio\",\"region\":\"pslwejdpvw\",\"availabilityZone\":\"oqpsoa\",\"score\":\"tazak\",\"isQuotaAvailable\":true}]}")
            .toObject(SpotPlacementScoresResponseInner.class);
        Assertions.assertEquals("aqwi", model.desiredLocations().get(0));
        Assertions.assertEquals("dvpjhulsuuvmk", model.desiredSizes().get(0).sku());
        Assertions.assertEquals(1523765181, model.desiredCount());
        Assertions.assertFalse(model.availabilityZones());
        Assertions.assertEquals("dio", model.placementScores().get(0).sku());
        Assertions.assertEquals("pslwejdpvw", model.placementScores().get(0).region());
        Assertions.assertEquals("oqpsoa", model.placementScores().get(0).availabilityZone());
        Assertions.assertEquals("tazak", model.placementScores().get(0).score());
        Assertions.assertTrue(model.placementScores().get(0).isQuotaAvailable());
    }
}
