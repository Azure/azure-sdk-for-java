// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computerecommender.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computerecommender.models.ResourceSize;
import com.azure.resourcemanager.computerecommender.models.SpotPlacementScoresInput;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SpotPlacementScoresInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SpotPlacementScoresInput model = BinaryData.fromString(
            "{\"desiredLocations\":[\"umjgrtfwvuk\",\"gaudcc\",\"nhsjcnyej\"],\"desiredSizes\":[{\"sku\":\"htnapczwlokjyem\"},{\"sku\":\"vnipjox\"},{\"sku\":\"nchgej\"},{\"sku\":\"odmailzyd\"}],\"desiredCount\":52138230,\"availabilityZones\":true}")
            .toObject(SpotPlacementScoresInput.class);
        Assertions.assertEquals("umjgrtfwvuk", model.desiredLocations().get(0));
        Assertions.assertEquals("htnapczwlokjyem", model.desiredSizes().get(0).sku());
        Assertions.assertEquals(52138230, model.desiredCount());
        Assertions.assertTrue(model.availabilityZones());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SpotPlacementScoresInput model
            = new SpotPlacementScoresInput().withDesiredLocations(Arrays.asList("umjgrtfwvuk", "gaudcc", "nhsjcnyej"))
                .withDesiredSizes(
                    Arrays.asList(new ResourceSize().withSku("htnapczwlokjyem"), new ResourceSize().withSku("vnipjox"),
                        new ResourceSize().withSku("nchgej"), new ResourceSize().withSku("odmailzyd")))
                .withDesiredCount(52138230)
                .withAvailabilityZones(true);
        model = BinaryData.fromObject(model).toObject(SpotPlacementScoresInput.class);
        Assertions.assertEquals("umjgrtfwvuk", model.desiredLocations().get(0));
        Assertions.assertEquals("htnapczwlokjyem", model.desiredSizes().get(0).sku());
        Assertions.assertEquals(52138230, model.desiredCount());
        Assertions.assertTrue(model.availabilityZones());
    }
}
