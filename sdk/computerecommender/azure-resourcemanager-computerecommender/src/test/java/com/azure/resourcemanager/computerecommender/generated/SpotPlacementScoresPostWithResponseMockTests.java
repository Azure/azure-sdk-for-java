// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computerecommender.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.computerecommender.ComputeRecommenderManager;
import com.azure.resourcemanager.computerecommender.models.ResourceSize;
import com.azure.resourcemanager.computerecommender.models.SpotPlacementScoresInput;
import com.azure.resourcemanager.computerecommender.models.SpotPlacementScoresResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SpotPlacementScoresPostWithResponseMockTests {
    @Test
    public void testPostWithResponse() throws Exception {
        String responseStr
            = "{\"desiredLocations\":[\"wrwclxxwrljd\",\"uskcqvkocrcj\",\"kwt\",\"hxbnjbiksqrg\"],\"desiredSizes\":[{\"sku\":\"inqpjwnzll\"},{\"sku\":\"mppeebvmgxs\"},{\"sku\":\"kyqduujit\"}],\"desiredCount\":1447556622,\"availabilityZones\":true,\"placementScores\":[{\"sku\":\"ndhkrw\",\"region\":\"appd\",\"availabilityZone\":\"dkvwrwjfe\",\"score\":\"nhutjeltmrldhugj\",\"isQuotaAvailable\":true},{\"sku\":\"tqxhocdgeab\",\"region\":\"phut\",\"availabilityZone\":\"ndv\",\"score\":\"ozwyiftyhxhuro\",\"isQuotaAvailable\":true}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ComputeRecommenderManager manager = ComputeRecommenderManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SpotPlacementScoresResponse response = manager.spotPlacementScores()
            .postWithResponse("eofjaeqjh",
                new SpotPlacementScoresInput().withDesiredLocations(Arrays.asList("asvm"))
                    .withDesiredSizes(Arrays.asList(new ResourceSize().withSku("ulngsntn")))
                    .withDesiredCount(588307069)
                    .withAvailabilityZones(false),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("wrwclxxwrljd", response.desiredLocations().get(0));
        Assertions.assertEquals("inqpjwnzll", response.desiredSizes().get(0).sku());
        Assertions.assertEquals(1447556622, response.desiredCount());
        Assertions.assertTrue(response.availabilityZones());
        Assertions.assertEquals("ndhkrw", response.placementScores().get(0).sku());
        Assertions.assertEquals("appd", response.placementScores().get(0).region());
        Assertions.assertEquals("dkvwrwjfe", response.placementScores().get(0).availabilityZone());
        Assertions.assertEquals("nhutjeltmrldhugj", response.placementScores().get(0).score());
        Assertions.assertTrue(response.placementScores().get(0).isQuotaAvailable());
    }
}
