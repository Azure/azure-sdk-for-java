// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computerecommender.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.computerecommender.fluent.SpotPlacementScoresClient;
import com.azure.resourcemanager.computerecommender.fluent.models.ComputeDiagnosticBaseInner;
import com.azure.resourcemanager.computerecommender.fluent.models.SpotPlacementScoresResponseInner;
import com.azure.resourcemanager.computerecommender.models.ComputeDiagnosticBase;
import com.azure.resourcemanager.computerecommender.models.SpotPlacementScores;
import com.azure.resourcemanager.computerecommender.models.SpotPlacementScoresInput;
import com.azure.resourcemanager.computerecommender.models.SpotPlacementScoresResponse;

public final class SpotPlacementScoresImpl implements SpotPlacementScores {
    private static final ClientLogger LOGGER = new ClientLogger(SpotPlacementScoresImpl.class);

    private final SpotPlacementScoresClient innerClient;

    private final com.azure.resourcemanager.computerecommender.ComputeRecommenderManager serviceManager;

    public SpotPlacementScoresImpl(SpotPlacementScoresClient innerClient,
        com.azure.resourcemanager.computerecommender.ComputeRecommenderManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ComputeDiagnosticBase> getWithResponse(String location, Context context) {
        Response<ComputeDiagnosticBaseInner> inner = this.serviceClient().getWithResponse(location, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ComputeDiagnosticBaseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ComputeDiagnosticBase get(String location) {
        ComputeDiagnosticBaseInner inner = this.serviceClient().get(location);
        if (inner != null) {
            return new ComputeDiagnosticBaseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SpotPlacementScoresResponse> postWithResponse(String location,
        SpotPlacementScoresInput spotPlacementScoresInput, Context context) {
        Response<SpotPlacementScoresResponseInner> inner
            = this.serviceClient().postWithResponse(location, spotPlacementScoresInput, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SpotPlacementScoresResponseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SpotPlacementScoresResponse post(String location, SpotPlacementScoresInput spotPlacementScoresInput) {
        SpotPlacementScoresResponseInner inner = this.serviceClient().post(location, spotPlacementScoresInput);
        if (inner != null) {
            return new SpotPlacementScoresResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private SpotPlacementScoresClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.computerecommender.ComputeRecommenderManager manager() {
        return this.serviceManager;
    }
}
