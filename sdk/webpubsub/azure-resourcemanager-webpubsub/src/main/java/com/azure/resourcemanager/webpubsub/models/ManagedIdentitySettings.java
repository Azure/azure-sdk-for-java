// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.webpubsub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Managed identity settings for upstream.
 */
@Fluent
public final class ManagedIdentitySettings implements JsonSerializable<ManagedIdentitySettings> {
    /*
     * The Resource indicating the App ID URI of the target resource.
     * It also appears in the aud (audience) claim of the issued token.
     */
    private String resource;

    /**
     * Creates an instance of ManagedIdentitySettings class.
     */
    public ManagedIdentitySettings() {
    }

    /**
     * Get the resource property: The Resource indicating the App ID URI of the target resource.
     * It also appears in the aud (audience) claim of the issued token.
     * 
     * @return the resource value.
     */
    public String resource() {
        return this.resource;
    }

    /**
     * Set the resource property: The Resource indicating the App ID URI of the target resource.
     * It also appears in the aud (audience) claim of the issued token.
     * 
     * @param resource the resource value to set.
     * @return the ManagedIdentitySettings object itself.
     */
    public ManagedIdentitySettings withResource(String resource) {
        this.resource = resource;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resource", this.resource);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedIdentitySettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedIdentitySettings if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManagedIdentitySettings.
     */
    public static ManagedIdentitySettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedIdentitySettings deserializedManagedIdentitySettings = new ManagedIdentitySettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resource".equals(fieldName)) {
                    deserializedManagedIdentitySettings.resource = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedIdentitySettings;
        });
    }
}
