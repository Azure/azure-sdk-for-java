// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.webpubsub.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.webpubsub.fluent.WebPubSubReplicaSharedPrivateLinkResourcesClient;
import com.azure.resourcemanager.webpubsub.fluent.models.SharedPrivateLinkResourceInner;
import com.azure.resourcemanager.webpubsub.models.SharedPrivateLinkResource;
import com.azure.resourcemanager.webpubsub.models.WebPubSubReplicaSharedPrivateLinkResources;

public final class WebPubSubReplicaSharedPrivateLinkResourcesImpl
    implements WebPubSubReplicaSharedPrivateLinkResources {
    private static final ClientLogger LOGGER = new ClientLogger(WebPubSubReplicaSharedPrivateLinkResourcesImpl.class);

    private final WebPubSubReplicaSharedPrivateLinkResourcesClient innerClient;

    private final com.azure.resourcemanager.webpubsub.WebPubSubManager serviceManager;

    public WebPubSubReplicaSharedPrivateLinkResourcesImpl(WebPubSubReplicaSharedPrivateLinkResourcesClient innerClient,
        com.azure.resourcemanager.webpubsub.WebPubSubManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<SharedPrivateLinkResource> list(String resourceGroupName, String resourceName,
        String replicaName) {
        PagedIterable<SharedPrivateLinkResourceInner> inner
            = this.serviceClient().list(resourceGroupName, resourceName, replicaName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SharedPrivateLinkResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SharedPrivateLinkResource> list(String resourceGroupName, String resourceName,
        String replicaName, Context context) {
        PagedIterable<SharedPrivateLinkResourceInner> inner
            = this.serviceClient().list(resourceGroupName, resourceName, replicaName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SharedPrivateLinkResourceImpl(inner1, this.manager()));
    }

    public Response<SharedPrivateLinkResource> getWithResponse(String resourceGroupName, String resourceName,
        String replicaName, String sharedPrivateLinkResourceName, Context context) {
        Response<SharedPrivateLinkResourceInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, resourceName, replicaName, sharedPrivateLinkResourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SharedPrivateLinkResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SharedPrivateLinkResource get(String resourceGroupName, String resourceName, String replicaName,
        String sharedPrivateLinkResourceName) {
        SharedPrivateLinkResourceInner inner
            = this.serviceClient().get(resourceGroupName, resourceName, replicaName, sharedPrivateLinkResourceName);
        if (inner != null) {
            return new SharedPrivateLinkResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public SharedPrivateLinkResource createOrUpdate(String resourceGroupName, String resourceName, String replicaName,
        String sharedPrivateLinkResourceName, SharedPrivateLinkResourceInner parameters) {
        SharedPrivateLinkResourceInner inner = this.serviceClient()
            .createOrUpdate(resourceGroupName, resourceName, replicaName, sharedPrivateLinkResourceName, parameters);
        if (inner != null) {
            return new SharedPrivateLinkResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public SharedPrivateLinkResource createOrUpdate(String resourceGroupName, String resourceName, String replicaName,
        String sharedPrivateLinkResourceName, SharedPrivateLinkResourceInner parameters, Context context) {
        SharedPrivateLinkResourceInner inner = this.serviceClient()
            .createOrUpdate(resourceGroupName, resourceName, replicaName, sharedPrivateLinkResourceName, parameters,
                context);
        if (inner != null) {
            return new SharedPrivateLinkResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private WebPubSubReplicaSharedPrivateLinkResourcesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.webpubsub.WebPubSubManager manager() {
        return this.serviceManager;
    }
}
