// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.webpubsub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.webpubsub.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.webpubsub.models.PrivateEndpoint;
import com.azure.resourcemanager.webpubsub.models.PrivateEndpointConnectionList;
import com.azure.resourcemanager.webpubsub.models.PrivateLinkServiceConnectionState;
import com.azure.resourcemanager.webpubsub.models.PrivateLinkServiceConnectionStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"provisioningState\":\"Moving\",\"privateEndpoint\":{\"id\":\"knfd\"},\"groupIds\":[\"jchrdgoihxumw\",\"ton\"],\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"udfdlwgg\",\"actionsRequired\":\"sb\"}},\"id\":\"ovvtgseinqfiu\",\"name\":\"x\",\"type\":\"knpirgnepttwq\"},{\"properties\":{\"provisioningState\":\"Updating\",\"privateEndpoint\":{\"id\":\"cdm\"},\"groupIds\":[\"ojlpijnkrxf\"],\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"ratiz\",\"actionsRequired\":\"onasxifto\"}},\"id\":\"yzhftwesgogczh\",\"name\":\"nnxk\",\"type\":\"lgnyhmo\"}],\"nextLink\":\"xkk\"}")
                .toObject(PrivateEndpointConnectionList.class);
        Assertions.assertEquals("knfd", model.value().get(0).privateEndpoint().id());
        Assertions
            .assertEquals(
                PrivateLinkServiceConnectionStatus.DISCONNECTED,
                model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("udfdlwgg", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("sb", model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("xkk", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionList model =
            new PrivateEndpointConnectionList()
                .withValue(
                    Arrays
                        .asList(
                            new PrivateEndpointConnectionInner()
                                .withPrivateEndpoint(new PrivateEndpoint().withId("knfd"))
                                .withPrivateLinkServiceConnectionState(
                                    new PrivateLinkServiceConnectionState()
                                        .withStatus(PrivateLinkServiceConnectionStatus.DISCONNECTED)
                                        .withDescription("udfdlwgg")
                                        .withActionsRequired("sb")),
                            new PrivateEndpointConnectionInner()
                                .withPrivateEndpoint(new PrivateEndpoint().withId("cdm"))
                                .withPrivateLinkServiceConnectionState(
                                    new PrivateLinkServiceConnectionState()
                                        .withStatus(PrivateLinkServiceConnectionStatus.APPROVED)
                                        .withDescription("ratiz")
                                        .withActionsRequired("onasxifto"))))
                .withNextLink("xkk");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionList.class);
        Assertions.assertEquals("knfd", model.value().get(0).privateEndpoint().id());
        Assertions
            .assertEquals(
                PrivateLinkServiceConnectionStatus.DISCONNECTED,
                model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("udfdlwgg", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("sb", model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("xkk", model.nextLink());
    }
}
