// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.webpubsub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.webpubsub.fluent.models.WebPubSubResourceInner;
import com.azure.resourcemanager.webpubsub.models.AclAction;
import com.azure.resourcemanager.webpubsub.models.IpRule;
import com.azure.resourcemanager.webpubsub.models.LiveTraceCategory;
import com.azure.resourcemanager.webpubsub.models.LiveTraceConfiguration;
import com.azure.resourcemanager.webpubsub.models.ManagedIdentity;
import com.azure.resourcemanager.webpubsub.models.ManagedIdentityType;
import com.azure.resourcemanager.webpubsub.models.NetworkAcl;
import com.azure.resourcemanager.webpubsub.models.PrivateEndpointAcl;
import com.azure.resourcemanager.webpubsub.models.ResourceLogCategory;
import com.azure.resourcemanager.webpubsub.models.ResourceLogConfiguration;
import com.azure.resourcemanager.webpubsub.models.ResourceSku;
import com.azure.resourcemanager.webpubsub.models.ServiceKind;
import com.azure.resourcemanager.webpubsub.models.UserAssignedIdentityProperty;
import com.azure.resourcemanager.webpubsub.models.WebPubSubNetworkACLs;
import com.azure.resourcemanager.webpubsub.models.WebPubSubRequestType;
import com.azure.resourcemanager.webpubsub.models.WebPubSubResourceList;
import com.azure.resourcemanager.webpubsub.models.WebPubSubSkuTier;
import com.azure.resourcemanager.webpubsub.models.WebPubSubTlsSettings;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class WebPubSubResourceListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WebPubSubResourceList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"sku\":{\"name\":\"tpngjcrcczsqpjh\",\"tier\":\"Free\",\"size\":\"jvnysounqe\",\"family\":\"noae\",\"capacity\":1901274446},\"properties\":{\"provisioningState\":\"Deleting\",\"externalIP\":\"trpmo\",\"hostName\":\"mcmatuokthfuiu\",\"publicPort\":1445775245,\"serverPort\":680550088,\"version\":\"pk\",\"privateEndpointConnections\":[{\"properties\":{},\"id\":\"uozmyzydagfua\",\"name\":\"bezy\",\"type\":\"uokktwhrdxwz\"},{\"properties\":{},\"id\":\"sm\",\"name\":\"surex\",\"type\":\"moryocfsfksym\"},{\"properties\":{},\"id\":\"stkiiuxhqyud\",\"name\":\"o\",\"type\":\"rq\"},{\"properties\":{},\"id\":\"oczvy\",\"name\":\"fqrvkdvjsllrmvvd\",\"type\":\"watkpnpulexxb\"}],\"sharedPrivateLinkResources\":[{\"properties\":{\"groupId\":\"ruwiqzbqjvsov\",\"privateLinkResourceId\":\"yokacspkw\"},\"id\":\"zdobpxjmflbvvnch\",\"name\":\"kcciwwzjuqkhr\",\"type\":\"ajiwkuo\"},{\"properties\":{\"groupId\":\"skghsauuimj\",\"privateLinkResourceId\":\"vxieduugidyj\"},\"id\":\"f\",\"name\":\"y\",\"type\":\"osvexcsonpclhoc\"},{\"properties\":{\"groupId\":\"slkevle\",\"privateLinkResourceId\":\"gz\"},\"id\":\"u\",\"name\":\"fmvfaxkffeiit\",\"type\":\"lvmezyvshxmzsbbz\"},{\"properties\":{\"groupId\":\"gigr\",\"privateLinkResourceId\":\"wburvjxxjnspydpt\"},\"id\":\"enkouknvudw\",\"name\":\"iukbldngkpoci\",\"type\":\"azyxoegukg\"}],\"tls\":{\"clientCertEnabled\":true},\"hostNamePrefix\":\"cgygev\",\"liveTraceConfiguration\":{\"enabled\":\"typmrbpizcdrqjsd\",\"categories\":[{},{},{},{}]},\"resourceLogConfiguration\":{\"categories\":[{},{},{},{}]},\"networkACLs\":{\"defaultAction\":\"Allow\",\"publicNetwork\":{\"allow\":[\"RESTAPI\",\"ClientConnection\",\"RESTAPI\"],\"deny\":[\"Trace\"]},\"privateEndpoints\":[{\"name\":\"jttgzf\"},{\"name\":\"ishc\"},{\"name\":\"khaj\"}],\"ipRules\":[{},{},{},{}]},\"publicNetworkAccess\":\"a\",\"disableLocalAuth\":false,\"disableAadAuth\":true,\"regionEndpointEnabled\":\"alpbuxwgipwhon\",\"resourceStopped\":\"kgshwa\"},\"kind\":\"SocketIO\",\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"zlsico\":{\"principalId\":\"eputtmrywnuzoqf\",\"clientId\":\"yqzrnkcqvyxlw\"},\"hheunmmqhgyx\":{\"principalId\":\"qqn\",\"clientId\":\"lryav\"},\"zf\":{\"principalId\":\"onocukok\",\"clientId\":\"axuconuq\"}},\"principalId\":\"eyp\",\"tenantId\":\"rmjmwvvjektc\"},\"location\":\"enhwlrs\",\"tags\":{\"qdqgbi\":\"zpwv\",\"fcivfsnkym\":\"ylihkaetckt\",\"jf\":\"ctq\",\"fuwutttxf\":\"ebrjcxe\"},\"id\":\"jrbirphxepcyv\",\"name\":\"hfnljkyq\",\"type\":\"j\"},{\"sku\":{\"name\":\"ujqgidok\",\"tier\":\"Standard\",\"size\":\"yoxgvcltbgsnc\",\"family\":\"kjeszz\",\"capacity\":1537141479},\"properties\":{\"provisioningState\":\"Running\",\"externalIP\":\"fvgxbfsmxneh\",\"hostName\":\"vecxgodebfqkk\",\"publicPort\":1961052031,\"serverPort\":1171229778,\"version\":\"gr\",\"privateEndpointConnections\":[{\"properties\":{},\"id\":\"lfbxzpuzycisp\",\"name\":\"qzahmgkbrp\",\"type\":\"y\"}],\"sharedPrivateLinkResources\":[{\"properties\":{\"groupId\":\"nuqqkpikadrgvt\",\"privateLinkResourceId\":\"agnb\"},\"id\":\"nhijggmebfsi\",\"name\":\"rbu\",\"type\":\"rcvpnazzmhjrunmp\"},{\"properties\":{\"groupId\":\"tdbhrbnla\",\"privateLinkResourceId\":\"kx\"},\"id\":\"skpbhenbtkcxywn\",\"name\":\"tnrsyn\",\"type\":\"qidybyx\"},{\"properties\":{\"groupId\":\"fclhaaxdbabphlwr\",\"privateLinkResourceId\":\"lfktsths\"},\"id\":\"ocmnyyazttbtwwrq\",\"name\":\"uedck\",\"type\":\"ywbiexzfeyueax\"}],\"tls\":{\"clientCertEnabled\":false},\"hostNamePrefix\":\"wbhqwal\",\"liveTraceConfiguration\":{\"enabled\":\"yoxa\",\"categories\":[{},{},{}]},\"resourceLogConfiguration\":{\"categories\":[{},{}]},\"networkACLs\":{\"defaultAction\":\"Deny\",\"publicNetwork\":{\"allow\":[\"Trace\",\"ClientConnection\",\"RESTAPI\"],\"deny\":[\"ClientConnection\",\"ServerConnection\",\"ServerConnection\",\"ServerConnection\"]},\"privateEndpoints\":[{\"name\":\"djswztsdbp\"}],\"ipRules\":[{},{},{}]},\"publicNetworkAccess\":\"txhp\",\"disableLocalAuth\":false,\"disableAadAuth\":false,\"regionEndpointEnabled\":\"zabglcuhxwt\",\"resourceStopped\":\"yqiklbbovplwzb\"},\"kind\":\"WebPubSub\",\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{\"mg\":{\"principalId\":\"vmkfssxqu\",\"clientId\":\"fpl\"},\"wzbaiue\":{\"principalId\":\"nkjzkdeslpvlop\",\"clientId\":\"yighxpk\"}},\"principalId\":\"a\",\"tenantId\":\"nyqupedeojnabck\"},\"location\":\"mtxpsiebtfh\",\"tags\":{\"qmhjjdhtld\":\"sapskr\"},\"id\":\"kyzxuutk\",\"name\":\"cwscwsvlx\",\"type\":\"togt\"},{\"sku\":{\"name\":\"upqsx\",\"tier\":\"Premium\",\"size\":\"cykvceo\",\"family\":\"ilovnot\",\"capacity\":1073138726},\"properties\":{\"provisioningState\":\"Moving\",\"externalIP\":\"bkc\",\"hostName\":\"dhbt\",\"publicPort\":1907592616,\"serverPort\":1754671531,\"version\":\"pnvjtoqnermclf\",\"privateEndpointConnections\":[{\"properties\":{},\"id\":\"xus\",\"name\":\"rpabg\",\"type\":\"epsbjtazqu\"},{\"properties\":{},\"id\":\"wpmueefj\",\"name\":\"wfqkquj\",\"type\":\"dsuyonobgla\"}],\"sharedPrivateLinkResources\":[{\"properties\":{\"groupId\":\"tcc\",\"privateLinkResourceId\":\"g\"},\"id\":\"dxyt\",\"name\":\"moyrxvwfudwpz\",\"type\":\"txhdzh\"},{\"properties\":{\"groupId\":\"qj\",\"privateLinkResourceId\":\"hckfrlhrx\"},\"id\":\"kyv\",\"name\":\"ycanuzbpzkafku\",\"type\":\"b\"},{\"properties\":{\"groupId\":\"nwbmeh\",\"privateLinkResourceId\":\"seyvj\"},\"id\":\"rts\",\"name\":\"hspkdeemao\",\"type\":\"mx\"}],\"tls\":{\"clientCertEnabled\":false},\"hostNamePrefix\":\"melmqkrha\",\"liveTraceConfiguration\":{\"enabled\":\"juahaquhcdhmdual\",\"categories\":[{},{},{}]},\"resourceLogConfiguration\":{\"categories\":[{},{}]},\"networkACLs\":{\"defaultAction\":\"Deny\",\"publicNetwork\":{\"allow\":[\"ServerConnection\"],\"deny\":[\"ClientConnection\"]},\"privateEndpoints\":[{\"name\":\"pv\"},{\"name\":\"omzlfmi\"}],\"ipRules\":[{}]},\"publicNetworkAccess\":\"nbbelda\",\"disableLocalAuth\":true,\"disableAadAuth\":false,\"regionEndpointEnabled\":\"io\",\"resourceStopped\":\"qhakauhashsf\"},\"kind\":\"WebPubSub\",\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{\"ecivyh\":{\"principalId\":\"ugicjooxdjebw\",\"clientId\":\"cwwfvovbvme\"}},\"principalId\":\"euojgjrwju\",\"tenantId\":\"otwmcdyt\"},\"location\":\"wit\",\"tags\":{\"hniskxfbkpyc\":\"jawgqwg\"},\"id\":\"klwndnhjdauwhv\",\"name\":\"l\",\"type\":\"zbtd\"},{\"sku\":{\"name\":\"ujznb\",\"tier\":\"Free\",\"size\":\"uwprzql\",\"family\":\"ualupjmkh\",\"capacity\":1026184790},\"properties\":{\"provisioningState\":\"Unknown\",\"externalIP\":\"wsrtjriplrbpbe\",\"hostName\":\"ghfg\",\"publicPort\":107282315,\"serverPort\":658652165,\"version\":\"zvlvqhjkbegib\",\"privateEndpointConnections\":[{\"properties\":{},\"id\":\"ebwwaloayqc\",\"name\":\"wrtz\",\"type\":\"uzgwyzmhtx\"},{\"properties\":{},\"id\":\"mtsavjcbpwxqp\",\"name\":\"rknftguvriuhprwm\",\"type\":\"yvxqtayriwwroy\"}],\"sharedPrivateLinkResources\":[{\"properties\":{\"groupId\":\"rmcqiby\",\"privateLinkResourceId\":\"nojvknmefqsg\"},\"id\":\"ah\",\"name\":\"pjyzhpv\",\"type\":\"qzcjrvxdj\"},{\"properties\":{\"groupId\":\"mwlxk\",\"privateLinkResourceId\":\"ug\"},\"id\":\"zovawjvz\",\"name\":\"nluthnnp\",\"type\":\"nxipeil\"},{\"properties\":{\"groupId\":\"zuaejxd\",\"privateLinkResourceId\":\"ltskzbbtd\"},\"id\":\"mv\",\"name\":\"ekg\",\"type\":\"wozuhkf\"},{\"properties\":{\"groupId\":\"sjyofdx\",\"privateLinkResourceId\":\"uusdttouwa\"},\"id\":\"ekqvkeln\",\"name\":\"mvb\",\"type\":\"wyjsflhhcaalnjix\"}],\"tls\":{\"clientCertEnabled\":false},\"hostNamePrefix\":\"wjo\",\"liveTraceConfiguration\":{\"enabled\":\"cslyjpk\",\"categories\":[{},{},{}]},\"resourceLogConfiguration\":{\"categories\":[{},{},{}]},\"networkACLs\":{\"defaultAction\":\"Deny\",\"publicNetwork\":{\"allow\":[\"RESTAPI\",\"ServerConnection\"],\"deny\":[\"RESTAPI\"]},\"privateEndpoints\":[{\"name\":\"o\"},{\"name\":\"hb\"},{\"name\":\"xknalaulppg\"}],\"ipRules\":[{},{},{},{}]},\"publicNetworkAccess\":\"napnyiropuhpigv\",\"disableLocalAuth\":true,\"disableAadAuth\":true,\"regionEndpointEnabled\":\"git\",\"resourceStopped\":\"edjvcslynqw\"},\"kind\":\"SocketIO\",\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{\"pfqbuaceopzf\":{\"principalId\":\"ktrmgucnapkt\",\"clientId\":\"ellwptfdy\"}},\"principalId\":\"hhuao\",\"tenantId\":\"pcqeqx\"},\"location\":\"z\",\"tags\":{\"dmoizpostmg\":\"zxctobgb\",\"rmfqjhhkxbpvj\":\"cfbu\"},\"id\":\"mjh\",\"name\":\"xjyngudivk\",\"type\":\"tswb\"}],\"nextLink\":\"zvszj\"}")
                .toObject(WebPubSubResourceList.class);
        Assertions.assertEquals("enhwlrs", model.value().get(0).location());
        Assertions.assertEquals("zpwv", model.value().get(0).tags().get("qdqgbi"));
        Assertions.assertEquals("tpngjcrcczsqpjh", model.value().get(0).sku().name());
        Assertions.assertEquals(WebPubSubSkuTier.FREE, model.value().get(0).sku().tier());
        Assertions.assertEquals(1901274446, model.value().get(0).sku().capacity());
        Assertions.assertEquals(ServiceKind.SOCKET_IO, model.value().get(0).kind());
        Assertions.assertEquals(ManagedIdentityType.USER_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals(true, model.value().get(0).tls().clientCertEnabled());
        Assertions.assertEquals("typmrbpizcdrqjsd", model.value().get(0).liveTraceConfiguration().enabled());
        Assertions.assertEquals(AclAction.ALLOW, model.value().get(0).networkACLs().defaultAction());
        Assertions
            .assertEquals(
                WebPubSubRequestType.RESTAPI, model.value().get(0).networkACLs().publicNetwork().allow().get(0));
        Assertions
            .assertEquals(WebPubSubRequestType.TRACE, model.value().get(0).networkACLs().publicNetwork().deny().get(0));
        Assertions.assertEquals("jttgzf", model.value().get(0).networkACLs().privateEndpoints().get(0).name());
        Assertions.assertEquals("a", model.value().get(0).publicNetworkAccess());
        Assertions.assertEquals(false, model.value().get(0).disableLocalAuth());
        Assertions.assertEquals(true, model.value().get(0).disableAadAuth());
        Assertions.assertEquals("alpbuxwgipwhon", model.value().get(0).regionEndpointEnabled());
        Assertions.assertEquals("kgshwa", model.value().get(0).resourceStopped());
        Assertions.assertEquals("zvszj", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WebPubSubResourceList model =
            new WebPubSubResourceList()
                .withValue(
                    Arrays
                        .asList(
                            new WebPubSubResourceInner()
                                .withLocation("enhwlrs")
                                .withTags(
                                    mapOf(
                                        "qdqgbi",
                                        "zpwv",
                                        "fcivfsnkym",
                                        "ylihkaetckt",
                                        "jf",
                                        "ctq",
                                        "fuwutttxf",
                                        "ebrjcxe"))
                                .withSku(
                                    new ResourceSku()
                                        .withName("tpngjcrcczsqpjh")
                                        .withTier(WebPubSubSkuTier.FREE)
                                        .withCapacity(1901274446))
                                .withKind(ServiceKind.SOCKET_IO)
                                .withIdentity(
                                    new ManagedIdentity()
                                        .withType(ManagedIdentityType.USER_ASSIGNED)
                                        .withUserAssignedIdentities(
                                            mapOf(
                                                "zlsico",
                                                new UserAssignedIdentityProperty(),
                                                "hheunmmqhgyx",
                                                new UserAssignedIdentityProperty(),
                                                "zf",
                                                new UserAssignedIdentityProperty())))
                                .withTls(new WebPubSubTlsSettings().withClientCertEnabled(true))
                                .withLiveTraceConfiguration(
                                    new LiveTraceConfiguration()
                                        .withEnabled("typmrbpizcdrqjsd")
                                        .withCategories(
                                            Arrays
                                                .asList(
                                                    new LiveTraceCategory(),
                                                    new LiveTraceCategory(),
                                                    new LiveTraceCategory(),
                                                    new LiveTraceCategory())))
                                .withResourceLogConfiguration(
                                    new ResourceLogConfiguration()
                                        .withCategories(
                                            Arrays
                                                .asList(
                                                    new ResourceLogCategory(),
                                                    new ResourceLogCategory(),
                                                    new ResourceLogCategory(),
                                                    new ResourceLogCategory())))
                                .withNetworkACLs(
                                    new WebPubSubNetworkACLs()
                                        .withDefaultAction(AclAction.ALLOW)
                                        .withPublicNetwork(
                                            new NetworkAcl()
                                                .withAllow(
                                                    Arrays
                                                        .asList(
                                                            WebPubSubRequestType.RESTAPI,
                                                            WebPubSubRequestType.CLIENT_CONNECTION,
                                                            WebPubSubRequestType.RESTAPI))
                                                .withDeny(Arrays.asList(WebPubSubRequestType.TRACE)))
                                        .withPrivateEndpoints(
                                            Arrays
                                                .asList(
                                                    new PrivateEndpointAcl().withName("jttgzf"),
                                                    new PrivateEndpointAcl().withName("ishc"),
                                                    new PrivateEndpointAcl().withName("khaj")))
                                        .withIpRules(
                                            Arrays.asList(new IpRule(), new IpRule(), new IpRule(), new IpRule())))
                                .withPublicNetworkAccess("a")
                                .withDisableLocalAuth(false)
                                .withDisableAadAuth(true)
                                .withRegionEndpointEnabled("alpbuxwgipwhon")
                                .withResourceStopped("kgshwa"),
                            new WebPubSubResourceInner()
                                .withLocation("mtxpsiebtfh")
                                .withTags(mapOf("qmhjjdhtld", "sapskr"))
                                .withSku(
                                    new ResourceSku()
                                        .withName("ujqgidok")
                                        .withTier(WebPubSubSkuTier.STANDARD)
                                        .withCapacity(1537141479))
                                .withKind(ServiceKind.WEB_PUB_SUB)
                                .withIdentity(
                                    new ManagedIdentity()
                                        .withType(ManagedIdentityType.NONE)
                                        .withUserAssignedIdentities(
                                            mapOf(
                                                "mg",
                                                new UserAssignedIdentityProperty(),
                                                "wzbaiue",
                                                new UserAssignedIdentityProperty())))
                                .withTls(new WebPubSubTlsSettings().withClientCertEnabled(false))
                                .withLiveTraceConfiguration(
                                    new LiveTraceConfiguration()
                                        .withEnabled("yoxa")
                                        .withCategories(
                                            Arrays
                                                .asList(
                                                    new LiveTraceCategory(),
                                                    new LiveTraceCategory(),
                                                    new LiveTraceCategory())))
                                .withResourceLogConfiguration(
                                    new ResourceLogConfiguration()
                                        .withCategories(
                                            Arrays.asList(new ResourceLogCategory(), new ResourceLogCategory())))
                                .withNetworkACLs(
                                    new WebPubSubNetworkACLs()
                                        .withDefaultAction(AclAction.DENY)
                                        .withPublicNetwork(
                                            new NetworkAcl()
                                                .withAllow(
                                                    Arrays
                                                        .asList(
                                                            WebPubSubRequestType.TRACE,
                                                            WebPubSubRequestType.CLIENT_CONNECTION,
                                                            WebPubSubRequestType.RESTAPI))
                                                .withDeny(
                                                    Arrays
                                                        .asList(
                                                            WebPubSubRequestType.CLIENT_CONNECTION,
                                                            WebPubSubRequestType.SERVER_CONNECTION,
                                                            WebPubSubRequestType.SERVER_CONNECTION,
                                                            WebPubSubRequestType.SERVER_CONNECTION)))
                                        .withPrivateEndpoints(
                                            Arrays.asList(new PrivateEndpointAcl().withName("djswztsdbp")))
                                        .withIpRules(Arrays.asList(new IpRule(), new IpRule(), new IpRule())))
                                .withPublicNetworkAccess("txhp")
                                .withDisableLocalAuth(false)
                                .withDisableAadAuth(false)
                                .withRegionEndpointEnabled("zabglcuhxwt")
                                .withResourceStopped("yqiklbbovplwzb"),
                            new WebPubSubResourceInner()
                                .withLocation("wit")
                                .withTags(mapOf("hniskxfbkpyc", "jawgqwg"))
                                .withSku(
                                    new ResourceSku()
                                        .withName("upqsx")
                                        .withTier(WebPubSubSkuTier.PREMIUM)
                                        .withCapacity(1073138726))
                                .withKind(ServiceKind.WEB_PUB_SUB)
                                .withIdentity(
                                    new ManagedIdentity()
                                        .withType(ManagedIdentityType.NONE)
                                        .withUserAssignedIdentities(
                                            mapOf("ecivyh", new UserAssignedIdentityProperty())))
                                .withTls(new WebPubSubTlsSettings().withClientCertEnabled(false))
                                .withLiveTraceConfiguration(
                                    new LiveTraceConfiguration()
                                        .withEnabled("juahaquhcdhmdual")
                                        .withCategories(
                                            Arrays
                                                .asList(
                                                    new LiveTraceCategory(),
                                                    new LiveTraceCategory(),
                                                    new LiveTraceCategory())))
                                .withResourceLogConfiguration(
                                    new ResourceLogConfiguration()
                                        .withCategories(
                                            Arrays.asList(new ResourceLogCategory(), new ResourceLogCategory())))
                                .withNetworkACLs(
                                    new WebPubSubNetworkACLs()
                                        .withDefaultAction(AclAction.DENY)
                                        .withPublicNetwork(
                                            new NetworkAcl()
                                                .withAllow(Arrays.asList(WebPubSubRequestType.SERVER_CONNECTION))
                                                .withDeny(Arrays.asList(WebPubSubRequestType.CLIENT_CONNECTION)))
                                        .withPrivateEndpoints(
                                            Arrays
                                                .asList(
                                                    new PrivateEndpointAcl().withName("pv"),
                                                    new PrivateEndpointAcl().withName("omzlfmi")))
                                        .withIpRules(Arrays.asList(new IpRule())))
                                .withPublicNetworkAccess("nbbelda")
                                .withDisableLocalAuth(true)
                                .withDisableAadAuth(false)
                                .withRegionEndpointEnabled("io")
                                .withResourceStopped("qhakauhashsf"),
                            new WebPubSubResourceInner()
                                .withLocation("z")
                                .withTags(mapOf("dmoizpostmg", "zxctobgb", "rmfqjhhkxbpvj", "cfbu"))
                                .withSku(
                                    new ResourceSku()
                                        .withName("ujznb")
                                        .withTier(WebPubSubSkuTier.FREE)
                                        .withCapacity(1026184790))
                                .withKind(ServiceKind.SOCKET_IO)
                                .withIdentity(
                                    new ManagedIdentity()
                                        .withType(ManagedIdentityType.NONE)
                                        .withUserAssignedIdentities(
                                            mapOf("pfqbuaceopzf", new UserAssignedIdentityProperty())))
                                .withTls(new WebPubSubTlsSettings().withClientCertEnabled(false))
                                .withLiveTraceConfiguration(
                                    new LiveTraceConfiguration()
                                        .withEnabled("cslyjpk")
                                        .withCategories(
                                            Arrays
                                                .asList(
                                                    new LiveTraceCategory(),
                                                    new LiveTraceCategory(),
                                                    new LiveTraceCategory())))
                                .withResourceLogConfiguration(
                                    new ResourceLogConfiguration()
                                        .withCategories(
                                            Arrays
                                                .asList(
                                                    new ResourceLogCategory(),
                                                    new ResourceLogCategory(),
                                                    new ResourceLogCategory())))
                                .withNetworkACLs(
                                    new WebPubSubNetworkACLs()
                                        .withDefaultAction(AclAction.DENY)
                                        .withPublicNetwork(
                                            new NetworkAcl()
                                                .withAllow(
                                                    Arrays
                                                        .asList(
                                                            WebPubSubRequestType.RESTAPI,
                                                            WebPubSubRequestType.SERVER_CONNECTION))
                                                .withDeny(Arrays.asList(WebPubSubRequestType.RESTAPI)))
                                        .withPrivateEndpoints(
                                            Arrays
                                                .asList(
                                                    new PrivateEndpointAcl().withName("o"),
                                                    new PrivateEndpointAcl().withName("hb"),
                                                    new PrivateEndpointAcl().withName("xknalaulppg")))
                                        .withIpRules(
                                            Arrays.asList(new IpRule(), new IpRule(), new IpRule(), new IpRule())))
                                .withPublicNetworkAccess("napnyiropuhpigv")
                                .withDisableLocalAuth(true)
                                .withDisableAadAuth(true)
                                .withRegionEndpointEnabled("git")
                                .withResourceStopped("edjvcslynqw")))
                .withNextLink("zvszj");
        model = BinaryData.fromObject(model).toObject(WebPubSubResourceList.class);
        Assertions.assertEquals("enhwlrs", model.value().get(0).location());
        Assertions.assertEquals("zpwv", model.value().get(0).tags().get("qdqgbi"));
        Assertions.assertEquals("tpngjcrcczsqpjh", model.value().get(0).sku().name());
        Assertions.assertEquals(WebPubSubSkuTier.FREE, model.value().get(0).sku().tier());
        Assertions.assertEquals(1901274446, model.value().get(0).sku().capacity());
        Assertions.assertEquals(ServiceKind.SOCKET_IO, model.value().get(0).kind());
        Assertions.assertEquals(ManagedIdentityType.USER_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals(true, model.value().get(0).tls().clientCertEnabled());
        Assertions.assertEquals("typmrbpizcdrqjsd", model.value().get(0).liveTraceConfiguration().enabled());
        Assertions.assertEquals(AclAction.ALLOW, model.value().get(0).networkACLs().defaultAction());
        Assertions
            .assertEquals(
                WebPubSubRequestType.RESTAPI, model.value().get(0).networkACLs().publicNetwork().allow().get(0));
        Assertions
            .assertEquals(WebPubSubRequestType.TRACE, model.value().get(0).networkACLs().publicNetwork().deny().get(0));
        Assertions.assertEquals("jttgzf", model.value().get(0).networkACLs().privateEndpoints().get(0).name());
        Assertions.assertEquals("a", model.value().get(0).publicNetworkAccess());
        Assertions.assertEquals(false, model.value().get(0).disableLocalAuth());
        Assertions.assertEquals(true, model.value().get(0).disableAadAuth());
        Assertions.assertEquals("alpbuxwgipwhon", model.value().get(0).regionEndpointEnabled());
        Assertions.assertEquals("kgshwa", model.value().get(0).resourceStopped());
        Assertions.assertEquals("zvszj", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
