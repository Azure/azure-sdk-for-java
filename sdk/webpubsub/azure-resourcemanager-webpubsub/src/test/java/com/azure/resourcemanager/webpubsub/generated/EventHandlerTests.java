// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.webpubsub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.webpubsub.models.EventHandler;
import com.azure.resourcemanager.webpubsub.models.ManagedIdentitySettings;
import com.azure.resourcemanager.webpubsub.models.UpstreamAuthSettings;
import com.azure.resourcemanager.webpubsub.models.UpstreamAuthType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EventHandlerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventHandler model = BinaryData.fromString(
            "{\"urlTemplate\":\"coolsttpkiwkkb\",\"userEventPattern\":\"jrywvtylbfpnc\",\"systemEvents\":[\"oiwiithtywub\",\"cbihwqk\"],\"auth\":{\"type\":\"None\",\"managedIdentity\":{\"resource\":\"jchrdgoihxumw\"}}}")
            .toObject(EventHandler.class);
        Assertions.assertEquals("coolsttpkiwkkb", model.urlTemplate());
        Assertions.assertEquals("jrywvtylbfpnc", model.userEventPattern());
        Assertions.assertEquals("oiwiithtywub", model.systemEvents().get(0));
        Assertions.assertEquals(UpstreamAuthType.NONE, model.auth().type());
        Assertions.assertEquals("jchrdgoihxumw", model.auth().managedIdentity().resource());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventHandler model = new EventHandler().withUrlTemplate("coolsttpkiwkkb")
            .withUserEventPattern("jrywvtylbfpnc")
            .withSystemEvents(Arrays.asList("oiwiithtywub", "cbihwqk"))
            .withAuth(new UpstreamAuthSettings().withType(UpstreamAuthType.NONE)
                .withManagedIdentity(new ManagedIdentitySettings().withResource("jchrdgoihxumw")));
        model = BinaryData.fromObject(model).toObject(EventHandler.class);
        Assertions.assertEquals("coolsttpkiwkkb", model.urlTemplate());
        Assertions.assertEquals("jrywvtylbfpnc", model.userEventPattern());
        Assertions.assertEquals("oiwiithtywub", model.systemEvents().get(0));
        Assertions.assertEquals(UpstreamAuthType.NONE, model.auth().type());
        Assertions.assertEquals("jchrdgoihxumw", model.auth().managedIdentity().resource());
    }
}
