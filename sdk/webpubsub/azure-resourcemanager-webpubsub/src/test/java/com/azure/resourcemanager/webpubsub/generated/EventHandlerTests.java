// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.webpubsub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.webpubsub.models.EventHandler;
import com.azure.resourcemanager.webpubsub.models.ManagedIdentitySettings;
import com.azure.resourcemanager.webpubsub.models.UpstreamAuthSettings;
import com.azure.resourcemanager.webpubsub.models.UpstreamAuthType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EventHandlerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventHandler model =
            BinaryData
                .fromString(
                    "{\"urlTemplate\":\"qncygupkvi\",\"userEventPattern\":\"dscwxqupevzhf\",\"systemEvents\":[\"txhojujb\",\"pelmcuvhixbjxyf\",\"n\"],\"auth\":{\"type\":\"ManagedIdentity\",\"managedIdentity\":{\"resource\":\"lsttpkiwkkbnuj\"}}}")
                .toObject(EventHandler.class);
        Assertions.assertEquals("qncygupkvi", model.urlTemplate());
        Assertions.assertEquals("dscwxqupevzhf", model.userEventPattern());
        Assertions.assertEquals("txhojujb", model.systemEvents().get(0));
        Assertions.assertEquals(UpstreamAuthType.MANAGED_IDENTITY, model.auth().type());
        Assertions.assertEquals("lsttpkiwkkbnuj", model.auth().managedIdentity().resource());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventHandler model =
            new EventHandler()
                .withUrlTemplate("qncygupkvi")
                .withUserEventPattern("dscwxqupevzhf")
                .withSystemEvents(Arrays.asList("txhojujb", "pelmcuvhixbjxyf", "n"))
                .withAuth(
                    new UpstreamAuthSettings()
                        .withType(UpstreamAuthType.MANAGED_IDENTITY)
                        .withManagedIdentity(new ManagedIdentitySettings().withResource("lsttpkiwkkbnuj")));
        model = BinaryData.fromObject(model).toObject(EventHandler.class);
        Assertions.assertEquals("qncygupkvi", model.urlTemplate());
        Assertions.assertEquals("dscwxqupevzhf", model.userEventPattern());
        Assertions.assertEquals("txhojujb", model.systemEvents().get(0));
        Assertions.assertEquals(UpstreamAuthType.MANAGED_IDENTITY, model.auth().type());
        Assertions.assertEquals("lsttpkiwkkbnuj", model.auth().managedIdentity().resource());
    }
}
