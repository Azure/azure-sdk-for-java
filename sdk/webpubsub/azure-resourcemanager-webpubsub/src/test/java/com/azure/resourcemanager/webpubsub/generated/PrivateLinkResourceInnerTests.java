// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.webpubsub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.webpubsub.fluent.models.PrivateLinkResourceInner;
import com.azure.resourcemanager.webpubsub.models.ShareablePrivateLinkResourceProperties;
import com.azure.resourcemanager.webpubsub.models.ShareablePrivateLinkResourceType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateLinkResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateLinkResourceInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"groupId\":\"umrtwnawjsl\",\"requiredMembers\":[\"kojgcyzts\",\"mznbaeqphch\",\"nrnrp\",\"ehuwrykqgaifmvik\"],\"requiredZoneNames\":[\"dvk\"],\"shareablePrivateLinkResourceTypes\":[{\"name\":\"dznx\",\"properties\":{\"description\":\"srhnjivo\",\"groupId\":\"tnovqfzgemjdftul\",\"type\":\"tduceamt\"}}]},\"id\":\"czu\",\"name\":\"m\",\"type\":\"jw\"}")
                .toObject(PrivateLinkResourceInner.class);
        Assertions.assertEquals("umrtwnawjsl", model.groupId());
        Assertions.assertEquals("kojgcyzts", model.requiredMembers().get(0));
        Assertions.assertEquals("dvk", model.requiredZoneNames().get(0));
        Assertions.assertEquals("dznx", model.shareablePrivateLinkResourceTypes().get(0).name());
        Assertions
            .assertEquals("srhnjivo", model.shareablePrivateLinkResourceTypes().get(0).properties().description());
        Assertions
            .assertEquals("tnovqfzgemjdftul", model.shareablePrivateLinkResourceTypes().get(0).properties().groupId());
        Assertions.assertEquals("tduceamt", model.shareablePrivateLinkResourceTypes().get(0).properties().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateLinkResourceInner model =
            new PrivateLinkResourceInner()
                .withGroupId("umrtwnawjsl")
                .withRequiredMembers(Arrays.asList("kojgcyzts", "mznbaeqphch", "nrnrp", "ehuwrykqgaifmvik"))
                .withRequiredZoneNames(Arrays.asList("dvk"))
                .withShareablePrivateLinkResourceTypes(
                    Arrays
                        .asList(
                            new ShareablePrivateLinkResourceType()
                                .withName("dznx")
                                .withProperties(
                                    new ShareablePrivateLinkResourceProperties()
                                        .withDescription("srhnjivo")
                                        .withGroupId("tnovqfzgemjdftul")
                                        .withType("tduceamt"))));
        model = BinaryData.fromObject(model).toObject(PrivateLinkResourceInner.class);
        Assertions.assertEquals("umrtwnawjsl", model.groupId());
        Assertions.assertEquals("kojgcyzts", model.requiredMembers().get(0));
        Assertions.assertEquals("dvk", model.requiredZoneNames().get(0));
        Assertions.assertEquals("dznx", model.shareablePrivateLinkResourceTypes().get(0).name());
        Assertions
            .assertEquals("srhnjivo", model.shareablePrivateLinkResourceTypes().get(0).properties().description());
        Assertions
            .assertEquals("tnovqfzgemjdftul", model.shareablePrivateLinkResourceTypes().get(0).properties().groupId());
        Assertions.assertEquals("tduceamt", model.shareablePrivateLinkResourceTypes().get(0).properties().type());
    }
}
