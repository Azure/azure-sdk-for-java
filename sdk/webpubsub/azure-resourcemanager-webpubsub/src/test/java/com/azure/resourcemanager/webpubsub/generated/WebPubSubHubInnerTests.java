// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.webpubsub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.webpubsub.fluent.models.WebPubSubHubInner;
import com.azure.resourcemanager.webpubsub.models.EventHandler;
import com.azure.resourcemanager.webpubsub.models.EventListener;
import com.azure.resourcemanager.webpubsub.models.EventListenerEndpoint;
import com.azure.resourcemanager.webpubsub.models.EventListenerFilter;
import com.azure.resourcemanager.webpubsub.models.ManagedIdentitySettings;
import com.azure.resourcemanager.webpubsub.models.UpstreamAuthSettings;
import com.azure.resourcemanager.webpubsub.models.UpstreamAuthType;
import com.azure.resourcemanager.webpubsub.models.WebPubSubHubProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WebPubSubHubInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WebPubSubHubInner model = BinaryData.fromString(
            "{\"properties\":{\"eventHandlers\":[{\"urlTemplate\":\"ejvegrhbpnaixex\",\"userEventPattern\":\"b\",\"systemEvents\":[\"ax\",\"cexdrrvqa\",\"qkghtpwijnhy\",\"svfycxzbfv\"],\"auth\":{\"type\":\"ManagedIdentity\",\"managedIdentity\":{\"resource\":\"mtg\"}}},{\"urlTemplate\":\"qp\",\"userEventPattern\":\"ostronz\",\"systemEvents\":[\"gfipnsxk\",\"cwaekrrjre\",\"fxtsgum\"],\"auth\":{\"type\":\"None\",\"managedIdentity\":{\"resource\":\"kxw\"}}}],\"eventListeners\":[{\"filter\":{\"type\":\"EventListenerFilter\"},\"endpoint\":{\"type\":\"EventListenerEndpoint\"}}],\"anonymousConnectPolicy\":\"bq\",\"webSocketKeepAliveIntervalInSeconds\":878184103},\"id\":\"lmv\",\"name\":\"elfk\",\"type\":\"gplcrpwjxeznoigb\"}")
            .toObject(WebPubSubHubInner.class);
        Assertions.assertEquals("ejvegrhbpnaixex", model.properties().eventHandlers().get(0).urlTemplate());
        Assertions.assertEquals("b", model.properties().eventHandlers().get(0).userEventPattern());
        Assertions.assertEquals("ax", model.properties().eventHandlers().get(0).systemEvents().get(0));
        Assertions.assertEquals(UpstreamAuthType.MANAGED_IDENTITY,
            model.properties().eventHandlers().get(0).auth().type());
        Assertions.assertEquals("mtg", model.properties().eventHandlers().get(0).auth().managedIdentity().resource());
        Assertions.assertEquals("bq", model.properties().anonymousConnectPolicy());
        Assertions.assertEquals(878184103, model.properties().webSocketKeepAliveIntervalInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WebPubSubHubInner model = new WebPubSubHubInner().withProperties(new WebPubSubHubProperties()
            .withEventHandlers(Arrays.asList(
                new EventHandler().withUrlTemplate("ejvegrhbpnaixex")
                    .withUserEventPattern("b")
                    .withSystemEvents(Arrays.asList("ax", "cexdrrvqa", "qkghtpwijnhy", "svfycxzbfv"))
                    .withAuth(new UpstreamAuthSettings().withType(UpstreamAuthType.MANAGED_IDENTITY)
                        .withManagedIdentity(new ManagedIdentitySettings().withResource("mtg"))),
                new EventHandler().withUrlTemplate("qp")
                    .withUserEventPattern("ostronz")
                    .withSystemEvents(Arrays.asList("gfipnsxk", "cwaekrrjre", "fxtsgum"))
                    .withAuth(new UpstreamAuthSettings().withType(UpstreamAuthType.NONE)
                        .withManagedIdentity(new ManagedIdentitySettings().withResource("kxw")))))
            .withEventListeners(Arrays.asList(
                new EventListener().withFilter(new EventListenerFilter()).withEndpoint(new EventListenerEndpoint())))
            .withAnonymousConnectPolicy("bq")
            .withWebSocketKeepAliveIntervalInSeconds(878184103));
        model = BinaryData.fromObject(model).toObject(WebPubSubHubInner.class);
        Assertions.assertEquals("ejvegrhbpnaixex", model.properties().eventHandlers().get(0).urlTemplate());
        Assertions.assertEquals("b", model.properties().eventHandlers().get(0).userEventPattern());
        Assertions.assertEquals("ax", model.properties().eventHandlers().get(0).systemEvents().get(0));
        Assertions.assertEquals(UpstreamAuthType.MANAGED_IDENTITY,
            model.properties().eventHandlers().get(0).auth().type());
        Assertions.assertEquals("mtg", model.properties().eventHandlers().get(0).auth().managedIdentity().resource());
        Assertions.assertEquals("bq", model.properties().anonymousConnectPolicy());
        Assertions.assertEquals(878184103, model.properties().webSocketKeepAliveIntervalInSeconds());
    }
}
