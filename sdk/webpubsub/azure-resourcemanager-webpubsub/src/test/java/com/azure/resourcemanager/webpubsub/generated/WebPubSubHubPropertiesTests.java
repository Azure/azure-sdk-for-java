// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.webpubsub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.webpubsub.models.EventHandler;
import com.azure.resourcemanager.webpubsub.models.EventListener;
import com.azure.resourcemanager.webpubsub.models.EventListenerEndpoint;
import com.azure.resourcemanager.webpubsub.models.EventListenerFilter;
import com.azure.resourcemanager.webpubsub.models.ManagedIdentitySettings;
import com.azure.resourcemanager.webpubsub.models.UpstreamAuthSettings;
import com.azure.resourcemanager.webpubsub.models.UpstreamAuthType;
import com.azure.resourcemanager.webpubsub.models.WebPubSubHubProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WebPubSubHubPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WebPubSubHubProperties model = BinaryData.fromString(
            "{\"eventHandlers\":[{\"urlTemplate\":\"w\",\"userEventPattern\":\"kpnb\",\"systemEvents\":[\"ejjoqkagfhsxtta\",\"gzxnfaazpxdtnk\"],\"auth\":{\"type\":\"None\",\"managedIdentity\":{\"resource\":\"lwuenvrkp\"}}},{\"urlTemplate\":\"ou\",\"userEventPattern\":\"bre\",\"systemEvents\":[\"aysjkixqtnqttez\"],\"auth\":{\"type\":\"None\",\"managedIdentity\":{\"resource\":\"akpjpqqmtedlt\"}}},{\"urlTemplate\":\"mjihyeozphv\",\"userEventPattern\":\"uyqncygupkvipmd\",\"systemEvents\":[\"xqupevzhf\"],\"auth\":{\"type\":\"None\",\"managedIdentity\":{\"resource\":\"ojujbyp\"}}}],\"eventListeners\":[{\"filter\":{\"type\":\"EventListenerFilter\"},\"endpoint\":{\"type\":\"EventListenerEndpoint\"}}],\"anonymousConnectPolicy\":\"uvhixbjxyfwn\",\"webSocketKeepAliveIntervalInSeconds\":156258046}")
            .toObject(WebPubSubHubProperties.class);
        Assertions.assertEquals("w", model.eventHandlers().get(0).urlTemplate());
        Assertions.assertEquals("kpnb", model.eventHandlers().get(0).userEventPattern());
        Assertions.assertEquals("ejjoqkagfhsxtta", model.eventHandlers().get(0).systemEvents().get(0));
        Assertions.assertEquals(UpstreamAuthType.NONE, model.eventHandlers().get(0).auth().type());
        Assertions.assertEquals("lwuenvrkp", model.eventHandlers().get(0).auth().managedIdentity().resource());
        Assertions.assertEquals("uvhixbjxyfwn", model.anonymousConnectPolicy());
        Assertions.assertEquals(156258046, model.webSocketKeepAliveIntervalInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WebPubSubHubProperties model = new WebPubSubHubProperties()
            .withEventHandlers(Arrays.asList(
                new EventHandler().withUrlTemplate("w")
                    .withUserEventPattern("kpnb")
                    .withSystemEvents(Arrays.asList("ejjoqkagfhsxtta", "gzxnfaazpxdtnk"))
                    .withAuth(new UpstreamAuthSettings().withType(UpstreamAuthType.NONE)
                        .withManagedIdentity(new ManagedIdentitySettings().withResource("lwuenvrkp"))),
                new EventHandler().withUrlTemplate("ou")
                    .withUserEventPattern("bre")
                    .withSystemEvents(Arrays.asList("aysjkixqtnqttez"))
                    .withAuth(new UpstreamAuthSettings().withType(UpstreamAuthType.NONE)
                        .withManagedIdentity(new ManagedIdentitySettings().withResource("akpjpqqmtedlt"))),
                new EventHandler().withUrlTemplate("mjihyeozphv")
                    .withUserEventPattern("uyqncygupkvipmd")
                    .withSystemEvents(Arrays.asList("xqupevzhf"))
                    .withAuth(new UpstreamAuthSettings().withType(UpstreamAuthType.NONE)
                        .withManagedIdentity(new ManagedIdentitySettings().withResource("ojujbyp")))))
            .withEventListeners(Arrays.asList(
                new EventListener().withFilter(new EventListenerFilter()).withEndpoint(new EventListenerEndpoint())))
            .withAnonymousConnectPolicy("uvhixbjxyfwn")
            .withWebSocketKeepAliveIntervalInSeconds(156258046);
        model = BinaryData.fromObject(model).toObject(WebPubSubHubProperties.class);
        Assertions.assertEquals("w", model.eventHandlers().get(0).urlTemplate());
        Assertions.assertEquals("kpnb", model.eventHandlers().get(0).userEventPattern());
        Assertions.assertEquals("ejjoqkagfhsxtta", model.eventHandlers().get(0).systemEvents().get(0));
        Assertions.assertEquals(UpstreamAuthType.NONE, model.eventHandlers().get(0).auth().type());
        Assertions.assertEquals("lwuenvrkp", model.eventHandlers().get(0).auth().managedIdentity().resource());
        Assertions.assertEquals("uvhixbjxyfwn", model.anonymousConnectPolicy());
        Assertions.assertEquals(156258046, model.webSocketKeepAliveIntervalInSeconds());
    }
}
