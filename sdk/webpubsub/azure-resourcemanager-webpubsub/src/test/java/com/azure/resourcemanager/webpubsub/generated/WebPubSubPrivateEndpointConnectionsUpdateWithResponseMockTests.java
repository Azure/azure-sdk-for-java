// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.webpubsub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.webpubsub.WebPubSubManager;
import com.azure.resourcemanager.webpubsub.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.webpubsub.models.PrivateEndpoint;
import com.azure.resourcemanager.webpubsub.models.PrivateEndpointConnection;
import com.azure.resourcemanager.webpubsub.models.PrivateLinkServiceConnectionState;
import com.azure.resourcemanager.webpubsub.models.PrivateLinkServiceConnectionStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WebPubSubPrivateEndpointConnectionsUpdateWithResponseMockTests {
    @Test
    public void testUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Updating\",\"privateEndpoint\":{\"id\":\"llfojuidjp\"},\"groupIds\":[\"jucejikzoeovvtz\",\"je\",\"jklntikyj\"],\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"qzolxrzvhqjw\",\"actionsRequired\":\"htgv\"}},\"id\":\"pcrrk\",\"name\":\"lawjmjsmwrok\",\"type\":\"dxfzzzwyjaf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WebPubSubManager manager = WebPubSubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PrivateEndpointConnection response
            = manager.webPubSubPrivateEndpointConnections()
                .updateWithResponse("dlpnfpubn", "nbatzvi", "sowsaael",
                    new PrivateEndpointConnectionInner()
                        .withPrivateEndpoint(new PrivateEndpoint().withId("uhplrvkmjcwmjv"))
                        .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                            .withStatus(PrivateLinkServiceConnectionStatus.APPROVED)
                            .withDescription("rzbjpsfxsfuz")
                            .withActionsRequired("vtmva")),
                    com.azure.core.util.Context.NONE)
                .getValue();

        Assertions.assertEquals("llfojuidjp", response.privateEndpoint().id());
        Assertions.assertEquals(PrivateLinkServiceConnectionStatus.DISCONNECTED,
            response.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("qzolxrzvhqjw", response.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("htgv", response.privateLinkServiceConnectionState().actionsRequired());
    }
}
