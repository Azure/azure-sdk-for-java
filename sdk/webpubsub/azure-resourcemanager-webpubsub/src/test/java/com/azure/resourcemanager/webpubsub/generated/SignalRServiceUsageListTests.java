// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.webpubsub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.webpubsub.fluent.models.SignalRServiceUsageInner;
import com.azure.resourcemanager.webpubsub.models.SignalRServiceUsageList;
import com.azure.resourcemanager.webpubsub.models.SignalRServiceUsageName;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SignalRServiceUsageListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SignalRServiceUsageList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"id\":\"ndnvo\",\"currentValue\":4292877192766299113,\"limit\":3293446474919179561,\"name\":{\"value\":\"kcglhslaz\",\"localizedValue\":\"yggdtjixh\"},\"unit\":\"uofqwe\"}],\"nextLink\":\"hmenevfyexfwhybc\"}")
                .toObject(SignalRServiceUsageList.class);
        Assertions.assertEquals("ndnvo", model.value().get(0).id());
        Assertions.assertEquals(4292877192766299113L, model.value().get(0).currentValue());
        Assertions.assertEquals(3293446474919179561L, model.value().get(0).limit());
        Assertions.assertEquals("kcglhslaz", model.value().get(0).name().value());
        Assertions.assertEquals("yggdtjixh", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("uofqwe", model.value().get(0).unit());
        Assertions.assertEquals("hmenevfyexfwhybc", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SignalRServiceUsageList model =
            new SignalRServiceUsageList()
                .withValue(
                    Arrays
                        .asList(
                            new SignalRServiceUsageInner()
                                .withId("ndnvo")
                                .withCurrentValue(4292877192766299113L)
                                .withLimit(3293446474919179561L)
                                .withName(
                                    new SignalRServiceUsageName()
                                        .withValue("kcglhslaz")
                                        .withLocalizedValue("yggdtjixh"))
                                .withUnit("uofqwe")))
                .withNextLink("hmenevfyexfwhybc");
        model = BinaryData.fromObject(model).toObject(SignalRServiceUsageList.class);
        Assertions.assertEquals("ndnvo", model.value().get(0).id());
        Assertions.assertEquals(4292877192766299113L, model.value().get(0).currentValue());
        Assertions.assertEquals(3293446474919179561L, model.value().get(0).limit());
        Assertions.assertEquals("kcglhslaz", model.value().get(0).name().value());
        Assertions.assertEquals("yggdtjixh", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("uofqwe", model.value().get(0).unit());
        Assertions.assertEquals("hmenevfyexfwhybc", model.nextLink());
    }
}
