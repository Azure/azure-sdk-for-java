// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.NetworkProperties;
import com.azure.resourcemanager.devcenter.models.DomainJoinType;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class NetworkPropertiesTests {
    @Test
    public void testDeserialize() {
        NetworkProperties model =
            BinaryData
                .fromString(
                    "{\"provisioningState\":\"envrkpyouaibrebq\",\"healthCheckStatus\":\"Pending\",\"networkingResourceGroupName\":\"j\",\"domainJoinType\":\"HybridAzureADJoin\",\"subnetId\":\"qtnqtt\",\"domainName\":\"lwfffi\",\"organizationUnit\":\"pjpqqmtedltmmji\",\"domainUsername\":\"eozphv\",\"domainPassword\":\"uyqncygupkvipmd\"}")
                .toObject(NetworkProperties.class);
        Assertions.assertEquals("qtnqtt", model.subnetId());
        Assertions.assertEquals("lwfffi", model.domainName());
        Assertions.assertEquals("pjpqqmtedltmmji", model.organizationUnit());
        Assertions.assertEquals("eozphv", model.domainUsername());
        Assertions.assertEquals("uyqncygupkvipmd", model.domainPassword());
        Assertions.assertEquals("j", model.networkingResourceGroupName());
        Assertions.assertEquals(DomainJoinType.HYBRID_AZURE_ADJOIN, model.domainJoinType());
    }

    @Test
    public void testSerialize() {
        NetworkProperties model =
            new NetworkProperties()
                .withSubnetId("qtnqtt")
                .withDomainName("lwfffi")
                .withOrganizationUnit("pjpqqmtedltmmji")
                .withDomainUsername("eozphv")
                .withDomainPassword("uyqncygupkvipmd")
                .withNetworkingResourceGroupName("j")
                .withDomainJoinType(DomainJoinType.HYBRID_AZURE_ADJOIN);
        model = BinaryData.fromObject(model).toObject(NetworkProperties.class);
        Assertions.assertEquals("qtnqtt", model.subnetId());
        Assertions.assertEquals("lwfffi", model.domainName());
        Assertions.assertEquals("pjpqqmtedltmmji", model.organizationUnit());
        Assertions.assertEquals("eozphv", model.domainUsername());
        Assertions.assertEquals("uyqncygupkvipmd", model.domainPassword());
        Assertions.assertEquals("j", model.networkingResourceGroupName());
        Assertions.assertEquals(DomainJoinType.HYBRID_AZURE_ADJOIN, model.domainJoinType());
    }
}
