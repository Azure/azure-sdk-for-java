// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devcenter.DevCenterManager;
import com.azure.resourcemanager.devcenter.models.HealthCheckStatusDetails;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkConnectionsListHealthDetailsMockTests {
    @Test
    public void testListHealthDetails() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"startDateTime\":\"2021-03-08T04:04:59Z\",\"endDateTime\":\"2021-09-27T22:32:56Z\",\"healthChecks\":[{\"status\":\"Failed\",\"displayName\":\"hf\",\"startDateTime\":\"2021-08-21T02:34:59Z\",\"endDateTime\":\"2021-12-04T02:32:58Z\",\"errorType\":\"xj\",\"recommendedAction\":\"gcm\",\"additionalDetails\":\"qjhhhqxuwyvc\"}]},\"id\":\"oyvivbsiz\",\"name\":\"sjsz\",\"type\":\"bscm\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevCenterManager manager = DevCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<HealthCheckStatusDetails> response = manager.networkConnections()
            .listHealthDetails("wrlohapqinfszpyg", "qdhmrjzralcxpjby", 391224209, com.azure.core.util.Context.NONE);

    }
}
