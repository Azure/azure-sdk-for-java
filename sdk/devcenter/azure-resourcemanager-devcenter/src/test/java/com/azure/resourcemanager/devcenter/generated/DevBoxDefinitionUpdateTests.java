// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.models.DevBoxDefinitionUpdate;
import com.azure.resourcemanager.devcenter.models.HibernateSupport;
import com.azure.resourcemanager.devcenter.models.ImageReference;
import com.azure.resourcemanager.devcenter.models.Sku;
import com.azure.resourcemanager.devcenter.models.SkuTier;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DevBoxDefinitionUpdateTests {
    @Test
    public void testDeserialize() {
        DevBoxDefinitionUpdate model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"imageReference\":{\"id\":\"boekqvkel\",\"exactVersion\":\"mvb\",\"publisher\":\"yjsflhhcaalnji\",\"offer\":\"sxyawjoyaqcs\",\"sku\":\"jpkiidzyexznelix\"},\"sku\":{\"name\":\"rzt\",\"tier\":\"Basic\",\"size\":\"bnxknalaulppg\",\"family\":\"tpnapnyiropuhpig\",\"capacity\":2140009722},\"osStorageType\":\"lgqg\",\"hibernateSupport\":\"Enabled\"},\"tags\":{\"n\":\"djvcsl\",\"rmgucnap\":\"wwncwzzhxgk\",\"oellwp\":\"t\"},\"location\":\"d\"}")
                .toObject(DevBoxDefinitionUpdate.class);
        Assertions.assertEquals("djvcsl", model.tags().get("n"));
        Assertions.assertEquals("d", model.location());
        Assertions.assertEquals("boekqvkel", model.imageReference().id());
        Assertions.assertEquals("yjsflhhcaalnji", model.imageReference().publisher());
        Assertions.assertEquals("sxyawjoyaqcs", model.imageReference().offer());
        Assertions.assertEquals("jpkiidzyexznelix", model.imageReference().sku());
        Assertions.assertEquals("rzt", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("bnxknalaulppg", model.sku().size());
        Assertions.assertEquals("tpnapnyiropuhpig", model.sku().family());
        Assertions.assertEquals(2140009722, model.sku().capacity());
        Assertions.assertEquals("lgqg", model.osStorageType());
        Assertions.assertEquals(HibernateSupport.ENABLED, model.hibernateSupport());
    }

    @Test
    public void testSerialize() {
        DevBoxDefinitionUpdate model =
            new DevBoxDefinitionUpdate()
                .withTags(mapOf("n", "djvcsl", "rmgucnap", "wwncwzzhxgk", "oellwp", "t"))
                .withLocation("d")
                .withImageReference(
                    new ImageReference()
                        .withId("boekqvkel")
                        .withPublisher("yjsflhhcaalnji")
                        .withOffer("sxyawjoyaqcs")
                        .withSku("jpkiidzyexznelix"))
                .withSku(
                    new Sku()
                        .withName("rzt")
                        .withTier(SkuTier.BASIC)
                        .withSize("bnxknalaulppg")
                        .withFamily("tpnapnyiropuhpig")
                        .withCapacity(2140009722))
                .withOsStorageType("lgqg")
                .withHibernateSupport(HibernateSupport.ENABLED);
        model = BinaryData.fromObject(model).toObject(DevBoxDefinitionUpdate.class);
        Assertions.assertEquals("djvcsl", model.tags().get("n"));
        Assertions.assertEquals("d", model.location());
        Assertions.assertEquals("boekqvkel", model.imageReference().id());
        Assertions.assertEquals("yjsflhhcaalnji", model.imageReference().publisher());
        Assertions.assertEquals("sxyawjoyaqcs", model.imageReference().offer());
        Assertions.assertEquals("jpkiidzyexznelix", model.imageReference().sku());
        Assertions.assertEquals("rzt", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("bnxknalaulppg", model.sku().size());
        Assertions.assertEquals("tpnapnyiropuhpig", model.sku().family());
        Assertions.assertEquals(2140009722, model.sku().capacity());
        Assertions.assertEquals("lgqg", model.osStorageType());
        Assertions.assertEquals(HibernateSupport.ENABLED, model.hibernateSupport());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
