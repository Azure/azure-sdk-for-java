// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devcenter.DevCenterManager;
import com.azure.resourcemanager.devcenter.models.CatalogItemType;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.Project;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProjectsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"NotSpecified\",\"devCenterUri\":\"a\",\"devCenterId\":\"cfxwmdbox\",\"description\":\"gsftufqobrjlnacg\",\"maxDevBoxesPerUser\":1670865281,\"displayName\":\"nhxk\",\"catalogSettings\":{\"catalogItemSyncTypes\":[\"EnvironmentDefinition\",\"EnvironmentDefinition\",\"EnvironmentDefinition\",\"EnvironmentDefinition\"]}},\"identity\":{\"principalId\":\"9815e8cd-dad8-4152-81fc-39ee94706007\",\"tenantId\":\"33d44728-daaa-4681-91e2-34bbaf5a4740\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"rano\":{\"principalId\":\"dc6119f0-811f-47c8-aa28-d08fc04f4814\",\"clientId\":\"f26c317b-b379-4046-adf9-c492371496ed\"},\"ukkjqnvbroyla\":{\"principalId\":\"4c2d8016-3757-4817-b62c-d1ca36299221\",\"clientId\":\"88e3e855-7a46-4aad-8cbc-71f85eb2f6db\"},\"lcdisd\":{\"principalId\":\"c92234eb-387e-4202-aae1-2d6f564d6468\",\"clientId\":\"61af9015-ded9-4645-bc70-f2e43ba5eee0\"},\"jbjsvgjrwh\":{\"principalId\":\"f037d32b-aaed-4ecb-b24e-c25f3bbe2822\",\"clientId\":\"9b355662-f9f5-4500-96c9-a93936520a89\"}}},\"location\":\"vyc\",\"tags\":{\"xgccknfnw\":\"c\",\"fedxihchrphkm\":\"btmvpdvjdhttza\"},\"id\":\"rjdqnsdfzp\",\"name\":\"gtgkylkdghr\",\"type\":\"euutlwxezwzh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevCenterManager manager = DevCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Project> response = manager.projects().list(2009658341, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vyc", response.iterator().next().location());
        Assertions.assertEquals("c", response.iterator().next().tags().get("xgccknfnw"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("cfxwmdbox", response.iterator().next().devCenterId());
        Assertions.assertEquals("gsftufqobrjlnacg", response.iterator().next().description());
        Assertions.assertEquals(1670865281, response.iterator().next().maxDevBoxesPerUser());
        Assertions.assertEquals("nhxk", response.iterator().next().displayName());
        Assertions.assertEquals(CatalogItemType.ENVIRONMENT_DEFINITION,
            response.iterator().next().catalogSettings().catalogItemSyncTypes().get(0));
    }
}
