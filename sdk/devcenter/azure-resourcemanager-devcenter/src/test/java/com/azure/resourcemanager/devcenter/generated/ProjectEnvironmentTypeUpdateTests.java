// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.models.EnableStatus;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.ProjectEnvironmentTypeUpdate;
import com.azure.resourcemanager.devcenter.models.ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment;
import com.azure.resourcemanager.devcenter.models.UserAssignedIdentity;
import com.azure.resourcemanager.devcenter.models.UserRoleAssignmentValue;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ProjectEnvironmentTypeUpdateTests {
    @Test
    public void testDeserialize() {
        ProjectEnvironmentTypeUpdate model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"deploymentTargetId\":\"duhavhqlkt\",\"status\":\"Disabled\",\"creatorRoleAssignment\":{\"roles\":{}},\"userRoleAssignments\":{\"ycduier\":{\"roles\":{}},\"ccymvaolpsslql\":{\"roles\":{}},\"mdnbbglzpswiy\":{\"roles\":{}},\"cwyhzdxssa\":{\"roles\":{}}}},\"tags\":{\"daodvxzbncblyl\":\"mnvdfzn\",\"erscdntne\":\"stdbhhxsrzdzu\",\"tmweriofzpyq\":\"fiwjmygtdssls\",\"hhszh\":\"emwabnet\"},\"identity\":{\"type\":\"SystemAssigned,"
                        + " UserAssigned\",\"userAssignedIdentities\":{\"bmwmbesldnkw\":{},\"pjflcxogao\":{},\"z\":{},\"ikvmkqzeqqk\":{}}}}")
                .toObject(ProjectEnvironmentTypeUpdate.class);
        Assertions.assertEquals("mnvdfzn", model.tags().get("daodvxzbncblyl"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("duhavhqlkt", model.deploymentTargetId());
        Assertions.assertEquals(EnableStatus.DISABLED, model.status());
    }

    @Test
    public void testSerialize() {
        ProjectEnvironmentTypeUpdate model =
            new ProjectEnvironmentTypeUpdate()
                .withTags(
                    mapOf(
                        "daodvxzbncblyl",
                        "mnvdfzn",
                        "erscdntne",
                        "stdbhhxsrzdzu",
                        "tmweriofzpyq",
                        "fiwjmygtdssls",
                        "hhszh",
                        "emwabnet"))
                .withIdentity(
                    new ManagedServiceIdentity()
                        .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                        .withUserAssignedIdentities(
                            mapOf(
                                "bmwmbesldnkw",
                                new UserAssignedIdentity(),
                                "pjflcxogao",
                                new UserAssignedIdentity(),
                                "z",
                                new UserAssignedIdentity(),
                                "ikvmkqzeqqk",
                                new UserAssignedIdentity())))
                .withDeploymentTargetId("duhavhqlkt")
                .withStatus(EnableStatus.DISABLED)
                .withCreatorRoleAssignment(
                    new ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment().withRoles(mapOf()))
                .withUserRoleAssignments(
                    mapOf(
                        "ycduier",
                        new UserRoleAssignmentValue().withRoles(mapOf()),
                        "ccymvaolpsslql",
                        new UserRoleAssignmentValue().withRoles(mapOf()),
                        "mdnbbglzpswiy",
                        new UserRoleAssignmentValue().withRoles(mapOf()),
                        "cwyhzdxssa",
                        new UserRoleAssignmentValue().withRoles(mapOf())));
        model = BinaryData.fromObject(model).toObject(ProjectEnvironmentTypeUpdate.class);
        Assertions.assertEquals("mnvdfzn", model.tags().get("daodvxzbncblyl"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("duhavhqlkt", model.deploymentTargetId());
        Assertions.assertEquals(EnableStatus.DISABLED, model.status());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
