// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.models.EnableStatus;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.ProjectEnvironmentTypeUpdate;
import com.azure.resourcemanager.devcenter.models.ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment;
import com.azure.resourcemanager.devcenter.models.UserAssignedIdentity;
import com.azure.resourcemanager.devcenter.models.UserRoleAssignmentValue;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ProjectEnvironmentTypeUpdateTests {
    @Test
    public void testDeserialize() {
        ProjectEnvironmentTypeUpdate model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"deploymentTargetId\":\"vzunluthnnprnxi\",\"status\":\"Disabled\",\"creatorRoleAssignment\":{\"roles\":{}},\"userRoleAssignments\":{\"e\":{\"roles\":{}},\"dultskz\":{\"roles\":{}},\"tdzumveekgpw\":{\"roles\":{}}}},\"tags\":{\"yofd\":\"hkfpbs\"},\"identity\":{\"principalId\":\"f1094a7a-d10e-46da-99f3-154b26443114\",\"tenantId\":\"1ec60628-8209-4e91-9e06-9ff0e5bb69a8\",\"type\":\"None\",\"userAssignedIdentities\":{\"uwaboekqvke\":{\"principalId\":\"8e8e0b97-c8c2-4099-8c29-499a36231f7b\",\"clientId\":\"a0cd1ec8-fe44-45dd-8b54-d1c7bad09d41\"},\"mvb\":{\"principalId\":\"1d6592bc-982c-4dd9-9f8d-72856868dbcd\",\"clientId\":\"00c8ee6e-9597-4257-8e11-13bc0cd6fa7a\"},\"jsflhhcaalnjix\":{\"principalId\":\"9d675146-31a3-4ea9-a8a6-e5b43d2b65a8\",\"clientId\":\"eb21127a-e77c-4a59-99d4-8b354013826e\"},\"yaw\":{\"principalId\":\"f54a4881-cbe3-4787-bca3-82e05fcff20b\",\"clientId\":\"51075828-2016-4e8f-8428-79b63ac124b8\"}}}}")
                .toObject(ProjectEnvironmentTypeUpdate.class);
        Assertions.assertEquals("hkfpbs", model.tags().get("yofd"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("vzunluthnnprnxi", model.deploymentTargetId());
        Assertions.assertEquals(EnableStatus.DISABLED, model.status());
    }

    @Test
    public void testSerialize() {
        ProjectEnvironmentTypeUpdate model =
            new ProjectEnvironmentTypeUpdate()
                .withTags(mapOf("yofd", "hkfpbs"))
                .withIdentity(
                    new ManagedServiceIdentity()
                        .withType(ManagedServiceIdentityType.NONE)
                        .withUserAssignedIdentities(
                            mapOf(
                                "uwaboekqvke",
                                new UserAssignedIdentity(),
                                "mvb",
                                new UserAssignedIdentity(),
                                "jsflhhcaalnjix",
                                new UserAssignedIdentity(),
                                "yaw",
                                new UserAssignedIdentity())))
                .withDeploymentTargetId("vzunluthnnprnxi")
                .withStatus(EnableStatus.DISABLED)
                .withCreatorRoleAssignment(
                    new ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment().withRoles(mapOf()))
                .withUserRoleAssignments(
                    mapOf(
                        "e",
                        new UserRoleAssignmentValue().withRoles(mapOf()),
                        "dultskz",
                        new UserRoleAssignmentValue().withRoles(mapOf()),
                        "tdzumveekgpw",
                        new UserRoleAssignmentValue().withRoles(mapOf())));
        model = BinaryData.fromObject(model).toObject(ProjectEnvironmentTypeUpdate.class);
        Assertions.assertEquals("hkfpbs", model.tags().get("yofd"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("vzunluthnnprnxi", model.deploymentTargetId());
        Assertions.assertEquals(EnableStatus.DISABLED, model.status());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
