// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.CatalogProperties;
import com.azure.resourcemanager.devcenter.models.GitCatalog;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class CatalogPropertiesTests {
    @Test
    public void testDeserialize() {
        CatalogProperties model =
            BinaryData
                .fromString(
                    "{\"provisioningState\":\"gkpocipazyxoe\",\"lastSyncTime\":\"2020-12-27T20:47:04Z\",\"gitHub\":{\"uri\":\"npiucgygevqznty\",\"branch\":\"rbpizc\",\"secretIdentifier\":\"qjsdpydnfyhxdeo\",\"path\":\"zi\"},\"adoGit\":{\"uri\":\"fsj\",\"branch\":\"gzfbishcbk\",\"secretIdentifier\":\"jdeyeamdpha\",\"path\":\"lpbuxwgipwhonowk\"}}")
                .toObject(CatalogProperties.class);
        Assertions.assertEquals("npiucgygevqznty", model.gitHub().uri());
        Assertions.assertEquals("rbpizc", model.gitHub().branch());
        Assertions.assertEquals("qjsdpydnfyhxdeo", model.gitHub().secretIdentifier());
        Assertions.assertEquals("zi", model.gitHub().path());
        Assertions.assertEquals("fsj", model.adoGit().uri());
        Assertions.assertEquals("gzfbishcbk", model.adoGit().branch());
        Assertions.assertEquals("jdeyeamdpha", model.adoGit().secretIdentifier());
        Assertions.assertEquals("lpbuxwgipwhonowk", model.adoGit().path());
    }

    @Test
    public void testSerialize() {
        CatalogProperties model =
            new CatalogProperties()
                .withGitHub(
                    new GitCatalog()
                        .withUri("npiucgygevqznty")
                        .withBranch("rbpizc")
                        .withSecretIdentifier("qjsdpydnfyhxdeo")
                        .withPath("zi"))
                .withAdoGit(
                    new GitCatalog()
                        .withUri("fsj")
                        .withBranch("gzfbishcbk")
                        .withSecretIdentifier("jdeyeamdpha")
                        .withPath("lpbuxwgipwhonowk"));
        model = BinaryData.fromObject(model).toObject(CatalogProperties.class);
        Assertions.assertEquals("npiucgygevqznty", model.gitHub().uri());
        Assertions.assertEquals("rbpizc", model.gitHub().branch());
        Assertions.assertEquals("qjsdpydnfyhxdeo", model.gitHub().secretIdentifier());
        Assertions.assertEquals("zi", model.gitHub().path());
        Assertions.assertEquals("fsj", model.adoGit().uri());
        Assertions.assertEquals("gzfbishcbk", model.adoGit().branch());
        Assertions.assertEquals("jdeyeamdpha", model.adoGit().secretIdentifier());
        Assertions.assertEquals("lpbuxwgipwhonowk", model.adoGit().path());
    }
}
