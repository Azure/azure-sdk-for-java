// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.OperationStatusInner;
import com.azure.resourcemanager.devcenter.models.OperationStatusResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class OperationStatusInnerTests {
    @Test
    public void testDeserialize() {
        OperationStatusInner model =
            BinaryData
                .fromString(
                    "{\"resourceId\":\"nqpeh\",\"properties\":\"datadoy\",\"id\":\"ifthnz\",\"name\":\"dslgnayqigynduh\",\"status\":\"vhqlkthumaqo\",\"percentComplete\":30.626493,\"startTime\":\"2021-05-30T14:02:28Z\",\"endTime\":\"2021-04-25T18:04:33Z\",\"operations\":[{\"id\":\"tgccymvaolpss\",\"name\":\"lfmmdnbbglzpswi\",\"status\":\"d\",\"percentComplete\":37.165897,\"startTime\":\"2021-03-06T05:36:52Z\",\"endTime\":\"2021-08-29T22:47:03Z\",\"operations\":[]},{\"id\":\"dbzm\",\"name\":\"dfznudaodv\",\"status\":\"zbn\",\"percentComplete\":49.11586,\"startTime\":\"2021-10-03T10:48:30Z\",\"endTime\":\"2021-01-17T11:09:05Z\",\"operations\":[]},{\"id\":\"hxsrzdzucersc\",\"name\":\"t\",\"status\":\"evfiwjmygt\",\"percentComplete\":33.722137,\"startTime\":\"2021-11-02T04:29:59Z\",\"endTime\":\"2021-02-15T10:13:42Z\",\"operations\":[]}]}")
                .toObject(OperationStatusInner.class);
        Assertions.assertEquals("ifthnz", model.id());
        Assertions.assertEquals("dslgnayqigynduh", model.name());
        Assertions.assertEquals("vhqlkthumaqo", model.status());
        Assertions.assertEquals(30.626493F, model.percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-30T14:02:28Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-25T18:04:33Z"), model.endTime());
        Assertions.assertEquals("tgccymvaolpss", model.operations().get(0).id());
        Assertions.assertEquals("lfmmdnbbglzpswi", model.operations().get(0).name());
        Assertions.assertEquals("d", model.operations().get(0).status());
        Assertions.assertEquals(37.165897F, model.operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-06T05:36:52Z"), model.operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-29T22:47:03Z"), model.operations().get(0).endTime());
    }

    @Test
    public void testSerialize() {
        OperationStatusInner model =
            new OperationStatusInner()
                .withId("ifthnz")
                .withName("dslgnayqigynduh")
                .withStatus("vhqlkthumaqo")
                .withPercentComplete(30.626493F)
                .withStartTime(OffsetDateTime.parse("2021-05-30T14:02:28Z"))
                .withEndTime(OffsetDateTime.parse("2021-04-25T18:04:33Z"))
                .withOperations(
                    Arrays
                        .asList(
                            new OperationStatusResult()
                                .withId("tgccymvaolpss")
                                .withName("lfmmdnbbglzpswi")
                                .withStatus("d")
                                .withPercentComplete(37.165897F)
                                .withStartTime(OffsetDateTime.parse("2021-03-06T05:36:52Z"))
                                .withEndTime(OffsetDateTime.parse("2021-08-29T22:47:03Z"))
                                .withOperations(Arrays.asList()),
                            new OperationStatusResult()
                                .withId("dbzm")
                                .withName("dfznudaodv")
                                .withStatus("zbn")
                                .withPercentComplete(49.11586F)
                                .withStartTime(OffsetDateTime.parse("2021-10-03T10:48:30Z"))
                                .withEndTime(OffsetDateTime.parse("2021-01-17T11:09:05Z"))
                                .withOperations(Arrays.asList()),
                            new OperationStatusResult()
                                .withId("hxsrzdzucersc")
                                .withName("t")
                                .withStatus("evfiwjmygt")
                                .withPercentComplete(33.722137F)
                                .withStartTime(OffsetDateTime.parse("2021-11-02T04:29:59Z"))
                                .withEndTime(OffsetDateTime.parse("2021-02-15T10:13:42Z"))
                                .withOperations(Arrays.asList())));
        model = BinaryData.fromObject(model).toObject(OperationStatusInner.class);
        Assertions.assertEquals("ifthnz", model.id());
        Assertions.assertEquals("dslgnayqigynduh", model.name());
        Assertions.assertEquals("vhqlkthumaqo", model.status());
        Assertions.assertEquals(30.626493F, model.percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-30T14:02:28Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-25T18:04:33Z"), model.endTime());
        Assertions.assertEquals("tgccymvaolpss", model.operations().get(0).id());
        Assertions.assertEquals("lfmmdnbbglzpswi", model.operations().get(0).name());
        Assertions.assertEquals("d", model.operations().get(0).status());
        Assertions.assertEquals(37.165897F, model.operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-06T05:36:52Z"), model.operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-29T22:47:03Z"), model.operations().get(0).endTime());
    }
}
