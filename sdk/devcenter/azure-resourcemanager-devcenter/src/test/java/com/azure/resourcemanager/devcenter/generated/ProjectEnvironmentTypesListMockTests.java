// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devcenter.DevCenterManager;
import com.azure.resourcemanager.devcenter.models.EnvironmentTypeEnableStatus;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.ProjectEnvironmentType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProjectEnvironmentTypesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"TransientFailure\",\"environmentCount\":936817677,\"deploymentTargetId\":\"elyetndnbf\",\"displayName\":\"ggagfln\",\"status\":\"Enabled\",\"creatorRoleAssignment\":{\"roles\":{\"u\":{\"roleName\":\"hzjmucftbyrp\",\"description\":\"ohkpigqfu\"},\"h\":{\"roleName\":\"zmkw\",\"description\":\"snoxaxmqeqa\"},\"qtanarfdlpuk\":{\"roleName\":\"nhg\",\"description\":\"dyynfsvkhgb\"},\"dbhfhp\":{\"roleName\":\"yrneizjcpeo\",\"description\":\"hnmgbroux\"}}},\"userRoleAssignments\":{\"ogwxhnsduugwb\":{\"roles\":{\"zoyw\":{},\"xhpdulontacnpqwt\":{},\"htuevrhrljy\":{}}},\"lvhhtklnvn\":{\"roles\":{\"urfqkfuare\":{}}}}},\"tags\":{\"qxypokkhminq\":\"vkyfedevjbosl\",\"ngnbdxxew\":\"ymc\",\"qecrqctmxx\":\"ninvudbchaqdt\",\"huytxzvtzn\":\"tddmf\"},\"identity\":{\"principalId\":\"211c3300-1a6f-40b1-906c-d251271a0918\",\"tenantId\":\"f2799e66-317f-462c-aa4f-a57305f8944b\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"voxczytpr\":{\"principalId\":\"7cecf448-aaf9-42b3-9957-52ad10df293b\",\"clientId\":\"cbe4113d-18f0-4b4b-9187-6ea7b0ccee32\"}}},\"location\":\"wvroevytlyokrrr\",\"id\":\"uxvnsasbcrymodi\",\"name\":\"rxklobdxnazpmk\",\"type\":\"lmv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevCenterManager manager = DevCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ProjectEnvironmentType> response
            = manager.projectEnvironmentTypes().list("y", "ruuuybnch", 2064836238, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vkyfedevjbosl", response.iterator().next().tags().get("qxypokkhminq"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("wvroevytlyokrrr", response.iterator().next().location());
        Assertions.assertEquals("elyetndnbf", response.iterator().next().deploymentTargetId());
        Assertions.assertEquals("ggagfln", response.iterator().next().displayName());
        Assertions.assertEquals(EnvironmentTypeEnableStatus.ENABLED, response.iterator().next().status());
    }
}
