// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedServiceIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedServiceIdentity model = BinaryData.fromString(
            "{\"principalId\":\"33b34d18-6556-4205-954d-e7b22bd813c6\",\"tenantId\":\"e361c68e-0193-45df-9d13-59954533a829\",\"type\":\"None\",\"userAssignedIdentities\":{\"jywif\":{\"principalId\":\"d4989aff-87a9-4053-b728-4406fe4ad4d2\",\"clientId\":\"621c2240-331a-4017-8996-f2fdcc3a1198\"},\"saagdf\":{\"principalId\":\"38fd59b2-aace-4d08-8945-283f5814394b\",\"clientId\":\"f3af66b5-5a2e-43f2-88c5-55f49e8b006a\"},\"zlhjxrifkwmrvkt\":{\"principalId\":\"2d16b31e-3fb1-4a6f-b29a-5216402ceddd\",\"clientId\":\"632bc8a9-06b1-4920-bb08-5fbf2aa04caa\"}}}")
            .toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedServiceIdentity model = new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
            .withUserAssignedIdentities(mapOf("jywif", new UserAssignedIdentity(), "saagdf", new UserAssignedIdentity(),
                "zlhjxrifkwmrvkt", new UserAssignedIdentity()));
        model = BinaryData.fromObject(model).toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
