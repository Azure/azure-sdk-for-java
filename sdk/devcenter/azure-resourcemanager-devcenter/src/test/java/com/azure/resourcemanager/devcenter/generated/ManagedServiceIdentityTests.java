// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedServiceIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedServiceIdentity model = BinaryData.fromString(
            "{\"principalId\":\"afa314cf-bb26-43be-a384-bdb40433cb9a\",\"tenantId\":\"7be842e3-bb34-4c95-b7c8-c51955e7f3aa\",\"type\":\"None\",\"userAssignedIdentities\":{\"jywif\":{\"principalId\":\"d4ac48ac-e07e-4ec5-b7ae-ceacbf7aaa50\",\"clientId\":\"d8ce62a3-953d-485e-a86d-e1d684cd6488\"},\"saagdf\":{\"principalId\":\"4b0697d4-b1ce-4fe8-b4b9-116f8c81ea14\",\"clientId\":\"1d3c7630-c9bb-4c1c-8896-8fb747ba907c\"},\"zlhjxrifkwmrvkt\":{\"principalId\":\"89f758ca-d175-4041-9721-b56088e2478c\",\"clientId\":\"d2b1f4ce-cacf-491f-81eb-105f9f6f81a8\"}}}")
            .toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedServiceIdentity model = new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
            .withUserAssignedIdentities(mapOf("jywif", new UserAssignedIdentity(), "saagdf", new UserAssignedIdentity(),
                "zlhjxrifkwmrvkt", new UserAssignedIdentity()));
        model = BinaryData.fromObject(model).toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
