// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.ProjectEnvironmentTypeInner;
import com.azure.resourcemanager.devcenter.models.EnvironmentRole;
import com.azure.resourcemanager.devcenter.models.EnvironmentTypeEnableStatus;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment;
import com.azure.resourcemanager.devcenter.models.UserAssignedIdentity;
import com.azure.resourcemanager.devcenter.models.UserRoleAssignmentValue;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ProjectEnvironmentTypeInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProjectEnvironmentTypeInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"provisioningState\":\"Succeeded\",\"displayName\":\"thsu\",\"environmentCount\":296949281,\"deploymentTargetId\":\"nyyazttbtwwrqpue\",\"status\":\"Enabled\",\"creatorRoleAssignment\":{\"roles\":{\"jwbhqwalmuz\":{\"roleName\":\"iexzfeyue\",\"description\":\"ibx\"},\"wz\":{\"roleName\":\"xaepdkzjancuxr\",\"description\":\"wbavxbniwdj\"},\"lcuhxwtctyqiklb\":{\"roleName\":\"dbpgnxytxhp\",\"description\":\"bzpfzab\"}}},\"userRoleAssignments\":{\"hvpesapskrdqm\":{\"roles\":{\"gsxnkjzkdeslpv\":{\"roleName\":\"zbhvgyuguosv\",\"description\":\"fssxqukkfplg\"},\"ebb\":{\"roleName\":\"pwiyig\",\"description\":\"pkdwzbai\"},\"khsmtxpsiebt\":{\"roleName\":\"m\",\"description\":\"qupedeojnab\"}}},\"t\":{\"roles\":{\"xotogtwrupqsxv\":{\"roleName\":\"htldwk\",\"description\":\"xuutkncwscwsv\"},\"fcnj\":{\"roleName\":\"i\",\"description\":\"kvceoveilovnotyf\"},\"nv\":{\"roleName\":\"cn\",\"description\":\"hbttkphyw\"}}}}},\"tags\":{\"abgy\":\"ermclfplphoxuscr\",\"qugxywpmueefjzwf\":\"psbjta\"},\"identity\":{\"principalId\":\"4246df73-1f1a-476e-8b18-3b93fbfc1308\",\"tenantId\":\"9cca2947-9215-40b0-b716-8b573a9afa79\",\"type\":\"SystemAssigned,"
                        + " UserAssigned\",\"userAssignedIdentities\":{\"yonobgl\":{\"principalId\":\"00dc6153-d1a7-4879-ba32-32beaea752bd\",\"clientId\":\"32aed806-404f-4c71-b781-54c850b32cc8\"},\"qxtccmgyudx\":{\"principalId\":\"d06fad69-ea99-40cb-85d2-d25fe5532e40\",\"clientId\":\"13276e9b-e679-4ea0-9fc7-02f2abc467e5\"},\"moyrxvwfudwpz\":{\"principalId\":\"47af9226-e6b2-45c6-97f1-e786a6f022f1\",\"clientId\":\"5919eb06-a9de-46ff-97ed-d744365086f6\"}}},\"location\":\"xhdzhlrqjbhckf\",\"id\":\"hrxsbk\",\"name\":\"vpycanuzbp\",\"type\":\"kafkuwbcrnwbm\"}")
                .toObject(ProjectEnvironmentTypeInner.class);
        Assertions.assertEquals("ermclfplphoxuscr", model.tags().get("abgy"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("xhdzhlrqjbhckf", model.location());
        Assertions.assertEquals("thsu", model.displayName());
        Assertions.assertEquals("nyyazttbtwwrqpue", model.deploymentTargetId());
        Assertions.assertEquals(EnvironmentTypeEnableStatus.ENABLED, model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProjectEnvironmentTypeInner model =
            new ProjectEnvironmentTypeInner()
                .withTags(mapOf("abgy", "ermclfplphoxuscr", "qugxywpmueefjzwf", "psbjta"))
                .withIdentity(
                    new ManagedServiceIdentity()
                        .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                        .withUserAssignedIdentities(
                            mapOf(
                                "yonobgl",
                                new UserAssignedIdentity(),
                                "qxtccmgyudx",
                                new UserAssignedIdentity(),
                                "moyrxvwfudwpz",
                                new UserAssignedIdentity())))
                .withLocation("xhdzhlrqjbhckf")
                .withDisplayName("thsu")
                .withDeploymentTargetId("nyyazttbtwwrqpue")
                .withStatus(EnvironmentTypeEnableStatus.ENABLED)
                .withCreatorRoleAssignment(
                    new ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment()
                        .withRoles(
                            mapOf(
                                "jwbhqwalmuz",
                                new EnvironmentRole(),
                                "wz",
                                new EnvironmentRole(),
                                "lcuhxwtctyqiklb",
                                new EnvironmentRole())))
                .withUserRoleAssignments(
                    mapOf(
                        "hvpesapskrdqm",
                        new UserRoleAssignmentValue()
                            .withRoles(
                                mapOf(
                                    "gsxnkjzkdeslpv",
                                    new EnvironmentRole(),
                                    "ebb",
                                    new EnvironmentRole(),
                                    "khsmtxpsiebt",
                                    new EnvironmentRole())),
                        "t",
                        new UserRoleAssignmentValue()
                            .withRoles(
                                mapOf(
                                    "xotogtwrupqsxv",
                                    new EnvironmentRole(),
                                    "fcnj",
                                    new EnvironmentRole(),
                                    "nv",
                                    new EnvironmentRole()))));
        model = BinaryData.fromObject(model).toObject(ProjectEnvironmentTypeInner.class);
        Assertions.assertEquals("ermclfplphoxuscr", model.tags().get("abgy"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("xhdzhlrqjbhckf", model.location());
        Assertions.assertEquals("thsu", model.displayName());
        Assertions.assertEquals("nyyazttbtwwrqpue", model.deploymentTargetId());
        Assertions.assertEquals(EnvironmentTypeEnableStatus.ENABLED, model.status());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
