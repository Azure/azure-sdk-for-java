// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.ProjectEnvironmentTypeInner;
import com.azure.resourcemanager.devcenter.models.EnableStatus;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment;
import com.azure.resourcemanager.devcenter.models.UserAssignedIdentity;
import com.azure.resourcemanager.devcenter.models.UserRoleAssignmentValue;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ProjectEnvironmentTypeInnerTests {
    @Test
    public void testDeserialize() {
        ProjectEnvironmentTypeInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"provisioningState\":\"ceoveilovno\",\"deploymentTargetId\":\"fj\",\"status\":\"Disabled\",\"creatorRoleAssignment\":{\"roles\":{}},\"userRoleAssignments\":{\"dhbt\":{\"roles\":{}},\"phywpnvj\":{\"roles\":{}}}},\"tags\":{\"plpho\":\"nermcl\",\"tazqugxywpmueefj\":\"uscrpabgyepsb\",\"dsuyonobgla\":\"wfqkquj\",\"tcc\":\"cq\"},\"identity\":{\"principalId\":\"b5419b0c-717b-40a0-9db3-17cc388d95d8\",\"tenantId\":\"14513c63-6603-4cbf-9e1d-89191f3ca287\",\"type\":\"None\",\"userAssignedIdentities\":{\"moyrxvwfudwpz\":{\"principalId\":\"871e91cb-f0d9-47ed-a714-18a3ade83229\",\"clientId\":\"b595669c-c713-4614-a5b9-8b5ab07042a5\"},\"hdzhlrqj\":{\"principalId\":\"6f059ed7-8c30-4d3f-a870-8f507830a060\",\"clientId\":\"c3b3c052-4640-494b-80bf-3b5654e4fc12\"},\"kfrlhrxsbky\":{\"principalId\":\"d36f5e32-fc54-4bf5-998e-6e0af80de550\",\"clientId\":\"c989bc3b-d012-401b-8e60-3265d8d76520\"},\"ca\":{\"principalId\":\"56bf9fd4-e0e3-4bc0-ba29-1d7717198a00\",\"clientId\":\"32f0f9fc-2af2-49a8-b9ea-c9b417e839a5\"}}},\"location\":\"z\",\"id\":\"zka\",\"name\":\"kuwbcrnwb\",\"type\":\"ehhseyvjusrts\"}")
                .toObject(ProjectEnvironmentTypeInner.class);
        Assertions.assertEquals("nermcl", model.tags().get("plpho"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("z", model.location());
        Assertions.assertEquals("fj", model.deploymentTargetId());
        Assertions.assertEquals(EnableStatus.DISABLED, model.status());
    }

    @Test
    public void testSerialize() {
        ProjectEnvironmentTypeInner model =
            new ProjectEnvironmentTypeInner()
                .withTags(
                    mapOf(
                        "plpho", "nermcl", "tazqugxywpmueefj", "uscrpabgyepsb", "dsuyonobgla", "wfqkquj", "tcc", "cq"))
                .withIdentity(
                    new ManagedServiceIdentity()
                        .withType(ManagedServiceIdentityType.NONE)
                        .withUserAssignedIdentities(
                            mapOf(
                                "moyrxvwfudwpz",
                                new UserAssignedIdentity(),
                                "hdzhlrqj",
                                new UserAssignedIdentity(),
                                "kfrlhrxsbky",
                                new UserAssignedIdentity(),
                                "ca",
                                new UserAssignedIdentity())))
                .withLocation("z")
                .withDeploymentTargetId("fj")
                .withStatus(EnableStatus.DISABLED)
                .withCreatorRoleAssignment(
                    new ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment().withRoles(mapOf()))
                .withUserRoleAssignments(
                    mapOf(
                        "dhbt",
                        new UserRoleAssignmentValue().withRoles(mapOf()),
                        "phywpnvj",
                        new UserRoleAssignmentValue().withRoles(mapOf())));
        model = BinaryData.fromObject(model).toObject(ProjectEnvironmentTypeInner.class);
        Assertions.assertEquals("nermcl", model.tags().get("plpho"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("z", model.location());
        Assertions.assertEquals("fj", model.deploymentTargetId());
        Assertions.assertEquals(EnableStatus.DISABLED, model.status());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
