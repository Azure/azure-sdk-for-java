// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.DevBoxDefinitionUpdateProperties;
import com.azure.resourcemanager.devcenter.models.HibernateSupport;
import com.azure.resourcemanager.devcenter.models.ImageReference;
import com.azure.resourcemanager.devcenter.models.Sku;
import com.azure.resourcemanager.devcenter.models.SkuTier;
import org.junit.jupiter.api.Assertions;

public final class DevBoxDefinitionUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DevBoxDefinitionUpdateProperties model =
            BinaryData
                .fromString(
                    "{\"imageReference\":{\"id\":\"hhqzonosgg\",\"exactVersion\":\"c\"},\"sku\":{\"name\":\"fwdsj\",\"tier\":\"Standard\",\"size\":\"jutiiswacff\",\"family\":\"k\",\"capacity\":655957615},\"osStorageType\":\"kfvhqcrailvpn\",\"hibernateSupport\":\"Enabled\"}")
                .toObject(DevBoxDefinitionUpdateProperties.class);
        Assertions.assertEquals("hhqzonosgg", model.imageReference().id());
        Assertions.assertEquals("fwdsj", model.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals("jutiiswacff", model.sku().size());
        Assertions.assertEquals("k", model.sku().family());
        Assertions.assertEquals(655957615, model.sku().capacity());
        Assertions.assertEquals("kfvhqcrailvpn", model.osStorageType());
        Assertions.assertEquals(HibernateSupport.ENABLED, model.hibernateSupport());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DevBoxDefinitionUpdateProperties model =
            new DevBoxDefinitionUpdateProperties()
                .withImageReference(new ImageReference().withId("hhqzonosgg"))
                .withSku(
                    new Sku()
                        .withName("fwdsj")
                        .withTier(SkuTier.STANDARD)
                        .withSize("jutiiswacff")
                        .withFamily("k")
                        .withCapacity(655957615))
                .withOsStorageType("kfvhqcrailvpn")
                .withHibernateSupport(HibernateSupport.ENABLED);
        model = BinaryData.fromObject(model).toObject(DevBoxDefinitionUpdateProperties.class);
        Assertions.assertEquals("hhqzonosgg", model.imageReference().id());
        Assertions.assertEquals("fwdsj", model.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals("jutiiswacff", model.sku().size());
        Assertions.assertEquals("k", model.sku().family());
        Assertions.assertEquals(655957615, model.sku().capacity());
        Assertions.assertEquals("kfvhqcrailvpn", model.osStorageType());
        Assertions.assertEquals(HibernateSupport.ENABLED, model.hibernateSupport());
    }
}
