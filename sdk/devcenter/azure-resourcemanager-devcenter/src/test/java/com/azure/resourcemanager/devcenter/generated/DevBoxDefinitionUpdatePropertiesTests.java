// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.DevBoxDefinitionUpdateProperties;
import com.azure.resourcemanager.devcenter.models.ImageReference;
import com.azure.resourcemanager.devcenter.models.Sku;
import com.azure.resourcemanager.devcenter.models.SkuTier;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DevBoxDefinitionUpdatePropertiesTests {
    @Test
    public void testDeserialize() {
        DevBoxDefinitionUpdateProperties model =
            BinaryData
                .fromString(
                    "{\"imageReference\":{\"id\":\"shhszhedplvwiw\",\"exactVersion\":\"mwmbes\",\"publisher\":\"nkww\",\"offer\":\"pjflcxogao\",\"sku\":\"nzmnsikvm\"},\"sku\":{\"name\":\"ze\",\"tier\":\"Premium\",\"size\":\"l\",\"family\":\"zxmhhvhgu\",\"capacity\":1748485864},\"osStorageType\":\"kwobdagxtibq\"}")
                .toObject(DevBoxDefinitionUpdateProperties.class);
        Assertions.assertEquals("shhszhedplvwiw", model.imageReference().id());
        Assertions.assertEquals("nkww", model.imageReference().publisher());
        Assertions.assertEquals("pjflcxogao", model.imageReference().offer());
        Assertions.assertEquals("nzmnsikvm", model.imageReference().sku());
        Assertions.assertEquals("ze", model.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.sku().tier());
        Assertions.assertEquals("l", model.sku().size());
        Assertions.assertEquals("zxmhhvhgu", model.sku().family());
        Assertions.assertEquals(1748485864, model.sku().capacity());
        Assertions.assertEquals("kwobdagxtibq", model.osStorageType());
    }

    @Test
    public void testSerialize() {
        DevBoxDefinitionUpdateProperties model =
            new DevBoxDefinitionUpdateProperties()
                .withImageReference(
                    new ImageReference()
                        .withId("shhszhedplvwiw")
                        .withPublisher("nkww")
                        .withOffer("pjflcxogao")
                        .withSku("nzmnsikvm"))
                .withSku(
                    new Sku()
                        .withName("ze")
                        .withTier(SkuTier.PREMIUM)
                        .withSize("l")
                        .withFamily("zxmhhvhgu")
                        .withCapacity(1748485864))
                .withOsStorageType("kwobdagxtibq");
        model = BinaryData.fromObject(model).toObject(DevBoxDefinitionUpdateProperties.class);
        Assertions.assertEquals("shhszhedplvwiw", model.imageReference().id());
        Assertions.assertEquals("nkww", model.imageReference().publisher());
        Assertions.assertEquals("pjflcxogao", model.imageReference().offer());
        Assertions.assertEquals("nzmnsikvm", model.imageReference().sku());
        Assertions.assertEquals("ze", model.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.sku().tier());
        Assertions.assertEquals("l", model.sku().size());
        Assertions.assertEquals("zxmhhvhgu", model.sku().family());
        Assertions.assertEquals(1748485864, model.sku().capacity());
        Assertions.assertEquals("kwobdagxtibq", model.osStorageType());
    }
}
