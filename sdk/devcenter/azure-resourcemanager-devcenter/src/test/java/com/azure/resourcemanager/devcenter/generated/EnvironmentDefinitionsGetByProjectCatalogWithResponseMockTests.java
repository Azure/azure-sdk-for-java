// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devcenter.DevCenterManager;
import com.azure.resourcemanager.devcenter.models.EnvironmentDefinition;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EnvironmentDefinitionsGetByProjectCatalogWithResponseMockTests {
    @Test
    public void testGetByProjectCatalogWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"ojhp\",\"parameters\":[{\"id\":\"mdxotngfdgu\",\"name\":\"yzihgrkyuizabsn\",\"description\":\"pphoj\",\"type\":\"integer\",\"readOnly\":true,\"required\":false},{\"id\":\"gzfc\",\"name\":\"gomfgbeglq\",\"description\":\"eohibet\",\"type\":\"number\",\"readOnly\":false,\"required\":false}],\"templatePath\":\"fxeeebtijvacvbm\",\"validationStatus\":\"Pending\"},\"id\":\"q\",\"name\":\"lajrnwxacevehj\",\"type\":\"uyxoaf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevCenterManager manager = DevCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        EnvironmentDefinition response = manager.environmentDefinitions()
            .getByProjectCatalogWithResponse("fuojrngif", "rzpasccbiuimzdly", "dfqwmkyoq", "fdvruz",
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
