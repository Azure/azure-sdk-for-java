// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.DevCenterSkuInner;
import com.azure.resourcemanager.devcenter.models.SkuTier;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DevCenterSkuInnerTests {
    @Test
    public void testDeserialize() {
        DevCenterSkuInner model =
            BinaryData
                .fromString(
                    "{\"resourceType\":\"i\",\"locations\":[\"acqqudfnbyxbaaab\",\"yvayffimrzr\",\"uzqogsexnevf\"],\"capabilities\":[{\"name\":\"wmewzsyy\",\"value\":\"uzsoi\"},{\"name\":\"ud\",\"value\":\"rx\"}],\"name\":\"rthzvaytdwkqbrqu\",\"tier\":\"Standard\",\"size\":\"h\",\"family\":\"iilivpdtiirqtd\",\"capacity\":887642500}")
                .toObject(DevCenterSkuInner.class);
        Assertions.assertEquals("rthzvaytdwkqbrqu", model.name());
        Assertions.assertEquals(SkuTier.STANDARD, model.tier());
        Assertions.assertEquals("h", model.size());
        Assertions.assertEquals("iilivpdtiirqtd", model.family());
        Assertions.assertEquals(887642500, model.capacity());
    }

    @Test
    public void testSerialize() {
        DevCenterSkuInner model =
            new DevCenterSkuInner()
                .withName("rthzvaytdwkqbrqu")
                .withTier(SkuTier.STANDARD)
                .withSize("h")
                .withFamily("iilivpdtiirqtd")
                .withCapacity(887642500);
        model = BinaryData.fromObject(model).toObject(DevCenterSkuInner.class);
        Assertions.assertEquals("rthzvaytdwkqbrqu", model.name());
        Assertions.assertEquals(SkuTier.STANDARD, model.tier());
        Assertions.assertEquals("h", model.size());
        Assertions.assertEquals("iilivpdtiirqtd", model.family());
        Assertions.assertEquals(887642500, model.capacity());
    }
}
