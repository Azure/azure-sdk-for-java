// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.UsageInner;
import com.azure.resourcemanager.devcenter.models.UsageName;
import com.azure.resourcemanager.devcenter.models.UsageUnit;
import org.junit.jupiter.api.Assertions;

public final class UsageInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UsageInner model = BinaryData.fromString(
            "{\"currentValue\":3797997651495402097,\"limit\":1729044894039608020,\"unit\":\"Count\",\"name\":{\"localizedValue\":\"rrjreafxtsgu\",\"value\":\"jglikkxwslolb\"},\"id\":\"vuzlm\"}")
            .toObject(UsageInner.class);
        Assertions.assertEquals(3797997651495402097L, model.currentValue());
        Assertions.assertEquals(1729044894039608020L, model.limit());
        Assertions.assertEquals(UsageUnit.COUNT, model.unit());
        Assertions.assertEquals("rrjreafxtsgu", model.name().localizedValue());
        Assertions.assertEquals("jglikkxwslolb", model.name().value());
        Assertions.assertEquals("vuzlm", model.id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UsageInner model = new UsageInner().withCurrentValue(3797997651495402097L)
            .withLimit(1729044894039608020L)
            .withUnit(UsageUnit.COUNT)
            .withName(new UsageName().withLocalizedValue("rrjreafxtsgu").withValue("jglikkxwslolb"))
            .withId("vuzlm");
        model = BinaryData.fromObject(model).toObject(UsageInner.class);
        Assertions.assertEquals(3797997651495402097L, model.currentValue());
        Assertions.assertEquals(1729044894039608020L, model.limit());
        Assertions.assertEquals(UsageUnit.COUNT, model.unit());
        Assertions.assertEquals("rrjreafxtsgu", model.name().localizedValue());
        Assertions.assertEquals("jglikkxwslolb", model.name().value());
        Assertions.assertEquals("vuzlm", model.id());
    }
}
