// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.models.CatalogItemType;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.ProjectCatalogSettings;
import com.azure.resourcemanager.devcenter.models.ProjectUpdate;
import com.azure.resourcemanager.devcenter.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ProjectUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProjectUpdate model = BinaryData.fromString(
            "{\"properties\":{\"devCenterId\":\"wgcu\",\"description\":\"tumkdosvqwhbm\",\"maxDevBoxesPerUser\":1497620633,\"displayName\":\"jfddgmbmbe\",\"catalogSettings\":{\"catalogItemSyncTypes\":[\"EnvironmentDefinition\",\"EnvironmentDefinition\",\"EnvironmentDefinition\",\"EnvironmentDefinition\"]}},\"identity\":{\"principalId\":\"7270899c-84fd-41e8-9980-7785adfbe95f\",\"tenantId\":\"260a3084-5f25-4849-8446-3177dd693a6b\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"algbquxigjyjg\":{\"principalId\":\"ef84a46a-6cce-4e30-bc32-e8c66f45d84f\",\"clientId\":\"87f4c383-429c-4b69-8a61-22630dafc507\"},\"o\":{\"principalId\":\"14fddd0b-be53-456b-bbab-c9d0e6d0e47c\",\"clientId\":\"08bc1c58-1524-47ce-86c5-8e7225db61f4\"},\"rtxilner\":{\"principalId\":\"f7e8cb35-3a74-4cc4-889a-bf2a90ce6916\",\"clientId\":\"33d93201-40af-4c01-a405-bfcebcf24f84\"}}},\"tags\":{\"awrlyx\":\"ysvlejuvf\",\"nwbxgjvtbvpyssz\":\"jkcpr\"},\"location\":\"rujqg\"}")
            .toObject(ProjectUpdate.class);
        Assertions.assertEquals("ysvlejuvf", model.tags().get("awrlyx"));
        Assertions.assertEquals("rujqg", model.location());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("wgcu", model.devCenterId());
        Assertions.assertEquals("tumkdosvqwhbm", model.description());
        Assertions.assertEquals(1497620633, model.maxDevBoxesPerUser());
        Assertions.assertEquals("jfddgmbmbe", model.displayName());
        Assertions.assertEquals(CatalogItemType.ENVIRONMENT_DEFINITION,
            model.catalogSettings().catalogItemSyncTypes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProjectUpdate model = new ProjectUpdate().withTags(mapOf("awrlyx", "ysvlejuvf", "nwbxgjvtbvpyssz", "jkcpr"))
            .withLocation("rujqg")
            .withIdentity(
                new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                    .withUserAssignedIdentities(mapOf("algbquxigjyjg", new UserAssignedIdentity(), "o",
                        new UserAssignedIdentity(), "rtxilner", new UserAssignedIdentity())))
            .withDevCenterId("wgcu")
            .withDescription("tumkdosvqwhbm")
            .withMaxDevBoxesPerUser(1497620633)
            .withDisplayName("jfddgmbmbe")
            .withCatalogSettings(new ProjectCatalogSettings().withCatalogItemSyncTypes(
                Arrays.asList(CatalogItemType.ENVIRONMENT_DEFINITION, CatalogItemType.ENVIRONMENT_DEFINITION,
                    CatalogItemType.ENVIRONMENT_DEFINITION, CatalogItemType.ENVIRONMENT_DEFINITION)));
        model = BinaryData.fromObject(model).toObject(ProjectUpdate.class);
        Assertions.assertEquals("ysvlejuvf", model.tags().get("awrlyx"));
        Assertions.assertEquals("rujqg", model.location());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("wgcu", model.devCenterId());
        Assertions.assertEquals("tumkdosvqwhbm", model.description());
        Assertions.assertEquals(1497620633, model.maxDevBoxesPerUser());
        Assertions.assertEquals("jfddgmbmbe", model.displayName());
        Assertions.assertEquals(CatalogItemType.ENVIRONMENT_DEFINITION,
            model.catalogSettings().catalogItemSyncTypes().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
