// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.models.CatalogItemType;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.ProjectCatalogSettings;
import com.azure.resourcemanager.devcenter.models.ProjectUpdate;
import com.azure.resourcemanager.devcenter.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ProjectUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProjectUpdate model = BinaryData.fromString(
            "{\"properties\":{\"devCenterId\":\"wgcu\",\"description\":\"tumkdosvqwhbm\",\"maxDevBoxesPerUser\":1497620633,\"displayName\":\"jfddgmbmbe\",\"catalogSettings\":{\"catalogItemSyncTypes\":[\"EnvironmentDefinition\",\"EnvironmentDefinition\",\"EnvironmentDefinition\",\"EnvironmentDefinition\"]}},\"identity\":{\"principalId\":\"c58af8d1-f0ea-41a1-a6ef-64759c375a08\",\"tenantId\":\"15436206-db05-444c-a31f-9cbc007e47dd\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"algbquxigjyjg\":{\"principalId\":\"bf0c076a-462a-44d6-91e6-9e69f4a4599c\",\"clientId\":\"b8c1aee4-e227-459b-aa6b-c3e1ca4a7e2e\"},\"o\":{\"principalId\":\"60e4d581-180b-4cd5-8b95-7dbe544f68e8\",\"clientId\":\"2ca71f47-feff-4aef-a987-5834944e3a8c\"},\"rtxilner\":{\"principalId\":\"a197c37d-871e-4021-b4bb-cb442ca70baa\",\"clientId\":\"462dafdd-7a7b-4089-8749-60c6baf1f3fb\"}}},\"tags\":{\"awrlyx\":\"ysvlejuvf\",\"nwbxgjvtbvpyssz\":\"jkcpr\"},\"location\":\"rujqg\"}")
            .toObject(ProjectUpdate.class);
        Assertions.assertEquals("ysvlejuvf", model.tags().get("awrlyx"));
        Assertions.assertEquals("rujqg", model.location());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("wgcu", model.devCenterId());
        Assertions.assertEquals("tumkdosvqwhbm", model.description());
        Assertions.assertEquals(1497620633, model.maxDevBoxesPerUser());
        Assertions.assertEquals("jfddgmbmbe", model.displayName());
        Assertions.assertEquals(CatalogItemType.ENVIRONMENT_DEFINITION,
            model.catalogSettings().catalogItemSyncTypes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProjectUpdate model = new ProjectUpdate().withTags(mapOf("awrlyx", "ysvlejuvf", "nwbxgjvtbvpyssz", "jkcpr"))
            .withLocation("rujqg")
            .withIdentity(
                new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                    .withUserAssignedIdentities(mapOf("algbquxigjyjg", new UserAssignedIdentity(), "o",
                        new UserAssignedIdentity(), "rtxilner", new UserAssignedIdentity())))
            .withDevCenterId("wgcu")
            .withDescription("tumkdosvqwhbm")
            .withMaxDevBoxesPerUser(1497620633)
            .withDisplayName("jfddgmbmbe")
            .withCatalogSettings(new ProjectCatalogSettings().withCatalogItemSyncTypes(
                Arrays.asList(CatalogItemType.ENVIRONMENT_DEFINITION, CatalogItemType.ENVIRONMENT_DEFINITION,
                    CatalogItemType.ENVIRONMENT_DEFINITION, CatalogItemType.ENVIRONMENT_DEFINITION)));
        model = BinaryData.fromObject(model).toObject(ProjectUpdate.class);
        Assertions.assertEquals("ysvlejuvf", model.tags().get("awrlyx"));
        Assertions.assertEquals("rujqg", model.location());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("wgcu", model.devCenterId());
        Assertions.assertEquals("tumkdosvqwhbm", model.description());
        Assertions.assertEquals(1497620633, model.maxDevBoxesPerUser());
        Assertions.assertEquals("jfddgmbmbe", model.displayName());
        Assertions.assertEquals(CatalogItemType.ENVIRONMENT_DEFINITION,
            model.catalogSettings().catalogItemSyncTypes().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
