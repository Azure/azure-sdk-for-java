// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.models.ProjectUpdate;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ProjectUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProjectUpdate model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"devCenterId\":\"tbvpysszdnru\",\"description\":\"guhmuouqfpr\",\"maxDevBoxesPerUser\":584563122},\"tags\":{\"itnwuizgazxufi\":\"g\",\"hr\":\"uckyf\",\"zwdzuh\":\"idf\",\"wxmnteiwao\":\"ymwisdkft\"},\"location\":\"km\"}")
                .toObject(ProjectUpdate.class);
        Assertions.assertEquals("g", model.tags().get("itnwuizgazxufi"));
        Assertions.assertEquals("km", model.location());
        Assertions.assertEquals("tbvpysszdnru", model.devCenterId());
        Assertions.assertEquals("guhmuouqfpr", model.description());
        Assertions.assertEquals(584563122, model.maxDevBoxesPerUser());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProjectUpdate model =
            new ProjectUpdate()
                .withTags(mapOf("itnwuizgazxufi", "g", "hr", "uckyf", "zwdzuh", "idf", "wxmnteiwao", "ymwisdkft"))
                .withLocation("km")
                .withDevCenterId("tbvpysszdnru")
                .withDescription("guhmuouqfpr")
                .withMaxDevBoxesPerUser(584563122);
        model = BinaryData.fromObject(model).toObject(ProjectUpdate.class);
        Assertions.assertEquals("g", model.tags().get("itnwuizgazxufi"));
        Assertions.assertEquals("km", model.location());
        Assertions.assertEquals("tbvpysszdnru", model.devCenterId());
        Assertions.assertEquals("guhmuouqfpr", model.description());
        Assertions.assertEquals(584563122, model.maxDevBoxesPerUser());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
