// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.models.OperationStatusResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class OperationStatusResultTests {
    @Test
    public void testDeserialize() {
        OperationStatusResult model =
            BinaryData
                .fromString(
                    "{\"id\":\"ofz\",\"name\":\"qsemwabne\",\"status\":\"shhszhedplvwiw\",\"percentComplete\":32.278084,\"startTime\":\"2021-05-24T21:25:26Z\",\"endTime\":\"2021-08-31T20:47:41Z\",\"operations\":[{\"id\":\"nkww\",\"name\":\"pjflcxogao\",\"status\":\"onz\",\"percentComplete\":92.21938,\"startTime\":\"2021-10-10T22:40:52Z\",\"endTime\":\"2021-11-27T21:17:05Z\",\"operations\":[]},{\"id\":\"qqkdltfzxmhhvhgu\",\"name\":\"odkwobd\",\"status\":\"gxtibqdxbxw\",\"percentComplete\":82.218605,\"startTime\":\"2021-01-16T00:33:56Z\",\"endTime\":\"2021-11-13T02:15:02Z\",\"operations\":[]},{\"id\":\"zgx\",\"name\":\"ripl\",\"status\":\"podxunkb\",\"percentComplete\":75.54857,\"startTime\":\"2021-07-12T07:57:48Z\",\"endTime\":\"2021-11-09T08:18:47Z\",\"operations\":[]}]}")
                .toObject(OperationStatusResult.class);
        Assertions.assertEquals("ofz", model.id());
        Assertions.assertEquals("qsemwabne", model.name());
        Assertions.assertEquals("shhszhedplvwiw", model.status());
        Assertions.assertEquals(32.278084F, model.percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-24T21:25:26Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-31T20:47:41Z"), model.endTime());
        Assertions.assertEquals("nkww", model.operations().get(0).id());
        Assertions.assertEquals("pjflcxogao", model.operations().get(0).name());
        Assertions.assertEquals("onz", model.operations().get(0).status());
        Assertions.assertEquals(92.21938F, model.operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-10T22:40:52Z"), model.operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-27T21:17:05Z"), model.operations().get(0).endTime());
    }

    @Test
    public void testSerialize() {
        OperationStatusResult model =
            new OperationStatusResult()
                .withId("ofz")
                .withName("qsemwabne")
                .withStatus("shhszhedplvwiw")
                .withPercentComplete(32.278084F)
                .withStartTime(OffsetDateTime.parse("2021-05-24T21:25:26Z"))
                .withEndTime(OffsetDateTime.parse("2021-08-31T20:47:41Z"))
                .withOperations(
                    Arrays
                        .asList(
                            new OperationStatusResult()
                                .withId("nkww")
                                .withName("pjflcxogao")
                                .withStatus("onz")
                                .withPercentComplete(92.21938F)
                                .withStartTime(OffsetDateTime.parse("2021-10-10T22:40:52Z"))
                                .withEndTime(OffsetDateTime.parse("2021-11-27T21:17:05Z"))
                                .withOperations(Arrays.asList()),
                            new OperationStatusResult()
                                .withId("qqkdltfzxmhhvhgu")
                                .withName("odkwobd")
                                .withStatus("gxtibqdxbxw")
                                .withPercentComplete(82.218605F)
                                .withStartTime(OffsetDateTime.parse("2021-01-16T00:33:56Z"))
                                .withEndTime(OffsetDateTime.parse("2021-11-13T02:15:02Z"))
                                .withOperations(Arrays.asList()),
                            new OperationStatusResult()
                                .withId("zgx")
                                .withName("ripl")
                                .withStatus("podxunkb")
                                .withPercentComplete(75.54857F)
                                .withStartTime(OffsetDateTime.parse("2021-07-12T07:57:48Z"))
                                .withEndTime(OffsetDateTime.parse("2021-11-09T08:18:47Z"))
                                .withOperations(Arrays.asList())));
        model = BinaryData.fromObject(model).toObject(OperationStatusResult.class);
        Assertions.assertEquals("ofz", model.id());
        Assertions.assertEquals("qsemwabne", model.name());
        Assertions.assertEquals("shhszhedplvwiw", model.status());
        Assertions.assertEquals(32.278084F, model.percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-24T21:25:26Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-31T20:47:41Z"), model.endTime());
        Assertions.assertEquals("nkww", model.operations().get(0).id());
        Assertions.assertEquals("pjflcxogao", model.operations().get(0).name());
        Assertions.assertEquals("onz", model.operations().get(0).status());
        Assertions.assertEquals(92.21938F, model.operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-10T22:40:52Z"), model.operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-27T21:17:05Z"), model.operations().get(0).endTime());
    }
}
