// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.PoolUpdateProperties;
import com.azure.resourcemanager.devcenter.models.LicenseType;
import com.azure.resourcemanager.devcenter.models.LocalAdminStatus;
import com.azure.resourcemanager.devcenter.models.SingleSignOnStatus;
import com.azure.resourcemanager.devcenter.models.StopOnDisconnectConfiguration;
import com.azure.resourcemanager.devcenter.models.StopOnDisconnectEnableStatus;
import com.azure.resourcemanager.devcenter.models.VirtualNetworkType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PoolUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PoolUpdateProperties model = BinaryData.fromString(
            "{\"devBoxDefinitionName\":\"nopqgikyzirtx\",\"networkConnectionName\":\"uxzejntpsew\",\"licenseType\":\"Windows_Client\",\"localAdministrator\":\"Disabled\",\"stopOnDisconnect\":{\"status\":\"Enabled\",\"gracePeriodMinutes\":1456439071},\"singleSignOnStatus\":\"Enabled\",\"displayName\":\"qmi\",\"virtualNetworkType\":\"Managed\",\"managedVirtualNetworkRegions\":[\"ggufhyaomtb\",\"hhavgrvkffovjz\"]}")
            .toObject(PoolUpdateProperties.class);
        Assertions.assertEquals("nopqgikyzirtx", model.devBoxDefinitionName());
        Assertions.assertEquals("uxzejntpsew", model.networkConnectionName());
        Assertions.assertEquals(LicenseType.WINDOWS_CLIENT, model.licenseType());
        Assertions.assertEquals(LocalAdminStatus.DISABLED, model.localAdministrator());
        Assertions.assertEquals(StopOnDisconnectEnableStatus.ENABLED, model.stopOnDisconnect().status());
        Assertions.assertEquals(1456439071, model.stopOnDisconnect().gracePeriodMinutes());
        Assertions.assertEquals(SingleSignOnStatus.ENABLED, model.singleSignOnStatus());
        Assertions.assertEquals("qmi", model.displayName());
        Assertions.assertEquals(VirtualNetworkType.MANAGED, model.virtualNetworkType());
        Assertions.assertEquals("ggufhyaomtb", model.managedVirtualNetworkRegions().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PoolUpdateProperties model = new PoolUpdateProperties().withDevBoxDefinitionName("nopqgikyzirtx")
            .withNetworkConnectionName("uxzejntpsew")
            .withLicenseType(LicenseType.WINDOWS_CLIENT)
            .withLocalAdministrator(LocalAdminStatus.DISABLED)
            .withStopOnDisconnect(new StopOnDisconnectConfiguration().withStatus(StopOnDisconnectEnableStatus.ENABLED)
                .withGracePeriodMinutes(1456439071))
            .withSingleSignOnStatus(SingleSignOnStatus.ENABLED)
            .withDisplayName("qmi")
            .withVirtualNetworkType(VirtualNetworkType.MANAGED)
            .withManagedVirtualNetworkRegions(Arrays.asList("ggufhyaomtb", "hhavgrvkffovjz"));
        model = BinaryData.fromObject(model).toObject(PoolUpdateProperties.class);
        Assertions.assertEquals("nopqgikyzirtx", model.devBoxDefinitionName());
        Assertions.assertEquals("uxzejntpsew", model.networkConnectionName());
        Assertions.assertEquals(LicenseType.WINDOWS_CLIENT, model.licenseType());
        Assertions.assertEquals(LocalAdminStatus.DISABLED, model.localAdministrator());
        Assertions.assertEquals(StopOnDisconnectEnableStatus.ENABLED, model.stopOnDisconnect().status());
        Assertions.assertEquals(1456439071, model.stopOnDisconnect().gracePeriodMinutes());
        Assertions.assertEquals(SingleSignOnStatus.ENABLED, model.singleSignOnStatus());
        Assertions.assertEquals("qmi", model.displayName());
        Assertions.assertEquals(VirtualNetworkType.MANAGED, model.virtualNetworkType());
        Assertions.assertEquals("ggufhyaomtb", model.managedVirtualNetworkRegions().get(0));
    }
}
