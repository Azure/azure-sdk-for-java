// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.PoolUpdateProperties;
import com.azure.resourcemanager.devcenter.models.LicenseType;
import com.azure.resourcemanager.devcenter.models.LocalAdminStatus;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PoolUpdatePropertiesTests {
    @Test
    public void testDeserialize() {
        PoolUpdateProperties model =
            BinaryData
                .fromString(
                    "{\"devBoxDefinitionName\":\"sdbnwdcfhucqdpf\",\"networkConnectionName\":\"glsbjjc\",\"licenseType\":\"Windows_Client\",\"localAdministrator\":\"Enabled\"}")
                .toObject(PoolUpdateProperties.class);
        Assertions.assertEquals("sdbnwdcfhucqdpf", model.devBoxDefinitionName());
        Assertions.assertEquals("glsbjjc", model.networkConnectionName());
        Assertions.assertEquals(LicenseType.WINDOWS_CLIENT, model.licenseType());
        Assertions.assertEquals(LocalAdminStatus.ENABLED, model.localAdministrator());
    }

    @Test
    public void testSerialize() {
        PoolUpdateProperties model =
            new PoolUpdateProperties()
                .withDevBoxDefinitionName("sdbnwdcfhucqdpf")
                .withNetworkConnectionName("glsbjjc")
                .withLicenseType(LicenseType.WINDOWS_CLIENT)
                .withLocalAdministrator(LocalAdminStatus.ENABLED);
        model = BinaryData.fromObject(model).toObject(PoolUpdateProperties.class);
        Assertions.assertEquals("sdbnwdcfhucqdpf", model.devBoxDefinitionName());
        Assertions.assertEquals("glsbjjc", model.networkConnectionName());
        Assertions.assertEquals(LicenseType.WINDOWS_CLIENT, model.licenseType());
        Assertions.assertEquals(LocalAdminStatus.ENABLED, model.localAdministrator());
    }
}
