// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.PoolUpdateProperties;
import com.azure.resourcemanager.devcenter.models.LicenseType;
import com.azure.resourcemanager.devcenter.models.LocalAdminStatus;
import com.azure.resourcemanager.devcenter.models.SingleSignOnStatus;
import com.azure.resourcemanager.devcenter.models.StopOnDisconnectConfiguration;
import com.azure.resourcemanager.devcenter.models.StopOnDisconnectEnableStatus;
import com.azure.resourcemanager.devcenter.models.VirtualNetworkType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PoolUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PoolUpdateProperties model =
            BinaryData
                .fromString(
                    "{\"devBoxDefinitionName\":\"honnxkrlgnyhmos\",\"networkConnectionName\":\"kkgthr\",\"licenseType\":\"Windows_Client\",\"localAdministrator\":\"Disabled\",\"stopOnDisconnect\":{\"status\":\"Disabled\",\"gracePeriodMinutes\":2131974737},\"singleSignOnStatus\":\"Disabled\",\"displayName\":\"gf\",\"virtualNetworkType\":\"Unmanaged\",\"managedVirtualNetworkRegions\":[\"fbshrnsvbuswd\",\"z\"]}")
                .toObject(PoolUpdateProperties.class);
        Assertions.assertEquals("honnxkrlgnyhmos", model.devBoxDefinitionName());
        Assertions.assertEquals("kkgthr", model.networkConnectionName());
        Assertions.assertEquals(LicenseType.WINDOWS_CLIENT, model.licenseType());
        Assertions.assertEquals(LocalAdminStatus.DISABLED, model.localAdministrator());
        Assertions.assertEquals(StopOnDisconnectEnableStatus.DISABLED, model.stopOnDisconnect().status());
        Assertions.assertEquals(2131974737, model.stopOnDisconnect().gracePeriodMinutes());
        Assertions.assertEquals(SingleSignOnStatus.DISABLED, model.singleSignOnStatus());
        Assertions.assertEquals("gf", model.displayName());
        Assertions.assertEquals(VirtualNetworkType.UNMANAGED, model.virtualNetworkType());
        Assertions.assertEquals("fbshrnsvbuswd", model.managedVirtualNetworkRegions().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PoolUpdateProperties model =
            new PoolUpdateProperties()
                .withDevBoxDefinitionName("honnxkrlgnyhmos")
                .withNetworkConnectionName("kkgthr")
                .withLicenseType(LicenseType.WINDOWS_CLIENT)
                .withLocalAdministrator(LocalAdminStatus.DISABLED)
                .withStopOnDisconnect(
                    new StopOnDisconnectConfiguration()
                        .withStatus(StopOnDisconnectEnableStatus.DISABLED)
                        .withGracePeriodMinutes(2131974737))
                .withSingleSignOnStatus(SingleSignOnStatus.DISABLED)
                .withDisplayName("gf")
                .withVirtualNetworkType(VirtualNetworkType.UNMANAGED)
                .withManagedVirtualNetworkRegions(Arrays.asList("fbshrnsvbuswd", "z"));
        model = BinaryData.fromObject(model).toObject(PoolUpdateProperties.class);
        Assertions.assertEquals("honnxkrlgnyhmos", model.devBoxDefinitionName());
        Assertions.assertEquals("kkgthr", model.networkConnectionName());
        Assertions.assertEquals(LicenseType.WINDOWS_CLIENT, model.licenseType());
        Assertions.assertEquals(LocalAdminStatus.DISABLED, model.localAdministrator());
        Assertions.assertEquals(StopOnDisconnectEnableStatus.DISABLED, model.stopOnDisconnect().status());
        Assertions.assertEquals(2131974737, model.stopOnDisconnect().gracePeriodMinutes());
        Assertions.assertEquals(SingleSignOnStatus.DISABLED, model.singleSignOnStatus());
        Assertions.assertEquals("gf", model.displayName());
        Assertions.assertEquals(VirtualNetworkType.UNMANAGED, model.virtualNetworkType());
        Assertions.assertEquals("fbshrnsvbuswd", model.managedVirtualNetworkRegions().get(0));
    }
}
