// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.ProjectEnvironmentTypeUpdateProperties;
import com.azure.resourcemanager.devcenter.models.EnvironmentRole;
import com.azure.resourcemanager.devcenter.models.EnvironmentTypeEnableStatus;
import com.azure.resourcemanager.devcenter.models.ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment;
import com.azure.resourcemanager.devcenter.models.UserRoleAssignmentValue;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ProjectEnvironmentTypeUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProjectEnvironmentTypeUpdateProperties model =
            BinaryData
                .fromString(
                    "{\"deploymentTargetId\":\"ts\",\"status\":\"Disabled\",\"creatorRoleAssignment\":{\"roles\":{\"yriwwroyqb\":{\"roleName\":\"xqpsrknftguv\",\"description\":\"uhprwmdyvxqt\"},\"jyzhpvgq\":{\"roleName\":\"rmcqiby\",\"description\":\"ojvknmefqsgzvaha\"}}},\"userRoleAssignments\":{\"wyjsflhhcaalnjix\":{\"roles\":{\"hzovawjvzunlut\":{\"roleName\":\"djzlmwlx\",\"description\":\"ug\"},\"jzuaejxdultskzbb\":{\"roleName\":\"n\",\"description\":\"nxipeil\"},\"yofd\":{\"roleName\":\"zumveekgpwo\",\"description\":\"hkfpbs\"},\"mvb\":{\"roleName\":\"uusdttouwa\",\"description\":\"ekqvkeln\"}}}}}")
                .toObject(ProjectEnvironmentTypeUpdateProperties.class);
        Assertions.assertEquals("ts", model.deploymentTargetId());
        Assertions.assertEquals(EnvironmentTypeEnableStatus.DISABLED, model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProjectEnvironmentTypeUpdateProperties model =
            new ProjectEnvironmentTypeUpdateProperties()
                .withDeploymentTargetId("ts")
                .withStatus(EnvironmentTypeEnableStatus.DISABLED)
                .withCreatorRoleAssignment(
                    new ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment()
                        .withRoles(mapOf("yriwwroyqb", new EnvironmentRole(), "jyzhpvgq", new EnvironmentRole())))
                .withUserRoleAssignments(
                    mapOf(
                        "wyjsflhhcaalnjix",
                        new UserRoleAssignmentValue()
                            .withRoles(
                                mapOf(
                                    "hzovawjvzunlut",
                                    new EnvironmentRole(),
                                    "jzuaejxdultskzbb",
                                    new EnvironmentRole(),
                                    "yofd",
                                    new EnvironmentRole(),
                                    "mvb",
                                    new EnvironmentRole()))));
        model = BinaryData.fromObject(model).toObject(ProjectEnvironmentTypeUpdateProperties.class);
        Assertions.assertEquals("ts", model.deploymentTargetId());
        Assertions.assertEquals(EnvironmentTypeEnableStatus.DISABLED, model.status());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
