// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.ProjectEnvironmentTypeUpdateProperties;
import com.azure.resourcemanager.devcenter.models.EnvironmentRole;
import com.azure.resourcemanager.devcenter.models.EnvironmentTypeEnableStatus;
import com.azure.resourcemanager.devcenter.models.ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment;
import com.azure.resourcemanager.devcenter.models.UserRoleAssignmentValue;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ProjectEnvironmentTypeUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProjectEnvironmentTypeUpdateProperties model = BinaryData.fromString(
            "{\"deploymentTargetId\":\"dvstkw\",\"displayName\":\"tchealmf\",\"status\":\"Enabled\",\"creatorRoleAssignment\":{\"roles\":{\"udxepxgyqagv\":{\"roleName\":\"dvwvgpio\",\"description\":\"wxrt\"},\"j\":{\"roleName\":\"mnpkukghimdblxg\",\"description\":\"mfnjh\"}}},\"userRoleAssignments\":{\"vxwc\":{\"roles\":{\"a\":{\"roleName\":\"kfoqreyfkzikfj\",\"description\":\"n\"}}},\"zikhl\":{\"roles\":{\"abfatkl\":{\"roleName\":\"c\",\"description\":\"elsfeaen\"},\"xagl\":{\"roleName\":\"xbjhwuaanozjosph\",\"description\":\"ulpjr\"},\"fcktqumiekke\":{\"roleName\":\"imjwosyt\",\"description\":\"tcs\"}}}}}")
            .toObject(ProjectEnvironmentTypeUpdateProperties.class);
        Assertions.assertEquals("dvstkw", model.deploymentTargetId());
        Assertions.assertEquals("tchealmf", model.displayName());
        Assertions.assertEquals(EnvironmentTypeEnableStatus.ENABLED, model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProjectEnvironmentTypeUpdateProperties model
            = new ProjectEnvironmentTypeUpdateProperties().withDeploymentTargetId("dvstkw")
                .withDisplayName("tchealmf")
                .withStatus(EnvironmentTypeEnableStatus.ENABLED)
                .withCreatorRoleAssignment(new ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment()
                    .withRoles(mapOf("udxepxgyqagv", new EnvironmentRole(), "j", new EnvironmentRole())))
                .withUserRoleAssignments(
                    mapOf("vxwc", new UserRoleAssignmentValue().withRoles(mapOf("a", new EnvironmentRole())), "zikhl",
                        new UserRoleAssignmentValue().withRoles(mapOf("abfatkl", new EnvironmentRole(), "xagl",
                            new EnvironmentRole(), "fcktqumiekke", new EnvironmentRole()))));
        model = BinaryData.fromObject(model).toObject(ProjectEnvironmentTypeUpdateProperties.class);
        Assertions.assertEquals("dvstkw", model.deploymentTargetId());
        Assertions.assertEquals("tchealmf", model.displayName());
        Assertions.assertEquals(EnvironmentTypeEnableStatus.ENABLED, model.status());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
