// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.DevCenterInner;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DevCenterInnerTests {
    @Test
    public void testDeserialize() {
        DevCenterInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"provisioningState\":\"MovingResources\",\"devCenterUri\":\"pzvgnwzsymglzufc\"},\"identity\":{\"principalId\":\"3198e8cd-958c-4a35-824c-10bb7c932ddd\",\"tenantId\":\"614ac35e-6862-4675-a406-842c8163db35\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"anufhfcbjysag\":{\"principalId\":\"ecaf0ce5-f5d4-465c-a52f-e56df92b6e65\",\"clientId\":\"5441a2e3-e3d4-4652-9f0b-7dbd0cd692c1\"},\"xqhabi\":{\"principalId\":\"1d861053-93f8-4042-9089-513f85ea841a\",\"clientId\":\"c1e5cc6e-d197-4ab0-97da-392ac5c345d5\"}}},\"location\":\"ikxwc\",\"tags\":{\"n\":\"scnpqxuhivy\",\"rkxvdum\":\"wby\"},\"id\":\"grtfwvu\",\"name\":\"xgaudccs\",\"type\":\"h\"}")
                .toObject(DevCenterInner.class);
        Assertions.assertEquals("ikxwc", model.location());
        Assertions.assertEquals("scnpqxuhivy", model.tags().get("n"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
    }

    @Test
    public void testSerialize() {
        DevCenterInner model =
            new DevCenterInner()
                .withLocation("ikxwc")
                .withTags(mapOf("n", "scnpqxuhivy", "rkxvdum", "wby"))
                .withIdentity(
                    new ManagedServiceIdentity()
                        .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED)
                        .withUserAssignedIdentities(
                            mapOf("anufhfcbjysag", new UserAssignedIdentity(), "xqhabi", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(DevCenterInner.class);
        Assertions.assertEquals("ikxwc", model.location());
        Assertions.assertEquals("scnpqxuhivy", model.tags().get("n"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
