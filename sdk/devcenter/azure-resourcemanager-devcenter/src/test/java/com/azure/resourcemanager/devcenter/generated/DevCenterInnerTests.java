// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devcenter.fluent.models.DevCenterInner;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentity;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DevCenterInnerTests {
    @Test
    public void testDeserialize() {
        DevCenterInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"provisioningState\":\"hxqh\"},\"identity\":{\"principalId\":\"fb4e1087-9bcb-47e1-8d5d-b873dd807403\",\"tenantId\":\"7f67176e-0a3d-47d8-8774-ad0896b2486f\",\"type\":\"SystemAssigned,"
                        + " UserAssigned\",\"userAssignedIdentities\":{\"czbysc\":{\"principalId\":\"76c49856-0337-4ab0-ae4c-c558b557f244\",\"clientId\":\"9af16236-acc5-47d5-9c6a-4c7ac9bac7a4\"},\"x\":{\"principalId\":\"fa66a68d-070c-43b3-8013-c3aa03e4e08f\",\"clientId\":\"46b281ae-bf33-4220-b6e9-8cf0afb7c39c\"},\"vyq\":{\"principalId\":\"6113c325-6f91-4f95-91d5-5c2f9c248d99\",\"clientId\":\"6235d5b1-e36a-470c-9938-f2ded07499ca\"},\"b\":{\"principalId\":\"93a596a3-a417-4c74-bca2-d27a00d765a0\",\"clientId\":\"29074bfa-b08e-4767-b00a-dbb78c9e4a88\"}}},\"location\":\"rkxvdum\",\"tags\":{\"snhsjcnyejhkryh\":\"tfwvukxgaudc\"},\"id\":\"napczwlokjy\",\"name\":\"mkkvnip\",\"type\":\"oxzjnchgejspod\"}")
                .toObject(DevCenterInner.class);
        Assertions.assertEquals("rkxvdum", model.location());
        Assertions.assertEquals("tfwvukxgaudc", model.tags().get("snhsjcnyejhkryh"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
    }

    @Test
    public void testSerialize() {
        DevCenterInner model =
            new DevCenterInner()
                .withLocation("rkxvdum")
                .withTags(mapOf("snhsjcnyejhkryh", "tfwvukxgaudc"))
                .withIdentity(
                    new ManagedServiceIdentity()
                        .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                        .withUserAssignedIdentities(
                            mapOf(
                                "czbysc",
                                new UserAssignedIdentity(),
                                "x",
                                new UserAssignedIdentity(),
                                "vyq",
                                new UserAssignedIdentity(),
                                "b",
                                new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(DevCenterInner.class);
        Assertions.assertEquals("rkxvdum", model.location());
        Assertions.assertEquals("tfwvukxgaudc", model.tags().get("snhsjcnyejhkryh"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
