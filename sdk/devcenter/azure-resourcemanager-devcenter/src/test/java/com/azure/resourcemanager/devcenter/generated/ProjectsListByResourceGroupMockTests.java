// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devcenter.DevCenterManager;
import com.azure.resourcemanager.devcenter.models.CatalogItemType;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.Project;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProjectsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"StorageProvisioningFailed\",\"devCenterUri\":\"fhpfeoajvgcxtx\",\"devCenterId\":\"sheafid\",\"description\":\"ugsresmkssjhoi\",\"maxDevBoxesPerUser\":1860922663,\"displayName\":\"kfwegprhptillu\",\"catalogSettings\":{\"catalogItemSyncTypes\":[\"EnvironmentDefinition\",\"EnvironmentDefinition\",\"EnvironmentDefinition\"]}},\"identity\":{\"principalId\":\"33aca8d9-af7d-410a-a7df-c181671cf56f\",\"tenantId\":\"05b07aa8-ebf0-4fc7-a1ef-631ec133b099\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"drizetpwbr\":{\"principalId\":\"9c9d673f-ec10-4055-9883-73322fa644fb\",\"clientId\":\"f8979141-112a-4d59-bbd6-cdb0342b04e7\"},\"libph\":{\"principalId\":\"481a310d-fd2b-401e-953a-61bf10453ec5\",\"clientId\":\"8812447e-eb1c-4798-b799-0033ffe71847\"},\"mizak\":{\"principalId\":\"be72649b-c04b-40e0-bfef-2b7341cbeb30\",\"clientId\":\"4f2f7a8e-01fe-4fff-a54a-25661032d6ee\"},\"nkjpdnjzha\":{\"principalId\":\"0cf0a3a7-96c7-42ff-8143-e65927ea4452\",\"clientId\":\"6cbf52bd-6406-488d-bcee-aa04439d2152\"}}},\"location\":\"ylhjlm\",\"tags\":{\"eecjmeis\":\"xprimrsop\"},\"id\":\"stvasylwxdzaumw\",\"name\":\"oohgu\",\"type\":\"fuzboyjathwtzolb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevCenterManager manager = DevCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Project> response
            = manager.projects().listByResourceGroup("kvbwnhhtqlgeh", 1013925837, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ylhjlm", response.iterator().next().location());
        Assertions.assertEquals("xprimrsop", response.iterator().next().tags().get("eecjmeis"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("sheafid", response.iterator().next().devCenterId());
        Assertions.assertEquals("ugsresmkssjhoi", response.iterator().next().description());
        Assertions.assertEquals(1860922663, response.iterator().next().maxDevBoxesPerUser());
        Assertions.assertEquals("kfwegprhptillu", response.iterator().next().displayName());
        Assertions.assertEquals(CatalogItemType.ENVIRONMENT_DEFINITION,
            response.iterator().next().catalogSettings().catalogItemSyncTypes().get(0));
    }
}
