// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devcenter.DevCenterManager;
import com.azure.resourcemanager.devcenter.models.CatalogItemType;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.Project;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProjectsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"StorageProvisioningFailed\",\"devCenterUri\":\"nwiaaomyl\",\"devCenterId\":\"azul\",\"description\":\"ethwwnpjhlfz\",\"maxDevBoxesPerUser\":1188676468,\"displayName\":\"hwahfbousn\",\"catalogSettings\":{\"catalogItemSyncTypes\":[\"EnvironmentDefinition\",\"EnvironmentDefinition\",\"EnvironmentDefinition\",\"EnvironmentDefinition\"]}},\"identity\":{\"principalId\":\"72b0a040-4cf8-4ec7-ae44-c75ea724ce87\",\"tenantId\":\"be00fe87-a5f4-4d21-bf17-345d21579253\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"xykxhdj\":{\"principalId\":\"997ed452-24ce-4c08-b4d4-5cdbe44bb135\",\"clientId\":\"77a0df63-c74c-4761-aa91-1492f3069bbb\"},\"mmbcxfhbcp\":{\"principalId\":\"5340f4a9-19bf-4c31-87f8-0dc7d2f94a74\",\"clientId\":\"9e6eea54-5617-4666-bc41-7b7e4bbd7a6a\"},\"vxcjzhqizxfpxtgq\":{\"principalId\":\"2e361301-e777-42b1-96a3-e11fe66458a2\",\"clientId\":\"76c30ea1-e58b-4b9a-868e-f4dfb3e3e9b2\"}}},\"location\":\"javftjuhdqa\",\"tags\":{\"hfcf\":\"tgguwpijrajcivmm\",\"nzqodfvpg\":\"wrxgkneuvy\"},\"id\":\"hoxgsgbpf\",\"name\":\"zdjtxvzflbqv\",\"type\":\"aqvlgafcqusr\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevCenterManager manager = DevCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Project> response
            = manager.projects().listByResourceGroup("talhsnvkcdmxzr", 1745804403, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("javftjuhdqa", response.iterator().next().location());
        Assertions.assertEquals("tgguwpijrajcivmm", response.iterator().next().tags().get("hfcf"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("azul", response.iterator().next().devCenterId());
        Assertions.assertEquals("ethwwnpjhlfz", response.iterator().next().description());
        Assertions.assertEquals(1188676468, response.iterator().next().maxDevBoxesPerUser());
        Assertions.assertEquals("hwahfbousn", response.iterator().next().displayName());
        Assertions.assertEquals(CatalogItemType.ENVIRONMENT_DEFINITION,
            response.iterator().next().catalogSettings().catalogItemSyncTypes().get(0));
    }
}
