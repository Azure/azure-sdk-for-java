// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devcenter.DevCenterManager;
import com.azure.resourcemanager.devcenter.models.CatalogItemType;
import com.azure.resourcemanager.devcenter.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devcenter.models.Project;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProjectsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"StorageProvisioningFailed\",\"devCenterUri\":\"fhpfeoajvgcxtx\",\"devCenterId\":\"sheafid\",\"description\":\"ugsresmkssjhoi\",\"maxDevBoxesPerUser\":1860922663,\"displayName\":\"kfwegprhptillu\",\"catalogSettings\":{\"catalogItemSyncTypes\":[\"EnvironmentDefinition\",\"EnvironmentDefinition\",\"EnvironmentDefinition\"]}},\"identity\":{\"principalId\":\"cfbdc851-f63b-4831-83be-3c8d66d20308\",\"tenantId\":\"8016cab5-1f8f-4975-b742-be76fd9cc064\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"drizetpwbr\":{\"principalId\":\"e45dc06f-8d54-437e-b464-df7fac3f4932\",\"clientId\":\"43efd4e2-2cd2-439f-b763-eb29332132d0\"},\"libph\":{\"principalId\":\"50573c50-56b3-48c8-a97a-0bfbbceda24f\",\"clientId\":\"d988b1c5-9357-4998-9211-2add7bc3a0be\"},\"mizak\":{\"principalId\":\"82a63291-02c0-43c4-a577-d52759f5d70b\",\"clientId\":\"77f8e816-0ec8-4855-8194-09dfcb27badd\"},\"nkjpdnjzha\":{\"principalId\":\"92624d4f-8b4e-4959-979e-731fd5da1d3c\",\"clientId\":\"f2653b48-2c46-4646-80a4-2ff3657a3258\"}}},\"location\":\"ylhjlm\",\"tags\":{\"eecjmeis\":\"xprimrsop\"},\"id\":\"stvasylwxdzaumw\",\"name\":\"oohgu\",\"type\":\"fuzboyjathwtzolb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevCenterManager manager = DevCenterManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Project> response
            = manager.projects().listByResourceGroup("kvbwnhhtqlgeh", 1013925837, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ylhjlm", response.iterator().next().location());
        Assertions.assertEquals("xprimrsop", response.iterator().next().tags().get("eecjmeis"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("sheafid", response.iterator().next().devCenterId());
        Assertions.assertEquals("ugsresmkssjhoi", response.iterator().next().description());
        Assertions.assertEquals(1860922663, response.iterator().next().maxDevBoxesPerUser());
        Assertions.assertEquals("kfwegprhptillu", response.iterator().next().displayName());
        Assertions.assertEquals(CatalogItemType.ENVIRONMENT_DEFINITION,
            response.iterator().next().catalogSettings().catalogItemSyncTypes().get(0));
    }
}
