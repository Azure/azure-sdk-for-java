// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devcenter.fluent.models.ProjectEnvironmentTypeInner;
import com.azure.resourcemanager.devcenter.models.ProjectEnvironmentTypeUpdate;

/** An instance of this class provides access to all the operations defined in ProjectEnvironmentTypesClient. */
public interface ProjectEnvironmentTypesClient {
    /**
     * Lists environment types for a project.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the project environment type list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ProjectEnvironmentTypeInner> list(String resourceGroupName, String projectName);

    /**
     * Lists environment types for a project.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param top The maximum number of resources to return from the operation. Example: '$top=10'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the project environment type list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ProjectEnvironmentTypeInner> list(
        String resourceGroupName, String projectName, Integer top, Context context);

    /**
     * Gets a project environment type.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param environmentTypeName The name of the environment type.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a project environment type along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ProjectEnvironmentTypeInner> getWithResponse(
        String resourceGroupName, String projectName, String environmentTypeName, Context context);

    /**
     * Gets a project environment type.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param environmentTypeName The name of the environment type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a project environment type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ProjectEnvironmentTypeInner get(String resourceGroupName, String projectName, String environmentTypeName);

    /**
     * Creates or updates a project environment type.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param environmentTypeName The name of the environment type.
     * @param body Represents a Project Environment Type.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents an environment type along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ProjectEnvironmentTypeInner> createOrUpdateWithResponse(
        String resourceGroupName,
        String projectName,
        String environmentTypeName,
        ProjectEnvironmentTypeInner body,
        Context context);

    /**
     * Creates or updates a project environment type.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param environmentTypeName The name of the environment type.
     * @param body Represents a Project Environment Type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents an environment type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ProjectEnvironmentTypeInner createOrUpdate(
        String resourceGroupName, String projectName, String environmentTypeName, ProjectEnvironmentTypeInner body);

    /**
     * Partially updates a project environment type.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param environmentTypeName The name of the environment type.
     * @param body Updatable project environment type properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents an environment type along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ProjectEnvironmentTypeInner> updateWithResponse(
        String resourceGroupName,
        String projectName,
        String environmentTypeName,
        ProjectEnvironmentTypeUpdate body,
        Context context);

    /**
     * Partially updates a project environment type.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param environmentTypeName The name of the environment type.
     * @param body Updatable project environment type properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents an environment type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ProjectEnvironmentTypeInner update(
        String resourceGroupName, String projectName, String environmentTypeName, ProjectEnvironmentTypeUpdate body);

    /**
     * Deletes a project environment type.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param environmentTypeName The name of the environment type.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String projectName, String environmentTypeName, Context context);

    /**
     * Deletes a project environment type.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param environmentTypeName The name of the environment type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String projectName, String environmentTypeName);
}
