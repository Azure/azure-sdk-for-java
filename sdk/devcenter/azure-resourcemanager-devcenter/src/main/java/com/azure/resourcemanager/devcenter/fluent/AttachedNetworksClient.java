// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.devcenter.fluent.models.AttachedNetworkConnectionInner;

/** An instance of this class provides access to all the operations defined in AttachedNetworksClient. */
public interface AttachedNetworksClient {
    /**
     * Lists the attached NetworkConnections for a Project.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return results of the Attached Networks list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AttachedNetworkConnectionInner> listByProject(String resourceGroupName, String projectName);

    /**
     * Lists the attached NetworkConnections for a Project.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param top The maximum number of resources to return from the operation. Example: '$top=10'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return results of the Attached Networks list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AttachedNetworkConnectionInner> listByProject(
        String resourceGroupName, String projectName, Integer top, Context context);

    /**
     * Gets an attached NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an attached NetworkConnection along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AttachedNetworkConnectionInner> getByProjectWithResponse(
        String resourceGroupName, String projectName, String attachedNetworkConnectionName, Context context);

    /**
     * Gets an attached NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName The name of the project.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an attached NetworkConnection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AttachedNetworkConnectionInner getByProject(
        String resourceGroupName, String projectName, String attachedNetworkConnectionName);

    /**
     * Lists the attached NetworkConnections for a DevCenter.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return results of the Attached Networks list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AttachedNetworkConnectionInner> listByDevCenter(String resourceGroupName, String devCenterName);

    /**
     * Lists the attached NetworkConnections for a DevCenter.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param top The maximum number of resources to return from the operation. Example: '$top=10'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return results of the Attached Networks list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AttachedNetworkConnectionInner> listByDevCenter(
        String resourceGroupName, String devCenterName, Integer top, Context context);

    /**
     * Gets an attached NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an attached NetworkConnection along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AttachedNetworkConnectionInner> getByDevCenterWithResponse(
        String resourceGroupName, String devCenterName, String attachedNetworkConnectionName, Context context);

    /**
     * Gets an attached NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an attached NetworkConnection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AttachedNetworkConnectionInner getByDevCenter(
        String resourceGroupName, String devCenterName, String attachedNetworkConnectionName);

    /**
     * Creates or updates an attached NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @param body Represents an attached NetworkConnection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents an attached NetworkConnection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AttachedNetworkConnectionInner>, AttachedNetworkConnectionInner> beginCreateOrUpdate(
        String resourceGroupName,
        String devCenterName,
        String attachedNetworkConnectionName,
        AttachedNetworkConnectionInner body);

    /**
     * Creates or updates an attached NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @param body Represents an attached NetworkConnection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents an attached NetworkConnection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AttachedNetworkConnectionInner>, AttachedNetworkConnectionInner> beginCreateOrUpdate(
        String resourceGroupName,
        String devCenterName,
        String attachedNetworkConnectionName,
        AttachedNetworkConnectionInner body,
        Context context);

    /**
     * Creates or updates an attached NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @param body Represents an attached NetworkConnection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents an attached NetworkConnection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AttachedNetworkConnectionInner createOrUpdate(
        String resourceGroupName,
        String devCenterName,
        String attachedNetworkConnectionName,
        AttachedNetworkConnectionInner body);

    /**
     * Creates or updates an attached NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @param body Represents an attached NetworkConnection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents an attached NetworkConnection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AttachedNetworkConnectionInner createOrUpdate(
        String resourceGroupName,
        String devCenterName,
        String attachedNetworkConnectionName,
        AttachedNetworkConnectionInner body,
        Context context);

    /**
     * Un-attach a NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String devCenterName, String attachedNetworkConnectionName);

    /**
     * Un-attach a NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String devCenterName, String attachedNetworkConnectionName, Context context);

    /**
     * Un-attach a NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String devCenterName, String attachedNetworkConnectionName);

    /**
     * Un-attach a NetworkConnection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param attachedNetworkConnectionName The name of the attached NetworkConnection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String devCenterName, String attachedNetworkConnectionName, Context context);
}
