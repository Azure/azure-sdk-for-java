// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.devcenter.models.CatalogErrorDetails;
import java.io.IOException;
import java.util.List;

/**
 * List of validator error details. Populated when changes are made to the resource or its dependent resources that
 * impact the validity of the Catalog resource.
 */
@Immutable
public final class CatalogResourceValidationErrorDetailsInner
    implements JsonSerializable<CatalogResourceValidationErrorDetailsInner> {
    /*
     * Errors associated with resources synchronized from the catalog.
     */
    private List<CatalogErrorDetails> errors;

    /**
     * Creates an instance of CatalogResourceValidationErrorDetailsInner class.
     */
    public CatalogResourceValidationErrorDetailsInner() {
    }

    /**
     * Get the errors property: Errors associated with resources synchronized from the catalog.
     * 
     * @return the errors value.
     */
    public List<CatalogErrorDetails> errors() {
        return this.errors;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (errors() != null) {
            errors().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CatalogResourceValidationErrorDetailsInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CatalogResourceValidationErrorDetailsInner if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CatalogResourceValidationErrorDetailsInner.
     */
    public static CatalogResourceValidationErrorDetailsInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CatalogResourceValidationErrorDetailsInner deserializedCatalogResourceValidationErrorDetailsInner
                = new CatalogResourceValidationErrorDetailsInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("errors".equals(fieldName)) {
                    List<CatalogErrorDetails> errors
                        = reader.readArray(reader1 -> CatalogErrorDetails.fromJson(reader1));
                    deserializedCatalogResourceValidationErrorDetailsInner.errors = errors;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCatalogResourceValidationErrorDetailsInner;
        });
    }
}
