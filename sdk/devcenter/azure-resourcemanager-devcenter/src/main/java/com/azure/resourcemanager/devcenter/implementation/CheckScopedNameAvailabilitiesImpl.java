// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.devcenter.fluent.CheckScopedNameAvailabilitiesClient;
import com.azure.resourcemanager.devcenter.fluent.models.CheckNameAvailabilityResponseInner;
import com.azure.resourcemanager.devcenter.models.CheckNameAvailabilityResponse;
import com.azure.resourcemanager.devcenter.models.CheckScopedNameAvailabilities;
import com.azure.resourcemanager.devcenter.models.CheckScopedNameAvailabilityRequest;

public final class CheckScopedNameAvailabilitiesImpl implements CheckScopedNameAvailabilities {
    private static final ClientLogger LOGGER = new ClientLogger(CheckScopedNameAvailabilitiesImpl.class);

    private final CheckScopedNameAvailabilitiesClient innerClient;

    private final com.azure.resourcemanager.devcenter.DevCenterManager serviceManager;

    public CheckScopedNameAvailabilitiesImpl(CheckScopedNameAvailabilitiesClient innerClient,
        com.azure.resourcemanager.devcenter.DevCenterManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<CheckNameAvailabilityResponse>
        executeWithResponse(CheckScopedNameAvailabilityRequest nameAvailabilityRequest, Context context) {
        Response<CheckNameAvailabilityResponseInner> inner
            = this.serviceClient().executeWithResponse(nameAvailabilityRequest, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new CheckNameAvailabilityResponseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public CheckNameAvailabilityResponse execute(CheckScopedNameAvailabilityRequest nameAvailabilityRequest) {
        CheckNameAvailabilityResponseInner inner = this.serviceClient().execute(nameAvailabilityRequest);
        if (inner != null) {
            return new CheckNameAvailabilityResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private CheckScopedNameAvailabilitiesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.devcenter.DevCenterManager manager() {
        return this.serviceManager;
    }
}
