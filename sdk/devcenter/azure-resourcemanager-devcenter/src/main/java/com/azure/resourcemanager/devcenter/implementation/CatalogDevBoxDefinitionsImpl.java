// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.devcenter.fluent.CatalogDevBoxDefinitionsClient;
import com.azure.resourcemanager.devcenter.fluent.models.CatalogResourceValidationErrorDetailsInner;
import com.azure.resourcemanager.devcenter.fluent.models.DevBoxDefinitionInner;
import com.azure.resourcemanager.devcenter.models.CatalogDevBoxDefinitions;
import com.azure.resourcemanager.devcenter.models.CatalogResourceValidationErrorDetails;
import com.azure.resourcemanager.devcenter.models.DevBoxDefinition;

public final class CatalogDevBoxDefinitionsImpl implements CatalogDevBoxDefinitions {
    private static final ClientLogger LOGGER = new ClientLogger(CatalogDevBoxDefinitionsImpl.class);

    private final CatalogDevBoxDefinitionsClient innerClient;

    private final com.azure.resourcemanager.devcenter.DevCenterManager serviceManager;

    public CatalogDevBoxDefinitionsImpl(
        CatalogDevBoxDefinitionsClient innerClient,
        com.azure.resourcemanager.devcenter.DevCenterManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<DevBoxDefinition> listByCatalog(
        String resourceGroupName, String devCenterName, String catalogName) {
        PagedIterable<DevBoxDefinitionInner> inner =
            this.serviceClient().listByCatalog(resourceGroupName, devCenterName, catalogName);
        return Utils.mapPage(inner, inner1 -> new DevBoxDefinitionImpl(inner1, this.manager()));
    }

    public PagedIterable<DevBoxDefinition> listByCatalog(
        String resourceGroupName, String devCenterName, String catalogName, Integer top, Context context) {
        PagedIterable<DevBoxDefinitionInner> inner =
            this.serviceClient().listByCatalog(resourceGroupName, devCenterName, catalogName, top, context);
        return Utils.mapPage(inner, inner1 -> new DevBoxDefinitionImpl(inner1, this.manager()));
    }

    public Response<DevBoxDefinition> getWithResponse(
        String resourceGroupName,
        String devCenterName,
        String catalogName,
        String devBoxDefinitionName,
        Context context) {
        Response<DevBoxDefinitionInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, devCenterName, catalogName, devBoxDefinitionName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new DevBoxDefinitionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DevBoxDefinition get(
        String resourceGroupName, String devCenterName, String catalogName, String devBoxDefinitionName) {
        DevBoxDefinitionInner inner =
            this.serviceClient().get(resourceGroupName, devCenterName, catalogName, devBoxDefinitionName);
        if (inner != null) {
            return new DevBoxDefinitionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<CatalogResourceValidationErrorDetails> getErrorDetailsWithResponse(
        String resourceGroupName,
        String devCenterName,
        String catalogName,
        String devBoxDefinitionName,
        Context context) {
        Response<CatalogResourceValidationErrorDetailsInner> inner =
            this
                .serviceClient()
                .getErrorDetailsWithResponse(
                    resourceGroupName, devCenterName, catalogName, devBoxDefinitionName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new CatalogResourceValidationErrorDetailsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public CatalogResourceValidationErrorDetails getErrorDetails(
        String resourceGroupName, String devCenterName, String catalogName, String devBoxDefinitionName) {
        CatalogResourceValidationErrorDetailsInner inner =
            this.serviceClient().getErrorDetails(resourceGroupName, devCenterName, catalogName, devBoxDefinitionName);
        if (inner != null) {
            return new CatalogResourceValidationErrorDetailsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private CatalogDevBoxDefinitionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.devcenter.DevCenterManager manager() {
        return this.serviceManager;
    }
}
