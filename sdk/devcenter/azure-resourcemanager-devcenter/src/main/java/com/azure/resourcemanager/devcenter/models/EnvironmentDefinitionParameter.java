// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Properties of an Environment Definition parameter.
 */
@Immutable
public final class EnvironmentDefinitionParameter {
    /*
     * Unique ID of the parameter
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * Display name of the parameter
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * Description of the parameter
     */
    @JsonProperty(value = "description", access = JsonProperty.Access.WRITE_ONLY)
    private String description;

    /*
     * A string of one of the basic JSON types (number, integer, array, object, boolean, string)
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private ParameterType type;

    /*
     * Whether or not this parameter is read-only.  If true, default should have a value.
     */
    @JsonProperty(value = "readOnly", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean readOnly;

    /*
     * Whether or not this parameter is required
     */
    @JsonProperty(value = "required", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean required;

    /**
     * Creates an instance of EnvironmentDefinitionParameter class.
     */
    public EnvironmentDefinitionParameter() {
    }

    /**
     * Get the id property: Unique ID of the parameter.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: Display name of the parameter.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the description property: Description of the parameter.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Get the type property: A string of one of the basic JSON types (number, integer, array, object, boolean, string).
     * 
     * @return the type value.
     */
    public ParameterType type() {
        return this.type;
    }

    /**
     * Get the readOnly property: Whether or not this parameter is read-only. If true, default should have a value.
     * 
     * @return the readOnly value.
     */
    public Boolean readOnly() {
        return this.readOnly;
    }

    /**
     * Get the required property: Whether or not this parameter is required.
     * 
     * @return the required value.
     */
    public Boolean required() {
        return this.required;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
