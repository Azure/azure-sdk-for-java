// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.developer.devcenter.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The type of data a parameter accepts.
 */
public final class EnvironmentDefinitionParameterType extends ExpandableStringEnum<EnvironmentDefinitionParameterType> {

    /**
     * The parameter accepts an array of values.
     */
    @Generated
    public static final EnvironmentDefinitionParameterType ARRAY = fromString("array");

    /**
     * The parameter accepts a boolean value.
     */
    @Generated
    public static final EnvironmentDefinitionParameterType BOOLEAN = fromString("boolean");

    /**
     * The parameter accepts an integer value.
     */
    @Generated
    public static final EnvironmentDefinitionParameterType INTEGER = fromString("integer");

    /**
     * The parameter accepts a number value.
     */
    @Generated
    public static final EnvironmentDefinitionParameterType NUMBER = fromString("number");

    /**
     * The parameter accepts an object value.
     */
    @Generated
    public static final EnvironmentDefinitionParameterType OBJECT = fromString("object");

    /**
     * The parameter accepts a string value.
     */
    @Generated
    public static final EnvironmentDefinitionParameterType STRING = fromString("string");

    /**
     * Creates a new instance of EnvironmentDefinitionParameterType value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public EnvironmentDefinitionParameterType() {
    }

    /**
     * Creates or finds a EnvironmentDefinitionParameterType from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding EnvironmentDefinitionParameterType.
     */
    @Generated
    public static EnvironmentDefinitionParameterType fromString(String name) {
        return fromString(name, EnvironmentDefinitionParameterType.class);
    }

    /**
     * Gets known EnvironmentDefinitionParameterType values.
     *
     * @return known EnvironmentDefinitionParameterType values.
     */
    @Generated
    public static Collection<EnvironmentDefinitionParameterType> values() {
        return values(EnvironmentDefinitionParameterType.class);
    }
}
