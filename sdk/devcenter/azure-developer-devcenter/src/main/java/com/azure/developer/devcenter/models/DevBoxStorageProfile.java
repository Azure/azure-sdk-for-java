// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.developer.devcenter.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Storage settings for the Dev Box's disks.
 */
@Immutable
public final class DevBoxStorageProfile implements JsonSerializable<DevBoxStorageProfile> {

    /*
     * Settings for the operating system disk.
     */
    @Generated
    private OsDisk osDisk;

    /**
     * Creates an instance of DevBoxStorageProfile class.
     */
    @Generated
    private DevBoxStorageProfile() {
    }

    /**
     * Get the osDisk property: Settings for the operating system disk.
     *
     * @return the osDisk value.
     */
    @Generated
    public OsDisk getOsDisk() {
        return this.osDisk;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("osDisk", this.osDisk);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DevBoxStorageProfile from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of DevBoxStorageProfile if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DevBoxStorageProfile.
     */
    @Generated
    public static DevBoxStorageProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DevBoxStorageProfile deserializedDevBoxStorageProfile = new DevBoxStorageProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("osDisk".equals(fieldName)) {
                    deserializedDevBoxStorageProfile.osDisk = OsDisk.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedDevBoxStorageProfile;
        });
    }
}
