// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.developer.devcenter.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Settings for the operating system disk.
 */
@Immutable
public final class OsDisk implements JsonSerializable<OsDisk> {

    /**
     * Creates an instance of OsDisk class.
     */
    @Generated
    private OsDisk() {
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OsDisk from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of OsDisk if the JsonReader was pointing to an instance of it, or null if it was pointing to
     * JSON null.
     * @throws IOException If an error occurs while reading the OsDisk.
     */
    @Generated
    public static OsDisk fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OsDisk deserializedOsDisk = new OsDisk();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("diskSizeGB".equals(fieldName)) {
                    deserializedOsDisk.diskSizeInGb = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedOsDisk;
        });
    }

    /*
     * The size of the OS Disk in gigabytes.
     */
    @Generated
    private Integer diskSizeInGb;

    /**
     * Get the diskSizeInGb property: The size of the OS Disk in gigabytes.
     *
     * @return the diskSizeInGb value.
     */
    @Generated
    public Integer getDiskSizeInGb() {
        return this.diskSizeInGb;
    }
}
