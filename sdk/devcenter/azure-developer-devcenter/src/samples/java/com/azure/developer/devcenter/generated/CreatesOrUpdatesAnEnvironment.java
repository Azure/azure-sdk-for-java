// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.devcenter.generated;

import com.azure.core.util.polling.SyncPoller;
import com.azure.developer.devcenter.DeploymentEnvironmentsClient;
import com.azure.developer.devcenter.DeploymentEnvironmentsClientBuilder;
import com.azure.developer.devcenter.models.DevCenterEnvironment;
import com.azure.developer.devcenter.models.DevCenterOperationDetails;
import com.azure.identity.DefaultAzureCredentialBuilder;
import java.util.HashMap;
import java.util.Map;

public class CreatesOrUpdatesAnEnvironment {
    public static void main(String[] args) {
        DeploymentEnvironmentsClient deploymentEnvironmentsClient
            = new DeploymentEnvironmentsClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint(
                    "https://8a40af38-3b4c-4672-a6a4-5e964b1870ed-contosodevcenter.centralus.devcenter.azure.com/")
                .buildClient();
        // BEGIN:com.azure.developer.devcenter.generated.createorupdateenvironment.createsorupdatesanenvironment
        SyncPoller<DevCenterOperationDetails, DevCenterEnvironment> response
            = deploymentEnvironmentsClient.beginCreateOrUpdateEnvironment("myProject", "me", "mydevenv",
                new DevCenterEnvironment("DevTest", "main", "helloworld")
                    .setParameters(mapOf("functionAppRuntime", "node", "storageAccountType", "Standard_LRS")));
        // END:com.azure.developer.devcenter.generated.createorupdateenvironment.createsorupdatesanenvironment
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
