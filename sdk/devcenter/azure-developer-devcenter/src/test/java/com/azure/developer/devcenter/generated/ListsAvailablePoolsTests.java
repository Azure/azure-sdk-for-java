// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.devcenter.generated;

import com.azure.core.http.rest.PagedIterable;
import com.azure.developer.devcenter.models.DevBoxHardwareProfile;
import com.azure.developer.devcenter.models.DevBoxImageReference;
import com.azure.developer.devcenter.models.DevBoxOsType;
import com.azure.developer.devcenter.models.DevBoxPool;
import com.azure.developer.devcenter.models.DevBoxStorageProfile;
import com.azure.developer.devcenter.models.HibernateSupport;
import com.azure.developer.devcenter.models.OsDisk;
import com.azure.developer.devcenter.models.PoolHealthStatus;
import com.azure.developer.devcenter.models.StopOnDisconnectConfiguration;
import com.azure.developer.devcenter.models.StopOnDisconnectStatus;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class ListsAvailablePoolsTests extends DevCenterClientTestBase {
    @Test
    @Disabled
    public void testListsAvailablePoolsTests() {
        // method invocation
        PagedIterable<DevBoxPool> response = devBoxesClient.listPools("myProject");

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        DevBoxPool firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "name"
        Assertions.assertEquals("LargeDevWorkStationPool", firstItem.getName());
        // verify property "location"
        Assertions.assertEquals("centralus", firstItem.getLocation());
        // verify property "osType"
        Assertions.assertEquals(DevBoxOsType.WINDOWS, firstItem.getOsType());
        // verify property "hardwareProfile"
        DevBoxHardwareProfile firstItemHardwareProfile = firstItem.getHardwareProfile();
        Assertions.assertNotNull(firstItemHardwareProfile);
        Assertions.assertEquals(8, firstItemHardwareProfile.getVCpus());
        Assertions.assertEquals(32, firstItemHardwareProfile.getMemoryInGb());
        // verify property "hibernateSupport"
        Assertions.assertEquals(HibernateSupport.ENABLED, firstItem.getHibernateSupport());
        // verify property "storageProfile"
        DevBoxStorageProfile firstItemStorageProfile = firstItem.getStorageProfile();
        Assertions.assertNotNull(firstItemStorageProfile);
        OsDisk firstItemStorageProfileOsDisk = firstItemStorageProfile.getOsDisk();
        Assertions.assertNotNull(firstItemStorageProfileOsDisk);
        Assertions.assertEquals(1024, firstItemStorageProfileOsDisk.getDiskSizeInGb());
        // verify property "imageReference"
        DevBoxImageReference firstItemImageReference = firstItem.getImageReference();
        Assertions.assertNotNull(firstItemImageReference);
        Assertions.assertEquals("DevImage", firstItemImageReference.getName());
        Assertions.assertEquals("1.0.0", firstItemImageReference.getVersion());
        Assertions.assertNotNull(firstItemImageReference.getPublishedDate());
        // verify property "stopOnDisconnect"
        StopOnDisconnectConfiguration firstItemStopOnDisconnect = firstItem.getStopOnDisconnect();
        Assertions.assertNotNull(firstItemStopOnDisconnect);
        Assertions.assertEquals(StopOnDisconnectStatus.ENABLED, firstItemStopOnDisconnect.getStatus());
        Assertions.assertEquals(60, firstItemStopOnDisconnect.getGracePeriodInMinutes());
        // verify property "healthStatus"
        Assertions.assertEquals(PoolHealthStatus.HEALTHY, firstItem.getHealthStatus());
    }
}
