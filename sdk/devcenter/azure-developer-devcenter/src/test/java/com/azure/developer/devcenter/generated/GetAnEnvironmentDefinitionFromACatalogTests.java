// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.devcenter.generated;

import com.azure.developer.devcenter.models.EnvironmentDefinition;
import com.azure.developer.devcenter.models.EnvironmentDefinitionParameter;
import com.azure.developer.devcenter.models.EnvironmentDefinitionParameterType;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class GetAnEnvironmentDefinitionFromACatalogTests extends DevCenterClientTestBase {
    @Test
    @Disabled
    public void testGetAnEnvironmentDefinitionFromACatalogTests() {
        // method invocation
        EnvironmentDefinition response
            = deploymentEnvironmentsClient.getEnvironmentDefinition("myProject", "myCatalog", "foo");

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "id"
        Assertions.assertEquals("/projects/myProject/catalogs/myCatalog/environmentDefinitions/foo", response.getId());
        // verify property "name"
        Assertions.assertEquals("foo", response.getName());
        // verify property "catalogName"
        Assertions.assertEquals("myCatalog", response.getCatalogName());
        // verify property "description"
        Assertions.assertEquals("This environment definition is just for example purposes.", response.getDescription());
        // verify property "parameters"
        List<EnvironmentDefinitionParameter> responseParameters = response.getParameters();
        EnvironmentDefinitionParameter responseParametersFirstItem = responseParameters.iterator().next();
        Assertions.assertNotNull(responseParametersFirstItem);
        Assertions.assertEquals("functionAppRuntime", responseParametersFirstItem.getId());
        Assertions.assertEquals("Function App Runtime", responseParametersFirstItem.getName());
        Assertions.assertEquals("dotnet", responseParametersFirstItem.getDefaultValue());
        Assertions.assertEquals(EnvironmentDefinitionParameterType.STRING,
            responseParametersFirstItem.getParameterType());
        Assertions.assertEquals(true, responseParametersFirstItem.isRequired());
        List<String> responseParametersFirstItemAllowed = responseParametersFirstItem.getAllowed();
        Assertions.assertEquals("node", responseParametersFirstItemAllowed.iterator().next());
        // verify property "parametersSchema"
        Assertions.assertEquals(
            "{\"type\":\"object\",\"properties\":{\"functionAppRuntime\":{\"$id\":\"functionAppRuntime\",\"value\":\"dotnet\",\"displayName\":\"Function App Runtime\",\"type\":\"string\",\"enum\":[\"node\",\"dotnet\",\"java\"]},\"storageAccountType\":{\"$id\":\"storageAccountType\",\"value\":\"Standard_LRS\",\"displayName\":\"Storage Account Type\",\"type\":\"string\",\"enum\":[\"Standard_LRS\",\"Standard_GRS\",\"Standard_RAGRS\"]},\"httpsOnly\":{\"$id\":\"httpsOnly\",\"value\":true,\"displayName\":\"HTTPS only\",\"type\":\"boolean\"}},\"required\":[\"functionAppRuntime\",\"storageAccountType\"]}",
            response.getParametersSchema());
        // verify property "templatePath"
        Assertions.assertEquals("azuredeploy.json", response.getTemplatePath());
    }
}
