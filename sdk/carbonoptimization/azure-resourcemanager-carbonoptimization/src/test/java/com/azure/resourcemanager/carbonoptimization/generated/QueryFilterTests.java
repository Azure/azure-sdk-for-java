// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.carbonoptimization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.carbonoptimization.models.DateRange;
import com.azure.resourcemanager.carbonoptimization.models.EmissionScopeEnum;
import com.azure.resourcemanager.carbonoptimization.models.QueryFilter;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class QueryFilterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QueryFilter model = BinaryData.fromString(
            "{\"reportType\":\"QueryFilter\",\"dateRange\":{},\"subscriptionList\":[\"ijbpzvgnwzsymgl\",\"uf\",\"yzkohdbihanuf\",\"fcbjysagithxqha\"],\"resourceGroupUrlList\":[\"pikxwczbyscnpqxu\",\"ivyqniwbybrkxvd\",\"mjgr\"],\"resourceTypeList\":[\"vukxgau\",\"ccsnhsjc\"],\"locationList\":[\"j\",\"kryhtnapczwlokj\"],\"carbonScopeList\":[\"Scope3\",\"Scope2\",\"Scope2\"]}")
            .toObject(QueryFilter.class);
        Assertions.assertEquals("ijbpzvgnwzsymgl", model.subscriptionList().get(0));
        Assertions.assertEquals("pikxwczbyscnpqxu", model.resourceGroupUrlList().get(0));
        Assertions.assertEquals("vukxgau", model.resourceTypeList().get(0));
        Assertions.assertEquals("j", model.locationList().get(0));
        Assertions.assertEquals(EmissionScopeEnum.SCOPE3, model.carbonScopeList().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QueryFilter model = new QueryFilter().withDateRange(new DateRange())
            .withSubscriptionList(Arrays.asList("ijbpzvgnwzsymgl", "uf", "yzkohdbihanuf", "fcbjysagithxqha"))
            .withResourceGroupUrlList(Arrays.asList("pikxwczbyscnpqxu", "ivyqniwbybrkxvd", "mjgr"))
            .withResourceTypeList(Arrays.asList("vukxgau", "ccsnhsjc"))
            .withLocationList(Arrays.asList("j", "kryhtnapczwlokj"))
            .withCarbonScopeList(
                Arrays.asList(EmissionScopeEnum.SCOPE3, EmissionScopeEnum.SCOPE2, EmissionScopeEnum.SCOPE2));
        model = BinaryData.fromObject(model).toObject(QueryFilter.class);
        Assertions.assertEquals("ijbpzvgnwzsymgl", model.subscriptionList().get(0));
        Assertions.assertEquals("pikxwczbyscnpqxu", model.resourceGroupUrlList().get(0));
        Assertions.assertEquals("vukxgau", model.resourceTypeList().get(0));
        Assertions.assertEquals("j", model.locationList().get(0));
        Assertions.assertEquals(EmissionScopeEnum.SCOPE3, model.carbonScopeList().get(0));
    }
}
