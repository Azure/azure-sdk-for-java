// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.carbonoptimization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.carbonoptimization.models.CategoryTypeEnum;
import com.azure.resourcemanager.carbonoptimization.models.DateRange;
import com.azure.resourcemanager.carbonoptimization.models.EmissionScopeEnum;
import com.azure.resourcemanager.carbonoptimization.models.TopItemsMonthlySummaryReportQueryFilter;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TopItemsMonthlySummaryReportQueryFilterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TopItemsMonthlySummaryReportQueryFilter model = BinaryData.fromString(
            "{\"reportType\":\"TopItemsMonthlySummaryReport\",\"categoryType\":\"ResourceGroup\",\"topItems\":1437097866,\"dateRange\":{},\"subscriptionList\":[\"fxqeof\"],\"resourceGroupUrlList\":[\"qjhqjbas\"],\"resourceTypeList\":[\"mjqulngsn\",\"nbybkzgcwrwcl\",\"xwrljdouskcqvkoc\",\"cjdkwtnhxbnjbi\"],\"locationList\":[\"rglssainqpj\",\"nzl\",\"jfm\",\"pee\"],\"carbonScopeList\":[\"Scope3\",\"Scope1\"]}")
            .toObject(TopItemsMonthlySummaryReportQueryFilter.class);
        Assertions.assertEquals("fxqeof", model.subscriptionList().get(0));
        Assertions.assertEquals("qjhqjbas", model.resourceGroupUrlList().get(0));
        Assertions.assertEquals("mjqulngsn", model.resourceTypeList().get(0));
        Assertions.assertEquals("rglssainqpj", model.locationList().get(0));
        Assertions.assertEquals(EmissionScopeEnum.SCOPE3, model.carbonScopeList().get(0));
        Assertions.assertEquals(CategoryTypeEnum.RESOURCE_GROUP, model.categoryType());
        Assertions.assertEquals(1437097866, model.topItems());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TopItemsMonthlySummaryReportQueryFilter model
            = new TopItemsMonthlySummaryReportQueryFilter().withDateRange(new DateRange())
                .withSubscriptionList(Arrays.asList("fxqeof"))
                .withResourceGroupUrlList(Arrays.asList("qjhqjbas"))
                .withResourceTypeList(Arrays.asList("mjqulngsn", "nbybkzgcwrwcl", "xwrljdouskcqvkoc", "cjdkwtnhxbnjbi"))
                .withLocationList(Arrays.asList("rglssainqpj", "nzl", "jfm", "pee"))
                .withCarbonScopeList(Arrays.asList(EmissionScopeEnum.SCOPE3, EmissionScopeEnum.SCOPE1))
                .withCategoryType(CategoryTypeEnum.RESOURCE_GROUP)
                .withTopItems(1437097866);
        model = BinaryData.fromObject(model).toObject(TopItemsMonthlySummaryReportQueryFilter.class);
        Assertions.assertEquals("fxqeof", model.subscriptionList().get(0));
        Assertions.assertEquals("qjhqjbas", model.resourceGroupUrlList().get(0));
        Assertions.assertEquals("mjqulngsn", model.resourceTypeList().get(0));
        Assertions.assertEquals("rglssainqpj", model.locationList().get(0));
        Assertions.assertEquals(EmissionScopeEnum.SCOPE3, model.carbonScopeList().get(0));
        Assertions.assertEquals(CategoryTypeEnum.RESOURCE_GROUP, model.categoryType());
        Assertions.assertEquals(1437097866, model.topItems());
    }
}
