// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.carbonoptimization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.carbonoptimization.models.CategoryTypeEnum;
import com.azure.resourcemanager.carbonoptimization.models.DateRange;
import com.azure.resourcemanager.carbonoptimization.models.EmissionScopeEnum;
import com.azure.resourcemanager.carbonoptimization.models.TopItemsSummaryReportQueryFilter;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TopItemsSummaryReportQueryFilterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TopItemsSummaryReportQueryFilter model = BinaryData.fromString(
            "{\"reportType\":\"TopItemsSummaryReport\",\"categoryType\":\"ResourceType\",\"topItems\":1694152390,\"dateRange\":{},\"subscriptionList\":[\"pfxxy\"],\"resourceGroupUrlList\":[\"i\",\"mayhuybbkpodepoo\",\"inuvamiheogn\"],\"resourceTypeList\":[\"zxtheotusivyevcc\",\"qi\"],\"locationList\":[\"un\",\"bwjzr\",\"fygxgispemvtzfk\"],\"carbonScopeList\":[\"Scope1\",\"Scope1\"]}")
            .toObject(TopItemsSummaryReportQueryFilter.class);
        Assertions.assertEquals("pfxxy", model.subscriptionList().get(0));
        Assertions.assertEquals("i", model.resourceGroupUrlList().get(0));
        Assertions.assertEquals("zxtheotusivyevcc", model.resourceTypeList().get(0));
        Assertions.assertEquals("un", model.locationList().get(0));
        Assertions.assertEquals(EmissionScopeEnum.SCOPE1, model.carbonScopeList().get(0));
        Assertions.assertEquals(CategoryTypeEnum.RESOURCE_TYPE, model.categoryType());
        Assertions.assertEquals(1694152390, model.topItems());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TopItemsSummaryReportQueryFilter model = new TopItemsSummaryReportQueryFilter().withDateRange(new DateRange())
            .withSubscriptionList(Arrays.asList("pfxxy"))
            .withResourceGroupUrlList(Arrays.asList("i", "mayhuybbkpodepoo", "inuvamiheogn"))
            .withResourceTypeList(Arrays.asList("zxtheotusivyevcc", "qi"))
            .withLocationList(Arrays.asList("un", "bwjzr", "fygxgispemvtzfk"))
            .withCarbonScopeList(Arrays.asList(EmissionScopeEnum.SCOPE1, EmissionScopeEnum.SCOPE1))
            .withCategoryType(CategoryTypeEnum.RESOURCE_TYPE)
            .withTopItems(1694152390);
        model = BinaryData.fromObject(model).toObject(TopItemsSummaryReportQueryFilter.class);
        Assertions.assertEquals("pfxxy", model.subscriptionList().get(0));
        Assertions.assertEquals("i", model.resourceGroupUrlList().get(0));
        Assertions.assertEquals("zxtheotusivyevcc", model.resourceTypeList().get(0));
        Assertions.assertEquals("un", model.locationList().get(0));
        Assertions.assertEquals(EmissionScopeEnum.SCOPE1, model.carbonScopeList().get(0));
        Assertions.assertEquals(CategoryTypeEnum.RESOURCE_TYPE, model.categoryType());
        Assertions.assertEquals(1694152390, model.topItems());
    }
}
