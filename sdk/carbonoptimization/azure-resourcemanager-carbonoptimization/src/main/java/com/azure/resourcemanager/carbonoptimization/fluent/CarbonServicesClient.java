// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.carbonoptimization.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.carbonoptimization.fluent.models.CarbonEmissionDataAvailableDateRangeInner;
import com.azure.resourcemanager.carbonoptimization.fluent.models.CarbonEmissionDataInner;
import com.azure.resourcemanager.carbonoptimization.models.QueryFilter;

/**
 * An instance of this class provides access to all the operations defined in CarbonServicesClient.
 */
public interface CarbonServicesClient {
    /**
     * API for Carbon Emissions Reports.
     * 
     * @param queryParameters Query parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of carbon emission results as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CarbonEmissionDataInner> queryCarbonEmissionReports(QueryFilter queryParameters);

    /**
     * API for Carbon Emissions Reports.
     * 
     * @param queryParameters Query parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of carbon emission results as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CarbonEmissionDataInner> queryCarbonEmissionReports(QueryFilter queryParameters, Context context);

    /**
     * API for query carbon emission data available date range.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for available date range of carbon emission data along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CarbonEmissionDataAvailableDateRangeInner>
        queryCarbonEmissionDataAvailableDateRangeWithResponse(Context context);

    /**
     * API for query carbon emission data available date range.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for available date range of carbon emission data.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CarbonEmissionDataAvailableDateRangeInner queryCarbonEmissionDataAvailableDateRange();
}
