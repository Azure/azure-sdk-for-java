// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.carbonoptimization.implementation;

import com.azure.resourcemanager.carbonoptimization.fluent.models.CarbonEmissionDataListResultInner;
import com.azure.resourcemanager.carbonoptimization.models.CarbonEmissionData;
import com.azure.resourcemanager.carbonoptimization.models.CarbonEmissionDataListResult;
import com.azure.resourcemanager.carbonoptimization.models.SubscriptionAccessDecision;
import java.util.Collections;
import java.util.List;

public final class CarbonEmissionDataListResultImpl implements CarbonEmissionDataListResult {
    private CarbonEmissionDataListResultInner innerObject;

    private final com.azure.resourcemanager.carbonoptimization.CarbonOptimizationManager serviceManager;

    CarbonEmissionDataListResultImpl(CarbonEmissionDataListResultInner innerObject,
        com.azure.resourcemanager.carbonoptimization.CarbonOptimizationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public List<CarbonEmissionData> value() {
        List<CarbonEmissionData> inner = this.innerModel().value();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String skipToken() {
        return this.innerModel().skipToken();
    }

    public List<SubscriptionAccessDecision> subscriptionAccessDecisionList() {
        List<SubscriptionAccessDecision> inner = this.innerModel().subscriptionAccessDecisionList();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public CarbonEmissionDataListResultInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.carbonoptimization.CarbonOptimizationManager manager() {
        return this.serviceManager;
    }
}
