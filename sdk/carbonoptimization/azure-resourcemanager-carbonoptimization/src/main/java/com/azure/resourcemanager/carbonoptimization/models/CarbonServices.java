// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.carbonoptimization.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of CarbonServices.
 */
public interface CarbonServices {
    /**
     * API for Carbon Emissions Reports.
     * 
     * @param queryParameters Query parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of carbon emission results along with {@link Response}.
     */
    Response<CarbonEmissionDataListResult> queryCarbonEmissionReportsWithResponse(QueryFilter queryParameters,
        Context context);

    /**
     * API for Carbon Emissions Reports.
     * 
     * @param queryParameters Query parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of carbon emission results.
     */
    CarbonEmissionDataListResult queryCarbonEmissionReports(QueryFilter queryParameters);

    /**
     * API for query carbon emission data available date range.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for available date range of carbon emission data along with {@link Response}.
     */
    Response<CarbonEmissionDataAvailableDateRange>
        queryCarbonEmissionDataAvailableDateRangeWithResponse(Context context);

    /**
     * API for query carbon emission data available date range.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for available date range of carbon emission data.
     */
    CarbonEmissionDataAvailableDateRange queryCarbonEmissionDataAvailableDateRange();
}
