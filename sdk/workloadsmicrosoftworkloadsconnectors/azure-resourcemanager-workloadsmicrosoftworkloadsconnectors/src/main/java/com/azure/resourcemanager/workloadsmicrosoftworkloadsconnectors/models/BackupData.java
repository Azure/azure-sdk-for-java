// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloadsmicrosoftworkloadsconnectors.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Information about the recovery services vault and backup policy used for backup. */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "backupType",
    defaultImpl = BackupData.class)
@JsonTypeName("BackupData")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "VM", value = VMBackupData.class),
    @JsonSubTypes.Type(name = "HANA", value = HanaBackupData.class),
    @JsonSubTypes.Type(name = "SQL", value = SqlBackupData.class)
})
@Fluent
public class BackupData {
    /*
     * The properties of the recovery services vault used for backup.
     */
    @JsonProperty(value = "recoveryServicesVault", required = true)
    private RecoveryServicesVaultProperties recoveryServicesVault;

    /** Creates an instance of BackupData class. */
    public BackupData() {
    }

    /**
     * Get the recoveryServicesVault property: The properties of the recovery services vault used for backup.
     *
     * @return the recoveryServicesVault value.
     */
    public RecoveryServicesVaultProperties recoveryServicesVault() {
        return this.recoveryServicesVault;
    }

    /**
     * Set the recoveryServicesVault property: The properties of the recovery services vault used for backup.
     *
     * @param recoveryServicesVault the recoveryServicesVault value to set.
     * @return the BackupData object itself.
     */
    public BackupData withRecoveryServicesVault(RecoveryServicesVaultProperties recoveryServicesVault) {
        this.recoveryServicesVault = recoveryServicesVault;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (recoveryServicesVault() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property recoveryServicesVault in model BackupData"));
        } else {
            recoveryServicesVault().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(BackupData.class);
}
