// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.DataflowBuiltInTransformationFilter;
import com.azure.resourcemanager.iotoperations.models.FilterType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataflowBuiltInTransformationFilterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowBuiltInTransformationFilter model = BinaryData.fromString(
            "{\"type\":\"Filter\",\"description\":\"ckcb\",\"inputs\":[\"ejrjxgciqibrho\",\"xsdqrhzoymibmrqy\"],\"expression\":\"bahwfl\"}")
            .toObject(DataflowBuiltInTransformationFilter.class);
        Assertions.assertEquals(FilterType.FILTER, model.type());
        Assertions.assertEquals("ckcb", model.description());
        Assertions.assertEquals("ejrjxgciqibrho", model.inputs().get(0));
        Assertions.assertEquals("bahwfl", model.expression());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowBuiltInTransformationFilter model
            = new DataflowBuiltInTransformationFilter().withType(FilterType.FILTER)
                .withDescription("ckcb")
                .withInputs(Arrays.asList("ejrjxgciqibrho", "xsdqrhzoymibmrqy"))
                .withExpression("bahwfl");
        model = BinaryData.fromObject(model).toObject(DataflowBuiltInTransformationFilter.class);
        Assertions.assertEquals(FilterType.FILTER, model.type());
        Assertions.assertEquals("ckcb", model.description());
        Assertions.assertEquals("ejrjxgciqibrho", model.inputs().get(0));
        Assertions.assertEquals("bahwfl", model.expression());
    }
}
