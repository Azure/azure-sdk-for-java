// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.BrokerSubscriberQueueCustomPolicy;
import com.azure.resourcemanager.iotoperations.models.BrokerSubscriberQueueCustomPolicySettings;
import com.azure.resourcemanager.iotoperations.models.BrokerSubscriberQueueDynamic;
import com.azure.resourcemanager.iotoperations.models.OperationalMode;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BrokerSubscriberQueueCustomPolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BrokerSubscriberQueueCustomPolicy model = BinaryData.fromString(
            "{\"mode\":\"Custom\",\"subscriberQueueSettings\":{\"subscriberClientIds\":[\"dpnqbq\",\"wxrjfeallnwsub\"],\"dynamic\":{\"mode\":\"Enabled\"},\"topics\":[\"mpmngnzscxaqwoo\",\"hcbonqvpkvlr\"]}}")
            .toObject(BrokerSubscriberQueueCustomPolicy.class);
        Assertions.assertEquals("dpnqbq", model.subscriberQueueSettings().subscriberClientIds().get(0));
        Assertions.assertEquals(OperationalMode.ENABLED, model.subscriberQueueSettings().dynamic().mode());
        Assertions.assertEquals("mpmngnzscxaqwoo", model.subscriberQueueSettings().topics().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BrokerSubscriberQueueCustomPolicy model = new BrokerSubscriberQueueCustomPolicy()
            .withSubscriberQueueSettings(new BrokerSubscriberQueueCustomPolicySettings()
                .withSubscriberClientIds(Arrays.asList("dpnqbq", "wxrjfeallnwsub"))
                .withDynamic(new BrokerSubscriberQueueDynamic().withMode(OperationalMode.ENABLED))
                .withTopics(Arrays.asList("mpmngnzscxaqwoo", "hcbonqvpkvlr")));
        model = BinaryData.fromObject(model).toObject(BrokerSubscriberQueueCustomPolicy.class);
        Assertions.assertEquals("dpnqbq", model.subscriberQueueSettings().subscriberClientIds().get(0));
        Assertions.assertEquals(OperationalMode.ENABLED, model.subscriberQueueSettings().dynamic().mode());
        Assertions.assertEquals("mpmngnzscxaqwoo", model.subscriberQueueSettings().topics().get(0));
    }
}
