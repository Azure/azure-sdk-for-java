// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iotoperations.IoTOperationsManager;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocationType;
import com.azure.resourcemanager.iotoperations.models.InstanceResource;
import com.azure.resourcemanager.iotoperations.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InstancesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"hewpusdsttwv\",\"provisioningState\":\"Failed\",\"version\":\"bejdcn\",\"schemaRegistryRef\":{\"resourceId\":\"qqmoaku\"}},\"extendedLocation\":{\"name\":\"gm\",\"type\":\"CustomLocation\"},\"identity\":{\"principalId\":\"rdgrtw\",\"tenantId\":\"nuuzkopbm\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"rmaequ\":{\"principalId\":\"woyuhhziuief\",\"clientId\":\"bhdmsmlmzqhof\"},\"kaivwit\":{\"principalId\":\"hxicslfaoqz\",\"clientId\":\"yylhalnswhccsp\"}}},\"location\":\"cywuggwol\",\"tags\":{\"i\":\"zbwemh\",\"wmsweypqwd\":\"sbrgz\",\"mkttlstvlzywem\":\"ggicccnxqhue\",\"lusiy\":\"zrncsdt\"},\"id\":\"bsfgytguslfea\",\"name\":\"cy\",\"type\":\"qukyhejhzi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IoTOperationsManager manager = IoTOperationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        InstanceResource response = manager.instances()
            .getByResourceGroupWithResponse("snfdsdoakgtdl", "kkze", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cywuggwol", response.location());
        Assertions.assertEquals("zbwemh", response.tags().get("i"));
        Assertions.assertEquals("hewpusdsttwv", response.properties().description());
        Assertions.assertEquals("qqmoaku", response.properties().schemaRegistryRef().resourceId());
        Assertions.assertEquals("gm", response.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, response.extendedLocation().type());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, response.identity().type());
    }
}
