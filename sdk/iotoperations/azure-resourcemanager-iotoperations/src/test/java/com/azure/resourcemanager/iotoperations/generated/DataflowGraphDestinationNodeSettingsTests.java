// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.DataflowGraphDestinationNodeSettings;
import com.azure.resourcemanager.iotoperations.models.DataflowGraphDestinationSchemaSerializationFormat;
import com.azure.resourcemanager.iotoperations.models.DataflowGraphDestinationSchemaSettings;
import org.junit.jupiter.api.Assertions;

public final class DataflowGraphDestinationNodeSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowGraphDestinationNodeSettings model = BinaryData.fromString(
            "{\"endpointRef\":\"xqtvcofu\",\"dataDestination\":\"f\",\"outputSchemaSettings\":{\"serializationFormat\":\"Delta\",\"schemaRef\":\"jub\"}}")
            .toObject(DataflowGraphDestinationNodeSettings.class);
        Assertions.assertEquals("xqtvcofu", model.endpointRef());
        Assertions.assertEquals("f", model.dataDestination());
        Assertions.assertEquals(DataflowGraphDestinationSchemaSerializationFormat.DELTA,
            model.outputSchemaSettings().serializationFormat());
        Assertions.assertEquals("jub", model.outputSchemaSettings().schemaRef());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowGraphDestinationNodeSettings model
            = new DataflowGraphDestinationNodeSettings().withEndpointRef("xqtvcofu")
                .withDataDestination("f")
                .withOutputSchemaSettings(new DataflowGraphDestinationSchemaSettings()
                    .withSerializationFormat(DataflowGraphDestinationSchemaSerializationFormat.DELTA)
                    .withSchemaRef("jub"));
        model = BinaryData.fromObject(model).toObject(DataflowGraphDestinationNodeSettings.class);
        Assertions.assertEquals("xqtvcofu", model.endpointRef());
        Assertions.assertEquals("f", model.dataDestination());
        Assertions.assertEquals(DataflowGraphDestinationSchemaSerializationFormat.DELTA,
            model.outputSchemaSettings().serializationFormat());
        Assertions.assertEquals("jub", model.outputSchemaSettings().schemaRef());
    }
}
