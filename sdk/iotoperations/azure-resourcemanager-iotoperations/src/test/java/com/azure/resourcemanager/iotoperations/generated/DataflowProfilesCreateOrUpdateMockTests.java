// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iotoperations.IoTOperationsManager;
import com.azure.resourcemanager.iotoperations.models.DataflowProfileProperties;
import com.azure.resourcemanager.iotoperations.models.DataflowProfileResource;
import com.azure.resourcemanager.iotoperations.models.DiagnosticsLogs;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocation;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocationType;
import com.azure.resourcemanager.iotoperations.models.Metrics;
import com.azure.resourcemanager.iotoperations.models.ProfileDiagnostics;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DataflowProfilesCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"diagnostics\":{\"logs\":{\"level\":\"of\"},\"metrics\":{\"prometheusPort\":443890613}},\"instanceCount\":697365196,\"provisioningState\":\"Succeeded\"},\"extendedLocation\":{\"name\":\"qdhcu\",\"type\":\"CustomLocation\"},\"id\":\"plcwkhi\",\"name\":\"ihlhzdsqtzb\",\"type\":\"rgnowcjhfgm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IoTOperationsManager manager = IoTOperationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        DataflowProfileResource response = manager.dataflowProfiles()
            .define("ojocqwogf")
            .withExistingInstance("knlrariaawiuagy", "wqfbylyrfgiagt")
            .withProperties(new DataflowProfileProperties()
                .withDiagnostics(new ProfileDiagnostics().withLogs(new DiagnosticsLogs().withLevel("sfzldmoz"))
                    .withMetrics(new Metrics().withPrometheusPort(1126537021)))
                .withInstanceCount(2095359903))
            .withExtendedLocation(
                new ExtendedLocation().withName("adpysownbt").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .create();

        Assertions.assertEquals("of", response.properties().diagnostics().logs().level());
        Assertions.assertEquals(443890613, response.properties().diagnostics().metrics().prometheusPort());
        Assertions.assertEquals(697365196, response.properties().instanceCount());
        Assertions.assertEquals("qdhcu", response.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, response.extendedLocation().type());
    }
}
