// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iotoperations.IoTOperationsManager;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocationType;
import com.azure.resourcemanager.iotoperations.models.InstanceFeatureMode;
import com.azure.resourcemanager.iotoperations.models.InstanceResource;
import com.azure.resourcemanager.iotoperations.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.iotoperations.models.OperationalMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InstancesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"dyodnwzxltj\",\"provisioningState\":\"Failed\",\"version\":\"ltiugcxnavv\",\"schemaRegistryRef\":{\"resourceId\":\"xqi\"},\"features\":{\"vfgbvfvpdboda\":{\"mode\":\"Disabled\",\"settings\":{\"xwlmdjr\":\"Disabled\"}},\"hvxndzwmkrefajpj\":{\"mode\":\"Disabled\",\"settings\":{\"lhkrribdeibqipqk\":\"Enabled\"}},\"djpvkvpbjxbkz\":{\"mode\":\"Preview\",\"settings\":{\"yhgbijtjivfx\":\"Disabled\",\"jabibsystawf\":\"Enabled\"}},\"lgzrfzeeyeb\":{\"mode\":\"Preview\",\"settings\":{\"cjabudurgkakmo\":\"Enabled\",\"hjjklff\":\"Disabled\",\"ouw\":\"Disabled\"}}}},\"extendedLocation\":{\"name\":\"zi\",\"type\":\"CustomLocation\"},\"identity\":{\"principalId\":\"hqlbjbsybbq\",\"tenantId\":\"vtldgmfpgvmpip\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"wbdsr\":{\"clientId\":\"aqfxss\",\"principalId\":\"u\"},\"ircgpikpz\":{\"clientId\":\"pdrhne\",\"principalId\":\"owqkdwytisi\"},\"mbzonokix\":{\"clientId\":\"ejzanlfz\",\"principalId\":\"av\"}}},\"location\":\"q\",\"tags\":{\"szrnwo\":\"gzpfrla\"},\"id\":\"indfpwpjyl\",\"name\":\"bt\",\"type\":\"h\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IoTOperationsManager manager = IoTOperationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<InstanceResource> response = manager.instances().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("q", response.iterator().next().location());
        Assertions.assertEquals("gzpfrla", response.iterator().next().tags().get("szrnwo"));
        Assertions.assertEquals("dyodnwzxltj", response.iterator().next().properties().description());
        Assertions.assertEquals("xqi", response.iterator().next().properties().schemaRegistryRef().resourceId());
        Assertions.assertEquals(InstanceFeatureMode.DISABLED,
            response.iterator().next().properties().features().get("vfgbvfvpdboda").mode());
        Assertions.assertEquals(OperationalMode.DISABLED,
            response.iterator().next().properties().features().get("vfgbvfvpdboda").settings().get("xwlmdjr"));
        Assertions.assertEquals("zi", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION,
            response.iterator().next().extendedLocation().type());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
    }
}
