// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iotoperations.IoTOperationsManager;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocationType;
import com.azure.resourcemanager.iotoperations.models.InstanceFeatureMode;
import com.azure.resourcemanager.iotoperations.models.InstanceResource;
import com.azure.resourcemanager.iotoperations.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.iotoperations.models.OperationalMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InstancesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"bbejdcngqqm\",\"provisioningState\":\"Failed\",\"version\":\"fgmjzrwrdgrt\",\"schemaRegistryRef\":{\"resourceId\":\"aenuuz\"},\"features\":{\"efozbhdms\":{\"mode\":\"Preview\",\"settings\":{\"fdwoyuhh\":\"Enabled\",\"u\":\"Disabled\"}},\"gwol\":{\"mode\":\"Preview\",\"settings\":{\"oftrmaequia\":\"Enabled\",\"icslfaoq\":\"Enabled\",\"iyylhalnswhccsp\":\"Disabled\",\"aivwitqscywu\":\"Enabled\"}}}},\"extendedLocation\":{\"name\":\"h\",\"type\":\"CustomLocation\"},\"identity\":{\"principalId\":\"emh\",\"tenantId\":\"rsbrgzdwm\",\"type\":\"None\",\"userAssignedIdentities\":{\"ttlstvlzywemhz\":{\"clientId\":\"qwdxggicc\",\"principalId\":\"xqhuexm\"},\"adcy\":{\"clientId\":\"csdtclusiypbs\",\"principalId\":\"ytguslf\"},\"lppvksrpq\":{\"clientId\":\"ukyhejhzis\",\"principalId\":\"fpel\"}}},\"location\":\"jzraehtwdwrf\",\"tags\":{\"cdl\":\"iby\"},\"id\":\"h\",\"name\":\"hfwpracstwit\",\"type\":\"khevxccedc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IoTOperationsManager manager = IoTOperationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<InstanceResource> response
            = manager.instances().listByResourceGroup("hewpusdsttwv", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("jzraehtwdwrf", response.iterator().next().location());
        Assertions.assertEquals("iby", response.iterator().next().tags().get("cdl"));
        Assertions.assertEquals("bbejdcngqqm", response.iterator().next().properties().description());
        Assertions.assertEquals("aenuuz", response.iterator().next().properties().schemaRegistryRef().resourceId());
        Assertions.assertEquals(InstanceFeatureMode.PREVIEW,
            response.iterator().next().properties().features().get("efozbhdms").mode());
        Assertions.assertEquals(OperationalMode.ENABLED,
            response.iterator().next().properties().features().get("efozbhdms").settings().get("fdwoyuhh"));
        Assertions.assertEquals("h", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION,
            response.iterator().next().extendedLocation().type());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
    }
}
