// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.BrokerAuthenticatorMethodX509Attributes;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BrokerAuthenticatorMethodX509AttributesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BrokerAuthenticatorMethodX509Attributes model = BinaryData.fromString(
            "{\"attributes\":{\"fmvfaxkffeiit\":\"u\",\"ggi\":\"lvmezyvshxmzsbbz\",\"xxjnspydptk\":\"rxwburv\",\"iukbldngkpoci\":\"enkouknvudw\"},\"subject\":\"azyxoegukg\"}")
            .toObject(BrokerAuthenticatorMethodX509Attributes.class);
        Assertions.assertEquals("u", model.attributes().get("fmvfaxkffeiit"));
        Assertions.assertEquals("azyxoegukg", model.subject());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BrokerAuthenticatorMethodX509Attributes model = new BrokerAuthenticatorMethodX509Attributes()
            .withAttributes(mapOf("fmvfaxkffeiit", "u", "ggi", "lvmezyvshxmzsbbz", "xxjnspydptk", "rxwburv",
                "iukbldngkpoci", "enkouknvudw"))
            .withSubject("azyxoegukg");
        model = BinaryData.fromObject(model).toObject(BrokerAuthenticatorMethodX509Attributes.class);
        Assertions.assertEquals("u", model.attributes().get("fmvfaxkffeiit"));
        Assertions.assertEquals("azyxoegukg", model.subject());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
