// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorTemplateRuntimeImageConfigurationSettings;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorsImagePullPolicy;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorsRegistrySettings;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorsTagDigestSettings;
import org.junit.jupiter.api.Assertions;

public final class AkriConnectorTemplateRuntimeImageConfigurationSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AkriConnectorTemplateRuntimeImageConfigurationSettings model = BinaryData.fromString(
            "{\"imageName\":\"snrbgyefrymsgao\",\"imagePullPolicy\":\"Never\",\"replicas\":326840480,\"registrySettings\":{\"registrySettingsType\":\"AkriConnectorsRegistrySettings\"},\"tagDigestSettings\":{\"tagDigestType\":\"AkriConnectorsTagDigestSettings\"}}")
            .toObject(AkriConnectorTemplateRuntimeImageConfigurationSettings.class);
        Assertions.assertEquals("snrbgyefrymsgao", model.imageName());
        Assertions.assertEquals(AkriConnectorsImagePullPolicy.NEVER, model.imagePullPolicy());
        Assertions.assertEquals(326840480, model.replicas());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AkriConnectorTemplateRuntimeImageConfigurationSettings model
            = new AkriConnectorTemplateRuntimeImageConfigurationSettings().withImageName("snrbgyefrymsgao")
                .withImagePullPolicy(AkriConnectorsImagePullPolicy.NEVER)
                .withReplicas(326840480)
                .withRegistrySettings(new AkriConnectorsRegistrySettings())
                .withTagDigestSettings(new AkriConnectorsTagDigestSettings());
        model = BinaryData.fromObject(model).toObject(AkriConnectorTemplateRuntimeImageConfigurationSettings.class);
        Assertions.assertEquals("snrbgyefrymsgao", model.imageName());
        Assertions.assertEquals(AkriConnectorsImagePullPolicy.NEVER, model.imagePullPolicy());
        Assertions.assertEquals(326840480, model.replicas());
    }
}
