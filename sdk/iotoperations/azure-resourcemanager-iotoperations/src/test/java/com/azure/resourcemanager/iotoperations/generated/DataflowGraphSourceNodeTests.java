// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.DataflowGraphSourceNode;
import com.azure.resourcemanager.iotoperations.models.DataflowGraphSourceSettings;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataflowGraphSourceNodeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowGraphSourceNode model = BinaryData.fromString(
            "{\"nodeType\":\"Source\",\"sourceSettings\":{\"endpointRef\":\"tramxjez\",\"dataSources\":[\"wnwxuqlcvyd\",\"patdooaojkniodko\",\"ebwnujhe\",\"msbvdkcrodtjinf\"],\"assetRef\":\"lfltka\"},\"name\":\"jvefkdlfoakggkfp\"}")
            .toObject(DataflowGraphSourceNode.class);
        Assertions.assertEquals("jvefkdlfoakggkfp", model.name());
        Assertions.assertEquals("tramxjez", model.sourceSettings().endpointRef());
        Assertions.assertEquals("wnwxuqlcvyd", model.sourceSettings().dataSources().get(0));
        Assertions.assertEquals("lfltka", model.sourceSettings().assetRef());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowGraphSourceNode model = new DataflowGraphSourceNode().withName("jvefkdlfoakggkfp")
            .withSourceSettings(new DataflowGraphSourceSettings().withEndpointRef("tramxjez")
                .withDataSources(Arrays.asList("wnwxuqlcvyd", "patdooaojkniodko", "ebwnujhe", "msbvdkcrodtjinf"))
                .withAssetRef("lfltka"));
        model = BinaryData.fromObject(model).toObject(DataflowGraphSourceNode.class);
        Assertions.assertEquals("jvefkdlfoakggkfp", model.name());
        Assertions.assertEquals("tramxjez", model.sourceSettings().endpointRef());
        Assertions.assertEquals("wnwxuqlcvyd", model.sourceSettings().dataSources().get(0));
        Assertions.assertEquals("lfltka", model.sourceSettings().assetRef());
    }
}
