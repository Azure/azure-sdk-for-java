// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.DataflowSourceOperationSettings;
import com.azure.resourcemanager.iotoperations.models.SourceSerializationFormat;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataflowSourceOperationSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowSourceOperationSettings model = BinaryData.fromString(
            "{\"endpointRef\":\"mnzb\",\"assetRef\":\"hjpglkf\",\"serializationFormat\":\"Json\",\"schemaRef\":\"neuelfphsdyhtoz\",\"dataSources\":[\"kd\",\"wwquuvxzxclvithh\",\"zonosgg\"]}")
            .toObject(DataflowSourceOperationSettings.class);
        Assertions.assertEquals("mnzb", model.endpointRef());
        Assertions.assertEquals("hjpglkf", model.assetRef());
        Assertions.assertEquals(SourceSerializationFormat.JSON, model.serializationFormat());
        Assertions.assertEquals("neuelfphsdyhtoz", model.schemaRef());
        Assertions.assertEquals("kd", model.dataSources().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowSourceOperationSettings model = new DataflowSourceOperationSettings().withEndpointRef("mnzb")
            .withAssetRef("hjpglkf")
            .withSerializationFormat(SourceSerializationFormat.JSON)
            .withSchemaRef("neuelfphsdyhtoz")
            .withDataSources(Arrays.asList("kd", "wwquuvxzxclvithh", "zonosgg"));
        model = BinaryData.fromObject(model).toObject(DataflowSourceOperationSettings.class);
        Assertions.assertEquals("mnzb", model.endpointRef());
        Assertions.assertEquals("hjpglkf", model.assetRef());
        Assertions.assertEquals(SourceSerializationFormat.JSON, model.serializationFormat());
        Assertions.assertEquals("neuelfphsdyhtoz", model.schemaRef());
        Assertions.assertEquals("kd", model.dataSources().get(0));
    }
}
