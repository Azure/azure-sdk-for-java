// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.DataflowGraphDestinationNode;
import com.azure.resourcemanager.iotoperations.models.DataflowGraphDestinationNodeSettings;
import com.azure.resourcemanager.iotoperations.models.DataflowGraphDestinationSchemaSerializationFormat;
import com.azure.resourcemanager.iotoperations.models.DataflowGraphDestinationSchemaSettings;
import org.junit.jupiter.api.Assertions;

public final class DataflowGraphDestinationNodeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowGraphDestinationNode model = BinaryData.fromString(
            "{\"nodeType\":\"Destination\",\"destinationSettings\":{\"endpointRef\":\"vglsbjjca\",\"dataDestination\":\"vxb\",\"outputSchemaSettings\":{\"serializationFormat\":\"Delta\",\"schemaRef\":\"dut\"}},\"name\":\"cormr\"}")
            .toObject(DataflowGraphDestinationNode.class);
        Assertions.assertEquals("cormr", model.name());
        Assertions.assertEquals("vglsbjjca", model.destinationSettings().endpointRef());
        Assertions.assertEquals("vxb", model.destinationSettings().dataDestination());
        Assertions.assertEquals(DataflowGraphDestinationSchemaSerializationFormat.DELTA,
            model.destinationSettings().outputSchemaSettings().serializationFormat());
        Assertions.assertEquals("dut", model.destinationSettings().outputSchemaSettings().schemaRef());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowGraphDestinationNode model = new DataflowGraphDestinationNode().withName("cormr")
            .withDestinationSettings(new DataflowGraphDestinationNodeSettings().withEndpointRef("vglsbjjca")
                .withDataDestination("vxb")
                .withOutputSchemaSettings(new DataflowGraphDestinationSchemaSettings()
                    .withSerializationFormat(DataflowGraphDestinationSchemaSerializationFormat.DELTA)
                    .withSchemaRef("dut")));
        model = BinaryData.fromObject(model).toObject(DataflowGraphDestinationNode.class);
        Assertions.assertEquals("cormr", model.name());
        Assertions.assertEquals("vglsbjjca", model.destinationSettings().endpointRef());
        Assertions.assertEquals("vxb", model.destinationSettings().dataDestination());
        Assertions.assertEquals(DataflowGraphDestinationSchemaSerializationFormat.DELTA,
            model.destinationSettings().outputSchemaSettings().serializationFormat());
        Assertions.assertEquals("dut", model.destinationSettings().outputSchemaSettings().schemaRef());
    }
}
