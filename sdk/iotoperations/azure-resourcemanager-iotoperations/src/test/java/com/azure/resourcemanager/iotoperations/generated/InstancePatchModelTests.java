// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.InstancePatchModel;
import com.azure.resourcemanager.iotoperations.models.ManagedServiceIdentity;
import com.azure.resourcemanager.iotoperations.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.iotoperations.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class InstancePatchModelTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InstancePatchModel model = BinaryData.fromString(
            "{\"tags\":{\"k\":\"zwyiftyhxhur\",\"kjfkg\":\"tyxolniwpwc\",\"plwckbas\":\"awxklr\",\"cph\":\"ypnddhsgcb\"},\"identity\":{\"principalId\":\"ot\",\"tenantId\":\"qgoulznd\",\"type\":\"None\",\"userAssignedIdentities\":{\"xybz\":{\"clientId\":\"qkgfgibma\",\"principalId\":\"akeqs\"},\"iqfouflmmnkz\":{\"clientId\":\"e\",\"principalId\":\"ytb\"},\"uqktap\":{\"clientId\":\"odmgl\",\"principalId\":\"gpbkwtmut\"}}}}")
            .toObject(InstancePatchModel.class);
        Assertions.assertEquals("zwyiftyhxhur", model.tags().get("k"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InstancePatchModel model = new InstancePatchModel()
            .withTags(mapOf("k", "zwyiftyhxhur", "kjfkg", "tyxolniwpwc", "plwckbas", "awxklr", "cph", "ypnddhsgcb"))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(mapOf("xybz", new UserAssignedIdentity(), "iqfouflmmnkz",
                    new UserAssignedIdentity(), "uqktap", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(InstancePatchModel.class);
        Assertions.assertEquals("zwyiftyhxhur", model.tags().get("k"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
