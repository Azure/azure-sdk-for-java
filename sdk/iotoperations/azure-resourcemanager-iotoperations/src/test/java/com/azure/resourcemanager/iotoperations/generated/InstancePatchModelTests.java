// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.InstancePatchModel;
import com.azure.resourcemanager.iotoperations.models.ManagedServiceIdentity;
import com.azure.resourcemanager.iotoperations.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.iotoperations.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class InstancePatchModelTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InstancePatchModel model = BinaryData.fromString(
            "{\"tags\":{\"jakhmsbzjh\":\"fdfdosygexpa\",\"hqtrgqjbpf\":\"rzevdphlxaol\",\"tfell\":\"fsinzgvfcjrwzoxx\",\"lxofpdvhpfxxypin\":\"wfzitonpeqfpjk\"},\"identity\":{\"principalId\":\"ayhuy\",\"tenantId\":\"kpode\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"qi\":{\"principalId\":\"nuvamiheogna\",\"clientId\":\"zxtheotusivyevcc\"},\"ljofxqeofjaeqjh\":{\"principalId\":\"hungbwjzrnf\",\"clientId\":\"xgispemvtzfkufu\"},\"smjqulngsntnbyb\":{\"principalId\":\"b\",\"clientId\":\"v\"}}}}")
            .toObject(InstancePatchModel.class);
        Assertions.assertEquals("fdfdosygexpa", model.tags().get("jakhmsbzjh"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InstancePatchModel model = new InstancePatchModel()
            .withTags(mapOf("jakhmsbzjh", "fdfdosygexpa", "hqtrgqjbpf", "rzevdphlxaol", "tfell", "fsinzgvfcjrwzoxx",
                "lxofpdvhpfxxypin", "wfzitonpeqfpjk"))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                .withUserAssignedIdentities(mapOf("qi", new UserAssignedIdentity(), "ljofxqeofjaeqjh",
                    new UserAssignedIdentity(), "smjqulngsntnbyb", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(InstancePatchModel.class);
        Assertions.assertEquals("fdfdosygexpa", model.tags().get("jakhmsbzjh"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
