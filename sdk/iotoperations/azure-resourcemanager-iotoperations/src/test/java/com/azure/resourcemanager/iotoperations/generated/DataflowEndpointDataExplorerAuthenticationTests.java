// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.DataExplorerAuthMethod;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationSystemAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationUserAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointDataExplorerAuthentication;
import org.junit.jupiter.api.Assertions;

public final class DataflowEndpointDataExplorerAuthenticationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowEndpointDataExplorerAuthentication model = BinaryData.fromString(
            "{\"method\":\"SystemAssignedManagedIdentity\",\"systemAssignedManagedIdentitySettings\":{\"audience\":\"kqb\"},\"userAssignedManagedIdentitySettings\":{\"clientId\":\"ubpaxhe\",\"scope\":\"i\",\"tenantId\":\"ivpdtiir\"}}")
            .toObject(DataflowEndpointDataExplorerAuthentication.class);
        Assertions.assertEquals(DataExplorerAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY, model.method());
        Assertions.assertEquals("kqb", model.systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("ubpaxhe", model.userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("i", model.userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("ivpdtiir", model.userAssignedManagedIdentitySettings().tenantId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowEndpointDataExplorerAuthentication model = new DataflowEndpointDataExplorerAuthentication()
            .withMethod(DataExplorerAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
            .withSystemAssignedManagedIdentitySettings(
                new DataflowEndpointAuthenticationSystemAssignedManagedIdentity().withAudience("kqb"))
            .withUserAssignedManagedIdentitySettings(
                new DataflowEndpointAuthenticationUserAssignedManagedIdentity().withClientId("ubpaxhe")
                    .withScope("i")
                    .withTenantId("ivpdtiir"));
        model = BinaryData.fromObject(model).toObject(DataflowEndpointDataExplorerAuthentication.class);
        Assertions.assertEquals(DataExplorerAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY, model.method());
        Assertions.assertEquals("kqb", model.systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("ubpaxhe", model.userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("i", model.userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("ivpdtiir", model.userAssignedManagedIdentitySettings().tenantId());
    }
}
