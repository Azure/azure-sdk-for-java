// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.BrokerSubscriberQueueCustomPolicySettings;
import com.azure.resourcemanager.iotoperations.models.BrokerSubscriberQueueDynamic;
import com.azure.resourcemanager.iotoperations.models.OperationalMode;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BrokerSubscriberQueueCustomPolicySettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BrokerSubscriberQueueCustomPolicySettings model = BinaryData.fromString(
            "{\"subscriberClientIds\":[\"ea\",\"eipheoflokeyy\"],\"dynamic\":{\"mode\":\"Enabled\"},\"topics\":[\"dlwtgrhpdj\",\"jumasx\",\"zj\",\"qyeg\"]}")
            .toObject(BrokerSubscriberQueueCustomPolicySettings.class);
        Assertions.assertEquals("ea", model.subscriberClientIds().get(0));
        Assertions.assertEquals(OperationalMode.ENABLED, model.dynamic().mode());
        Assertions.assertEquals("dlwtgrhpdj", model.topics().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BrokerSubscriberQueueCustomPolicySettings model = new BrokerSubscriberQueueCustomPolicySettings()
            .withSubscriberClientIds(Arrays.asList("ea", "eipheoflokeyy"))
            .withDynamic(new BrokerSubscriberQueueDynamic().withMode(OperationalMode.ENABLED))
            .withTopics(Arrays.asList("dlwtgrhpdj", "jumasx", "zj", "qyeg"));
        model = BinaryData.fromObject(model).toObject(BrokerSubscriberQueueCustomPolicySettings.class);
        Assertions.assertEquals("ea", model.subscriberClientIds().get(0));
        Assertions.assertEquals(OperationalMode.ENABLED, model.dynamic().mode());
        Assertions.assertEquals("dlwtgrhpdj", model.topics().get(0));
    }
}
