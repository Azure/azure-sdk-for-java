// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.BatchingConfiguration;
import com.azure.resourcemanager.iotoperations.models.DataExplorerAuthMethod;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationSystemAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationUserAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointDataExplorer;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointDataExplorerAuthentication;
import org.junit.jupiter.api.Assertions;

public final class DataflowEndpointDataExplorerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowEndpointDataExplorer model = BinaryData.fromString(
            "{\"authentication\":{\"method\":\"SystemAssignedManagedIdentity\",\"systemAssignedManagedIdentitySettings\":{\"audience\":\"udfnbyxba\"},\"userAssignedManagedIdentitySettings\":{\"clientId\":\"bjyvay\",\"scope\":\"imrzrtuzqog\",\"tenantId\":\"exn\"}},\"database\":\"vfdnwnwmewzsyyce\",\"host\":\"zsoibjudpfrxtr\",\"batching\":{\"latencySeconds\":729293630,\"maxMessages\":1056443128}}")
            .toObject(DataflowEndpointDataExplorer.class);
        Assertions.assertEquals(DataExplorerAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY,
            model.authentication().method());
        Assertions.assertEquals("udfnbyxba", model.authentication().systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("bjyvay", model.authentication().userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("imrzrtuzqog", model.authentication().userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("exn", model.authentication().userAssignedManagedIdentitySettings().tenantId());
        Assertions.assertEquals("vfdnwnwmewzsyyce", model.database());
        Assertions.assertEquals("zsoibjudpfrxtr", model.host());
        Assertions.assertEquals(729293630, model.batching().latencySeconds());
        Assertions.assertEquals(1056443128, model.batching().maxMessages());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowEndpointDataExplorer model = new DataflowEndpointDataExplorer()
            .withAuthentication(new DataflowEndpointDataExplorerAuthentication()
                .withMethod(DataExplorerAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                .withSystemAssignedManagedIdentitySettings(
                    new DataflowEndpointAuthenticationSystemAssignedManagedIdentity().withAudience("udfnbyxba"))
                .withUserAssignedManagedIdentitySettings(
                    new DataflowEndpointAuthenticationUserAssignedManagedIdentity().withClientId("bjyvay")
                        .withScope("imrzrtuzqog")
                        .withTenantId("exn")))
            .withDatabase("vfdnwnwmewzsyyce")
            .withHost("zsoibjudpfrxtr")
            .withBatching(new BatchingConfiguration().withLatencySeconds(729293630).withMaxMessages(1056443128));
        model = BinaryData.fromObject(model).toObject(DataflowEndpointDataExplorer.class);
        Assertions.assertEquals(DataExplorerAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY,
            model.authentication().method());
        Assertions.assertEquals("udfnbyxba", model.authentication().systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("bjyvay", model.authentication().userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("imrzrtuzqog", model.authentication().userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("exn", model.authentication().userAssignedManagedIdentitySettings().tenantId());
        Assertions.assertEquals("vfdnwnwmewzsyyce", model.database());
        Assertions.assertEquals("zsoibjudpfrxtr", model.host());
        Assertions.assertEquals(729293630, model.batching().latencySeconds());
        Assertions.assertEquals(1056443128, model.batching().maxMessages());
    }
}
