// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.resourcemanager.iotoperations.models.BatchingConfiguration;
import com.azure.resourcemanager.iotoperations.models.BrokerProtocolType;
import com.azure.resourcemanager.iotoperations.models.CloudEventAttributeType;
import com.azure.resourcemanager.iotoperations.models.DataExplorerAuthMethod;
import com.azure.resourcemanager.iotoperations.models.DataLakeStorageAuthMethod;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationAccessToken;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationSasl;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationSaslType;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationServiceAccountToken;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationSystemAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationUserAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationX509;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointDataExplorer;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointDataExplorerAuthentication;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointDataLakeStorage;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointDataLakeStorageAuthentication;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointFabricOneLake;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointFabricOneLakeAuthentication;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointFabricOneLakeNames;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointFabricPathType;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointKafka;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointKafkaAcks;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointKafkaAuthentication;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointKafkaBatching;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointKafkaCompression;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointKafkaPartitionStrategy;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointLocalStorage;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointMqtt;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointMqttAuthentication;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointProperties;
import com.azure.resourcemanager.iotoperations.models.EndpointType;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocation;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocationType;
import com.azure.resourcemanager.iotoperations.models.FabricOneLakeAuthMethod;
import com.azure.resourcemanager.iotoperations.models.KafkaAuthMethod;
import com.azure.resourcemanager.iotoperations.models.MqttAuthMethod;
import com.azure.resourcemanager.iotoperations.models.MqttRetainType;
import com.azure.resourcemanager.iotoperations.models.OperationalMode;
import com.azure.resourcemanager.iotoperations.models.TlsProperties;

/**
 * Samples for DataflowEndpoint CreateOrUpdate.
 */
public final class DataflowEndpointCreateOrUpdateSamples {
    /*
     * x-ms-original-file: 2024-09-15-preview/DataflowEndpoint_CreateOrUpdate_EventGrid.json
     */
    /**
     * Sample code: DataflowEndpoint_CreateOrUpdate_EventGrid.
     * 
     * @param manager Entry point to IoTOperationsManager.
     */
    public static void
        dataflowEndpointCreateOrUpdateEventGrid(com.azure.resourcemanager.iotoperations.IoTOperationsManager manager) {
        manager.dataflowEndpoints()
            .define("event-grid-endpoint")
            .withExistingInstance("rgiotoperations", "resource-name123")
            .withExtendedLocation(
                new ExtendedLocation().withName("qmbrfwcpwwhggszhrdjv").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .withProperties(new DataflowEndpointProperties().withEndpointType(EndpointType.MQTT)
                .withMqttSettings(new DataflowEndpointMqtt()
                    .withAuthentication(new DataflowEndpointMqttAuthentication()
                        .withMethod(MqttAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                        .withSystemAssignedManagedIdentitySettings(
                            new DataflowEndpointAuthenticationSystemAssignedManagedIdentity()))
                    .withHost("example.westeurope-1.ts.eventgrid.azure.net:8883")
                    .withTls(new TlsProperties().withMode(OperationalMode.ENABLED))))
            .create();
    }

    /*
     * x-ms-original-file: 2024-09-15-preview/DataflowEndpoint_CreateOrUpdate_ADLSv2.json
     */
    /**
     * Sample code: DataflowEndpoint_CreateOrUpdate_ADLSv2.
     * 
     * @param manager Entry point to IoTOperationsManager.
     */
    public static void
        dataflowEndpointCreateOrUpdateADLSv2(com.azure.resourcemanager.iotoperations.IoTOperationsManager manager) {
        manager.dataflowEndpoints()
            .define("adlsv2-endpoint")
            .withExistingInstance("rgiotoperations", "resource-name123")
            .withExtendedLocation(
                new ExtendedLocation().withName("qmbrfwcpwwhggszhrdjv").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .withProperties(new DataflowEndpointProperties().withEndpointType(EndpointType.DATA_LAKE_STORAGE)
                .withDataLakeStorageSettings(
                    new DataflowEndpointDataLakeStorage()
                        .withAuthentication(
                            new DataflowEndpointDataLakeStorageAuthentication()
                                .withMethod(DataLakeStorageAuthMethod.ACCESS_TOKEN)
                                .withAccessTokenSettings(new DataflowEndpointAuthenticationAccessToken()
                                    .withSecretRef("fakeTokenPlaceholder")))
                        .withHost("example.blob.core.windows.net")))
            .create();
    }

    /*
     * x-ms-original-file: 2024-09-15-preview/DataflowEndpoint_CreateOrUpdate_EventHub.json
     */
    /**
     * Sample code: DataflowEndpoint_CreateOrUpdate_EventHub.
     * 
     * @param manager Entry point to IoTOperationsManager.
     */
    public static void
        dataflowEndpointCreateOrUpdateEventHub(com.azure.resourcemanager.iotoperations.IoTOperationsManager manager) {
        manager.dataflowEndpoints()
            .define("event-hub-endpoint")
            .withExistingInstance("rgiotoperations", "resource-name123")
            .withExtendedLocation(
                new ExtendedLocation().withName("qmbrfwcpwwhggszhrdjv").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .withProperties(new DataflowEndpointProperties().withEndpointType(EndpointType.KAFKA)
                .withKafkaSettings(new DataflowEndpointKafka()
                    .withAuthentication(new DataflowEndpointKafkaAuthentication()
                        .withMethod(KafkaAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                        .withSystemAssignedManagedIdentitySettings(
                            new DataflowEndpointAuthenticationSystemAssignedManagedIdentity()))
                    .withConsumerGroupId("aiodataflows")
                    .withHost("example.servicebus.windows.net:9093")
                    .withTls(new TlsProperties().withMode(OperationalMode.ENABLED))))
            .create();
    }

    /*
     * x-ms-original-file: 2024-09-15-preview/DataflowEndpoint_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: DataflowEndpoint_CreateOrUpdate.
     * 
     * @param manager Entry point to IoTOperationsManager.
     */
    public static void
        dataflowEndpointCreateOrUpdate(com.azure.resourcemanager.iotoperations.IoTOperationsManager manager) {
        manager.dataflowEndpoints()
            .define("resource-name123")
            .withExistingInstance("rgiotoperations", "resource-name123")
            .withExtendedLocation(
                new ExtendedLocation().withName("qmbrfwcpwwhggszhrdjv").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .withProperties(
                new DataflowEndpointProperties().withEndpointType(EndpointType.DATA_EXPLORER)
                    .withDataExplorerSettings(
                        new DataflowEndpointDataExplorer()
                            .withAuthentication(
                                new DataflowEndpointDataExplorerAuthentication()
                                    .withMethod(DataExplorerAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                                    .withSystemAssignedManagedIdentitySettings(
                                        new DataflowEndpointAuthenticationSystemAssignedManagedIdentity()
                                            .withAudience("psxomrfbhoflycm"))
                                    .withUserAssignedManagedIdentitySettings(
                                        new DataflowEndpointAuthenticationUserAssignedManagedIdentity()
                                            .withClientId("fb90f267-8872-431a-a76a-a1cec5d3c4d2")
                                            .withScope("zop")
                                            .withTenantId("ed060aa2-71ff-4d3f-99c4-a9138356fdec")))
                            .withDatabase("yqcdpjsifm")
                            .withHost("<cluster>.<region>.kusto.windows.net")
                            .withBatching(new BatchingConfiguration().withLatencySeconds(9312).withMaxMessages(9028)))
                    .withDataLakeStorageSettings(
                        new DataflowEndpointDataLakeStorage()
                            .withAuthentication(new DataflowEndpointDataLakeStorageAuthentication()
                                .withMethod(DataLakeStorageAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                                .withAccessTokenSettings(new DataflowEndpointAuthenticationAccessToken()
                                    .withSecretRef("fakeTokenPlaceholder"))
                                .withSystemAssignedManagedIdentitySettings(
                                    new DataflowEndpointAuthenticationSystemAssignedManagedIdentity()
                                        .withAudience("psxomrfbhoflycm"))
                                .withUserAssignedManagedIdentitySettings(
                                    new DataflowEndpointAuthenticationUserAssignedManagedIdentity()
                                        .withClientId("fb90f267-8872-431a-a76a-a1cec5d3c4d2")
                                        .withScope("zop")
                                        .withTenantId("ed060aa2-71ff-4d3f-99c4-a9138356fdec")))
                            .withHost("<account>.blob.core.windows.net")
                            .withBatching(new BatchingConfiguration().withLatencySeconds(9312).withMaxMessages(9028)))
                    .withFabricOneLakeSettings(new DataflowEndpointFabricOneLake()
                        .withAuthentication(new DataflowEndpointFabricOneLakeAuthentication()
                            .withMethod(FabricOneLakeAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                            .withSystemAssignedManagedIdentitySettings(
                                new DataflowEndpointAuthenticationSystemAssignedManagedIdentity()
                                    .withAudience("psxomrfbhoflycm"))
                            .withUserAssignedManagedIdentitySettings(
                                new DataflowEndpointAuthenticationUserAssignedManagedIdentity()
                                    .withClientId("fb90f267-8872-431a-a76a-a1cec5d3c4d2")
                                    .withScope("zop")
                                    .withTenantId("ed060aa2-71ff-4d3f-99c4-a9138356fdec")))
                        .withNames(new DataflowEndpointFabricOneLakeNames().withLakehouseName("wpeathi")
                            .withWorkspaceName("nwgmitkbljztgms"))
                        .withOneLakePathType(DataflowEndpointFabricPathType.FILES)
                        .withHost("https://<host>.fabric.microsoft.com")
                        .withBatching(new BatchingConfiguration().withLatencySeconds(9312).withMaxMessages(9028)))
                    .withKafkaSettings(new DataflowEndpointKafka()
                        .withAuthentication(new DataflowEndpointKafkaAuthentication()
                            .withMethod(KafkaAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                            .withSystemAssignedManagedIdentitySettings(
                                new DataflowEndpointAuthenticationSystemAssignedManagedIdentity()
                                    .withAudience("psxomrfbhoflycm"))
                            .withUserAssignedManagedIdentitySettings(
                                new DataflowEndpointAuthenticationUserAssignedManagedIdentity()
                                    .withClientId("fb90f267-8872-431a-a76a-a1cec5d3c4d2")
                                    .withScope("zop")
                                    .withTenantId("ed060aa2-71ff-4d3f-99c4-a9138356fdec"))
                            .withSaslSettings(new DataflowEndpointAuthenticationSasl()
                                .withSaslType(DataflowEndpointAuthenticationSaslType.PLAIN)
                                .withSecretRef("fakeTokenPlaceholder"))
                            .withX509CertificateSettings(
                                new DataflowEndpointAuthenticationX509().withSecretRef("fakeTokenPlaceholder")))
                        .withConsumerGroupId("ukkzcjiyenhxokat")
                        .withHost("pwcqfiqclcgneolpewnyavoulbip")
                        .withBatching(new DataflowEndpointKafkaBatching().withMode(OperationalMode.ENABLED)
                            .withLatencyMs(3679)
                            .withMaxBytes(8887)
                            .withMaxMessages(2174))
                        .withCopyMqttProperties(OperationalMode.ENABLED)
                        .withCompression(DataflowEndpointKafkaCompression.NONE)
                        .withKafkaAcks(DataflowEndpointKafkaAcks.ZERO)
                        .withPartitionStrategy(DataflowEndpointKafkaPartitionStrategy.DEFAULT)
                        .withTls(new TlsProperties().withMode(OperationalMode.ENABLED)
                            .withTrustedCaCertificateConfigMapRef("tectjjvukvelsreihwadh"))
                        .withCloudEventAttributes(CloudEventAttributeType.fromString("PassThrough")))
                    .withLocalStorageSettings(
                        new DataflowEndpointLocalStorage().withPersistentVolumeClaimRef("jjwqwvd"))
                    .withMqttSettings(new DataflowEndpointMqtt()
                        .withAuthentication(new DataflowEndpointMqttAuthentication()
                            .withMethod(MqttAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                            .withSystemAssignedManagedIdentitySettings(
                                new DataflowEndpointAuthenticationSystemAssignedManagedIdentity()
                                    .withAudience("psxomrfbhoflycm"))
                            .withUserAssignedManagedIdentitySettings(
                                new DataflowEndpointAuthenticationUserAssignedManagedIdentity()
                                    .withClientId("fb90f267-8872-431a-a76a-a1cec5d3c4d2")
                                    .withScope("zop")
                                    .withTenantId("ed060aa2-71ff-4d3f-99c4-a9138356fdec"))
                            .withServiceAccountTokenSettings(new DataflowEndpointAuthenticationServiceAccountToken()
                                .withAudience("ejbklrbxgjaqleoycgpje"))
                            .withX509CertificateSettings(
                                new DataflowEndpointAuthenticationX509().withSecretRef("fakeTokenPlaceholder")))
                        .withClientIdPrefix("kkljsdxdirfhwxtkavldekeqhv")
                        .withHost("nyhnxqnbspstctl")
                        .withProtocol(BrokerProtocolType.MQTT)
                        .withKeepAliveSeconds(0)
                        .withRetain(MqttRetainType.KEEP)
                        .withMaxInflightMessages(0)
                        .withQos(1)
                        .withSessionExpirySeconds(0)
                        .withTls(new TlsProperties().withMode(OperationalMode.ENABLED)
                            .withTrustedCaCertificateConfigMapRef("tectjjvukvelsreihwadh"))
                        .withCloudEventAttributes(CloudEventAttributeType.fromString("PassThrough"))))
            .create();
    }

    /*
     * x-ms-original-file: 2024-09-15-preview/DataflowEndpoint_CreateOrUpdate_ADX.json
     */
    /**
     * Sample code: DataflowEndpoint_CreateOrUpdate_ADX.
     * 
     * @param manager Entry point to IoTOperationsManager.
     */
    public static void
        dataflowEndpointCreateOrUpdateADX(com.azure.resourcemanager.iotoperations.IoTOperationsManager manager) {
        manager.dataflowEndpoints()
            .define("adx-endpoint")
            .withExistingInstance("rgiotoperations", "resource-name123")
            .withExtendedLocation(
                new ExtendedLocation().withName("qmbrfwcpwwhggszhrdjv").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .withProperties(new DataflowEndpointProperties().withEndpointType(EndpointType.DATA_EXPLORER)
                .withDataExplorerSettings(new DataflowEndpointDataExplorer()
                    .withAuthentication(new DataflowEndpointDataExplorerAuthentication()
                        .withMethod(DataExplorerAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                        .withSystemAssignedManagedIdentitySettings(
                            new DataflowEndpointAuthenticationSystemAssignedManagedIdentity()))
                    .withDatabase("example-database")
                    .withHost("example.westeurope.kusto.windows.net")
                    .withBatching(new BatchingConfiguration().withLatencySeconds(9312).withMaxMessages(9028))))
            .create();
    }

    /*
     * x-ms-original-file: 2024-09-15-preview/DataflowEndpoint_CreateOrUpdate_Fabric.json
     */
    /**
     * Sample code: DataflowEndpoint_CreateOrUpdate_Fabric.
     * 
     * @param manager Entry point to IoTOperationsManager.
     */
    public static void
        dataflowEndpointCreateOrUpdateFabric(com.azure.resourcemanager.iotoperations.IoTOperationsManager manager) {
        manager.dataflowEndpoints()
            .define("fabric-endpoint")
            .withExistingInstance("rgiotoperations", "resource-name123")
            .withExtendedLocation(
                new ExtendedLocation().withName("qmbrfwcpwwhggszhrdjv").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .withProperties(new DataflowEndpointProperties().withEndpointType(EndpointType.FABRIC_ONE_LAKE)
                .withFabricOneLakeSettings(new DataflowEndpointFabricOneLake()
                    .withAuthentication(new DataflowEndpointFabricOneLakeAuthentication()
                        .withMethod(FabricOneLakeAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                        .withSystemAssignedManagedIdentitySettings(
                            new DataflowEndpointAuthenticationSystemAssignedManagedIdentity()))
                    .withNames(new DataflowEndpointFabricOneLakeNames().withLakehouseName("example-lakehouse")
                        .withWorkspaceName("example-workspace"))
                    .withOneLakePathType(DataflowEndpointFabricPathType.TABLES)
                    .withHost("onelake.dfs.fabric.microsoft.com")))
            .create();
    }

    /*
     * x-ms-original-file: 2024-09-15-preview/DataflowEndpoint_CreateOrUpdate_LocalStorage.json
     */
    /**
     * Sample code: DataflowEndpoint_CreateOrUpdate_LocalStorage.
     * 
     * @param manager Entry point to IoTOperationsManager.
     */
    public static void dataflowEndpointCreateOrUpdateLocalStorage(
        com.azure.resourcemanager.iotoperations.IoTOperationsManager manager) {
        manager.dataflowEndpoints()
            .define("local-storage-endpoint")
            .withExistingInstance("rgiotoperations", "resource-name123")
            .withExtendedLocation(
                new ExtendedLocation().withName("qmbrfwcpwwhggszhrdjv").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .withProperties(new DataflowEndpointProperties().withEndpointType(EndpointType.LOCAL_STORAGE)
                .withLocalStorageSettings(
                    new DataflowEndpointLocalStorage().withPersistentVolumeClaimRef("example-pvc")))
            .create();
    }

    /*
     * x-ms-original-file: 2024-09-15-preview/DataflowEndpoint_CreateOrUpdate_AIO.json
     */
    /**
     * Sample code: DataflowEndpoint_CreateOrUpdate_AIO.
     * 
     * @param manager Entry point to IoTOperationsManager.
     */
    public static void
        dataflowEndpointCreateOrUpdateAIO(com.azure.resourcemanager.iotoperations.IoTOperationsManager manager) {
        manager.dataflowEndpoints()
            .define("aio-builtin-broker-endpoint")
            .withExistingInstance("rgiotoperations", "resource-name123")
            .withExtendedLocation(
                new ExtendedLocation().withName("qmbrfwcpwwhggszhrdjv").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .withProperties(
                new DataflowEndpointProperties().withEndpointType(EndpointType.MQTT)
                    .withMqttSettings(new DataflowEndpointMqtt()
                        .withAuthentication(
                            new DataflowEndpointMqttAuthentication().withMethod(MqttAuthMethod.fromString("Kubernetes"))
                                .withServiceAccountTokenSettings(new DataflowEndpointAuthenticationServiceAccountToken()
                                    .withAudience("aio-internal")))
                        .withHost("aio-broker:18883")
                        .withTls(new TlsProperties().withMode(OperationalMode.ENABLED)
                            .withTrustedCaCertificateConfigMapRef("aio-ca-trust-bundle-test-only"))))
            .create();
    }

    /*
     * x-ms-original-file: 2024-09-15-preview/DataflowEndpoint_CreateOrUpdate_MQTT.json
     */
    /**
     * Sample code: DataflowEndpoint_CreateOrUpdate_MQTT.
     * 
     * @param manager Entry point to IoTOperationsManager.
     */
    public static void
        dataflowEndpointCreateOrUpdateMQTT(com.azure.resourcemanager.iotoperations.IoTOperationsManager manager) {
        manager.dataflowEndpoints()
            .define("generic-mqtt-broker-endpoint")
            .withExistingInstance("rgiotoperations", "resource-name123")
            .withExtendedLocation(
                new ExtendedLocation().withName("qmbrfwcpwwhggszhrdjv").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .withProperties(new DataflowEndpointProperties().withEndpointType(EndpointType.MQTT)
                .withMqttSettings(new DataflowEndpointMqtt()
                    .withAuthentication(
                        new DataflowEndpointMqttAuthentication().withMethod(MqttAuthMethod.X509CERTIFICATE)
                            .withX509CertificateSettings(
                                new DataflowEndpointAuthenticationX509().withSecretRef("fakeTokenPlaceholder")))
                    .withClientIdPrefix("factory-gateway")
                    .withHost("example.broker.local:1883")
                    .withProtocol(BrokerProtocolType.WEB_SOCKETS)
                    .withKeepAliveSeconds(60)
                    .withRetain(MqttRetainType.KEEP)
                    .withMaxInflightMessages(100)
                    .withQos(1)
                    .withSessionExpirySeconds(3600)
                    .withTls(new TlsProperties().withMode(OperationalMode.DISABLED))))
            .create();
    }

    /*
     * x-ms-original-file: 2024-09-15-preview/DataflowEndpoint_CreateOrUpdate_Kafka.json
     */
    /**
     * Sample code: DataflowEndpoint_CreateOrUpdate_Kafka.
     * 
     * @param manager Entry point to IoTOperationsManager.
     */
    public static void
        dataflowEndpointCreateOrUpdateKafka(com.azure.resourcemanager.iotoperations.IoTOperationsManager manager) {
        manager.dataflowEndpoints()
            .define("generic-kafka-endpoint")
            .withExistingInstance("rgiotoperations", "resource-name123")
            .withExtendedLocation(
                new ExtendedLocation().withName("qmbrfwcpwwhggszhrdjv").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .withProperties(new DataflowEndpointProperties().withEndpointType(EndpointType.KAFKA)
                .withKafkaSettings(new DataflowEndpointKafka()
                    .withAuthentication(new DataflowEndpointKafkaAuthentication().withMethod(KafkaAuthMethod.SASL)
                        .withSaslSettings(new DataflowEndpointAuthenticationSasl()
                            .withSaslType(DataflowEndpointAuthenticationSaslType.PLAIN)
                            .withSecretRef("fakeTokenPlaceholder")))
                    .withConsumerGroupId("dataflows")
                    .withHost("example.kafka.local:9093")
                    .withBatching(new DataflowEndpointKafkaBatching().withMode(OperationalMode.ENABLED)
                        .withLatencyMs(5)
                        .withMaxBytes(1000000)
                        .withMaxMessages(100000))
                    .withCopyMqttProperties(OperationalMode.ENABLED)
                    .withCompression(DataflowEndpointKafkaCompression.GZIP)
                    .withKafkaAcks(DataflowEndpointKafkaAcks.ALL)
                    .withPartitionStrategy(DataflowEndpointKafkaPartitionStrategy.DEFAULT)
                    .withTls(new TlsProperties().withMode(OperationalMode.ENABLED)
                        .withTrustedCaCertificateConfigMapRef("ca-certificates"))
                    .withCloudEventAttributes(CloudEventAttributeType.PROPAGATE)))
            .create();
    }
}
