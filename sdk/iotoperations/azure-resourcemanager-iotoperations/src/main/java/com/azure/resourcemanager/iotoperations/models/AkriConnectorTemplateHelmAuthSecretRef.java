// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * AkriConnectorTemplateHelmAuthSecretRef properties.
 */
@Fluent
public final class AkriConnectorTemplateHelmAuthSecretRef
    implements JsonSerializable<AkriConnectorTemplateHelmAuthSecretRef> {
    /*
     * The name of the secret.
     */
    private String secretRef;

    /*
     * The key of the password in the secret.
     */
    private String passwordKey;

    /*
     * The key of the username in the secret.
     */
    private String usernameKey;

    /**
     * Creates an instance of AkriConnectorTemplateHelmAuthSecretRef class.
     */
    public AkriConnectorTemplateHelmAuthSecretRef() {
    }

    /**
     * Get the secretRef property: The name of the secret.
     * 
     * @return the secretRef value.
     */
    public String secretRef() {
        return this.secretRef;
    }

    /**
     * Set the secretRef property: The name of the secret.
     * 
     * @param secretRef the secretRef value to set.
     * @return the AkriConnectorTemplateHelmAuthSecretRef object itself.
     */
    public AkriConnectorTemplateHelmAuthSecretRef withSecretRef(String secretRef) {
        this.secretRef = secretRef;
        return this;
    }

    /**
     * Get the passwordKey property: The key of the password in the secret.
     * 
     * @return the passwordKey value.
     */
    public String passwordKey() {
        return this.passwordKey;
    }

    /**
     * Set the passwordKey property: The key of the password in the secret.
     * 
     * @param passwordKey the passwordKey value to set.
     * @return the AkriConnectorTemplateHelmAuthSecretRef object itself.
     */
    public AkriConnectorTemplateHelmAuthSecretRef withPasswordKey(String passwordKey) {
        this.passwordKey = passwordKey;
        return this;
    }

    /**
     * Get the usernameKey property: The key of the username in the secret.
     * 
     * @return the usernameKey value.
     */
    public String usernameKey() {
        return this.usernameKey;
    }

    /**
     * Set the usernameKey property: The key of the username in the secret.
     * 
     * @param usernameKey the usernameKey value to set.
     * @return the AkriConnectorTemplateHelmAuthSecretRef object itself.
     */
    public AkriConnectorTemplateHelmAuthSecretRef withUsernameKey(String usernameKey) {
        this.usernameKey = usernameKey;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("secretRef", this.secretRef);
        jsonWriter.writeStringField("passwordKey", this.passwordKey);
        jsonWriter.writeStringField("usernameKey", this.usernameKey);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AkriConnectorTemplateHelmAuthSecretRef from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AkriConnectorTemplateHelmAuthSecretRef if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AkriConnectorTemplateHelmAuthSecretRef.
     */
    public static AkriConnectorTemplateHelmAuthSecretRef fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AkriConnectorTemplateHelmAuthSecretRef deserializedAkriConnectorTemplateHelmAuthSecretRef
                = new AkriConnectorTemplateHelmAuthSecretRef();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("secretRef".equals(fieldName)) {
                    deserializedAkriConnectorTemplateHelmAuthSecretRef.secretRef = reader.getString();
                } else if ("passwordKey".equals(fieldName)) {
                    deserializedAkriConnectorTemplateHelmAuthSecretRef.passwordKey = reader.getString();
                } else if ("usernameKey".equals(fieldName)) {
                    deserializedAkriConnectorTemplateHelmAuthSecretRef.usernameKey = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAkriConnectorTemplateHelmAuthSecretRef;
        });
    }
}
