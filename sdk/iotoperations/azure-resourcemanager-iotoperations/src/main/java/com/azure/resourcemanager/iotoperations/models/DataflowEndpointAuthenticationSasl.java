// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * DataflowEndpoint Authentication Sasl properties.
 */
@Fluent
public final class DataflowEndpointAuthenticationSasl implements JsonSerializable<DataflowEndpointAuthenticationSasl> {
    /*
     * Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.
     */
    private DataflowEndpointAuthenticationSaslType saslType;

    /*
     * Token secret name.
     */
    private String secretRef;

    /**
     * Creates an instance of DataflowEndpointAuthenticationSasl class.
     */
    public DataflowEndpointAuthenticationSasl() {
    }

    /**
     * Get the saslType property: Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.
     * 
     * @return the saslType value.
     */
    public DataflowEndpointAuthenticationSaslType saslType() {
        return this.saslType;
    }

    /**
     * Set the saslType property: Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.
     * 
     * @param saslType the saslType value to set.
     * @return the DataflowEndpointAuthenticationSasl object itself.
     */
    public DataflowEndpointAuthenticationSasl withSaslType(DataflowEndpointAuthenticationSaslType saslType) {
        this.saslType = saslType;
        return this;
    }

    /**
     * Get the secretRef property: Token secret name.
     * 
     * @return the secretRef value.
     */
    public String secretRef() {
        return this.secretRef;
    }

    /**
     * Set the secretRef property: Token secret name.
     * 
     * @param secretRef the secretRef value to set.
     * @return the DataflowEndpointAuthenticationSasl object itself.
     */
    public DataflowEndpointAuthenticationSasl withSecretRef(String secretRef) {
        this.secretRef = secretRef;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (saslType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property saslType in model DataflowEndpointAuthenticationSasl"));
        }
        if (secretRef() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property secretRef in model DataflowEndpointAuthenticationSasl"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DataflowEndpointAuthenticationSasl.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("saslType", this.saslType == null ? null : this.saslType.toString());
        jsonWriter.writeStringField("secretRef", this.secretRef);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DataflowEndpointAuthenticationSasl from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DataflowEndpointAuthenticationSasl if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DataflowEndpointAuthenticationSasl.
     */
    public static DataflowEndpointAuthenticationSasl fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DataflowEndpointAuthenticationSasl deserializedDataflowEndpointAuthenticationSasl
                = new DataflowEndpointAuthenticationSasl();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("saslType".equals(fieldName)) {
                    deserializedDataflowEndpointAuthenticationSasl.saslType
                        = DataflowEndpointAuthenticationSaslType.fromString(reader.getString());
                } else if ("secretRef".equals(fieldName)) {
                    deserializedDataflowEndpointAuthenticationSasl.secretRef = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDataflowEndpointAuthenticationSasl;
        });
    }
}
