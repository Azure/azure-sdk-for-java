// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * DataflowOpenTelemetryServiceAccountAuthentication properties.
 */
@Fluent
public final class DataflowOpenTelemetryServiceAccountAuthentication extends DataflowOpenTelemetryAuthentication {
    /*
     * The authentication method.
     */
    private DataflowOpenTelemetryAuthenticationMethod method
        = DataflowOpenTelemetryAuthenticationMethod.SERVICE_ACCOUNT_TOKEN;

    /*
     * Kubernetes service account token authentication.
     */
    private DataflowEndpointAuthenticationServiceAccountToken serviceAccountTokenSettings;

    /**
     * Creates an instance of DataflowOpenTelemetryServiceAccountAuthentication class.
     */
    public DataflowOpenTelemetryServiceAccountAuthentication() {
    }

    /**
     * Get the method property: The authentication method.
     * 
     * @return the method value.
     */
    @Override
    public DataflowOpenTelemetryAuthenticationMethod method() {
        return this.method;
    }

    /**
     * Get the serviceAccountTokenSettings property: Kubernetes service account token authentication.
     * 
     * @return the serviceAccountTokenSettings value.
     */
    public DataflowEndpointAuthenticationServiceAccountToken serviceAccountTokenSettings() {
        return this.serviceAccountTokenSettings;
    }

    /**
     * Set the serviceAccountTokenSettings property: Kubernetes service account token authentication.
     * 
     * @param serviceAccountTokenSettings the serviceAccountTokenSettings value to set.
     * @return the DataflowOpenTelemetryServiceAccountAuthentication object itself.
     */
    public DataflowOpenTelemetryServiceAccountAuthentication
        withServiceAccountTokenSettings(DataflowEndpointAuthenticationServiceAccountToken serviceAccountTokenSettings) {
        this.serviceAccountTokenSettings = serviceAccountTokenSettings;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (serviceAccountTokenSettings() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property serviceAccountTokenSettings in model DataflowOpenTelemetryServiceAccountAuthentication"));
        } else {
            serviceAccountTokenSettings().validate();
        }
    }

    private static final ClientLogger LOGGER
        = new ClientLogger(DataflowOpenTelemetryServiceAccountAuthentication.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("serviceAccountTokenSettings", this.serviceAccountTokenSettings);
        jsonWriter.writeStringField("method", this.method == null ? null : this.method.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DataflowOpenTelemetryServiceAccountAuthentication from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DataflowOpenTelemetryServiceAccountAuthentication if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DataflowOpenTelemetryServiceAccountAuthentication.
     */
    public static DataflowOpenTelemetryServiceAccountAuthentication fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DataflowOpenTelemetryServiceAccountAuthentication deserializedDataflowOpenTelemetryServiceAccountAuthentication
                = new DataflowOpenTelemetryServiceAccountAuthentication();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("serviceAccountTokenSettings".equals(fieldName)) {
                    deserializedDataflowOpenTelemetryServiceAccountAuthentication.serviceAccountTokenSettings
                        = DataflowEndpointAuthenticationServiceAccountToken.fromJson(reader);
                } else if ("method".equals(fieldName)) {
                    deserializedDataflowOpenTelemetryServiceAccountAuthentication.method
                        = DataflowOpenTelemetryAuthenticationMethod.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDataflowOpenTelemetryServiceAccountAuthentication;
        });
    }
}
