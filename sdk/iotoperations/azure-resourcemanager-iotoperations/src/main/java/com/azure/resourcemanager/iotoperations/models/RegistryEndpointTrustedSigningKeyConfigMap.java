// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Settings for RegistryEndpoint trust provided through a configmap.
 */
@Fluent
public final class RegistryEndpointTrustedSigningKeyConfigMap extends RegistryEndpointTrustedSigningKey {
    /*
     * The trust type for the registry endpoint.
     */
    private RegistryEndpointTrustedSigningKeyType type = RegistryEndpointTrustedSigningKeyType.CONFIG_MAP;

    /*
     * The name of the configmap.
     */
    private String configMapRef;

    /**
     * Creates an instance of RegistryEndpointTrustedSigningKeyConfigMap class.
     */
    public RegistryEndpointTrustedSigningKeyConfigMap() {
    }

    /**
     * Get the type property: The trust type for the registry endpoint.
     * 
     * @return the type value.
     */
    @Override
    public RegistryEndpointTrustedSigningKeyType type() {
        return this.type;
    }

    /**
     * Get the configMapRef property: The name of the configmap.
     * 
     * @return the configMapRef value.
     */
    public String configMapRef() {
        return this.configMapRef;
    }

    /**
     * Set the configMapRef property: The name of the configmap.
     * 
     * @param configMapRef the configMapRef value to set.
     * @return the RegistryEndpointTrustedSigningKeyConfigMap object itself.
     */
    public RegistryEndpointTrustedSigningKeyConfigMap withConfigMapRef(String configMapRef) {
        this.configMapRef = configMapRef;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (configMapRef() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property configMapRef in model RegistryEndpointTrustedSigningKeyConfigMap"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RegistryEndpointTrustedSigningKeyConfigMap.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("configMapRef", this.configMapRef);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RegistryEndpointTrustedSigningKeyConfigMap from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RegistryEndpointTrustedSigningKeyConfigMap if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RegistryEndpointTrustedSigningKeyConfigMap.
     */
    public static RegistryEndpointTrustedSigningKeyConfigMap fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RegistryEndpointTrustedSigningKeyConfigMap deserializedRegistryEndpointTrustedSigningKeyConfigMap
                = new RegistryEndpointTrustedSigningKeyConfigMap();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("configMapRef".equals(fieldName)) {
                    deserializedRegistryEndpointTrustedSigningKeyConfigMap.configMapRef = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedRegistryEndpointTrustedSigningKeyConfigMap.type
                        = RegistryEndpointTrustedSigningKeyType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRegistryEndpointTrustedSigningKeyConfigMap;
        });
    }
}
