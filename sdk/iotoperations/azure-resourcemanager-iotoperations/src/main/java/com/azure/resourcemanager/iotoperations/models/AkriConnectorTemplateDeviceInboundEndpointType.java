// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * AkriConnectorTemplateDeviceInboundEndpointType properties.
 */
@Fluent
public final class AkriConnectorTemplateDeviceInboundEndpointType
    implements JsonSerializable<AkriConnectorTemplateDeviceInboundEndpointType> {
    /*
     * A description of the device inbound endpoint.
     */
    private String description;

    /*
     * The type of the device inbound endpoint.
     */
    private String endpointType;

    /*
     * The version of the device inbound endpoint.
     */
    private String version;

    /*
     * The configuration schema references for the device inbound endpoint.
     */
    private AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs configurationSchemaRefs;

    /**
     * Creates an instance of AkriConnectorTemplateDeviceInboundEndpointType class.
     */
    public AkriConnectorTemplateDeviceInboundEndpointType() {
    }

    /**
     * Get the description property: A description of the device inbound endpoint.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: A description of the device inbound endpoint.
     * 
     * @param description the description value to set.
     * @return the AkriConnectorTemplateDeviceInboundEndpointType object itself.
     */
    public AkriConnectorTemplateDeviceInboundEndpointType withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the endpointType property: The type of the device inbound endpoint.
     * 
     * @return the endpointType value.
     */
    public String endpointType() {
        return this.endpointType;
    }

    /**
     * Set the endpointType property: The type of the device inbound endpoint.
     * 
     * @param endpointType the endpointType value to set.
     * @return the AkriConnectorTemplateDeviceInboundEndpointType object itself.
     */
    public AkriConnectorTemplateDeviceInboundEndpointType withEndpointType(String endpointType) {
        this.endpointType = endpointType;
        return this;
    }

    /**
     * Get the version property: The version of the device inbound endpoint.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: The version of the device inbound endpoint.
     * 
     * @param version the version value to set.
     * @return the AkriConnectorTemplateDeviceInboundEndpointType object itself.
     */
    public AkriConnectorTemplateDeviceInboundEndpointType withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the configurationSchemaRefs property: The configuration schema references for the device inbound endpoint.
     * 
     * @return the configurationSchemaRefs value.
     */
    public AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs configurationSchemaRefs() {
        return this.configurationSchemaRefs;
    }

    /**
     * Set the configurationSchemaRefs property: The configuration schema references for the device inbound endpoint.
     * 
     * @param configurationSchemaRefs the configurationSchemaRefs value to set.
     * @return the AkriConnectorTemplateDeviceInboundEndpointType object itself.
     */
    public AkriConnectorTemplateDeviceInboundEndpointType withConfigurationSchemaRefs(
        AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs configurationSchemaRefs) {
        this.configurationSchemaRefs = configurationSchemaRefs;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (endpointType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property endpointType in model AkriConnectorTemplateDeviceInboundEndpointType"));
        }
        if (configurationSchemaRefs() != null) {
            configurationSchemaRefs().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AkriConnectorTemplateDeviceInboundEndpointType.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("endpointType", this.endpointType);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("version", this.version);
        jsonWriter.writeJsonField("configurationSchemaRefs", this.configurationSchemaRefs);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AkriConnectorTemplateDeviceInboundEndpointType from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AkriConnectorTemplateDeviceInboundEndpointType if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AkriConnectorTemplateDeviceInboundEndpointType.
     */
    public static AkriConnectorTemplateDeviceInboundEndpointType fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AkriConnectorTemplateDeviceInboundEndpointType deserializedAkriConnectorTemplateDeviceInboundEndpointType
                = new AkriConnectorTemplateDeviceInboundEndpointType();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("endpointType".equals(fieldName)) {
                    deserializedAkriConnectorTemplateDeviceInboundEndpointType.endpointType = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedAkriConnectorTemplateDeviceInboundEndpointType.description = reader.getString();
                } else if ("version".equals(fieldName)) {
                    deserializedAkriConnectorTemplateDeviceInboundEndpointType.version = reader.getString();
                } else if ("configurationSchemaRefs".equals(fieldName)) {
                    deserializedAkriConnectorTemplateDeviceInboundEndpointType.configurationSchemaRefs
                        = AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAkriConnectorTemplateDeviceInboundEndpointType;
        });
    }
}
