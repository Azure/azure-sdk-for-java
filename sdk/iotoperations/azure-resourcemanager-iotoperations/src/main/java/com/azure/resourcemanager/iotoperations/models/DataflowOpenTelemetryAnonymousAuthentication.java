// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * DataflowOpenTelemetryAnonymousAuthentication properties.
 */
@Fluent
public final class DataflowOpenTelemetryAnonymousAuthentication extends DataflowOpenTelemetryAuthentication {
    /*
     * The authentication method.
     */
    private DataflowOpenTelemetryAuthenticationMethod method = DataflowOpenTelemetryAuthenticationMethod.ANONYMOUS;

    /*
     * Settings for the anonymous connection
     */
    private DataflowEndpointAuthenticationAnonymous anonymousSettings;

    /**
     * Creates an instance of DataflowOpenTelemetryAnonymousAuthentication class.
     */
    public DataflowOpenTelemetryAnonymousAuthentication() {
    }

    /**
     * Get the method property: The authentication method.
     * 
     * @return the method value.
     */
    @Override
    public DataflowOpenTelemetryAuthenticationMethod method() {
        return this.method;
    }

    /**
     * Get the anonymousSettings property: Settings for the anonymous connection.
     * 
     * @return the anonymousSettings value.
     */
    public DataflowEndpointAuthenticationAnonymous anonymousSettings() {
        return this.anonymousSettings;
    }

    /**
     * Set the anonymousSettings property: Settings for the anonymous connection.
     * 
     * @param anonymousSettings the anonymousSettings value to set.
     * @return the DataflowOpenTelemetryAnonymousAuthentication object itself.
     */
    public DataflowOpenTelemetryAnonymousAuthentication
        withAnonymousSettings(DataflowEndpointAuthenticationAnonymous anonymousSettings) {
        this.anonymousSettings = anonymousSettings;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("anonymousSettings", this.anonymousSettings);
        jsonWriter.writeStringField("method", this.method == null ? null : this.method.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DataflowOpenTelemetryAnonymousAuthentication from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DataflowOpenTelemetryAnonymousAuthentication if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DataflowOpenTelemetryAnonymousAuthentication.
     */
    public static DataflowOpenTelemetryAnonymousAuthentication fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DataflowOpenTelemetryAnonymousAuthentication deserializedDataflowOpenTelemetryAnonymousAuthentication
                = new DataflowOpenTelemetryAnonymousAuthentication();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("anonymousSettings".equals(fieldName)) {
                    deserializedDataflowOpenTelemetryAnonymousAuthentication.anonymousSettings
                        = DataflowEndpointAuthenticationAnonymous.fromJson(reader);
                } else if ("method".equals(fieldName)) {
                    deserializedDataflowOpenTelemetryAnonymousAuthentication.method
                        = DataflowOpenTelemetryAuthenticationMethod.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDataflowOpenTelemetryAnonymousAuthentication;
        });
    }
}
