// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * DataflowEndpoint Kafka Authentication Method properties.
 */
public final class KafkaAuthMethod extends ExpandableStringEnum<KafkaAuthMethod> {
    /**
     * SystemAssignedManagedIdentity type.
     */
    @Generated
    public static final KafkaAuthMethod SYSTEM_ASSIGNED_MANAGED_IDENTITY = fromString("SystemAssignedManagedIdentity");

    /**
     * UserAssignedManagedIdentity type.
     */
    @Generated
    public static final KafkaAuthMethod USER_ASSIGNED_MANAGED_IDENTITY = fromString("UserAssignedManagedIdentity");

    /**
     * Sasl Option.
     */
    @Generated
    public static final KafkaAuthMethod SASL = fromString("Sasl");

    /**
     * x509Certificate Option.
     */
    @Generated
    public static final KafkaAuthMethod X509CERTIFICATE = fromString("X509Certificate");

    /**
     * Anonymous Option.
     */
    @Generated
    public static final KafkaAuthMethod ANONYMOUS = fromString("Anonymous");

    /**
     * Creates a new instance of KafkaAuthMethod value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public KafkaAuthMethod() {
    }

    /**
     * Creates or finds a KafkaAuthMethod from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding KafkaAuthMethod.
     */
    @Generated
    public static KafkaAuthMethod fromString(String name) {
        return fromString(name, KafkaAuthMethod.class);
    }

    /**
     * Gets known KafkaAuthMethod values.
     * 
     * @return known KafkaAuthMethod values.
     */
    @Generated
    public static Collection<KafkaAuthMethod> values() {
        return values(KafkaAuthMethod.class);
    }
}
