// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of BrokerAuthorizations.
 */
public interface BrokerAuthorizations {
    /**
     * Get a BrokerAuthorizationResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param brokerName Name of broker.
     * @param authorizationName Name of Instance broker authorization resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BrokerAuthorizationResource along with {@link Response}.
     */
    Response<BrokerAuthorizationResource> getWithResponse(String resourceGroupName, String instanceName,
        String brokerName, String authorizationName, Context context);

    /**
     * Get a BrokerAuthorizationResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param brokerName Name of broker.
     * @param authorizationName Name of Instance broker authorization resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BrokerAuthorizationResource.
     */
    BrokerAuthorizationResource get(String resourceGroupName, String instanceName, String brokerName,
        String authorizationName);

    /**
     * Delete a BrokerAuthorizationResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param brokerName Name of broker.
     * @param authorizationName Name of Instance broker authorization resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String instanceName, String brokerName, String authorizationName);

    /**
     * Delete a BrokerAuthorizationResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param brokerName Name of broker.
     * @param authorizationName Name of Instance broker authorization resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String instanceName, String brokerName, String authorizationName,
        Context context);

    /**
     * List BrokerAuthorizationResource resources by BrokerResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param brokerName Name of broker.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a BrokerAuthorizationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<BrokerAuthorizationResource> listByResourceGroup(String resourceGroupName, String instanceName,
        String brokerName);

    /**
     * List BrokerAuthorizationResource resources by BrokerResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param brokerName Name of broker.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a BrokerAuthorizationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<BrokerAuthorizationResource> listByResourceGroup(String resourceGroupName, String instanceName,
        String brokerName, Context context);

    /**
     * Get a BrokerAuthorizationResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BrokerAuthorizationResource along with {@link Response}.
     */
    BrokerAuthorizationResource getById(String id);

    /**
     * Get a BrokerAuthorizationResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BrokerAuthorizationResource along with {@link Response}.
     */
    Response<BrokerAuthorizationResource> getByIdWithResponse(String id, Context context);

    /**
     * Delete a BrokerAuthorizationResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a BrokerAuthorizationResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new BrokerAuthorizationResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new BrokerAuthorizationResource definition.
     */
    BrokerAuthorizationResource.DefinitionStages.Blank define(String name);
}
