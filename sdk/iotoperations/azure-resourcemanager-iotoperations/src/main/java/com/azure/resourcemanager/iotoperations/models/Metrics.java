// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Diagnostic Metrics properties.
 */
@Fluent
public final class Metrics implements JsonSerializable<Metrics> {
    /*
     * The prometheus port to expose the metrics.
     */
    private Integer prometheusPort;

    /**
     * Creates an instance of Metrics class.
     */
    public Metrics() {
    }

    /**
     * Get the prometheusPort property: The prometheus port to expose the metrics.
     * 
     * @return the prometheusPort value.
     */
    public Integer prometheusPort() {
        return this.prometheusPort;
    }

    /**
     * Set the prometheusPort property: The prometheus port to expose the metrics.
     * 
     * @param prometheusPort the prometheusPort value to set.
     * @return the Metrics object itself.
     */
    public Metrics withPrometheusPort(Integer prometheusPort) {
        this.prometheusPort = prometheusPort;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("prometheusPort", this.prometheusPort);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Metrics from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Metrics if the JsonReader was pointing to an instance of it, or null if it was pointing to
     * JSON null.
     * @throws IOException If an error occurs while reading the Metrics.
     */
    public static Metrics fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Metrics deserializedMetrics = new Metrics();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("prometheusPort".equals(fieldName)) {
                    deserializedMetrics.prometheusPort = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMetrics;
        });
    }
}
