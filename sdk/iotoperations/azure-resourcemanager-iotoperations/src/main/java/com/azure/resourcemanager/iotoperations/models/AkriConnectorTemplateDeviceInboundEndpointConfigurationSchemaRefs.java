// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs properties.
 */
@Fluent
public final class AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs
    implements JsonSerializable<AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs> {
    /*
     * The default configuration schema reference for datasets.
     */
    private String defaultDatasetConfigSchemaRef;

    /*
     * The default configuration schema reference for events.
     */
    private String defaultEventsConfigSchemaRef;

    /*
     * The default configuration schema reference for process control.
     */
    private String defaultProcessControlConfigSchemaRef;

    /*
     * The default configuration schema reference for streams.
     */
    private String defaultStreamsConfigSchemaRef;

    /*
     * The additional configuration schema reference.
     */
    private String additionalConfigSchemaRef;

    /**
     * Creates an instance of AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs class.
     */
    public AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs() {
    }

    /**
     * Get the defaultDatasetConfigSchemaRef property: The default configuration schema reference for datasets.
     * 
     * @return the defaultDatasetConfigSchemaRef value.
     */
    public String defaultDatasetConfigSchemaRef() {
        return this.defaultDatasetConfigSchemaRef;
    }

    /**
     * Set the defaultDatasetConfigSchemaRef property: The default configuration schema reference for datasets.
     * 
     * @param defaultDatasetConfigSchemaRef the defaultDatasetConfigSchemaRef value to set.
     * @return the AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs object itself.
     */
    public AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs
        withDefaultDatasetConfigSchemaRef(String defaultDatasetConfigSchemaRef) {
        this.defaultDatasetConfigSchemaRef = defaultDatasetConfigSchemaRef;
        return this;
    }

    /**
     * Get the defaultEventsConfigSchemaRef property: The default configuration schema reference for events.
     * 
     * @return the defaultEventsConfigSchemaRef value.
     */
    public String defaultEventsConfigSchemaRef() {
        return this.defaultEventsConfigSchemaRef;
    }

    /**
     * Set the defaultEventsConfigSchemaRef property: The default configuration schema reference for events.
     * 
     * @param defaultEventsConfigSchemaRef the defaultEventsConfigSchemaRef value to set.
     * @return the AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs object itself.
     */
    public AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs
        withDefaultEventsConfigSchemaRef(String defaultEventsConfigSchemaRef) {
        this.defaultEventsConfigSchemaRef = defaultEventsConfigSchemaRef;
        return this;
    }

    /**
     * Get the defaultProcessControlConfigSchemaRef property: The default configuration schema reference for process
     * control.
     * 
     * @return the defaultProcessControlConfigSchemaRef value.
     */
    public String defaultProcessControlConfigSchemaRef() {
        return this.defaultProcessControlConfigSchemaRef;
    }

    /**
     * Set the defaultProcessControlConfigSchemaRef property: The default configuration schema reference for process
     * control.
     * 
     * @param defaultProcessControlConfigSchemaRef the defaultProcessControlConfigSchemaRef value to set.
     * @return the AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs object itself.
     */
    public AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs
        withDefaultProcessControlConfigSchemaRef(String defaultProcessControlConfigSchemaRef) {
        this.defaultProcessControlConfigSchemaRef = defaultProcessControlConfigSchemaRef;
        return this;
    }

    /**
     * Get the defaultStreamsConfigSchemaRef property: The default configuration schema reference for streams.
     * 
     * @return the defaultStreamsConfigSchemaRef value.
     */
    public String defaultStreamsConfigSchemaRef() {
        return this.defaultStreamsConfigSchemaRef;
    }

    /**
     * Set the defaultStreamsConfigSchemaRef property: The default configuration schema reference for streams.
     * 
     * @param defaultStreamsConfigSchemaRef the defaultStreamsConfigSchemaRef value to set.
     * @return the AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs object itself.
     */
    public AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs
        withDefaultStreamsConfigSchemaRef(String defaultStreamsConfigSchemaRef) {
        this.defaultStreamsConfigSchemaRef = defaultStreamsConfigSchemaRef;
        return this;
    }

    /**
     * Get the additionalConfigSchemaRef property: The additional configuration schema reference.
     * 
     * @return the additionalConfigSchemaRef value.
     */
    public String additionalConfigSchemaRef() {
        return this.additionalConfigSchemaRef;
    }

    /**
     * Set the additionalConfigSchemaRef property: The additional configuration schema reference.
     * 
     * @param additionalConfigSchemaRef the additionalConfigSchemaRef value to set.
     * @return the AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs object itself.
     */
    public AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs
        withAdditionalConfigSchemaRef(String additionalConfigSchemaRef) {
        this.additionalConfigSchemaRef = additionalConfigSchemaRef;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("defaultDatasetConfigSchemaRef", this.defaultDatasetConfigSchemaRef);
        jsonWriter.writeStringField("defaultEventsConfigSchemaRef", this.defaultEventsConfigSchemaRef);
        jsonWriter.writeStringField("defaultProcessControlConfigSchemaRef", this.defaultProcessControlConfigSchemaRef);
        jsonWriter.writeStringField("defaultStreamsConfigSchemaRef", this.defaultStreamsConfigSchemaRef);
        jsonWriter.writeStringField("additionalConfigSchemaRef", this.additionalConfigSchemaRef);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs.
     */
    public static AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs deserializedAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs
                = new AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("defaultDatasetConfigSchemaRef".equals(fieldName)) {
                    deserializedAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs.defaultDatasetConfigSchemaRef
                        = reader.getString();
                } else if ("defaultEventsConfigSchemaRef".equals(fieldName)) {
                    deserializedAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs.defaultEventsConfigSchemaRef
                        = reader.getString();
                } else if ("defaultProcessControlConfigSchemaRef".equals(fieldName)) {
                    deserializedAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs.defaultProcessControlConfigSchemaRef
                        = reader.getString();
                } else if ("defaultStreamsConfigSchemaRef".equals(fieldName)) {
                    deserializedAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs.defaultStreamsConfigSchemaRef
                        = reader.getString();
                } else if ("additionalConfigSchemaRef".equals(fieldName)) {
                    deserializedAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs.additionalConfigSchemaRef
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs;
        });
    }
}
