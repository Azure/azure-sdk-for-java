// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.iotoperations.fluent.models.AkriConnectorResourceInner;

/**
 * An instance of this class provides access to all the operations defined in AkriConnectorsClient.
 */
public interface AkriConnectorsClient {
    /**
     * Get a AkriConnectorResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @param connectorName Name of AkriConnector resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AkriConnectorResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AkriConnectorResourceInner> getWithResponse(String resourceGroupName, String instanceName,
        String akriConnectorTemplateName, String connectorName, Context context);

    /**
     * Get a AkriConnectorResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @param connectorName Name of AkriConnector resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AkriConnectorResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AkriConnectorResourceInner get(String resourceGroupName, String instanceName, String akriConnectorTemplateName,
        String connectorName);

    /**
     * Create a AkriConnectorResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @param connectorName Name of AkriConnector resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of akriConnector resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AkriConnectorResourceInner>, AkriConnectorResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String instanceName, String akriConnectorTemplateName, String connectorName,
        AkriConnectorResourceInner resource);

    /**
     * Create a AkriConnectorResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @param connectorName Name of AkriConnector resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of akriConnector resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AkriConnectorResourceInner>, AkriConnectorResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String instanceName, String akriConnectorTemplateName, String connectorName,
        AkriConnectorResourceInner resource, Context context);

    /**
     * Create a AkriConnectorResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @param connectorName Name of AkriConnector resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return akriConnector resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AkriConnectorResourceInner createOrUpdate(String resourceGroupName, String instanceName,
        String akriConnectorTemplateName, String connectorName, AkriConnectorResourceInner resource);

    /**
     * Create a AkriConnectorResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @param connectorName Name of AkriConnector resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return akriConnector resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AkriConnectorResourceInner createOrUpdate(String resourceGroupName, String instanceName,
        String akriConnectorTemplateName, String connectorName, AkriConnectorResourceInner resource, Context context);

    /**
     * Delete a AkriConnectorResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @param connectorName Name of AkriConnector resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String instanceName,
        String akriConnectorTemplateName, String connectorName);

    /**
     * Delete a AkriConnectorResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @param connectorName Name of AkriConnector resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String instanceName,
        String akriConnectorTemplateName, String connectorName, Context context);

    /**
     * Delete a AkriConnectorResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @param connectorName Name of AkriConnector resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String instanceName, String akriConnectorTemplateName, String connectorName);

    /**
     * Delete a AkriConnectorResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @param connectorName Name of AkriConnector resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String instanceName, String akriConnectorTemplateName, String connectorName,
        Context context);

    /**
     * List AkriConnectorResource resources by AkriConnectorTemplateResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AkriConnectorResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AkriConnectorResourceInner> listByTemplate(String resourceGroupName, String instanceName,
        String akriConnectorTemplateName);

    /**
     * List AkriConnectorResource resources by AkriConnectorTemplateResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of instance.
     * @param akriConnectorTemplateName Name of AkriConnectorTemplate resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AkriConnectorResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AkriConnectorResourceInner> listByTemplate(String resourceGroupName, String instanceName,
        String akriConnectorTemplateName, Context context);
}
