// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Microsoft Fabric endpoint. Authentication properties. NOTE - Only one method is supported for one entry.
 */
@Fluent
public final class DataflowEndpointFabricOneLakeAuthentication
    implements JsonSerializable<DataflowEndpointFabricOneLakeAuthentication> {
    /*
     * Mode of Authentication.
     */
    private FabricOneLakeAuthMethod method;

    /*
     * System-assigned managed identity authentication.
     */
    private DataflowEndpointAuthenticationSystemAssignedManagedIdentity systemAssignedManagedIdentitySettings;

    /*
     * User-assigned managed identity authentication.
     */
    private DataflowEndpointAuthenticationUserAssignedManagedIdentity userAssignedManagedIdentitySettings;

    /**
     * Creates an instance of DataflowEndpointFabricOneLakeAuthentication class.
     */
    public DataflowEndpointFabricOneLakeAuthentication() {
    }

    /**
     * Get the method property: Mode of Authentication.
     * 
     * @return the method value.
     */
    public FabricOneLakeAuthMethod method() {
        return this.method;
    }

    /**
     * Set the method property: Mode of Authentication.
     * 
     * @param method the method value to set.
     * @return the DataflowEndpointFabricOneLakeAuthentication object itself.
     */
    public DataflowEndpointFabricOneLakeAuthentication withMethod(FabricOneLakeAuthMethod method) {
        this.method = method;
        return this;
    }

    /**
     * Get the systemAssignedManagedIdentitySettings property: System-assigned managed identity authentication.
     * 
     * @return the systemAssignedManagedIdentitySettings value.
     */
    public DataflowEndpointAuthenticationSystemAssignedManagedIdentity systemAssignedManagedIdentitySettings() {
        return this.systemAssignedManagedIdentitySettings;
    }

    /**
     * Set the systemAssignedManagedIdentitySettings property: System-assigned managed identity authentication.
     * 
     * @param systemAssignedManagedIdentitySettings the systemAssignedManagedIdentitySettings value to set.
     * @return the DataflowEndpointFabricOneLakeAuthentication object itself.
     */
    public DataflowEndpointFabricOneLakeAuthentication withSystemAssignedManagedIdentitySettings(
        DataflowEndpointAuthenticationSystemAssignedManagedIdentity systemAssignedManagedIdentitySettings) {
        this.systemAssignedManagedIdentitySettings = systemAssignedManagedIdentitySettings;
        return this;
    }

    /**
     * Get the userAssignedManagedIdentitySettings property: User-assigned managed identity authentication.
     * 
     * @return the userAssignedManagedIdentitySettings value.
     */
    public DataflowEndpointAuthenticationUserAssignedManagedIdentity userAssignedManagedIdentitySettings() {
        return this.userAssignedManagedIdentitySettings;
    }

    /**
     * Set the userAssignedManagedIdentitySettings property: User-assigned managed identity authentication.
     * 
     * @param userAssignedManagedIdentitySettings the userAssignedManagedIdentitySettings value to set.
     * @return the DataflowEndpointFabricOneLakeAuthentication object itself.
     */
    public DataflowEndpointFabricOneLakeAuthentication withUserAssignedManagedIdentitySettings(
        DataflowEndpointAuthenticationUserAssignedManagedIdentity userAssignedManagedIdentitySettings) {
        this.userAssignedManagedIdentitySettings = userAssignedManagedIdentitySettings;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (method() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property method in model DataflowEndpointFabricOneLakeAuthentication"));
        }
        if (systemAssignedManagedIdentitySettings() != null) {
            systemAssignedManagedIdentitySettings().validate();
        }
        if (userAssignedManagedIdentitySettings() != null) {
            userAssignedManagedIdentitySettings().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DataflowEndpointFabricOneLakeAuthentication.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("method", this.method == null ? null : this.method.toString());
        jsonWriter.writeJsonField("systemAssignedManagedIdentitySettings", this.systemAssignedManagedIdentitySettings);
        jsonWriter.writeJsonField("userAssignedManagedIdentitySettings", this.userAssignedManagedIdentitySettings);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DataflowEndpointFabricOneLakeAuthentication from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DataflowEndpointFabricOneLakeAuthentication if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DataflowEndpointFabricOneLakeAuthentication.
     */
    public static DataflowEndpointFabricOneLakeAuthentication fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DataflowEndpointFabricOneLakeAuthentication deserializedDataflowEndpointFabricOneLakeAuthentication
                = new DataflowEndpointFabricOneLakeAuthentication();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("method".equals(fieldName)) {
                    deserializedDataflowEndpointFabricOneLakeAuthentication.method
                        = FabricOneLakeAuthMethod.fromString(reader.getString());
                } else if ("systemAssignedManagedIdentitySettings".equals(fieldName)) {
                    deserializedDataflowEndpointFabricOneLakeAuthentication.systemAssignedManagedIdentitySettings
                        = DataflowEndpointAuthenticationSystemAssignedManagedIdentity.fromJson(reader);
                } else if ("userAssignedManagedIdentitySettings".equals(fieldName)) {
                    deserializedDataflowEndpointFabricOneLakeAuthentication.userAssignedManagedIdentitySettings
                        = DataflowEndpointAuthenticationUserAssignedManagedIdentity.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDataflowEndpointFabricOneLakeAuthentication;
        });
    }
}
