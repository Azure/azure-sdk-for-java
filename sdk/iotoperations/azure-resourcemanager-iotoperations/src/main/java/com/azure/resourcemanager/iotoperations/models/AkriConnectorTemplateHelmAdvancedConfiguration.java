// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * AkriConnectorTemplateHelmAdvancedConfiguration properties.
 */
@Fluent
public final class AkriConnectorTemplateHelmAdvancedConfiguration
    implements JsonSerializable<AkriConnectorTemplateHelmAdvancedConfiguration> {
    /*
     * Delete operation configuration for the Helm chart.
     */
    private AkriConnectorTemplateHelmDeleteConfiguration delete;

    /*
     * Install operation configuration for the Helm chart.
     */
    private AkriConnectorTemplateHelmInstallConfiguration install;

    /*
     * Upgrade operation configuration for the Helm chart.
     */
    private AkriConnectorTemplateHelmUpgradeConfiguration upgrade;

    /**
     * Creates an instance of AkriConnectorTemplateHelmAdvancedConfiguration class.
     */
    public AkriConnectorTemplateHelmAdvancedConfiguration() {
    }

    /**
     * Get the delete property: Delete operation configuration for the Helm chart.
     * 
     * @return the delete value.
     */
    public AkriConnectorTemplateHelmDeleteConfiguration delete() {
        return this.delete;
    }

    /**
     * Set the delete property: Delete operation configuration for the Helm chart.
     * 
     * @param delete the delete value to set.
     * @return the AkriConnectorTemplateHelmAdvancedConfiguration object itself.
     */
    public AkriConnectorTemplateHelmAdvancedConfiguration
        withDelete(AkriConnectorTemplateHelmDeleteConfiguration delete) {
        this.delete = delete;
        return this;
    }

    /**
     * Get the install property: Install operation configuration for the Helm chart.
     * 
     * @return the install value.
     */
    public AkriConnectorTemplateHelmInstallConfiguration install() {
        return this.install;
    }

    /**
     * Set the install property: Install operation configuration for the Helm chart.
     * 
     * @param install the install value to set.
     * @return the AkriConnectorTemplateHelmAdvancedConfiguration object itself.
     */
    public AkriConnectorTemplateHelmAdvancedConfiguration
        withInstall(AkriConnectorTemplateHelmInstallConfiguration install) {
        this.install = install;
        return this;
    }

    /**
     * Get the upgrade property: Upgrade operation configuration for the Helm chart.
     * 
     * @return the upgrade value.
     */
    public AkriConnectorTemplateHelmUpgradeConfiguration upgrade() {
        return this.upgrade;
    }

    /**
     * Set the upgrade property: Upgrade operation configuration for the Helm chart.
     * 
     * @param upgrade the upgrade value to set.
     * @return the AkriConnectorTemplateHelmAdvancedConfiguration object itself.
     */
    public AkriConnectorTemplateHelmAdvancedConfiguration
        withUpgrade(AkriConnectorTemplateHelmUpgradeConfiguration upgrade) {
        this.upgrade = upgrade;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (delete() != null) {
            delete().validate();
        }
        if (install() != null) {
            install().validate();
        }
        if (upgrade() != null) {
            upgrade().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("delete", this.delete);
        jsonWriter.writeJsonField("install", this.install);
        jsonWriter.writeJsonField("upgrade", this.upgrade);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AkriConnectorTemplateHelmAdvancedConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AkriConnectorTemplateHelmAdvancedConfiguration if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AkriConnectorTemplateHelmAdvancedConfiguration.
     */
    public static AkriConnectorTemplateHelmAdvancedConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AkriConnectorTemplateHelmAdvancedConfiguration deserializedAkriConnectorTemplateHelmAdvancedConfiguration
                = new AkriConnectorTemplateHelmAdvancedConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("delete".equals(fieldName)) {
                    deserializedAkriConnectorTemplateHelmAdvancedConfiguration.delete
                        = AkriConnectorTemplateHelmDeleteConfiguration.fromJson(reader);
                } else if ("install".equals(fieldName)) {
                    deserializedAkriConnectorTemplateHelmAdvancedConfiguration.install
                        = AkriConnectorTemplateHelmInstallConfiguration.fromJson(reader);
                } else if ("upgrade".equals(fieldName)) {
                    deserializedAkriConnectorTemplateHelmAdvancedConfiguration.upgrade
                        = AkriConnectorTemplateHelmUpgradeConfiguration.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAkriConnectorTemplateHelmAdvancedConfiguration;
        });
    }
}
