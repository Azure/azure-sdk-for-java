// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.connectedvmware.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.connectedvmware.models.Identity;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Defines the HybridIdentityMetadata. */
@JsonFlatten
@Fluent
public class HybridIdentityMetadataInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(HybridIdentityMetadataInner.class);

    /*
     * The system data.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * Gets or sets the Vm Id.
     */
    @JsonProperty(value = "properties.vmId")
    private String vmId;

    /*
     * Gets or sets the Public Key.
     */
    @JsonProperty(value = "properties.publicKey")
    private String publicKey;

    /*
     * The identity of the resource.
     */
    @JsonProperty(value = "properties.identity", access = JsonProperty.Access.WRITE_ONLY)
    private Identity identity;

    /*
     * Gets or sets the provisioning state.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /**
     * Get the systemData property: The system data.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the vmId property: Gets or sets the Vm Id.
     *
     * @return the vmId value.
     */
    public String vmId() {
        return this.vmId;
    }

    /**
     * Set the vmId property: Gets or sets the Vm Id.
     *
     * @param vmId the vmId value to set.
     * @return the HybridIdentityMetadataInner object itself.
     */
    public HybridIdentityMetadataInner withVmId(String vmId) {
        this.vmId = vmId;
        return this;
    }

    /**
     * Get the publicKey property: Gets or sets the Public Key.
     *
     * @return the publicKey value.
     */
    public String publicKey() {
        return this.publicKey;
    }

    /**
     * Set the publicKey property: Gets or sets the Public Key.
     *
     * @param publicKey the publicKey value to set.
     * @return the HybridIdentityMetadataInner object itself.
     */
    public HybridIdentityMetadataInner withPublicKey(String publicKey) {
        this.publicKey = publicKey;
        return this;
    }

    /**
     * Get the identity property: The identity of the resource.
     *
     * @return the identity value.
     */
    public Identity identity() {
        return this.identity;
    }

    /**
     * Get the provisioningState property: Gets or sets the provisioning state.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
    }
}
