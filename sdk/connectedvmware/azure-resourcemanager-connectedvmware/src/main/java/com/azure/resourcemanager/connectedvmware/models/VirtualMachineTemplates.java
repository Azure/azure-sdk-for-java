// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.connectedvmware.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of VirtualMachineTemplates. */
public interface VirtualMachineTemplates {
    /**
     * Implements virtual machine template GET method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualMachineTemplateName Name of the virtual machine template resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualMachineTemplate.
     */
    VirtualMachineTemplate getByResourceGroup(String resourceGroupName, String virtualMachineTemplateName);

    /**
     * Implements virtual machine template GET method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualMachineTemplateName Name of the virtual machine template resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualMachineTemplate.
     */
    Response<VirtualMachineTemplate> getByResourceGroupWithResponse(
        String resourceGroupName, String virtualMachineTemplateName, Context context);

    /**
     * Implements virtual machine template DELETE method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualMachineTemplateName Name of the virtual machine template resource.
     * @param force Whether force delete was specified.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String virtualMachineTemplateName, Boolean force);

    /**
     * Implements virtual machine template DELETE method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualMachineTemplateName Name of the virtual machine template resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String virtualMachineTemplateName);

    /**
     * Implements virtual machine template DELETE method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualMachineTemplateName Name of the virtual machine template resource.
     * @param force Whether force delete was specified.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String virtualMachineTemplateName, Boolean force, Context context);

    /**
     * List of virtualMachineTemplates in a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of VirtualMachineTemplates.
     */
    PagedIterable<VirtualMachineTemplate> list();

    /**
     * List of virtualMachineTemplates in a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of VirtualMachineTemplates.
     */
    PagedIterable<VirtualMachineTemplate> list(Context context);

    /**
     * List of virtualMachineTemplates in a resource group.
     *
     * @param resourceGroupName The Resource Group Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of VirtualMachineTemplates.
     */
    PagedIterable<VirtualMachineTemplate> listByResourceGroup(String resourceGroupName);

    /**
     * List of virtualMachineTemplates in a resource group.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of VirtualMachineTemplates.
     */
    PagedIterable<VirtualMachineTemplate> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Implements virtual machine template GET method.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualMachineTemplate.
     */
    VirtualMachineTemplate getById(String id);

    /**
     * Implements virtual machine template GET method.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualMachineTemplate.
     */
    Response<VirtualMachineTemplate> getByIdWithResponse(String id, Context context);

    /**
     * Implements virtual machine template DELETE method.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Implements virtual machine template DELETE method.
     *
     * @param id the resource ID.
     * @param force Whether force delete was specified.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Boolean force, Context context);

    /**
     * Begins definition for a new VirtualMachineTemplate resource.
     *
     * @param name resource name.
     * @return the first stage of the new VirtualMachineTemplate definition.
     */
    VirtualMachineTemplate.DefinitionStages.Blank define(String name);
}
