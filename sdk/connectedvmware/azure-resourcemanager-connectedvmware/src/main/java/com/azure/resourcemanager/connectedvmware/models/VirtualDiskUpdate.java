// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.connectedvmware.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Defines the virtual disk update. */
@Fluent
public final class VirtualDiskUpdate {
    /*
     * Gets or sets the name of the virtual disk.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Gets or sets the disk total size.
     */
    @JsonProperty(value = "diskSizeGB")
    private Integer diskSizeGB;

    /*
     * Gets or sets the device key value.
     */
    @JsonProperty(value = "deviceKey")
    private Integer deviceKey;

    /*
     * Gets or sets the disk mode.
     */
    @JsonProperty(value = "diskMode")
    private DiskMode diskMode;

    /*
     * Gets or sets the controller id.
     */
    @JsonProperty(value = "controllerKey")
    private Integer controllerKey;

    /*
     * Gets or sets the unit number of the disk on the controller.
     */
    @JsonProperty(value = "unitNumber")
    private Integer unitNumber;

    /*
     * Gets or sets the device name.
     */
    @JsonProperty(value = "deviceName")
    private String deviceName;

    /*
     * Gets or sets the disk backing type.
     */
    @JsonProperty(value = "diskType")
    private DiskType diskType;

    /**
     * Get the name property: Gets or sets the name of the virtual disk.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Gets or sets the name of the virtual disk.
     *
     * @param name the name value to set.
     * @return the VirtualDiskUpdate object itself.
     */
    public VirtualDiskUpdate withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the diskSizeGB property: Gets or sets the disk total size.
     *
     * @return the diskSizeGB value.
     */
    public Integer diskSizeGB() {
        return this.diskSizeGB;
    }

    /**
     * Set the diskSizeGB property: Gets or sets the disk total size.
     *
     * @param diskSizeGB the diskSizeGB value to set.
     * @return the VirtualDiskUpdate object itself.
     */
    public VirtualDiskUpdate withDiskSizeGB(Integer diskSizeGB) {
        this.diskSizeGB = diskSizeGB;
        return this;
    }

    /**
     * Get the deviceKey property: Gets or sets the device key value.
     *
     * @return the deviceKey value.
     */
    public Integer deviceKey() {
        return this.deviceKey;
    }

    /**
     * Set the deviceKey property: Gets or sets the device key value.
     *
     * @param deviceKey the deviceKey value to set.
     * @return the VirtualDiskUpdate object itself.
     */
    public VirtualDiskUpdate withDeviceKey(Integer deviceKey) {
        this.deviceKey = deviceKey;
        return this;
    }

    /**
     * Get the diskMode property: Gets or sets the disk mode.
     *
     * @return the diskMode value.
     */
    public DiskMode diskMode() {
        return this.diskMode;
    }

    /**
     * Set the diskMode property: Gets or sets the disk mode.
     *
     * @param diskMode the diskMode value to set.
     * @return the VirtualDiskUpdate object itself.
     */
    public VirtualDiskUpdate withDiskMode(DiskMode diskMode) {
        this.diskMode = diskMode;
        return this;
    }

    /**
     * Get the controllerKey property: Gets or sets the controller id.
     *
     * @return the controllerKey value.
     */
    public Integer controllerKey() {
        return this.controllerKey;
    }

    /**
     * Set the controllerKey property: Gets or sets the controller id.
     *
     * @param controllerKey the controllerKey value to set.
     * @return the VirtualDiskUpdate object itself.
     */
    public VirtualDiskUpdate withControllerKey(Integer controllerKey) {
        this.controllerKey = controllerKey;
        return this;
    }

    /**
     * Get the unitNumber property: Gets or sets the unit number of the disk on the controller.
     *
     * @return the unitNumber value.
     */
    public Integer unitNumber() {
        return this.unitNumber;
    }

    /**
     * Set the unitNumber property: Gets or sets the unit number of the disk on the controller.
     *
     * @param unitNumber the unitNumber value to set.
     * @return the VirtualDiskUpdate object itself.
     */
    public VirtualDiskUpdate withUnitNumber(Integer unitNumber) {
        this.unitNumber = unitNumber;
        return this;
    }

    /**
     * Get the deviceName property: Gets or sets the device name.
     *
     * @return the deviceName value.
     */
    public String deviceName() {
        return this.deviceName;
    }

    /**
     * Set the deviceName property: Gets or sets the device name.
     *
     * @param deviceName the deviceName value to set.
     * @return the VirtualDiskUpdate object itself.
     */
    public VirtualDiskUpdate withDeviceName(String deviceName) {
        this.deviceName = deviceName;
        return this;
    }

    /**
     * Get the diskType property: Gets or sets the disk backing type.
     *
     * @return the diskType value.
     */
    public DiskType diskType() {
        return this.diskType;
    }

    /**
     * Set the diskType property: Gets or sets the disk backing type.
     *
     * @param diskType the diskType value to set.
     * @return the VirtualDiskUpdate object itself.
     */
    public VirtualDiskUpdate withDiskType(DiskType diskType) {
        this.diskType = diskType;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
