// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.connectedvmware.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The Virtual network inventory item.
 */
@Fluent
public final class VirtualNetworkInventoryItem extends InventoryItemProperties {
    /*
     * They inventory type.
     */
    private InventoryType inventoryType = InventoryType.VIRTUAL_NETWORK;

    /**
     * Creates an instance of VirtualNetworkInventoryItem class.
     */
    public VirtualNetworkInventoryItem() {
    }

    /**
     * Get the inventoryType property: They inventory type.
     * 
     * @return the inventoryType value.
     */
    @Override
    public InventoryType inventoryType() {
        return this.inventoryType;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VirtualNetworkInventoryItem withManagedResourceId(String managedResourceId) {
        super.withManagedResourceId(managedResourceId);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VirtualNetworkInventoryItem withMoRefId(String moRefId) {
        super.withMoRefId(moRefId);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VirtualNetworkInventoryItem withMoName(String moName) {
        super.withMoName(moName);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("managedResourceId", managedResourceId());
        jsonWriter.writeStringField("moRefId", moRefId());
        jsonWriter.writeStringField("moName", moName());
        jsonWriter.writeStringField("inventoryType", this.inventoryType == null ? null : this.inventoryType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualNetworkInventoryItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualNetworkInventoryItem if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualNetworkInventoryItem.
     */
    public static VirtualNetworkInventoryItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualNetworkInventoryItem deserializedVirtualNetworkInventoryItem = new VirtualNetworkInventoryItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("managedResourceId".equals(fieldName)) {
                    deserializedVirtualNetworkInventoryItem.withManagedResourceId(reader.getString());
                } else if ("moRefId".equals(fieldName)) {
                    deserializedVirtualNetworkInventoryItem.withMoRefId(reader.getString());
                } else if ("moName".equals(fieldName)) {
                    deserializedVirtualNetworkInventoryItem.withMoName(reader.getString());
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedVirtualNetworkInventoryItem
                        .withProvisioningState(ProvisioningState.fromString(reader.getString()));
                } else if ("inventoryType".equals(fieldName)) {
                    deserializedVirtualNetworkInventoryItem.inventoryType
                        = InventoryType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualNetworkInventoryItem;
        });
    }
}
