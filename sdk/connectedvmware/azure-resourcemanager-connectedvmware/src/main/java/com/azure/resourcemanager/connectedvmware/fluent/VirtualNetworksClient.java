// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.connectedvmware.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.connectedvmware.fluent.models.VirtualNetworkInner;
import com.azure.resourcemanager.connectedvmware.models.ResourcePatch;

/** An instance of this class provides access to all the operations defined in VirtualNetworksClient. */
public interface VirtualNetworksClient {
    /**
     * Create Or Update virtual network.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualNetwork.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<VirtualNetworkInner>, VirtualNetworkInner> beginCreate(
        String resourceGroupName, String virtualNetworkName, VirtualNetworkInner body);

    /**
     * Create Or Update virtual network.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualNetwork.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<VirtualNetworkInner>, VirtualNetworkInner> beginCreate(
        String resourceGroupName, String virtualNetworkName, VirtualNetworkInner body, Context context);

    /**
     * Create Or Update virtual network.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @param body Request payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualNetwork.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkInner create(String resourceGroupName, String virtualNetworkName, VirtualNetworkInner body);

    /**
     * Create Or Update virtual network.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualNetwork.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkInner create(String resourceGroupName, String virtualNetworkName);

    /**
     * Create Or Update virtual network.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @param body Request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualNetwork.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkInner create(
        String resourceGroupName, String virtualNetworkName, VirtualNetworkInner body, Context context);

    /**
     * Implements virtual network GET method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualNetwork.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkInner getByResourceGroup(String resourceGroupName, String virtualNetworkName);

    /**
     * Implements virtual network GET method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualNetwork.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VirtualNetworkInner> getByResourceGroupWithResponse(
        String resourceGroupName, String virtualNetworkName, Context context);

    /**
     * API to update certain properties of the virtual network resource.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualNetwork.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkInner update(String resourceGroupName, String virtualNetworkName);

    /**
     * API to update certain properties of the virtual network resource.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @param body Resource properties to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return define the virtualNetwork.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VirtualNetworkInner> updateWithResponse(
        String resourceGroupName, String virtualNetworkName, ResourcePatch body, Context context);

    /**
     * Implements virtual network DELETE method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @param force Whether force delete was specified.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String virtualNetworkName, Boolean force);

    /**
     * Implements virtual network DELETE method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @param force Whether force delete was specified.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String virtualNetworkName, Boolean force, Context context);

    /**
     * Implements virtual network DELETE method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @param force Whether force delete was specified.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String virtualNetworkName, Boolean force);

    /**
     * Implements virtual network DELETE method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String virtualNetworkName);

    /**
     * Implements virtual network DELETE method.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param virtualNetworkName Name of the virtual network resource.
     * @param force Whether force delete was specified.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String virtualNetworkName, Boolean force, Context context);

    /**
     * List of virtualNetworks in a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of VirtualNetworks.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworkInner> list();

    /**
     * List of virtualNetworks in a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of VirtualNetworks.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworkInner> list(Context context);

    /**
     * List of virtualNetworks in a resource group.
     *
     * @param resourceGroupName The Resource Group Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of VirtualNetworks.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworkInner> listByResourceGroup(String resourceGroupName);

    /**
     * List of virtualNetworks in a resource group.
     *
     * @param resourceGroupName The Resource Group Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of VirtualNetworks.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworkInner> listByResourceGroup(String resourceGroupName, Context context);
}
