// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.connectedvmware.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.connectedvmware.fluent.models.HostModelInner;
import com.azure.resourcemanager.connectedvmware.models.ExtendedLocation;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class HostModelInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HostModelInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"uuid\":\"ccm\",\"vCenterId\":\"udxytlmoyrx\",\"moRefId\":\"fudwpznt\",\"inventoryItemId\":\"dzhlrq\",\"moName\":\"hckfrlhrx\",\"statuses\":[{\"type\":\"vpycanuzbp\",\"status\":\"afkuwb\",\"reason\":\"nwbmeh\",\"message\":\"eyvjusrtslhspkde\",\"severity\":\"aofmxagkvtme\",\"lastUpdatedAt\":\"2020-12-28T20:08:12Z\"}],\"customResourceName\":\"rhahvljuahaquhcd\",\"overallMemoryUsageGB\":4716171323603349027,\"memorySizeGB\":5990210580748230219,\"overallCpuUsageMHz\":495813413204095798,\"cpuMhz\":7771790370778973734,\"datastoreIds\":[\"mwsrcrgvxpvgo\",\"zlfmisgwbnbbeld\",\"wkz\",\"ali\"],\"networkIds\":[\"qhakauhashsf\",\"xosow\",\"xcug\"],\"provisioningState\":\"Updating\"},\"extendedLocation\":{\"type\":\"xdje\",\"name\":\"pucwwfvovbvme\"},\"kind\":\"ivyhzceuojgjrwju\",\"location\":\"iotwmcdytdxwit\",\"tags\":{\"hniskxfbkpyc\":\"jawgqwg\"},\"id\":\"klwndnhjdauwhv\",\"name\":\"l\",\"type\":\"zbtd\"}")
                .toObject(HostModelInner.class);
        Assertions.assertEquals("iotwmcdytdxwit", model.location());
        Assertions.assertEquals("jawgqwg", model.tags().get("hniskxfbkpyc"));
        Assertions.assertEquals("xdje", model.extendedLocation().type());
        Assertions.assertEquals("pucwwfvovbvme", model.extendedLocation().name());
        Assertions.assertEquals("ivyhzceuojgjrwju", model.kind());
        Assertions.assertEquals("udxytlmoyrx", model.vCenterId());
        Assertions.assertEquals("fudwpznt", model.moRefId());
        Assertions.assertEquals("dzhlrq", model.inventoryItemId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HostModelInner model =
            new HostModelInner()
                .withLocation("iotwmcdytdxwit")
                .withTags(mapOf("hniskxfbkpyc", "jawgqwg"))
                .withExtendedLocation(new ExtendedLocation().withType("xdje").withName("pucwwfvovbvme"))
                .withKind("ivyhzceuojgjrwju")
                .withVCenterId("udxytlmoyrx")
                .withMoRefId("fudwpznt")
                .withInventoryItemId("dzhlrq");
        model = BinaryData.fromObject(model).toObject(HostModelInner.class);
        Assertions.assertEquals("iotwmcdytdxwit", model.location());
        Assertions.assertEquals("jawgqwg", model.tags().get("hniskxfbkpyc"));
        Assertions.assertEquals("xdje", model.extendedLocation().type());
        Assertions.assertEquals("pucwwfvovbvme", model.extendedLocation().name());
        Assertions.assertEquals("ivyhzceuojgjrwju", model.kind());
        Assertions.assertEquals("udxytlmoyrx", model.vCenterId());
        Assertions.assertEquals("fudwpznt", model.moRefId());
        Assertions.assertEquals("dzhlrq", model.inventoryItemId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
