// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.connectedvmware.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.connectedvmware.ConnectedVMwareManager;
import com.azure.resourcemanager.connectedvmware.models.InventoryItem;
import com.azure.resourcemanager.connectedvmware.models.InventoryItemProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InventoryItemsCreateWithResponseMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"inventoryType\":\"InventoryItemProperties\",\"managedResourceId\":\"bewreswmowegmmut\",\"moRefId\":\"xeyg\",\"moName\":\"igijiitnspxlz\",\"provisioningState\":\"Provisioning\"},\"kind\":\"grijwaiufanrayb\",\"id\":\"eqfrojs\",\"name\":\"dgrhydkygywezs\",\"type\":\"iecafygzmxi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ConnectedVMwareManager manager = ConnectedVMwareManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        InventoryItem response = manager.inventoryItems()
            .define("hpzfngqj")
            .withExistingVcenter("zulo", "saeuzanhsfnhsenw")
            .withProperties(new InventoryItemProperties().withManagedResourceId("idftujwjjufwbe")
                .withMoRefId("k")
                .withMoName("rhtssr"))
            .withKind("dvhazcvjy")
            .create();

        Assertions.assertEquals("bewreswmowegmmut", response.properties().managedResourceId());
        Assertions.assertEquals("xeyg", response.properties().moRefId());
        Assertions.assertEquals("igijiitnspxlz", response.properties().moName());
        Assertions.assertEquals("grijwaiufanrayb", response.kind());
    }
}
