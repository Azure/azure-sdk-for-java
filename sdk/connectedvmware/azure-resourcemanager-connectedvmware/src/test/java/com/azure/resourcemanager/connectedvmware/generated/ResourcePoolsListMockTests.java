// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.connectedvmware.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.connectedvmware.ConnectedVMwareManager;
import com.azure.resourcemanager.connectedvmware.models.ResourcePool;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourcePoolsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"uuid\":\"qn\",\"vCenterId\":\"fpch\",\"moRefId\":\"bnjj\",\"inventoryItemId\":\"gegydcwboxjum\",\"moName\":\"qoli\",\"cpuSharesLevel\":\"raiouaubrjtl\",\"cpuReservationMHz\":7313245137237683770,\"cpuLimitMHz\":1602845993561098649,\"memSharesLevel\":\"ngiflrzpasccbi\",\"memReservationMB\":6146616583927063148,\"memLimitMB\":8285848251032513410,\"memOverallUsageGB\":698736176074570590,\"memCapacityGB\":7996059228480805157,\"cpuOverallUsageMHz\":1642641561666020981,\"cpuCapacityMHz\":7468151687790427261,\"customResourceName\":\"vruzslzojhpctfnm\",\"datastoreIds\":[\"tngfdgugeyzihgr\",\"yui\"],\"networkIds\":[\"snmfpphojeevy\",\"yhsgz\"],\"statuses\":[{\"type\":\"gomfgbeglq\",\"status\":\"eohibet\",\"reason\":\"uankrrfxeeeb\",\"message\":\"j\",\"severity\":\"cvbmqzb\",\"lastUpdatedAt\":\"2021-07-24T22:10:06Z\"},{\"type\":\"aj\",\"status\":\"wxacevehj\",\"reason\":\"yxoaf\",\"message\":\"oqltfae\",\"severity\":\"inmfgvxirp\",\"lastUpdatedAt\":\"2021-10-29T21:02:05Z\"},{\"type\":\"ypoq\",\"status\":\"hlqhykprlpy\",\"reason\":\"uciqdsme\",\"message\":\"itdfuxtyasiib\",\"severity\":\"ybnnustg\",\"lastUpdatedAt\":\"2021-05-02T07:22:39Z\"}],\"provisioningState\":\"Canceled\"},\"extendedLocation\":{\"type\":\"ixhcmavmqfoudor\",\"name\":\"gyyprotwy\"},\"kind\":\"d\",\"location\":\"bxhugcmjkavlgorb\",\"tags\":{\"jltfvnzcyjtotpv\":\"pmdtz\"},\"id\":\"pvpbdbzqgqqiheds\",\"name\":\"qwthmky\",\"type\":\"bcysih\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ConnectedVMwareManager manager = ConnectedVMwareManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ResourcePool> response = manager.resourcePools().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bxhugcmjkavlgorb", response.iterator().next().location());
        Assertions.assertEquals("pmdtz", response.iterator().next().tags().get("jltfvnzcyjtotpv"));
        Assertions.assertEquals("ixhcmavmqfoudor", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("gyyprotwy", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("d", response.iterator().next().kind());
        Assertions.assertEquals("fpch", response.iterator().next().vCenterId());
        Assertions.assertEquals("bnjj", response.iterator().next().moRefId());
        Assertions.assertEquals("gegydcwboxjum", response.iterator().next().inventoryItemId());
    }
}
