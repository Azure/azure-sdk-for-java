// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.connectedvmware.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.connectedvmware.fluent.models.DatastoreInner;
import com.azure.resourcemanager.connectedvmware.models.ExtendedLocation;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DatastoreInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatastoreInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"uuid\":\"wwiftohqkvpuv\",\"vCenterId\":\"gplsaknynf\",\"moRefId\":\"n\",\"inventoryItemId\":\"ph\",\"moName\":\"pxodlqiyntorzih\",\"statuses\":[{\"type\":\"jswsrmslyz\",\"status\":\"zbchckqqzqioxiy\",\"reason\":\"iizynkedyatrwyh\",\"message\":\"ibzyhwitsmyp\",\"severity\":\"npcdpumnzgm\",\"lastUpdatedAt\":\"2021-02-11T00:28:43Z\"},{\"type\":\"abikns\",\"status\":\"gj\",\"reason\":\"bldtlww\",\"message\":\"kdmtncvokotll\",\"severity\":\"yhgsy\",\"lastUpdatedAt\":\"2021-07-28T04:52:50Z\"}],\"customResourceName\":\"jlt\",\"capacityGB\":7818158463712312814,\"freeSpaceGB\":8180810548190524314,\"provisioningState\":\"Deleting\"},\"extendedLocation\":{\"type\":\"rkvcikhnvpa\",\"name\":\"gxqquezik\"},\"kind\":\"gxk\",\"location\":\"lla\",\"tags\":{\"ccjzkzivgvv\":\"lwuip\",\"rdvstkwqqtch\":\"nayrhyrnxxmueedn\"},\"id\":\"alm\",\"name\":\"mtdaa\",\"type\":\"gdv\"}")
                .toObject(DatastoreInner.class);
        Assertions.assertEquals("lla", model.location());
        Assertions.assertEquals("lwuip", model.tags().get("ccjzkzivgvv"));
        Assertions.assertEquals("rkvcikhnvpa", model.extendedLocation().type());
        Assertions.assertEquals("gxqquezik", model.extendedLocation().name());
        Assertions.assertEquals("gxk", model.kind());
        Assertions.assertEquals("gplsaknynf", model.vCenterId());
        Assertions.assertEquals("n", model.moRefId());
        Assertions.assertEquals("ph", model.inventoryItemId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatastoreInner model =
            new DatastoreInner()
                .withLocation("lla")
                .withTags(mapOf("ccjzkzivgvv", "lwuip", "rdvstkwqqtch", "nayrhyrnxxmueedn"))
                .withExtendedLocation(new ExtendedLocation().withType("rkvcikhnvpa").withName("gxqquezik"))
                .withKind("gxk")
                .withVCenterId("gplsaknynf")
                .withMoRefId("n")
                .withInventoryItemId("ph");
        model = BinaryData.fromObject(model).toObject(DatastoreInner.class);
        Assertions.assertEquals("lla", model.location());
        Assertions.assertEquals("lwuip", model.tags().get("ccjzkzivgvv"));
        Assertions.assertEquals("rkvcikhnvpa", model.extendedLocation().type());
        Assertions.assertEquals("gxqquezik", model.extendedLocation().name());
        Assertions.assertEquals("gxk", model.kind());
        Assertions.assertEquals("gplsaknynf", model.vCenterId());
        Assertions.assertEquals("n", model.moRefId());
        Assertions.assertEquals("ph", model.inventoryItemId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
