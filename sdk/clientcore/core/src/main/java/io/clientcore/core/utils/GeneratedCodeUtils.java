// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
package io.clientcore.core.utils;

import io.clientcore.core.implementation.utils.UriEscapers;

import java.util.ArrayList;
import java.util.List;

/**
 * Utility methods that are used by code generated by the annotation processor.
 */
public final class GeneratedCodeUtils {
    /**
     * Adds a query parameter key-value to the {@link UriBuilder}.
     * <p>
     * If the unencoded {@code value} is null nothing will be added to the {@link UriBuilder}.
     * <p>
     * If the {@code value} is a {@link List}, any null values within the list will be included in the query of the URI.
     *
     * @param uriBuilder The {@link UriBuilder} to add the query parameter.
     * @param name The name of the query parameter.
     * @param escapeName Whether the name needs to be escaped.
     * @param value The value of the query parameter.
     * @param escapeValue Whether the value needs to be escaped.
     */
    public static void addQueryParameter(UriBuilder uriBuilder, String name, boolean escapeName, Object value,
        boolean escapeValue) {
        // The value is null, don't add the query parameter.
        if (value == null) {
            return;
        }

        String nameToAdd = escapeName ? UriEscapers.QUERY_ESCAPER.escape(name) : name;

        // Check if the value object was a List.
        if (value instanceof List<?>) {
            List<?> valueList = (List<?>) value;
            List<String> valuesToAdd = new ArrayList<>(valueList.size());

            // Stringify and encode each element in the List.
            for (Object v : valueList) {
                String valueToAdd
                    = escapeValue ? UriEscapers.QUERY_ESCAPER.escape(String.valueOf(v)) : String.valueOf(v);
                valuesToAdd.add(valueToAdd);
            }

            uriBuilder.addQueryParameterValues(nameToAdd, valuesToAdd);
        } else {
            // Single value object, stringify and encode it.
            String valueToAdd
                = escapeValue ? UriEscapers.QUERY_ESCAPER.escape(String.valueOf(value)) : String.valueOf(value);

            uriBuilder.addQueryParameter(nameToAdd, valueToAdd);
        }
    }

    private GeneratedCodeUtils() {
    }
}
