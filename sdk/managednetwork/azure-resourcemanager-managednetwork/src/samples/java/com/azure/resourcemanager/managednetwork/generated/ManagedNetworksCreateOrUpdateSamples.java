// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetwork.generated;

import com.azure.resourcemanager.managednetwork.models.ResourceId;
import com.azure.resourcemanager.managednetwork.models.Scope;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/** Samples for ManagedNetworks CreateOrUpdate. */
public final class ManagedNetworksCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/managednetwork/resource-manager/Microsoft.ManagedNetwork/preview/2019-06-01-preview/examples/ManagedNetwork/ManagedNetworksPut.json
     */
    /**
     * Sample code: ManagedNetworksPut.
     *
     * @param manager Entry point to ManagedNetworkManager.
     */
    public static void managedNetworksPut(com.azure.resourcemanager.managednetwork.ManagedNetworkManager manager) {
        manager
            .managedNetworks()
            .define("myManagedNetwork")
            .withRegion("eastus")
            .withExistingResourceGroup("myResourceGroup")
            .withTags(mapOf())
            .withScope(
                new Scope()
                    .withManagementGroups(
                        Arrays
                            .asList(
                                new ResourceId()
                                    .withId(
                                        "/providers/Microsoft.Management/managementGroups/20000000-0001-0000-0000-000000000000"),
                                new ResourceId()
                                    .withId(
                                        "/providers/Microsoft.Management/managementGroups/20000000-0002-0000-0000-000000000000")))
                    .withSubscriptions(
                        Arrays
                            .asList(new ResourceId().withId("subscriptionA"), new ResourceId().withId("subscriptionB")))
                    .withVirtualNetworks(
                        Arrays
                            .asList(
                                new ResourceId()
                                    .withId(
                                        "/subscriptions/subscriptionC/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/VnetA"),
                                new ResourceId()
                                    .withId(
                                        "/subscriptions/subscriptionC/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/VnetB")))
                    .withSubnets(
                        Arrays
                            .asList(
                                new ResourceId()
                                    .withId(
                                        "/subscriptions/subscriptionC/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/VnetC/subnets/subnetA"),
                                new ResourceId()
                                    .withId(
                                        "/subscriptions/subscriptionC/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/VnetC/subnets/subnetB"))))
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
