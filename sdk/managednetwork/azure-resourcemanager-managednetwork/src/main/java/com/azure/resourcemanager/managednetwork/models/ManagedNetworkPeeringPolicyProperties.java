// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Properties of a Managed Network Peering Policy. */
@Fluent
public class ManagedNetworkPeeringPolicyProperties extends ResourceProperties {
    /*
     * Gets or sets the connectivity type of a network structure policy
     */
    @JsonProperty(value = "type", required = true)
    private Type type;

    /*
     * Gets or sets the hub virtual network ID
     */
    @JsonProperty(value = "hub")
    private ResourceId hub;

    /*
     * Gets or sets the spokes group IDs
     */
    @JsonProperty(value = "spokes")
    private List<ResourceId> spokes;

    /*
     * Gets or sets the mesh group IDs
     */
    @JsonProperty(value = "mesh")
    private List<ResourceId> mesh;

    /**
     * Get the type property: Gets or sets the connectivity type of a network structure policy.
     *
     * @return the type value.
     */
    public Type type() {
        return this.type;
    }

    /**
     * Set the type property: Gets or sets the connectivity type of a network structure policy.
     *
     * @param type the type value to set.
     * @return the ManagedNetworkPeeringPolicyProperties object itself.
     */
    public ManagedNetworkPeeringPolicyProperties withType(Type type) {
        this.type = type;
        return this;
    }

    /**
     * Get the hub property: Gets or sets the hub virtual network ID.
     *
     * @return the hub value.
     */
    public ResourceId hub() {
        return this.hub;
    }

    /**
     * Set the hub property: Gets or sets the hub virtual network ID.
     *
     * @param hub the hub value to set.
     * @return the ManagedNetworkPeeringPolicyProperties object itself.
     */
    public ManagedNetworkPeeringPolicyProperties withHub(ResourceId hub) {
        this.hub = hub;
        return this;
    }

    /**
     * Get the spokes property: Gets or sets the spokes group IDs.
     *
     * @return the spokes value.
     */
    public List<ResourceId> spokes() {
        return this.spokes;
    }

    /**
     * Set the spokes property: Gets or sets the spokes group IDs.
     *
     * @param spokes the spokes value to set.
     * @return the ManagedNetworkPeeringPolicyProperties object itself.
     */
    public ManagedNetworkPeeringPolicyProperties withSpokes(List<ResourceId> spokes) {
        this.spokes = spokes;
        return this;
    }

    /**
     * Get the mesh property: Gets or sets the mesh group IDs.
     *
     * @return the mesh value.
     */
    public List<ResourceId> mesh() {
        return this.mesh;
    }

    /**
     * Set the mesh property: Gets or sets the mesh group IDs.
     *
     * @param mesh the mesh value to set.
     * @return the ManagedNetworkPeeringPolicyProperties object itself.
     */
    public ManagedNetworkPeeringPolicyProperties withMesh(List<ResourceId> mesh) {
        this.mesh = mesh;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (type() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property type in model ManagedNetworkPeeringPolicyProperties"));
        }
        if (hub() != null) {
            hub().validate();
        }
        if (spokes() != null) {
            spokes().forEach(e -> e.validate());
        }
        if (mesh() != null) {
            mesh().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ManagedNetworkPeeringPolicyProperties.class);
}
