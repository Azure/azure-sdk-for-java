// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetwork.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managednetwork.fluent.models.ManagedNetworkPeeringPolicyInner;
import com.azure.resourcemanager.managednetwork.models.ManagedNetworkPeeringPolicy;
import com.azure.resourcemanager.managednetwork.models.ManagedNetworkPeeringPolicyProperties;

public final class ManagedNetworkPeeringPolicyImpl
    implements ManagedNetworkPeeringPolicy, ManagedNetworkPeeringPolicy.Definition, ManagedNetworkPeeringPolicy.Update {
    private ManagedNetworkPeeringPolicyInner innerObject;

    private final com.azure.resourcemanager.managednetwork.ManagedNetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ManagedNetworkPeeringPolicyProperties properties() {
        return this.innerModel().properties();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public ManagedNetworkPeeringPolicyInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.managednetwork.ManagedNetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String managedNetworkName;

    private String managedNetworkPeeringPolicyName;

    public ManagedNetworkPeeringPolicyImpl withExistingManagedNetwork(
        String resourceGroupName, String managedNetworkName) {
        this.resourceGroupName = resourceGroupName;
        this.managedNetworkName = managedNetworkName;
        return this;
    }

    public ManagedNetworkPeeringPolicy create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedNetworkPeeringPolicies()
                .createOrUpdate(
                    resourceGroupName,
                    managedNetworkName,
                    managedNetworkPeeringPolicyName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public ManagedNetworkPeeringPolicy create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedNetworkPeeringPolicies()
                .createOrUpdate(
                    resourceGroupName, managedNetworkName, managedNetworkPeeringPolicyName, this.innerModel(), context);
        return this;
    }

    ManagedNetworkPeeringPolicyImpl(
        String name, com.azure.resourcemanager.managednetwork.ManagedNetworkManager serviceManager) {
        this.innerObject = new ManagedNetworkPeeringPolicyInner();
        this.serviceManager = serviceManager;
        this.managedNetworkPeeringPolicyName = name;
    }

    public ManagedNetworkPeeringPolicyImpl update() {
        return this;
    }

    public ManagedNetworkPeeringPolicy apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedNetworkPeeringPolicies()
                .createOrUpdate(
                    resourceGroupName,
                    managedNetworkName,
                    managedNetworkPeeringPolicyName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public ManagedNetworkPeeringPolicy apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedNetworkPeeringPolicies()
                .createOrUpdate(
                    resourceGroupName, managedNetworkName, managedNetworkPeeringPolicyName, this.innerModel(), context);
        return this;
    }

    ManagedNetworkPeeringPolicyImpl(
        ManagedNetworkPeeringPolicyInner innerObject,
        com.azure.resourcemanager.managednetwork.ManagedNetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.managedNetworkName = Utils.getValueFromIdByName(innerObject.id(), "managedNetworks");
        this.managedNetworkPeeringPolicyName =
            Utils.getValueFromIdByName(innerObject.id(), "managedNetworkPeeringPolicies");
    }

    public ManagedNetworkPeeringPolicy refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedNetworkPeeringPolicies()
                .getWithResponse(resourceGroupName, managedNetworkName, managedNetworkPeeringPolicyName, Context.NONE)
                .getValue();
        return this;
    }

    public ManagedNetworkPeeringPolicy refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedNetworkPeeringPolicies()
                .getWithResponse(resourceGroupName, managedNetworkName, managedNetworkPeeringPolicyName, context)
                .getValue();
        return this;
    }

    public ManagedNetworkPeeringPolicyImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ManagedNetworkPeeringPolicyImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ManagedNetworkPeeringPolicyImpl withProperties(ManagedNetworkPeeringPolicyProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
