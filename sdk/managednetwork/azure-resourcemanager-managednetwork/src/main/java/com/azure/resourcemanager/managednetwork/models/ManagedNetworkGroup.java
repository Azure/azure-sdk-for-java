// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetwork.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.managednetwork.fluent.models.ManagedNetworkGroupInner;
import java.util.List;

/** An immutable client-side representation of ManagedNetworkGroup. */
public interface ManagedNetworkGroup {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the kind property: Responsibility role under which this Managed Network Group will be created.
     *
     * @return the kind value.
     */
    Kind kind();

    /**
     * Gets the managementGroups property: The collection of management groups covered by the Managed Network.
     *
     * @return the managementGroups value.
     */
    List<ResourceId> managementGroups();

    /**
     * Gets the subscriptions property: The collection of subscriptions covered by the Managed Network.
     *
     * @return the subscriptions value.
     */
    List<ResourceId> subscriptions();

    /**
     * Gets the virtualNetworks property: The collection of virtual nets covered by the Managed Network.
     *
     * @return the virtualNetworks value.
     */
    List<ResourceId> virtualNetworks();

    /**
     * Gets the subnets property: The collection of subnets covered by the Managed Network.
     *
     * @return the subnets value.
     */
    List<ResourceId> subnets();

    /**
     * Gets the provisioningState property: Provisioning state of the ManagedNetwork resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the etag property: A unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the inner com.azure.resourcemanager.managednetwork.fluent.models.ManagedNetworkGroupInner object.
     *
     * @return the inner object.
     */
    ManagedNetworkGroupInner innerModel();

    /** The entirety of the ManagedNetworkGroup definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ManagedNetworkGroup definition stages. */
    interface DefinitionStages {
        /** The first stage of the ManagedNetworkGroup definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ManagedNetworkGroup definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, managedNetworkName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param managedNetworkName The name of the Managed Network.
             * @return the next definition stage.
             */
            WithCreate withExistingManagedNetwork(String resourceGroupName, String managedNetworkName);
        }
        /**
         * The stage of the ManagedNetworkGroup definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithKind,
                DefinitionStages.WithManagementGroups,
                DefinitionStages.WithSubscriptions,
                DefinitionStages.WithVirtualNetworks,
                DefinitionStages.WithSubnets {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ManagedNetworkGroup create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ManagedNetworkGroup create(Context context);
        }
        /** The stage of the ManagedNetworkGroup definition allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Responsibility role under which this Managed Network Group will be created.
             *
             * @param kind Responsibility role under which this Managed Network Group will be created.
             * @return the next definition stage.
             */
            WithCreate withKind(Kind kind);
        }
        /** The stage of the ManagedNetworkGroup definition allowing to specify managementGroups. */
        interface WithManagementGroups {
            /**
             * Specifies the managementGroups property: The collection of management groups covered by the Managed
             * Network.
             *
             * @param managementGroups The collection of management groups covered by the Managed Network.
             * @return the next definition stage.
             */
            WithCreate withManagementGroups(List<ResourceId> managementGroups);
        }
        /** The stage of the ManagedNetworkGroup definition allowing to specify subscriptions. */
        interface WithSubscriptions {
            /**
             * Specifies the subscriptions property: The collection of subscriptions covered by the Managed Network.
             *
             * @param subscriptions The collection of subscriptions covered by the Managed Network.
             * @return the next definition stage.
             */
            WithCreate withSubscriptions(List<ResourceId> subscriptions);
        }
        /** The stage of the ManagedNetworkGroup definition allowing to specify virtualNetworks. */
        interface WithVirtualNetworks {
            /**
             * Specifies the virtualNetworks property: The collection of virtual nets covered by the Managed Network.
             *
             * @param virtualNetworks The collection of virtual nets covered by the Managed Network.
             * @return the next definition stage.
             */
            WithCreate withVirtualNetworks(List<ResourceId> virtualNetworks);
        }
        /** The stage of the ManagedNetworkGroup definition allowing to specify subnets. */
        interface WithSubnets {
            /**
             * Specifies the subnets property: The collection of subnets covered by the Managed Network.
             *
             * @param subnets The collection of subnets covered by the Managed Network.
             * @return the next definition stage.
             */
            WithCreate withSubnets(List<ResourceId> subnets);
        }
    }
    /**
     * Begins update for the ManagedNetworkGroup resource.
     *
     * @return the stage of resource update.
     */
    ManagedNetworkGroup.Update update();

    /** The template for ManagedNetworkGroup update. */
    interface Update
        extends UpdateStages.WithKind,
            UpdateStages.WithManagementGroups,
            UpdateStages.WithSubscriptions,
            UpdateStages.WithVirtualNetworks,
            UpdateStages.WithSubnets {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ManagedNetworkGroup apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ManagedNetworkGroup apply(Context context);
    }
    /** The ManagedNetworkGroup update stages. */
    interface UpdateStages {
        /** The stage of the ManagedNetworkGroup update allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Responsibility role under which this Managed Network Group will be created.
             *
             * @param kind Responsibility role under which this Managed Network Group will be created.
             * @return the next definition stage.
             */
            Update withKind(Kind kind);
        }
        /** The stage of the ManagedNetworkGroup update allowing to specify managementGroups. */
        interface WithManagementGroups {
            /**
             * Specifies the managementGroups property: The collection of management groups covered by the Managed
             * Network.
             *
             * @param managementGroups The collection of management groups covered by the Managed Network.
             * @return the next definition stage.
             */
            Update withManagementGroups(List<ResourceId> managementGroups);
        }
        /** The stage of the ManagedNetworkGroup update allowing to specify subscriptions. */
        interface WithSubscriptions {
            /**
             * Specifies the subscriptions property: The collection of subscriptions covered by the Managed Network.
             *
             * @param subscriptions The collection of subscriptions covered by the Managed Network.
             * @return the next definition stage.
             */
            Update withSubscriptions(List<ResourceId> subscriptions);
        }
        /** The stage of the ManagedNetworkGroup update allowing to specify virtualNetworks. */
        interface WithVirtualNetworks {
            /**
             * Specifies the virtualNetworks property: The collection of virtual nets covered by the Managed Network.
             *
             * @param virtualNetworks The collection of virtual nets covered by the Managed Network.
             * @return the next definition stage.
             */
            Update withVirtualNetworks(List<ResourceId> virtualNetworks);
        }
        /** The stage of the ManagedNetworkGroup update allowing to specify subnets. */
        interface WithSubnets {
            /**
             * Specifies the subnets property: The collection of subnets covered by the Managed Network.
             *
             * @param subnets The collection of subnets covered by the Managed Network.
             * @return the next definition stage.
             */
            Update withSubnets(List<ResourceId> subnets);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ManagedNetworkGroup refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ManagedNetworkGroup refresh(Context context);
}
