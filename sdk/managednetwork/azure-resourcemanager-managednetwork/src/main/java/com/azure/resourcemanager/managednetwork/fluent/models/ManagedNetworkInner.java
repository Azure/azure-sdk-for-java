// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetwork.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.managednetwork.models.ConnectivityCollection;
import com.azure.resourcemanager.managednetwork.models.ProvisioningState;
import com.azure.resourcemanager.managednetwork.models.Scope;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The Managed Network resource. */
@Fluent
public final class ManagedNetworkInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ManagedNetworkInner.class);

    /*
     * The MNC properties
     */
    @JsonProperty(value = "properties")
    private ManagedNetworkProperties innerProperties;

    /**
     * Get the innerProperties property: The MNC properties.
     *
     * @return the innerProperties value.
     */
    private ManagedNetworkProperties innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public ManagedNetworkInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ManagedNetworkInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the scope property: The collection of management groups, subscriptions, virtual networks, and subnets by the
     * Managed Network. This is a read-only property that is reflective of all ScopeAssignments for this Managed
     * Network.
     *
     * @return the scope value.
     */
    public Scope scope() {
        return this.innerProperties() == null ? null : this.innerProperties().scope();
    }

    /**
     * Set the scope property: The collection of management groups, subscriptions, virtual networks, and subnets by the
     * Managed Network. This is a read-only property that is reflective of all ScopeAssignments for this Managed
     * Network.
     *
     * @param scope the scope value to set.
     * @return the ManagedNetworkInner object itself.
     */
    public ManagedNetworkInner withScope(Scope scope) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ManagedNetworkProperties();
        }
        this.innerProperties().withScope(scope);
        return this;
    }

    /**
     * Get the connectivity property: The collection of groups and policies concerned with connectivity.
     *
     * @return the connectivity value.
     */
    public ConnectivityCollection connectivity() {
        return this.innerProperties() == null ? null : this.innerProperties().connectivity();
    }

    /**
     * Get the provisioningState property: Provisioning state of the ManagedNetwork resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the etag property: A unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    public String etag() {
        return this.innerProperties() == null ? null : this.innerProperties().etag();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
