// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetwork.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ManagedNetworkGroups. */
public interface ManagedNetworkGroups {
    /**
     * The Get ManagedNetworkGroups operation gets a Managed Network Group specified by the resource group, Managed
     * Network name, and group name.
     *
     * @param resourceGroupName The name of the resource group.
     * @param managedNetworkName The name of the Managed Network.
     * @param managedNetworkGroupName The name of the Managed Network Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Managed Network Group resource.
     */
    ManagedNetworkGroup get(String resourceGroupName, String managedNetworkName, String managedNetworkGroupName);

    /**
     * The Get ManagedNetworkGroups operation gets a Managed Network Group specified by the resource group, Managed
     * Network name, and group name.
     *
     * @param resourceGroupName The name of the resource group.
     * @param managedNetworkName The name of the Managed Network.
     * @param managedNetworkGroupName The name of the Managed Network Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Managed Network Group resource along with {@link Response}.
     */
    Response<ManagedNetworkGroup> getWithResponse(
        String resourceGroupName, String managedNetworkName, String managedNetworkGroupName, Context context);

    /**
     * The Delete ManagedNetworkGroups operation deletes a Managed Network Group specified by the resource group,
     * Managed Network name, and group name.
     *
     * @param resourceGroupName The name of the resource group.
     * @param managedNetworkName The name of the Managed Network.
     * @param managedNetworkGroupName The name of the Managed Network Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String managedNetworkName, String managedNetworkGroupName);

    /**
     * The Delete ManagedNetworkGroups operation deletes a Managed Network Group specified by the resource group,
     * Managed Network name, and group name.
     *
     * @param resourceGroupName The name of the resource group.
     * @param managedNetworkName The name of the Managed Network.
     * @param managedNetworkGroupName The name of the Managed Network Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String managedNetworkName, String managedNetworkGroupName, Context context);

    /**
     * The ListByManagedNetwork ManagedNetworkGroup operation retrieves all the Managed Network Groups in a specified
     * Managed Networks in a paginated format.
     *
     * @param resourceGroupName The name of the resource group.
     * @param managedNetworkName The name of the Managed Network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the request to list Managed Network Groups as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ManagedNetworkGroup> listByManagedNetwork(String resourceGroupName, String managedNetworkName);

    /**
     * The ListByManagedNetwork ManagedNetworkGroup operation retrieves all the Managed Network Groups in a specified
     * Managed Networks in a paginated format.
     *
     * @param resourceGroupName The name of the resource group.
     * @param managedNetworkName The name of the Managed Network.
     * @param top May be used to limit the number of results in a page for list queries.
     * @param skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response
     *     contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that
     *     specifies a starting point to use for subsequent calls.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the request to list Managed Network Groups as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ManagedNetworkGroup> listByManagedNetwork(
        String resourceGroupName, String managedNetworkName, Integer top, String skiptoken, Context context);

    /**
     * The Get ManagedNetworkGroups operation gets a Managed Network Group specified by the resource group, Managed
     * Network name, and group name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Managed Network Group resource along with {@link Response}.
     */
    ManagedNetworkGroup getById(String id);

    /**
     * The Get ManagedNetworkGroups operation gets a Managed Network Group specified by the resource group, Managed
     * Network name, and group name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Managed Network Group resource along with {@link Response}.
     */
    Response<ManagedNetworkGroup> getByIdWithResponse(String id, Context context);

    /**
     * The Delete ManagedNetworkGroups operation deletes a Managed Network Group specified by the resource group,
     * Managed Network name, and group name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * The Delete ManagedNetworkGroups operation deletes a Managed Network Group specified by the resource group,
     * Managed Network name, and group name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ManagedNetworkGroup resource.
     *
     * @param name resource name.
     * @return the first stage of the new ManagedNetworkGroup definition.
     */
    ManagedNetworkGroup.DefinitionStages.Blank define(String name);
}
