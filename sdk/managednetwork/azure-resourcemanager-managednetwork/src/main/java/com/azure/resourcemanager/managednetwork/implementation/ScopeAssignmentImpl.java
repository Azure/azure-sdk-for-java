// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetwork.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managednetwork.fluent.models.ScopeAssignmentInner;
import com.azure.resourcemanager.managednetwork.models.ProvisioningState;
import com.azure.resourcemanager.managednetwork.models.ScopeAssignment;

public final class ScopeAssignmentImpl implements ScopeAssignment, ScopeAssignment.Definition, ScopeAssignment.Update {
    private ScopeAssignmentInner innerObject;

    private final com.azure.resourcemanager.managednetwork.ManagedNetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public String assignedManagedNetwork() {
        return this.innerModel().assignedManagedNetwork();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public ScopeAssignmentInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.managednetwork.ManagedNetworkManager manager() {
        return this.serviceManager;
    }

    private String scope;

    private String scopeAssignmentName;

    public ScopeAssignmentImpl withExistingScope(String scope) {
        this.scope = scope;
        return this;
    }

    public ScopeAssignment create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getScopeAssignments()
                .createOrUpdateWithResponse(scope, scopeAssignmentName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ScopeAssignment create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getScopeAssignments()
                .createOrUpdateWithResponse(scope, scopeAssignmentName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ScopeAssignmentImpl(String name, com.azure.resourcemanager.managednetwork.ManagedNetworkManager serviceManager) {
        this.innerObject = new ScopeAssignmentInner();
        this.serviceManager = serviceManager;
        this.scopeAssignmentName = name;
    }

    public ScopeAssignmentImpl update() {
        return this;
    }

    public ScopeAssignment apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getScopeAssignments()
                .createOrUpdateWithResponse(scope, scopeAssignmentName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ScopeAssignment apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getScopeAssignments()
                .createOrUpdateWithResponse(scope, scopeAssignmentName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ScopeAssignmentImpl(
        ScopeAssignmentInner innerObject,
        com.azure.resourcemanager.managednetwork.ManagedNetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.scope =
            Utils
                .getValueFromIdByParameterName(
                    innerObject.id(),
                    "/{scope}/providers/Microsoft.ManagedNetwork/scopeAssignments/{scopeAssignmentName}",
                    "scope");
        this.scopeAssignmentName =
            Utils
                .getValueFromIdByParameterName(
                    innerObject.id(),
                    "/{scope}/providers/Microsoft.ManagedNetwork/scopeAssignments/{scopeAssignmentName}",
                    "scopeAssignmentName");
    }

    public ScopeAssignment refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getScopeAssignments()
                .getWithResponse(scope, scopeAssignmentName, Context.NONE)
                .getValue();
        return this;
    }

    public ScopeAssignment refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getScopeAssignments()
                .getWithResponse(scope, scopeAssignmentName, context)
                .getValue();
        return this;
    }

    public ScopeAssignmentImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ScopeAssignmentImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ScopeAssignmentImpl withAssignedManagedNetwork(String assignedManagedNetwork) {
        this.innerModel().withAssignedManagedNetwork(assignedManagedNetwork);
        return this;
    }
}
