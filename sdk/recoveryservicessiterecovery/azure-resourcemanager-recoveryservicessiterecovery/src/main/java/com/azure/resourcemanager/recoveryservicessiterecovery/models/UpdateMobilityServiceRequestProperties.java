// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties of an update mobility service request.
 */
@Fluent
public final class UpdateMobilityServiceRequestProperties
    implements JsonSerializable<UpdateMobilityServiceRequestProperties> {
    /*
     * The CS run as account Id.
     */
    private String runAsAccountId;

    /**
     * Creates an instance of UpdateMobilityServiceRequestProperties class.
     */
    public UpdateMobilityServiceRequestProperties() {
    }

    /**
     * Get the runAsAccountId property: The CS run as account Id.
     * 
     * @return the runAsAccountId value.
     */
    public String runAsAccountId() {
        return this.runAsAccountId;
    }

    /**
     * Set the runAsAccountId property: The CS run as account Id.
     * 
     * @param runAsAccountId the runAsAccountId value to set.
     * @return the UpdateMobilityServiceRequestProperties object itself.
     */
    public UpdateMobilityServiceRequestProperties withRunAsAccountId(String runAsAccountId) {
        this.runAsAccountId = runAsAccountId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("runAsAccountId", this.runAsAccountId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UpdateMobilityServiceRequestProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UpdateMobilityServiceRequestProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the UpdateMobilityServiceRequestProperties.
     */
    public static UpdateMobilityServiceRequestProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UpdateMobilityServiceRequestProperties deserializedUpdateMobilityServiceRequestProperties
                = new UpdateMobilityServiceRequestProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("runAsAccountId".equals(fieldName)) {
                    deserializedUpdateMobilityServiceRequestProperties.runAsAccountId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUpdateMobilityServiceRequestProperties;
        });
    }
}
