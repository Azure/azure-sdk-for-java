// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * InMageRcm appliance details.
 */
@Immutable
public final class InMageRcmApplianceDetails implements JsonSerializable<InMageRcmApplianceDetails> {
    /*
     * The appliance Id.
     */
    private String id;

    /*
     * The appliance name.
     */
    private String name;

    /*
     * The fabric ARM Id.
     */
    private String fabricArmId;

    /*
     * The process server.
     */
    private ProcessServerDetails processServer;

    /*
     * The of RCM proxy.
     */
    private RcmProxyDetails rcmProxy;

    /*
     * The push installer.
     */
    private PushInstallerDetails pushInstaller;

    /*
     * The replication agent.
     */
    private ReplicationAgentDetails replicationAgent;

    /*
     * The reprotect agent.
     */
    private ReprotectAgentDetails reprotectAgent;

    /*
     * The Mars agent.
     */
    private MarsAgentDetails marsAgent;

    /*
     * The DRA.
     */
    private DraDetails dra;

    /*
     * The switch provider blocking error information.
     */
    private List<InMageRcmFabricSwitchProviderBlockingErrorDetails> switchProviderBlockingErrorDetails;

    /**
     * Creates an instance of InMageRcmApplianceDetails class.
     */
    public InMageRcmApplianceDetails() {
    }

    /**
     * Get the id property: The appliance Id.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: The appliance name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the fabricArmId property: The fabric ARM Id.
     * 
     * @return the fabricArmId value.
     */
    public String fabricArmId() {
        return this.fabricArmId;
    }

    /**
     * Get the processServer property: The process server.
     * 
     * @return the processServer value.
     */
    public ProcessServerDetails processServer() {
        return this.processServer;
    }

    /**
     * Get the rcmProxy property: The of RCM proxy.
     * 
     * @return the rcmProxy value.
     */
    public RcmProxyDetails rcmProxy() {
        return this.rcmProxy;
    }

    /**
     * Get the pushInstaller property: The push installer.
     * 
     * @return the pushInstaller value.
     */
    public PushInstallerDetails pushInstaller() {
        return this.pushInstaller;
    }

    /**
     * Get the replicationAgent property: The replication agent.
     * 
     * @return the replicationAgent value.
     */
    public ReplicationAgentDetails replicationAgent() {
        return this.replicationAgent;
    }

    /**
     * Get the reprotectAgent property: The reprotect agent.
     * 
     * @return the reprotectAgent value.
     */
    public ReprotectAgentDetails reprotectAgent() {
        return this.reprotectAgent;
    }

    /**
     * Get the marsAgent property: The Mars agent.
     * 
     * @return the marsAgent value.
     */
    public MarsAgentDetails marsAgent() {
        return this.marsAgent;
    }

    /**
     * Get the dra property: The DRA.
     * 
     * @return the dra value.
     */
    public DraDetails dra() {
        return this.dra;
    }

    /**
     * Get the switchProviderBlockingErrorDetails property: The switch provider blocking error information.
     * 
     * @return the switchProviderBlockingErrorDetails value.
     */
    public List<InMageRcmFabricSwitchProviderBlockingErrorDetails> switchProviderBlockingErrorDetails() {
        return this.switchProviderBlockingErrorDetails;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (processServer() != null) {
            processServer().validate();
        }
        if (rcmProxy() != null) {
            rcmProxy().validate();
        }
        if (pushInstaller() != null) {
            pushInstaller().validate();
        }
        if (replicationAgent() != null) {
            replicationAgent().validate();
        }
        if (reprotectAgent() != null) {
            reprotectAgent().validate();
        }
        if (marsAgent() != null) {
            marsAgent().validate();
        }
        if (dra() != null) {
            dra().validate();
        }
        if (switchProviderBlockingErrorDetails() != null) {
            switchProviderBlockingErrorDetails().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InMageRcmApplianceDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InMageRcmApplianceDetails if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InMageRcmApplianceDetails.
     */
    public static InMageRcmApplianceDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InMageRcmApplianceDetails deserializedInMageRcmApplianceDetails = new InMageRcmApplianceDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedInMageRcmApplianceDetails.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedInMageRcmApplianceDetails.name = reader.getString();
                } else if ("fabricArmId".equals(fieldName)) {
                    deserializedInMageRcmApplianceDetails.fabricArmId = reader.getString();
                } else if ("processServer".equals(fieldName)) {
                    deserializedInMageRcmApplianceDetails.processServer = ProcessServerDetails.fromJson(reader);
                } else if ("rcmProxy".equals(fieldName)) {
                    deserializedInMageRcmApplianceDetails.rcmProxy = RcmProxyDetails.fromJson(reader);
                } else if ("pushInstaller".equals(fieldName)) {
                    deserializedInMageRcmApplianceDetails.pushInstaller = PushInstallerDetails.fromJson(reader);
                } else if ("replicationAgent".equals(fieldName)) {
                    deserializedInMageRcmApplianceDetails.replicationAgent = ReplicationAgentDetails.fromJson(reader);
                } else if ("reprotectAgent".equals(fieldName)) {
                    deserializedInMageRcmApplianceDetails.reprotectAgent = ReprotectAgentDetails.fromJson(reader);
                } else if ("marsAgent".equals(fieldName)) {
                    deserializedInMageRcmApplianceDetails.marsAgent = MarsAgentDetails.fromJson(reader);
                } else if ("dra".equals(fieldName)) {
                    deserializedInMageRcmApplianceDetails.dra = DraDetails.fromJson(reader);
                } else if ("switchProviderBlockingErrorDetails".equals(fieldName)) {
                    List<InMageRcmFabricSwitchProviderBlockingErrorDetails> switchProviderBlockingErrorDetails = reader
                        .readArray(reader1 -> InMageRcmFabricSwitchProviderBlockingErrorDetails.fromJson(reader1));
                    deserializedInMageRcmApplianceDetails.switchProviderBlockingErrorDetails
                        = switchProviderBlockingErrorDetails;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInMageRcmApplianceDetails;
        });
    }
}
