// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Critical past job details of the migration item. */
@Immutable
public final class CriticalJobHistoryDetails {
    /*
     * The job name.
     */
    @JsonProperty(value = "jobName", access = JsonProperty.Access.WRITE_ONLY)
    private String jobName;

    /*
     * The ARM Id of the job being executed.
     */
    @JsonProperty(value = "jobId", access = JsonProperty.Access.WRITE_ONLY)
    private String jobId;

    /*
     * The start time of the job.
     */
    @JsonProperty(value = "startTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime startTime;

    /*
     * The job state.
     */
    @JsonProperty(value = "jobStatus", access = JsonProperty.Access.WRITE_ONLY)
    private String jobStatus;

    /** Creates an instance of CriticalJobHistoryDetails class. */
    public CriticalJobHistoryDetails() {
    }

    /**
     * Get the jobName property: The job name.
     *
     * @return the jobName value.
     */
    public String jobName() {
        return this.jobName;
    }

    /**
     * Get the jobId property: The ARM Id of the job being executed.
     *
     * @return the jobId value.
     */
    public String jobId() {
        return this.jobId;
    }

    /**
     * Get the startTime property: The start time of the job.
     *
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Get the jobStatus property: The job state.
     *
     * @return the jobStatus value.
     */
    public String jobStatus() {
        return this.jobStatus;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
