// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Replication protected item custom data details.
 */
@Fluent
public final class ProtectableItemProperties implements JsonSerializable<ProtectableItemProperties> {
    /*
     * The name.
     */
    private String friendlyName;

    /*
     * The protection status.
     */
    private String protectionStatus;

    /*
     * The ARM resource of protected items.
     */
    private String replicationProtectedItemId;

    /*
     * The recovery provider ARM Id.
     */
    private String recoveryServicesProviderId;

    /*
     * The Current protection readiness errors.
     */
    private List<String> protectionReadinessErrors;

    /*
     * The list of replication providers supported for the protectable item.
     */
    private List<String> supportedReplicationProviders;

    /*
     * The Replication provider custom settings.
     */
    private ConfigurationSettings customDetails;

    /**
     * Creates an instance of ProtectableItemProperties class.
     */
    public ProtectableItemProperties() {
    }

    /**
     * Get the friendlyName property: The name.
     * 
     * @return the friendlyName value.
     */
    public String friendlyName() {
        return this.friendlyName;
    }

    /**
     * Set the friendlyName property: The name.
     * 
     * @param friendlyName the friendlyName value to set.
     * @return the ProtectableItemProperties object itself.
     */
    public ProtectableItemProperties withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }

    /**
     * Get the protectionStatus property: The protection status.
     * 
     * @return the protectionStatus value.
     */
    public String protectionStatus() {
        return this.protectionStatus;
    }

    /**
     * Set the protectionStatus property: The protection status.
     * 
     * @param protectionStatus the protectionStatus value to set.
     * @return the ProtectableItemProperties object itself.
     */
    public ProtectableItemProperties withProtectionStatus(String protectionStatus) {
        this.protectionStatus = protectionStatus;
        return this;
    }

    /**
     * Get the replicationProtectedItemId property: The ARM resource of protected items.
     * 
     * @return the replicationProtectedItemId value.
     */
    public String replicationProtectedItemId() {
        return this.replicationProtectedItemId;
    }

    /**
     * Set the replicationProtectedItemId property: The ARM resource of protected items.
     * 
     * @param replicationProtectedItemId the replicationProtectedItemId value to set.
     * @return the ProtectableItemProperties object itself.
     */
    public ProtectableItemProperties withReplicationProtectedItemId(String replicationProtectedItemId) {
        this.replicationProtectedItemId = replicationProtectedItemId;
        return this;
    }

    /**
     * Get the recoveryServicesProviderId property: The recovery provider ARM Id.
     * 
     * @return the recoveryServicesProviderId value.
     */
    public String recoveryServicesProviderId() {
        return this.recoveryServicesProviderId;
    }

    /**
     * Set the recoveryServicesProviderId property: The recovery provider ARM Id.
     * 
     * @param recoveryServicesProviderId the recoveryServicesProviderId value to set.
     * @return the ProtectableItemProperties object itself.
     */
    public ProtectableItemProperties withRecoveryServicesProviderId(String recoveryServicesProviderId) {
        this.recoveryServicesProviderId = recoveryServicesProviderId;
        return this;
    }

    /**
     * Get the protectionReadinessErrors property: The Current protection readiness errors.
     * 
     * @return the protectionReadinessErrors value.
     */
    public List<String> protectionReadinessErrors() {
        return this.protectionReadinessErrors;
    }

    /**
     * Set the protectionReadinessErrors property: The Current protection readiness errors.
     * 
     * @param protectionReadinessErrors the protectionReadinessErrors value to set.
     * @return the ProtectableItemProperties object itself.
     */
    public ProtectableItemProperties withProtectionReadinessErrors(List<String> protectionReadinessErrors) {
        this.protectionReadinessErrors = protectionReadinessErrors;
        return this;
    }

    /**
     * Get the supportedReplicationProviders property: The list of replication providers supported for the protectable
     * item.
     * 
     * @return the supportedReplicationProviders value.
     */
    public List<String> supportedReplicationProviders() {
        return this.supportedReplicationProviders;
    }

    /**
     * Set the supportedReplicationProviders property: The list of replication providers supported for the protectable
     * item.
     * 
     * @param supportedReplicationProviders the supportedReplicationProviders value to set.
     * @return the ProtectableItemProperties object itself.
     */
    public ProtectableItemProperties withSupportedReplicationProviders(List<String> supportedReplicationProviders) {
        this.supportedReplicationProviders = supportedReplicationProviders;
        return this;
    }

    /**
     * Get the customDetails property: The Replication provider custom settings.
     * 
     * @return the customDetails value.
     */
    public ConfigurationSettings customDetails() {
        return this.customDetails;
    }

    /**
     * Set the customDetails property: The Replication provider custom settings.
     * 
     * @param customDetails the customDetails value to set.
     * @return the ProtectableItemProperties object itself.
     */
    public ProtectableItemProperties withCustomDetails(ConfigurationSettings customDetails) {
        this.customDetails = customDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (customDetails() != null) {
            customDetails().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("friendlyName", this.friendlyName);
        jsonWriter.writeStringField("protectionStatus", this.protectionStatus);
        jsonWriter.writeStringField("replicationProtectedItemId", this.replicationProtectedItemId);
        jsonWriter.writeStringField("recoveryServicesProviderId", this.recoveryServicesProviderId);
        jsonWriter.writeArrayField("protectionReadinessErrors", this.protectionReadinessErrors,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("supportedReplicationProviders", this.supportedReplicationProviders,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("customDetails", this.customDetails);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ProtectableItemProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ProtectableItemProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ProtectableItemProperties.
     */
    public static ProtectableItemProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ProtectableItemProperties deserializedProtectableItemProperties = new ProtectableItemProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("friendlyName".equals(fieldName)) {
                    deserializedProtectableItemProperties.friendlyName = reader.getString();
                } else if ("protectionStatus".equals(fieldName)) {
                    deserializedProtectableItemProperties.protectionStatus = reader.getString();
                } else if ("replicationProtectedItemId".equals(fieldName)) {
                    deserializedProtectableItemProperties.replicationProtectedItemId = reader.getString();
                } else if ("recoveryServicesProviderId".equals(fieldName)) {
                    deserializedProtectableItemProperties.recoveryServicesProviderId = reader.getString();
                } else if ("protectionReadinessErrors".equals(fieldName)) {
                    List<String> protectionReadinessErrors = reader.readArray(reader1 -> reader1.getString());
                    deserializedProtectableItemProperties.protectionReadinessErrors = protectionReadinessErrors;
                } else if ("supportedReplicationProviders".equals(fieldName)) {
                    List<String> supportedReplicationProviders = reader.readArray(reader1 -> reader1.getString());
                    deserializedProtectableItemProperties.supportedReplicationProviders = supportedReplicationProviders;
                } else if ("customDetails".equals(fieldName)) {
                    deserializedProtectableItemProperties.customDetails = ConfigurationSettings.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedProtectableItemProperties;
        });
    }
}
