// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Failover details for a replication protected item.
 */
@Fluent
public final class FailoverReplicationProtectedItemDetails
    implements JsonSerializable<FailoverReplicationProtectedItemDetails> {
    /*
     * The name.
     */
    private String name;

    /*
     * The friendly name.
     */
    private String friendlyName;

    /*
     * The test Vm name.
     */
    private String testVmName;

    /*
     * The test Vm friendly name.
     */
    private String testVmFriendlyName;

    /*
     * The network connection status.
     */
    private String networkConnectionStatus;

    /*
     * The network friendly name.
     */
    private String networkFriendlyName;

    /*
     * The network subnet.
     */
    private String subnet;

    /*
     * The recovery point Id.
     */
    private String recoveryPointId;

    /*
     * The recovery point time.
     */
    private OffsetDateTime recoveryPointTime;

    /**
     * Creates an instance of FailoverReplicationProtectedItemDetails class.
     */
    public FailoverReplicationProtectedItemDetails() {
    }

    /**
     * Get the name property: The name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name.
     * 
     * @param name the name value to set.
     * @return the FailoverReplicationProtectedItemDetails object itself.
     */
    public FailoverReplicationProtectedItemDetails withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the friendlyName property: The friendly name.
     * 
     * @return the friendlyName value.
     */
    public String friendlyName() {
        return this.friendlyName;
    }

    /**
     * Set the friendlyName property: The friendly name.
     * 
     * @param friendlyName the friendlyName value to set.
     * @return the FailoverReplicationProtectedItemDetails object itself.
     */
    public FailoverReplicationProtectedItemDetails withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }

    /**
     * Get the testVmName property: The test Vm name.
     * 
     * @return the testVmName value.
     */
    public String testVmName() {
        return this.testVmName;
    }

    /**
     * Set the testVmName property: The test Vm name.
     * 
     * @param testVmName the testVmName value to set.
     * @return the FailoverReplicationProtectedItemDetails object itself.
     */
    public FailoverReplicationProtectedItemDetails withTestVmName(String testVmName) {
        this.testVmName = testVmName;
        return this;
    }

    /**
     * Get the testVmFriendlyName property: The test Vm friendly name.
     * 
     * @return the testVmFriendlyName value.
     */
    public String testVmFriendlyName() {
        return this.testVmFriendlyName;
    }

    /**
     * Set the testVmFriendlyName property: The test Vm friendly name.
     * 
     * @param testVmFriendlyName the testVmFriendlyName value to set.
     * @return the FailoverReplicationProtectedItemDetails object itself.
     */
    public FailoverReplicationProtectedItemDetails withTestVmFriendlyName(String testVmFriendlyName) {
        this.testVmFriendlyName = testVmFriendlyName;
        return this;
    }

    /**
     * Get the networkConnectionStatus property: The network connection status.
     * 
     * @return the networkConnectionStatus value.
     */
    public String networkConnectionStatus() {
        return this.networkConnectionStatus;
    }

    /**
     * Set the networkConnectionStatus property: The network connection status.
     * 
     * @param networkConnectionStatus the networkConnectionStatus value to set.
     * @return the FailoverReplicationProtectedItemDetails object itself.
     */
    public FailoverReplicationProtectedItemDetails withNetworkConnectionStatus(String networkConnectionStatus) {
        this.networkConnectionStatus = networkConnectionStatus;
        return this;
    }

    /**
     * Get the networkFriendlyName property: The network friendly name.
     * 
     * @return the networkFriendlyName value.
     */
    public String networkFriendlyName() {
        return this.networkFriendlyName;
    }

    /**
     * Set the networkFriendlyName property: The network friendly name.
     * 
     * @param networkFriendlyName the networkFriendlyName value to set.
     * @return the FailoverReplicationProtectedItemDetails object itself.
     */
    public FailoverReplicationProtectedItemDetails withNetworkFriendlyName(String networkFriendlyName) {
        this.networkFriendlyName = networkFriendlyName;
        return this;
    }

    /**
     * Get the subnet property: The network subnet.
     * 
     * @return the subnet value.
     */
    public String subnet() {
        return this.subnet;
    }

    /**
     * Set the subnet property: The network subnet.
     * 
     * @param subnet the subnet value to set.
     * @return the FailoverReplicationProtectedItemDetails object itself.
     */
    public FailoverReplicationProtectedItemDetails withSubnet(String subnet) {
        this.subnet = subnet;
        return this;
    }

    /**
     * Get the recoveryPointId property: The recovery point Id.
     * 
     * @return the recoveryPointId value.
     */
    public String recoveryPointId() {
        return this.recoveryPointId;
    }

    /**
     * Set the recoveryPointId property: The recovery point Id.
     * 
     * @param recoveryPointId the recoveryPointId value to set.
     * @return the FailoverReplicationProtectedItemDetails object itself.
     */
    public FailoverReplicationProtectedItemDetails withRecoveryPointId(String recoveryPointId) {
        this.recoveryPointId = recoveryPointId;
        return this;
    }

    /**
     * Get the recoveryPointTime property: The recovery point time.
     * 
     * @return the recoveryPointTime value.
     */
    public OffsetDateTime recoveryPointTime() {
        return this.recoveryPointTime;
    }

    /**
     * Set the recoveryPointTime property: The recovery point time.
     * 
     * @param recoveryPointTime the recoveryPointTime value to set.
     * @return the FailoverReplicationProtectedItemDetails object itself.
     */
    public FailoverReplicationProtectedItemDetails withRecoveryPointTime(OffsetDateTime recoveryPointTime) {
        this.recoveryPointTime = recoveryPointTime;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("friendlyName", this.friendlyName);
        jsonWriter.writeStringField("testVmName", this.testVmName);
        jsonWriter.writeStringField("testVmFriendlyName", this.testVmFriendlyName);
        jsonWriter.writeStringField("networkConnectionStatus", this.networkConnectionStatus);
        jsonWriter.writeStringField("networkFriendlyName", this.networkFriendlyName);
        jsonWriter.writeStringField("subnet", this.subnet);
        jsonWriter.writeStringField("recoveryPointId", this.recoveryPointId);
        jsonWriter.writeStringField("recoveryPointTime",
            this.recoveryPointTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.recoveryPointTime));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FailoverReplicationProtectedItemDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FailoverReplicationProtectedItemDetails if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FailoverReplicationProtectedItemDetails.
     */
    public static FailoverReplicationProtectedItemDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FailoverReplicationProtectedItemDetails deserializedFailoverReplicationProtectedItemDetails
                = new FailoverReplicationProtectedItemDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedFailoverReplicationProtectedItemDetails.name = reader.getString();
                } else if ("friendlyName".equals(fieldName)) {
                    deserializedFailoverReplicationProtectedItemDetails.friendlyName = reader.getString();
                } else if ("testVmName".equals(fieldName)) {
                    deserializedFailoverReplicationProtectedItemDetails.testVmName = reader.getString();
                } else if ("testVmFriendlyName".equals(fieldName)) {
                    deserializedFailoverReplicationProtectedItemDetails.testVmFriendlyName = reader.getString();
                } else if ("networkConnectionStatus".equals(fieldName)) {
                    deserializedFailoverReplicationProtectedItemDetails.networkConnectionStatus = reader.getString();
                } else if ("networkFriendlyName".equals(fieldName)) {
                    deserializedFailoverReplicationProtectedItemDetails.networkFriendlyName = reader.getString();
                } else if ("subnet".equals(fieldName)) {
                    deserializedFailoverReplicationProtectedItemDetails.subnet = reader.getString();
                } else if ("recoveryPointId".equals(fieldName)) {
                    deserializedFailoverReplicationProtectedItemDetails.recoveryPointId = reader.getString();
                } else if ("recoveryPointTime".equals(fieldName)) {
                    deserializedFailoverReplicationProtectedItemDetails.recoveryPointTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFailoverReplicationProtectedItemDetails;
        });
    }
}
