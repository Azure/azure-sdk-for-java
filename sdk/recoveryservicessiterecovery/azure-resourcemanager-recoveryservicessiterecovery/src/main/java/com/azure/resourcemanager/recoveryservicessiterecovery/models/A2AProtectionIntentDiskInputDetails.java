// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure VM unmanaged disk input details.
 */
@Fluent
public final class A2AProtectionIntentDiskInputDetails
    implements JsonSerializable<A2AProtectionIntentDiskInputDetails> {
    /*
     * The disk Uri.
     */
    private String diskUri;

    /*
     * The recovery VHD storage account input.
     */
    private StorageAccountCustomDetails recoveryAzureStorageAccountCustomInput;

    /*
     * The primary staging storage account input.
     */
    private StorageAccountCustomDetails primaryStagingStorageAccountCustomInput;

    /**
     * Creates an instance of A2AProtectionIntentDiskInputDetails class.
     */
    public A2AProtectionIntentDiskInputDetails() {
    }

    /**
     * Get the diskUri property: The disk Uri.
     * 
     * @return the diskUri value.
     */
    public String diskUri() {
        return this.diskUri;
    }

    /**
     * Set the diskUri property: The disk Uri.
     * 
     * @param diskUri the diskUri value to set.
     * @return the A2AProtectionIntentDiskInputDetails object itself.
     */
    public A2AProtectionIntentDiskInputDetails withDiskUri(String diskUri) {
        this.diskUri = diskUri;
        return this;
    }

    /**
     * Get the recoveryAzureStorageAccountCustomInput property: The recovery VHD storage account input.
     * 
     * @return the recoveryAzureStorageAccountCustomInput value.
     */
    public StorageAccountCustomDetails recoveryAzureStorageAccountCustomInput() {
        return this.recoveryAzureStorageAccountCustomInput;
    }

    /**
     * Set the recoveryAzureStorageAccountCustomInput property: The recovery VHD storage account input.
     * 
     * @param recoveryAzureStorageAccountCustomInput the recoveryAzureStorageAccountCustomInput value to set.
     * @return the A2AProtectionIntentDiskInputDetails object itself.
     */
    public A2AProtectionIntentDiskInputDetails
        withRecoveryAzureStorageAccountCustomInput(StorageAccountCustomDetails recoveryAzureStorageAccountCustomInput) {
        this.recoveryAzureStorageAccountCustomInput = recoveryAzureStorageAccountCustomInput;
        return this;
    }

    /**
     * Get the primaryStagingStorageAccountCustomInput property: The primary staging storage account input.
     * 
     * @return the primaryStagingStorageAccountCustomInput value.
     */
    public StorageAccountCustomDetails primaryStagingStorageAccountCustomInput() {
        return this.primaryStagingStorageAccountCustomInput;
    }

    /**
     * Set the primaryStagingStorageAccountCustomInput property: The primary staging storage account input.
     * 
     * @param primaryStagingStorageAccountCustomInput the primaryStagingStorageAccountCustomInput value to set.
     * @return the A2AProtectionIntentDiskInputDetails object itself.
     */
    public A2AProtectionIntentDiskInputDetails withPrimaryStagingStorageAccountCustomInput(
        StorageAccountCustomDetails primaryStagingStorageAccountCustomInput) {
        this.primaryStagingStorageAccountCustomInput = primaryStagingStorageAccountCustomInput;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (diskUri() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property diskUri in model A2AProtectionIntentDiskInputDetails"));
        }
        if (recoveryAzureStorageAccountCustomInput() != null) {
            recoveryAzureStorageAccountCustomInput().validate();
        }
        if (primaryStagingStorageAccountCustomInput() != null) {
            primaryStagingStorageAccountCustomInput().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(A2AProtectionIntentDiskInputDetails.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("diskUri", this.diskUri);
        jsonWriter.writeJsonField("recoveryAzureStorageAccountCustomInput",
            this.recoveryAzureStorageAccountCustomInput);
        jsonWriter.writeJsonField("primaryStagingStorageAccountCustomInput",
            this.primaryStagingStorageAccountCustomInput);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of A2AProtectionIntentDiskInputDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of A2AProtectionIntentDiskInputDetails if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the A2AProtectionIntentDiskInputDetails.
     */
    public static A2AProtectionIntentDiskInputDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            A2AProtectionIntentDiskInputDetails deserializedA2AProtectionIntentDiskInputDetails
                = new A2AProtectionIntentDiskInputDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("diskUri".equals(fieldName)) {
                    deserializedA2AProtectionIntentDiskInputDetails.diskUri = reader.getString();
                } else if ("recoveryAzureStorageAccountCustomInput".equals(fieldName)) {
                    deserializedA2AProtectionIntentDiskInputDetails.recoveryAzureStorageAccountCustomInput
                        = StorageAccountCustomDetails.fromJson(reader);
                } else if ("primaryStagingStorageAccountCustomInput".equals(fieldName)) {
                    deserializedA2AProtectionIntentDiskInputDetails.primaryStagingStorageAccountCustomInput
                        = StorageAccountCustomDetails.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedA2AProtectionIntentDiskInputDetails;
        });
    }
}
