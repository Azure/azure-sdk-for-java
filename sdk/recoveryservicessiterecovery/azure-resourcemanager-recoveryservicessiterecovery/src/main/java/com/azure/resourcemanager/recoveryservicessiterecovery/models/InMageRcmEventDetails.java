// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Event details for InMageRcm provider.
 */
@Immutable
public final class InMageRcmEventDetails extends EventProviderSpecificDetails {
    /*
     * Gets the class type. Overridden in derived classes.
     */
    private String instanceType = "InMageRcm";

    /*
     * The protected item name.
     */
    private String protectedItemName;

    /*
     * The protected item name.
     */
    private String vmName;

    /*
     * The latest agent version.
     */
    private String latestAgentVersion;

    /*
     * The job Id.
     */
    private String jobId;

    /*
     * The fabric name.
     */
    private String fabricName;

    /*
     * The appliance name.
     */
    private String applianceName;

    /*
     * The server type.
     */
    private String serverType;

    /*
     * The component display name.
     */
    private String componentDisplayName;

    /**
     * Creates an instance of InMageRcmEventDetails class.
     */
    public InMageRcmEventDetails() {
    }

    /**
     * Get the instanceType property: Gets the class type. Overridden in derived classes.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the protectedItemName property: The protected item name.
     * 
     * @return the protectedItemName value.
     */
    public String protectedItemName() {
        return this.protectedItemName;
    }

    /**
     * Get the vmName property: The protected item name.
     * 
     * @return the vmName value.
     */
    public String vmName() {
        return this.vmName;
    }

    /**
     * Get the latestAgentVersion property: The latest agent version.
     * 
     * @return the latestAgentVersion value.
     */
    public String latestAgentVersion() {
        return this.latestAgentVersion;
    }

    /**
     * Get the jobId property: The job Id.
     * 
     * @return the jobId value.
     */
    public String jobId() {
        return this.jobId;
    }

    /**
     * Get the fabricName property: The fabric name.
     * 
     * @return the fabricName value.
     */
    public String fabricName() {
        return this.fabricName;
    }

    /**
     * Get the applianceName property: The appliance name.
     * 
     * @return the applianceName value.
     */
    public String applianceName() {
        return this.applianceName;
    }

    /**
     * Get the serverType property: The server type.
     * 
     * @return the serverType value.
     */
    public String serverType() {
        return this.serverType;
    }

    /**
     * Get the componentDisplayName property: The component display name.
     * 
     * @return the componentDisplayName value.
     */
    public String componentDisplayName() {
        return this.componentDisplayName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InMageRcmEventDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InMageRcmEventDetails if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InMageRcmEventDetails.
     */
    public static InMageRcmEventDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InMageRcmEventDetails deserializedInMageRcmEventDetails = new InMageRcmEventDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedInMageRcmEventDetails.instanceType = reader.getString();
                } else if ("protectedItemName".equals(fieldName)) {
                    deserializedInMageRcmEventDetails.protectedItemName = reader.getString();
                } else if ("vmName".equals(fieldName)) {
                    deserializedInMageRcmEventDetails.vmName = reader.getString();
                } else if ("latestAgentVersion".equals(fieldName)) {
                    deserializedInMageRcmEventDetails.latestAgentVersion = reader.getString();
                } else if ("jobId".equals(fieldName)) {
                    deserializedInMageRcmEventDetails.jobId = reader.getString();
                } else if ("fabricName".equals(fieldName)) {
                    deserializedInMageRcmEventDetails.fabricName = reader.getString();
                } else if ("applianceName".equals(fieldName)) {
                    deserializedInMageRcmEventDetails.applianceName = reader.getString();
                } else if ("serverType".equals(fieldName)) {
                    deserializedInMageRcmEventDetails.serverType = reader.getString();
                } else if ("componentDisplayName".equals(fieldName)) {
                    deserializedInMageRcmEventDetails.componentDisplayName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInMageRcmEventDetails;
        });
    }
}
