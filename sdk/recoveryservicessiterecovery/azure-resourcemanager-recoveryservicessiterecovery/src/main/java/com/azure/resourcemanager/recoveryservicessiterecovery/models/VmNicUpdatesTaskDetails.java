// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * This class represents the vm NicUpdates task details.
 */
@Fluent
public final class VmNicUpdatesTaskDetails extends TaskTypeDetails {
    /*
     * The type of task details.
     */
    private String instanceType = "VmNicUpdatesTaskDetails";

    /*
     * Virtual machine Id.
     */
    private String vmId;

    /*
     * Nic Id.
     */
    private String nicId;

    /*
     * Name of the Nic.
     */
    private String name;

    /**
     * Creates an instance of VmNicUpdatesTaskDetails class.
     */
    public VmNicUpdatesTaskDetails() {
    }

    /**
     * Get the instanceType property: The type of task details.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the vmId property: Virtual machine Id.
     * 
     * @return the vmId value.
     */
    public String vmId() {
        return this.vmId;
    }

    /**
     * Set the vmId property: Virtual machine Id.
     * 
     * @param vmId the vmId value to set.
     * @return the VmNicUpdatesTaskDetails object itself.
     */
    public VmNicUpdatesTaskDetails withVmId(String vmId) {
        this.vmId = vmId;
        return this;
    }

    /**
     * Get the nicId property: Nic Id.
     * 
     * @return the nicId value.
     */
    public String nicId() {
        return this.nicId;
    }

    /**
     * Set the nicId property: Nic Id.
     * 
     * @param nicId the nicId value to set.
     * @return the VmNicUpdatesTaskDetails object itself.
     */
    public VmNicUpdatesTaskDetails withNicId(String nicId) {
        this.nicId = nicId;
        return this;
    }

    /**
     * Get the name property: Name of the Nic.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the Nic.
     * 
     * @param name the name value to set.
     * @return the VmNicUpdatesTaskDetails object itself.
     */
    public VmNicUpdatesTaskDetails withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("vmId", this.vmId);
        jsonWriter.writeStringField("nicId", this.nicId);
        jsonWriter.writeStringField("name", this.name);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VmNicUpdatesTaskDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VmNicUpdatesTaskDetails if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VmNicUpdatesTaskDetails.
     */
    public static VmNicUpdatesTaskDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VmNicUpdatesTaskDetails deserializedVmNicUpdatesTaskDetails = new VmNicUpdatesTaskDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedVmNicUpdatesTaskDetails.instanceType = reader.getString();
                } else if ("vmId".equals(fieldName)) {
                    deserializedVmNicUpdatesTaskDetails.vmId = reader.getString();
                } else if ("nicId".equals(fieldName)) {
                    deserializedVmNicUpdatesTaskDetails.nicId = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedVmNicUpdatesTaskDetails.name = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVmNicUpdatesTaskDetails;
        });
    }
}
