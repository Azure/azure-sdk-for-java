// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Storage mapping properties.
 */
@Fluent
public final class StorageClassificationMappingProperties
    implements JsonSerializable<StorageClassificationMappingProperties> {
    /*
     * Target storage object Id.
     */
    private String targetStorageClassificationId;

    /**
     * Creates an instance of StorageClassificationMappingProperties class.
     */
    public StorageClassificationMappingProperties() {
    }

    /**
     * Get the targetStorageClassificationId property: Target storage object Id.
     * 
     * @return the targetStorageClassificationId value.
     */
    public String targetStorageClassificationId() {
        return this.targetStorageClassificationId;
    }

    /**
     * Set the targetStorageClassificationId property: Target storage object Id.
     * 
     * @param targetStorageClassificationId the targetStorageClassificationId value to set.
     * @return the StorageClassificationMappingProperties object itself.
     */
    public StorageClassificationMappingProperties
        withTargetStorageClassificationId(String targetStorageClassificationId) {
        this.targetStorageClassificationId = targetStorageClassificationId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("targetStorageClassificationId", this.targetStorageClassificationId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StorageClassificationMappingProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StorageClassificationMappingProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the StorageClassificationMappingProperties.
     */
    public static StorageClassificationMappingProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StorageClassificationMappingProperties deserializedStorageClassificationMappingProperties
                = new StorageClassificationMappingProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("targetStorageClassificationId".equals(fieldName)) {
                    deserializedStorageClassificationMappingProperties.targetStorageClassificationId
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStorageClassificationMappingProperties;
        });
    }
}
