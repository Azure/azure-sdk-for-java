// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Version related details. */
@Fluent
public final class VersionDetails {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VersionDetails.class);

    /*
     * The agent version.
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * Version expiry date.
     */
    @JsonProperty(value = "expiryDate")
    private OffsetDateTime expiryDate;

    /*
     * A value indicating whether security update required.
     */
    @JsonProperty(value = "status")
    private AgentVersionStatus status;

    /**
     * Get the version property: The agent version.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: The agent version.
     *
     * @param version the version value to set.
     * @return the VersionDetails object itself.
     */
    public VersionDetails withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the expiryDate property: Version expiry date.
     *
     * @return the expiryDate value.
     */
    public OffsetDateTime expiryDate() {
        return this.expiryDate;
    }

    /**
     * Set the expiryDate property: Version expiry date.
     *
     * @param expiryDate the expiryDate value to set.
     * @return the VersionDetails object itself.
     */
    public VersionDetails withExpiryDate(OffsetDateTime expiryDate) {
        this.expiryDate = expiryDate;
        return this;
    }

    /**
     * Get the status property: A value indicating whether security update required.
     *
     * @return the status value.
     */
    public AgentVersionStatus status() {
        return this.status;
    }

    /**
     * Set the status property: A value indicating whether security update required.
     *
     * @param status the status value to set.
     * @return the VersionDetails object itself.
     */
    public VersionDetails withStatus(AgentVersionStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
