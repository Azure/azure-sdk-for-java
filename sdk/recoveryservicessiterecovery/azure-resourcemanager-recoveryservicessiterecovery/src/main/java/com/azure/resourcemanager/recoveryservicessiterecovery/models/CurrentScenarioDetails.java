// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Current scenario details of the protected entity. */
@Fluent
public final class CurrentScenarioDetails {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CurrentScenarioDetails.class);

    /*
     * Scenario name.
     */
    @JsonProperty(value = "scenarioName")
    private String scenarioName;

    /*
     * ARM Id of the job being executed.
     */
    @JsonProperty(value = "jobId")
    private String jobId;

    /*
     * Start time of the workflow.
     */
    @JsonProperty(value = "startTime")
    private OffsetDateTime startTime;

    /**
     * Get the scenarioName property: Scenario name.
     *
     * @return the scenarioName value.
     */
    public String scenarioName() {
        return this.scenarioName;
    }

    /**
     * Set the scenarioName property: Scenario name.
     *
     * @param scenarioName the scenarioName value to set.
     * @return the CurrentScenarioDetails object itself.
     */
    public CurrentScenarioDetails withScenarioName(String scenarioName) {
        this.scenarioName = scenarioName;
        return this;
    }

    /**
     * Get the jobId property: ARM Id of the job being executed.
     *
     * @return the jobId value.
     */
    public String jobId() {
        return this.jobId;
    }

    /**
     * Set the jobId property: ARM Id of the job being executed.
     *
     * @param jobId the jobId value to set.
     * @return the CurrentScenarioDetails object itself.
     */
    public CurrentScenarioDetails withJobId(String jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * Get the startTime property: Start time of the workflow.
     *
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: Start time of the workflow.
     *
     * @param startTime the startTime value to set.
     * @return the CurrentScenarioDetails object itself.
     */
    public CurrentScenarioDetails withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
