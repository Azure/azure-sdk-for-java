// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * InMageRcmFailback specific provider input.
 */
@Fluent
public final class InMageRcmFailbackReprotectInput extends ReverseReplicationProviderSpecificInput {
    /*
     * The class type.
     */
    private String instanceType = "InMageRcmFailback";

    /*
     * The process server Id.
     */
    private String processServerId;

    /*
     * The run as account Id.
     */
    private String runAsAccountId;

    /*
     * The Policy Id.
     */
    private String policyId;

    /**
     * Creates an instance of InMageRcmFailbackReprotectInput class.
     */
    public InMageRcmFailbackReprotectInput() {
    }

    /**
     * Get the instanceType property: The class type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the processServerId property: The process server Id.
     * 
     * @return the processServerId value.
     */
    public String processServerId() {
        return this.processServerId;
    }

    /**
     * Set the processServerId property: The process server Id.
     * 
     * @param processServerId the processServerId value to set.
     * @return the InMageRcmFailbackReprotectInput object itself.
     */
    public InMageRcmFailbackReprotectInput withProcessServerId(String processServerId) {
        this.processServerId = processServerId;
        return this;
    }

    /**
     * Get the runAsAccountId property: The run as account Id.
     * 
     * @return the runAsAccountId value.
     */
    public String runAsAccountId() {
        return this.runAsAccountId;
    }

    /**
     * Set the runAsAccountId property: The run as account Id.
     * 
     * @param runAsAccountId the runAsAccountId value to set.
     * @return the InMageRcmFailbackReprotectInput object itself.
     */
    public InMageRcmFailbackReprotectInput withRunAsAccountId(String runAsAccountId) {
        this.runAsAccountId = runAsAccountId;
        return this;
    }

    /**
     * Get the policyId property: The Policy Id.
     * 
     * @return the policyId value.
     */
    public String policyId() {
        return this.policyId;
    }

    /**
     * Set the policyId property: The Policy Id.
     * 
     * @param policyId the policyId value to set.
     * @return the InMageRcmFailbackReprotectInput object itself.
     */
    public InMageRcmFailbackReprotectInput withPolicyId(String policyId) {
        this.policyId = policyId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (processServerId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property processServerId in model InMageRcmFailbackReprotectInput"));
        }
        if (policyId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property policyId in model InMageRcmFailbackReprotectInput"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(InMageRcmFailbackReprotectInput.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("processServerId", this.processServerId);
        jsonWriter.writeStringField("policyId", this.policyId);
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("runAsAccountId", this.runAsAccountId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InMageRcmFailbackReprotectInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InMageRcmFailbackReprotectInput if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the InMageRcmFailbackReprotectInput.
     */
    public static InMageRcmFailbackReprotectInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InMageRcmFailbackReprotectInput deserializedInMageRcmFailbackReprotectInput
                = new InMageRcmFailbackReprotectInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("processServerId".equals(fieldName)) {
                    deserializedInMageRcmFailbackReprotectInput.processServerId = reader.getString();
                } else if ("policyId".equals(fieldName)) {
                    deserializedInMageRcmFailbackReprotectInput.policyId = reader.getString();
                } else if ("instanceType".equals(fieldName)) {
                    deserializedInMageRcmFailbackReprotectInput.instanceType = reader.getString();
                } else if ("runAsAccountId".equals(fieldName)) {
                    deserializedInMageRcmFailbackReprotectInput.runAsAccountId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInMageRcmFailbackReprotectInput;
        });
    }
}
