// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Discover protectable item properties.
 */
@Fluent
public final class DiscoverProtectableItemRequestProperties
    implements JsonSerializable<DiscoverProtectableItemRequestProperties> {
    /*
     * The friendly name of the physical machine.
     */
    private String friendlyName;

    /*
     * The IP address of the physical machine to be discovered.
     */
    private String ipAddress;

    /*
     * The OS type on the physical machine.
     */
    private String osType;

    /**
     * Creates an instance of DiscoverProtectableItemRequestProperties class.
     */
    public DiscoverProtectableItemRequestProperties() {
    }

    /**
     * Get the friendlyName property: The friendly name of the physical machine.
     * 
     * @return the friendlyName value.
     */
    public String friendlyName() {
        return this.friendlyName;
    }

    /**
     * Set the friendlyName property: The friendly name of the physical machine.
     * 
     * @param friendlyName the friendlyName value to set.
     * @return the DiscoverProtectableItemRequestProperties object itself.
     */
    public DiscoverProtectableItemRequestProperties withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }

    /**
     * Get the ipAddress property: The IP address of the physical machine to be discovered.
     * 
     * @return the ipAddress value.
     */
    public String ipAddress() {
        return this.ipAddress;
    }

    /**
     * Set the ipAddress property: The IP address of the physical machine to be discovered.
     * 
     * @param ipAddress the ipAddress value to set.
     * @return the DiscoverProtectableItemRequestProperties object itself.
     */
    public DiscoverProtectableItemRequestProperties withIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }

    /**
     * Get the osType property: The OS type on the physical machine.
     * 
     * @return the osType value.
     */
    public String osType() {
        return this.osType;
    }

    /**
     * Set the osType property: The OS type on the physical machine.
     * 
     * @param osType the osType value to set.
     * @return the DiscoverProtectableItemRequestProperties object itself.
     */
    public DiscoverProtectableItemRequestProperties withOsType(String osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("friendlyName", this.friendlyName);
        jsonWriter.writeStringField("ipAddress", this.ipAddress);
        jsonWriter.writeStringField("osType", this.osType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DiscoverProtectableItemRequestProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DiscoverProtectableItemRequestProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DiscoverProtectableItemRequestProperties.
     */
    public static DiscoverProtectableItemRequestProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DiscoverProtectableItemRequestProperties deserializedDiscoverProtectableItemRequestProperties
                = new DiscoverProtectableItemRequestProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("friendlyName".equals(fieldName)) {
                    deserializedDiscoverProtectableItemRequestProperties.friendlyName = reader.getString();
                } else if ("ipAddress".equals(fieldName)) {
                    deserializedDiscoverProtectableItemRequestProperties.ipAddress = reader.getString();
                } else if ("osType".equals(fieldName)) {
                    deserializedDiscoverProtectableItemRequestProperties.osType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDiscoverProtectableItemRequestProperties;
        });
    }
}
