// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the error used to indicate why the target compute size is not applicable.
 */
@Fluent
public final class ComputeSizeErrorDetails implements JsonSerializable<ComputeSizeErrorDetails> {
    /*
     * The error message.
     */
    private String message;

    /*
     * The severity of the error.
     */
    private String severity;

    /**
     * Creates an instance of ComputeSizeErrorDetails class.
     */
    public ComputeSizeErrorDetails() {
    }

    /**
     * Get the message property: The error message.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: The error message.
     * 
     * @param message the message value to set.
     * @return the ComputeSizeErrorDetails object itself.
     */
    public ComputeSizeErrorDetails withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the severity property: The severity of the error.
     * 
     * @return the severity value.
     */
    public String severity() {
        return this.severity;
    }

    /**
     * Set the severity property: The severity of the error.
     * 
     * @param severity the severity value to set.
     * @return the ComputeSizeErrorDetails object itself.
     */
    public ComputeSizeErrorDetails withSeverity(String severity) {
        this.severity = severity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("message", this.message);
        jsonWriter.writeStringField("severity", this.severity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComputeSizeErrorDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComputeSizeErrorDetails if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ComputeSizeErrorDetails.
     */
    public static ComputeSizeErrorDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ComputeSizeErrorDetails deserializedComputeSizeErrorDetails = new ComputeSizeErrorDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("message".equals(fieldName)) {
                    deserializedComputeSizeErrorDetails.message = reader.getString();
                } else if ("severity".equals(fieldName)) {
                    deserializedComputeSizeErrorDetails.severity = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedComputeSizeErrorDetails;
        });
    }
}
