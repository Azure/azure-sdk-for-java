// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * A2A specific switch protection input.
 */
@Fluent
public final class A2ASwitchProtectionInput extends SwitchProtectionProviderSpecificInput {
    /*
     * Gets the Instance type.
     */
    private String instanceType = "A2A";

    /*
     * The recovery container Id.
     */
    private String recoveryContainerId;

    /*
     * The list of vm disk details.
     */
    private List<A2AVmDiskInputDetails> vmDisks;

    /*
     * The list of vm managed disk details.
     */
    private List<A2AVmManagedDiskInputDetails> vmManagedDisks;

    /*
     * The recovery resource group Id. Valid for V2 scenarios.
     */
    private String recoveryResourceGroupId;

    /*
     * The recovery cloud service Id. Valid for V1 scenarios.
     */
    private String recoveryCloudServiceId;

    /*
     * The recovery availability set.
     */
    private String recoveryAvailabilitySetId;

    /*
     * The Policy Id.
     */
    private String policyId;

    /*
     * The boot diagnostic storage account.
     */
    private String recoveryBootDiagStorageAccountId;

    /*
     * The recovery availability zone.
     */
    private String recoveryAvailabilityZone;

    /*
     * The recovery proximity placement group Id.
     */
    private String recoveryProximityPlacementGroupId;

    /*
     * The virtual machine scale set id.
     */
    private String recoveryVirtualMachineScaleSetId;

    /*
     * The recovery capacity reservation group Id.
     */
    private String recoveryCapacityReservationGroupId;

    /*
     * The recovery disk encryption information.
     */
    private DiskEncryptionInfo diskEncryptionInfo;

    /**
     * Creates an instance of A2ASwitchProtectionInput class.
     */
    public A2ASwitchProtectionInput() {
    }

    /**
     * Get the instanceType property: Gets the Instance type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the recoveryContainerId property: The recovery container Id.
     * 
     * @return the recoveryContainerId value.
     */
    public String recoveryContainerId() {
        return this.recoveryContainerId;
    }

    /**
     * Set the recoveryContainerId property: The recovery container Id.
     * 
     * @param recoveryContainerId the recoveryContainerId value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withRecoveryContainerId(String recoveryContainerId) {
        this.recoveryContainerId = recoveryContainerId;
        return this;
    }

    /**
     * Get the vmDisks property: The list of vm disk details.
     * 
     * @return the vmDisks value.
     */
    public List<A2AVmDiskInputDetails> vmDisks() {
        return this.vmDisks;
    }

    /**
     * Set the vmDisks property: The list of vm disk details.
     * 
     * @param vmDisks the vmDisks value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withVmDisks(List<A2AVmDiskInputDetails> vmDisks) {
        this.vmDisks = vmDisks;
        return this;
    }

    /**
     * Get the vmManagedDisks property: The list of vm managed disk details.
     * 
     * @return the vmManagedDisks value.
     */
    public List<A2AVmManagedDiskInputDetails> vmManagedDisks() {
        return this.vmManagedDisks;
    }

    /**
     * Set the vmManagedDisks property: The list of vm managed disk details.
     * 
     * @param vmManagedDisks the vmManagedDisks value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withVmManagedDisks(List<A2AVmManagedDiskInputDetails> vmManagedDisks) {
        this.vmManagedDisks = vmManagedDisks;
        return this;
    }

    /**
     * Get the recoveryResourceGroupId property: The recovery resource group Id. Valid for V2 scenarios.
     * 
     * @return the recoveryResourceGroupId value.
     */
    public String recoveryResourceGroupId() {
        return this.recoveryResourceGroupId;
    }

    /**
     * Set the recoveryResourceGroupId property: The recovery resource group Id. Valid for V2 scenarios.
     * 
     * @param recoveryResourceGroupId the recoveryResourceGroupId value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withRecoveryResourceGroupId(String recoveryResourceGroupId) {
        this.recoveryResourceGroupId = recoveryResourceGroupId;
        return this;
    }

    /**
     * Get the recoveryCloudServiceId property: The recovery cloud service Id. Valid for V1 scenarios.
     * 
     * @return the recoveryCloudServiceId value.
     */
    public String recoveryCloudServiceId() {
        return this.recoveryCloudServiceId;
    }

    /**
     * Set the recoveryCloudServiceId property: The recovery cloud service Id. Valid for V1 scenarios.
     * 
     * @param recoveryCloudServiceId the recoveryCloudServiceId value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withRecoveryCloudServiceId(String recoveryCloudServiceId) {
        this.recoveryCloudServiceId = recoveryCloudServiceId;
        return this;
    }

    /**
     * Get the recoveryAvailabilitySetId property: The recovery availability set.
     * 
     * @return the recoveryAvailabilitySetId value.
     */
    public String recoveryAvailabilitySetId() {
        return this.recoveryAvailabilitySetId;
    }

    /**
     * Set the recoveryAvailabilitySetId property: The recovery availability set.
     * 
     * @param recoveryAvailabilitySetId the recoveryAvailabilitySetId value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withRecoveryAvailabilitySetId(String recoveryAvailabilitySetId) {
        this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
        return this;
    }

    /**
     * Get the policyId property: The Policy Id.
     * 
     * @return the policyId value.
     */
    public String policyId() {
        return this.policyId;
    }

    /**
     * Set the policyId property: The Policy Id.
     * 
     * @param policyId the policyId value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withPolicyId(String policyId) {
        this.policyId = policyId;
        return this;
    }

    /**
     * Get the recoveryBootDiagStorageAccountId property: The boot diagnostic storage account.
     * 
     * @return the recoveryBootDiagStorageAccountId value.
     */
    public String recoveryBootDiagStorageAccountId() {
        return this.recoveryBootDiagStorageAccountId;
    }

    /**
     * Set the recoveryBootDiagStorageAccountId property: The boot diagnostic storage account.
     * 
     * @param recoveryBootDiagStorageAccountId the recoveryBootDiagStorageAccountId value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withRecoveryBootDiagStorageAccountId(String recoveryBootDiagStorageAccountId) {
        this.recoveryBootDiagStorageAccountId = recoveryBootDiagStorageAccountId;
        return this;
    }

    /**
     * Get the recoveryAvailabilityZone property: The recovery availability zone.
     * 
     * @return the recoveryAvailabilityZone value.
     */
    public String recoveryAvailabilityZone() {
        return this.recoveryAvailabilityZone;
    }

    /**
     * Set the recoveryAvailabilityZone property: The recovery availability zone.
     * 
     * @param recoveryAvailabilityZone the recoveryAvailabilityZone value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withRecoveryAvailabilityZone(String recoveryAvailabilityZone) {
        this.recoveryAvailabilityZone = recoveryAvailabilityZone;
        return this;
    }

    /**
     * Get the recoveryProximityPlacementGroupId property: The recovery proximity placement group Id.
     * 
     * @return the recoveryProximityPlacementGroupId value.
     */
    public String recoveryProximityPlacementGroupId() {
        return this.recoveryProximityPlacementGroupId;
    }

    /**
     * Set the recoveryProximityPlacementGroupId property: The recovery proximity placement group Id.
     * 
     * @param recoveryProximityPlacementGroupId the recoveryProximityPlacementGroupId value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withRecoveryProximityPlacementGroupId(String recoveryProximityPlacementGroupId) {
        this.recoveryProximityPlacementGroupId = recoveryProximityPlacementGroupId;
        return this;
    }

    /**
     * Get the recoveryVirtualMachineScaleSetId property: The virtual machine scale set id.
     * 
     * @return the recoveryVirtualMachineScaleSetId value.
     */
    public String recoveryVirtualMachineScaleSetId() {
        return this.recoveryVirtualMachineScaleSetId;
    }

    /**
     * Set the recoveryVirtualMachineScaleSetId property: The virtual machine scale set id.
     * 
     * @param recoveryVirtualMachineScaleSetId the recoveryVirtualMachineScaleSetId value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withRecoveryVirtualMachineScaleSetId(String recoveryVirtualMachineScaleSetId) {
        this.recoveryVirtualMachineScaleSetId = recoveryVirtualMachineScaleSetId;
        return this;
    }

    /**
     * Get the recoveryCapacityReservationGroupId property: The recovery capacity reservation group Id.
     * 
     * @return the recoveryCapacityReservationGroupId value.
     */
    public String recoveryCapacityReservationGroupId() {
        return this.recoveryCapacityReservationGroupId;
    }

    /**
     * Set the recoveryCapacityReservationGroupId property: The recovery capacity reservation group Id.
     * 
     * @param recoveryCapacityReservationGroupId the recoveryCapacityReservationGroupId value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withRecoveryCapacityReservationGroupId(String recoveryCapacityReservationGroupId) {
        this.recoveryCapacityReservationGroupId = recoveryCapacityReservationGroupId;
        return this;
    }

    /**
     * Get the diskEncryptionInfo property: The recovery disk encryption information.
     * 
     * @return the diskEncryptionInfo value.
     */
    public DiskEncryptionInfo diskEncryptionInfo() {
        return this.diskEncryptionInfo;
    }

    /**
     * Set the diskEncryptionInfo property: The recovery disk encryption information.
     * 
     * @param diskEncryptionInfo the diskEncryptionInfo value to set.
     * @return the A2ASwitchProtectionInput object itself.
     */
    public A2ASwitchProtectionInput withDiskEncryptionInfo(DiskEncryptionInfo diskEncryptionInfo) {
        this.diskEncryptionInfo = diskEncryptionInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (vmDisks() != null) {
            vmDisks().forEach(e -> e.validate());
        }
        if (vmManagedDisks() != null) {
            vmManagedDisks().forEach(e -> e.validate());
        }
        if (diskEncryptionInfo() != null) {
            diskEncryptionInfo().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("recoveryContainerId", this.recoveryContainerId);
        jsonWriter.writeArrayField("vmDisks", this.vmDisks, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("vmManagedDisks", this.vmManagedDisks,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("recoveryResourceGroupId", this.recoveryResourceGroupId);
        jsonWriter.writeStringField("recoveryCloudServiceId", this.recoveryCloudServiceId);
        jsonWriter.writeStringField("recoveryAvailabilitySetId", this.recoveryAvailabilitySetId);
        jsonWriter.writeStringField("policyId", this.policyId);
        jsonWriter.writeStringField("recoveryBootDiagStorageAccountId", this.recoveryBootDiagStorageAccountId);
        jsonWriter.writeStringField("recoveryAvailabilityZone", this.recoveryAvailabilityZone);
        jsonWriter.writeStringField("recoveryProximityPlacementGroupId", this.recoveryProximityPlacementGroupId);
        jsonWriter.writeStringField("recoveryVirtualMachineScaleSetId", this.recoveryVirtualMachineScaleSetId);
        jsonWriter.writeStringField("recoveryCapacityReservationGroupId", this.recoveryCapacityReservationGroupId);
        jsonWriter.writeJsonField("diskEncryptionInfo", this.diskEncryptionInfo);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of A2ASwitchProtectionInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of A2ASwitchProtectionInput if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the A2ASwitchProtectionInput.
     */
    public static A2ASwitchProtectionInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            A2ASwitchProtectionInput deserializedA2ASwitchProtectionInput = new A2ASwitchProtectionInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.instanceType = reader.getString();
                } else if ("recoveryContainerId".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.recoveryContainerId = reader.getString();
                } else if ("vmDisks".equals(fieldName)) {
                    List<A2AVmDiskInputDetails> vmDisks
                        = reader.readArray(reader1 -> A2AVmDiskInputDetails.fromJson(reader1));
                    deserializedA2ASwitchProtectionInput.vmDisks = vmDisks;
                } else if ("vmManagedDisks".equals(fieldName)) {
                    List<A2AVmManagedDiskInputDetails> vmManagedDisks
                        = reader.readArray(reader1 -> A2AVmManagedDiskInputDetails.fromJson(reader1));
                    deserializedA2ASwitchProtectionInput.vmManagedDisks = vmManagedDisks;
                } else if ("recoveryResourceGroupId".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.recoveryResourceGroupId = reader.getString();
                } else if ("recoveryCloudServiceId".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.recoveryCloudServiceId = reader.getString();
                } else if ("recoveryAvailabilitySetId".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.recoveryAvailabilitySetId = reader.getString();
                } else if ("policyId".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.policyId = reader.getString();
                } else if ("recoveryBootDiagStorageAccountId".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.recoveryBootDiagStorageAccountId = reader.getString();
                } else if ("recoveryAvailabilityZone".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.recoveryAvailabilityZone = reader.getString();
                } else if ("recoveryProximityPlacementGroupId".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.recoveryProximityPlacementGroupId = reader.getString();
                } else if ("recoveryVirtualMachineScaleSetId".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.recoveryVirtualMachineScaleSetId = reader.getString();
                } else if ("recoveryCapacityReservationGroupId".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.recoveryCapacityReservationGroupId = reader.getString();
                } else if ("diskEncryptionInfo".equals(fieldName)) {
                    deserializedA2ASwitchProtectionInput.diskEncryptionInfo = DiskEncryptionInfo.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedA2ASwitchProtectionInput;
        });
    }
}
