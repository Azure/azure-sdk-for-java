// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.ReplicationProtectionClusterInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ApplyClusterRecoveryPointInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ClusterTestFailoverCleanupInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ClusterTestFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ClusterUnplannedFailoverInput;

/**
 * An instance of this class provides access to all the operations defined in ReplicationProtectionClustersClient.
 */
public interface ReplicationProtectionClustersClient {
    /**
     * Gets the list of Replication protection clusters in fabric, container.
     * 
     * Gets the list of ASR replication protected clusters in the protection container.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of ASR replication protected clusters in the protection container as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ReplicationProtectionClusterInner> listByReplicationProtectionContainers(String resourceGroupName,
        String resourceName, String fabricName, String protectionContainerName);

    /**
     * Gets the list of Replication protection clusters in fabric, container.
     * 
     * Gets the list of ASR replication protected clusters in the protection container.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of ASR replication protected clusters in the protection container as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ReplicationProtectionClusterInner> listByReplicationProtectionContainers(String resourceGroupName,
        String resourceName, String fabricName, String protectionContainerName, Context context);

    /**
     * Gets the details of a Replication protection cluster.
     * 
     * Gets the details of an ASR replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of an ASR replication protection cluster along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ReplicationProtectionClusterInner> getWithResponse(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicationProtectionClusterName, Context context);

    /**
     * Gets the details of a Replication protection cluster.
     * 
     * Gets the details of an ASR replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of an ASR replication protection cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner get(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicationProtectionClusterName);

    /**
     * Create Replication protection Cluster.
     * 
     * The operation to create an ASR replication protection cluster item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param replicationProtectionCluster Create replication protection cluster Input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner> beginCreate(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName, ReplicationProtectionClusterInner replicationProtectionCluster);

    /**
     * Create Replication protection Cluster.
     * 
     * The operation to create an ASR replication protection cluster item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param replicationProtectionCluster Create replication protection cluster Input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner> beginCreate(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName, ReplicationProtectionClusterInner replicationProtectionCluster,
        Context context);

    /**
     * Create Replication protection Cluster.
     * 
     * The operation to create an ASR replication protection cluster item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param replicationProtectionCluster Create replication protection cluster Input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner create(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicationProtectionClusterName,
        ReplicationProtectionClusterInner replicationProtectionCluster);

    /**
     * Create Replication protection Cluster.
     * 
     * The operation to create an ASR replication protection cluster item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param replicationProtectionCluster Create replication protection cluster Input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner create(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicationProtectionClusterName,
        ReplicationProtectionClusterInner replicationProtectionCluster, Context context);

    /**
     * Purge the replication protection cluster.
     * 
     * The operation to purge the replication protection cluster. This operation will force delete the replication
     * protection cluster. Use the remove operation on replication protection cluster to perform a clean disable
     * replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginPurge(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicationProtectionClusterName);

    /**
     * Purge the replication protection cluster.
     * 
     * The operation to purge the replication protection cluster. This operation will force delete the replication
     * protection cluster. Use the remove operation on replication protection cluster to perform a clean disable
     * replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginPurge(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicationProtectionClusterName, Context context);

    /**
     * Purge the replication protection cluster.
     * 
     * The operation to purge the replication protection cluster. This operation will force delete the replication
     * protection cluster. Use the remove operation on replication protection cluster to perform a clean disable
     * replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void purge(String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName);

    /**
     * Purge the replication protection cluster.
     * 
     * The operation to purge the replication protection cluster. This operation will force delete the replication
     * protection cluster. Use the remove operation on replication protection cluster to perform a clean disable
     * replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void purge(String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName, Context context);

    /**
     * Execute the change recovery point operation for cluster.
     * 
     * Operation to apply a new cluster recovery point on the Protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param applyClusterRecoveryPointInput Apply recovery point input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner>
        beginApplyRecoveryPoint(String resourceGroupName, String resourceName, String fabricName,
            String protectionContainerName, String replicationProtectionClusterName,
            ApplyClusterRecoveryPointInput applyClusterRecoveryPointInput);

    /**
     * Execute the change recovery point operation for cluster.
     * 
     * Operation to apply a new cluster recovery point on the Protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param applyClusterRecoveryPointInput Apply recovery point input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner>
        beginApplyRecoveryPoint(String resourceGroupName, String resourceName, String fabricName,
            String protectionContainerName, String replicationProtectionClusterName,
            ApplyClusterRecoveryPointInput applyClusterRecoveryPointInput, Context context);

    /**
     * Execute the change recovery point operation for cluster.
     * 
     * Operation to apply a new cluster recovery point on the Protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param applyClusterRecoveryPointInput Apply recovery point input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner applyRecoveryPoint(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicationProtectionClusterName,
        ApplyClusterRecoveryPointInput applyClusterRecoveryPointInput);

    /**
     * Execute the change recovery point operation for cluster.
     * 
     * Operation to apply a new cluster recovery point on the Protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param applyClusterRecoveryPointInput Apply recovery point input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner applyRecoveryPoint(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicationProtectionClusterName,
        ApplyClusterRecoveryPointInput applyClusterRecoveryPointInput, Context context);

    /**
     * Execute commit failover for cluster.
     * 
     * Operation to initiate commit failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner> beginFailoverCommit(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName);

    /**
     * Execute commit failover for cluster.
     * 
     * Operation to initiate commit failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner> beginFailoverCommit(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName, Context context);

    /**
     * Execute commit failover for cluster.
     * 
     * Operation to initiate commit failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner failoverCommit(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicationProtectionClusterName);

    /**
     * Execute commit failover for cluster.
     * 
     * Operation to initiate commit failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner failoverCommit(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicationProtectionClusterName, Context context);

    /**
     * Tracks the Replication protection cluster async operation.
     * 
     * Track the results of an asynchronous operation on the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param jobId job id to track.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ReplicationProtectionClusterInner> getOperationResultsWithResponse(String resourceGroupName,
        String resourceName, String fabricName, String protectionContainerName, String replicationProtectionClusterName,
        String jobId, Context context);

    /**
     * Tracks the Replication protection cluster async operation.
     * 
     * Track the results of an asynchronous operation on the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param jobId job id to track.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner getOperationResults(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicationProtectionClusterName, String jobId);

    /**
     * Resynchronize or repair replication of protection cluster.
     * 
     * The operation to repair replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner> beginRepairReplication(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName);

    /**
     * Resynchronize or repair replication of protection cluster.
     * 
     * The operation to repair replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner> beginRepairReplication(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName, Context context);

    /**
     * Resynchronize or repair replication of protection cluster.
     * 
     * The operation to repair replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner repairReplication(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicationProtectionClusterName);

    /**
     * Resynchronize or repair replication of protection cluster.
     * 
     * The operation to repair replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner repairReplication(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicationProtectionClusterName, Context context);

    /**
     * Execute test failover for cluster.
     * 
     * Operation to initiate a failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param failoverInput Cluster test failover input body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner> beginTestFailover(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName, ClusterTestFailoverInput failoverInput);

    /**
     * Execute test failover for cluster.
     * 
     * Operation to initiate a failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param failoverInput Cluster test failover input body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner> beginTestFailover(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName, ClusterTestFailoverInput failoverInput, Context context);

    /**
     * Execute test failover for cluster.
     * 
     * Operation to initiate a failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param failoverInput Cluster test failover input body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner testFailover(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicationProtectionClusterName,
        ClusterTestFailoverInput failoverInput);

    /**
     * Execute test failover for cluster.
     * 
     * Operation to initiate a failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param failoverInput Cluster test failover input body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner testFailover(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicationProtectionClusterName, ClusterTestFailoverInput failoverInput,
        Context context);

    /**
     * Execute test failover cleanup for cluster.
     * 
     * Operation to clean up the test failover of a replication protected cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param cleanupInput Test failover cleanup input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner>
        beginTestFailoverCleanup(String resourceGroupName, String resourceName, String fabricName,
            String protectionContainerName, String replicationProtectionClusterName,
            ClusterTestFailoverCleanupInput cleanupInput);

    /**
     * Execute test failover cleanup for cluster.
     * 
     * Operation to clean up the test failover of a replication protected cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param cleanupInput Test failover cleanup input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner>
        beginTestFailoverCleanup(String resourceGroupName, String resourceName, String fabricName,
            String protectionContainerName, String replicationProtectionClusterName,
            ClusterTestFailoverCleanupInput cleanupInput, Context context);

    /**
     * Execute test failover cleanup for cluster.
     * 
     * Operation to clean up the test failover of a replication protected cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param cleanupInput Test failover cleanup input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner testFailoverCleanup(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicationProtectionClusterName,
        ClusterTestFailoverCleanupInput cleanupInput);

    /**
     * Execute test failover cleanup for cluster.
     * 
     * Operation to clean up the test failover of a replication protected cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param cleanupInput Test failover cleanup input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner testFailoverCleanup(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicationProtectionClusterName,
        ClusterTestFailoverCleanupInput cleanupInput, Context context);

    /**
     * Execute unplanned cluster failover.
     * 
     * Operation to initiate a failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param failoverInput Failover input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner> beginUnplannedFailover(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName, ClusterUnplannedFailoverInput failoverInput);

    /**
     * Execute unplanned cluster failover.
     * 
     * Operation to initiate a failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param failoverInput Failover input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectionClusterInner>, ReplicationProtectionClusterInner> beginUnplannedFailover(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicationProtectionClusterName, ClusterUnplannedFailoverInput failoverInput, Context context);

    /**
     * Execute unplanned cluster failover.
     * 
     * Operation to initiate a failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param failoverInput Failover input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner unplannedFailover(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicationProtectionClusterName,
        ClusterUnplannedFailoverInput failoverInput);

    /**
     * Execute unplanned cluster failover.
     * 
     * Operation to initiate a failover of the replication protection cluster.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicationProtectionClusterName Replication protection cluster name.
     * @param failoverInput Failover input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protection Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectionClusterInner unplannedFailover(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicationProtectionClusterName,
        ClusterUnplannedFailoverInput failoverInput, Context context);

    /**
     * Gets the list of Replication protection clusters in vault.
     * 
     * Gets the list of ASR replication protected clusters in the vault.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of ASR replication protected clusters in the vault as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ReplicationProtectionClusterInner> list(String resourceGroupName, String resourceName);

    /**
     * Gets the list of Replication protection clusters in vault.
     * 
     * Gets the list of ASR replication protected clusters in the vault.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param skipToken The pagination token. Possible values: "FabricId" or "FabricId_CloudId" or null.
     * @param filter OData filter options.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of ASR replication protected clusters in the vault as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ReplicationProtectionClusterInner> list(String resourceGroupName, String resourceName,
        String skipToken, String filter, Context context);
}
