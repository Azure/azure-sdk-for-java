// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A2A Policy creation input.
 */
@Fluent
public final class A2APolicyCreationInput extends PolicyProviderSpecificInput {
    /*
     * The class type.
     */
    private String instanceType = "A2A";

    /*
     * The duration in minutes until which the recovery points need to be stored.
     */
    private Integer recoveryPointHistory;

    /*
     * The crash consistent snapshot frequency (in minutes).
     */
    private Integer crashConsistentFrequencyInMinutes;

    /*
     * The app consistent snapshot frequency (in minutes).
     */
    private Integer appConsistentFrequencyInMinutes;

    /*
     * A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
     */
    private SetMultiVmSyncStatus multiVmSyncStatus;

    /**
     * Creates an instance of A2APolicyCreationInput class.
     */
    public A2APolicyCreationInput() {
    }

    /**
     * Get the instanceType property: The class type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the recoveryPointHistory property: The duration in minutes until which the recovery points need to be stored.
     * 
     * @return the recoveryPointHistory value.
     */
    public Integer recoveryPointHistory() {
        return this.recoveryPointHistory;
    }

    /**
     * Set the recoveryPointHistory property: The duration in minutes until which the recovery points need to be stored.
     * 
     * @param recoveryPointHistory the recoveryPointHistory value to set.
     * @return the A2APolicyCreationInput object itself.
     */
    public A2APolicyCreationInput withRecoveryPointHistory(Integer recoveryPointHistory) {
        this.recoveryPointHistory = recoveryPointHistory;
        return this;
    }

    /**
     * Get the crashConsistentFrequencyInMinutes property: The crash consistent snapshot frequency (in minutes).
     * 
     * @return the crashConsistentFrequencyInMinutes value.
     */
    public Integer crashConsistentFrequencyInMinutes() {
        return this.crashConsistentFrequencyInMinutes;
    }

    /**
     * Set the crashConsistentFrequencyInMinutes property: The crash consistent snapshot frequency (in minutes).
     * 
     * @param crashConsistentFrequencyInMinutes the crashConsistentFrequencyInMinutes value to set.
     * @return the A2APolicyCreationInput object itself.
     */
    public A2APolicyCreationInput withCrashConsistentFrequencyInMinutes(Integer crashConsistentFrequencyInMinutes) {
        this.crashConsistentFrequencyInMinutes = crashConsistentFrequencyInMinutes;
        return this;
    }

    /**
     * Get the appConsistentFrequencyInMinutes property: The app consistent snapshot frequency (in minutes).
     * 
     * @return the appConsistentFrequencyInMinutes value.
     */
    public Integer appConsistentFrequencyInMinutes() {
        return this.appConsistentFrequencyInMinutes;
    }

    /**
     * Set the appConsistentFrequencyInMinutes property: The app consistent snapshot frequency (in minutes).
     * 
     * @param appConsistentFrequencyInMinutes the appConsistentFrequencyInMinutes value to set.
     * @return the A2APolicyCreationInput object itself.
     */
    public A2APolicyCreationInput withAppConsistentFrequencyInMinutes(Integer appConsistentFrequencyInMinutes) {
        this.appConsistentFrequencyInMinutes = appConsistentFrequencyInMinutes;
        return this;
    }

    /**
     * Get the multiVmSyncStatus property: A value indicating whether multi-VM sync has to be enabled. Value should be
     * 'Enabled' or 'Disabled'.
     * 
     * @return the multiVmSyncStatus value.
     */
    public SetMultiVmSyncStatus multiVmSyncStatus() {
        return this.multiVmSyncStatus;
    }

    /**
     * Set the multiVmSyncStatus property: A value indicating whether multi-VM sync has to be enabled. Value should be
     * 'Enabled' or 'Disabled'.
     * 
     * @param multiVmSyncStatus the multiVmSyncStatus value to set.
     * @return the A2APolicyCreationInput object itself.
     */
    public A2APolicyCreationInput withMultiVmSyncStatus(SetMultiVmSyncStatus multiVmSyncStatus) {
        this.multiVmSyncStatus = multiVmSyncStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (multiVmSyncStatus() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property multiVmSyncStatus in model A2APolicyCreationInput"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(A2APolicyCreationInput.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("multiVmSyncStatus",
            this.multiVmSyncStatus == null ? null : this.multiVmSyncStatus.toString());
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeNumberField("recoveryPointHistory", this.recoveryPointHistory);
        jsonWriter.writeNumberField("crashConsistentFrequencyInMinutes", this.crashConsistentFrequencyInMinutes);
        jsonWriter.writeNumberField("appConsistentFrequencyInMinutes", this.appConsistentFrequencyInMinutes);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of A2APolicyCreationInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of A2APolicyCreationInput if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the A2APolicyCreationInput.
     */
    public static A2APolicyCreationInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            A2APolicyCreationInput deserializedA2APolicyCreationInput = new A2APolicyCreationInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("multiVmSyncStatus".equals(fieldName)) {
                    deserializedA2APolicyCreationInput.multiVmSyncStatus
                        = SetMultiVmSyncStatus.fromString(reader.getString());
                } else if ("instanceType".equals(fieldName)) {
                    deserializedA2APolicyCreationInput.instanceType = reader.getString();
                } else if ("recoveryPointHistory".equals(fieldName)) {
                    deserializedA2APolicyCreationInput.recoveryPointHistory = reader.getNullable(JsonReader::getInt);
                } else if ("crashConsistentFrequencyInMinutes".equals(fieldName)) {
                    deserializedA2APolicyCreationInput.crashConsistentFrequencyInMinutes
                        = reader.getNullable(JsonReader::getInt);
                } else if ("appConsistentFrequencyInMinutes".equals(fieldName)) {
                    deserializedA2APolicyCreationInput.appConsistentFrequencyInMinutes
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedA2APolicyCreationInput;
        });
    }
}
