// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Hyper-V Replica Azure specific protection profile details.
 */
@Fluent
public final class HyperVReplicaAzurePolicyDetails extends PolicyProviderSpecificDetails {
    /*
     * Gets the class type. Overridden in derived classes.
     */
    private String instanceType = "HyperVReplicaAzure";

    /*
     * The duration (in hours) to which point the recovery history needs to be maintained.
     */
    private Integer recoveryPointHistoryDurationInHours;

    /*
     * The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
     */
    private Integer applicationConsistentSnapshotFrequencyInHours;

    /*
     * The replication interval.
     */
    private Integer replicationInterval;

    /*
     * The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts
     * immediately.
     */
    private String onlineReplicationStartTime;

    /*
     * A value indicating whether encryption is enabled for virtual machines in this cloud.
     */
    private String encryption;

    /*
     * The active storage account Id.
     */
    private String activeStorageAccountId;

    /**
     * Creates an instance of HyperVReplicaAzurePolicyDetails class.
     */
    public HyperVReplicaAzurePolicyDetails() {
    }

    /**
     * Get the instanceType property: Gets the class type. Overridden in derived classes.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the recoveryPointHistoryDurationInHours property: The duration (in hours) to which point the recovery history
     * needs to be maintained.
     * 
     * @return the recoveryPointHistoryDurationInHours value.
     */
    public Integer recoveryPointHistoryDurationInHours() {
        return this.recoveryPointHistoryDurationInHours;
    }

    /**
     * Set the recoveryPointHistoryDurationInHours property: The duration (in hours) to which point the recovery history
     * needs to be maintained.
     * 
     * @param recoveryPointHistoryDurationInHours the recoveryPointHistoryDurationInHours value to set.
     * @return the HyperVReplicaAzurePolicyDetails object itself.
     */
    public HyperVReplicaAzurePolicyDetails
        withRecoveryPointHistoryDurationInHours(Integer recoveryPointHistoryDurationInHours) {
        this.recoveryPointHistoryDurationInHours = recoveryPointHistoryDurationInHours;
        return this;
    }

    /**
     * Get the applicationConsistentSnapshotFrequencyInHours property: The interval (in hours) at which Hyper-V Replica
     * should create an application consistent snapshot within the VM.
     * 
     * @return the applicationConsistentSnapshotFrequencyInHours value.
     */
    public Integer applicationConsistentSnapshotFrequencyInHours() {
        return this.applicationConsistentSnapshotFrequencyInHours;
    }

    /**
     * Set the applicationConsistentSnapshotFrequencyInHours property: The interval (in hours) at which Hyper-V Replica
     * should create an application consistent snapshot within the VM.
     * 
     * @param applicationConsistentSnapshotFrequencyInHours the applicationConsistentSnapshotFrequencyInHours value to
     * set.
     * @return the HyperVReplicaAzurePolicyDetails object itself.
     */
    public HyperVReplicaAzurePolicyDetails
        withApplicationConsistentSnapshotFrequencyInHours(Integer applicationConsistentSnapshotFrequencyInHours) {
        this.applicationConsistentSnapshotFrequencyInHours = applicationConsistentSnapshotFrequencyInHours;
        return this;
    }

    /**
     * Get the replicationInterval property: The replication interval.
     * 
     * @return the replicationInterval value.
     */
    public Integer replicationInterval() {
        return this.replicationInterval;
    }

    /**
     * Set the replicationInterval property: The replication interval.
     * 
     * @param replicationInterval the replicationInterval value to set.
     * @return the HyperVReplicaAzurePolicyDetails object itself.
     */
    public HyperVReplicaAzurePolicyDetails withReplicationInterval(Integer replicationInterval) {
        this.replicationInterval = replicationInterval;
        return this;
    }

    /**
     * Get the onlineReplicationStartTime property: The scheduled start time for the initial replication. If this
     * parameter is Null, the initial replication starts immediately.
     * 
     * @return the onlineReplicationStartTime value.
     */
    public String onlineReplicationStartTime() {
        return this.onlineReplicationStartTime;
    }

    /**
     * Set the onlineReplicationStartTime property: The scheduled start time for the initial replication. If this
     * parameter is Null, the initial replication starts immediately.
     * 
     * @param onlineReplicationStartTime the onlineReplicationStartTime value to set.
     * @return the HyperVReplicaAzurePolicyDetails object itself.
     */
    public HyperVReplicaAzurePolicyDetails withOnlineReplicationStartTime(String onlineReplicationStartTime) {
        this.onlineReplicationStartTime = onlineReplicationStartTime;
        return this;
    }

    /**
     * Get the encryption property: A value indicating whether encryption is enabled for virtual machines in this cloud.
     * 
     * @return the encryption value.
     */
    public String encryption() {
        return this.encryption;
    }

    /**
     * Set the encryption property: A value indicating whether encryption is enabled for virtual machines in this cloud.
     * 
     * @param encryption the encryption value to set.
     * @return the HyperVReplicaAzurePolicyDetails object itself.
     */
    public HyperVReplicaAzurePolicyDetails withEncryption(String encryption) {
        this.encryption = encryption;
        return this;
    }

    /**
     * Get the activeStorageAccountId property: The active storage account Id.
     * 
     * @return the activeStorageAccountId value.
     */
    public String activeStorageAccountId() {
        return this.activeStorageAccountId;
    }

    /**
     * Set the activeStorageAccountId property: The active storage account Id.
     * 
     * @param activeStorageAccountId the activeStorageAccountId value to set.
     * @return the HyperVReplicaAzurePolicyDetails object itself.
     */
    public HyperVReplicaAzurePolicyDetails withActiveStorageAccountId(String activeStorageAccountId) {
        this.activeStorageAccountId = activeStorageAccountId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeNumberField("recoveryPointHistoryDurationInHours", this.recoveryPointHistoryDurationInHours);
        jsonWriter.writeNumberField("applicationConsistentSnapshotFrequencyInHours",
            this.applicationConsistentSnapshotFrequencyInHours);
        jsonWriter.writeNumberField("replicationInterval", this.replicationInterval);
        jsonWriter.writeStringField("onlineReplicationStartTime", this.onlineReplicationStartTime);
        jsonWriter.writeStringField("encryption", this.encryption);
        jsonWriter.writeStringField("activeStorageAccountId", this.activeStorageAccountId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HyperVReplicaAzurePolicyDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HyperVReplicaAzurePolicyDetails if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the HyperVReplicaAzurePolicyDetails.
     */
    public static HyperVReplicaAzurePolicyDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HyperVReplicaAzurePolicyDetails deserializedHyperVReplicaAzurePolicyDetails
                = new HyperVReplicaAzurePolicyDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedHyperVReplicaAzurePolicyDetails.instanceType = reader.getString();
                } else if ("recoveryPointHistoryDurationInHours".equals(fieldName)) {
                    deserializedHyperVReplicaAzurePolicyDetails.recoveryPointHistoryDurationInHours
                        = reader.getNullable(JsonReader::getInt);
                } else if ("applicationConsistentSnapshotFrequencyInHours".equals(fieldName)) {
                    deserializedHyperVReplicaAzurePolicyDetails.applicationConsistentSnapshotFrequencyInHours
                        = reader.getNullable(JsonReader::getInt);
                } else if ("replicationInterval".equals(fieldName)) {
                    deserializedHyperVReplicaAzurePolicyDetails.replicationInterval
                        = reader.getNullable(JsonReader::getInt);
                } else if ("onlineReplicationStartTime".equals(fieldName)) {
                    deserializedHyperVReplicaAzurePolicyDetails.onlineReplicationStartTime = reader.getString();
                } else if ("encryption".equals(fieldName)) {
                    deserializedHyperVReplicaAzurePolicyDetails.encryption = reader.getString();
                } else if ("activeStorageAccountId".equals(fieldName)) {
                    deserializedHyperVReplicaAzurePolicyDetails.activeStorageAccountId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHyperVReplicaAzurePolicyDetails;
        });
    }
}
