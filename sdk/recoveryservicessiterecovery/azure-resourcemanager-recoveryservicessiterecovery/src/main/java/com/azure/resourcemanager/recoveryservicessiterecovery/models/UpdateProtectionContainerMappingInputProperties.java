// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Container pairing update input.
 */
@Fluent
public final class UpdateProtectionContainerMappingInputProperties
    implements JsonSerializable<UpdateProtectionContainerMappingInputProperties> {
    /*
     * Provider specific input for updating protection container mapping.
     */
    private ReplicationProviderSpecificUpdateContainerMappingInput providerSpecificInput;

    /**
     * Creates an instance of UpdateProtectionContainerMappingInputProperties class.
     */
    public UpdateProtectionContainerMappingInputProperties() {
    }

    /**
     * Get the providerSpecificInput property: Provider specific input for updating protection container mapping.
     * 
     * @return the providerSpecificInput value.
     */
    public ReplicationProviderSpecificUpdateContainerMappingInput providerSpecificInput() {
        return this.providerSpecificInput;
    }

    /**
     * Set the providerSpecificInput property: Provider specific input for updating protection container mapping.
     * 
     * @param providerSpecificInput the providerSpecificInput value to set.
     * @return the UpdateProtectionContainerMappingInputProperties object itself.
     */
    public UpdateProtectionContainerMappingInputProperties
        withProviderSpecificInput(ReplicationProviderSpecificUpdateContainerMappingInput providerSpecificInput) {
        this.providerSpecificInput = providerSpecificInput;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (providerSpecificInput() != null) {
            providerSpecificInput().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("providerSpecificInput", this.providerSpecificInput);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UpdateProtectionContainerMappingInputProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UpdateProtectionContainerMappingInputProperties if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the UpdateProtectionContainerMappingInputProperties.
     */
    public static UpdateProtectionContainerMappingInputProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UpdateProtectionContainerMappingInputProperties deserializedUpdateProtectionContainerMappingInputProperties
                = new UpdateProtectionContainerMappingInputProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("providerSpecificInput".equals(fieldName)) {
                    deserializedUpdateProtectionContainerMappingInputProperties.providerSpecificInput
                        = ReplicationProviderSpecificUpdateContainerMappingInput.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUpdateProtectionContainerMappingInputProperties;
        });
    }
}
