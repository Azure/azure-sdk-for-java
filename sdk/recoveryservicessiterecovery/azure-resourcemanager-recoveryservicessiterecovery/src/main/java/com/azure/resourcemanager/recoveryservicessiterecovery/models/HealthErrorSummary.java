// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * class to define the summary of the health error details.
 */
@Fluent
public final class HealthErrorSummary implements JsonSerializable<HealthErrorSummary> {
    /*
     * The code of the health error.
     */
    private String summaryCode;

    /*
     * The category of the health error.
     */
    private HealthErrorCategory category;

    /*
     * Severity of error.
     */
    private Severity severity;

    /*
     * The summary message of the health error.
     */
    private String summaryMessage;

    /*
     * The type of affected ARM resource.
     */
    private String affectedResourceType;

    /*
     * The sub type of any subcomponent within the ARM resource that this might be applicable. Value remains null if not
     * applicable.
     */
    private String affectedResourceSubtype;

    /*
     * The list of affected resource correlation Ids. This can be used to uniquely identify the count of items affected
     * by a specific category and severity as well as count of item affected by an specific issue.
     */
    private List<String> affectedResourceCorrelationIds;

    /**
     * Creates an instance of HealthErrorSummary class.
     */
    public HealthErrorSummary() {
    }

    /**
     * Get the summaryCode property: The code of the health error.
     * 
     * @return the summaryCode value.
     */
    public String summaryCode() {
        return this.summaryCode;
    }

    /**
     * Set the summaryCode property: The code of the health error.
     * 
     * @param summaryCode the summaryCode value to set.
     * @return the HealthErrorSummary object itself.
     */
    public HealthErrorSummary withSummaryCode(String summaryCode) {
        this.summaryCode = summaryCode;
        return this;
    }

    /**
     * Get the category property: The category of the health error.
     * 
     * @return the category value.
     */
    public HealthErrorCategory category() {
        return this.category;
    }

    /**
     * Set the category property: The category of the health error.
     * 
     * @param category the category value to set.
     * @return the HealthErrorSummary object itself.
     */
    public HealthErrorSummary withCategory(HealthErrorCategory category) {
        this.category = category;
        return this;
    }

    /**
     * Get the severity property: Severity of error.
     * 
     * @return the severity value.
     */
    public Severity severity() {
        return this.severity;
    }

    /**
     * Set the severity property: Severity of error.
     * 
     * @param severity the severity value to set.
     * @return the HealthErrorSummary object itself.
     */
    public HealthErrorSummary withSeverity(Severity severity) {
        this.severity = severity;
        return this;
    }

    /**
     * Get the summaryMessage property: The summary message of the health error.
     * 
     * @return the summaryMessage value.
     */
    public String summaryMessage() {
        return this.summaryMessage;
    }

    /**
     * Set the summaryMessage property: The summary message of the health error.
     * 
     * @param summaryMessage the summaryMessage value to set.
     * @return the HealthErrorSummary object itself.
     */
    public HealthErrorSummary withSummaryMessage(String summaryMessage) {
        this.summaryMessage = summaryMessage;
        return this;
    }

    /**
     * Get the affectedResourceType property: The type of affected ARM resource.
     * 
     * @return the affectedResourceType value.
     */
    public String affectedResourceType() {
        return this.affectedResourceType;
    }

    /**
     * Set the affectedResourceType property: The type of affected ARM resource.
     * 
     * @param affectedResourceType the affectedResourceType value to set.
     * @return the HealthErrorSummary object itself.
     */
    public HealthErrorSummary withAffectedResourceType(String affectedResourceType) {
        this.affectedResourceType = affectedResourceType;
        return this;
    }

    /**
     * Get the affectedResourceSubtype property: The sub type of any subcomponent within the ARM resource that this
     * might be applicable. Value remains null if not applicable.
     * 
     * @return the affectedResourceSubtype value.
     */
    public String affectedResourceSubtype() {
        return this.affectedResourceSubtype;
    }

    /**
     * Set the affectedResourceSubtype property: The sub type of any subcomponent within the ARM resource that this
     * might be applicable. Value remains null if not applicable.
     * 
     * @param affectedResourceSubtype the affectedResourceSubtype value to set.
     * @return the HealthErrorSummary object itself.
     */
    public HealthErrorSummary withAffectedResourceSubtype(String affectedResourceSubtype) {
        this.affectedResourceSubtype = affectedResourceSubtype;
        return this;
    }

    /**
     * Get the affectedResourceCorrelationIds property: The list of affected resource correlation Ids. This can be used
     * to uniquely identify the count of items affected by a specific category and severity as well as count of item
     * affected by an specific issue.
     * 
     * @return the affectedResourceCorrelationIds value.
     */
    public List<String> affectedResourceCorrelationIds() {
        return this.affectedResourceCorrelationIds;
    }

    /**
     * Set the affectedResourceCorrelationIds property: The list of affected resource correlation Ids. This can be used
     * to uniquely identify the count of items affected by a specific category and severity as well as count of item
     * affected by an specific issue.
     * 
     * @param affectedResourceCorrelationIds the affectedResourceCorrelationIds value to set.
     * @return the HealthErrorSummary object itself.
     */
    public HealthErrorSummary withAffectedResourceCorrelationIds(List<String> affectedResourceCorrelationIds) {
        this.affectedResourceCorrelationIds = affectedResourceCorrelationIds;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("summaryCode", this.summaryCode);
        jsonWriter.writeStringField("category", this.category == null ? null : this.category.toString());
        jsonWriter.writeStringField("severity", this.severity == null ? null : this.severity.toString());
        jsonWriter.writeStringField("summaryMessage", this.summaryMessage);
        jsonWriter.writeStringField("affectedResourceType", this.affectedResourceType);
        jsonWriter.writeStringField("affectedResourceSubtype", this.affectedResourceSubtype);
        jsonWriter.writeArrayField("affectedResourceCorrelationIds", this.affectedResourceCorrelationIds,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HealthErrorSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HealthErrorSummary if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the HealthErrorSummary.
     */
    public static HealthErrorSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HealthErrorSummary deserializedHealthErrorSummary = new HealthErrorSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("summaryCode".equals(fieldName)) {
                    deserializedHealthErrorSummary.summaryCode = reader.getString();
                } else if ("category".equals(fieldName)) {
                    deserializedHealthErrorSummary.category = HealthErrorCategory.fromString(reader.getString());
                } else if ("severity".equals(fieldName)) {
                    deserializedHealthErrorSummary.severity = Severity.fromString(reader.getString());
                } else if ("summaryMessage".equals(fieldName)) {
                    deserializedHealthErrorSummary.summaryMessage = reader.getString();
                } else if ("affectedResourceType".equals(fieldName)) {
                    deserializedHealthErrorSummary.affectedResourceType = reader.getString();
                } else if ("affectedResourceSubtype".equals(fieldName)) {
                    deserializedHealthErrorSummary.affectedResourceSubtype = reader.getString();
                } else if ("affectedResourceCorrelationIds".equals(fieldName)) {
                    List<String> affectedResourceCorrelationIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedHealthErrorSummary.affectedResourceCorrelationIds = affectedResourceCorrelationIds;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHealthErrorSummary;
        });
    }
}
