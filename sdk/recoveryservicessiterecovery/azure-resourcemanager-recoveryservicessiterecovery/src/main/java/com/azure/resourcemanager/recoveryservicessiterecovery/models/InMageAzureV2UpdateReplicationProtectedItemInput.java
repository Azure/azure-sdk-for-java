// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** InMage Azure V2 input to update replication protected item. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "instanceType")
@JsonTypeName("InMageAzureV2")
@Fluent
public final class InMageAzureV2UpdateReplicationProtectedItemInput
    extends UpdateReplicationProtectedItemProviderInput {
    @JsonIgnore
    private final ClientLogger logger = new ClientLogger(InMageAzureV2UpdateReplicationProtectedItemInput.class);

    /*
     * The recovery Azure resource group Id for classic deployment.
     */
    @JsonProperty(value = "recoveryAzureV1ResourceGroupId")
    private String recoveryAzureV1ResourceGroupId;

    /*
     * The recovery Azure resource group Id for resource manager deployment.
     */
    @JsonProperty(value = "recoveryAzureV2ResourceGroupId")
    private String recoveryAzureV2ResourceGroupId;

    /*
     * A value indicating whether managed disks should be used during failover.
     */
    @JsonProperty(value = "useManagedDisks")
    private String useManagedDisks;

    /*
     * The target proximity placement group Id.
     */
    @JsonProperty(value = "targetProximityPlacementGroupId")
    private String targetProximityPlacementGroupId;

    /*
     * The target availability zone.
     */
    @JsonProperty(value = "targetAvailabilityZone")
    private String targetAvailabilityZone;

    /**
     * Get the recoveryAzureV1ResourceGroupId property: The recovery Azure resource group Id for classic deployment.
     *
     * @return the recoveryAzureV1ResourceGroupId value.
     */
    public String recoveryAzureV1ResourceGroupId() {
        return this.recoveryAzureV1ResourceGroupId;
    }

    /**
     * Set the recoveryAzureV1ResourceGroupId property: The recovery Azure resource group Id for classic deployment.
     *
     * @param recoveryAzureV1ResourceGroupId the recoveryAzureV1ResourceGroupId value to set.
     * @return the InMageAzureV2UpdateReplicationProtectedItemInput object itself.
     */
    public InMageAzureV2UpdateReplicationProtectedItemInput withRecoveryAzureV1ResourceGroupId(
        String recoveryAzureV1ResourceGroupId) {
        this.recoveryAzureV1ResourceGroupId = recoveryAzureV1ResourceGroupId;
        return this;
    }

    /**
     * Get the recoveryAzureV2ResourceGroupId property: The recovery Azure resource group Id for resource manager
     * deployment.
     *
     * @return the recoveryAzureV2ResourceGroupId value.
     */
    public String recoveryAzureV2ResourceGroupId() {
        return this.recoveryAzureV2ResourceGroupId;
    }

    /**
     * Set the recoveryAzureV2ResourceGroupId property: The recovery Azure resource group Id for resource manager
     * deployment.
     *
     * @param recoveryAzureV2ResourceGroupId the recoveryAzureV2ResourceGroupId value to set.
     * @return the InMageAzureV2UpdateReplicationProtectedItemInput object itself.
     */
    public InMageAzureV2UpdateReplicationProtectedItemInput withRecoveryAzureV2ResourceGroupId(
        String recoveryAzureV2ResourceGroupId) {
        this.recoveryAzureV2ResourceGroupId = recoveryAzureV2ResourceGroupId;
        return this;
    }

    /**
     * Get the useManagedDisks property: A value indicating whether managed disks should be used during failover.
     *
     * @return the useManagedDisks value.
     */
    public String useManagedDisks() {
        return this.useManagedDisks;
    }

    /**
     * Set the useManagedDisks property: A value indicating whether managed disks should be used during failover.
     *
     * @param useManagedDisks the useManagedDisks value to set.
     * @return the InMageAzureV2UpdateReplicationProtectedItemInput object itself.
     */
    public InMageAzureV2UpdateReplicationProtectedItemInput withUseManagedDisks(String useManagedDisks) {
        this.useManagedDisks = useManagedDisks;
        return this;
    }

    /**
     * Get the targetProximityPlacementGroupId property: The target proximity placement group Id.
     *
     * @return the targetProximityPlacementGroupId value.
     */
    public String targetProximityPlacementGroupId() {
        return this.targetProximityPlacementGroupId;
    }

    /**
     * Set the targetProximityPlacementGroupId property: The target proximity placement group Id.
     *
     * @param targetProximityPlacementGroupId the targetProximityPlacementGroupId value to set.
     * @return the InMageAzureV2UpdateReplicationProtectedItemInput object itself.
     */
    public InMageAzureV2UpdateReplicationProtectedItemInput withTargetProximityPlacementGroupId(
        String targetProximityPlacementGroupId) {
        this.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
        return this;
    }

    /**
     * Get the targetAvailabilityZone property: The target availability zone.
     *
     * @return the targetAvailabilityZone value.
     */
    public String targetAvailabilityZone() {
        return this.targetAvailabilityZone;
    }

    /**
     * Set the targetAvailabilityZone property: The target availability zone.
     *
     * @param targetAvailabilityZone the targetAvailabilityZone value to set.
     * @return the InMageAzureV2UpdateReplicationProtectedItemInput object itself.
     */
    public InMageAzureV2UpdateReplicationProtectedItemInput withTargetAvailabilityZone(String targetAvailabilityZone) {
        this.targetAvailabilityZone = targetAvailabilityZone;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
