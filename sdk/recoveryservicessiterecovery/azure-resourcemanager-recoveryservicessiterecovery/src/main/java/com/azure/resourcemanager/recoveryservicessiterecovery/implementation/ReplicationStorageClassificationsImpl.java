// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.recoveryservicessiterecovery.SiteRecoveryManager;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.ReplicationStorageClassificationsClient;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.StorageClassificationInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationStorageClassifications;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.StorageClassification;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ReplicationStorageClassificationsImpl implements ReplicationStorageClassifications {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ReplicationStorageClassificationsImpl.class);

    private final ReplicationStorageClassificationsClient innerClient;

    private final SiteRecoveryManager serviceManager;

    public ReplicationStorageClassificationsImpl(
        ReplicationStorageClassificationsClient innerClient, SiteRecoveryManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<StorageClassification> listByReplicationFabrics(
        String resourceName, String resourceGroupName, String fabricName) {
        PagedIterable<StorageClassificationInner> inner =
            this.serviceClient().listByReplicationFabrics(resourceName, resourceGroupName, fabricName);
        return inner.mapPage(inner1 -> new StorageClassificationImpl(inner1, this.manager()));
    }

    public PagedIterable<StorageClassification> listByReplicationFabrics(
        String resourceName, String resourceGroupName, String fabricName, Context context) {
        PagedIterable<StorageClassificationInner> inner =
            this.serviceClient().listByReplicationFabrics(resourceName, resourceGroupName, fabricName, context);
        return inner.mapPage(inner1 -> new StorageClassificationImpl(inner1, this.manager()));
    }

    public StorageClassification get(
        String resourceName, String resourceGroupName, String fabricName, String storageClassificationName) {
        StorageClassificationInner inner =
            this.serviceClient().get(resourceName, resourceGroupName, fabricName, storageClassificationName);
        if (inner != null) {
            return new StorageClassificationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<StorageClassification> getWithResponse(
        String resourceName,
        String resourceGroupName,
        String fabricName,
        String storageClassificationName,
        Context context) {
        Response<StorageClassificationInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceName, resourceGroupName, fabricName, storageClassificationName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new StorageClassificationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<StorageClassification> list(String resourceName, String resourceGroupName) {
        PagedIterable<StorageClassificationInner> inner = this.serviceClient().list(resourceName, resourceGroupName);
        return inner.mapPage(inner1 -> new StorageClassificationImpl(inner1, this.manager()));
    }

    public PagedIterable<StorageClassification> list(String resourceName, String resourceGroupName, Context context) {
        PagedIterable<StorageClassificationInner> inner =
            this.serviceClient().list(resourceName, resourceGroupName, context);
        return inner.mapPage(inner1 -> new StorageClassificationImpl(inner1, this.manager()));
    }

    private ReplicationStorageClassificationsClient serviceClient() {
        return this.innerClient;
    }

    private SiteRecoveryManager manager() {
        return this.serviceManager;
    }
}
