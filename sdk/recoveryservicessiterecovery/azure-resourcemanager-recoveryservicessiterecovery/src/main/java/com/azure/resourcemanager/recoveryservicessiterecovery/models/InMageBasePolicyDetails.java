// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Base class for the policies of providers using InMage replication.
 */
@Fluent
public final class InMageBasePolicyDetails extends PolicyProviderSpecificDetails {
    /*
     * Gets the class type. Overridden in derived classes.
     */
    private String instanceType = "InMageBasePolicyDetails";

    /*
     * The recovery point threshold in minutes.
     */
    private Integer recoveryPointThresholdInMinutes;

    /*
     * The duration in minutes until which the recovery points need to be stored.
     */
    private Integer recoveryPointHistory;

    /*
     * The app consistent snapshot frequency in minutes.
     */
    private Integer appConsistentFrequencyInMinutes;

    /*
     * A value indicating whether multi-VM sync has to be enabled.
     */
    private String multiVmSyncStatus;

    /**
     * Creates an instance of InMageBasePolicyDetails class.
     */
    public InMageBasePolicyDetails() {
    }

    /**
     * Get the instanceType property: Gets the class type. Overridden in derived classes.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the recoveryPointThresholdInMinutes property: The recovery point threshold in minutes.
     * 
     * @return the recoveryPointThresholdInMinutes value.
     */
    public Integer recoveryPointThresholdInMinutes() {
        return this.recoveryPointThresholdInMinutes;
    }

    /**
     * Set the recoveryPointThresholdInMinutes property: The recovery point threshold in minutes.
     * 
     * @param recoveryPointThresholdInMinutes the recoveryPointThresholdInMinutes value to set.
     * @return the InMageBasePolicyDetails object itself.
     */
    public InMageBasePolicyDetails withRecoveryPointThresholdInMinutes(Integer recoveryPointThresholdInMinutes) {
        this.recoveryPointThresholdInMinutes = recoveryPointThresholdInMinutes;
        return this;
    }

    /**
     * Get the recoveryPointHistory property: The duration in minutes until which the recovery points need to be stored.
     * 
     * @return the recoveryPointHistory value.
     */
    public Integer recoveryPointHistory() {
        return this.recoveryPointHistory;
    }

    /**
     * Set the recoveryPointHistory property: The duration in minutes until which the recovery points need to be stored.
     * 
     * @param recoveryPointHistory the recoveryPointHistory value to set.
     * @return the InMageBasePolicyDetails object itself.
     */
    public InMageBasePolicyDetails withRecoveryPointHistory(Integer recoveryPointHistory) {
        this.recoveryPointHistory = recoveryPointHistory;
        return this;
    }

    /**
     * Get the appConsistentFrequencyInMinutes property: The app consistent snapshot frequency in minutes.
     * 
     * @return the appConsistentFrequencyInMinutes value.
     */
    public Integer appConsistentFrequencyInMinutes() {
        return this.appConsistentFrequencyInMinutes;
    }

    /**
     * Set the appConsistentFrequencyInMinutes property: The app consistent snapshot frequency in minutes.
     * 
     * @param appConsistentFrequencyInMinutes the appConsistentFrequencyInMinutes value to set.
     * @return the InMageBasePolicyDetails object itself.
     */
    public InMageBasePolicyDetails withAppConsistentFrequencyInMinutes(Integer appConsistentFrequencyInMinutes) {
        this.appConsistentFrequencyInMinutes = appConsistentFrequencyInMinutes;
        return this;
    }

    /**
     * Get the multiVmSyncStatus property: A value indicating whether multi-VM sync has to be enabled.
     * 
     * @return the multiVmSyncStatus value.
     */
    public String multiVmSyncStatus() {
        return this.multiVmSyncStatus;
    }

    /**
     * Set the multiVmSyncStatus property: A value indicating whether multi-VM sync has to be enabled.
     * 
     * @param multiVmSyncStatus the multiVmSyncStatus value to set.
     * @return the InMageBasePolicyDetails object itself.
     */
    public InMageBasePolicyDetails withMultiVmSyncStatus(String multiVmSyncStatus) {
        this.multiVmSyncStatus = multiVmSyncStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeNumberField("recoveryPointThresholdInMinutes", this.recoveryPointThresholdInMinutes);
        jsonWriter.writeNumberField("recoveryPointHistory", this.recoveryPointHistory);
        jsonWriter.writeNumberField("appConsistentFrequencyInMinutes", this.appConsistentFrequencyInMinutes);
        jsonWriter.writeStringField("multiVmSyncStatus", this.multiVmSyncStatus);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InMageBasePolicyDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InMageBasePolicyDetails if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InMageBasePolicyDetails.
     */
    public static InMageBasePolicyDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InMageBasePolicyDetails deserializedInMageBasePolicyDetails = new InMageBasePolicyDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedInMageBasePolicyDetails.instanceType = reader.getString();
                } else if ("recoveryPointThresholdInMinutes".equals(fieldName)) {
                    deserializedInMageBasePolicyDetails.recoveryPointThresholdInMinutes
                        = reader.getNullable(JsonReader::getInt);
                } else if ("recoveryPointHistory".equals(fieldName)) {
                    deserializedInMageBasePolicyDetails.recoveryPointHistory = reader.getNullable(JsonReader::getInt);
                } else if ("appConsistentFrequencyInMinutes".equals(fieldName)) {
                    deserializedInMageBasePolicyDetails.appConsistentFrequencyInMinutes
                        = reader.getNullable(JsonReader::getInt);
                } else if ("multiVmSyncStatus".equals(fieldName)) {
                    deserializedInMageBasePolicyDetails.multiVmSyncStatus = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInMageBasePolicyDetails;
        });
    }
}
