// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.FabricInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FabricCreationInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FailoverProcessServerRequest;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RenewCertificateInput;

/**
 * An instance of this class provides access to all the operations defined in ReplicationFabricsClient.
 */
public interface ReplicationFabricsClient {
    /**
     * Gets the list of ASR fabrics.
     * 
     * Gets a list of the Azure Site Recovery fabrics in the vault.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the Azure Site Recovery fabrics in the vault as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FabricInner> list(String resourceGroupName, String resourceName);

    /**
     * Gets the list of ASR fabrics.
     * 
     * Gets a list of the Azure Site Recovery fabrics in the vault.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the Azure Site Recovery fabrics in the vault as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FabricInner> list(String resourceGroupName, String resourceName, Context context);

    /**
     * Gets the details of an ASR fabric.
     * 
     * Gets the details of an Azure Site Recovery fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param filter OData filter options.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of an Azure Site Recovery fabric along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<FabricInner> getWithResponse(String resourceGroupName, String resourceName, String fabricName,
        String filter, Context context);

    /**
     * Gets the details of an ASR fabric.
     * 
     * Gets the details of an Azure Site Recovery fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of an Azure Site Recovery fabric.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricInner get(String resourceGroupName, String resourceName, String fabricName);

    /**
     * Creates an Azure Site Recovery fabric.
     * 
     * The operation to create an Azure Site Recovery fabric (for e.g. Hyper-V site).
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Name of the ASR fabric.
     * @param input Fabric creation input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricInner>, FabricInner> beginCreate(String resourceGroupName, String resourceName,
        String fabricName, FabricCreationInput input);

    /**
     * Creates an Azure Site Recovery fabric.
     * 
     * The operation to create an Azure Site Recovery fabric (for e.g. Hyper-V site).
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Name of the ASR fabric.
     * @param input Fabric creation input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricInner>, FabricInner> beginCreate(String resourceGroupName, String resourceName,
        String fabricName, FabricCreationInput input, Context context);

    /**
     * Creates an Azure Site Recovery fabric.
     * 
     * The operation to create an Azure Site Recovery fabric (for e.g. Hyper-V site).
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Name of the ASR fabric.
     * @param input Fabric creation input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricInner create(String resourceGroupName, String resourceName, String fabricName, FabricCreationInput input);

    /**
     * Creates an Azure Site Recovery fabric.
     * 
     * The operation to create an Azure Site Recovery fabric (for e.g. Hyper-V site).
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Name of the ASR fabric.
     * @param input Fabric creation input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricInner create(String resourceGroupName, String resourceName, String fabricName, FabricCreationInput input,
        Context context);

    /**
     * Purges the site.
     * 
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to purge.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginPurge(String resourceGroupName, String resourceName, String fabricName);

    /**
     * Purges the site.
     * 
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to purge.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginPurge(String resourceGroupName, String resourceName, String fabricName,
        Context context);

    /**
     * Purges the site.
     * 
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to purge.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void purge(String resourceGroupName, String resourceName, String fabricName);

    /**
     * Purges the site.
     * 
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to purge.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void purge(String resourceGroupName, String resourceName, String fabricName, Context context);

    /**
     * Checks the consistency of the ASR fabric.
     * 
     * The operation to perform a consistency check on the fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricInner>, FabricInner> beginCheckConsistency(String resourceGroupName,
        String resourceName, String fabricName);

    /**
     * Checks the consistency of the ASR fabric.
     * 
     * The operation to perform a consistency check on the fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricInner>, FabricInner> beginCheckConsistency(String resourceGroupName,
        String resourceName, String fabricName, Context context);

    /**
     * Checks the consistency of the ASR fabric.
     * 
     * The operation to perform a consistency check on the fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricInner checkConsistency(String resourceGroupName, String resourceName, String fabricName);

    /**
     * Checks the consistency of the ASR fabric.
     * 
     * The operation to perform a consistency check on the fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricInner checkConsistency(String resourceGroupName, String resourceName, String fabricName, Context context);

    /**
     * Migrates the site to AAD.
     * 
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to migrate.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginMigrateToAad(String resourceGroupName, String resourceName,
        String fabricName);

    /**
     * Migrates the site to AAD.
     * 
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to migrate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginMigrateToAad(String resourceGroupName, String resourceName,
        String fabricName, Context context);

    /**
     * Migrates the site to AAD.
     * 
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to migrate.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void migrateToAad(String resourceGroupName, String resourceName, String fabricName);

    /**
     * Migrates the site to AAD.
     * 
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to migrate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void migrateToAad(String resourceGroupName, String resourceName, String fabricName, Context context);

    /**
     * Perform failover of the process server.
     * 
     * The operation to move replications from a process server to another process server.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric containing the process server.
     * @param failoverProcessServerRequest The input to the failover process server operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricInner>, FabricInner> beginReassociateGateway(String resourceGroupName,
        String resourceName, String fabricName, FailoverProcessServerRequest failoverProcessServerRequest);

    /**
     * Perform failover of the process server.
     * 
     * The operation to move replications from a process server to another process server.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric containing the process server.
     * @param failoverProcessServerRequest The input to the failover process server operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricInner>, FabricInner> beginReassociateGateway(String resourceGroupName,
        String resourceName, String fabricName, FailoverProcessServerRequest failoverProcessServerRequest,
        Context context);

    /**
     * Perform failover of the process server.
     * 
     * The operation to move replications from a process server to another process server.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric containing the process server.
     * @param failoverProcessServerRequest The input to the failover process server operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricInner reassociateGateway(String resourceGroupName, String resourceName, String fabricName,
        FailoverProcessServerRequest failoverProcessServerRequest);

    /**
     * Perform failover of the process server.
     * 
     * The operation to move replications from a process server to another process server.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric containing the process server.
     * @param failoverProcessServerRequest The input to the failover process server operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricInner reassociateGateway(String resourceGroupName, String resourceName, String fabricName,
        FailoverProcessServerRequest failoverProcessServerRequest, Context context);

    /**
     * Deletes the site.
     * 
     * The operation to delete or remove an Azure Site Recovery fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String resourceName, String fabricName);

    /**
     * Deletes the site.
     * 
     * The operation to delete or remove an Azure Site Recovery fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to delete.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String resourceName, String fabricName,
        Context context);

    /**
     * Deletes the site.
     * 
     * The operation to delete or remove an Azure Site Recovery fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String resourceName, String fabricName);

    /**
     * Deletes the site.
     * 
     * The operation to delete or remove an Azure Site Recovery fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName ASR fabric to delete.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String resourceName, String fabricName, Context context);

    /**
     * Renews certificate for the fabric.
     * 
     * Renews the connection certificate for the ASR replication fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName fabric name to renew certs for.
     * @param renewCertificate Renew certificate input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricInner>, FabricInner> beginRenewCertificate(String resourceGroupName,
        String resourceName, String fabricName, RenewCertificateInput renewCertificate);

    /**
     * Renews certificate for the fabric.
     * 
     * Renews the connection certificate for the ASR replication fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName fabric name to renew certs for.
     * @param renewCertificate Renew certificate input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricInner>, FabricInner> beginRenewCertificate(String resourceGroupName,
        String resourceName, String fabricName, RenewCertificateInput renewCertificate, Context context);

    /**
     * Renews certificate for the fabric.
     * 
     * Renews the connection certificate for the ASR replication fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName fabric name to renew certs for.
     * @param renewCertificate Renew certificate input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricInner renewCertificate(String resourceGroupName, String resourceName, String fabricName,
        RenewCertificateInput renewCertificate);

    /**
     * Renews certificate for the fabric.
     * 
     * Renews the connection certificate for the ASR replication fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName fabric name to renew certs for.
     * @param renewCertificate Renew certificate input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricInner renewCertificate(String resourceGroupName, String resourceName, String fabricName,
        RenewCertificateInput renewCertificate, Context context);

    /**
     * Removes the appliance's infrastructure under the fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName Resource name.
     * @param fabricName Fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginRemoveInfra(String resourceGroupName, String resourceName,
        String fabricName);

    /**
     * Removes the appliance's infrastructure under the fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName Resource name.
     * @param fabricName Fabric name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginRemoveInfra(String resourceGroupName, String resourceName,
        String fabricName, Context context);

    /**
     * Removes the appliance's infrastructure under the fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName Resource name.
     * @param fabricName Fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void removeInfra(String resourceGroupName, String resourceName, String fabricName);

    /**
     * Removes the appliance's infrastructure under the fabric.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName Resource name.
     * @param fabricName Fabric name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void removeInfra(String resourceGroupName, String resourceName, String fabricName, Context context);
}
