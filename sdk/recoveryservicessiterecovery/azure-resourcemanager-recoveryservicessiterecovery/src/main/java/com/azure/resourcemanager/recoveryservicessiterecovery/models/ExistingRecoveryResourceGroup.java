// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Existing recovery resource group input.
 */
@Fluent
public final class ExistingRecoveryResourceGroup extends RecoveryResourceGroupCustomDetails {
    /*
     * The class type.
     */
    private String resourceType = "Existing";

    /*
     * The recovery resource group Id. Valid for V2 scenarios.
     */
    private String recoveryResourceGroupId;

    /**
     * Creates an instance of ExistingRecoveryResourceGroup class.
     */
    public ExistingRecoveryResourceGroup() {
    }

    /**
     * Get the resourceType property: The class type.
     * 
     * @return the resourceType value.
     */
    @Override
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Get the recoveryResourceGroupId property: The recovery resource group Id. Valid for V2 scenarios.
     * 
     * @return the recoveryResourceGroupId value.
     */
    public String recoveryResourceGroupId() {
        return this.recoveryResourceGroupId;
    }

    /**
     * Set the recoveryResourceGroupId property: The recovery resource group Id. Valid for V2 scenarios.
     * 
     * @param recoveryResourceGroupId the recoveryResourceGroupId value to set.
     * @return the ExistingRecoveryResourceGroup object itself.
     */
    public ExistingRecoveryResourceGroup withRecoveryResourceGroupId(String recoveryResourceGroupId) {
        this.recoveryResourceGroupId = recoveryResourceGroupId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceType", this.resourceType);
        jsonWriter.writeStringField("recoveryResourceGroupId", this.recoveryResourceGroupId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExistingRecoveryResourceGroup from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExistingRecoveryResourceGroup if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExistingRecoveryResourceGroup.
     */
    public static ExistingRecoveryResourceGroup fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExistingRecoveryResourceGroup deserializedExistingRecoveryResourceGroup
                = new ExistingRecoveryResourceGroup();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceType".equals(fieldName)) {
                    deserializedExistingRecoveryResourceGroup.resourceType = reader.getString();
                } else if ("recoveryResourceGroupId".equals(fieldName)) {
                    deserializedExistingRecoveryResourceGroup.recoveryResourceGroupId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExistingRecoveryResourceGroup;
        });
    }
}
