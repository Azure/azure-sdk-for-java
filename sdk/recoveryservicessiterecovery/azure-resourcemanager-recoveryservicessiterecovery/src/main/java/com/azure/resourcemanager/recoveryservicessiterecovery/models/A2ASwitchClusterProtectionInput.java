// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * A2A specific switch cluster protection input.
 */
@Fluent
public final class A2ASwitchClusterProtectionInput extends SwitchClusterProtectionProviderSpecificInput {
    /*
     * Gets the Instance type.
     */
    private String instanceType = "A2A";

    /*
     * The recovery container Id.
     */
    private String recoveryContainerId;

    /*
     * The Policy Id.
     */
    private String policyId;

    /*
     * The protectedItemsDetail property.
     */
    private List<A2AProtectedItemDetail> protectedItemsDetail;

    /**
     * Creates an instance of A2ASwitchClusterProtectionInput class.
     */
    public A2ASwitchClusterProtectionInput() {
    }

    /**
     * Get the instanceType property: Gets the Instance type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the recoveryContainerId property: The recovery container Id.
     * 
     * @return the recoveryContainerId value.
     */
    public String recoveryContainerId() {
        return this.recoveryContainerId;
    }

    /**
     * Set the recoveryContainerId property: The recovery container Id.
     * 
     * @param recoveryContainerId the recoveryContainerId value to set.
     * @return the A2ASwitchClusterProtectionInput object itself.
     */
    public A2ASwitchClusterProtectionInput withRecoveryContainerId(String recoveryContainerId) {
        this.recoveryContainerId = recoveryContainerId;
        return this;
    }

    /**
     * Get the policyId property: The Policy Id.
     * 
     * @return the policyId value.
     */
    public String policyId() {
        return this.policyId;
    }

    /**
     * Set the policyId property: The Policy Id.
     * 
     * @param policyId the policyId value to set.
     * @return the A2ASwitchClusterProtectionInput object itself.
     */
    public A2ASwitchClusterProtectionInput withPolicyId(String policyId) {
        this.policyId = policyId;
        return this;
    }

    /**
     * Get the protectedItemsDetail property: The protectedItemsDetail property.
     * 
     * @return the protectedItemsDetail value.
     */
    public List<A2AProtectedItemDetail> protectedItemsDetail() {
        return this.protectedItemsDetail;
    }

    /**
     * Set the protectedItemsDetail property: The protectedItemsDetail property.
     * 
     * @param protectedItemsDetail the protectedItemsDetail value to set.
     * @return the A2ASwitchClusterProtectionInput object itself.
     */
    public A2ASwitchClusterProtectionInput withProtectedItemsDetail(List<A2AProtectedItemDetail> protectedItemsDetail) {
        this.protectedItemsDetail = protectedItemsDetail;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (protectedItemsDetail() != null) {
            protectedItemsDetail().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("recoveryContainerId", this.recoveryContainerId);
        jsonWriter.writeStringField("policyId", this.policyId);
        jsonWriter.writeArrayField("protectedItemsDetail", this.protectedItemsDetail,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of A2ASwitchClusterProtectionInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of A2ASwitchClusterProtectionInput if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the A2ASwitchClusterProtectionInput.
     */
    public static A2ASwitchClusterProtectionInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            A2ASwitchClusterProtectionInput deserializedA2ASwitchClusterProtectionInput
                = new A2ASwitchClusterProtectionInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedA2ASwitchClusterProtectionInput.instanceType = reader.getString();
                } else if ("recoveryContainerId".equals(fieldName)) {
                    deserializedA2ASwitchClusterProtectionInput.recoveryContainerId = reader.getString();
                } else if ("policyId".equals(fieldName)) {
                    deserializedA2ASwitchClusterProtectionInput.policyId = reader.getString();
                } else if ("protectedItemsDetail".equals(fieldName)) {
                    List<A2AProtectedItemDetail> protectedItemsDetail
                        = reader.readArray(reader1 -> A2AProtectedItemDetail.fromJson(reader1));
                    deserializedA2ASwitchClusterProtectionInput.protectedItemsDetail = protectedItemsDetail;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedA2ASwitchClusterProtectionInput;
        });
    }
}
