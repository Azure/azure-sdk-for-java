// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * InMageFabric switch provider blocking error details.
 */
@Immutable
public final class InMageFabricSwitchProviderBlockingErrorDetails
    implements JsonSerializable<InMageFabricSwitchProviderBlockingErrorDetails> {
    /*
     * The error code.
     */
    private String errorCode;

    /*
     * The error message.
     */
    private String errorMessage;

    /*
     * The possible causes.
     */
    private String possibleCauses;

    /*
     * The recommended action.
     */
    private String recommendedAction;

    /*
     * The error message parameters.
     */
    private Map<String, String> errorMessageParameters;

    /*
     * The error tags.
     */
    private Map<String, String> errorTags;

    /**
     * Creates an instance of InMageFabricSwitchProviderBlockingErrorDetails class.
     */
    public InMageFabricSwitchProviderBlockingErrorDetails() {
    }

    /**
     * Get the errorCode property: The error code.
     * 
     * @return the errorCode value.
     */
    public String errorCode() {
        return this.errorCode;
    }

    /**
     * Get the errorMessage property: The error message.
     * 
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * Get the possibleCauses property: The possible causes.
     * 
     * @return the possibleCauses value.
     */
    public String possibleCauses() {
        return this.possibleCauses;
    }

    /**
     * Get the recommendedAction property: The recommended action.
     * 
     * @return the recommendedAction value.
     */
    public String recommendedAction() {
        return this.recommendedAction;
    }

    /**
     * Get the errorMessageParameters property: The error message parameters.
     * 
     * @return the errorMessageParameters value.
     */
    public Map<String, String> errorMessageParameters() {
        return this.errorMessageParameters;
    }

    /**
     * Get the errorTags property: The error tags.
     * 
     * @return the errorTags value.
     */
    public Map<String, String> errorTags() {
        return this.errorTags;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InMageFabricSwitchProviderBlockingErrorDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InMageFabricSwitchProviderBlockingErrorDetails if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InMageFabricSwitchProviderBlockingErrorDetails.
     */
    public static InMageFabricSwitchProviderBlockingErrorDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InMageFabricSwitchProviderBlockingErrorDetails deserializedInMageFabricSwitchProviderBlockingErrorDetails
                = new InMageFabricSwitchProviderBlockingErrorDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("errorCode".equals(fieldName)) {
                    deserializedInMageFabricSwitchProviderBlockingErrorDetails.errorCode = reader.getString();
                } else if ("errorMessage".equals(fieldName)) {
                    deserializedInMageFabricSwitchProviderBlockingErrorDetails.errorMessage = reader.getString();
                } else if ("possibleCauses".equals(fieldName)) {
                    deserializedInMageFabricSwitchProviderBlockingErrorDetails.possibleCauses = reader.getString();
                } else if ("recommendedAction".equals(fieldName)) {
                    deserializedInMageFabricSwitchProviderBlockingErrorDetails.recommendedAction = reader.getString();
                } else if ("errorMessageParameters".equals(fieldName)) {
                    Map<String, String> errorMessageParameters = reader.readMap(reader1 -> reader1.getString());
                    deserializedInMageFabricSwitchProviderBlockingErrorDetails.errorMessageParameters
                        = errorMessageParameters;
                } else if ("errorTags".equals(fieldName)) {
                    Map<String, String> errorTags = reader.readMap(reader1 -> reader1.getString());
                    deserializedInMageFabricSwitchProviderBlockingErrorDetails.errorTags = errorTags;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInMageFabricSwitchProviderBlockingErrorDetails;
        });
    }
}
