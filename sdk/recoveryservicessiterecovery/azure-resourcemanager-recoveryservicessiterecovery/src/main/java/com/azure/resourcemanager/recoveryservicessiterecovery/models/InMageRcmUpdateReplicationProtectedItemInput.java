// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * InMageRcm provider specific input to update replication protected item.
 */
@Fluent
public final class InMageRcmUpdateReplicationProtectedItemInput extends UpdateReplicationProtectedItemProviderInput {
    /*
     * The class type.
     */
    private String instanceType = "InMageRcm";

    /*
     * The target VM name.
     */
    private String targetVmName;

    /*
     * The target VM size.
     */
    private String targetVmSize;

    /*
     * The target resource group ARM Id.
     */
    private String targetResourceGroupId;

    /*
     * The target availability set ARM Id.
     */
    private String targetAvailabilitySetId;

    /*
     * The target availability zone.
     */
    private String targetAvailabilityZone;

    /*
     * The target proximity placement group Id.
     */
    private String targetProximityPlacementGroupId;

    /*
     * The target boot diagnostics storage account ARM Id.
     */
    private String targetBootDiagnosticsStorageAccountId;

    /*
     * The target network ARM Id.
     */
    private String targetNetworkId;

    /*
     * The test network ARM Id.
     */
    private String testNetworkId;

    /*
     * The list of NIC details.
     */
    private List<InMageRcmNicInput> vmNics;

    /*
     * The license type.
     */
    private LicenseType licenseType;

    /*
     * The SQL Server license type.
     */
    private SqlServerLicenseType sqlServerLicenseType;

    /*
     * The license type for Linux VM's.
     */
    private LinuxLicenseType linuxLicenseType;

    /*
     * The OS name selected by user.
     */
    private String userSelectedOSName;

    /*
     * The target VM tags.
     */
    private List<UserCreatedResourceTag> targetVmTags;

    /*
     * The tags for the target managed disks.
     */
    private List<UserCreatedResourceTag> targetManagedDiskTags;

    /*
     * The tags for the target NICs.
     */
    private List<UserCreatedResourceTag> targetNicTags;

    /**
     * Creates an instance of InMageRcmUpdateReplicationProtectedItemInput class.
     */
    public InMageRcmUpdateReplicationProtectedItemInput() {
    }

    /**
     * Get the instanceType property: The class type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the targetVmName property: The target VM name.
     * 
     * @return the targetVmName value.
     */
    public String targetVmName() {
        return this.targetVmName;
    }

    /**
     * Set the targetVmName property: The target VM name.
     * 
     * @param targetVmName the targetVmName value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withTargetVmName(String targetVmName) {
        this.targetVmName = targetVmName;
        return this;
    }

    /**
     * Get the targetVmSize property: The target VM size.
     * 
     * @return the targetVmSize value.
     */
    public String targetVmSize() {
        return this.targetVmSize;
    }

    /**
     * Set the targetVmSize property: The target VM size.
     * 
     * @param targetVmSize the targetVmSize value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withTargetVmSize(String targetVmSize) {
        this.targetVmSize = targetVmSize;
        return this;
    }

    /**
     * Get the targetResourceGroupId property: The target resource group ARM Id.
     * 
     * @return the targetResourceGroupId value.
     */
    public String targetResourceGroupId() {
        return this.targetResourceGroupId;
    }

    /**
     * Set the targetResourceGroupId property: The target resource group ARM Id.
     * 
     * @param targetResourceGroupId the targetResourceGroupId value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withTargetResourceGroupId(String targetResourceGroupId) {
        this.targetResourceGroupId = targetResourceGroupId;
        return this;
    }

    /**
     * Get the targetAvailabilitySetId property: The target availability set ARM Id.
     * 
     * @return the targetAvailabilitySetId value.
     */
    public String targetAvailabilitySetId() {
        return this.targetAvailabilitySetId;
    }

    /**
     * Set the targetAvailabilitySetId property: The target availability set ARM Id.
     * 
     * @param targetAvailabilitySetId the targetAvailabilitySetId value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withTargetAvailabilitySetId(String targetAvailabilitySetId) {
        this.targetAvailabilitySetId = targetAvailabilitySetId;
        return this;
    }

    /**
     * Get the targetAvailabilityZone property: The target availability zone.
     * 
     * @return the targetAvailabilityZone value.
     */
    public String targetAvailabilityZone() {
        return this.targetAvailabilityZone;
    }

    /**
     * Set the targetAvailabilityZone property: The target availability zone.
     * 
     * @param targetAvailabilityZone the targetAvailabilityZone value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withTargetAvailabilityZone(String targetAvailabilityZone) {
        this.targetAvailabilityZone = targetAvailabilityZone;
        return this;
    }

    /**
     * Get the targetProximityPlacementGroupId property: The target proximity placement group Id.
     * 
     * @return the targetProximityPlacementGroupId value.
     */
    public String targetProximityPlacementGroupId() {
        return this.targetProximityPlacementGroupId;
    }

    /**
     * Set the targetProximityPlacementGroupId property: The target proximity placement group Id.
     * 
     * @param targetProximityPlacementGroupId the targetProximityPlacementGroupId value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput
        withTargetProximityPlacementGroupId(String targetProximityPlacementGroupId) {
        this.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
        return this;
    }

    /**
     * Get the targetBootDiagnosticsStorageAccountId property: The target boot diagnostics storage account ARM Id.
     * 
     * @return the targetBootDiagnosticsStorageAccountId value.
     */
    public String targetBootDiagnosticsStorageAccountId() {
        return this.targetBootDiagnosticsStorageAccountId;
    }

    /**
     * Set the targetBootDiagnosticsStorageAccountId property: The target boot diagnostics storage account ARM Id.
     * 
     * @param targetBootDiagnosticsStorageAccountId the targetBootDiagnosticsStorageAccountId value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput
        withTargetBootDiagnosticsStorageAccountId(String targetBootDiagnosticsStorageAccountId) {
        this.targetBootDiagnosticsStorageAccountId = targetBootDiagnosticsStorageAccountId;
        return this;
    }

    /**
     * Get the targetNetworkId property: The target network ARM Id.
     * 
     * @return the targetNetworkId value.
     */
    public String targetNetworkId() {
        return this.targetNetworkId;
    }

    /**
     * Set the targetNetworkId property: The target network ARM Id.
     * 
     * @param targetNetworkId the targetNetworkId value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withTargetNetworkId(String targetNetworkId) {
        this.targetNetworkId = targetNetworkId;
        return this;
    }

    /**
     * Get the testNetworkId property: The test network ARM Id.
     * 
     * @return the testNetworkId value.
     */
    public String testNetworkId() {
        return this.testNetworkId;
    }

    /**
     * Set the testNetworkId property: The test network ARM Id.
     * 
     * @param testNetworkId the testNetworkId value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withTestNetworkId(String testNetworkId) {
        this.testNetworkId = testNetworkId;
        return this;
    }

    /**
     * Get the vmNics property: The list of NIC details.
     * 
     * @return the vmNics value.
     */
    public List<InMageRcmNicInput> vmNics() {
        return this.vmNics;
    }

    /**
     * Set the vmNics property: The list of NIC details.
     * 
     * @param vmNics the vmNics value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withVmNics(List<InMageRcmNicInput> vmNics) {
        this.vmNics = vmNics;
        return this;
    }

    /**
     * Get the licenseType property: The license type.
     * 
     * @return the licenseType value.
     */
    public LicenseType licenseType() {
        return this.licenseType;
    }

    /**
     * Set the licenseType property: The license type.
     * 
     * @param licenseType the licenseType value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withLicenseType(LicenseType licenseType) {
        this.licenseType = licenseType;
        return this;
    }

    /**
     * Get the sqlServerLicenseType property: The SQL Server license type.
     * 
     * @return the sqlServerLicenseType value.
     */
    public SqlServerLicenseType sqlServerLicenseType() {
        return this.sqlServerLicenseType;
    }

    /**
     * Set the sqlServerLicenseType property: The SQL Server license type.
     * 
     * @param sqlServerLicenseType the sqlServerLicenseType value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput
        withSqlServerLicenseType(SqlServerLicenseType sqlServerLicenseType) {
        this.sqlServerLicenseType = sqlServerLicenseType;
        return this;
    }

    /**
     * Get the linuxLicenseType property: The license type for Linux VM's.
     * 
     * @return the linuxLicenseType value.
     */
    public LinuxLicenseType linuxLicenseType() {
        return this.linuxLicenseType;
    }

    /**
     * Set the linuxLicenseType property: The license type for Linux VM's.
     * 
     * @param linuxLicenseType the linuxLicenseType value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withLinuxLicenseType(LinuxLicenseType linuxLicenseType) {
        this.linuxLicenseType = linuxLicenseType;
        return this;
    }

    /**
     * Get the userSelectedOSName property: The OS name selected by user.
     * 
     * @return the userSelectedOSName value.
     */
    public String userSelectedOSName() {
        return this.userSelectedOSName;
    }

    /**
     * Set the userSelectedOSName property: The OS name selected by user.
     * 
     * @param userSelectedOSName the userSelectedOSName value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withUserSelectedOSName(String userSelectedOSName) {
        this.userSelectedOSName = userSelectedOSName;
        return this;
    }

    /**
     * Get the targetVmTags property: The target VM tags.
     * 
     * @return the targetVmTags value.
     */
    public List<UserCreatedResourceTag> targetVmTags() {
        return this.targetVmTags;
    }

    /**
     * Set the targetVmTags property: The target VM tags.
     * 
     * @param targetVmTags the targetVmTags value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withTargetVmTags(List<UserCreatedResourceTag> targetVmTags) {
        this.targetVmTags = targetVmTags;
        return this;
    }

    /**
     * Get the targetManagedDiskTags property: The tags for the target managed disks.
     * 
     * @return the targetManagedDiskTags value.
     */
    public List<UserCreatedResourceTag> targetManagedDiskTags() {
        return this.targetManagedDiskTags;
    }

    /**
     * Set the targetManagedDiskTags property: The tags for the target managed disks.
     * 
     * @param targetManagedDiskTags the targetManagedDiskTags value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput
        withTargetManagedDiskTags(List<UserCreatedResourceTag> targetManagedDiskTags) {
        this.targetManagedDiskTags = targetManagedDiskTags;
        return this;
    }

    /**
     * Get the targetNicTags property: The tags for the target NICs.
     * 
     * @return the targetNicTags value.
     */
    public List<UserCreatedResourceTag> targetNicTags() {
        return this.targetNicTags;
    }

    /**
     * Set the targetNicTags property: The tags for the target NICs.
     * 
     * @param targetNicTags the targetNicTags value to set.
     * @return the InMageRcmUpdateReplicationProtectedItemInput object itself.
     */
    public InMageRcmUpdateReplicationProtectedItemInput withTargetNicTags(List<UserCreatedResourceTag> targetNicTags) {
        this.targetNicTags = targetNicTags;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (vmNics() != null) {
            vmNics().forEach(e -> e.validate());
        }
        if (targetVmTags() != null) {
            targetVmTags().forEach(e -> e.validate());
        }
        if (targetManagedDiskTags() != null) {
            targetManagedDiskTags().forEach(e -> e.validate());
        }
        if (targetNicTags() != null) {
            targetNicTags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("targetVmName", this.targetVmName);
        jsonWriter.writeStringField("targetVmSize", this.targetVmSize);
        jsonWriter.writeStringField("targetResourceGroupId", this.targetResourceGroupId);
        jsonWriter.writeStringField("targetAvailabilitySetId", this.targetAvailabilitySetId);
        jsonWriter.writeStringField("targetAvailabilityZone", this.targetAvailabilityZone);
        jsonWriter.writeStringField("targetProximityPlacementGroupId", this.targetProximityPlacementGroupId);
        jsonWriter.writeStringField("targetBootDiagnosticsStorageAccountId",
            this.targetBootDiagnosticsStorageAccountId);
        jsonWriter.writeStringField("targetNetworkId", this.targetNetworkId);
        jsonWriter.writeStringField("testNetworkId", this.testNetworkId);
        jsonWriter.writeArrayField("vmNics", this.vmNics, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("licenseType", this.licenseType == null ? null : this.licenseType.toString());
        jsonWriter.writeStringField("sqlServerLicenseType",
            this.sqlServerLicenseType == null ? null : this.sqlServerLicenseType.toString());
        jsonWriter.writeStringField("linuxLicenseType",
            this.linuxLicenseType == null ? null : this.linuxLicenseType.toString());
        jsonWriter.writeStringField("userSelectedOSName", this.userSelectedOSName);
        jsonWriter.writeArrayField("targetVmTags", this.targetVmTags, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("targetManagedDiskTags", this.targetManagedDiskTags,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("targetNicTags", this.targetNicTags, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InMageRcmUpdateReplicationProtectedItemInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InMageRcmUpdateReplicationProtectedItemInput if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InMageRcmUpdateReplicationProtectedItemInput.
     */
    public static InMageRcmUpdateReplicationProtectedItemInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InMageRcmUpdateReplicationProtectedItemInput deserializedInMageRcmUpdateReplicationProtectedItemInput
                = new InMageRcmUpdateReplicationProtectedItemInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.instanceType = reader.getString();
                } else if ("targetVmName".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.targetVmName = reader.getString();
                } else if ("targetVmSize".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.targetVmSize = reader.getString();
                } else if ("targetResourceGroupId".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.targetResourceGroupId = reader.getString();
                } else if ("targetAvailabilitySetId".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.targetAvailabilitySetId
                        = reader.getString();
                } else if ("targetAvailabilityZone".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.targetAvailabilityZone
                        = reader.getString();
                } else if ("targetProximityPlacementGroupId".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.targetProximityPlacementGroupId
                        = reader.getString();
                } else if ("targetBootDiagnosticsStorageAccountId".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.targetBootDiagnosticsStorageAccountId
                        = reader.getString();
                } else if ("targetNetworkId".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.targetNetworkId = reader.getString();
                } else if ("testNetworkId".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.testNetworkId = reader.getString();
                } else if ("vmNics".equals(fieldName)) {
                    List<InMageRcmNicInput> vmNics = reader.readArray(reader1 -> InMageRcmNicInput.fromJson(reader1));
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.vmNics = vmNics;
                } else if ("licenseType".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.licenseType
                        = LicenseType.fromString(reader.getString());
                } else if ("sqlServerLicenseType".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.sqlServerLicenseType
                        = SqlServerLicenseType.fromString(reader.getString());
                } else if ("linuxLicenseType".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.linuxLicenseType
                        = LinuxLicenseType.fromString(reader.getString());
                } else if ("userSelectedOSName".equals(fieldName)) {
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.userSelectedOSName = reader.getString();
                } else if ("targetVmTags".equals(fieldName)) {
                    List<UserCreatedResourceTag> targetVmTags
                        = reader.readArray(reader1 -> UserCreatedResourceTag.fromJson(reader1));
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.targetVmTags = targetVmTags;
                } else if ("targetManagedDiskTags".equals(fieldName)) {
                    List<UserCreatedResourceTag> targetManagedDiskTags
                        = reader.readArray(reader1 -> UserCreatedResourceTag.fromJson(reader1));
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.targetManagedDiskTags
                        = targetManagedDiskTags;
                } else if ("targetNicTags".equals(fieldName)) {
                    List<UserCreatedResourceTag> targetNicTags
                        = reader.readArray(reader1 -> UserCreatedResourceTag.fromJson(reader1));
                    deserializedInMageRcmUpdateReplicationProtectedItemInput.targetNicTags = targetNicTags;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInMageRcmUpdateReplicationProtectedItemInput;
        });
    }
}
