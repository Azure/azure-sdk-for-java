// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Input definition for unplanned failover input properties.
 */
@Fluent
public final class ClusterUnplannedFailoverInputProperties
    implements JsonSerializable<ClusterUnplannedFailoverInputProperties> {
    /*
     * Failover direction.
     */
    private String failoverDirection;

    /*
     * Source site operations status.
     */
    private String sourceSiteOperations;

    /*
     * Provider specific settings.
     */
    private ClusterUnplannedFailoverProviderSpecificInput providerSpecificDetails;

    /**
     * Creates an instance of ClusterUnplannedFailoverInputProperties class.
     */
    public ClusterUnplannedFailoverInputProperties() {
    }

    /**
     * Get the failoverDirection property: Failover direction.
     * 
     * @return the failoverDirection value.
     */
    public String failoverDirection() {
        return this.failoverDirection;
    }

    /**
     * Set the failoverDirection property: Failover direction.
     * 
     * @param failoverDirection the failoverDirection value to set.
     * @return the ClusterUnplannedFailoverInputProperties object itself.
     */
    public ClusterUnplannedFailoverInputProperties withFailoverDirection(String failoverDirection) {
        this.failoverDirection = failoverDirection;
        return this;
    }

    /**
     * Get the sourceSiteOperations property: Source site operations status.
     * 
     * @return the sourceSiteOperations value.
     */
    public String sourceSiteOperations() {
        return this.sourceSiteOperations;
    }

    /**
     * Set the sourceSiteOperations property: Source site operations status.
     * 
     * @param sourceSiteOperations the sourceSiteOperations value to set.
     * @return the ClusterUnplannedFailoverInputProperties object itself.
     */
    public ClusterUnplannedFailoverInputProperties withSourceSiteOperations(String sourceSiteOperations) {
        this.sourceSiteOperations = sourceSiteOperations;
        return this;
    }

    /**
     * Get the providerSpecificDetails property: Provider specific settings.
     * 
     * @return the providerSpecificDetails value.
     */
    public ClusterUnplannedFailoverProviderSpecificInput providerSpecificDetails() {
        return this.providerSpecificDetails;
    }

    /**
     * Set the providerSpecificDetails property: Provider specific settings.
     * 
     * @param providerSpecificDetails the providerSpecificDetails value to set.
     * @return the ClusterUnplannedFailoverInputProperties object itself.
     */
    public ClusterUnplannedFailoverInputProperties
        withProviderSpecificDetails(ClusterUnplannedFailoverProviderSpecificInput providerSpecificDetails) {
        this.providerSpecificDetails = providerSpecificDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (providerSpecificDetails() != null) {
            providerSpecificDetails().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("failoverDirection", this.failoverDirection);
        jsonWriter.writeStringField("sourceSiteOperations", this.sourceSiteOperations);
        jsonWriter.writeJsonField("providerSpecificDetails", this.providerSpecificDetails);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClusterUnplannedFailoverInputProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClusterUnplannedFailoverInputProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClusterUnplannedFailoverInputProperties.
     */
    public static ClusterUnplannedFailoverInputProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClusterUnplannedFailoverInputProperties deserializedClusterUnplannedFailoverInputProperties
                = new ClusterUnplannedFailoverInputProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("failoverDirection".equals(fieldName)) {
                    deserializedClusterUnplannedFailoverInputProperties.failoverDirection = reader.getString();
                } else if ("sourceSiteOperations".equals(fieldName)) {
                    deserializedClusterUnplannedFailoverInputProperties.sourceSiteOperations = reader.getString();
                } else if ("providerSpecificDetails".equals(fieldName)) {
                    deserializedClusterUnplannedFailoverInputProperties.providerSpecificDetails
                        = ClusterUnplannedFailoverProviderSpecificInput.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClusterUnplannedFailoverInputProperties;
        });
    }
}
