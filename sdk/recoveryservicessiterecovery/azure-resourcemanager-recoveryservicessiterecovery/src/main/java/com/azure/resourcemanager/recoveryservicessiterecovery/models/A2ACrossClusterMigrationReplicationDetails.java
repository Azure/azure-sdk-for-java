// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A2A provider specific settings.
 */
@Fluent
public final class A2ACrossClusterMigrationReplicationDetails extends ReplicationProviderSpecificSettings {
    /*
     * Gets the Instance type.
     */
    private String instanceType = "A2ACrossClusterMigration";

    /*
     * The fabric specific object Id of the virtual machine.
     */
    private String fabricObjectId;

    /*
     * Primary fabric location.
     */
    private String primaryFabricLocation;

    /*
     * The type of operating system.
     */
    private String osType;

    /*
     * The protection state for the vm.
     */
    private String vmProtectionState;

    /*
     * The protection state description for the vm.
     */
    private String vmProtectionStateDescription;

    /*
     * An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects
     * internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that
     * denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
     */
    private String lifecycleId;

    /**
     * Creates an instance of A2ACrossClusterMigrationReplicationDetails class.
     */
    public A2ACrossClusterMigrationReplicationDetails() {
    }

    /**
     * Get the instanceType property: Gets the Instance type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the fabricObjectId property: The fabric specific object Id of the virtual machine.
     * 
     * @return the fabricObjectId value.
     */
    public String fabricObjectId() {
        return this.fabricObjectId;
    }

    /**
     * Set the fabricObjectId property: The fabric specific object Id of the virtual machine.
     * 
     * @param fabricObjectId the fabricObjectId value to set.
     * @return the A2ACrossClusterMigrationReplicationDetails object itself.
     */
    public A2ACrossClusterMigrationReplicationDetails withFabricObjectId(String fabricObjectId) {
        this.fabricObjectId = fabricObjectId;
        return this;
    }

    /**
     * Get the primaryFabricLocation property: Primary fabric location.
     * 
     * @return the primaryFabricLocation value.
     */
    public String primaryFabricLocation() {
        return this.primaryFabricLocation;
    }

    /**
     * Set the primaryFabricLocation property: Primary fabric location.
     * 
     * @param primaryFabricLocation the primaryFabricLocation value to set.
     * @return the A2ACrossClusterMigrationReplicationDetails object itself.
     */
    public A2ACrossClusterMigrationReplicationDetails withPrimaryFabricLocation(String primaryFabricLocation) {
        this.primaryFabricLocation = primaryFabricLocation;
        return this;
    }

    /**
     * Get the osType property: The type of operating system.
     * 
     * @return the osType value.
     */
    public String osType() {
        return this.osType;
    }

    /**
     * Set the osType property: The type of operating system.
     * 
     * @param osType the osType value to set.
     * @return the A2ACrossClusterMigrationReplicationDetails object itself.
     */
    public A2ACrossClusterMigrationReplicationDetails withOsType(String osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Get the vmProtectionState property: The protection state for the vm.
     * 
     * @return the vmProtectionState value.
     */
    public String vmProtectionState() {
        return this.vmProtectionState;
    }

    /**
     * Set the vmProtectionState property: The protection state for the vm.
     * 
     * @param vmProtectionState the vmProtectionState value to set.
     * @return the A2ACrossClusterMigrationReplicationDetails object itself.
     */
    public A2ACrossClusterMigrationReplicationDetails withVmProtectionState(String vmProtectionState) {
        this.vmProtectionState = vmProtectionState;
        return this;
    }

    /**
     * Get the vmProtectionStateDescription property: The protection state description for the vm.
     * 
     * @return the vmProtectionStateDescription value.
     */
    public String vmProtectionStateDescription() {
        return this.vmProtectionStateDescription;
    }

    /**
     * Set the vmProtectionStateDescription property: The protection state description for the vm.
     * 
     * @param vmProtectionStateDescription the vmProtectionStateDescription value to set.
     * @return the A2ACrossClusterMigrationReplicationDetails object itself.
     */
    public A2ACrossClusterMigrationReplicationDetails
        withVmProtectionStateDescription(String vmProtectionStateDescription) {
        this.vmProtectionStateDescription = vmProtectionStateDescription;
        return this;
    }

    /**
     * Get the lifecycleId property: An id associated with the PE that survives actions like switch protection which
     * change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in
     * being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be
     * changing.
     * 
     * @return the lifecycleId value.
     */
    public String lifecycleId() {
        return this.lifecycleId;
    }

    /**
     * Set the lifecycleId property: An id associated with the PE that survives actions like switch protection which
     * change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in
     * being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be
     * changing.
     * 
     * @param lifecycleId the lifecycleId value to set.
     * @return the A2ACrossClusterMigrationReplicationDetails object itself.
     */
    public A2ACrossClusterMigrationReplicationDetails withLifecycleId(String lifecycleId) {
        this.lifecycleId = lifecycleId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("fabricObjectId", this.fabricObjectId);
        jsonWriter.writeStringField("primaryFabricLocation", this.primaryFabricLocation);
        jsonWriter.writeStringField("osType", this.osType);
        jsonWriter.writeStringField("vmProtectionState", this.vmProtectionState);
        jsonWriter.writeStringField("vmProtectionStateDescription", this.vmProtectionStateDescription);
        jsonWriter.writeStringField("lifecycleId", this.lifecycleId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of A2ACrossClusterMigrationReplicationDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of A2ACrossClusterMigrationReplicationDetails if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the A2ACrossClusterMigrationReplicationDetails.
     */
    public static A2ACrossClusterMigrationReplicationDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            A2ACrossClusterMigrationReplicationDetails deserializedA2ACrossClusterMigrationReplicationDetails
                = new A2ACrossClusterMigrationReplicationDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedA2ACrossClusterMigrationReplicationDetails.instanceType = reader.getString();
                } else if ("fabricObjectId".equals(fieldName)) {
                    deserializedA2ACrossClusterMigrationReplicationDetails.fabricObjectId = reader.getString();
                } else if ("primaryFabricLocation".equals(fieldName)) {
                    deserializedA2ACrossClusterMigrationReplicationDetails.primaryFabricLocation = reader.getString();
                } else if ("osType".equals(fieldName)) {
                    deserializedA2ACrossClusterMigrationReplicationDetails.osType = reader.getString();
                } else if ("vmProtectionState".equals(fieldName)) {
                    deserializedA2ACrossClusterMigrationReplicationDetails.vmProtectionState = reader.getString();
                } else if ("vmProtectionStateDescription".equals(fieldName)) {
                    deserializedA2ACrossClusterMigrationReplicationDetails.vmProtectionStateDescription
                        = reader.getString();
                } else if ("lifecycleId".equals(fieldName)) {
                    deserializedA2ACrossClusterMigrationReplicationDetails.lifecycleId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedA2ACrossClusterMigrationReplicationDetails;
        });
    }
}
