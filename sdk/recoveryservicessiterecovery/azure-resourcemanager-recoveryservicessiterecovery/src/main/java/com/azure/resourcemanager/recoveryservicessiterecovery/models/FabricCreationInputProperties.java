// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties of site details provided during the time of site creation.
 */
@Fluent
public final class FabricCreationInputProperties implements JsonSerializable<FabricCreationInputProperties> {
    /*
     * Fabric provider specific creation input.
     */
    private FabricSpecificCreationInput customDetails;

    /**
     * Creates an instance of FabricCreationInputProperties class.
     */
    public FabricCreationInputProperties() {
    }

    /**
     * Get the customDetails property: Fabric provider specific creation input.
     * 
     * @return the customDetails value.
     */
    public FabricSpecificCreationInput customDetails() {
        return this.customDetails;
    }

    /**
     * Set the customDetails property: Fabric provider specific creation input.
     * 
     * @param customDetails the customDetails value to set.
     * @return the FabricCreationInputProperties object itself.
     */
    public FabricCreationInputProperties withCustomDetails(FabricSpecificCreationInput customDetails) {
        this.customDetails = customDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (customDetails() != null) {
            customDetails().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("customDetails", this.customDetails);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FabricCreationInputProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FabricCreationInputProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FabricCreationInputProperties.
     */
    public static FabricCreationInputProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FabricCreationInputProperties deserializedFabricCreationInputProperties
                = new FabricCreationInputProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("customDetails".equals(fieldName)) {
                    deserializedFabricCreationInputProperties.customDetails
                        = FabricSpecificCreationInput.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFabricCreationInputProperties;
        });
    }
}
