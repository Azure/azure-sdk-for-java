// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Provider specific input for InMageAzureV2 switch provider.
 */
@Fluent
public final class InMageAzureV2SwitchProviderInput extends SwitchProviderSpecificInput {
    /*
     * The class type.
     */
    private String instanceType = "InMageAzureV2";

    /*
     * The target vault Id.
     */
    private String targetVaultId;

    /*
     * The target fabric Id.
     */
    private String targetFabricId;

    /*
     * The target appliance Id.
     */
    private String targetApplianceId;

    /**
     * Creates an instance of InMageAzureV2SwitchProviderInput class.
     */
    public InMageAzureV2SwitchProviderInput() {
    }

    /**
     * Get the instanceType property: The class type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the targetVaultId property: The target vault Id.
     * 
     * @return the targetVaultId value.
     */
    public String targetVaultId() {
        return this.targetVaultId;
    }

    /**
     * Set the targetVaultId property: The target vault Id.
     * 
     * @param targetVaultId the targetVaultId value to set.
     * @return the InMageAzureV2SwitchProviderInput object itself.
     */
    public InMageAzureV2SwitchProviderInput withTargetVaultId(String targetVaultId) {
        this.targetVaultId = targetVaultId;
        return this;
    }

    /**
     * Get the targetFabricId property: The target fabric Id.
     * 
     * @return the targetFabricId value.
     */
    public String targetFabricId() {
        return this.targetFabricId;
    }

    /**
     * Set the targetFabricId property: The target fabric Id.
     * 
     * @param targetFabricId the targetFabricId value to set.
     * @return the InMageAzureV2SwitchProviderInput object itself.
     */
    public InMageAzureV2SwitchProviderInput withTargetFabricId(String targetFabricId) {
        this.targetFabricId = targetFabricId;
        return this;
    }

    /**
     * Get the targetApplianceId property: The target appliance Id.
     * 
     * @return the targetApplianceId value.
     */
    public String targetApplianceId() {
        return this.targetApplianceId;
    }

    /**
     * Set the targetApplianceId property: The target appliance Id.
     * 
     * @param targetApplianceId the targetApplianceId value to set.
     * @return the InMageAzureV2SwitchProviderInput object itself.
     */
    public InMageAzureV2SwitchProviderInput withTargetApplianceId(String targetApplianceId) {
        this.targetApplianceId = targetApplianceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (targetVaultId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetVaultId in model InMageAzureV2SwitchProviderInput"));
        }
        if (targetFabricId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetFabricId in model InMageAzureV2SwitchProviderInput"));
        }
        if (targetApplianceId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetApplianceId in model InMageAzureV2SwitchProviderInput"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(InMageAzureV2SwitchProviderInput.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("targetVaultID", this.targetVaultId);
        jsonWriter.writeStringField("targetFabricID", this.targetFabricId);
        jsonWriter.writeStringField("targetApplianceID", this.targetApplianceId);
        jsonWriter.writeStringField("instanceType", this.instanceType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InMageAzureV2SwitchProviderInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InMageAzureV2SwitchProviderInput if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the InMageAzureV2SwitchProviderInput.
     */
    public static InMageAzureV2SwitchProviderInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InMageAzureV2SwitchProviderInput deserializedInMageAzureV2SwitchProviderInput
                = new InMageAzureV2SwitchProviderInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("targetVaultID".equals(fieldName)) {
                    deserializedInMageAzureV2SwitchProviderInput.targetVaultId = reader.getString();
                } else if ("targetFabricID".equals(fieldName)) {
                    deserializedInMageAzureV2SwitchProviderInput.targetFabricId = reader.getString();
                } else if ("targetApplianceID".equals(fieldName)) {
                    deserializedInMageAzureV2SwitchProviderInput.targetApplianceId = reader.getString();
                } else if ("instanceType".equals(fieldName)) {
                    deserializedInMageAzureV2SwitchProviderInput.instanceType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInMageAzureV2SwitchProviderInput;
        });
    }
}
