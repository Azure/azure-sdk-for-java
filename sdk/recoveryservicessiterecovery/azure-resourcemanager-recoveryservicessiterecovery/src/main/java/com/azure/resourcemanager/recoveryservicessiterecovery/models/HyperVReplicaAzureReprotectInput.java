// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure specific reprotect input.
 */
@Fluent
public final class HyperVReplicaAzureReprotectInput extends ReverseReplicationProviderSpecificInput {
    /*
     * The class type.
     */
    private String instanceType = "HyperVReplicaAzure";

    /*
     * The Hyper-V host Vm Id.
     */
    private String hvHostVmId;

    /*
     * The Vm Name.
     */
    private String vmName;

    /*
     * The OS type associated with vm.
     */
    private String osType;

    /*
     * The OS disk VHD id associated with vm.
     */
    private String vHDId;

    /*
     * The storage account name.
     */
    private String storageAccountId;

    /*
     * The storage account to be used for logging during replication.
     */
    private String logStorageAccountId;

    /**
     * Creates an instance of HyperVReplicaAzureReprotectInput class.
     */
    public HyperVReplicaAzureReprotectInput() {
    }

    /**
     * Get the instanceType property: The class type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the hvHostVmId property: The Hyper-V host Vm Id.
     * 
     * @return the hvHostVmId value.
     */
    public String hvHostVmId() {
        return this.hvHostVmId;
    }

    /**
     * Set the hvHostVmId property: The Hyper-V host Vm Id.
     * 
     * @param hvHostVmId the hvHostVmId value to set.
     * @return the HyperVReplicaAzureReprotectInput object itself.
     */
    public HyperVReplicaAzureReprotectInput withHvHostVmId(String hvHostVmId) {
        this.hvHostVmId = hvHostVmId;
        return this;
    }

    /**
     * Get the vmName property: The Vm Name.
     * 
     * @return the vmName value.
     */
    public String vmName() {
        return this.vmName;
    }

    /**
     * Set the vmName property: The Vm Name.
     * 
     * @param vmName the vmName value to set.
     * @return the HyperVReplicaAzureReprotectInput object itself.
     */
    public HyperVReplicaAzureReprotectInput withVmName(String vmName) {
        this.vmName = vmName;
        return this;
    }

    /**
     * Get the osType property: The OS type associated with vm.
     * 
     * @return the osType value.
     */
    public String osType() {
        return this.osType;
    }

    /**
     * Set the osType property: The OS type associated with vm.
     * 
     * @param osType the osType value to set.
     * @return the HyperVReplicaAzureReprotectInput object itself.
     */
    public HyperVReplicaAzureReprotectInput withOsType(String osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Get the vHDId property: The OS disk VHD id associated with vm.
     * 
     * @return the vHDId value.
     */
    public String vHDId() {
        return this.vHDId;
    }

    /**
     * Set the vHDId property: The OS disk VHD id associated with vm.
     * 
     * @param vHDId the vHDId value to set.
     * @return the HyperVReplicaAzureReprotectInput object itself.
     */
    public HyperVReplicaAzureReprotectInput withVHDId(String vHDId) {
        this.vHDId = vHDId;
        return this;
    }

    /**
     * Get the storageAccountId property: The storage account name.
     * 
     * @return the storageAccountId value.
     */
    public String storageAccountId() {
        return this.storageAccountId;
    }

    /**
     * Set the storageAccountId property: The storage account name.
     * 
     * @param storageAccountId the storageAccountId value to set.
     * @return the HyperVReplicaAzureReprotectInput object itself.
     */
    public HyperVReplicaAzureReprotectInput withStorageAccountId(String storageAccountId) {
        this.storageAccountId = storageAccountId;
        return this;
    }

    /**
     * Get the logStorageAccountId property: The storage account to be used for logging during replication.
     * 
     * @return the logStorageAccountId value.
     */
    public String logStorageAccountId() {
        return this.logStorageAccountId;
    }

    /**
     * Set the logStorageAccountId property: The storage account to be used for logging during replication.
     * 
     * @param logStorageAccountId the logStorageAccountId value to set.
     * @return the HyperVReplicaAzureReprotectInput object itself.
     */
    public HyperVReplicaAzureReprotectInput withLogStorageAccountId(String logStorageAccountId) {
        this.logStorageAccountId = logStorageAccountId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("hvHostVmId", this.hvHostVmId);
        jsonWriter.writeStringField("vmName", this.vmName);
        jsonWriter.writeStringField("osType", this.osType);
        jsonWriter.writeStringField("vHDId", this.vHDId);
        jsonWriter.writeStringField("storageAccountId", this.storageAccountId);
        jsonWriter.writeStringField("logStorageAccountId", this.logStorageAccountId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HyperVReplicaAzureReprotectInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HyperVReplicaAzureReprotectInput if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the HyperVReplicaAzureReprotectInput.
     */
    public static HyperVReplicaAzureReprotectInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HyperVReplicaAzureReprotectInput deserializedHyperVReplicaAzureReprotectInput
                = new HyperVReplicaAzureReprotectInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedHyperVReplicaAzureReprotectInput.instanceType = reader.getString();
                } else if ("hvHostVmId".equals(fieldName)) {
                    deserializedHyperVReplicaAzureReprotectInput.hvHostVmId = reader.getString();
                } else if ("vmName".equals(fieldName)) {
                    deserializedHyperVReplicaAzureReprotectInput.vmName = reader.getString();
                } else if ("osType".equals(fieldName)) {
                    deserializedHyperVReplicaAzureReprotectInput.osType = reader.getString();
                } else if ("vHDId".equals(fieldName)) {
                    deserializedHyperVReplicaAzureReprotectInput.vHDId = reader.getString();
                } else if ("storageAccountId".equals(fieldName)) {
                    deserializedHyperVReplicaAzureReprotectInput.storageAccountId = reader.getString();
                } else if ("logStorageAccountId".equals(fieldName)) {
                    deserializedHyperVReplicaAzureReprotectInput.logStorageAccountId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHyperVReplicaAzureReprotectInput;
        });
    }
}
