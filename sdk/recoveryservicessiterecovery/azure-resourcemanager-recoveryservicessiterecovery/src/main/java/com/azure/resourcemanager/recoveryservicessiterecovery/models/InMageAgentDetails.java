// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The details of the InMage agent. */
@Fluent
public final class InMageAgentDetails {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(InMageAgentDetails.class);

    /*
     * The agent version.
     */
    @JsonProperty(value = "agentVersion")
    private String agentVersion;

    /*
     * A value indicating whether installed agent needs to be updated.
     */
    @JsonProperty(value = "agentUpdateStatus")
    private String agentUpdateStatus;

    /*
     * A value indicating whether reboot is required after update is applied.
     */
    @JsonProperty(value = "postUpdateRebootStatus")
    private String postUpdateRebootStatus;

    /*
     * Agent expiry date.
     */
    @JsonProperty(value = "agentExpiryDate")
    private OffsetDateTime agentExpiryDate;

    /**
     * Get the agentVersion property: The agent version.
     *
     * @return the agentVersion value.
     */
    public String agentVersion() {
        return this.agentVersion;
    }

    /**
     * Set the agentVersion property: The agent version.
     *
     * @param agentVersion the agentVersion value to set.
     * @return the InMageAgentDetails object itself.
     */
    public InMageAgentDetails withAgentVersion(String agentVersion) {
        this.agentVersion = agentVersion;
        return this;
    }

    /**
     * Get the agentUpdateStatus property: A value indicating whether installed agent needs to be updated.
     *
     * @return the agentUpdateStatus value.
     */
    public String agentUpdateStatus() {
        return this.agentUpdateStatus;
    }

    /**
     * Set the agentUpdateStatus property: A value indicating whether installed agent needs to be updated.
     *
     * @param agentUpdateStatus the agentUpdateStatus value to set.
     * @return the InMageAgentDetails object itself.
     */
    public InMageAgentDetails withAgentUpdateStatus(String agentUpdateStatus) {
        this.agentUpdateStatus = agentUpdateStatus;
        return this;
    }

    /**
     * Get the postUpdateRebootStatus property: A value indicating whether reboot is required after update is applied.
     *
     * @return the postUpdateRebootStatus value.
     */
    public String postUpdateRebootStatus() {
        return this.postUpdateRebootStatus;
    }

    /**
     * Set the postUpdateRebootStatus property: A value indicating whether reboot is required after update is applied.
     *
     * @param postUpdateRebootStatus the postUpdateRebootStatus value to set.
     * @return the InMageAgentDetails object itself.
     */
    public InMageAgentDetails withPostUpdateRebootStatus(String postUpdateRebootStatus) {
        this.postUpdateRebootStatus = postUpdateRebootStatus;
        return this;
    }

    /**
     * Get the agentExpiryDate property: Agent expiry date.
     *
     * @return the agentExpiryDate value.
     */
    public OffsetDateTime agentExpiryDate() {
        return this.agentExpiryDate;
    }

    /**
     * Set the agentExpiryDate property: Agent expiry date.
     *
     * @param agentExpiryDate the agentExpiryDate value to set.
     * @return the InMageAgentDetails object itself.
     */
    public InMageAgentDetails withAgentExpiryDate(OffsetDateTime agentExpiryDate) {
        this.agentExpiryDate = agentExpiryDate;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
