// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * The details of the InMage agent.
 */
@Fluent
public final class InMageAgentDetails implements JsonSerializable<InMageAgentDetails> {
    /*
     * The agent version.
     */
    private String agentVersion;

    /*
     * A value indicating whether installed agent needs to be updated.
     */
    private String agentUpdateStatus;

    /*
     * A value indicating whether reboot is required after update is applied.
     */
    private String postUpdateRebootStatus;

    /*
     * Agent expiry date.
     */
    private OffsetDateTime agentExpiryDate;

    /**
     * Creates an instance of InMageAgentDetails class.
     */
    public InMageAgentDetails() {
    }

    /**
     * Get the agentVersion property: The agent version.
     * 
     * @return the agentVersion value.
     */
    public String agentVersion() {
        return this.agentVersion;
    }

    /**
     * Set the agentVersion property: The agent version.
     * 
     * @param agentVersion the agentVersion value to set.
     * @return the InMageAgentDetails object itself.
     */
    public InMageAgentDetails withAgentVersion(String agentVersion) {
        this.agentVersion = agentVersion;
        return this;
    }

    /**
     * Get the agentUpdateStatus property: A value indicating whether installed agent needs to be updated.
     * 
     * @return the agentUpdateStatus value.
     */
    public String agentUpdateStatus() {
        return this.agentUpdateStatus;
    }

    /**
     * Set the agentUpdateStatus property: A value indicating whether installed agent needs to be updated.
     * 
     * @param agentUpdateStatus the agentUpdateStatus value to set.
     * @return the InMageAgentDetails object itself.
     */
    public InMageAgentDetails withAgentUpdateStatus(String agentUpdateStatus) {
        this.agentUpdateStatus = agentUpdateStatus;
        return this;
    }

    /**
     * Get the postUpdateRebootStatus property: A value indicating whether reboot is required after update is applied.
     * 
     * @return the postUpdateRebootStatus value.
     */
    public String postUpdateRebootStatus() {
        return this.postUpdateRebootStatus;
    }

    /**
     * Set the postUpdateRebootStatus property: A value indicating whether reboot is required after update is applied.
     * 
     * @param postUpdateRebootStatus the postUpdateRebootStatus value to set.
     * @return the InMageAgentDetails object itself.
     */
    public InMageAgentDetails withPostUpdateRebootStatus(String postUpdateRebootStatus) {
        this.postUpdateRebootStatus = postUpdateRebootStatus;
        return this;
    }

    /**
     * Get the agentExpiryDate property: Agent expiry date.
     * 
     * @return the agentExpiryDate value.
     */
    public OffsetDateTime agentExpiryDate() {
        return this.agentExpiryDate;
    }

    /**
     * Set the agentExpiryDate property: Agent expiry date.
     * 
     * @param agentExpiryDate the agentExpiryDate value to set.
     * @return the InMageAgentDetails object itself.
     */
    public InMageAgentDetails withAgentExpiryDate(OffsetDateTime agentExpiryDate) {
        this.agentExpiryDate = agentExpiryDate;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("agentVersion", this.agentVersion);
        jsonWriter.writeStringField("agentUpdateStatus", this.agentUpdateStatus);
        jsonWriter.writeStringField("postUpdateRebootStatus", this.postUpdateRebootStatus);
        jsonWriter.writeStringField("agentExpiryDate",
            this.agentExpiryDate == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.agentExpiryDate));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InMageAgentDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InMageAgentDetails if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the InMageAgentDetails.
     */
    public static InMageAgentDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InMageAgentDetails deserializedInMageAgentDetails = new InMageAgentDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("agentVersion".equals(fieldName)) {
                    deserializedInMageAgentDetails.agentVersion = reader.getString();
                } else if ("agentUpdateStatus".equals(fieldName)) {
                    deserializedInMageAgentDetails.agentUpdateStatus = reader.getString();
                } else if ("postUpdateRebootStatus".equals(fieldName)) {
                    deserializedInMageAgentDetails.postUpdateRebootStatus = reader.getString();
                } else if ("agentExpiryDate".equals(fieldName)) {
                    deserializedInMageAgentDetails.agentExpiryDate = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInMageAgentDetails;
        });
    }
}
