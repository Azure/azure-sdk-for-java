// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A2A Cross-Cluster Migration enable protection input.
 */
@Fluent
public final class A2ACrossClusterMigrationEnableProtectionInput extends EnableProtectionProviderSpecificInput {
    /*
     * The class type.
     */
    private String instanceType = "A2ACrossClusterMigration";

    /*
     * The fabric specific object Id of the virtual machine.
     */
    private String fabricObjectId;

    /*
     * The recovery container Id.
     */
    private String recoveryContainerId;

    /**
     * Creates an instance of A2ACrossClusterMigrationEnableProtectionInput class.
     */
    public A2ACrossClusterMigrationEnableProtectionInput() {
    }

    /**
     * Get the instanceType property: The class type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the fabricObjectId property: The fabric specific object Id of the virtual machine.
     * 
     * @return the fabricObjectId value.
     */
    public String fabricObjectId() {
        return this.fabricObjectId;
    }

    /**
     * Set the fabricObjectId property: The fabric specific object Id of the virtual machine.
     * 
     * @param fabricObjectId the fabricObjectId value to set.
     * @return the A2ACrossClusterMigrationEnableProtectionInput object itself.
     */
    public A2ACrossClusterMigrationEnableProtectionInput withFabricObjectId(String fabricObjectId) {
        this.fabricObjectId = fabricObjectId;
        return this;
    }

    /**
     * Get the recoveryContainerId property: The recovery container Id.
     * 
     * @return the recoveryContainerId value.
     */
    public String recoveryContainerId() {
        return this.recoveryContainerId;
    }

    /**
     * Set the recoveryContainerId property: The recovery container Id.
     * 
     * @param recoveryContainerId the recoveryContainerId value to set.
     * @return the A2ACrossClusterMigrationEnableProtectionInput object itself.
     */
    public A2ACrossClusterMigrationEnableProtectionInput withRecoveryContainerId(String recoveryContainerId) {
        this.recoveryContainerId = recoveryContainerId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("fabricObjectId", this.fabricObjectId);
        jsonWriter.writeStringField("recoveryContainerId", this.recoveryContainerId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of A2ACrossClusterMigrationEnableProtectionInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of A2ACrossClusterMigrationEnableProtectionInput if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the A2ACrossClusterMigrationEnableProtectionInput.
     */
    public static A2ACrossClusterMigrationEnableProtectionInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            A2ACrossClusterMigrationEnableProtectionInput deserializedA2ACrossClusterMigrationEnableProtectionInput
                = new A2ACrossClusterMigrationEnableProtectionInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedA2ACrossClusterMigrationEnableProtectionInput.instanceType = reader.getString();
                } else if ("fabricObjectId".equals(fieldName)) {
                    deserializedA2ACrossClusterMigrationEnableProtectionInput.fabricObjectId = reader.getString();
                } else if ("recoveryContainerId".equals(fieldName)) {
                    deserializedA2ACrossClusterMigrationEnableProtectionInput.recoveryContainerId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedA2ACrossClusterMigrationEnableProtectionInput;
        });
    }
}
