// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationEligibilityResultsProperties;
import java.io.IOException;

/**
 * Replication eligibility results response model.
 */
@Immutable
public final class ReplicationEligibilityResultsInner implements JsonSerializable<ReplicationEligibilityResultsInner> {
    /*
     * Gets the name of this object.
     */
    private String name;

    /*
     * Gets the object type.
     */
    private String type;

    /*
     * Gets Unique ARM identifier for this object.
     */
    private String id;

    /*
     * Gets properties model for replication eligibility results API.
     */
    private ReplicationEligibilityResultsProperties properties;

    /**
     * Creates an instance of ReplicationEligibilityResultsInner class.
     */
    public ReplicationEligibilityResultsInner() {
    }

    /**
     * Get the name property: Gets the name of this object.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the type property: Gets the object type.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the id property: Gets Unique ARM identifier for this object.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the properties property: Gets properties model for replication eligibility results API.
     * 
     * @return the properties value.
     */
    public ReplicationEligibilityResultsProperties properties() {
        return this.properties;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (properties() != null) {
            properties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReplicationEligibilityResultsInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReplicationEligibilityResultsInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ReplicationEligibilityResultsInner.
     */
    public static ReplicationEligibilityResultsInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReplicationEligibilityResultsInner deserializedReplicationEligibilityResultsInner
                = new ReplicationEligibilityResultsInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedReplicationEligibilityResultsInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedReplicationEligibilityResultsInner.type = reader.getString();
                } else if ("id".equals(fieldName)) {
                    deserializedReplicationEligibilityResultsInner.id = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedReplicationEligibilityResultsInner.properties
                        = ReplicationEligibilityResultsProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedReplicationEligibilityResultsInner;
        });
    }
}
