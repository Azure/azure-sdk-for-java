// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** VMwareCbt disk input. */
@Fluent
public final class VMwareCbtDiskInput {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VMwareCbtDiskInput.class);

    /*
     * The disk Id.
     */
    @JsonProperty(value = "diskId", required = true)
    private String diskId;

    /*
     * A value indicating whether the disk is the OS disk.
     */
    @JsonProperty(value = "isOSDisk", required = true)
    private String isOSDisk;

    /*
     * The log storage account ARM Id.
     */
    @JsonProperty(value = "logStorageAccountId", required = true)
    private String logStorageAccountId;

    /*
     * The key vault secret name of the log storage account.
     */
    @JsonProperty(value = "logStorageAccountSasSecretName", required = true)
    private String logStorageAccountSasSecretName;

    /*
     * The disk type.
     */
    @JsonProperty(value = "diskType")
    private DiskAccountType diskType;

    /**
     * Get the diskId property: The disk Id.
     *
     * @return the diskId value.
     */
    public String diskId() {
        return this.diskId;
    }

    /**
     * Set the diskId property: The disk Id.
     *
     * @param diskId the diskId value to set.
     * @return the VMwareCbtDiskInput object itself.
     */
    public VMwareCbtDiskInput withDiskId(String diskId) {
        this.diskId = diskId;
        return this;
    }

    /**
     * Get the isOSDisk property: A value indicating whether the disk is the OS disk.
     *
     * @return the isOSDisk value.
     */
    public String isOSDisk() {
        return this.isOSDisk;
    }

    /**
     * Set the isOSDisk property: A value indicating whether the disk is the OS disk.
     *
     * @param isOSDisk the isOSDisk value to set.
     * @return the VMwareCbtDiskInput object itself.
     */
    public VMwareCbtDiskInput withIsOSDisk(String isOSDisk) {
        this.isOSDisk = isOSDisk;
        return this;
    }

    /**
     * Get the logStorageAccountId property: The log storage account ARM Id.
     *
     * @return the logStorageAccountId value.
     */
    public String logStorageAccountId() {
        return this.logStorageAccountId;
    }

    /**
     * Set the logStorageAccountId property: The log storage account ARM Id.
     *
     * @param logStorageAccountId the logStorageAccountId value to set.
     * @return the VMwareCbtDiskInput object itself.
     */
    public VMwareCbtDiskInput withLogStorageAccountId(String logStorageAccountId) {
        this.logStorageAccountId = logStorageAccountId;
        return this;
    }

    /**
     * Get the logStorageAccountSasSecretName property: The key vault secret name of the log storage account.
     *
     * @return the logStorageAccountSasSecretName value.
     */
    public String logStorageAccountSasSecretName() {
        return this.logStorageAccountSasSecretName;
    }

    /**
     * Set the logStorageAccountSasSecretName property: The key vault secret name of the log storage account.
     *
     * @param logStorageAccountSasSecretName the logStorageAccountSasSecretName value to set.
     * @return the VMwareCbtDiskInput object itself.
     */
    public VMwareCbtDiskInput withLogStorageAccountSasSecretName(String logStorageAccountSasSecretName) {
        this.logStorageAccountSasSecretName = logStorageAccountSasSecretName;
        return this;
    }

    /**
     * Get the diskType property: The disk type.
     *
     * @return the diskType value.
     */
    public DiskAccountType diskType() {
        return this.diskType;
    }

    /**
     * Set the diskType property: The disk type.
     *
     * @param diskType the diskType value to set.
     * @return the VMwareCbtDiskInput object itself.
     */
    public VMwareCbtDiskInput withDiskType(DiskAccountType diskType) {
        this.diskType = diskType;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (diskId() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property diskId in model VMwareCbtDiskInput"));
        }
        if (isOSDisk() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property isOSDisk in model VMwareCbtDiskInput"));
        }
        if (logStorageAccountId() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property logStorageAccountId in model VMwareCbtDiskInput"));
        }
        if (logStorageAccountSasSecretName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property logStorageAccountSasSecretName in model VMwareCbtDiskInput"));
        }
    }
}
