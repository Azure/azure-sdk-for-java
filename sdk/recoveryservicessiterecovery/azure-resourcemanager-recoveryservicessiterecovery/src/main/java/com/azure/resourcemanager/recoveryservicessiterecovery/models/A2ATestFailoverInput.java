// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A2A provider specific input for test failover.
 */
@Fluent
public final class A2ATestFailoverInput extends TestFailoverProviderSpecificInput {
    /*
     * The class type.
     */
    private String instanceType = "A2A";

    /*
     * The recovery point id to be passed to test failover to a particular recovery point. In case of latest recovery
     * point, null should be passed.
     */
    private String recoveryPointId;

    /*
     * A value indicating whether to use recovery cloud service for TFO or not.
     */
    private String cloudServiceCreationOption;

    /**
     * Creates an instance of A2ATestFailoverInput class.
     */
    public A2ATestFailoverInput() {
    }

    /**
     * Get the instanceType property: The class type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the recoveryPointId property: The recovery point id to be passed to test failover to a particular recovery
     * point. In case of latest recovery point, null should be passed.
     * 
     * @return the recoveryPointId value.
     */
    public String recoveryPointId() {
        return this.recoveryPointId;
    }

    /**
     * Set the recoveryPointId property: The recovery point id to be passed to test failover to a particular recovery
     * point. In case of latest recovery point, null should be passed.
     * 
     * @param recoveryPointId the recoveryPointId value to set.
     * @return the A2ATestFailoverInput object itself.
     */
    public A2ATestFailoverInput withRecoveryPointId(String recoveryPointId) {
        this.recoveryPointId = recoveryPointId;
        return this;
    }

    /**
     * Get the cloudServiceCreationOption property: A value indicating whether to use recovery cloud service for TFO or
     * not.
     * 
     * @return the cloudServiceCreationOption value.
     */
    public String cloudServiceCreationOption() {
        return this.cloudServiceCreationOption;
    }

    /**
     * Set the cloudServiceCreationOption property: A value indicating whether to use recovery cloud service for TFO or
     * not.
     * 
     * @param cloudServiceCreationOption the cloudServiceCreationOption value to set.
     * @return the A2ATestFailoverInput object itself.
     */
    public A2ATestFailoverInput withCloudServiceCreationOption(String cloudServiceCreationOption) {
        this.cloudServiceCreationOption = cloudServiceCreationOption;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("recoveryPointId", this.recoveryPointId);
        jsonWriter.writeStringField("cloudServiceCreationOption", this.cloudServiceCreationOption);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of A2ATestFailoverInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of A2ATestFailoverInput if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the A2ATestFailoverInput.
     */
    public static A2ATestFailoverInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            A2ATestFailoverInput deserializedA2ATestFailoverInput = new A2ATestFailoverInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedA2ATestFailoverInput.instanceType = reader.getString();
                } else if ("recoveryPointId".equals(fieldName)) {
                    deserializedA2ATestFailoverInput.recoveryPointId = reader.getString();
                } else if ("cloudServiceCreationOption".equals(fieldName)) {
                    deserializedA2ATestFailoverInput.cloudServiceCreationOption = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedA2ATestFailoverInput;
        });
    }
}
