// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.ReplicationProtectedItemInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AddDisksInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ApplyRecoveryPointInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.DisableProtectionInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.EnableProtectionInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PlannedFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RemoveDisksInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ResolveHealthInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReverseReplicationInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SwitchProviderInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.TestFailoverCleanupInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.TestFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.UnplannedFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.UpdateApplianceForReplicationProtectedItemInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.UpdateMobilityServiceRequest;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.UpdateReplicationProtectedItemInput;

/**
 * An instance of this class provides access to all the operations defined in ReplicationProtectedItemsClient.
 */
public interface ReplicationProtectedItemsClient {
    /**
     * Gets the list of Replication protected items.
     * 
     * Gets the list of ASR replication protected items in the protection container.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of ASR replication protected items in the protection container as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ReplicationProtectedItemInner> listByReplicationProtectionContainers(String resourceGroupName,
        String resourceName, String fabricName, String protectionContainerName);

    /**
     * Gets the list of Replication protected items.
     * 
     * Gets the list of ASR replication protected items in the protection container.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of ASR replication protected items in the protection container as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ReplicationProtectedItemInner> listByReplicationProtectionContainers(String resourceGroupName,
        String resourceName, String fabricName, String protectionContainerName, Context context);

    /**
     * Gets the details of a Replication protected item.
     * 
     * Gets the details of an ASR replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric unique name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of an ASR replication protected item along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ReplicationProtectedItemInner> getWithResponse(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicatedProtectedItemName, Context context);

    /**
     * Gets the details of a Replication protected item.
     * 
     * Gets the details of an ASR replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric unique name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of an ASR replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner get(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName);

    /**
     * Enables protection.
     * 
     * The operation to create an ASR replication protected item (Enable replication).
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Name of the fabric.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName A name for the replication protected item.
     * @param input Enable Protection Input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginCreate(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, EnableProtectionInput input);

    /**
     * Enables protection.
     * 
     * The operation to create an ASR replication protected item (Enable replication).
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Name of the fabric.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName A name for the replication protected item.
     * @param input Enable Protection Input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginCreate(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, EnableProtectionInput input, Context context);

    /**
     * Enables protection.
     * 
     * The operation to create an ASR replication protected item (Enable replication).
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Name of the fabric.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName A name for the replication protected item.
     * @param input Enable Protection Input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner create(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, EnableProtectionInput input);

    /**
     * Enables protection.
     * 
     * The operation to create an ASR replication protected item (Enable replication).
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Name of the fabric.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName A name for the replication protected item.
     * @param input Enable Protection Input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner create(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, EnableProtectionInput input,
        Context context);

    /**
     * Purges protection.
     * 
     * The operation to delete or purge a replication protected item. This operation will force delete the replication
     * protected item. Use the remove operation on replication protected item to perform a clean disable replication for
     * the item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginPurge(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName);

    /**
     * Purges protection.
     * 
     * The operation to delete or purge a replication protected item. This operation will force delete the replication
     * protected item. Use the remove operation on replication protected item to perform a clean disable replication for
     * the item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginPurge(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, Context context);

    /**
     * Purges protection.
     * 
     * The operation to delete or purge a replication protected item. This operation will force delete the replication
     * protected item. Use the remove operation on replication protected item to perform a clean disable replication for
     * the item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void purge(String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName);

    /**
     * Purges protection.
     * 
     * The operation to delete or purge a replication protected item. This operation will force delete the replication
     * protected item. Use the remove operation on replication protected item to perform a clean disable replication for
     * the item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void purge(String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, Context context);

    /**
     * Updates the replication protected item settings.
     * 
     * The operation to update the recovery settings of an ASR replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param updateProtectionInput Update protection input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginUpdate(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, UpdateReplicationProtectedItemInput updateProtectionInput);

    /**
     * Updates the replication protected item settings.
     * 
     * The operation to update the recovery settings of an ASR replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param updateProtectionInput Update protection input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginUpdate(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, UpdateReplicationProtectedItemInput updateProtectionInput, Context context);

    /**
     * Updates the replication protected item settings.
     * 
     * The operation to update the recovery settings of an ASR replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param updateProtectionInput Update protection input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner update(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName,
        UpdateReplicationProtectedItemInput updateProtectionInput);

    /**
     * Updates the replication protected item settings.
     * 
     * The operation to update the recovery settings of an ASR replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param updateProtectionInput Update protection input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner update(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName,
        UpdateReplicationProtectedItemInput updateProtectionInput, Context context);

    /**
     * Add disk(s) for protection.
     * 
     * Operation to add disks(s) to the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param addDisksInput Add disks input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginAddDisks(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, AddDisksInput addDisksInput);

    /**
     * Add disk(s) for protection.
     * 
     * Operation to add disks(s) to the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param addDisksInput Add disks input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginAddDisks(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, AddDisksInput addDisksInput, Context context);

    /**
     * Add disk(s) for protection.
     * 
     * Operation to add disks(s) to the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param addDisksInput Add disks input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner addDisks(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, AddDisksInput addDisksInput);

    /**
     * Add disk(s) for protection.
     * 
     * Operation to add disks(s) to the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param addDisksInput Add disks input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner addDisks(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, AddDisksInput addDisksInput,
        Context context);

    /**
     * Change or apply recovery point.
     * 
     * The operation to change the recovery point of a failed over replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The ARM fabric name.
     * @param protectionContainerName The protection container name.
     * @param replicatedProtectedItemName The replicated protected item name.
     * @param applyRecoveryPointInput The ApplyRecoveryPointInput.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginApplyRecoveryPoint(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, ApplyRecoveryPointInput applyRecoveryPointInput);

    /**
     * Change or apply recovery point.
     * 
     * The operation to change the recovery point of a failed over replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The ARM fabric name.
     * @param protectionContainerName The protection container name.
     * @param replicatedProtectedItemName The replicated protected item name.
     * @param applyRecoveryPointInput The ApplyRecoveryPointInput.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginApplyRecoveryPoint(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, ApplyRecoveryPointInput applyRecoveryPointInput, Context context);

    /**
     * Change or apply recovery point.
     * 
     * The operation to change the recovery point of a failed over replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The ARM fabric name.
     * @param protectionContainerName The protection container name.
     * @param replicatedProtectedItemName The replicated protected item name.
     * @param applyRecoveryPointInput The ApplyRecoveryPointInput.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner applyRecoveryPoint(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName,
        ApplyRecoveryPointInput applyRecoveryPointInput);

    /**
     * Change or apply recovery point.
     * 
     * The operation to change the recovery point of a failed over replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The ARM fabric name.
     * @param protectionContainerName The protection container name.
     * @param replicatedProtectedItemName The replicated protected item name.
     * @param applyRecoveryPointInput The ApplyRecoveryPointInput.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner applyRecoveryPoint(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName,
        ApplyRecoveryPointInput applyRecoveryPointInput, Context context);

    /**
     * Execute cancel failover.
     * 
     * Operation to cancel the failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginFailoverCancel(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName);

    /**
     * Execute cancel failover.
     * 
     * Operation to cancel the failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginFailoverCancel(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, Context context);

    /**
     * Execute cancel failover.
     * 
     * Operation to cancel the failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner failoverCancel(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName);

    /**
     * Execute cancel failover.
     * 
     * Operation to cancel the failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner failoverCancel(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, Context context);

    /**
     * Execute commit failover.
     * 
     * Operation to commit the failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginFailoverCommit(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName);

    /**
     * Execute commit failover.
     * 
     * Operation to commit the failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginFailoverCommit(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, Context context);

    /**
     * Execute commit failover.
     * 
     * Operation to commit the failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner failoverCommit(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName);

    /**
     * Execute commit failover.
     * 
     * Operation to commit the failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner failoverCommit(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, Context context);

    /**
     * Execute planned failover.
     * 
     * Operation to initiate a planned failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param failoverInput Planned failover input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginPlannedFailover(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, PlannedFailoverInput failoverInput);

    /**
     * Execute planned failover.
     * 
     * Operation to initiate a planned failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param failoverInput Planned failover input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginPlannedFailover(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, PlannedFailoverInput failoverInput, Context context);

    /**
     * Execute planned failover.
     * 
     * Operation to initiate a planned failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param failoverInput Planned failover input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner plannedFailover(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, PlannedFailoverInput failoverInput);

    /**
     * Execute planned failover.
     * 
     * Operation to initiate a planned failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param failoverInput Planned failover input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner plannedFailover(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, PlannedFailoverInput failoverInput,
        Context context);

    /**
     * Disables protection.
     * 
     * The operation to disable replication on a replication protected item. This will also remove the item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param disableProtectionInput Disable protection input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName,
        DisableProtectionInput disableProtectionInput);

    /**
     * Disables protection.
     * 
     * The operation to disable replication on a replication protected item. This will also remove the item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param disableProtectionInput Disable protection input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName,
        DisableProtectionInput disableProtectionInput, Context context);

    /**
     * Disables protection.
     * 
     * The operation to disable replication on a replication protected item. This will also remove the item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param disableProtectionInput Disable protection input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, DisableProtectionInput disableProtectionInput);

    /**
     * Disables protection.
     * 
     * The operation to disable replication on a replication protected item. This will also remove the item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param disableProtectionInput Disable protection input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, DisableProtectionInput disableProtectionInput, Context context);

    /**
     * Removes disk(s).
     * 
     * Operation to remove disk(s) from the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param removeDisksInput Remove disks input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginRemoveDisks(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, RemoveDisksInput removeDisksInput);

    /**
     * Removes disk(s).
     * 
     * Operation to remove disk(s) from the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param removeDisksInput Remove disks input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginRemoveDisks(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, RemoveDisksInput removeDisksInput, Context context);

    /**
     * Removes disk(s).
     * 
     * Operation to remove disk(s) from the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param removeDisksInput Remove disks input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner removeDisks(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, RemoveDisksInput removeDisksInput);

    /**
     * Removes disk(s).
     * 
     * Operation to remove disk(s) from the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param removeDisksInput Remove disks input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner removeDisks(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, RemoveDisksInput removeDisksInput,
        Context context);

    /**
     * Resynchronize or repair replication.
     * 
     * The operation to start resynchronize/repair replication for a replication protected item requiring
     * resynchronization.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric.
     * @param protectionContainerName The name of the container.
     * @param replicatedProtectedItemName The name of the replication protected item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginRepairReplication(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName);

    /**
     * Resynchronize or repair replication.
     * 
     * The operation to start resynchronize/repair replication for a replication protected item requiring
     * resynchronization.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric.
     * @param protectionContainerName The name of the container.
     * @param replicatedProtectedItemName The name of the replication protected item.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginRepairReplication(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, Context context);

    /**
     * Resynchronize or repair replication.
     * 
     * The operation to start resynchronize/repair replication for a replication protected item requiring
     * resynchronization.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric.
     * @param protectionContainerName The name of the container.
     * @param replicatedProtectedItemName The name of the replication protected item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner repairReplication(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName);

    /**
     * Resynchronize or repair replication.
     * 
     * The operation to start resynchronize/repair replication for a replication protected item requiring
     * resynchronization.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric.
     * @param protectionContainerName The name of the container.
     * @param replicatedProtectedItemName The name of the replication protected item.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner repairReplication(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, Context context);

    /**
     * Execute Reverse Replication\Reprotect.
     * 
     * Operation to reprotect or reverse replicate a failed over replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param reprotectInput Reverse replication input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginReprotect(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, ReverseReplicationInput reprotectInput);

    /**
     * Execute Reverse Replication\Reprotect.
     * 
     * Operation to reprotect or reverse replicate a failed over replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param reprotectInput Reverse replication input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginReprotect(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, ReverseReplicationInput reprotectInput, Context context);

    /**
     * Execute Reverse Replication\Reprotect.
     * 
     * Operation to reprotect or reverse replicate a failed over replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param reprotectInput Reverse replication input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner reprotect(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, ReverseReplicationInput reprotectInput);

    /**
     * Execute Reverse Replication\Reprotect.
     * 
     * Operation to reprotect or reverse replicate a failed over replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param reprotectInput Reverse replication input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner reprotect(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, ReverseReplicationInput reprotectInput,
        Context context);

    /**
     * Resolve health errors.
     * 
     * Operation to resolve health issues of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param resolveHealthInput Health issue input object.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginResolveHealthErrors(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, ResolveHealthInput resolveHealthInput);

    /**
     * Resolve health errors.
     * 
     * Operation to resolve health issues of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param resolveHealthInput Health issue input object.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginResolveHealthErrors(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, ResolveHealthInput resolveHealthInput, Context context);

    /**
     * Resolve health errors.
     * 
     * Operation to resolve health issues of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param resolveHealthInput Health issue input object.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner resolveHealthErrors(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, ResolveHealthInput resolveHealthInput);

    /**
     * Resolve health errors.
     * 
     * Operation to resolve health issues of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param resolveHealthInput Health issue input object.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner resolveHealthErrors(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, ResolveHealthInput resolveHealthInput,
        Context context);

    /**
     * Execute switch provider.
     * 
     * Operation to initiate a switch provider of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param switchProviderInput Switch provider input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginSwitchProvider(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, SwitchProviderInput switchProviderInput);

    /**
     * Execute switch provider.
     * 
     * Operation to initiate a switch provider of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param switchProviderInput Switch provider input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginSwitchProvider(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, SwitchProviderInput switchProviderInput, Context context);

    /**
     * Execute switch provider.
     * 
     * Operation to initiate a switch provider of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param switchProviderInput Switch provider input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner switchProvider(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, SwitchProviderInput switchProviderInput);

    /**
     * Execute switch provider.
     * 
     * Operation to initiate a switch provider of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param switchProviderInput Switch provider input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner switchProvider(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, SwitchProviderInput switchProviderInput,
        Context context);

    /**
     * Execute test failover.
     * 
     * Operation to perform a test failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param testfailoverInput Test failover input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginTestFailover(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, TestFailoverInput testfailoverInput);

    /**
     * Execute test failover.
     * 
     * Operation to perform a test failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param testfailoverInput Test failover input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginTestFailover(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, TestFailoverInput testfailoverInput, Context context);

    /**
     * Execute test failover.
     * 
     * Operation to perform a test failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param testfailoverInput Test failover input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner testFailover(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, TestFailoverInput testfailoverInput);

    /**
     * Execute test failover.
     * 
     * Operation to perform a test failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param testfailoverInput Test failover input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner testFailover(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, TestFailoverInput testfailoverInput,
        Context context);

    /**
     * Execute test failover cleanup.
     * 
     * Operation to clean up the test failover of a replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param cleanupInput Test failover cleanup input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginTestFailoverCleanup(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, TestFailoverCleanupInput cleanupInput);

    /**
     * Execute test failover cleanup.
     * 
     * Operation to clean up the test failover of a replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param cleanupInput Test failover cleanup input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginTestFailoverCleanup(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, TestFailoverCleanupInput cleanupInput, Context context);

    /**
     * Execute test failover cleanup.
     * 
     * Operation to clean up the test failover of a replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param cleanupInput Test failover cleanup input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner testFailoverCleanup(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, TestFailoverCleanupInput cleanupInput);

    /**
     * Execute test failover cleanup.
     * 
     * Operation to clean up the test failover of a replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param cleanupInput Test failover cleanup input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner testFailoverCleanup(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, TestFailoverCleanupInput cleanupInput,
        Context context);

    /**
     * Execute unplanned failover.
     * 
     * Operation to initiate a failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param failoverInput Failover input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginUnplannedFailover(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, UnplannedFailoverInput failoverInput);

    /**
     * Execute unplanned failover.
     * 
     * Operation to initiate a failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param failoverInput Failover input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginUnplannedFailover(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, UnplannedFailoverInput failoverInput, Context context);

    /**
     * Execute unplanned failover.
     * 
     * Operation to initiate a failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param failoverInput Failover input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner unplannedFailover(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, UnplannedFailoverInput failoverInput);

    /**
     * Execute unplanned failover.
     * 
     * Operation to initiate a failover of the replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Unique fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param failoverInput Failover input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner unplannedFailover(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName, UnplannedFailoverInput failoverInput,
        Context context);

    /**
     * Updates appliance for replication protected Item.
     * 
     * The operation to update appliance of an ASR replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param applianceUpdateInput Appliance update protection input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginUpdateAppliance(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, UpdateApplianceForReplicationProtectedItemInput applianceUpdateInput);

    /**
     * Updates appliance for replication protected Item.
     * 
     * The operation to update appliance of an ASR replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param applianceUpdateInput Appliance update protection input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginUpdateAppliance(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, UpdateApplianceForReplicationProtectedItemInput applianceUpdateInput,
        Context context);

    /**
     * Updates appliance for replication protected Item.
     * 
     * The operation to update appliance of an ASR replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param applianceUpdateInput Appliance update protection input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner updateAppliance(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName,
        UpdateApplianceForReplicationProtectedItemInput applianceUpdateInput);

    /**
     * Updates appliance for replication protected Item.
     * 
     * The operation to update appliance of an ASR replication protected item.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param replicatedProtectedItemName Replication protected item name.
     * @param applianceUpdateInput Appliance update protection input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner updateAppliance(String resourceGroupName, String resourceName, String fabricName,
        String protectionContainerName, String replicatedProtectedItemName,
        UpdateApplianceForReplicationProtectedItemInput applianceUpdateInput, Context context);

    /**
     * Update the mobility service on a protected item.
     * 
     * The operation to update(push update) the installed mobility service software on a replication protected item to
     * the latest available version.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric containing the protected item.
     * @param protectionContainerName The name of the container containing the protected item.
     * @param replicatedProtectedItemName The name of the protected item on which the agent is to be updated.
     * @param updateMobilityServiceRequest Request to update the mobility service on the protected item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginUpdateMobilityService(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, UpdateMobilityServiceRequest updateMobilityServiceRequest);

    /**
     * Update the mobility service on a protected item.
     * 
     * The operation to update(push update) the installed mobility service software on a replication protected item to
     * the latest available version.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric containing the protected item.
     * @param protectionContainerName The name of the container containing the protected item.
     * @param replicatedProtectedItemName The name of the protected item on which the agent is to be updated.
     * @param updateMobilityServiceRequest Request to update the mobility service on the protected item.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of replication protected item.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ReplicationProtectedItemInner>, ReplicationProtectedItemInner> beginUpdateMobilityService(
        String resourceGroupName, String resourceName, String fabricName, String protectionContainerName,
        String replicatedProtectedItemName, UpdateMobilityServiceRequest updateMobilityServiceRequest, Context context);

    /**
     * Update the mobility service on a protected item.
     * 
     * The operation to update(push update) the installed mobility service software on a replication protected item to
     * the latest available version.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric containing the protected item.
     * @param protectionContainerName The name of the container containing the protected item.
     * @param replicatedProtectedItemName The name of the protected item on which the agent is to be updated.
     * @param updateMobilityServiceRequest Request to update the mobility service on the protected item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner updateMobilityService(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicatedProtectedItemName,
        UpdateMobilityServiceRequest updateMobilityServiceRequest);

    /**
     * Update the mobility service on a protected item.
     * 
     * The operation to update(push update) the installed mobility service software on a replication protected item to
     * the latest available version.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param fabricName The name of the fabric containing the protected item.
     * @param protectionContainerName The name of the container containing the protected item.
     * @param replicatedProtectedItemName The name of the protected item on which the agent is to be updated.
     * @param updateMobilityServiceRequest Request to update the mobility service on the protected item.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return replication protected item.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ReplicationProtectedItemInner updateMobilityService(String resourceGroupName, String resourceName,
        String fabricName, String protectionContainerName, String replicatedProtectedItemName,
        UpdateMobilityServiceRequest updateMobilityServiceRequest, Context context);

    /**
     * Gets the list of replication protected items.
     * 
     * Gets the list of ASR replication protected items in the vault.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of ASR replication protected items in the vault as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ReplicationProtectedItemInner> list(String resourceGroupName, String resourceName);

    /**
     * Gets the list of replication protected items.
     * 
     * Gets the list of ASR replication protected items in the vault.
     * 
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param resourceName The name of the recovery services vault.
     * @param skipToken The pagination token. Possible values: "FabricId" or "FabricId_CloudId" or null.
     * @param filter OData filter options.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of ASR replication protected items in the vault as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ReplicationProtectedItemInner> list(String resourceGroupName, String resourceName, String skipToken,
        String filter, Context context);
}
