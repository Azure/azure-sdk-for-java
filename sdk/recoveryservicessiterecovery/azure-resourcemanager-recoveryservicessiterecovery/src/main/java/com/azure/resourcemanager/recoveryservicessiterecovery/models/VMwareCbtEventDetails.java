// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Event details for VMwareCbt provider.
 */
@Immutable
public final class VMwareCbtEventDetails extends EventProviderSpecificDetails {
    /*
     * Gets the class type. Overridden in derived classes.
     */
    private String instanceType = "VMwareCbt";

    /*
     * The migration item name.
     */
    private String migrationItemName;

    /**
     * Creates an instance of VMwareCbtEventDetails class.
     */
    public VMwareCbtEventDetails() {
    }

    /**
     * Get the instanceType property: Gets the class type. Overridden in derived classes.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the migrationItemName property: The migration item name.
     * 
     * @return the migrationItemName value.
     */
    public String migrationItemName() {
        return this.migrationItemName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VMwareCbtEventDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VMwareCbtEventDetails if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VMwareCbtEventDetails.
     */
    public static VMwareCbtEventDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VMwareCbtEventDetails deserializedVMwareCbtEventDetails = new VMwareCbtEventDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedVMwareCbtEventDetails.instanceType = reader.getString();
                } else if ("migrationItemName".equals(fieldName)) {
                    deserializedVMwareCbtEventDetails.migrationItemName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVMwareCbtEventDetails;
        });
    }
}
