// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * CS Accounts Details.
 */
@Fluent
public final class RunAsAccount implements JsonSerializable<RunAsAccount> {
    /*
     * The CS RunAs account Id.
     */
    private String accountId;

    /*
     * The CS RunAs account name.
     */
    private String accountName;

    /**
     * Creates an instance of RunAsAccount class.
     */
    public RunAsAccount() {
    }

    /**
     * Get the accountId property: The CS RunAs account Id.
     * 
     * @return the accountId value.
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * Set the accountId property: The CS RunAs account Id.
     * 
     * @param accountId the accountId value to set.
     * @return the RunAsAccount object itself.
     */
    public RunAsAccount withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }

    /**
     * Get the accountName property: The CS RunAs account name.
     * 
     * @return the accountName value.
     */
    public String accountName() {
        return this.accountName;
    }

    /**
     * Set the accountName property: The CS RunAs account name.
     * 
     * @param accountName the accountName value to set.
     * @return the RunAsAccount object itself.
     */
    public RunAsAccount withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accountId", this.accountId);
        jsonWriter.writeStringField("accountName", this.accountName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunAsAccount from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunAsAccount if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the RunAsAccount.
     */
    public static RunAsAccount fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RunAsAccount deserializedRunAsAccount = new RunAsAccount();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accountId".equals(fieldName)) {
                    deserializedRunAsAccount.accountId = reader.getString();
                } else if ("accountName".equals(fieldName)) {
                    deserializedRunAsAccount.accountName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRunAsAccount;
        });
    }
}
