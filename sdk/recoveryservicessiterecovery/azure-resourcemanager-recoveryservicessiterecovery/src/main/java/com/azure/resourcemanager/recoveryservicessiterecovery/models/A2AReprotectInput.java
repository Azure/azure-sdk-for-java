// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Azure specific reprotect input.
 */
@Fluent
public final class A2AReprotectInput extends ReverseReplicationProviderSpecificInput {
    /*
     * The class type.
     */
    private String instanceType = "A2A";

    /*
     * The recovery container Id.
     */
    private String recoveryContainerId;

    /*
     * The list of vm disk details.
     */
    private List<A2AVmDiskInputDetails> vmDisks;

    /*
     * The recovery resource group Id. Valid for V2 scenarios.
     */
    private String recoveryResourceGroupId;

    /*
     * The recovery cloud service Id. Valid for V1 scenarios.
     */
    private String recoveryCloudServiceId;

    /*
     * The recovery availability set.
     */
    private String recoveryAvailabilitySetId;

    /*
     * The Policy Id.
     */
    private String policyId;

    /**
     * Creates an instance of A2AReprotectInput class.
     */
    public A2AReprotectInput() {
    }

    /**
     * Get the instanceType property: The class type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the recoveryContainerId property: The recovery container Id.
     * 
     * @return the recoveryContainerId value.
     */
    public String recoveryContainerId() {
        return this.recoveryContainerId;
    }

    /**
     * Set the recoveryContainerId property: The recovery container Id.
     * 
     * @param recoveryContainerId the recoveryContainerId value to set.
     * @return the A2AReprotectInput object itself.
     */
    public A2AReprotectInput withRecoveryContainerId(String recoveryContainerId) {
        this.recoveryContainerId = recoveryContainerId;
        return this;
    }

    /**
     * Get the vmDisks property: The list of vm disk details.
     * 
     * @return the vmDisks value.
     */
    public List<A2AVmDiskInputDetails> vmDisks() {
        return this.vmDisks;
    }

    /**
     * Set the vmDisks property: The list of vm disk details.
     * 
     * @param vmDisks the vmDisks value to set.
     * @return the A2AReprotectInput object itself.
     */
    public A2AReprotectInput withVmDisks(List<A2AVmDiskInputDetails> vmDisks) {
        this.vmDisks = vmDisks;
        return this;
    }

    /**
     * Get the recoveryResourceGroupId property: The recovery resource group Id. Valid for V2 scenarios.
     * 
     * @return the recoveryResourceGroupId value.
     */
    public String recoveryResourceGroupId() {
        return this.recoveryResourceGroupId;
    }

    /**
     * Set the recoveryResourceGroupId property: The recovery resource group Id. Valid for V2 scenarios.
     * 
     * @param recoveryResourceGroupId the recoveryResourceGroupId value to set.
     * @return the A2AReprotectInput object itself.
     */
    public A2AReprotectInput withRecoveryResourceGroupId(String recoveryResourceGroupId) {
        this.recoveryResourceGroupId = recoveryResourceGroupId;
        return this;
    }

    /**
     * Get the recoveryCloudServiceId property: The recovery cloud service Id. Valid for V1 scenarios.
     * 
     * @return the recoveryCloudServiceId value.
     */
    public String recoveryCloudServiceId() {
        return this.recoveryCloudServiceId;
    }

    /**
     * Set the recoveryCloudServiceId property: The recovery cloud service Id. Valid for V1 scenarios.
     * 
     * @param recoveryCloudServiceId the recoveryCloudServiceId value to set.
     * @return the A2AReprotectInput object itself.
     */
    public A2AReprotectInput withRecoveryCloudServiceId(String recoveryCloudServiceId) {
        this.recoveryCloudServiceId = recoveryCloudServiceId;
        return this;
    }

    /**
     * Get the recoveryAvailabilitySetId property: The recovery availability set.
     * 
     * @return the recoveryAvailabilitySetId value.
     */
    public String recoveryAvailabilitySetId() {
        return this.recoveryAvailabilitySetId;
    }

    /**
     * Set the recoveryAvailabilitySetId property: The recovery availability set.
     * 
     * @param recoveryAvailabilitySetId the recoveryAvailabilitySetId value to set.
     * @return the A2AReprotectInput object itself.
     */
    public A2AReprotectInput withRecoveryAvailabilitySetId(String recoveryAvailabilitySetId) {
        this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
        return this;
    }

    /**
     * Get the policyId property: The Policy Id.
     * 
     * @return the policyId value.
     */
    public String policyId() {
        return this.policyId;
    }

    /**
     * Set the policyId property: The Policy Id.
     * 
     * @param policyId the policyId value to set.
     * @return the A2AReprotectInput object itself.
     */
    public A2AReprotectInput withPolicyId(String policyId) {
        this.policyId = policyId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (vmDisks() != null) {
            vmDisks().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("recoveryContainerId", this.recoveryContainerId);
        jsonWriter.writeArrayField("vmDisks", this.vmDisks, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("recoveryResourceGroupId", this.recoveryResourceGroupId);
        jsonWriter.writeStringField("recoveryCloudServiceId", this.recoveryCloudServiceId);
        jsonWriter.writeStringField("recoveryAvailabilitySetId", this.recoveryAvailabilitySetId);
        jsonWriter.writeStringField("policyId", this.policyId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of A2AReprotectInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of A2AReprotectInput if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the A2AReprotectInput.
     */
    public static A2AReprotectInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            A2AReprotectInput deserializedA2AReprotectInput = new A2AReprotectInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedA2AReprotectInput.instanceType = reader.getString();
                } else if ("recoveryContainerId".equals(fieldName)) {
                    deserializedA2AReprotectInput.recoveryContainerId = reader.getString();
                } else if ("vmDisks".equals(fieldName)) {
                    List<A2AVmDiskInputDetails> vmDisks
                        = reader.readArray(reader1 -> A2AVmDiskInputDetails.fromJson(reader1));
                    deserializedA2AReprotectInput.vmDisks = vmDisks;
                } else if ("recoveryResourceGroupId".equals(fieldName)) {
                    deserializedA2AReprotectInput.recoveryResourceGroupId = reader.getString();
                } else if ("recoveryCloudServiceId".equals(fieldName)) {
                    deserializedA2AReprotectInput.recoveryCloudServiceId = reader.getString();
                } else if ("recoveryAvailabilitySetId".equals(fieldName)) {
                    deserializedA2AReprotectInput.recoveryAvailabilitySetId = reader.getString();
                } else if ("policyId".equals(fieldName)) {
                    deserializedA2AReprotectInput.policyId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedA2AReprotectInput;
        });
    }
}
