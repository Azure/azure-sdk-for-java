// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A2A provider specific input for apply cluster recovery point.
 */
@Immutable
public final class A2AApplyClusterRecoveryPointInput extends ApplyClusterRecoveryPointProviderSpecificInput {
    /*
     * The class type.
     */
    private String instanceType = "A2A";

    /**
     * Creates an instance of A2AApplyClusterRecoveryPointInput class.
     */
    public A2AApplyClusterRecoveryPointInput() {
    }

    /**
     * Get the instanceType property: The class type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of A2AApplyClusterRecoveryPointInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of A2AApplyClusterRecoveryPointInput if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the A2AApplyClusterRecoveryPointInput.
     */
    public static A2AApplyClusterRecoveryPointInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            A2AApplyClusterRecoveryPointInput deserializedA2AApplyClusterRecoveryPointInput
                = new A2AApplyClusterRecoveryPointInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedA2AApplyClusterRecoveryPointInput.instanceType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedA2AApplyClusterRecoveryPointInput;
        });
    }
}
