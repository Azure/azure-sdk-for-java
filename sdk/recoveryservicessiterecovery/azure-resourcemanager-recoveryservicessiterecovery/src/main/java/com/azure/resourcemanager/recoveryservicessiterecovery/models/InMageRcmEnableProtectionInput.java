// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * InMageRcm specific enable protection input.
 */
@Fluent
public final class InMageRcmEnableProtectionInput extends EnableProtectionProviderSpecificInput {
    /*
     * The class type.
     */
    private String instanceType = "InMageRcm";

    /*
     * The ARM Id of discovered machine.
     */
    private String fabricDiscoveryMachineId;

    /*
     * The disks to include list.
     */
    private List<InMageRcmDiskInput> disksToInclude;

    /*
     * The default disk input.
     */
    private InMageRcmDisksDefaultInput disksDefault;

    /*
     * The target resource group ARM Id.
     */
    private String targetResourceGroupId;

    /*
     * The selected target network ARM Id.
     */
    private String targetNetworkId;

    /*
     * The selected test network ARM Id.
     */
    private String testNetworkId;

    /*
     * The selected target subnet name.
     */
    private String targetSubnetName;

    /*
     * The selected test subnet name.
     */
    private String testSubnetName;

    /*
     * The target VM name.
     */
    private String targetVmName;

    /*
     * The target VM size.
     */
    private String targetVmSize;

    /*
     * The license type.
     */
    private LicenseType licenseType;

    /*
     * The target availability set ARM Id.
     */
    private String targetAvailabilitySetId;

    /*
     * The target availability zone.
     */
    private String targetAvailabilityZone;

    /*
     * The target proximity placement group Id.
     */
    private String targetProximityPlacementGroupId;

    /*
     * The target boot diagnostics storage account ARM Id.
     */
    private String targetBootDiagnosticsStorageAccountId;

    /*
     * The run-as account Id.
     */
    private String runAsAccountId;

    /*
     * The process server Id.
     */
    private String processServerId;

    /*
     * The multi VM group name.
     */
    private String multiVmGroupName;

    /**
     * Creates an instance of InMageRcmEnableProtectionInput class.
     */
    public InMageRcmEnableProtectionInput() {
    }

    /**
     * Get the instanceType property: The class type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the fabricDiscoveryMachineId property: The ARM Id of discovered machine.
     * 
     * @return the fabricDiscoveryMachineId value.
     */
    public String fabricDiscoveryMachineId() {
        return this.fabricDiscoveryMachineId;
    }

    /**
     * Set the fabricDiscoveryMachineId property: The ARM Id of discovered machine.
     * 
     * @param fabricDiscoveryMachineId the fabricDiscoveryMachineId value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withFabricDiscoveryMachineId(String fabricDiscoveryMachineId) {
        this.fabricDiscoveryMachineId = fabricDiscoveryMachineId;
        return this;
    }

    /**
     * Get the disksToInclude property: The disks to include list.
     * 
     * @return the disksToInclude value.
     */
    public List<InMageRcmDiskInput> disksToInclude() {
        return this.disksToInclude;
    }

    /**
     * Set the disksToInclude property: The disks to include list.
     * 
     * @param disksToInclude the disksToInclude value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withDisksToInclude(List<InMageRcmDiskInput> disksToInclude) {
        this.disksToInclude = disksToInclude;
        return this;
    }

    /**
     * Get the disksDefault property: The default disk input.
     * 
     * @return the disksDefault value.
     */
    public InMageRcmDisksDefaultInput disksDefault() {
        return this.disksDefault;
    }

    /**
     * Set the disksDefault property: The default disk input.
     * 
     * @param disksDefault the disksDefault value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withDisksDefault(InMageRcmDisksDefaultInput disksDefault) {
        this.disksDefault = disksDefault;
        return this;
    }

    /**
     * Get the targetResourceGroupId property: The target resource group ARM Id.
     * 
     * @return the targetResourceGroupId value.
     */
    public String targetResourceGroupId() {
        return this.targetResourceGroupId;
    }

    /**
     * Set the targetResourceGroupId property: The target resource group ARM Id.
     * 
     * @param targetResourceGroupId the targetResourceGroupId value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withTargetResourceGroupId(String targetResourceGroupId) {
        this.targetResourceGroupId = targetResourceGroupId;
        return this;
    }

    /**
     * Get the targetNetworkId property: The selected target network ARM Id.
     * 
     * @return the targetNetworkId value.
     */
    public String targetNetworkId() {
        return this.targetNetworkId;
    }

    /**
     * Set the targetNetworkId property: The selected target network ARM Id.
     * 
     * @param targetNetworkId the targetNetworkId value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withTargetNetworkId(String targetNetworkId) {
        this.targetNetworkId = targetNetworkId;
        return this;
    }

    /**
     * Get the testNetworkId property: The selected test network ARM Id.
     * 
     * @return the testNetworkId value.
     */
    public String testNetworkId() {
        return this.testNetworkId;
    }

    /**
     * Set the testNetworkId property: The selected test network ARM Id.
     * 
     * @param testNetworkId the testNetworkId value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withTestNetworkId(String testNetworkId) {
        this.testNetworkId = testNetworkId;
        return this;
    }

    /**
     * Get the targetSubnetName property: The selected target subnet name.
     * 
     * @return the targetSubnetName value.
     */
    public String targetSubnetName() {
        return this.targetSubnetName;
    }

    /**
     * Set the targetSubnetName property: The selected target subnet name.
     * 
     * @param targetSubnetName the targetSubnetName value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withTargetSubnetName(String targetSubnetName) {
        this.targetSubnetName = targetSubnetName;
        return this;
    }

    /**
     * Get the testSubnetName property: The selected test subnet name.
     * 
     * @return the testSubnetName value.
     */
    public String testSubnetName() {
        return this.testSubnetName;
    }

    /**
     * Set the testSubnetName property: The selected test subnet name.
     * 
     * @param testSubnetName the testSubnetName value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withTestSubnetName(String testSubnetName) {
        this.testSubnetName = testSubnetName;
        return this;
    }

    /**
     * Get the targetVmName property: The target VM name.
     * 
     * @return the targetVmName value.
     */
    public String targetVmName() {
        return this.targetVmName;
    }

    /**
     * Set the targetVmName property: The target VM name.
     * 
     * @param targetVmName the targetVmName value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withTargetVmName(String targetVmName) {
        this.targetVmName = targetVmName;
        return this;
    }

    /**
     * Get the targetVmSize property: The target VM size.
     * 
     * @return the targetVmSize value.
     */
    public String targetVmSize() {
        return this.targetVmSize;
    }

    /**
     * Set the targetVmSize property: The target VM size.
     * 
     * @param targetVmSize the targetVmSize value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withTargetVmSize(String targetVmSize) {
        this.targetVmSize = targetVmSize;
        return this;
    }

    /**
     * Get the licenseType property: The license type.
     * 
     * @return the licenseType value.
     */
    public LicenseType licenseType() {
        return this.licenseType;
    }

    /**
     * Set the licenseType property: The license type.
     * 
     * @param licenseType the licenseType value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withLicenseType(LicenseType licenseType) {
        this.licenseType = licenseType;
        return this;
    }

    /**
     * Get the targetAvailabilitySetId property: The target availability set ARM Id.
     * 
     * @return the targetAvailabilitySetId value.
     */
    public String targetAvailabilitySetId() {
        return this.targetAvailabilitySetId;
    }

    /**
     * Set the targetAvailabilitySetId property: The target availability set ARM Id.
     * 
     * @param targetAvailabilitySetId the targetAvailabilitySetId value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withTargetAvailabilitySetId(String targetAvailabilitySetId) {
        this.targetAvailabilitySetId = targetAvailabilitySetId;
        return this;
    }

    /**
     * Get the targetAvailabilityZone property: The target availability zone.
     * 
     * @return the targetAvailabilityZone value.
     */
    public String targetAvailabilityZone() {
        return this.targetAvailabilityZone;
    }

    /**
     * Set the targetAvailabilityZone property: The target availability zone.
     * 
     * @param targetAvailabilityZone the targetAvailabilityZone value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withTargetAvailabilityZone(String targetAvailabilityZone) {
        this.targetAvailabilityZone = targetAvailabilityZone;
        return this;
    }

    /**
     * Get the targetProximityPlacementGroupId property: The target proximity placement group Id.
     * 
     * @return the targetProximityPlacementGroupId value.
     */
    public String targetProximityPlacementGroupId() {
        return this.targetProximityPlacementGroupId;
    }

    /**
     * Set the targetProximityPlacementGroupId property: The target proximity placement group Id.
     * 
     * @param targetProximityPlacementGroupId the targetProximityPlacementGroupId value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withTargetProximityPlacementGroupId(String targetProximityPlacementGroupId) {
        this.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
        return this;
    }

    /**
     * Get the targetBootDiagnosticsStorageAccountId property: The target boot diagnostics storage account ARM Id.
     * 
     * @return the targetBootDiagnosticsStorageAccountId value.
     */
    public String targetBootDiagnosticsStorageAccountId() {
        return this.targetBootDiagnosticsStorageAccountId;
    }

    /**
     * Set the targetBootDiagnosticsStorageAccountId property: The target boot diagnostics storage account ARM Id.
     * 
     * @param targetBootDiagnosticsStorageAccountId the targetBootDiagnosticsStorageAccountId value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput
        withTargetBootDiagnosticsStorageAccountId(String targetBootDiagnosticsStorageAccountId) {
        this.targetBootDiagnosticsStorageAccountId = targetBootDiagnosticsStorageAccountId;
        return this;
    }

    /**
     * Get the runAsAccountId property: The run-as account Id.
     * 
     * @return the runAsAccountId value.
     */
    public String runAsAccountId() {
        return this.runAsAccountId;
    }

    /**
     * Set the runAsAccountId property: The run-as account Id.
     * 
     * @param runAsAccountId the runAsAccountId value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withRunAsAccountId(String runAsAccountId) {
        this.runAsAccountId = runAsAccountId;
        return this;
    }

    /**
     * Get the processServerId property: The process server Id.
     * 
     * @return the processServerId value.
     */
    public String processServerId() {
        return this.processServerId;
    }

    /**
     * Set the processServerId property: The process server Id.
     * 
     * @param processServerId the processServerId value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withProcessServerId(String processServerId) {
        this.processServerId = processServerId;
        return this;
    }

    /**
     * Get the multiVmGroupName property: The multi VM group name.
     * 
     * @return the multiVmGroupName value.
     */
    public String multiVmGroupName() {
        return this.multiVmGroupName;
    }

    /**
     * Set the multiVmGroupName property: The multi VM group name.
     * 
     * @param multiVmGroupName the multiVmGroupName value to set.
     * @return the InMageRcmEnableProtectionInput object itself.
     */
    public InMageRcmEnableProtectionInput withMultiVmGroupName(String multiVmGroupName) {
        this.multiVmGroupName = multiVmGroupName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (fabricDiscoveryMachineId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property fabricDiscoveryMachineId in model InMageRcmEnableProtectionInput"));
        }
        if (disksToInclude() != null) {
            disksToInclude().forEach(e -> e.validate());
        }
        if (disksDefault() != null) {
            disksDefault().validate();
        }
        if (targetResourceGroupId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetResourceGroupId in model InMageRcmEnableProtectionInput"));
        }
        if (processServerId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property processServerId in model InMageRcmEnableProtectionInput"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(InMageRcmEnableProtectionInput.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("fabricDiscoveryMachineId", this.fabricDiscoveryMachineId);
        jsonWriter.writeStringField("targetResourceGroupId", this.targetResourceGroupId);
        jsonWriter.writeStringField("processServerId", this.processServerId);
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeArrayField("disksToInclude", this.disksToInclude,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("disksDefault", this.disksDefault);
        jsonWriter.writeStringField("targetNetworkId", this.targetNetworkId);
        jsonWriter.writeStringField("testNetworkId", this.testNetworkId);
        jsonWriter.writeStringField("targetSubnetName", this.targetSubnetName);
        jsonWriter.writeStringField("testSubnetName", this.testSubnetName);
        jsonWriter.writeStringField("targetVmName", this.targetVmName);
        jsonWriter.writeStringField("targetVmSize", this.targetVmSize);
        jsonWriter.writeStringField("licenseType", this.licenseType == null ? null : this.licenseType.toString());
        jsonWriter.writeStringField("targetAvailabilitySetId", this.targetAvailabilitySetId);
        jsonWriter.writeStringField("targetAvailabilityZone", this.targetAvailabilityZone);
        jsonWriter.writeStringField("targetProximityPlacementGroupId", this.targetProximityPlacementGroupId);
        jsonWriter.writeStringField("targetBootDiagnosticsStorageAccountId",
            this.targetBootDiagnosticsStorageAccountId);
        jsonWriter.writeStringField("runAsAccountId", this.runAsAccountId);
        jsonWriter.writeStringField("multiVmGroupName", this.multiVmGroupName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InMageRcmEnableProtectionInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InMageRcmEnableProtectionInput if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the InMageRcmEnableProtectionInput.
     */
    public static InMageRcmEnableProtectionInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InMageRcmEnableProtectionInput deserializedInMageRcmEnableProtectionInput
                = new InMageRcmEnableProtectionInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("fabricDiscoveryMachineId".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.fabricDiscoveryMachineId = reader.getString();
                } else if ("targetResourceGroupId".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.targetResourceGroupId = reader.getString();
                } else if ("processServerId".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.processServerId = reader.getString();
                } else if ("instanceType".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.instanceType = reader.getString();
                } else if ("disksToInclude".equals(fieldName)) {
                    List<InMageRcmDiskInput> disksToInclude
                        = reader.readArray(reader1 -> InMageRcmDiskInput.fromJson(reader1));
                    deserializedInMageRcmEnableProtectionInput.disksToInclude = disksToInclude;
                } else if ("disksDefault".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.disksDefault
                        = InMageRcmDisksDefaultInput.fromJson(reader);
                } else if ("targetNetworkId".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.targetNetworkId = reader.getString();
                } else if ("testNetworkId".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.testNetworkId = reader.getString();
                } else if ("targetSubnetName".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.targetSubnetName = reader.getString();
                } else if ("testSubnetName".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.testSubnetName = reader.getString();
                } else if ("targetVmName".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.targetVmName = reader.getString();
                } else if ("targetVmSize".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.targetVmSize = reader.getString();
                } else if ("licenseType".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.licenseType = LicenseType.fromString(reader.getString());
                } else if ("targetAvailabilitySetId".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.targetAvailabilitySetId = reader.getString();
                } else if ("targetAvailabilityZone".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.targetAvailabilityZone = reader.getString();
                } else if ("targetProximityPlacementGroupId".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.targetProximityPlacementGroupId = reader.getString();
                } else if ("targetBootDiagnosticsStorageAccountId".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.targetBootDiagnosticsStorageAccountId
                        = reader.getString();
                } else if ("runAsAccountId".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.runAsAccountId = reader.getString();
                } else if ("multiVmGroupName".equals(fieldName)) {
                    deserializedInMageRcmEnableProtectionInput.multiVmGroupName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInMageRcmEnableProtectionInput;
        });
    }
}
