// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Recovery point properties.
 */
@Fluent
public final class RecoveryPointProperties implements JsonSerializable<RecoveryPointProperties> {
    /*
     * The recovery point time.
     */
    private OffsetDateTime recoveryPointTime;

    /*
     * The recovery point type: ApplicationConsistent, CrashConsistent.
     */
    private String recoveryPointType;

    /*
     * The provider specific details for the recovery point.
     */
    private ProviderSpecificRecoveryPointDetails providerSpecificDetails;

    /**
     * Creates an instance of RecoveryPointProperties class.
     */
    public RecoveryPointProperties() {
    }

    /**
     * Get the recoveryPointTime property: The recovery point time.
     * 
     * @return the recoveryPointTime value.
     */
    public OffsetDateTime recoveryPointTime() {
        return this.recoveryPointTime;
    }

    /**
     * Set the recoveryPointTime property: The recovery point time.
     * 
     * @param recoveryPointTime the recoveryPointTime value to set.
     * @return the RecoveryPointProperties object itself.
     */
    public RecoveryPointProperties withRecoveryPointTime(OffsetDateTime recoveryPointTime) {
        this.recoveryPointTime = recoveryPointTime;
        return this;
    }

    /**
     * Get the recoveryPointType property: The recovery point type: ApplicationConsistent, CrashConsistent.
     * 
     * @return the recoveryPointType value.
     */
    public String recoveryPointType() {
        return this.recoveryPointType;
    }

    /**
     * Set the recoveryPointType property: The recovery point type: ApplicationConsistent, CrashConsistent.
     * 
     * @param recoveryPointType the recoveryPointType value to set.
     * @return the RecoveryPointProperties object itself.
     */
    public RecoveryPointProperties withRecoveryPointType(String recoveryPointType) {
        this.recoveryPointType = recoveryPointType;
        return this;
    }

    /**
     * Get the providerSpecificDetails property: The provider specific details for the recovery point.
     * 
     * @return the providerSpecificDetails value.
     */
    public ProviderSpecificRecoveryPointDetails providerSpecificDetails() {
        return this.providerSpecificDetails;
    }

    /**
     * Set the providerSpecificDetails property: The provider specific details for the recovery point.
     * 
     * @param providerSpecificDetails the providerSpecificDetails value to set.
     * @return the RecoveryPointProperties object itself.
     */
    public RecoveryPointProperties
        withProviderSpecificDetails(ProviderSpecificRecoveryPointDetails providerSpecificDetails) {
        this.providerSpecificDetails = providerSpecificDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (providerSpecificDetails() != null) {
            providerSpecificDetails().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("recoveryPointTime",
            this.recoveryPointTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.recoveryPointTime));
        jsonWriter.writeStringField("recoveryPointType", this.recoveryPointType);
        jsonWriter.writeJsonField("providerSpecificDetails", this.providerSpecificDetails);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RecoveryPointProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RecoveryPointProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RecoveryPointProperties.
     */
    public static RecoveryPointProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RecoveryPointProperties deserializedRecoveryPointProperties = new RecoveryPointProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("recoveryPointTime".equals(fieldName)) {
                    deserializedRecoveryPointProperties.recoveryPointTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("recoveryPointType".equals(fieldName)) {
                    deserializedRecoveryPointProperties.recoveryPointType = reader.getString();
                } else if ("providerSpecificDetails".equals(fieldName)) {
                    deserializedRecoveryPointProperties.providerSpecificDetails
                        = ProviderSpecificRecoveryPointDetails.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRecoveryPointProperties;
        });
    }
}
