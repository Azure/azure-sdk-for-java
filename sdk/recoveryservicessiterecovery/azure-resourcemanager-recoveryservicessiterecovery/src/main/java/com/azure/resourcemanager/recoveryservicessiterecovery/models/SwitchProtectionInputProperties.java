// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Switch protection input properties.
 */
@Fluent
public final class SwitchProtectionInputProperties implements JsonSerializable<SwitchProtectionInputProperties> {
    /*
     * The unique replication protected item name.
     */
    private String replicationProtectedItemName;

    /*
     * Provider specific switch protection input.
     */
    private SwitchProtectionProviderSpecificInput providerSpecificDetails;

    /**
     * Creates an instance of SwitchProtectionInputProperties class.
     */
    public SwitchProtectionInputProperties() {
    }

    /**
     * Get the replicationProtectedItemName property: The unique replication protected item name.
     * 
     * @return the replicationProtectedItemName value.
     */
    public String replicationProtectedItemName() {
        return this.replicationProtectedItemName;
    }

    /**
     * Set the replicationProtectedItemName property: The unique replication protected item name.
     * 
     * @param replicationProtectedItemName the replicationProtectedItemName value to set.
     * @return the SwitchProtectionInputProperties object itself.
     */
    public SwitchProtectionInputProperties withReplicationProtectedItemName(String replicationProtectedItemName) {
        this.replicationProtectedItemName = replicationProtectedItemName;
        return this;
    }

    /**
     * Get the providerSpecificDetails property: Provider specific switch protection input.
     * 
     * @return the providerSpecificDetails value.
     */
    public SwitchProtectionProviderSpecificInput providerSpecificDetails() {
        return this.providerSpecificDetails;
    }

    /**
     * Set the providerSpecificDetails property: Provider specific switch protection input.
     * 
     * @param providerSpecificDetails the providerSpecificDetails value to set.
     * @return the SwitchProtectionInputProperties object itself.
     */
    public SwitchProtectionInputProperties
        withProviderSpecificDetails(SwitchProtectionProviderSpecificInput providerSpecificDetails) {
        this.providerSpecificDetails = providerSpecificDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (providerSpecificDetails() != null) {
            providerSpecificDetails().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("replicationProtectedItemName", this.replicationProtectedItemName);
        jsonWriter.writeJsonField("providerSpecificDetails", this.providerSpecificDetails);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SwitchProtectionInputProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SwitchProtectionInputProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SwitchProtectionInputProperties.
     */
    public static SwitchProtectionInputProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SwitchProtectionInputProperties deserializedSwitchProtectionInputProperties
                = new SwitchProtectionInputProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("replicationProtectedItemName".equals(fieldName)) {
                    deserializedSwitchProtectionInputProperties.replicationProtectedItemName = reader.getString();
                } else if ("providerSpecificDetails".equals(fieldName)) {
                    deserializedSwitchProtectionInputProperties.providerSpecificDetails
                        = SwitchProtectionProviderSpecificInput.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSwitchProtectionInputProperties;
        });
    }
}
