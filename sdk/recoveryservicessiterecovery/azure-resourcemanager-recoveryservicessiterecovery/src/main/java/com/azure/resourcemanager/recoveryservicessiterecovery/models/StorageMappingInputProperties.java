// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Storage mapping input properties.
 */
@Fluent
public final class StorageMappingInputProperties implements JsonSerializable<StorageMappingInputProperties> {
    /*
     * The ID of the storage object.
     */
    private String targetStorageClassificationId;

    /**
     * Creates an instance of StorageMappingInputProperties class.
     */
    public StorageMappingInputProperties() {
    }

    /**
     * Get the targetStorageClassificationId property: The ID of the storage object.
     * 
     * @return the targetStorageClassificationId value.
     */
    public String targetStorageClassificationId() {
        return this.targetStorageClassificationId;
    }

    /**
     * Set the targetStorageClassificationId property: The ID of the storage object.
     * 
     * @param targetStorageClassificationId the targetStorageClassificationId value to set.
     * @return the StorageMappingInputProperties object itself.
     */
    public StorageMappingInputProperties withTargetStorageClassificationId(String targetStorageClassificationId) {
        this.targetStorageClassificationId = targetStorageClassificationId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("targetStorageClassificationId", this.targetStorageClassificationId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StorageMappingInputProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StorageMappingInputProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the StorageMappingInputProperties.
     */
    public static StorageMappingInputProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StorageMappingInputProperties deserializedStorageMappingInputProperties
                = new StorageMappingInputProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("targetStorageClassificationId".equals(fieldName)) {
                    deserializedStorageMappingInputProperties.targetStorageClassificationId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStorageMappingInputProperties;
        });
    }
}
