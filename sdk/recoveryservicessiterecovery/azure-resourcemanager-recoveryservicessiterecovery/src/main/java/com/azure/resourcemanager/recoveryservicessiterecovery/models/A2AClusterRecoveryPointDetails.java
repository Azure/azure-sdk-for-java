// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * A2A provider specific cluster recovery point details.
 */
@Fluent
public final class A2AClusterRecoveryPointDetails extends ClusterProviderSpecificRecoveryPointDetails {
    /*
     * Gets the provider type.
     */
    private String instanceType = "A2A";

    /*
     * A value indicating whether the recovery point is multi VM consistent.
     */
    private RecoveryPointSyncType recoveryPointSyncType;

    /*
     * The list of nodes representing the cluster.
     */
    private List<String> nodes;

    /**
     * Creates an instance of A2AClusterRecoveryPointDetails class.
     */
    public A2AClusterRecoveryPointDetails() {
    }

    /**
     * Get the instanceType property: Gets the provider type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the recoveryPointSyncType property: A value indicating whether the recovery point is multi VM consistent.
     * 
     * @return the recoveryPointSyncType value.
     */
    public RecoveryPointSyncType recoveryPointSyncType() {
        return this.recoveryPointSyncType;
    }

    /**
     * Set the recoveryPointSyncType property: A value indicating whether the recovery point is multi VM consistent.
     * 
     * @param recoveryPointSyncType the recoveryPointSyncType value to set.
     * @return the A2AClusterRecoveryPointDetails object itself.
     */
    public A2AClusterRecoveryPointDetails withRecoveryPointSyncType(RecoveryPointSyncType recoveryPointSyncType) {
        this.recoveryPointSyncType = recoveryPointSyncType;
        return this;
    }

    /**
     * Get the nodes property: The list of nodes representing the cluster.
     * 
     * @return the nodes value.
     */
    public List<String> nodes() {
        return this.nodes;
    }

    /**
     * Set the nodes property: The list of nodes representing the cluster.
     * 
     * @param nodes the nodes value to set.
     * @return the A2AClusterRecoveryPointDetails object itself.
     */
    public A2AClusterRecoveryPointDetails withNodes(List<String> nodes) {
        this.nodes = nodes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("recoveryPointSyncType",
            this.recoveryPointSyncType == null ? null : this.recoveryPointSyncType.toString());
        jsonWriter.writeArrayField("nodes", this.nodes, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of A2AClusterRecoveryPointDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of A2AClusterRecoveryPointDetails if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the A2AClusterRecoveryPointDetails.
     */
    public static A2AClusterRecoveryPointDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            A2AClusterRecoveryPointDetails deserializedA2AClusterRecoveryPointDetails
                = new A2AClusterRecoveryPointDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedA2AClusterRecoveryPointDetails.instanceType = reader.getString();
                } else if ("recoveryPointSyncType".equals(fieldName)) {
                    deserializedA2AClusterRecoveryPointDetails.recoveryPointSyncType
                        = RecoveryPointSyncType.fromString(reader.getString());
                } else if ("nodes".equals(fieldName)) {
                    List<String> nodes = reader.readArray(reader1 -> reader1.getString());
                    deserializedA2AClusterRecoveryPointDetails.nodes = nodes;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedA2AClusterRecoveryPointDetails;
        });
    }
}
