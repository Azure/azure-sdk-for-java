// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Subnets of the network. */
@Fluent
public final class Subnet {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(Subnet.class);

    /*
     * The subnet name.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The subnet friendly name.
     */
    @JsonProperty(value = "friendlyName")
    private String friendlyName;

    /*
     * The list of addresses for the subnet.
     */
    @JsonProperty(value = "addressList")
    private List<String> addressList;

    /**
     * Get the name property: The subnet name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The subnet name.
     *
     * @param name the name value to set.
     * @return the Subnet object itself.
     */
    public Subnet withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the friendlyName property: The subnet friendly name.
     *
     * @return the friendlyName value.
     */
    public String friendlyName() {
        return this.friendlyName;
    }

    /**
     * Set the friendlyName property: The subnet friendly name.
     *
     * @param friendlyName the friendlyName value to set.
     * @return the Subnet object itself.
     */
    public Subnet withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }

    /**
     * Get the addressList property: The list of addresses for the subnet.
     *
     * @return the addressList value.
     */
    public List<String> addressList() {
        return this.addressList;
    }

    /**
     * Set the addressList property: The list of addresses for the subnet.
     *
     * @param addressList the addressList value to set.
     * @return the Subnet object itself.
     */
    public Subnet withAddressList(List<String> addressList) {
        this.addressList = addressList;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
