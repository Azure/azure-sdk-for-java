// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.AlertInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ConfigureAlertRequest;

/** An instance of this class provides access to all the operations defined in ReplicationAlertSettingsClient. */
public interface ReplicationAlertSettingsClient {
    /**
     * Gets the list of email notification(alert) configurations for the vault.
     *
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of email notification(alert) configurations for the vault.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AlertInner> list(String resourceName, String resourceGroupName);

    /**
     * Gets the list of email notification(alert) configurations for the vault.
     *
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of email notification(alert) configurations for the vault.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AlertInner> list(String resourceName, String resourceGroupName, Context context);

    /**
     * Gets the details of the specified email notification(alert) configuration.
     *
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param alertSettingName The name of the email notification configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the specified email notification(alert) configuration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AlertInner get(String resourceName, String resourceGroupName, String alertSettingName);

    /**
     * Gets the details of the specified email notification(alert) configuration.
     *
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param alertSettingName The name of the email notification configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the specified email notification(alert) configuration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AlertInner> getWithResponse(
        String resourceName, String resourceGroupName, String alertSettingName, Context context);

    /**
     * Create or update an email notification(alert) configuration.
     *
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param alertSettingName The name of the email notification(alert) configuration.
     * @param request The input to configure the email notification(alert).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return implements the Alert class.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AlertInner create(
        String resourceName, String resourceGroupName, String alertSettingName, ConfigureAlertRequest request);

    /**
     * Create or update an email notification(alert) configuration.
     *
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param alertSettingName The name of the email notification(alert) configuration.
     * @param request The input to configure the email notification(alert).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return implements the Alert class.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AlertInner> createWithResponse(
        String resourceName,
        String resourceGroupName,
        String alertSettingName,
        ConfigureAlertRequest request,
        Context context);
}
