// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Create protection intent input properties. */
@Fluent
public final class CreateProtectionIntentProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CreateProtectionIntentProperties.class);

    /*
     * The ReplicationProviderInput. For A2A provider, it will be
     * A2ACreateProtectionIntentInput object. For other providers, it can be
     * null.
     */
    @JsonProperty(value = "providerSpecificDetails")
    private CreateProtectionIntentProviderSpecificDetails providerSpecificDetails;

    /**
     * Get the providerSpecificDetails property: The ReplicationProviderInput. For A2A provider, it will be
     * A2ACreateProtectionIntentInput object. For other providers, it can be null.
     *
     * @return the providerSpecificDetails value.
     */
    public CreateProtectionIntentProviderSpecificDetails providerSpecificDetails() {
        return this.providerSpecificDetails;
    }

    /**
     * Set the providerSpecificDetails property: The ReplicationProviderInput. For A2A provider, it will be
     * A2ACreateProtectionIntentInput object. For other providers, it can be null.
     *
     * @param providerSpecificDetails the providerSpecificDetails value to set.
     * @return the CreateProtectionIntentProperties object itself.
     */
    public CreateProtectionIntentProperties withProviderSpecificDetails(
        CreateProtectionIntentProviderSpecificDetails providerSpecificDetails) {
        this.providerSpecificDetails = providerSpecificDetails;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (providerSpecificDetails() != null) {
            providerSpecificDetails().validate();
        }
    }
}
