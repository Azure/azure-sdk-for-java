// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PossibleOperationsDirections;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProviderSpecificFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanTestFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanTestFailoverInputProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RecoveryPlanTestFailoverInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RecoveryPlanTestFailoverInput model = BinaryData.fromString(
            "{\"properties\":{\"failoverDirection\":\"RecoveryToPrimary\",\"networkType\":\"eshoygzcb\",\"networkId\":\"qxkfaoytehqp\",\"providerSpecificDetails\":[{\"instanceType\":\"RecoveryPlanProviderSpecificFailoverInput\"},{\"instanceType\":\"RecoveryPlanProviderSpecificFailoverInput\"}]}}")
            .toObject(RecoveryPlanTestFailoverInput.class);
        Assertions.assertEquals(PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
            model.properties().failoverDirection());
        Assertions.assertEquals("eshoygzcb", model.properties().networkType());
        Assertions.assertEquals("qxkfaoytehqp", model.properties().networkId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RecoveryPlanTestFailoverInput model
            = new RecoveryPlanTestFailoverInput().withProperties(new RecoveryPlanTestFailoverInputProperties()
                .withFailoverDirection(PossibleOperationsDirections.RECOVERY_TO_PRIMARY).withNetworkType("eshoygzcb")
                .withNetworkId("qxkfaoytehqp").withProviderSpecificDetails(Arrays.asList(
                    new RecoveryPlanProviderSpecificFailoverInput(), new RecoveryPlanProviderSpecificFailoverInput())));
        model = BinaryData.fromObject(model).toObject(RecoveryPlanTestFailoverInput.class);
        Assertions.assertEquals(PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
            model.properties().failoverDirection());
        Assertions.assertEquals("eshoygzcb", model.properties().networkType());
        Assertions.assertEquals("qxkfaoytehqp", model.properties().networkId());
    }
}
