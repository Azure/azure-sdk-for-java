// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.VCenterInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VCenterCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VCenterProperties;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class VCenterCollectionTests {
    @Test
    public void testDeserialize() {
        VCenterCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"friendlyName\":\"wlduyc\",\"internalId\":\"zhyrmewipmve\",\"lastHeartbeat\":\"2021-08-31T14:00:37Z\",\"discoveryStatus\":\"kuqgsjjxundxgket\",\"processServerId\":\"hhzjhfj\",\"ipAddress\":\"vvmu\",\"infrastructureId\":\"pmuneqsx\",\"port\":\"hfbuzjyihsasbhud\",\"runAsAccountId\":\"ohyuemslynsq\",\"fabricArmResourceName\":\"pfoobr\",\"healthErrors\":[]},\"location\":\"y\",\"id\":\"sjnygqdnfwqzdzgt\",\"name\":\"la\",\"type\":\"hnfhqlyvijouwi\"}],\"nextLink\":\"xoyzunbix\"}")
                .toObject(VCenterCollection.class);
        Assertions.assertEquals("wlduyc", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("zhyrmewipmve", model.value().get(0).properties().internalId());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-08-31T14:00:37Z"), model.value().get(0).properties().lastHeartbeat());
        Assertions.assertEquals("kuqgsjjxundxgket", model.value().get(0).properties().discoveryStatus());
        Assertions.assertEquals("hhzjhfj", model.value().get(0).properties().processServerId());
        Assertions.assertEquals("vvmu", model.value().get(0).properties().ipAddress());
        Assertions.assertEquals("pmuneqsx", model.value().get(0).properties().infrastructureId());
        Assertions.assertEquals("hfbuzjyihsasbhud", model.value().get(0).properties().port());
        Assertions.assertEquals("ohyuemslynsq", model.value().get(0).properties().runAsAccountId());
        Assertions.assertEquals("pfoobr", model.value().get(0).properties().fabricArmResourceName());
        Assertions.assertEquals("y", model.value().get(0).location());
        Assertions.assertEquals("xoyzunbix", model.nextLink());
    }

    @Test
    public void testSerialize() {
        VCenterCollection model =
            new VCenterCollection()
                .withValue(
                    Arrays
                        .asList(
                            new VCenterInner()
                                .withProperties(
                                    new VCenterProperties()
                                        .withFriendlyName("wlduyc")
                                        .withInternalId("zhyrmewipmve")
                                        .withLastHeartbeat(OffsetDateTime.parse("2021-08-31T14:00:37Z"))
                                        .withDiscoveryStatus("kuqgsjjxundxgket")
                                        .withProcessServerId("hhzjhfj")
                                        .withIpAddress("vvmu")
                                        .withInfrastructureId("pmuneqsx")
                                        .withPort("hfbuzjyihsasbhud")
                                        .withRunAsAccountId("ohyuemslynsq")
                                        .withFabricArmResourceName("pfoobr")
                                        .withHealthErrors(Arrays.asList()))
                                .withLocation("y")))
                .withNextLink("xoyzunbix");
        model = BinaryData.fromObject(model).toObject(VCenterCollection.class);
        Assertions.assertEquals("wlduyc", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("zhyrmewipmve", model.value().get(0).properties().internalId());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-08-31T14:00:37Z"), model.value().get(0).properties().lastHeartbeat());
        Assertions.assertEquals("kuqgsjjxundxgket", model.value().get(0).properties().discoveryStatus());
        Assertions.assertEquals("hhzjhfj", model.value().get(0).properties().processServerId());
        Assertions.assertEquals("vvmu", model.value().get(0).properties().ipAddress());
        Assertions.assertEquals("pmuneqsx", model.value().get(0).properties().infrastructureId());
        Assertions.assertEquals("hfbuzjyihsasbhud", model.value().get(0).properties().port());
        Assertions.assertEquals("ohyuemslynsq", model.value().get(0).properties().runAsAccountId());
        Assertions.assertEquals("pfoobr", model.value().get(0).properties().fabricArmResourceName());
        Assertions.assertEquals("y", model.value().get(0).location());
        Assertions.assertEquals("xoyzunbix", model.nextLink());
    }
}
