// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.CurrentScenarioDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PossibleOperationsDirections;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanAction;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanActionDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanGroup;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanGroupType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProtectedItem;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProviderSpecificDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationProtectedItemOperation;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RecoveryPlanPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RecoveryPlanProperties model =
            BinaryData
                .fromString(
                    "{\"friendlyName\":\"rnnqb\",\"primaryFabricId\":\"bpizxqltgr\",\"primaryFabricFriendlyName\":\"gypxrxvbfihwuhvc\",\"recoveryFabricId\":\"fsrb\",\"recoveryFabricFriendlyName\":\"blml\",\"failoverDeploymentModel\":\"wxihs\",\"replicationProviders\":[\"wqagnepzwa\",\"lsbs\",\"qqqagwwrxaomzi\"],\"allowedOperations\":[\"rrczezkhhltnj\",\"dhqoawj\"],\"lastPlannedFailoverTime\":\"2021-05-12T17:36:56Z\",\"lastUnplannedFailoverTime\":\"2021-09-19T04:55:50Z\",\"lastTestFailoverTime\":\"2021-07-31T20:48:08Z\",\"currentScenario\":{\"scenarioName\":\"pcmsplbyrrueqth\",\"jobId\":\"gnmbscbbxigdhx\",\"startTime\":\"2021-10-27T05:31:04Z\"},\"currentScenarioStatus\":\"opedbwdpyqyybxub\",\"currentScenarioStatusDescription\":\"nafcbq\",\"groups\":[{\"groupType\":\"Shutdown\",\"replicationProtectedItems\":[{\"id\":\"aqacigeleohd\",\"virtualMachineId\":\"qvwzkjopwbeonrl\"}],\"startGroupActions\":[{\"actionName\":\"dqybx\",\"failoverTypes\":[\"TestFailoverCleanup\",\"PlannedFailover\",\"PlannedFailover\",\"RepairReplication\"],\"failoverDirections\":[\"RecoveryToPrimary\",\"RecoveryToPrimary\",\"RecoveryToPrimary\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"qfyiaseqchkr\",\"failoverTypes\":[\"CompleteMigration\",\"UnplannedFailover\",\"UnplannedFailover\"],\"failoverDirections\":[\"RecoveryToPrimary\",\"PrimaryToRecovery\",\"PrimaryToRecovery\",\"PrimaryToRecovery\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"uem\",\"failoverTypes\":[\"FinalizeFailback\",\"CancelFailover\",\"Commit\",\"TestFailoverCleanup\"],\"failoverDirections\":[\"PrimaryToRecovery\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"mnrxxbsojkl\",\"failoverTypes\":[\"CompleteMigration\",\"Failback\",\"TestFailoverCleanup\"],\"failoverDirections\":[\"RecoveryToPrimary\",\"PrimaryToRecovery\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"sprqsgnzxojpslsv\",\"failoverTypes\":[\"ReverseReplicate\"],\"failoverDirections\":[\"PrimaryToRecovery\",\"RecoveryToPrimary\",\"PrimaryToRecovery\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"iqwoyxqvapcoh\",\"failoverTypes\":[\"TestFailoverCleanup\",\"FinalizeFailback\",\"ReverseReplicate\"],\"failoverDirections\":[\"PrimaryToRecovery\",\"PrimaryToRecovery\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]}],\"providerSpecificDetails\":[{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"},{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"},{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"},{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"}]}")
                .toObject(RecoveryPlanProperties.class);
        Assertions.assertEquals("rnnqb", model.friendlyName());
        Assertions.assertEquals("bpizxqltgr", model.primaryFabricId());
        Assertions.assertEquals("gypxrxvbfihwuhvc", model.primaryFabricFriendlyName());
        Assertions.assertEquals("fsrb", model.recoveryFabricId());
        Assertions.assertEquals("blml", model.recoveryFabricFriendlyName());
        Assertions.assertEquals("wxihs", model.failoverDeploymentModel());
        Assertions.assertEquals("wqagnepzwa", model.replicationProviders().get(0));
        Assertions.assertEquals("rrczezkhhltnj", model.allowedOperations().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-12T17:36:56Z"), model.lastPlannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-19T04:55:50Z"), model.lastUnplannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-31T20:48:08Z"), model.lastTestFailoverTime());
        Assertions.assertEquals("pcmsplbyrrueqth", model.currentScenario().scenarioName());
        Assertions.assertEquals("gnmbscbbxigdhx", model.currentScenario().jobId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-27T05:31:04Z"), model.currentScenario().startTime());
        Assertions.assertEquals("opedbwdpyqyybxub", model.currentScenarioStatus());
        Assertions.assertEquals("nafcbq", model.currentScenarioStatusDescription());
        Assertions.assertEquals(RecoveryPlanGroupType.SHUTDOWN, model.groups().get(0).groupType());
        Assertions.assertEquals("aqacigeleohd", model.groups().get(0).replicationProtectedItems().get(0).id());
        Assertions
            .assertEquals(
                "qvwzkjopwbeonrl", model.groups().get(0).replicationProtectedItems().get(0).virtualMachineId());
        Assertions.assertEquals("dqybx", model.groups().get(0).startGroupActions().get(0).actionName());
        Assertions
            .assertEquals(
                ReplicationProtectedItemOperation.TEST_FAILOVER_CLEANUP,
                model.groups().get(0).startGroupActions().get(0).failoverTypes().get(0));
        Assertions
            .assertEquals(
                PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                model.groups().get(0).startGroupActions().get(0).failoverDirections().get(0));
        Assertions.assertEquals("uem", model.groups().get(0).endGroupActions().get(0).actionName());
        Assertions
            .assertEquals(
                ReplicationProtectedItemOperation.FINALIZE_FAILBACK,
                model.groups().get(0).endGroupActions().get(0).failoverTypes().get(0));
        Assertions
            .assertEquals(
                PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                model.groups().get(0).endGroupActions().get(0).failoverDirections().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RecoveryPlanProperties model =
            new RecoveryPlanProperties()
                .withFriendlyName("rnnqb")
                .withPrimaryFabricId("bpizxqltgr")
                .withPrimaryFabricFriendlyName("gypxrxvbfihwuhvc")
                .withRecoveryFabricId("fsrb")
                .withRecoveryFabricFriendlyName("blml")
                .withFailoverDeploymentModel("wxihs")
                .withReplicationProviders(Arrays.asList("wqagnepzwa", "lsbs", "qqqagwwrxaomzi"))
                .withAllowedOperations(Arrays.asList("rrczezkhhltnj", "dhqoawj"))
                .withLastPlannedFailoverTime(OffsetDateTime.parse("2021-05-12T17:36:56Z"))
                .withLastUnplannedFailoverTime(OffsetDateTime.parse("2021-09-19T04:55:50Z"))
                .withLastTestFailoverTime(OffsetDateTime.parse("2021-07-31T20:48:08Z"))
                .withCurrentScenario(
                    new CurrentScenarioDetails()
                        .withScenarioName("pcmsplbyrrueqth")
                        .withJobId("gnmbscbbxigdhx")
                        .withStartTime(OffsetDateTime.parse("2021-10-27T05:31:04Z")))
                .withCurrentScenarioStatus("opedbwdpyqyybxub")
                .withCurrentScenarioStatusDescription("nafcbq")
                .withGroups(
                    Arrays
                        .asList(
                            new RecoveryPlanGroup()
                                .withGroupType(RecoveryPlanGroupType.SHUTDOWN)
                                .withReplicationProtectedItems(
                                    Arrays
                                        .asList(
                                            new RecoveryPlanProtectedItem()
                                                .withId("aqacigeleohd")
                                                .withVirtualMachineId("qvwzkjopwbeonrl")))
                                .withStartGroupActions(
                                    Arrays
                                        .asList(
                                            new RecoveryPlanAction()
                                                .withActionName("dqybx")
                                                .withFailoverTypes(
                                                    Arrays
                                                        .asList(
                                                            ReplicationProtectedItemOperation.TEST_FAILOVER_CLEANUP,
                                                            ReplicationProtectedItemOperation.PLANNED_FAILOVER,
                                                            ReplicationProtectedItemOperation.PLANNED_FAILOVER,
                                                            ReplicationProtectedItemOperation.REPAIR_REPLICATION))
                                                .withFailoverDirections(
                                                    Arrays
                                                        .asList(
                                                            PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                                                            PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                                                            PossibleOperationsDirections.RECOVERY_TO_PRIMARY))
                                                .withCustomDetails(new RecoveryPlanActionDetails()),
                                            new RecoveryPlanAction()
                                                .withActionName("qfyiaseqchkr")
                                                .withFailoverTypes(
                                                    Arrays
                                                        .asList(
                                                            ReplicationProtectedItemOperation.COMPLETE_MIGRATION,
                                                            ReplicationProtectedItemOperation.UNPLANNED_FAILOVER,
                                                            ReplicationProtectedItemOperation.UNPLANNED_FAILOVER))
                                                .withFailoverDirections(
                                                    Arrays
                                                        .asList(
                                                            PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                                                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                                                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                                                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY))
                                                .withCustomDetails(new RecoveryPlanActionDetails())))
                                .withEndGroupActions(
                                    Arrays
                                        .asList(
                                            new RecoveryPlanAction()
                                                .withActionName("uem")
                                                .withFailoverTypes(
                                                    Arrays
                                                        .asList(
                                                            ReplicationProtectedItemOperation.FINALIZE_FAILBACK,
                                                            ReplicationProtectedItemOperation.CANCEL_FAILOVER,
                                                            ReplicationProtectedItemOperation.COMMIT,
                                                            ReplicationProtectedItemOperation.TEST_FAILOVER_CLEANUP))
                                                .withFailoverDirections(
                                                    Arrays.asList(PossibleOperationsDirections.PRIMARY_TO_RECOVERY))
                                                .withCustomDetails(new RecoveryPlanActionDetails()),
                                            new RecoveryPlanAction()
                                                .withActionName("mnrxxbsojkl")
                                                .withFailoverTypes(
                                                    Arrays
                                                        .asList(
                                                            ReplicationProtectedItemOperation.COMPLETE_MIGRATION,
                                                            ReplicationProtectedItemOperation.FAILBACK,
                                                            ReplicationProtectedItemOperation.TEST_FAILOVER_CLEANUP))
                                                .withFailoverDirections(
                                                    Arrays
                                                        .asList(
                                                            PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                                                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY))
                                                .withCustomDetails(new RecoveryPlanActionDetails()),
                                            new RecoveryPlanAction()
                                                .withActionName("sprqsgnzxojpslsv")
                                                .withFailoverTypes(
                                                    Arrays.asList(ReplicationProtectedItemOperation.REVERSE_REPLICATE))
                                                .withFailoverDirections(
                                                    Arrays
                                                        .asList(
                                                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                                                            PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                                                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY))
                                                .withCustomDetails(new RecoveryPlanActionDetails()),
                                            new RecoveryPlanAction()
                                                .withActionName("iqwoyxqvapcoh")
                                                .withFailoverTypes(
                                                    Arrays
                                                        .asList(
                                                            ReplicationProtectedItemOperation.TEST_FAILOVER_CLEANUP,
                                                            ReplicationProtectedItemOperation.FINALIZE_FAILBACK,
                                                            ReplicationProtectedItemOperation.REVERSE_REPLICATE))
                                                .withFailoverDirections(
                                                    Arrays
                                                        .asList(
                                                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                                                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY))
                                                .withCustomDetails(new RecoveryPlanActionDetails())))))
                .withProviderSpecificDetails(
                    Arrays
                        .asList(
                            new RecoveryPlanProviderSpecificDetails(),
                            new RecoveryPlanProviderSpecificDetails(),
                            new RecoveryPlanProviderSpecificDetails(),
                            new RecoveryPlanProviderSpecificDetails()));
        model = BinaryData.fromObject(model).toObject(RecoveryPlanProperties.class);
        Assertions.assertEquals("rnnqb", model.friendlyName());
        Assertions.assertEquals("bpizxqltgr", model.primaryFabricId());
        Assertions.assertEquals("gypxrxvbfihwuhvc", model.primaryFabricFriendlyName());
        Assertions.assertEquals("fsrb", model.recoveryFabricId());
        Assertions.assertEquals("blml", model.recoveryFabricFriendlyName());
        Assertions.assertEquals("wxihs", model.failoverDeploymentModel());
        Assertions.assertEquals("wqagnepzwa", model.replicationProviders().get(0));
        Assertions.assertEquals("rrczezkhhltnj", model.allowedOperations().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-12T17:36:56Z"), model.lastPlannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-19T04:55:50Z"), model.lastUnplannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-31T20:48:08Z"), model.lastTestFailoverTime());
        Assertions.assertEquals("pcmsplbyrrueqth", model.currentScenario().scenarioName());
        Assertions.assertEquals("gnmbscbbxigdhx", model.currentScenario().jobId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-27T05:31:04Z"), model.currentScenario().startTime());
        Assertions.assertEquals("opedbwdpyqyybxub", model.currentScenarioStatus());
        Assertions.assertEquals("nafcbq", model.currentScenarioStatusDescription());
        Assertions.assertEquals(RecoveryPlanGroupType.SHUTDOWN, model.groups().get(0).groupType());
        Assertions.assertEquals("aqacigeleohd", model.groups().get(0).replicationProtectedItems().get(0).id());
        Assertions
            .assertEquals(
                "qvwzkjopwbeonrl", model.groups().get(0).replicationProtectedItems().get(0).virtualMachineId());
        Assertions.assertEquals("dqybx", model.groups().get(0).startGroupActions().get(0).actionName());
        Assertions
            .assertEquals(
                ReplicationProtectedItemOperation.TEST_FAILOVER_CLEANUP,
                model.groups().get(0).startGroupActions().get(0).failoverTypes().get(0));
        Assertions
            .assertEquals(
                PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                model.groups().get(0).startGroupActions().get(0).failoverDirections().get(0));
        Assertions.assertEquals("uem", model.groups().get(0).endGroupActions().get(0).actionName());
        Assertions
            .assertEquals(
                ReplicationProtectedItemOperation.FINALIZE_FAILBACK,
                model.groups().get(0).endGroupActions().get(0).failoverTypes().get(0));
        Assertions
            .assertEquals(
                PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                model.groups().get(0).endGroupActions().get(0).failoverDirections().get(0));
    }
}
