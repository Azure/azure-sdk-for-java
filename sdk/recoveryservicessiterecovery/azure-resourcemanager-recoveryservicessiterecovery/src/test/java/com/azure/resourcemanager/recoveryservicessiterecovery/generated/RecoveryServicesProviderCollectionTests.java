// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.RecoveryServicesProviderInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryServicesProviderCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryServicesProviderProperties;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RecoveryServicesProviderCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RecoveryServicesProviderCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"fabricType\":\"hdd\",\"friendlyName\":\"acegfnmntf\",\"providerVersion\":\"vm\",\"serverVersion\":\"fnczdwvvbalx\",\"providerVersionState\":\"lchpodbzevwrdn\",\"providerVersionExpiryDate\":\"2021-05-27T08:33:17Z\",\"fabricFriendlyName\":\"uvsj\",\"lastHeartBeat\":\"2021-04-11T07:57:56Z\",\"connectionStatus\":\"myst\",\"protectedItemCount\":206197210,\"allowedScenarios\":[],\"healthErrorDetails\":[],\"draIdentifier\":\"fcvlerch\",\"machineId\":\"bm\",\"machineName\":\"jbabwidf\",\"biosId\":\"sspuunnoxyhkx\"},\"location\":\"hp\",\"id\":\"hoqca\",\"name\":\"ewda\",\"type\":\"mdjvlpj\"}],\"nextLink\":\"kzbrmsgeivsiy\"}")
                .toObject(RecoveryServicesProviderCollection.class);
        Assertions.assertEquals("hdd", model.value().get(0).properties().fabricType());
        Assertions.assertEquals("acegfnmntf", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("vm", model.value().get(0).properties().providerVersion());
        Assertions.assertEquals("fnczdwvvbalx", model.value().get(0).properties().serverVersion());
        Assertions.assertEquals("lchpodbzevwrdn", model.value().get(0).properties().providerVersionState());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-05-27T08:33:17Z"),
                model.value().get(0).properties().providerVersionExpiryDate());
        Assertions.assertEquals("uvsj", model.value().get(0).properties().fabricFriendlyName());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-04-11T07:57:56Z"), model.value().get(0).properties().lastHeartBeat());
        Assertions.assertEquals("myst", model.value().get(0).properties().connectionStatus());
        Assertions.assertEquals(206197210, model.value().get(0).properties().protectedItemCount());
        Assertions.assertEquals("fcvlerch", model.value().get(0).properties().draIdentifier());
        Assertions.assertEquals("bm", model.value().get(0).properties().machineId());
        Assertions.assertEquals("jbabwidf", model.value().get(0).properties().machineName());
        Assertions.assertEquals("sspuunnoxyhkx", model.value().get(0).properties().biosId());
        Assertions.assertEquals("hp", model.value().get(0).location());
        Assertions.assertEquals("kzbrmsgeivsiy", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RecoveryServicesProviderCollection model =
            new RecoveryServicesProviderCollection()
                .withValue(
                    Arrays
                        .asList(
                            new RecoveryServicesProviderInner()
                                .withProperties(
                                    new RecoveryServicesProviderProperties()
                                        .withFabricType("hdd")
                                        .withFriendlyName("acegfnmntf")
                                        .withProviderVersion("vm")
                                        .withServerVersion("fnczdwvvbalx")
                                        .withProviderVersionState("lchpodbzevwrdn")
                                        .withProviderVersionExpiryDate(OffsetDateTime.parse("2021-05-27T08:33:17Z"))
                                        .withFabricFriendlyName("uvsj")
                                        .withLastHeartBeat(OffsetDateTime.parse("2021-04-11T07:57:56Z"))
                                        .withConnectionStatus("myst")
                                        .withProtectedItemCount(206197210)
                                        .withAllowedScenarios(Arrays.asList())
                                        .withHealthErrorDetails(Arrays.asList())
                                        .withDraIdentifier("fcvlerch")
                                        .withMachineId("bm")
                                        .withMachineName("jbabwidf")
                                        .withBiosId("sspuunnoxyhkx"))
                                .withLocation("hp")))
                .withNextLink("kzbrmsgeivsiy");
        model = BinaryData.fromObject(model).toObject(RecoveryServicesProviderCollection.class);
        Assertions.assertEquals("hdd", model.value().get(0).properties().fabricType());
        Assertions.assertEquals("acegfnmntf", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("vm", model.value().get(0).properties().providerVersion());
        Assertions.assertEquals("fnczdwvvbalx", model.value().get(0).properties().serverVersion());
        Assertions.assertEquals("lchpodbzevwrdn", model.value().get(0).properties().providerVersionState());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-05-27T08:33:17Z"),
                model.value().get(0).properties().providerVersionExpiryDate());
        Assertions.assertEquals("uvsj", model.value().get(0).properties().fabricFriendlyName());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-04-11T07:57:56Z"), model.value().get(0).properties().lastHeartBeat());
        Assertions.assertEquals("myst", model.value().get(0).properties().connectionStatus());
        Assertions.assertEquals(206197210, model.value().get(0).properties().protectedItemCount());
        Assertions.assertEquals("fcvlerch", model.value().get(0).properties().draIdentifier());
        Assertions.assertEquals("bm", model.value().get(0).properties().machineId());
        Assertions.assertEquals("jbabwidf", model.value().get(0).properties().machineName());
        Assertions.assertEquals("sspuunnoxyhkx", model.value().get(0).properties().biosId());
        Assertions.assertEquals("hp", model.value().get(0).location());
        Assertions.assertEquals("kzbrmsgeivsiy", model.nextLink());
    }
}
