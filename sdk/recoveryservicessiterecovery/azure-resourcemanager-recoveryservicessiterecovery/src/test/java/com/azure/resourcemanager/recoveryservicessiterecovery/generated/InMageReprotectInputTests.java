// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageDiskExclusionInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageDiskSignatureExclusionOptions;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageReprotectInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageVolumeExclusionOptions;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InMageReprotectInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageReprotectInput model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"InMage\",\"masterTargetId\":\"qrwyambh\",\"processServerId\":\"afebzxfkjq\",\"retentionDrive\":\"tibhlennt\",\"runAsAccountId\":\"rkp\",\"datastoreName\":\"bduxvzmlghnys\",\"diskExclusionInput\":{\"volumeOptions\":[{\"volumeLabel\":\"uukppdixqb\",\"onlyExcludeIfSingleVolume\":\"xvhhyqq\"},{\"volumeLabel\":\"at\",\"onlyExcludeIfSingleVolume\":\"rznmginmtsdixc\"}],\"diskSignatureOptions\":[{\"diskSignature\":\"bmgjymncjc\"},{\"diskSignature\":\"airwcqzoofj\"},{\"diskSignature\":\"jsvepfbhtleberp\"}]},\"profileId\":\"ljekn\",\"disksToInclude\":[\"wjjqxowkdnjrx\"]}")
                .toObject(InMageReprotectInput.class);
        Assertions.assertEquals("qrwyambh", model.masterTargetId());
        Assertions.assertEquals("afebzxfkjq", model.processServerId());
        Assertions.assertEquals("tibhlennt", model.retentionDrive());
        Assertions.assertEquals("rkp", model.runAsAccountId());
        Assertions.assertEquals("bduxvzmlghnys", model.datastoreName());
        Assertions.assertEquals("uukppdixqb", model.diskExclusionInput().volumeOptions().get(0).volumeLabel());
        Assertions
            .assertEquals("xvhhyqq", model.diskExclusionInput().volumeOptions().get(0).onlyExcludeIfSingleVolume());
        Assertions.assertEquals("bmgjymncjc", model.diskExclusionInput().diskSignatureOptions().get(0).diskSignature());
        Assertions.assertEquals("ljekn", model.profileId());
        Assertions.assertEquals("wjjqxowkdnjrx", model.disksToInclude().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageReprotectInput model =
            new InMageReprotectInput()
                .withMasterTargetId("qrwyambh")
                .withProcessServerId("afebzxfkjq")
                .withRetentionDrive("tibhlennt")
                .withRunAsAccountId("rkp")
                .withDatastoreName("bduxvzmlghnys")
                .withDiskExclusionInput(
                    new InMageDiskExclusionInput()
                        .withVolumeOptions(
                            Arrays
                                .asList(
                                    new InMageVolumeExclusionOptions()
                                        .withVolumeLabel("uukppdixqb")
                                        .withOnlyExcludeIfSingleVolume("xvhhyqq"),
                                    new InMageVolumeExclusionOptions()
                                        .withVolumeLabel("at")
                                        .withOnlyExcludeIfSingleVolume("rznmginmtsdixc")))
                        .withDiskSignatureOptions(
                            Arrays
                                .asList(
                                    new InMageDiskSignatureExclusionOptions().withDiskSignature("bmgjymncjc"),
                                    new InMageDiskSignatureExclusionOptions().withDiskSignature("airwcqzoofj"),
                                    new InMageDiskSignatureExclusionOptions().withDiskSignature("jsvepfbhtleberp"))))
                .withProfileId("ljekn")
                .withDisksToInclude(Arrays.asList("wjjqxowkdnjrx"));
        model = BinaryData.fromObject(model).toObject(InMageReprotectInput.class);
        Assertions.assertEquals("qrwyambh", model.masterTargetId());
        Assertions.assertEquals("afebzxfkjq", model.processServerId());
        Assertions.assertEquals("tibhlennt", model.retentionDrive());
        Assertions.assertEquals("rkp", model.runAsAccountId());
        Assertions.assertEquals("bduxvzmlghnys", model.datastoreName());
        Assertions.assertEquals("uukppdixqb", model.diskExclusionInput().volumeOptions().get(0).volumeLabel());
        Assertions
            .assertEquals("xvhhyqq", model.diskExclusionInput().volumeOptions().get(0).onlyExcludeIfSingleVolume());
        Assertions.assertEquals("bmgjymncjc", model.diskExclusionInput().diskSignatureOptions().get(0).diskSignature());
        Assertions.assertEquals("ljekn", model.profileId());
        Assertions.assertEquals("wjjqxowkdnjrx", model.disksToInclude().get(0));
    }
}
