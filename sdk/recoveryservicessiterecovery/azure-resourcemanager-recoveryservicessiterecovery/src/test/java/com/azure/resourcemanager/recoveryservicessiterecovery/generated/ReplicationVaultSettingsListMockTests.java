// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicessiterecovery.SiteRecoveryManager;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VaultSetting;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReplicationVaultSettingsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"migrationSolutionId\":\"sliifdrbsrpjspb\",\"vmwareToAzureProviderType\":\"snxmfooin\"},\"location\":\"rfvq\",\"id\":\"cu\",\"name\":\"gkmqcbrewtfuxkt\",\"type\":\"xnikcgittfm\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SiteRecoveryManager manager = SiteRecoveryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<VaultSetting> response
            = manager.replicationVaultSettings().list("mdajsqep", "ftyi", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("sliifdrbsrpjspb", response.iterator().next().properties().migrationSolutionId());
        Assertions.assertEquals("snxmfooin", response.iterator().next().properties().vmwareToAzureProviderType());
        Assertions.assertEquals("rfvq", response.iterator().next().location());
    }
}
