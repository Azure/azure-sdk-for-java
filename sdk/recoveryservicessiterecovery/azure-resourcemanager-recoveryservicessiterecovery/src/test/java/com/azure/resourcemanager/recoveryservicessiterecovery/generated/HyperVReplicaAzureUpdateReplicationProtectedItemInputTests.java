// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaAzureUpdateReplicationProtectedItemInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SqlServerLicenseType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.UpdateDiskInput;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class HyperVReplicaAzureUpdateReplicationProtectedItemInputTests {
    @Test
    public void testDeserialize() {
        HyperVReplicaAzureUpdateReplicationProtectedItemInput model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"HyperVReplicaAzure\",\"recoveryAzureV1ResourceGroupId\":\"ynnfmuiii\",\"recoveryAzureV2ResourceGroupId\":\"pfoh\",\"useManagedDisks\":\"fkx\",\"diskIdToDiskEncryptionMap\":{\"ewoi\":\"brwjiutgnjizb\",\"juyrsrziuctixg\":\"mrvz\",\"uifr\":\"d\",\"pezkis\":\"vka\"},\"targetProximityPlacementGroupId\":\"jm\",\"targetAvailabilityZone\":\"hsyparybjuf\",\"targetVmTags\":{\"daswvpp\":\"jczjnciuiyqv\",\"rr\":\"sqqzlgcndhz\",\"uww\":\"cfsrhkhgsn\",\"bzxomeik\":\"pphefsbzx\"},\"targetManagedDiskTags\":{\"fsuqtaazyqbxy\":\"wzacnmw\",\"iqezxlhdj\":\"oyfpuq\"},\"targetNicTags\":{\"jriyb\":\"cadwvpsozjii\",\"epnxwd\":\"rz\",\"xaurs\":\"wnjkgvfn\",\"pnqn\":\"ftibtyibuyvpirfq\"},\"sqlServerLicenseType\":\"NotSpecified\",\"vmDisks\":[{\"diskId\":\"edenrexkxbhxv\",\"targetDiskName\":\"nul\"},{\"diskId\":\"mnhjevdyzn\",\"targetDiskName\":\"jsvkskmqozzkivy\"},{\"diskId\":\"jrliiz\",\"targetDiskName\":\"xlqfh\"}]}")
                .toObject(HyperVReplicaAzureUpdateReplicationProtectedItemInput.class);
        Assertions.assertEquals("ynnfmuiii", model.recoveryAzureV1ResourceGroupId());
        Assertions.assertEquals("pfoh", model.recoveryAzureV2ResourceGroupId());
        Assertions.assertEquals("fkx", model.useManagedDisks());
        Assertions.assertEquals("brwjiutgnjizb", model.diskIdToDiskEncryptionMap().get("ewoi"));
        Assertions.assertEquals("jm", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("hsyparybjuf", model.targetAvailabilityZone());
        Assertions.assertEquals("jczjnciuiyqv", model.targetVmTags().get("daswvpp"));
        Assertions.assertEquals("wzacnmw", model.targetManagedDiskTags().get("fsuqtaazyqbxy"));
        Assertions.assertEquals("cadwvpsozjii", model.targetNicTags().get("jriyb"));
        Assertions.assertEquals(SqlServerLicenseType.NOT_SPECIFIED, model.sqlServerLicenseType());
        Assertions.assertEquals("edenrexkxbhxv", model.vmDisks().get(0).diskId());
        Assertions.assertEquals("nul", model.vmDisks().get(0).targetDiskName());
    }

    @Test
    public void testSerialize() {
        HyperVReplicaAzureUpdateReplicationProtectedItemInput model =
            new HyperVReplicaAzureUpdateReplicationProtectedItemInput()
                .withRecoveryAzureV1ResourceGroupId("ynnfmuiii")
                .withRecoveryAzureV2ResourceGroupId("pfoh")
                .withUseManagedDisks("fkx")
                .withDiskIdToDiskEncryptionMap(
                    mapOf("ewoi", "brwjiutgnjizb", "juyrsrziuctixg", "mrvz", "uifr", "d", "pezkis", "vka"))
                .withTargetProximityPlacementGroupId("jm")
                .withTargetAvailabilityZone("hsyparybjuf")
                .withTargetVmTags(
                    mapOf("daswvpp", "jczjnciuiyqv", "rr", "sqqzlgcndhz", "uww", "cfsrhkhgsn", "bzxomeik", "pphefsbzx"))
                .withTargetManagedDiskTags(mapOf("fsuqtaazyqbxy", "wzacnmw", "iqezxlhdj", "oyfpuq"))
                .withTargetNicTags(
                    mapOf("jriyb", "cadwvpsozjii", "epnxwd", "rz", "xaurs", "wnjkgvfn", "pnqn", "ftibtyibuyvpirfq"))
                .withSqlServerLicenseType(SqlServerLicenseType.NOT_SPECIFIED)
                .withVmDisks(
                    Arrays
                        .asList(
                            new UpdateDiskInput().withDiskId("edenrexkxbhxv").withTargetDiskName("nul"),
                            new UpdateDiskInput().withDiskId("mnhjevdyzn").withTargetDiskName("jsvkskmqozzkivy"),
                            new UpdateDiskInput().withDiskId("jrliiz").withTargetDiskName("xlqfh")));
        model = BinaryData.fromObject(model).toObject(HyperVReplicaAzureUpdateReplicationProtectedItemInput.class);
        Assertions.assertEquals("ynnfmuiii", model.recoveryAzureV1ResourceGroupId());
        Assertions.assertEquals("pfoh", model.recoveryAzureV2ResourceGroupId());
        Assertions.assertEquals("fkx", model.useManagedDisks());
        Assertions.assertEquals("brwjiutgnjizb", model.diskIdToDiskEncryptionMap().get("ewoi"));
        Assertions.assertEquals("jm", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("hsyparybjuf", model.targetAvailabilityZone());
        Assertions.assertEquals("jczjnciuiyqv", model.targetVmTags().get("daswvpp"));
        Assertions.assertEquals("wzacnmw", model.targetManagedDiskTags().get("fsuqtaazyqbxy"));
        Assertions.assertEquals("cadwvpsozjii", model.targetNicTags().get("jriyb"));
        Assertions.assertEquals(SqlServerLicenseType.NOT_SPECIFIED, model.sqlServerLicenseType());
        Assertions.assertEquals("edenrexkxbhxv", model.vmDisks().get(0).diskId());
        Assertions.assertEquals("nul", model.vmDisks().get(0).targetDiskName());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
