// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaAzurePolicyInput;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class HyperVReplicaAzurePolicyInputTests {
    @Test
    public void testDeserialize() {
        HyperVReplicaAzurePolicyInput model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"HyperVReplicaAzure\",\"recoveryPointHistoryDuration\":2090782381,\"applicationConsistentSnapshotFrequencyInHours\":524423380,\"replicationInterval\":1004506808,\"onlineReplicationStartTime\":\"pb\",\"storageAccounts\":[\"kdvezc\",\"cssbzhddu\"]}")
                .toObject(HyperVReplicaAzurePolicyInput.class);
        Assertions.assertEquals(2090782381, model.recoveryPointHistoryDuration());
        Assertions.assertEquals(524423380, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals(1004506808, model.replicationInterval());
        Assertions.assertEquals("pb", model.onlineReplicationStartTime());
        Assertions.assertEquals("kdvezc", model.storageAccounts().get(0));
    }

    @Test
    public void testSerialize() {
        HyperVReplicaAzurePolicyInput model =
            new HyperVReplicaAzurePolicyInput()
                .withRecoveryPointHistoryDuration(2090782381)
                .withApplicationConsistentSnapshotFrequencyInHours(524423380)
                .withReplicationInterval(1004506808)
                .withOnlineReplicationStartTime("pb")
                .withStorageAccounts(Arrays.asList("kdvezc", "cssbzhddu"));
        model = BinaryData.fromObject(model).toObject(HyperVReplicaAzurePolicyInput.class);
        Assertions.assertEquals(2090782381, model.recoveryPointHistoryDuration());
        Assertions.assertEquals(524423380, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals(1004506808, model.replicationInterval());
        Assertions.assertEquals("pb", model.onlineReplicationStartTime());
        Assertions.assertEquals("kdvezc", model.storageAccounts().get(0));
    }
}
