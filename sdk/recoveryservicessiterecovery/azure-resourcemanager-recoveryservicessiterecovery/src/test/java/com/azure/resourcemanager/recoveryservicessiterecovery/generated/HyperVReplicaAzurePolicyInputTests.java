// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaAzurePolicyInput;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class HyperVReplicaAzurePolicyInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVReplicaAzurePolicyInput model = BinaryData.fromString(
            "{\"instanceType\":\"HyperVReplicaAzure\",\"recoveryPointHistoryDuration\":1605369356,\"applicationConsistentSnapshotFrequencyInHours\":993386039,\"replicationInterval\":2026820948,\"onlineReplicationStartTime\":\"khcqtwmlmhj\",\"storageAccounts\":[\"qe\",\"hj\"]}")
            .toObject(HyperVReplicaAzurePolicyInput.class);
        Assertions.assertEquals(1605369356, model.recoveryPointHistoryDuration());
        Assertions.assertEquals(993386039, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals(2026820948, model.replicationInterval());
        Assertions.assertEquals("khcqtwmlmhj", model.onlineReplicationStartTime());
        Assertions.assertEquals("qe", model.storageAccounts().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVReplicaAzurePolicyInput model
            = new HyperVReplicaAzurePolicyInput().withRecoveryPointHistoryDuration(1605369356)
                .withApplicationConsistentSnapshotFrequencyInHours(993386039)
                .withReplicationInterval(2026820948)
                .withOnlineReplicationStartTime("khcqtwmlmhj")
                .withStorageAccounts(Arrays.asList("qe", "hj"));
        model = BinaryData.fromObject(model).toObject(HyperVReplicaAzurePolicyInput.class);
        Assertions.assertEquals(1605369356, model.recoveryPointHistoryDuration());
        Assertions.assertEquals(993386039, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals(2026820948, model.replicationInterval());
        Assertions.assertEquals("khcqtwmlmhj", model.onlineReplicationStartTime());
        Assertions.assertEquals("qe", model.storageAccounts().get(0));
    }
}
