// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.JobEntity;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VirtualMachineTaskDetails;
import org.junit.jupiter.api.Assertions;

public final class VirtualMachineTaskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualMachineTaskDetails model = BinaryData.fromString(
            "{\"instanceType\":\"VirtualMachineTaskDetails\",\"skippedReason\":\"doaqipmnxclfrsb\",\"skippedReasonString\":\"nm\",\"jobTask\":{\"jobId\":\"vp\",\"jobFriendlyName\":\"fddtbfmekjcng\",\"targetObjectId\":\"xdvmaoyqxf\",\"targetObjectName\":\"yxzmx\",\"targetInstanceType\":\"ofxlttxo\",\"jobScenarioName\":\"tdnzujsjirkrpskc\"}}")
            .toObject(VirtualMachineTaskDetails.class);
        Assertions.assertEquals("vp", model.jobTask().jobId());
        Assertions.assertEquals("fddtbfmekjcng", model.jobTask().jobFriendlyName());
        Assertions.assertEquals("xdvmaoyqxf", model.jobTask().targetObjectId());
        Assertions.assertEquals("yxzmx", model.jobTask().targetObjectName());
        Assertions.assertEquals("ofxlttxo", model.jobTask().targetInstanceType());
        Assertions.assertEquals("tdnzujsjirkrpskc", model.jobTask().jobScenarioName());
        Assertions.assertEquals("doaqipmnxclfrsb", model.skippedReason());
        Assertions.assertEquals("nm", model.skippedReasonString());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualMachineTaskDetails model = new VirtualMachineTaskDetails()
            .withJobTask(new JobEntity().withJobId("vp").withJobFriendlyName("fddtbfmekjcng")
                .withTargetObjectId("xdvmaoyqxf").withTargetObjectName("yxzmx").withTargetInstanceType("ofxlttxo")
                .withJobScenarioName("tdnzujsjirkrpskc"))
            .withSkippedReason("doaqipmnxclfrsb").withSkippedReasonString("nm");
        model = BinaryData.fromObject(model).toObject(VirtualMachineTaskDetails.class);
        Assertions.assertEquals("vp", model.jobTask().jobId());
        Assertions.assertEquals("fddtbfmekjcng", model.jobTask().jobFriendlyName());
        Assertions.assertEquals("xdvmaoyqxf", model.jobTask().targetObjectId());
        Assertions.assertEquals("yxzmx", model.jobTask().targetObjectName());
        Assertions.assertEquals("ofxlttxo", model.jobTask().targetInstanceType());
        Assertions.assertEquals("tdnzujsjirkrpskc", model.jobTask().jobScenarioName());
        Assertions.assertEquals("doaqipmnxclfrsb", model.skippedReason());
        Assertions.assertEquals("nm", model.skippedReasonString());
    }
}
