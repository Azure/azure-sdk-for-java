// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IpConfigDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMNicDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VMNicDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VMNicDetails model =
            BinaryData
                .fromString(
                    "{\"nicId\":\"phkixkykxdssjpe\",\"replicaNicId\":\"ucfx\",\"sourceNicArmId\":\"kkflrmymyincqlhr\",\"vMNetworkName\":\"wslmiiiovgqcg\",\"recoveryVMNetworkId\":\"ugqkctotiowlxteq\",\"ipConfigs\":[{\"name\":\"gwdtgukran\",\"isPrimary\":true,\"subnetName\":\"hqlkccuzgygqwaho\",\"staticIPAddress\":\"lwgniiprglvawu\",\"ipAddressType\":\"d\",\"isSeletedForFailover\":false,\"recoverySubnetName\":\"ivlsbbjpmc\",\"recoveryStaticIPAddress\":\"kmifoxxkub\",\"recoveryIPAddressType\":\"havpmhbrbqgvg\",\"recoveryPublicIPAddressId\":\"pbbttefjoknss\",\"recoveryLBBackendAddressPoolIds\":[\"qedikdfrd\",\"iqmrjgeihfqlggw\",\"iwzcxmjpbyeph\"],\"tfoSubnetName\":\"t\",\"tfoStaticIPAddress\":\"j\",\"tfoPublicIPAddressId\":\"cmyfqipgxhnpo\",\"tfoLBBackendAddressPoolIds\":[\"wcabvnuileeya\",\"wlpaugmrmfjlrxwt\",\"aukhfkvcisiz\"]},{\"name\":\"a\",\"isPrimary\":false,\"subnetName\":\"jwuive\",\"staticIPAddress\":\"cgyee\",\"ipAddressType\":\"ei\",\"isSeletedForFailover\":false,\"recoverySubnetName\":\"mgomg\",\"recoveryStaticIPAddress\":\"mljdlrgmsplzga\",\"recoveryIPAddressType\":\"cshhv\",\"recoveryPublicIPAddressId\":\"wgnxkympqanxrj\",\"recoveryLBBackendAddressPoolIds\":[\"tw\",\"taoypnyghshxc\"],\"tfoSubnetName\":\"hkgmnsg\",\"tfoStaticIPAddress\":\"xycphdrwjjkh\",\"tfoPublicIPAddressId\":\"omacluzvxnqmhr\",\"tfoLBBackendAddressPoolIds\":[\"df\"]},{\"name\":\"kois\",\"isPrimary\":true,\"subnetName\":\"f\",\"staticIPAddress\":\"uifmc\",\"ipAddressType\":\"p\",\"isSeletedForFailover\":true,\"recoverySubnetName\":\"qzrdzsylollg\",\"recoveryStaticIPAddress\":\"czzydmxzjij\",\"recoveryIPAddressType\":\"uaurkihcir\",\"recoveryPublicIPAddressId\":\"efxrdcoxnbk\",\"recoveryLBBackendAddressPoolIds\":[\"nurnnq\",\"nqbpi\"],\"tfoSubnetName\":\"qltgrd\",\"tfoStaticIPAddress\":\"ypxrx\",\"tfoPublicIPAddressId\":\"fihwu\",\"tfoLBBackendAddressPoolIds\":[\"tafsrbxrblmliowx\",\"hspnxwqagnepz\",\"aklsbsbq\"]}],\"selectionType\":\"agwwrxaom\",\"recoveryNetworkSecurityGroupId\":\"sgl\",\"enableAcceleratedNetworkingOnRecovery\":true,\"tfoVMNetworkId\":\"ezkhhltnjadhqo\",\"tfoNetworkSecurityGroupId\":\"jqoyueayfbpcm\",\"enableAcceleratedNetworkingOnTfo\":false,\"recoveryNicName\":\"yrrueqth\",\"recoveryNicResourceGroupName\":\"gnmbscbbxigdhx\",\"reuseExistingNic\":false,\"tfoRecoveryNicName\":\"opedbwdpyqyybxub\",\"tfoRecoveryNicResourceGroupName\":\"nafcbq\",\"tfoReuseExistingNic\":false,\"targetNicName\":\"jelaqacigele\"}")
                .toObject(VMNicDetails.class);
        Assertions.assertEquals("phkixkykxdssjpe", model.nicId());
        Assertions.assertEquals("ucfx", model.replicaNicId());
        Assertions.assertEquals("kkflrmymyincqlhr", model.sourceNicArmId());
        Assertions.assertEquals("wslmiiiovgqcg", model.vMNetworkName());
        Assertions.assertEquals("ugqkctotiowlxteq", model.recoveryVMNetworkId());
        Assertions.assertEquals("gwdtgukran", model.ipConfigs().get(0).name());
        Assertions.assertEquals(true, model.ipConfigs().get(0).isPrimary());
        Assertions.assertEquals("hqlkccuzgygqwaho", model.ipConfigs().get(0).subnetName());
        Assertions.assertEquals("lwgniiprglvawu", model.ipConfigs().get(0).staticIpAddress());
        Assertions.assertEquals("d", model.ipConfigs().get(0).ipAddressType());
        Assertions.assertEquals(false, model.ipConfigs().get(0).isSeletedForFailover());
        Assertions.assertEquals("ivlsbbjpmc", model.ipConfigs().get(0).recoverySubnetName());
        Assertions.assertEquals("kmifoxxkub", model.ipConfigs().get(0).recoveryStaticIpAddress());
        Assertions.assertEquals("havpmhbrbqgvg", model.ipConfigs().get(0).recoveryIpAddressType());
        Assertions.assertEquals("pbbttefjoknss", model.ipConfigs().get(0).recoveryPublicIpAddressId());
        Assertions.assertEquals("qedikdfrd", model.ipConfigs().get(0).recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("t", model.ipConfigs().get(0).tfoSubnetName());
        Assertions.assertEquals("j", model.ipConfigs().get(0).tfoStaticIpAddress());
        Assertions.assertEquals("cmyfqipgxhnpo", model.ipConfigs().get(0).tfoPublicIpAddressId());
        Assertions.assertEquals("wcabvnuileeya", model.ipConfigs().get(0).tfoLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("agwwrxaom", model.selectionType());
        Assertions.assertEquals("sgl", model.recoveryNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("ezkhhltnjadhqo", model.tfoVMNetworkId());
        Assertions.assertEquals("jqoyueayfbpcm", model.tfoNetworkSecurityGroupId());
        Assertions.assertEquals(false, model.enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("yrrueqth", model.recoveryNicName());
        Assertions.assertEquals("gnmbscbbxigdhx", model.recoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.reuseExistingNic());
        Assertions.assertEquals("opedbwdpyqyybxub", model.tfoRecoveryNicName());
        Assertions.assertEquals("nafcbq", model.tfoRecoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.tfoReuseExistingNic());
        Assertions.assertEquals("jelaqacigele", model.targetNicName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VMNicDetails model =
            new VMNicDetails()
                .withNicId("phkixkykxdssjpe")
                .withReplicaNicId("ucfx")
                .withSourceNicArmId("kkflrmymyincqlhr")
                .withVMNetworkName("wslmiiiovgqcg")
                .withRecoveryVMNetworkId("ugqkctotiowlxteq")
                .withIpConfigs(
                    Arrays
                        .asList(
                            new IpConfigDetails()
                                .withName("gwdtgukran")
                                .withIsPrimary(true)
                                .withSubnetName("hqlkccuzgygqwaho")
                                .withStaticIpAddress("lwgniiprglvawu")
                                .withIpAddressType("d")
                                .withIsSeletedForFailover(false)
                                .withRecoverySubnetName("ivlsbbjpmc")
                                .withRecoveryStaticIpAddress("kmifoxxkub")
                                .withRecoveryIpAddressType("havpmhbrbqgvg")
                                .withRecoveryPublicIpAddressId("pbbttefjoknss")
                                .withRecoveryLBBackendAddressPoolIds(
                                    Arrays.asList("qedikdfrd", "iqmrjgeihfqlggw", "iwzcxmjpbyeph"))
                                .withTfoSubnetName("t")
                                .withTfoStaticIpAddress("j")
                                .withTfoPublicIpAddressId("cmyfqipgxhnpo")
                                .withTfoLBBackendAddressPoolIds(
                                    Arrays.asList("wcabvnuileeya", "wlpaugmrmfjlrxwt", "aukhfkvcisiz")),
                            new IpConfigDetails()
                                .withName("a")
                                .withIsPrimary(false)
                                .withSubnetName("jwuive")
                                .withStaticIpAddress("cgyee")
                                .withIpAddressType("ei")
                                .withIsSeletedForFailover(false)
                                .withRecoverySubnetName("mgomg")
                                .withRecoveryStaticIpAddress("mljdlrgmsplzga")
                                .withRecoveryIpAddressType("cshhv")
                                .withRecoveryPublicIpAddressId("wgnxkympqanxrj")
                                .withRecoveryLBBackendAddressPoolIds(Arrays.asList("tw", "taoypnyghshxc"))
                                .withTfoSubnetName("hkgmnsg")
                                .withTfoStaticIpAddress("xycphdrwjjkh")
                                .withTfoPublicIpAddressId("omacluzvxnqmhr")
                                .withTfoLBBackendAddressPoolIds(Arrays.asList("df")),
                            new IpConfigDetails()
                                .withName("kois")
                                .withIsPrimary(true)
                                .withSubnetName("f")
                                .withStaticIpAddress("uifmc")
                                .withIpAddressType("p")
                                .withIsSeletedForFailover(true)
                                .withRecoverySubnetName("qzrdzsylollg")
                                .withRecoveryStaticIpAddress("czzydmxzjij")
                                .withRecoveryIpAddressType("uaurkihcir")
                                .withRecoveryPublicIpAddressId("efxrdcoxnbk")
                                .withRecoveryLBBackendAddressPoolIds(Arrays.asList("nurnnq", "nqbpi"))
                                .withTfoSubnetName("qltgrd")
                                .withTfoStaticIpAddress("ypxrx")
                                .withTfoPublicIpAddressId("fihwu")
                                .withTfoLBBackendAddressPoolIds(
                                    Arrays.asList("tafsrbxrblmliowx", "hspnxwqagnepz", "aklsbsbq"))))
                .withSelectionType("agwwrxaom")
                .withRecoveryNetworkSecurityGroupId("sgl")
                .withEnableAcceleratedNetworkingOnRecovery(true)
                .withTfoVMNetworkId("ezkhhltnjadhqo")
                .withTfoNetworkSecurityGroupId("jqoyueayfbpcm")
                .withEnableAcceleratedNetworkingOnTfo(false)
                .withRecoveryNicName("yrrueqth")
                .withRecoveryNicResourceGroupName("gnmbscbbxigdhx")
                .withReuseExistingNic(false)
                .withTfoRecoveryNicName("opedbwdpyqyybxub")
                .withTfoRecoveryNicResourceGroupName("nafcbq")
                .withTfoReuseExistingNic(false)
                .withTargetNicName("jelaqacigele");
        model = BinaryData.fromObject(model).toObject(VMNicDetails.class);
        Assertions.assertEquals("phkixkykxdssjpe", model.nicId());
        Assertions.assertEquals("ucfx", model.replicaNicId());
        Assertions.assertEquals("kkflrmymyincqlhr", model.sourceNicArmId());
        Assertions.assertEquals("wslmiiiovgqcg", model.vMNetworkName());
        Assertions.assertEquals("ugqkctotiowlxteq", model.recoveryVMNetworkId());
        Assertions.assertEquals("gwdtgukran", model.ipConfigs().get(0).name());
        Assertions.assertEquals(true, model.ipConfigs().get(0).isPrimary());
        Assertions.assertEquals("hqlkccuzgygqwaho", model.ipConfigs().get(0).subnetName());
        Assertions.assertEquals("lwgniiprglvawu", model.ipConfigs().get(0).staticIpAddress());
        Assertions.assertEquals("d", model.ipConfigs().get(0).ipAddressType());
        Assertions.assertEquals(false, model.ipConfigs().get(0).isSeletedForFailover());
        Assertions.assertEquals("ivlsbbjpmc", model.ipConfigs().get(0).recoverySubnetName());
        Assertions.assertEquals("kmifoxxkub", model.ipConfigs().get(0).recoveryStaticIpAddress());
        Assertions.assertEquals("havpmhbrbqgvg", model.ipConfigs().get(0).recoveryIpAddressType());
        Assertions.assertEquals("pbbttefjoknss", model.ipConfigs().get(0).recoveryPublicIpAddressId());
        Assertions.assertEquals("qedikdfrd", model.ipConfigs().get(0).recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("t", model.ipConfigs().get(0).tfoSubnetName());
        Assertions.assertEquals("j", model.ipConfigs().get(0).tfoStaticIpAddress());
        Assertions.assertEquals("cmyfqipgxhnpo", model.ipConfigs().get(0).tfoPublicIpAddressId());
        Assertions.assertEquals("wcabvnuileeya", model.ipConfigs().get(0).tfoLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("agwwrxaom", model.selectionType());
        Assertions.assertEquals("sgl", model.recoveryNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("ezkhhltnjadhqo", model.tfoVMNetworkId());
        Assertions.assertEquals("jqoyueayfbpcm", model.tfoNetworkSecurityGroupId());
        Assertions.assertEquals(false, model.enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("yrrueqth", model.recoveryNicName());
        Assertions.assertEquals("gnmbscbbxigdhx", model.recoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.reuseExistingNic());
        Assertions.assertEquals("opedbwdpyqyybxub", model.tfoRecoveryNicName());
        Assertions.assertEquals("nafcbq", model.tfoRecoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.tfoReuseExistingNic());
        Assertions.assertEquals("jelaqacigele", model.targetNicName());
    }
}
