// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.PolicyInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PolicyCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PolicyProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PolicyCollectionTests {
    @Test
    public void testDeserialize() {
        PolicyCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"friendlyName\":\"nzrdpsovwxz\"},\"location\":\"goeiybbabpfhvfsl\",\"id\":\"vntjlrigjk\",\"name\":\"kyrioovzid\",\"type\":\"xwaabzmifrygznmm\"}],\"nextLink\":\"ri\"}")
                .toObject(PolicyCollection.class);
        Assertions.assertEquals("nzrdpsovwxz", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("goeiybbabpfhvfsl", model.value().get(0).location());
        Assertions.assertEquals("ri", model.nextLink());
    }

    @Test
    public void testSerialize() {
        PolicyCollection model =
            new PolicyCollection()
                .withValue(
                    Arrays
                        .asList(
                            new PolicyInner()
                                .withProperties(new PolicyProperties().withFriendlyName("nzrdpsovwxz"))
                                .withLocation("goeiybbabpfhvfsl")))
                .withNextLink("ri");
        model = BinaryData.fromObject(model).toObject(PolicyCollection.class);
        Assertions.assertEquals("nzrdpsovwxz", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("goeiybbabpfhvfsl", model.value().get(0).location());
        Assertions.assertEquals("ri", model.nextLink());
    }
}
