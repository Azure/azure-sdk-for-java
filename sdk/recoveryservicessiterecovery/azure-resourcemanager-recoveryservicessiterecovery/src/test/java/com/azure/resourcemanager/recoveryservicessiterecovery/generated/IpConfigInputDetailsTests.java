// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IpConfigInputDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IpConfigInputDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpConfigInputDetails model = BinaryData.fromString(
            "{\"ipConfigName\":\"pelmcuvhixbjxyf\",\"isPrimary\":false,\"isSeletedForFailover\":false,\"recoverySubnetName\":\"ool\",\"recoveryStaticIPAddress\":\"tpkiwkkbnujry\",\"recoveryPublicIPAddressId\":\"tylbfpncurdoiw\",\"recoveryLBBackendAddressPoolIds\":[\"htywubxcbihwq\",\"nfdn\"],\"tfoSubnetName\":\"jchrdgoihxumw\",\"tfoStaticIPAddress\":\"ond\",\"tfoPublicIPAddressId\":\"luudfdlwggytsb\",\"tfoLBBackendAddressPoolIds\":[\"vvt\",\"seinqfiuf\",\"qknp\",\"rgnepttwqmsniffc\"]}")
            .toObject(IpConfigInputDetails.class);
        Assertions.assertEquals("pelmcuvhixbjxyf", model.ipConfigName());
        Assertions.assertEquals(false, model.isPrimary());
        Assertions.assertEquals(false, model.isSeletedForFailover());
        Assertions.assertEquals("ool", model.recoverySubnetName());
        Assertions.assertEquals("tpkiwkkbnujry", model.recoveryStaticIpAddress());
        Assertions.assertEquals("tylbfpncurdoiw", model.recoveryPublicIpAddressId());
        Assertions.assertEquals("htywubxcbihwq", model.recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("jchrdgoihxumw", model.tfoSubnetName());
        Assertions.assertEquals("ond", model.tfoStaticIpAddress());
        Assertions.assertEquals("luudfdlwggytsb", model.tfoPublicIpAddressId());
        Assertions.assertEquals("vvt", model.tfoLBBackendAddressPoolIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpConfigInputDetails model = new IpConfigInputDetails().withIpConfigName("pelmcuvhixbjxyf").withIsPrimary(false)
            .withIsSeletedForFailover(false).withRecoverySubnetName("ool").withRecoveryStaticIpAddress("tpkiwkkbnujry")
            .withRecoveryPublicIpAddressId("tylbfpncurdoiw")
            .withRecoveryLBBackendAddressPoolIds(Arrays.asList("htywubxcbihwq", "nfdn"))
            .withTfoSubnetName("jchrdgoihxumw").withTfoStaticIpAddress("ond").withTfoPublicIpAddressId("luudfdlwggytsb")
            .withTfoLBBackendAddressPoolIds(Arrays.asList("vvt", "seinqfiuf", "qknp", "rgnepttwqmsniffc"));
        model = BinaryData.fromObject(model).toObject(IpConfigInputDetails.class);
        Assertions.assertEquals("pelmcuvhixbjxyf", model.ipConfigName());
        Assertions.assertEquals(false, model.isPrimary());
        Assertions.assertEquals(false, model.isSeletedForFailover());
        Assertions.assertEquals("ool", model.recoverySubnetName());
        Assertions.assertEquals("tpkiwkkbnujry", model.recoveryStaticIpAddress());
        Assertions.assertEquals("tylbfpncurdoiw", model.recoveryPublicIpAddressId());
        Assertions.assertEquals("htywubxcbihwq", model.recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("jchrdgoihxumw", model.tfoSubnetName());
        Assertions.assertEquals("ond", model.tfoStaticIpAddress());
        Assertions.assertEquals("luudfdlwggytsb", model.tfoPublicIpAddressId());
        Assertions.assertEquals("vvt", model.tfoLBBackendAddressPoolIds().get(0));
    }
}
