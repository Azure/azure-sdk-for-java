// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.LogicalNetworkInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.LogicalNetworkProperties;
import org.junit.jupiter.api.Assertions;

public final class LogicalNetworkInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogicalNetworkInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"friendlyName\":\"x\",\"networkVirtualizationStatus\":\"jpgd\",\"logicalNetworkUsage\":\"ocjjxhvpmouexh\",\"logicalNetworkDefinitionsStatus\":\"xibqeojnx\"},\"location\":\"zvddntwndeicbtwn\",\"id\":\"zao\",\"name\":\"vuhrhcffcyddgl\",\"type\":\"jthjqkwpyei\"}")
                .toObject(LogicalNetworkInner.class);
        Assertions.assertEquals("x", model.properties().friendlyName());
        Assertions.assertEquals("jpgd", model.properties().networkVirtualizationStatus());
        Assertions.assertEquals("ocjjxhvpmouexh", model.properties().logicalNetworkUsage());
        Assertions.assertEquals("xibqeojnx", model.properties().logicalNetworkDefinitionsStatus());
        Assertions.assertEquals("zvddntwndeicbtwn", model.location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogicalNetworkInner model =
            new LogicalNetworkInner()
                .withProperties(
                    new LogicalNetworkProperties()
                        .withFriendlyName("x")
                        .withNetworkVirtualizationStatus("jpgd")
                        .withLogicalNetworkUsage("ocjjxhvpmouexh")
                        .withLogicalNetworkDefinitionsStatus("xibqeojnx"))
                .withLocation("zvddntwndeicbtwn");
        model = BinaryData.fromObject(model).toObject(LogicalNetworkInner.class);
        Assertions.assertEquals("x", model.properties().friendlyName());
        Assertions.assertEquals("jpgd", model.properties().networkVirtualizationStatus());
        Assertions.assertEquals("ocjjxhvpmouexh", model.properties().logicalNetworkUsage());
        Assertions.assertEquals("xibqeojnx", model.properties().logicalNetworkDefinitionsStatus());
        Assertions.assertEquals("zvddntwndeicbtwn", model.location());
    }
}
