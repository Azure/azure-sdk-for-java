// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.A2AExtendedLocationDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.A2AZoneDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AzureFabricSpecificDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ExtendedLocation;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ExtendedLocationType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AzureFabricSpecificDetailsTests {
    @Test
    public void testDeserialize() {
        AzureFabricSpecificDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"Azure\",\"location\":\"zgsjgkzzlta\",\"containerIds\":[\"zffovwmbjl\"],\"zones\":[{\"source\":\"zpgvdwnapfd\",\"target\":\"owftptnuwjtks\"},{\"source\":\"gcgqyhleseyqrhvy\",\"target\":\"dotjvdk\"},{\"source\":\"swskuk\",\"target\":\"asbvw\"},{\"source\":\"pkxkdtxfk\",\"target\":\"lq\"}],\"extendedLocations\":[{\"primaryExtendedLocation\":{\"name\":\"nvgmmbugtywa\",\"type\":\"EdgeZone\"},\"recoveryExtendedLocation\":{\"name\":\"aqkue\",\"type\":\"EdgeZone\"}}]}")
                .toObject(AzureFabricSpecificDetails.class);
        Assertions.assertEquals("zgsjgkzzlta", model.location());
        Assertions.assertEquals("zffovwmbjl", model.containerIds().get(0));
        Assertions.assertEquals("zpgvdwnapfd", model.zones().get(0).source());
        Assertions.assertEquals("owftptnuwjtks", model.zones().get(0).target());
        Assertions.assertEquals("nvgmmbugtywa", model.extendedLocations().get(0).primaryExtendedLocation().name());
        Assertions
            .assertEquals(
                ExtendedLocationType.EDGE_ZONE, model.extendedLocations().get(0).primaryExtendedLocation().type());
        Assertions.assertEquals("aqkue", model.extendedLocations().get(0).recoveryExtendedLocation().name());
        Assertions
            .assertEquals(
                ExtendedLocationType.EDGE_ZONE, model.extendedLocations().get(0).recoveryExtendedLocation().type());
    }

    @Test
    public void testSerialize() {
        AzureFabricSpecificDetails model =
            new AzureFabricSpecificDetails()
                .withLocation("zgsjgkzzlta")
                .withContainerIds(Arrays.asList("zffovwmbjl"))
                .withZones(
                    Arrays
                        .asList(
                            new A2AZoneDetails().withSource("zpgvdwnapfd").withTarget("owftptnuwjtks"),
                            new A2AZoneDetails().withSource("gcgqyhleseyqrhvy").withTarget("dotjvdk"),
                            new A2AZoneDetails().withSource("swskuk").withTarget("asbvw"),
                            new A2AZoneDetails().withSource("pkxkdtxfk").withTarget("lq")))
                .withExtendedLocations(
                    Arrays
                        .asList(
                            new A2AExtendedLocationDetails()
                                .withPrimaryExtendedLocation(
                                    new ExtendedLocation()
                                        .withName("nvgmmbugtywa")
                                        .withType(ExtendedLocationType.EDGE_ZONE))
                                .withRecoveryExtendedLocation(
                                    new ExtendedLocation()
                                        .withName("aqkue")
                                        .withType(ExtendedLocationType.EDGE_ZONE))));
        model = BinaryData.fromObject(model).toObject(AzureFabricSpecificDetails.class);
        Assertions.assertEquals("zgsjgkzzlta", model.location());
        Assertions.assertEquals("zffovwmbjl", model.containerIds().get(0));
        Assertions.assertEquals("zpgvdwnapfd", model.zones().get(0).source());
        Assertions.assertEquals("owftptnuwjtks", model.zones().get(0).target());
        Assertions.assertEquals("nvgmmbugtywa", model.extendedLocations().get(0).primaryExtendedLocation().name());
        Assertions
            .assertEquals(
                ExtendedLocationType.EDGE_ZONE, model.extendedLocations().get(0).primaryExtendedLocation().type());
        Assertions.assertEquals("aqkue", model.extendedLocations().get(0).recoveryExtendedLocation().name());
        Assertions
            .assertEquals(
                ExtendedLocationType.EDGE_ZONE, model.extendedLocations().get(0).recoveryExtendedLocation().type());
    }
}
