// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageAzureV2PolicyInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SetMultiVmSyncStatus;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class InMageAzureV2PolicyInputTests {
    @Test
    public void testDeserialize() {
        InMageAzureV2PolicyInput model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"InMageAzureV2\",\"recoveryPointThresholdInMinutes\":848316015,\"recoveryPointHistory\":1681797246,\"crashConsistentFrequencyInMinutes\":848488799,\"appConsistentFrequencyInMinutes\":102469809,\"multiVmSyncStatus\":\"Enable\"}")
                .toObject(InMageAzureV2PolicyInput.class);
        Assertions.assertEquals(848316015, model.recoveryPointThresholdInMinutes());
        Assertions.assertEquals(1681797246, model.recoveryPointHistory());
        Assertions.assertEquals(848488799, model.crashConsistentFrequencyInMinutes());
        Assertions.assertEquals(102469809, model.appConsistentFrequencyInMinutes());
        Assertions.assertEquals(SetMultiVmSyncStatus.ENABLE, model.multiVmSyncStatus());
    }

    @Test
    public void testSerialize() {
        InMageAzureV2PolicyInput model =
            new InMageAzureV2PolicyInput()
                .withRecoveryPointThresholdInMinutes(848316015)
                .withRecoveryPointHistory(1681797246)
                .withCrashConsistentFrequencyInMinutes(848488799)
                .withAppConsistentFrequencyInMinutes(102469809)
                .withMultiVmSyncStatus(SetMultiVmSyncStatus.ENABLE);
        model = BinaryData.fromObject(model).toObject(InMageAzureV2PolicyInput.class);
        Assertions.assertEquals(848316015, model.recoveryPointThresholdInMinutes());
        Assertions.assertEquals(1681797246, model.recoveryPointHistory());
        Assertions.assertEquals(848488799, model.crashConsistentFrequencyInMinutes());
        Assertions.assertEquals(102469809, model.appConsistentFrequencyInMinutes());
        Assertions.assertEquals(SetMultiVmSyncStatus.ENABLE, model.multiVmSyncStatus());
    }
}
