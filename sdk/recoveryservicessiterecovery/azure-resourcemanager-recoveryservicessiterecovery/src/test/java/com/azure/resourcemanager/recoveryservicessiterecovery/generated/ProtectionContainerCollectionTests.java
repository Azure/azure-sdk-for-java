// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.ProtectionContainerInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ProtectionContainerCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ProtectionContainerProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ProtectionContainerCollectionTests {
    @Test
    public void testDeserialize() {
        ProtectionContainerCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"fabricFriendlyName\":\"heun\",\"friendlyName\":\"qhgyxzkonocukok\",\"fabricType\":\"axuconuq\",\"protectedItemCount\":1340074682,\"pairingStatus\":\"beypewrmjmw\",\"role\":\"jektcxsenh\"},\"location\":\"s\",\"id\":\"frzpwvlqdqgb\",\"name\":\"qylihkaetckt\",\"type\":\"fcivfsnkym\"},{\"properties\":{\"fabricFriendlyName\":\"qhjfbebr\",\"friendlyName\":\"xerf\",\"fabricType\":\"utttxfvjrbirp\",\"protectedItemCount\":684290279,\"pairingStatus\":\"c\",\"role\":\"ahfn\"},\"location\":\"yq\",\"id\":\"j\",\"name\":\"uujqgidokgjljyo\",\"type\":\"gvcl\"},{\"properties\":{\"fabricFriendlyName\":\"sncghkjeszz\",\"friendlyName\":\"ijhtxf\",\"fabricType\":\"xbf\",\"protectedItemCount\":195417612,\"pairingStatus\":\"eh\",\"role\":\"vecxgodebfqkk\"},\"location\":\"pukgriwflzlfb\",\"id\":\"zpuzycisp\",\"name\":\"qzahmgkbrp\",\"type\":\"y\"},{\"properties\":{\"fabricFriendlyName\":\"bnuqqkpik\",\"friendlyName\":\"rgvtqag\",\"fabricType\":\"uynhijg\",\"protectedItemCount\":687911821,\"pairingStatus\":\"fsiarbutr\",\"role\":\"pnazzm\"},\"location\":\"unmpxttd\",\"id\":\"hrbnlankxmyskpbh\",\"name\":\"nbtkcxywnytnr\",\"type\":\"yn\"}],\"nextLink\":\"idybyxczf\"}")
                .toObject(ProtectionContainerCollection.class);
        Assertions.assertEquals("heun", model.value().get(0).properties().fabricFriendlyName());
        Assertions.assertEquals("qhgyxzkonocukok", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("axuconuq", model.value().get(0).properties().fabricType());
        Assertions.assertEquals(1340074682, model.value().get(0).properties().protectedItemCount());
        Assertions.assertEquals("beypewrmjmw", model.value().get(0).properties().pairingStatus());
        Assertions.assertEquals("jektcxsenh", model.value().get(0).properties().role());
        Assertions.assertEquals("s", model.value().get(0).location());
        Assertions.assertEquals("idybyxczf", model.nextLink());
    }

    @Test
    public void testSerialize() {
        ProtectionContainerCollection model =
            new ProtectionContainerCollection()
                .withValue(
                    Arrays
                        .asList(
                            new ProtectionContainerInner()
                                .withProperties(
                                    new ProtectionContainerProperties()
                                        .withFabricFriendlyName("heun")
                                        .withFriendlyName("qhgyxzkonocukok")
                                        .withFabricType("axuconuq")
                                        .withProtectedItemCount(1340074682)
                                        .withPairingStatus("beypewrmjmw")
                                        .withRole("jektcxsenh"))
                                .withLocation("s"),
                            new ProtectionContainerInner()
                                .withProperties(
                                    new ProtectionContainerProperties()
                                        .withFabricFriendlyName("qhjfbebr")
                                        .withFriendlyName("xerf")
                                        .withFabricType("utttxfvjrbirp")
                                        .withProtectedItemCount(684290279)
                                        .withPairingStatus("c")
                                        .withRole("ahfn"))
                                .withLocation("yq"),
                            new ProtectionContainerInner()
                                .withProperties(
                                    new ProtectionContainerProperties()
                                        .withFabricFriendlyName("sncghkjeszz")
                                        .withFriendlyName("ijhtxf")
                                        .withFabricType("xbf")
                                        .withProtectedItemCount(195417612)
                                        .withPairingStatus("eh")
                                        .withRole("vecxgodebfqkk"))
                                .withLocation("pukgriwflzlfb"),
                            new ProtectionContainerInner()
                                .withProperties(
                                    new ProtectionContainerProperties()
                                        .withFabricFriendlyName("bnuqqkpik")
                                        .withFriendlyName("rgvtqag")
                                        .withFabricType("uynhijg")
                                        .withProtectedItemCount(687911821)
                                        .withPairingStatus("fsiarbutr")
                                        .withRole("pnazzm"))
                                .withLocation("unmpxttd")))
                .withNextLink("idybyxczf");
        model = BinaryData.fromObject(model).toObject(ProtectionContainerCollection.class);
        Assertions.assertEquals("heun", model.value().get(0).properties().fabricFriendlyName());
        Assertions.assertEquals("qhgyxzkonocukok", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("axuconuq", model.value().get(0).properties().fabricType());
        Assertions.assertEquals(1340074682, model.value().get(0).properties().protectedItemCount());
        Assertions.assertEquals("beypewrmjmw", model.value().get(0).properties().pairingStatus());
        Assertions.assertEquals("jektcxsenh", model.value().get(0).properties().role());
        Assertions.assertEquals("s", model.value().get(0).location());
        Assertions.assertEquals("idybyxczf", model.nextLink());
    }
}
