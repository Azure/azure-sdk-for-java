// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.DiskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaBlueReplicationDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InitialReplicationDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMNicDetails;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class HyperVReplicaBlueReplicationDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVReplicaBlueReplicationDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"HyperVReplica2012R2\",\"lastReplicatedTime\":\"2021-04-13T15:30:05Z\",\"vmNics\":[{\"nicId\":\"dr\",\"replicaNicId\":\"fcmkr\",\"sourceNicArmId\":\"sjcwjjxsgmbawvif\",\"vMNetworkName\":\"kecifhocjxwklo\",\"recoveryVMNetworkId\":\"rvtxvcmufunlc\",\"ipConfigs\":[],\"selectionType\":\"ir\",\"recoveryNetworkSecurityGroupId\":\"yngjgvrquvpygglp\",\"enableAcceleratedNetworkingOnRecovery\":true,\"tfoVMNetworkId\":\"cueljtiahxmfq\",\"tfoNetworkSecurityGroupId\":\"arvsx\",\"enableAcceleratedNetworkingOnTfo\":true,\"recoveryNicName\":\"lcjkayspthzodub\",\"recoveryNicResourceGroupName\":\"mjtgblioskkfmkm\",\"reuseExistingNic\":false,\"tfoRecoveryNicName\":\"yxgbkkqvjcteoedl\",\"tfoRecoveryNicResourceGroupName\":\"lskkzpxvj\",\"tfoReuseExistingNic\":true,\"targetNicName\":\"vocoj\"}],\"vmId\":\"cnabxzf\",\"vmProtectionState\":\"ggytexvzilmhivz\",\"vmProtectionStateDescription\":\"ww\",\"initialReplicationDetails\":{\"initialReplicationType\":\"nrzdajlskzptj\",\"initialReplicationProgressPercentage\":\"lwe\"},\"vMDiskDetails\":[{\"maxSizeMB\":369986620380074522,\"vhdType\":\"qlehmcgcjeinu\",\"vhdId\":\"oka\",\"vhdName\":\"fejvqn\"}]}")
                .toObject(HyperVReplicaBlueReplicationDetails.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-13T15:30:05Z"), model.lastReplicatedTime());
        Assertions.assertEquals("dr", model.vmNics().get(0).nicId());
        Assertions.assertEquals("fcmkr", model.vmNics().get(0).replicaNicId());
        Assertions.assertEquals("sjcwjjxsgmbawvif", model.vmNics().get(0).sourceNicArmId());
        Assertions.assertEquals("kecifhocjxwklo", model.vmNics().get(0).vMNetworkName());
        Assertions.assertEquals("rvtxvcmufunlc", model.vmNics().get(0).recoveryVMNetworkId());
        Assertions.assertEquals("ir", model.vmNics().get(0).selectionType());
        Assertions.assertEquals("yngjgvrquvpygglp", model.vmNics().get(0).recoveryNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.vmNics().get(0).enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("cueljtiahxmfq", model.vmNics().get(0).tfoVMNetworkId());
        Assertions.assertEquals("arvsx", model.vmNics().get(0).tfoNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.vmNics().get(0).enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("lcjkayspthzodub", model.vmNics().get(0).recoveryNicName());
        Assertions.assertEquals("mjtgblioskkfmkm", model.vmNics().get(0).recoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.vmNics().get(0).reuseExistingNic());
        Assertions.assertEquals("yxgbkkqvjcteoedl", model.vmNics().get(0).tfoRecoveryNicName());
        Assertions.assertEquals("lskkzpxvj", model.vmNics().get(0).tfoRecoveryNicResourceGroupName());
        Assertions.assertEquals(true, model.vmNics().get(0).tfoReuseExistingNic());
        Assertions.assertEquals("vocoj", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("cnabxzf", model.vmId());
        Assertions.assertEquals("ggytexvzilmhivz", model.vmProtectionState());
        Assertions.assertEquals("ww", model.vmProtectionStateDescription());
        Assertions.assertEquals("nrzdajlskzptj", model.initialReplicationDetails().initialReplicationType());
        Assertions.assertEquals("lwe", model.initialReplicationDetails().initialReplicationProgressPercentage());
        Assertions.assertEquals(369986620380074522L, model.vMDiskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("qlehmcgcjeinu", model.vMDiskDetails().get(0).vhdType());
        Assertions.assertEquals("oka", model.vMDiskDetails().get(0).vhdId());
        Assertions.assertEquals("fejvqn", model.vMDiskDetails().get(0).vhdName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVReplicaBlueReplicationDetails model =
            new HyperVReplicaBlueReplicationDetails()
                .withLastReplicatedTime(OffsetDateTime.parse("2021-04-13T15:30:05Z"))
                .withVmNics(
                    Arrays
                        .asList(
                            new VMNicDetails()
                                .withNicId("dr")
                                .withReplicaNicId("fcmkr")
                                .withSourceNicArmId("sjcwjjxsgmbawvif")
                                .withVMNetworkName("kecifhocjxwklo")
                                .withRecoveryVMNetworkId("rvtxvcmufunlc")
                                .withIpConfigs(Arrays.asList())
                                .withSelectionType("ir")
                                .withRecoveryNetworkSecurityGroupId("yngjgvrquvpygglp")
                                .withEnableAcceleratedNetworkingOnRecovery(true)
                                .withTfoVMNetworkId("cueljtiahxmfq")
                                .withTfoNetworkSecurityGroupId("arvsx")
                                .withEnableAcceleratedNetworkingOnTfo(true)
                                .withRecoveryNicName("lcjkayspthzodub")
                                .withRecoveryNicResourceGroupName("mjtgblioskkfmkm")
                                .withReuseExistingNic(false)
                                .withTfoRecoveryNicName("yxgbkkqvjcteoedl")
                                .withTfoRecoveryNicResourceGroupName("lskkzpxvj")
                                .withTfoReuseExistingNic(true)
                                .withTargetNicName("vocoj")))
                .withVmId("cnabxzf")
                .withVmProtectionState("ggytexvzilmhivz")
                .withVmProtectionStateDescription("ww")
                .withInitialReplicationDetails(
                    new InitialReplicationDetails()
                        .withInitialReplicationType("nrzdajlskzptj")
                        .withInitialReplicationProgressPercentage("lwe"))
                .withVMDiskDetails(
                    Arrays
                        .asList(
                            new DiskDetails()
                                .withMaxSizeMB(369986620380074522L)
                                .withVhdType("qlehmcgcjeinu")
                                .withVhdId("oka")
                                .withVhdName("fejvqn")));
        model = BinaryData.fromObject(model).toObject(HyperVReplicaBlueReplicationDetails.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-13T15:30:05Z"), model.lastReplicatedTime());
        Assertions.assertEquals("dr", model.vmNics().get(0).nicId());
        Assertions.assertEquals("fcmkr", model.vmNics().get(0).replicaNicId());
        Assertions.assertEquals("sjcwjjxsgmbawvif", model.vmNics().get(0).sourceNicArmId());
        Assertions.assertEquals("kecifhocjxwklo", model.vmNics().get(0).vMNetworkName());
        Assertions.assertEquals("rvtxvcmufunlc", model.vmNics().get(0).recoveryVMNetworkId());
        Assertions.assertEquals("ir", model.vmNics().get(0).selectionType());
        Assertions.assertEquals("yngjgvrquvpygglp", model.vmNics().get(0).recoveryNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.vmNics().get(0).enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("cueljtiahxmfq", model.vmNics().get(0).tfoVMNetworkId());
        Assertions.assertEquals("arvsx", model.vmNics().get(0).tfoNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.vmNics().get(0).enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("lcjkayspthzodub", model.vmNics().get(0).recoveryNicName());
        Assertions.assertEquals("mjtgblioskkfmkm", model.vmNics().get(0).recoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.vmNics().get(0).reuseExistingNic());
        Assertions.assertEquals("yxgbkkqvjcteoedl", model.vmNics().get(0).tfoRecoveryNicName());
        Assertions.assertEquals("lskkzpxvj", model.vmNics().get(0).tfoRecoveryNicResourceGroupName());
        Assertions.assertEquals(true, model.vmNics().get(0).tfoReuseExistingNic());
        Assertions.assertEquals("vocoj", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("cnabxzf", model.vmId());
        Assertions.assertEquals("ggytexvzilmhivz", model.vmProtectionState());
        Assertions.assertEquals("ww", model.vmProtectionStateDescription());
        Assertions.assertEquals("nrzdajlskzptj", model.initialReplicationDetails().initialReplicationType());
        Assertions.assertEquals("lwe", model.initialReplicationDetails().initialReplicationProgressPercentage());
        Assertions.assertEquals(369986620380074522L, model.vMDiskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("qlehmcgcjeinu", model.vMDiskDetails().get(0).vhdType());
        Assertions.assertEquals("oka", model.vMDiskDetails().get(0).vhdId());
        Assertions.assertEquals("fejvqn", model.vMDiskDetails().get(0).vhdName());
    }
}
