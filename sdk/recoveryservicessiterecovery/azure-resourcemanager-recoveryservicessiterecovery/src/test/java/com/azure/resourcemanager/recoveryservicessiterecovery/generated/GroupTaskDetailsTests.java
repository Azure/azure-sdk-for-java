// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AsrTask;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.GroupTaskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.TaskTypeDetails;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class GroupTaskDetailsTests {
    @Test
    public void testDeserialize() {
        GroupTaskDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"GroupTaskDetails\",\"childTasks\":[{\"taskId\":\"hewjptmcgsbost\",\"name\":\"lnd\",\"startTime\":\"2021-10-16T17:09:06Z\",\"endTime\":\"2021-11-08T13:33:16Z\",\"allowedActions\":[\"lbiojlvfhrb\",\"pn\",\"qvcww\",\"yurmochpprprs\"],\"friendlyName\":\"okayzejnhlbkp\",\"state\":\"pcpil\",\"stateDescription\":\"a\",\"taskType\":\"vechndbnwiehole\",\"customDetails\":{\"instanceType\":\"TaskTypeDetails\"},\"groupTaskCustomDetails\":{\"instanceType\":\"GroupTaskDetails\",\"childTasks\":[]},\"errors\":[]}]}")
                .toObject(GroupTaskDetails.class);
        Assertions.assertEquals("hewjptmcgsbost", model.childTasks().get(0).taskId());
        Assertions.assertEquals("lnd", model.childTasks().get(0).name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-16T17:09:06Z"), model.childTasks().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-08T13:33:16Z"), model.childTasks().get(0).endTime());
        Assertions.assertEquals("lbiojlvfhrb", model.childTasks().get(0).allowedActions().get(0));
        Assertions.assertEquals("okayzejnhlbkp", model.childTasks().get(0).friendlyName());
        Assertions.assertEquals("pcpil", model.childTasks().get(0).state());
        Assertions.assertEquals("a", model.childTasks().get(0).stateDescription());
        Assertions.assertEquals("vechndbnwiehole", model.childTasks().get(0).taskType());
    }

    @Test
    public void testSerialize() {
        GroupTaskDetails model =
            new GroupTaskDetails()
                .withChildTasks(
                    Arrays
                        .asList(
                            new AsrTask()
                                .withTaskId("hewjptmcgsbost")
                                .withName("lnd")
                                .withStartTime(OffsetDateTime.parse("2021-10-16T17:09:06Z"))
                                .withEndTime(OffsetDateTime.parse("2021-11-08T13:33:16Z"))
                                .withAllowedActions(Arrays.asList("lbiojlvfhrb", "pn", "qvcww", "yurmochpprprs"))
                                .withFriendlyName("okayzejnhlbkp")
                                .withState("pcpil")
                                .withStateDescription("a")
                                .withTaskType("vechndbnwiehole")
                                .withCustomDetails(new TaskTypeDetails())
                                .withGroupTaskCustomDetails(new GroupTaskDetails().withChildTasks(Arrays.asList()))
                                .withErrors(Arrays.asList())));
        model = BinaryData.fromObject(model).toObject(GroupTaskDetails.class);
        Assertions.assertEquals("hewjptmcgsbost", model.childTasks().get(0).taskId());
        Assertions.assertEquals("lnd", model.childTasks().get(0).name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-16T17:09:06Z"), model.childTasks().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-08T13:33:16Z"), model.childTasks().get(0).endTime());
        Assertions.assertEquals("lbiojlvfhrb", model.childTasks().get(0).allowedActions().get(0));
        Assertions.assertEquals("okayzejnhlbkp", model.childTasks().get(0).friendlyName());
        Assertions.assertEquals("pcpil", model.childTasks().get(0).state());
        Assertions.assertEquals("a", model.childTasks().get(0).stateDescription());
        Assertions.assertEquals("vechndbnwiehole", model.childTasks().get(0).taskType());
    }
}
