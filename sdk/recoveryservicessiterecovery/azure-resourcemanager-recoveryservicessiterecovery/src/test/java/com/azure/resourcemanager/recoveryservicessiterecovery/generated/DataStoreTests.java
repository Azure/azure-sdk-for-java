// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.DataStore;
import org.junit.jupiter.api.Assertions;

public final class DataStoreTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataStore model =
            BinaryData
                .fromString(
                    "{\"symbolicName\":\"knlejjjkxybwfd\",\"uuid\":\"jbzten\",\"capacity\":\"kzykjtjk\",\"freeSpace\":\"xfwush\",\"type\":\"pkupnq\"}")
                .toObject(DataStore.class);
        Assertions.assertEquals("knlejjjkxybwfd", model.symbolicName());
        Assertions.assertEquals("jbzten", model.uuid());
        Assertions.assertEquals("kzykjtjk", model.capacity());
        Assertions.assertEquals("xfwush", model.freeSpace());
        Assertions.assertEquals("pkupnq", model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataStore model =
            new DataStore()
                .withSymbolicName("knlejjjkxybwfd")
                .withUuid("jbzten")
                .withCapacity("kzykjtjk")
                .withFreeSpace("xfwush")
                .withType("pkupnq");
        model = BinaryData.fromObject(model).toObject(DataStore.class);
        Assertions.assertEquals("knlejjjkxybwfd", model.symbolicName());
        Assertions.assertEquals("jbzten", model.uuid());
        Assertions.assertEquals("kzykjtjk", model.capacity());
        Assertions.assertEquals("xfwush", model.freeSpace());
        Assertions.assertEquals("pkupnq", model.type());
    }
}
