// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.TestFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.TestFailoverInputProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.TestFailoverProviderSpecificInput;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class TestFailoverInputTests {
    @Test
    public void testDeserialize() {
        TestFailoverInput model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"failoverDirection\":\"ql\",\"networkType\":\"x\",\"networkId\":\"czheyd\",\"providerSpecificDetails\":{\"instanceType\":\"TestFailoverProviderSpecificInput\"}}}")
                .toObject(TestFailoverInput.class);
        Assertions.assertEquals("ql", model.properties().failoverDirection());
        Assertions.assertEquals("x", model.properties().networkType());
        Assertions.assertEquals("czheyd", model.properties().networkId());
    }

    @Test
    public void testSerialize() {
        TestFailoverInput model =
            new TestFailoverInput()
                .withProperties(
                    new TestFailoverInputProperties()
                        .withFailoverDirection("ql")
                        .withNetworkType("x")
                        .withNetworkId("czheyd")
                        .withProviderSpecificDetails(new TestFailoverProviderSpecificInput()));
        model = BinaryData.fromObject(model).toObject(TestFailoverInput.class);
        Assertions.assertEquals("ql", model.properties().failoverDirection());
        Assertions.assertEquals("x", model.properties().networkType());
        Assertions.assertEquals("czheyd", model.properties().networkId());
    }
}
