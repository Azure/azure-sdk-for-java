// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PossibleOperationsDirections;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanAction;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanActionDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanGroup;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanGroupType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProtectedItem;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationProtectedItemOperation;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.UpdateRecoveryPlanInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.UpdateRecoveryPlanInputProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UpdateRecoveryPlanInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateRecoveryPlanInput model = BinaryData.fromString(
            "{\"properties\":{\"groups\":[{\"groupType\":\"Failover\",\"replicationProtectedItems\":[{\"id\":\"kfqlwx\",\"virtualMachineId\":\"ykalsyga\"},{\"id\":\"njpnnbmj\",\"virtualMachineId\":\"ibjgsjjxxahm\"},{\"id\":\"ad\",\"virtualMachineId\":\"qegxyivpin\"},{\"id\":\"hwbjijkgqxnhmbk\",\"virtualMachineId\":\"njaujvaan\"}],\"startGroupActions\":[{\"actionName\":\"iycwkdta\",\"failoverTypes\":[\"ChangePit\",\"CompleteMigration\",\"ReverseReplicate\"],\"failoverDirections\":[\"PrimaryToRecovery\",\"RecoveryToPrimary\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"umrrqmbzm\",\"failoverTypes\":[\"ChangePit\",\"UnplannedFailover\",\"FinalizeFailback\"],\"failoverDirections\":[\"RecoveryToPrimary\",\"PrimaryToRecovery\",\"RecoveryToPrimary\",\"PrimaryToRecovery\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"jsi\",\"failoverTypes\":[\"CompleteMigration\",\"DisableProtection\",\"TestFailover\"],\"failoverDirections\":[\"RecoveryToPrimary\",\"PrimaryToRecovery\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"sokdgoge\",\"failoverTypes\":[\"ReverseReplicate\",\"CompleteMigration\",\"DisableProtection\",\"TestFailoverCleanup\"],\"failoverDirections\":[\"PrimaryToRecovery\",\"RecoveryToPrimary\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"ozkyewnfnzh\",\"failoverTypes\":[\"UnplannedFailover\",\"ChangePit\"],\"failoverDirections\":[\"RecoveryToPrimary\",\"RecoveryToPrimary\",\"RecoveryToPrimary\",\"RecoveryToPrimary\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]}]}}")
            .toObject(UpdateRecoveryPlanInput.class);
        Assertions.assertEquals(RecoveryPlanGroupType.FAILOVER, model.properties().groups().get(0).groupType());
        Assertions.assertEquals("kfqlwx", model.properties().groups().get(0).replicationProtectedItems().get(0).id());
        Assertions.assertEquals("ykalsyga",
            model.properties().groups().get(0).replicationProtectedItems().get(0).virtualMachineId());
        Assertions.assertEquals("iycwkdta", model.properties().groups().get(0).startGroupActions().get(0).actionName());
        Assertions.assertEquals(ReplicationProtectedItemOperation.CHANGE_PIT,
            model.properties().groups().get(0).startGroupActions().get(0).failoverTypes().get(0));
        Assertions.assertEquals(PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
            model.properties().groups().get(0).startGroupActions().get(0).failoverDirections().get(0));
        Assertions.assertEquals("ozkyewnfnzh",
            model.properties().groups().get(0).endGroupActions().get(0).actionName());
        Assertions.assertEquals(ReplicationProtectedItemOperation.UNPLANNED_FAILOVER,
            model.properties().groups().get(0).endGroupActions().get(0).failoverTypes().get(0));
        Assertions.assertEquals(PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
            model.properties().groups().get(0).endGroupActions().get(0).failoverDirections().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateRecoveryPlanInput model = new UpdateRecoveryPlanInput()
            .withProperties(new UpdateRecoveryPlanInputProperties().withGroups(Arrays.asList(new RecoveryPlanGroup()
                .withGroupType(RecoveryPlanGroupType.FAILOVER)
                .withReplicationProtectedItems(
                    Arrays.asList(new RecoveryPlanProtectedItem().withId("kfqlwx").withVirtualMachineId("ykalsyga"),
                        new RecoveryPlanProtectedItem().withId("njpnnbmj").withVirtualMachineId("ibjgsjjxxahm"),
                        new RecoveryPlanProtectedItem().withId("ad").withVirtualMachineId("qegxyivpin"),
                        new RecoveryPlanProtectedItem().withId("hwbjijkgqxnhmbk").withVirtualMachineId("njaujvaan")))
                .withStartGroupActions(Arrays.asList(
                    new RecoveryPlanAction().withActionName("iycwkdta")
                        .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.CHANGE_PIT,
                            ReplicationProtectedItemOperation.COMPLETE_MIGRATION,
                            ReplicationProtectedItemOperation.REVERSE_REPLICATE))
                        .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                            PossibleOperationsDirections.RECOVERY_TO_PRIMARY))
                        .withCustomDetails(new RecoveryPlanActionDetails()),
                    new RecoveryPlanAction().withActionName("umrrqmbzm")
                        .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.CHANGE_PIT,
                            ReplicationProtectedItemOperation.UNPLANNED_FAILOVER,
                            ReplicationProtectedItemOperation.FINALIZE_FAILBACK))
                        .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                            PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY))
                        .withCustomDetails(new RecoveryPlanActionDetails()),
                    new RecoveryPlanAction().withActionName("jsi")
                        .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.COMPLETE_MIGRATION,
                            ReplicationProtectedItemOperation.DISABLE_PROTECTION,
                            ReplicationProtectedItemOperation.TEST_FAILOVER))
                        .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY))
                        .withCustomDetails(new RecoveryPlanActionDetails()),
                    new RecoveryPlanAction().withActionName("sokdgoge")
                        .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.REVERSE_REPLICATE,
                            ReplicationProtectedItemOperation.COMPLETE_MIGRATION,
                            ReplicationProtectedItemOperation.DISABLE_PROTECTION,
                            ReplicationProtectedItemOperation.TEST_FAILOVER_CLEANUP))
                        .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                            PossibleOperationsDirections.RECOVERY_TO_PRIMARY))
                        .withCustomDetails(new RecoveryPlanActionDetails())))
                .withEndGroupActions(Arrays.asList(new RecoveryPlanAction().withActionName("ozkyewnfnzh")
                    .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.UNPLANNED_FAILOVER,
                        ReplicationProtectedItemOperation.CHANGE_PIT))
                    .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                        PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                        PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                        PossibleOperationsDirections.RECOVERY_TO_PRIMARY))
                    .withCustomDetails(new RecoveryPlanActionDetails()))))));
        model = BinaryData.fromObject(model).toObject(UpdateRecoveryPlanInput.class);
        Assertions.assertEquals(RecoveryPlanGroupType.FAILOVER, model.properties().groups().get(0).groupType());
        Assertions.assertEquals("kfqlwx", model.properties().groups().get(0).replicationProtectedItems().get(0).id());
        Assertions.assertEquals("ykalsyga",
            model.properties().groups().get(0).replicationProtectedItems().get(0).virtualMachineId());
        Assertions.assertEquals("iycwkdta", model.properties().groups().get(0).startGroupActions().get(0).actionName());
        Assertions.assertEquals(ReplicationProtectedItemOperation.CHANGE_PIT,
            model.properties().groups().get(0).startGroupActions().get(0).failoverTypes().get(0));
        Assertions.assertEquals(PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
            model.properties().groups().get(0).startGroupActions().get(0).failoverDirections().get(0));
        Assertions.assertEquals("ozkyewnfnzh",
            model.properties().groups().get(0).endGroupActions().get(0).actionName());
        Assertions.assertEquals(ReplicationProtectedItemOperation.UNPLANNED_FAILOVER,
            model.properties().groups().get(0).endGroupActions().get(0).failoverTypes().get(0));
        Assertions.assertEquals(PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
            model.properties().groups().get(0).endGroupActions().get(0).failoverDirections().get(0));
    }
}
