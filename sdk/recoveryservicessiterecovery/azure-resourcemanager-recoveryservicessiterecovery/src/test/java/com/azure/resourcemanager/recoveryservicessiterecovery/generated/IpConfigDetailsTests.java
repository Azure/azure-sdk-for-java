// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IpConfigDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IpConfigDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpConfigDetails model = BinaryData.fromString(
            "{\"name\":\"gnaavu\",\"isPrimary\":false,\"subnetName\":\"etaoutnpdc\",\"staticIPAddress\":\"hspfefyihd\",\"ipAddressType\":\"euyldphmt\",\"isSeletedForFailover\":true,\"recoverySubnetName\":\"gsut\",\"recoveryStaticIPAddress\":\"llnmwyn\",\"recoveryIPAddressType\":\"x\",\"recoveryPublicIPAddressId\":\"lf\",\"recoveryLBBackendAddressPoolIds\":[\"txtjrrlkmds\",\"jhhxdlajf\",\"xcxscvslxlh\",\"a\"],\"tfoSubnetName\":\"rmukmyjmkxett\",\"tfoStaticIPAddress\":\"lojfkqidnqto\",\"tfoPublicIPAddressId\":\"jhqxc\",\"tfoLBBackendAddressPoolIds\":[\"tkbtnqlrngl\",\"mbiipsnawwlqk\"]}")
            .toObject(IpConfigDetails.class);
        Assertions.assertEquals("gnaavu", model.name());
        Assertions.assertFalse(model.isPrimary());
        Assertions.assertEquals("etaoutnpdc", model.subnetName());
        Assertions.assertEquals("hspfefyihd", model.staticIpAddress());
        Assertions.assertEquals("euyldphmt", model.ipAddressType());
        Assertions.assertTrue(model.isSeletedForFailover());
        Assertions.assertEquals("gsut", model.recoverySubnetName());
        Assertions.assertEquals("llnmwyn", model.recoveryStaticIpAddress());
        Assertions.assertEquals("x", model.recoveryIpAddressType());
        Assertions.assertEquals("lf", model.recoveryPublicIpAddressId());
        Assertions.assertEquals("txtjrrlkmds", model.recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("rmukmyjmkxett", model.tfoSubnetName());
        Assertions.assertEquals("lojfkqidnqto", model.tfoStaticIpAddress());
        Assertions.assertEquals("jhqxc", model.tfoPublicIpAddressId());
        Assertions.assertEquals("tkbtnqlrngl", model.tfoLBBackendAddressPoolIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpConfigDetails model = new IpConfigDetails().withName("gnaavu")
            .withIsPrimary(false)
            .withSubnetName("etaoutnpdc")
            .withStaticIpAddress("hspfefyihd")
            .withIpAddressType("euyldphmt")
            .withIsSeletedForFailover(true)
            .withRecoverySubnetName("gsut")
            .withRecoveryStaticIpAddress("llnmwyn")
            .withRecoveryIpAddressType("x")
            .withRecoveryPublicIpAddressId("lf")
            .withRecoveryLBBackendAddressPoolIds(Arrays.asList("txtjrrlkmds", "jhhxdlajf", "xcxscvslxlh", "a"))
            .withTfoSubnetName("rmukmyjmkxett")
            .withTfoStaticIpAddress("lojfkqidnqto")
            .withTfoPublicIpAddressId("jhqxc")
            .withTfoLBBackendAddressPoolIds(Arrays.asList("tkbtnqlrngl", "mbiipsnawwlqk"));
        model = BinaryData.fromObject(model).toObject(IpConfigDetails.class);
        Assertions.assertEquals("gnaavu", model.name());
        Assertions.assertFalse(model.isPrimary());
        Assertions.assertEquals("etaoutnpdc", model.subnetName());
        Assertions.assertEquals("hspfefyihd", model.staticIpAddress());
        Assertions.assertEquals("euyldphmt", model.ipAddressType());
        Assertions.assertTrue(model.isSeletedForFailover());
        Assertions.assertEquals("gsut", model.recoverySubnetName());
        Assertions.assertEquals("llnmwyn", model.recoveryStaticIpAddress());
        Assertions.assertEquals("x", model.recoveryIpAddressType());
        Assertions.assertEquals("lf", model.recoveryPublicIpAddressId());
        Assertions.assertEquals("txtjrrlkmds", model.recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("rmukmyjmkxett", model.tfoSubnetName());
        Assertions.assertEquals("lojfkqidnqto", model.tfoStaticIpAddress());
        Assertions.assertEquals("jhqxc", model.tfoPublicIpAddressId());
        Assertions.assertEquals("tkbtnqlrngl", model.tfoLBBackendAddressPoolIds().get(0));
    }
}
