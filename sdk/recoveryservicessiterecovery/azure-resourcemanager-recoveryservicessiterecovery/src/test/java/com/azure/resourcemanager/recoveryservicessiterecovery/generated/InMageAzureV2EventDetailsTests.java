// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageAzureV2EventDetails;
import org.junit.jupiter.api.Assertions;

public final class InMageAzureV2EventDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageAzureV2EventDetails model = BinaryData.fromString(
            "{\"instanceType\":\"InMageAzureV2\",\"eventType\":\"jgcf\",\"category\":\"xtbw\",\"component\":\"irmu\",\"correctiveAction\":\"gftt\",\"details\":\"ofgeoagf\",\"summary\":\"ftnxodwxmdajwiy\",\"siteName\":\"gsevmdm\"}")
            .toObject(InMageAzureV2EventDetails.class);
        Assertions.assertEquals("jgcf", model.eventType());
        Assertions.assertEquals("xtbw", model.category());
        Assertions.assertEquals("irmu", model.component());
        Assertions.assertEquals("gftt", model.correctiveAction());
        Assertions.assertEquals("ofgeoagf", model.details());
        Assertions.assertEquals("ftnxodwxmdajwiy", model.summary());
        Assertions.assertEquals("gsevmdm", model.siteName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageAzureV2EventDetails model = new InMageAzureV2EventDetails().withEventType("jgcf")
            .withCategory("xtbw")
            .withComponent("irmu")
            .withCorrectiveAction("gftt")
            .withDetails("ofgeoagf")
            .withSummary("ftnxodwxmdajwiy")
            .withSiteName("gsevmdm");
        model = BinaryData.fromObject(model).toObject(InMageAzureV2EventDetails.class);
        Assertions.assertEquals("jgcf", model.eventType());
        Assertions.assertEquals("xtbw", model.category());
        Assertions.assertEquals("irmu", model.component());
        Assertions.assertEquals("gftt", model.correctiveAction());
        Assertions.assertEquals("ofgeoagf", model.details());
        Assertions.assertEquals("ftnxodwxmdajwiy", model.summary());
        Assertions.assertEquals("gsevmdm", model.siteName());
    }
}
