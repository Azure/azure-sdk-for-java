// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageAzureV2EventDetails;
import org.junit.jupiter.api.Assertions;

public final class InMageAzureV2EventDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageAzureV2EventDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"InMageAzureV2\",\"eventType\":\"fhaxttpf\",\"category\":\"wgsghqucumldd\",\"component\":\"qm\",\"correctiveAction\":\"feothxu\",\"details\":\"igrjdljlkqhvkrbz\",\"summary\":\"astax\",\"siteName\":\"pruulhg\"}")
                .toObject(InMageAzureV2EventDetails.class);
        Assertions.assertEquals("fhaxttpf", model.eventType());
        Assertions.assertEquals("wgsghqucumldd", model.category());
        Assertions.assertEquals("qm", model.component());
        Assertions.assertEquals("feothxu", model.correctiveAction());
        Assertions.assertEquals("igrjdljlkqhvkrbz", model.details());
        Assertions.assertEquals("astax", model.summary());
        Assertions.assertEquals("pruulhg", model.siteName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageAzureV2EventDetails model =
            new InMageAzureV2EventDetails()
                .withEventType("fhaxttpf")
                .withCategory("wgsghqucumldd")
                .withComponent("qm")
                .withCorrectiveAction("feothxu")
                .withDetails("igrjdljlkqhvkrbz")
                .withSummary("astax")
                .withSiteName("pruulhg");
        model = BinaryData.fromObject(model).toObject(InMageAzureV2EventDetails.class);
        Assertions.assertEquals("fhaxttpf", model.eventType());
        Assertions.assertEquals("wgsghqucumldd", model.category());
        Assertions.assertEquals("qm", model.component());
        Assertions.assertEquals("feothxu", model.correctiveAction());
        Assertions.assertEquals("igrjdljlkqhvkrbz", model.details());
        Assertions.assertEquals("astax", model.summary());
        Assertions.assertEquals("pruulhg", model.siteName());
    }
}
