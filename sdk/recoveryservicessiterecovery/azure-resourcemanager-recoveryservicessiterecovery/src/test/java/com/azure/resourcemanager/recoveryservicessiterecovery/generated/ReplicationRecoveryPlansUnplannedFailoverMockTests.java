// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicessiterecovery.SiteRecoveryManager;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PossibleOperationsDirections;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlan;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanGroupType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProviderSpecificFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanUnplannedFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanUnplannedFailoverInputProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SourceSiteOperations;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReplicationRecoveryPlansUnplannedFailoverMockTests {
    @Test
    public void testUnplannedFailover() throws Exception {
        String responseStr
            = "{\"properties\":{\"friendlyName\":\"lazfjltckbjvdxh\",\"primaryFabricId\":\"vqtdex\",\"primaryFabricFriendlyName\":\"zpxalkqlvbkz\",\"recoveryFabricId\":\"yrnww\",\"recoveryFabricFriendlyName\":\"viniyoizuwwzc\",\"failoverDeploymentModel\":\"gbj\",\"replicationProviders\":[\"nqalbs\",\"qxajsiueaibqjbi\",\"bwxuypcuriwll\"],\"allowedOperations\":[\"lveqdqtzshwlw\"],\"lastPlannedFailoverTime\":\"2021-11-24T20:21:45Z\",\"lastUnplannedFailoverTime\":\"2021-11-30T04:05:24Z\",\"lastTestFailoverTime\":\"2021-01-22T01:14:16Z\",\"currentScenario\":{\"scenarioName\":\"hhcmqdlkkwbdekbv\",\"jobId\":\"lmk\",\"startTime\":\"2021-07-26T23:00:24Z\"},\"currentScenarioStatus\":\"xbssatpialr\",\"currentScenarioStatusDescription\":\"wcxxccf\",\"groups\":[{\"groupType\":\"Failover\",\"replicationProtectedItems\":[{},{},{}],\"startGroupActions\":[{\"actionName\":\"vrexitpzri\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"nosclujywwumbus\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"bncljkhmso\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"uahokiclrmmudv\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]}],\"providerSpecificDetails\":[{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"}]},\"location\":\"scidkwzn\",\"id\":\"ttlizdoys\",\"name\":\"z\",\"type\":\"bogdj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SiteRecoveryManager manager = SiteRecoveryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        RecoveryPlan response = manager.replicationRecoveryPlans()
            .unplannedFailover("jcglvobctit", "xrbalvkfdq", "lprqhxfq",
                new RecoveryPlanUnplannedFailoverInput()
                    .withProperties(new RecoveryPlanUnplannedFailoverInputProperties()
                        .withFailoverDirection(PossibleOperationsDirections.PRIMARY_TO_RECOVERY)
                        .withSourceSiteOperations(SourceSiteOperations.NOT_REQUIRED)
                        .withProviderSpecificDetails(Arrays.asList(new RecoveryPlanProviderSpecificFailoverInput(),
                            new RecoveryPlanProviderSpecificFailoverInput(),
                            new RecoveryPlanProviderSpecificFailoverInput()))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("lazfjltckbjvdxh", response.properties().friendlyName());
        Assertions.assertEquals("vqtdex", response.properties().primaryFabricId());
        Assertions.assertEquals("zpxalkqlvbkz", response.properties().primaryFabricFriendlyName());
        Assertions.assertEquals("yrnww", response.properties().recoveryFabricId());
        Assertions.assertEquals("viniyoizuwwzc", response.properties().recoveryFabricFriendlyName());
        Assertions.assertEquals("gbj", response.properties().failoverDeploymentModel());
        Assertions.assertEquals("nqalbs", response.properties().replicationProviders().get(0));
        Assertions.assertEquals("lveqdqtzshwlw", response.properties().allowedOperations().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-24T20:21:45Z"),
            response.properties().lastPlannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-30T04:05:24Z"),
            response.properties().lastUnplannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-22T01:14:16Z"),
            response.properties().lastTestFailoverTime());
        Assertions.assertEquals("hhcmqdlkkwbdekbv", response.properties().currentScenario().scenarioName());
        Assertions.assertEquals("lmk", response.properties().currentScenario().jobId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-26T23:00:24Z"),
            response.properties().currentScenario().startTime());
        Assertions.assertEquals("xbssatpialr", response.properties().currentScenarioStatus());
        Assertions.assertEquals("wcxxccf", response.properties().currentScenarioStatusDescription());
        Assertions.assertEquals(RecoveryPlanGroupType.FAILOVER, response.properties().groups().get(0).groupType());
        Assertions.assertEquals("vrexitpzri",
            response.properties().groups().get(0).startGroupActions().get(0).actionName());
        Assertions.assertEquals("bncljkhmso",
            response.properties().groups().get(0).endGroupActions().get(0).actionName());
        Assertions.assertEquals("scidkwzn", response.location());
    }
}
