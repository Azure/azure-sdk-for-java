// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.OSVersionWrapper;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SupportedOSDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SupportedOSDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SupportedOSDetails model = BinaryData.fromString(
            "{\"osName\":\"izfavkjzwf\",\"osType\":\"yay\",\"osVersions\":[{\"version\":\"zs\",\"servicePack\":\"wxrzxmdewsrsxkrp\"},{\"version\":\"jazejwwviyoyp\",\"servicePack\":\"hbrnnhjx\"}]}")
            .toObject(SupportedOSDetails.class);
        Assertions.assertEquals("izfavkjzwf", model.osName());
        Assertions.assertEquals("yay", model.osType());
        Assertions.assertEquals("zs", model.osVersions().get(0).version());
        Assertions.assertEquals("wxrzxmdewsrsxkrp", model.osVersions().get(0).servicePack());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SupportedOSDetails model = new SupportedOSDetails().withOsName("izfavkjzwf").withOsType("yay")
            .withOsVersions(Arrays.asList(new OSVersionWrapper().withVersion("zs").withServicePack("wxrzxmdewsrsxkrp"),
                new OSVersionWrapper().withVersion("jazejwwviyoyp").withServicePack("hbrnnhjx")));
        model = BinaryData.fromObject(model).toObject(SupportedOSDetails.class);
        Assertions.assertEquals("izfavkjzwf", model.osName());
        Assertions.assertEquals("yay", model.osType());
        Assertions.assertEquals("zs", model.osVersions().get(0).version());
        Assertions.assertEquals("wxrzxmdewsrsxkrp", model.osVersions().get(0).servicePack());
    }
}
