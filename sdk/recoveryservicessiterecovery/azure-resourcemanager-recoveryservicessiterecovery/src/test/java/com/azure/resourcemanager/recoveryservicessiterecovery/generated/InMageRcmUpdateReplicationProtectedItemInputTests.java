// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageRcmNicInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageRcmUpdateReplicationProtectedItemInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.LicenseType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class InMageRcmUpdateReplicationProtectedItemInputTests {
    @Test
    public void testDeserialize() {
        InMageRcmUpdateReplicationProtectedItemInput model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"InMageRcm\",\"targetVmName\":\"wtdrcwg\",\"targetVmSize\":\"ll\",\"targetResourceGroupId\":\"lhhfi\",\"targetAvailabilitySetId\":\"cfculzj\",\"targetAvailabilityZone\":\"hp\",\"targetProximityPlacementGroupId\":\"wvyldqpzf\",\"targetBootDiagnosticsStorageAccountId\":\"soxinu\",\"targetNetworkId\":\"lzkdrocqsxy\",\"testNetworkId\":\"qtcmiwdwisv\",\"vmNics\":[{\"nicId\":\"ylajam\",\"isPrimaryNic\":\"ajyhftpzc\",\"isSelectedForFailover\":\"yklleynqanhkiggl\",\"targetSubnetName\":\"walhvubh\",\"targetStaticIPAddress\":\"phetxdqc\",\"testSubnetName\":\"cta\",\"testStaticIPAddress\":\"zjv\"},{\"nicId\":\"lecxbibiwks\",\"isPrimaryNic\":\"egyxsbfpzvoik\",\"isSelectedForFailover\":\"twczf\",\"targetSubnetName\":\"ushlcxpblalh\",\"targetStaticIPAddress\":\"zpfkis\",\"testSubnetName\":\"idqzsaaoqdsgpto\",\"testStaticIPAddress\":\"jq\"},{\"nicId\":\"ia\",\"isPrimaryNic\":\"cnlrt\",\"isSelectedForFailover\":\"ijzzcaoijolbuauk\",\"targetSubnetName\":\"ieopexelxqdwr\",\"targetStaticIPAddress\":\"yil\",\"testSubnetName\":\"ibkgxyxyau\",\"testStaticIPAddress\":\"eddobmcnltm\"},{\"nicId\":\"ytkujsq\",\"isPrimaryNic\":\"cm\",\"isSelectedForFailover\":\"xfabl\",\"targetSubnetName\":\"pwbmwhria\",\"targetStaticIPAddress\":\"wrycgnwpl\",\"testSubnetName\":\"bphct\",\"testStaticIPAddress\":\"bibticuhqvum\"}],\"licenseType\":\"NotSpecified\"}")
                .toObject(InMageRcmUpdateReplicationProtectedItemInput.class);
        Assertions.assertEquals("wtdrcwg", model.targetVmName());
        Assertions.assertEquals("ll", model.targetVmSize());
        Assertions.assertEquals("lhhfi", model.targetResourceGroupId());
        Assertions.assertEquals("cfculzj", model.targetAvailabilitySetId());
        Assertions.assertEquals("hp", model.targetAvailabilityZone());
        Assertions.assertEquals("wvyldqpzf", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("soxinu", model.targetBootDiagnosticsStorageAccountId());
        Assertions.assertEquals("lzkdrocqsxy", model.targetNetworkId());
        Assertions.assertEquals("qtcmiwdwisv", model.testNetworkId());
        Assertions.assertEquals("ylajam", model.vmNics().get(0).nicId());
        Assertions.assertEquals("ajyhftpzc", model.vmNics().get(0).isPrimaryNic());
        Assertions.assertEquals("yklleynqanhkiggl", model.vmNics().get(0).isSelectedForFailover());
        Assertions.assertEquals("walhvubh", model.vmNics().get(0).targetSubnetName());
        Assertions.assertEquals("phetxdqc", model.vmNics().get(0).targetStaticIpAddress());
        Assertions.assertEquals("cta", model.vmNics().get(0).testSubnetName());
        Assertions.assertEquals("zjv", model.vmNics().get(0).testStaticIpAddress());
        Assertions.assertEquals(LicenseType.NOT_SPECIFIED, model.licenseType());
    }

    @Test
    public void testSerialize() {
        InMageRcmUpdateReplicationProtectedItemInput model =
            new InMageRcmUpdateReplicationProtectedItemInput()
                .withTargetVmName("wtdrcwg")
                .withTargetVmSize("ll")
                .withTargetResourceGroupId("lhhfi")
                .withTargetAvailabilitySetId("cfculzj")
                .withTargetAvailabilityZone("hp")
                .withTargetProximityPlacementGroupId("wvyldqpzf")
                .withTargetBootDiagnosticsStorageAccountId("soxinu")
                .withTargetNetworkId("lzkdrocqsxy")
                .withTestNetworkId("qtcmiwdwisv")
                .withVmNics(
                    Arrays
                        .asList(
                            new InMageRcmNicInput()
                                .withNicId("ylajam")
                                .withIsPrimaryNic("ajyhftpzc")
                                .withIsSelectedForFailover("yklleynqanhkiggl")
                                .withTargetSubnetName("walhvubh")
                                .withTargetStaticIpAddress("phetxdqc")
                                .withTestSubnetName("cta")
                                .withTestStaticIpAddress("zjv"),
                            new InMageRcmNicInput()
                                .withNicId("lecxbibiwks")
                                .withIsPrimaryNic("egyxsbfpzvoik")
                                .withIsSelectedForFailover("twczf")
                                .withTargetSubnetName("ushlcxpblalh")
                                .withTargetStaticIpAddress("zpfkis")
                                .withTestSubnetName("idqzsaaoqdsgpto")
                                .withTestStaticIpAddress("jq"),
                            new InMageRcmNicInput()
                                .withNicId("ia")
                                .withIsPrimaryNic("cnlrt")
                                .withIsSelectedForFailover("ijzzcaoijolbuauk")
                                .withTargetSubnetName("ieopexelxqdwr")
                                .withTargetStaticIpAddress("yil")
                                .withTestSubnetName("ibkgxyxyau")
                                .withTestStaticIpAddress("eddobmcnltm"),
                            new InMageRcmNicInput()
                                .withNicId("ytkujsq")
                                .withIsPrimaryNic("cm")
                                .withIsSelectedForFailover("xfabl")
                                .withTargetSubnetName("pwbmwhria")
                                .withTargetStaticIpAddress("wrycgnwpl")
                                .withTestSubnetName("bphct")
                                .withTestStaticIpAddress("bibticuhqvum")))
                .withLicenseType(LicenseType.NOT_SPECIFIED);
        model = BinaryData.fromObject(model).toObject(InMageRcmUpdateReplicationProtectedItemInput.class);
        Assertions.assertEquals("wtdrcwg", model.targetVmName());
        Assertions.assertEquals("ll", model.targetVmSize());
        Assertions.assertEquals("lhhfi", model.targetResourceGroupId());
        Assertions.assertEquals("cfculzj", model.targetAvailabilitySetId());
        Assertions.assertEquals("hp", model.targetAvailabilityZone());
        Assertions.assertEquals("wvyldqpzf", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("soxinu", model.targetBootDiagnosticsStorageAccountId());
        Assertions.assertEquals("lzkdrocqsxy", model.targetNetworkId());
        Assertions.assertEquals("qtcmiwdwisv", model.testNetworkId());
        Assertions.assertEquals("ylajam", model.vmNics().get(0).nicId());
        Assertions.assertEquals("ajyhftpzc", model.vmNics().get(0).isPrimaryNic());
        Assertions.assertEquals("yklleynqanhkiggl", model.vmNics().get(0).isSelectedForFailover());
        Assertions.assertEquals("walhvubh", model.vmNics().get(0).targetSubnetName());
        Assertions.assertEquals("phetxdqc", model.vmNics().get(0).targetStaticIpAddress());
        Assertions.assertEquals("cta", model.vmNics().get(0).testSubnetName());
        Assertions.assertEquals("zjv", model.vmNics().get(0).testStaticIpAddress());
        Assertions.assertEquals(LicenseType.NOT_SPECIFIED, model.licenseType());
    }
}
