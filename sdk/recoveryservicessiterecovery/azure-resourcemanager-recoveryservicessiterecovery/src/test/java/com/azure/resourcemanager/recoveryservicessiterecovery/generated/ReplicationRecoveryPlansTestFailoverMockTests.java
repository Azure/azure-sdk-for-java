// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicessiterecovery.SiteRecoveryManager;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PossibleOperationsDirections;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlan;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanGroupType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProviderSpecificFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanTestFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanTestFailoverInputProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReplicationRecoveryPlansTestFailoverMockTests {
    @Test
    public void testTestFailover() throws Exception {
        String responseStr
            = "{\"properties\":{\"friendlyName\":\"lswlxdknxctglzb\",\"primaryFabricId\":\"dfsg\",\"primaryFabricFriendlyName\":\"gyiw\",\"recoveryFabricId\":\"judxzfvna\",\"recoveryFabricFriendlyName\":\"ffch\",\"failoverDeploymentModel\":\"iyevjeht\",\"replicationProviders\":[\"oxxsehflfmabpyzx\",\"plphfstvurtk\"],\"allowedOperations\":[\"yvaxwzbwxx\"],\"lastPlannedFailoverTime\":\"2021-06-08T06:09:35Z\",\"lastUnplannedFailoverTime\":\"2021-07-08T21:07:26Z\",\"lastTestFailoverTime\":\"2021-07-01T16:52:44Z\",\"currentScenario\":{\"scenarioName\":\"ryrbbedrnrjzzuim\",\"jobId\":\"ybmybtihc\",\"startTime\":\"2021-11-25T04:10:05Z\"},\"currentScenarioStatus\":\"bik\",\"currentScenarioStatusDescription\":\"vqqor\",\"groups\":[{\"groupType\":\"Boot\",\"replicationProtectedItems\":[{},{},{}],\"startGroupActions\":[{\"actionName\":\"jcemia\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"ichhxqnlmjvpmsd\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"w\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"hwou\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"ysrmkkzjsn\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]},{\"groupType\":\"Failover\",\"replicationProtectedItems\":[{},{},{},{}],\"startGroupActions\":[{\"actionName\":\"ayxpdzvgyujkxjg\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"jzdbi\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"itramudyrsirn\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"ddvbxqxolixfelsr\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]},{\"groupType\":\"Failover\",\"replicationProtectedItems\":[{}],\"startGroupActions\":[{\"actionName\":\"yfktbayhasnja\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"kiyzlkqyez\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"krdfd\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"sofuxyst\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"tkqvi\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]},{\"groupType\":\"Failover\",\"replicationProtectedItems\":[{},{},{},{}],\"startGroupActions\":[{\"actionName\":\"jfw\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"ubfgoqvzbu\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"doqbruxlxptxhe\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"nkzjtrjawpz\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]}],\"providerSpecificDetails\":[{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"}]},\"location\":\"ixpkr\",\"id\":\"gznacmkwcyelj\",\"name\":\"iadgzxb\",\"type\":\"nyy\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SiteRecoveryManager manager = SiteRecoveryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        RecoveryPlan response = manager.replicationRecoveryPlans()
            .testFailover("dxgdjudek", "xh", "zmehcdfdxthqnz",
                new RecoveryPlanTestFailoverInput().withProperties(new RecoveryPlanTestFailoverInputProperties()
                    .withFailoverDirection(PossibleOperationsDirections.RECOVERY_TO_PRIMARY)
                    .withNetworkType("ki")
                    .withNetworkId("edijdhzkwvuewe")
                    .withProviderSpecificDetails(Arrays.asList(new RecoveryPlanProviderSpecificFailoverInput(),
                        new RecoveryPlanProviderSpecificFailoverInput(),
                        new RecoveryPlanProviderSpecificFailoverInput(),
                        new RecoveryPlanProviderSpecificFailoverInput()))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("lswlxdknxctglzb", response.properties().friendlyName());
        Assertions.assertEquals("dfsg", response.properties().primaryFabricId());
        Assertions.assertEquals("gyiw", response.properties().primaryFabricFriendlyName());
        Assertions.assertEquals("judxzfvna", response.properties().recoveryFabricId());
        Assertions.assertEquals("ffch", response.properties().recoveryFabricFriendlyName());
        Assertions.assertEquals("iyevjeht", response.properties().failoverDeploymentModel());
        Assertions.assertEquals("oxxsehflfmabpyzx", response.properties().replicationProviders().get(0));
        Assertions.assertEquals("yvaxwzbwxx", response.properties().allowedOperations().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-08T06:09:35Z"),
            response.properties().lastPlannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-08T21:07:26Z"),
            response.properties().lastUnplannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-01T16:52:44Z"),
            response.properties().lastTestFailoverTime());
        Assertions.assertEquals("ryrbbedrnrjzzuim", response.properties().currentScenario().scenarioName());
        Assertions.assertEquals("ybmybtihc", response.properties().currentScenario().jobId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-25T04:10:05Z"),
            response.properties().currentScenario().startTime());
        Assertions.assertEquals("bik", response.properties().currentScenarioStatus());
        Assertions.assertEquals("vqqor", response.properties().currentScenarioStatusDescription());
        Assertions.assertEquals(RecoveryPlanGroupType.BOOT, response.properties().groups().get(0).groupType());
        Assertions.assertEquals("jcemia",
            response.properties().groups().get(0).startGroupActions().get(0).actionName());
        Assertions.assertEquals("w", response.properties().groups().get(0).endGroupActions().get(0).actionName());
        Assertions.assertEquals("ixpkr", response.location());
    }
}
