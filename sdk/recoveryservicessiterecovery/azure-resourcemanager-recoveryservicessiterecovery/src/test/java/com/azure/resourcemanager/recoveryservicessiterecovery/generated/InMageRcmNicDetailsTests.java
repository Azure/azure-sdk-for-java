// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.EthernetAddressType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageRcmNicDetails;
import org.junit.jupiter.api.Assertions;

public final class InMageRcmNicDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageRcmNicDetails model =
            BinaryData
                .fromString(
                    "{\"nicId\":\"eyam\",\"isPrimaryNic\":\"idmdiawpzxkzrntm\",\"isSelectedForFailover\":\"tdhuo\",\"sourceIPAddress\":\"wqpsqaz\",\"sourceIPAddressType\":\"Static\",\"sourceNetworkId\":\"dvqgcnbhcbmjkz\",\"sourceSubnetName\":\"bn\",\"targetIPAddress\":\"ntsxjmfmeftvh\",\"targetIPAddressType\":\"Dynamic\",\"targetSubnetName\":\"gjrhs\",\"testSubnetName\":\"w\",\"testIPAddress\":\"jgrulcfogxhcxnwj\",\"testIPAddressType\":\"Dynamic\"}")
                .toObject(InMageRcmNicDetails.class);
        Assertions.assertEquals("idmdiawpzxkzrntm", model.isPrimaryNic());
        Assertions.assertEquals("tdhuo", model.isSelectedForFailover());
        Assertions.assertEquals("ntsxjmfmeftvh", model.targetIpAddress());
        Assertions.assertEquals(EthernetAddressType.DYNAMIC, model.targetIpAddressType());
        Assertions.assertEquals("gjrhs", model.targetSubnetName());
        Assertions.assertEquals("w", model.testSubnetName());
        Assertions.assertEquals("jgrulcfogxhcxnwj", model.testIpAddress());
        Assertions.assertEquals(EthernetAddressType.DYNAMIC, model.testIpAddressType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageRcmNicDetails model =
            new InMageRcmNicDetails()
                .withIsPrimaryNic("idmdiawpzxkzrntm")
                .withIsSelectedForFailover("tdhuo")
                .withTargetIpAddress("ntsxjmfmeftvh")
                .withTargetIpAddressType(EthernetAddressType.DYNAMIC)
                .withTargetSubnetName("gjrhs")
                .withTestSubnetName("w")
                .withTestIpAddress("jgrulcfogxhcxnwj")
                .withTestIpAddressType(EthernetAddressType.DYNAMIC);
        model = BinaryData.fromObject(model).toObject(InMageRcmNicDetails.class);
        Assertions.assertEquals("idmdiawpzxkzrntm", model.isPrimaryNic());
        Assertions.assertEquals("tdhuo", model.isSelectedForFailover());
        Assertions.assertEquals("ntsxjmfmeftvh", model.targetIpAddress());
        Assertions.assertEquals(EthernetAddressType.DYNAMIC, model.targetIpAddressType());
        Assertions.assertEquals("gjrhs", model.targetSubnetName());
        Assertions.assertEquals("w", model.testSubnetName());
        Assertions.assertEquals("jgrulcfogxhcxnwj", model.testIpAddress());
        Assertions.assertEquals(EthernetAddressType.DYNAMIC, model.testIpAddressType());
    }
}
