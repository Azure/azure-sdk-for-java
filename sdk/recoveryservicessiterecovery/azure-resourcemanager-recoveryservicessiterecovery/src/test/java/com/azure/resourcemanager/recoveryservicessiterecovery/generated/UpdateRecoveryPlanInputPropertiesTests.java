// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PossibleOperationsDirections;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanAction;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanActionDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanGroup;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanGroupType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProtectedItem;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationProtectedItemOperation;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.UpdateRecoveryPlanInputProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UpdateRecoveryPlanInputPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateRecoveryPlanInputProperties model = BinaryData.fromString(
            "{\"groups\":[{\"groupType\":\"Failover\",\"replicationProtectedItems\":[{\"id\":\"oypsuhbrnnhj\",\"virtualMachineId\":\"qwjhqkbiwetpozyc\"},{\"id\":\"iqyhgfse\",\"virtualMachineId\":\"lexbsf\"},{\"id\":\"dynojpziuwfb\",\"virtualMachineId\":\"kdtnhqsyclj\"},{\"id\":\"lpkpbafvafhl\",\"virtualMachineId\":\"lc\"}],\"startGroupActions\":[{\"actionName\":\"vxrh\",\"failoverTypes\":[\"Commit\",\"CompleteMigration\",\"Failback\",\"DisableProtection\"],\"failoverDirections\":[\"PrimaryToRecovery\",\"PrimaryToRecovery\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"pl\",\"failoverTypes\":[\"CompleteMigration\",\"Commit\",\"PlannedFailover\",\"DisableProtection\"],\"failoverDirections\":[\"RecoveryToPrimary\",\"RecoveryToPrimary\",\"PrimaryToRecovery\",\"PrimaryToRecovery\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"ra\",\"failoverTypes\":[\"FinalizeFailback\",\"CancelFailover\",\"RepairReplication\",\"TestFailoverCleanup\"],\"failoverDirections\":[\"PrimaryToRecovery\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"uuj\",\"failoverTypes\":[\"ChangePit\",\"TestFailoverCleanup\",\"Failback\"],\"failoverDirections\":[\"RecoveryToPrimary\",\"PrimaryToRecovery\",\"PrimaryToRecovery\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]},{\"groupType\":\"Boot\",\"replicationProtectedItems\":[{\"id\":\"bxsjybvitvqkj\",\"virtualMachineId\":\"znumtggmuwdchoz\"}],\"startGroupActions\":[{\"actionName\":\"fexl\",\"failoverTypes\":[\"UnplannedFailover\"],\"failoverDirections\":[\"RecoveryToPrimary\",\"PrimaryToRecovery\",\"RecoveryToPrimary\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"zvoaikna\",\"failoverTypes\":[\"RepairReplication\",\"RepairReplication\"],\"failoverDirections\":[\"RecoveryToPrimary\",\"PrimaryToRecovery\",\"RecoveryToPrimary\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"lykwphvxz\",\"failoverTypes\":[\"SwitchProtection\"],\"failoverDirections\":[\"PrimaryToRecovery\",\"PrimaryToRecovery\",\"PrimaryToRecovery\",\"RecoveryToPrimary\"],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]}]}")
            .toObject(UpdateRecoveryPlanInputProperties.class);
        Assertions.assertEquals(RecoveryPlanGroupType.FAILOVER, model.groups().get(0).groupType());
        Assertions.assertEquals("oypsuhbrnnhj", model.groups().get(0).replicationProtectedItems().get(0).id());
        Assertions.assertEquals("qwjhqkbiwetpozyc",
            model.groups().get(0).replicationProtectedItems().get(0).virtualMachineId());
        Assertions.assertEquals("vxrh", model.groups().get(0).startGroupActions().get(0).actionName());
        Assertions.assertEquals(ReplicationProtectedItemOperation.COMMIT,
            model.groups().get(0).startGroupActions().get(0).failoverTypes().get(0));
        Assertions.assertEquals(PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
            model.groups().get(0).startGroupActions().get(0).failoverDirections().get(0));
        Assertions.assertEquals("ra", model.groups().get(0).endGroupActions().get(0).actionName());
        Assertions.assertEquals(ReplicationProtectedItemOperation.FINALIZE_FAILBACK,
            model.groups().get(0).endGroupActions().get(0).failoverTypes().get(0));
        Assertions.assertEquals(PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
            model.groups().get(0).endGroupActions().get(0).failoverDirections().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateRecoveryPlanInputProperties model = new UpdateRecoveryPlanInputProperties()
            .withGroups(Arrays.asList(
                new RecoveryPlanGroup().withGroupType(RecoveryPlanGroupType.FAILOVER)
                    .withReplicationProtectedItems(Arrays.asList(
                        new RecoveryPlanProtectedItem().withId("oypsuhbrnnhj").withVirtualMachineId("qwjhqkbiwetpozyc"),
                        new RecoveryPlanProtectedItem().withId("iqyhgfse").withVirtualMachineId("lexbsf"),
                        new RecoveryPlanProtectedItem().withId("dynojpziuwfb").withVirtualMachineId("kdtnhqsyclj"),
                        new RecoveryPlanProtectedItem().withId("lpkpbafvafhl").withVirtualMachineId("lc")))
                    .withStartGroupActions(Arrays.asList(
                        new RecoveryPlanAction().withActionName("vxrh")
                            .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.COMMIT,
                                ReplicationProtectedItemOperation.COMPLETE_MIGRATION,
                                ReplicationProtectedItemOperation.FAILBACK,
                                ReplicationProtectedItemOperation.DISABLE_PROTECTION))
                            .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                                PossibleOperationsDirections.PRIMARY_TO_RECOVERY))
                            .withCustomDetails(new RecoveryPlanActionDetails()),
                        new RecoveryPlanAction().withActionName("pl")
                            .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.COMPLETE_MIGRATION,
                                ReplicationProtectedItemOperation.COMMIT,
                                ReplicationProtectedItemOperation.PLANNED_FAILOVER,
                                ReplicationProtectedItemOperation.DISABLE_PROTECTION))
                            .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                                PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                                PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                                PossibleOperationsDirections.PRIMARY_TO_RECOVERY))
                            .withCustomDetails(new RecoveryPlanActionDetails())))
                    .withEndGroupActions(Arrays.asList(
                        new RecoveryPlanAction().withActionName("ra")
                            .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.FINALIZE_FAILBACK,
                                ReplicationProtectedItemOperation.CANCEL_FAILOVER,
                                ReplicationProtectedItemOperation.REPAIR_REPLICATION,
                                ReplicationProtectedItemOperation.TEST_FAILOVER_CLEANUP))
                            .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.PRIMARY_TO_RECOVERY))
                            .withCustomDetails(new RecoveryPlanActionDetails()),
                        new RecoveryPlanAction().withActionName("uuj")
                            .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.CHANGE_PIT,
                                ReplicationProtectedItemOperation.TEST_FAILOVER_CLEANUP,
                                ReplicationProtectedItemOperation.FAILBACK))
                            .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                                PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                                PossibleOperationsDirections.PRIMARY_TO_RECOVERY))
                            .withCustomDetails(new RecoveryPlanActionDetails()))),
                new RecoveryPlanGroup().withGroupType(RecoveryPlanGroupType.BOOT)
                    .withReplicationProtectedItems(Arrays.asList(new RecoveryPlanProtectedItem().withId("bxsjybvitvqkj")
                        .withVirtualMachineId("znumtggmuwdchoz")))
                    .withStartGroupActions(Arrays.asList(
                        new RecoveryPlanAction().withActionName("fexl")
                            .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.UNPLANNED_FAILOVER))
                            .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                                PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                                PossibleOperationsDirections.RECOVERY_TO_PRIMARY))
                            .withCustomDetails(new RecoveryPlanActionDetails()),
                        new RecoveryPlanAction().withActionName("zvoaikna")
                            .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.REPAIR_REPLICATION,
                                ReplicationProtectedItemOperation.REPAIR_REPLICATION))
                            .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.RECOVERY_TO_PRIMARY,
                                PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                                PossibleOperationsDirections.RECOVERY_TO_PRIMARY))
                            .withCustomDetails(new RecoveryPlanActionDetails())))
                    .withEndGroupActions(Arrays.asList(new RecoveryPlanAction().withActionName("lykwphvxz")
                        .withFailoverTypes(Arrays.asList(ReplicationProtectedItemOperation.SWITCH_PROTECTION))
                        .withFailoverDirections(Arrays.asList(PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                            PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
                            PossibleOperationsDirections.RECOVERY_TO_PRIMARY))
                        .withCustomDetails(new RecoveryPlanActionDetails())))));
        model = BinaryData.fromObject(model).toObject(UpdateRecoveryPlanInputProperties.class);
        Assertions.assertEquals(RecoveryPlanGroupType.FAILOVER, model.groups().get(0).groupType());
        Assertions.assertEquals("oypsuhbrnnhj", model.groups().get(0).replicationProtectedItems().get(0).id());
        Assertions.assertEquals("qwjhqkbiwetpozyc",
            model.groups().get(0).replicationProtectedItems().get(0).virtualMachineId());
        Assertions.assertEquals("vxrh", model.groups().get(0).startGroupActions().get(0).actionName());
        Assertions.assertEquals(ReplicationProtectedItemOperation.COMMIT,
            model.groups().get(0).startGroupActions().get(0).failoverTypes().get(0));
        Assertions.assertEquals(PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
            model.groups().get(0).startGroupActions().get(0).failoverDirections().get(0));
        Assertions.assertEquals("ra", model.groups().get(0).endGroupActions().get(0).actionName());
        Assertions.assertEquals(ReplicationProtectedItemOperation.FINALIZE_FAILBACK,
            model.groups().get(0).endGroupActions().get(0).failoverTypes().get(0));
        Assertions.assertEquals(PossibleOperationsDirections.PRIMARY_TO_RECOVERY,
            model.groups().get(0).endGroupActions().get(0).failoverDirections().get(0));
    }
}
