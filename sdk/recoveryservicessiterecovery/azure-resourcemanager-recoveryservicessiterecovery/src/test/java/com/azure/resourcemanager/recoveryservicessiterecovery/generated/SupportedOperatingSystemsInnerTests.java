// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.SupportedOperatingSystemsInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SupportedOSProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SupportedOSProperty;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SupportedOperatingSystemsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SupportedOperatingSystemsInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"supportedOsList\":[{\"instanceType\":\"j\",\"supportedOs\":[]},{\"instanceType\":\"pqcbfrmbodthsq\",\"supportedOs\":[]},{\"instanceType\":\"riibakclacj\",\"supportedOs\":[]},{\"instanceType\":\"xousxauzl\",\"supportedOs\":[]}]},\"location\":\"gmwohqfzizvu\",\"id\":\"mmkjsvthnwpztek\",\"name\":\"vmribiat\",\"type\":\"gplucfotangcfhny\"}")
                .toObject(SupportedOperatingSystemsInner.class);
        Assertions.assertEquals("j", model.properties().supportedOsList().get(0).instanceType());
        Assertions.assertEquals("gmwohqfzizvu", model.location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SupportedOperatingSystemsInner model =
            new SupportedOperatingSystemsInner()
                .withProperties(
                    new SupportedOSProperties()
                        .withSupportedOsList(
                            Arrays
                                .asList(
                                    new SupportedOSProperty().withInstanceType("j").withSupportedOs(Arrays.asList()),
                                    new SupportedOSProperty()
                                        .withInstanceType("pqcbfrmbodthsq")
                                        .withSupportedOs(Arrays.asList()),
                                    new SupportedOSProperty()
                                        .withInstanceType("riibakclacj")
                                        .withSupportedOs(Arrays.asList()),
                                    new SupportedOSProperty()
                                        .withInstanceType("xousxauzl")
                                        .withSupportedOs(Arrays.asList()))))
                .withLocation("gmwohqfzizvu");
        model = BinaryData.fromObject(model).toObject(SupportedOperatingSystemsInner.class);
        Assertions.assertEquals("j", model.properties().supportedOsList().get(0).instanceType());
        Assertions.assertEquals("gmwohqfzizvu", model.location());
    }
}
