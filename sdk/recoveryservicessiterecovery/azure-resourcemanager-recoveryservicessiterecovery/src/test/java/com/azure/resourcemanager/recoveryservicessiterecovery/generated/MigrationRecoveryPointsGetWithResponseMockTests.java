// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicessiterecovery.SiteRecoveryManager;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.MigrationRecoveryPoint;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MigrationRecoveryPointsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"recoveryPointTime\":\"2021-07-26T00:55:24Z\",\"recoveryPointType\":\"NotSpecified\"},\"location\":\"gjijzqjhljsazm\",\"id\":\"sisfqqhcmec\",\"name\":\"gsbfeiirpnjy\",\"type\":\"llfkchhgs\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SiteRecoveryManager manager = SiteRecoveryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        MigrationRecoveryPoint response = manager.migrationRecoveryPoints()
            .getWithResponse("kst", "neykeipxutcbvriu", "nfa", "xtvsayyaeiivjq", "qtjwrvewojoq", "xqetxtdqius",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("gjijzqjhljsazm", response.location());
    }
}
