// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.LicenseType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SqlServerLicenseType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtNicInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtUpdateDiskInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtUpdateMigrationItemInput;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class VMwareCbtUpdateMigrationItemInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VMwareCbtUpdateMigrationItemInput model = BinaryData.fromString(
            "{\"instanceType\":\"VMwareCbt\",\"targetVmName\":\"igcfddofxnf\",\"targetVmSize\":\"jyyrqaedw\",\"targetResourceGroupId\":\"ocytjgoeayokrw\",\"targetAvailabilitySetId\":\"ihwpadhedbfobd\",\"targetAvailabilityZone\":\"vothmkhjaoz\",\"targetProximityPlacementGroupId\":\"wfcn\",\"targetBootDiagnosticsStorageAccountId\":\"bpoelhscmyhrhjv\",\"targetNetworkId\":\"fqbokndwp\",\"testNetworkId\":\"qwojoev\",\"vmNics\":[{\"nicId\":\"fytdxmly\",\"isPrimaryNic\":\"zlyvapbkrbuog\",\"targetSubnetName\":\"dltlcu\",\"targetStaticIPAddress\":\"izij\",\"isSelectedForMigration\":\"ylzeohlpsftq\",\"targetNicName\":\"vmhvbvvcpwtqs\",\"testSubnetName\":\"pnhmzy\",\"testStaticIPAddress\":\"fetev\"},{\"nicId\":\"ntfknwacycsyo\",\"isPrimaryNic\":\"ctkhfh\",\"targetSubnetName\":\"atvcsxr\",\"targetStaticIPAddress\":\"nmizhv\",\"isSelectedForMigration\":\"hqqwcubl\",\"targetNicName\":\"hk\",\"testSubnetName\":\"obzgott\",\"testStaticIPAddress\":\"sadzighmmtb\"},{\"nicId\":\"dvucfvvra\",\"isPrimaryNic\":\"beurdeewl\",\"targetSubnetName\":\"xpcbwkdwjyjizn\",\"targetStaticIPAddress\":\"roo\",\"isSelectedForMigration\":\"ftaspmcr\",\"targetNicName\":\"huf\",\"testSubnetName\":\"n\",\"testStaticIPAddress\":\"hminuwqxungrobgw\"}],\"vmDisks\":[{\"diskId\":\"xjwdylwxmvzjow\",\"targetDiskName\":\"geerclbl\",\"isOSDisk\":\"hpwachyeu\"},{\"diskId\":\"jwmvwryvdi\",\"targetDiskName\":\"ii\",\"isOSDisk\":\"pruccwme\"}],\"licenseType\":\"NotSpecified\",\"sqlServerLicenseType\":\"NotSpecified\",\"performAutoResync\":\"trtexegwm\",\"targetVmTags\":{\"loqkajwjuri\":\"ywiwhvycfjncind\",\"anhz\":\"rsbcl\",\"zkz\":\"knjxizbaxdy\"},\"targetDiskTags\":{\"wacyyjmlxppdndzk\":\"e\",\"cizeqqfopvnopm\":\"evuiiuiibfkcjytq\"},\"targetNicTags\":{\"zyfbkmvldzmxojz\":\"sfhoxqlyo\"}}")
            .toObject(VMwareCbtUpdateMigrationItemInput.class);
        Assertions.assertEquals("igcfddofxnf", model.targetVmName());
        Assertions.assertEquals("jyyrqaedw", model.targetVmSize());
        Assertions.assertEquals("ocytjgoeayokrw", model.targetResourceGroupId());
        Assertions.assertEquals("ihwpadhedbfobd", model.targetAvailabilitySetId());
        Assertions.assertEquals("vothmkhjaoz", model.targetAvailabilityZone());
        Assertions.assertEquals("wfcn", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("bpoelhscmyhrhjv", model.targetBootDiagnosticsStorageAccountId());
        Assertions.assertEquals("fqbokndwp", model.targetNetworkId());
        Assertions.assertEquals("qwojoev", model.testNetworkId());
        Assertions.assertEquals("fytdxmly", model.vmNics().get(0).nicId());
        Assertions.assertEquals("zlyvapbkrbuog", model.vmNics().get(0).isPrimaryNic());
        Assertions.assertEquals("dltlcu", model.vmNics().get(0).targetSubnetName());
        Assertions.assertEquals("izij", model.vmNics().get(0).targetStaticIpAddress());
        Assertions.assertEquals("ylzeohlpsftq", model.vmNics().get(0).isSelectedForMigration());
        Assertions.assertEquals("vmhvbvvcpwtqs", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("pnhmzy", model.vmNics().get(0).testSubnetName());
        Assertions.assertEquals("fetev", model.vmNics().get(0).testStaticIpAddress());
        Assertions.assertEquals("xjwdylwxmvzjow", model.vmDisks().get(0).diskId());
        Assertions.assertEquals("geerclbl", model.vmDisks().get(0).targetDiskName());
        Assertions.assertEquals("hpwachyeu", model.vmDisks().get(0).isOSDisk());
        Assertions.assertEquals(LicenseType.NOT_SPECIFIED, model.licenseType());
        Assertions.assertEquals(SqlServerLicenseType.NOT_SPECIFIED, model.sqlServerLicenseType());
        Assertions.assertEquals("trtexegwm", model.performAutoResync());
        Assertions.assertEquals("ywiwhvycfjncind", model.targetVmTags().get("loqkajwjuri"));
        Assertions.assertEquals("e", model.targetDiskTags().get("wacyyjmlxppdndzk"));
        Assertions.assertEquals("sfhoxqlyo", model.targetNicTags().get("zyfbkmvldzmxojz"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VMwareCbtUpdateMigrationItemInput model = new VMwareCbtUpdateMigrationItemInput()
            .withTargetVmName("igcfddofxnf").withTargetVmSize("jyyrqaedw").withTargetResourceGroupId("ocytjgoeayokrw")
            .withTargetAvailabilitySetId("ihwpadhedbfobd").withTargetAvailabilityZone("vothmkhjaoz")
            .withTargetProximityPlacementGroupId("wfcn").withTargetBootDiagnosticsStorageAccountId("bpoelhscmyhrhjv")
            .withTargetNetworkId("fqbokndwp").withTestNetworkId("qwojoev")
            .withVmNics(Arrays.asList(
                new VMwareCbtNicInput().withNicId("fytdxmly").withIsPrimaryNic("zlyvapbkrbuog")
                    .withTargetSubnetName("dltlcu").withTargetStaticIpAddress("izij")
                    .withIsSelectedForMigration("ylzeohlpsftq").withTargetNicName("vmhvbvvcpwtqs")
                    .withTestSubnetName("pnhmzy").withTestStaticIpAddress("fetev"),
                new VMwareCbtNicInput().withNicId("ntfknwacycsyo").withIsPrimaryNic("ctkhfh")
                    .withTargetSubnetName("atvcsxr").withTargetStaticIpAddress("nmizhv")
                    .withIsSelectedForMigration("hqqwcubl").withTargetNicName("hk").withTestSubnetName("obzgott")
                    .withTestStaticIpAddress("sadzighmmtb"),
                new VMwareCbtNicInput().withNicId("dvucfvvra").withIsPrimaryNic("beurdeewl")
                    .withTargetSubnetName("xpcbwkdwjyjizn").withTargetStaticIpAddress("roo")
                    .withIsSelectedForMigration("ftaspmcr").withTargetNicName("huf").withTestSubnetName("n")
                    .withTestStaticIpAddress("hminuwqxungrobgw")))
            .withVmDisks(Arrays.asList(
                new VMwareCbtUpdateDiskInput().withDiskId("xjwdylwxmvzjow").withTargetDiskName("geerclbl")
                    .withIsOSDisk("hpwachyeu"),
                new VMwareCbtUpdateDiskInput().withDiskId("jwmvwryvdi").withTargetDiskName("ii")
                    .withIsOSDisk("pruccwme")))
            .withLicenseType(LicenseType.NOT_SPECIFIED).withSqlServerLicenseType(SqlServerLicenseType.NOT_SPECIFIED)
            .withPerformAutoResync("trtexegwm")
            .withTargetVmTags(mapOf("loqkajwjuri", "ywiwhvycfjncind", "anhz", "rsbcl", "zkz", "knjxizbaxdy"))
            .withTargetDiskTags(mapOf("wacyyjmlxppdndzk", "e", "cizeqqfopvnopm", "evuiiuiibfkcjytq"))
            .withTargetNicTags(mapOf("zyfbkmvldzmxojz", "sfhoxqlyo"));
        model = BinaryData.fromObject(model).toObject(VMwareCbtUpdateMigrationItemInput.class);
        Assertions.assertEquals("igcfddofxnf", model.targetVmName());
        Assertions.assertEquals("jyyrqaedw", model.targetVmSize());
        Assertions.assertEquals("ocytjgoeayokrw", model.targetResourceGroupId());
        Assertions.assertEquals("ihwpadhedbfobd", model.targetAvailabilitySetId());
        Assertions.assertEquals("vothmkhjaoz", model.targetAvailabilityZone());
        Assertions.assertEquals("wfcn", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("bpoelhscmyhrhjv", model.targetBootDiagnosticsStorageAccountId());
        Assertions.assertEquals("fqbokndwp", model.targetNetworkId());
        Assertions.assertEquals("qwojoev", model.testNetworkId());
        Assertions.assertEquals("fytdxmly", model.vmNics().get(0).nicId());
        Assertions.assertEquals("zlyvapbkrbuog", model.vmNics().get(0).isPrimaryNic());
        Assertions.assertEquals("dltlcu", model.vmNics().get(0).targetSubnetName());
        Assertions.assertEquals("izij", model.vmNics().get(0).targetStaticIpAddress());
        Assertions.assertEquals("ylzeohlpsftq", model.vmNics().get(0).isSelectedForMigration());
        Assertions.assertEquals("vmhvbvvcpwtqs", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("pnhmzy", model.vmNics().get(0).testSubnetName());
        Assertions.assertEquals("fetev", model.vmNics().get(0).testStaticIpAddress());
        Assertions.assertEquals("xjwdylwxmvzjow", model.vmDisks().get(0).diskId());
        Assertions.assertEquals("geerclbl", model.vmDisks().get(0).targetDiskName());
        Assertions.assertEquals("hpwachyeu", model.vmDisks().get(0).isOSDisk());
        Assertions.assertEquals(LicenseType.NOT_SPECIFIED, model.licenseType());
        Assertions.assertEquals(SqlServerLicenseType.NOT_SPECIFIED, model.sqlServerLicenseType());
        Assertions.assertEquals("trtexegwm", model.performAutoResync());
        Assertions.assertEquals("ywiwhvycfjncind", model.targetVmTags().get("loqkajwjuri"));
        Assertions.assertEquals("e", model.targetDiskTags().get("wacyyjmlxppdndzk"));
        Assertions.assertEquals("sfhoxqlyo", model.targetNicTags().get("zyfbkmvldzmxojz"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
