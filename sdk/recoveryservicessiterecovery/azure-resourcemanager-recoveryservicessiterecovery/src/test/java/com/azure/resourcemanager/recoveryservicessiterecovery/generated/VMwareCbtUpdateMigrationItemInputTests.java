// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.LicenseType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SqlServerLicenseType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtNicInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtUpdateDiskInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtUpdateMigrationItemInput;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class VMwareCbtUpdateMigrationItemInputTests {
    @Test
    public void testDeserialize() {
        VMwareCbtUpdateMigrationItemInput model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"VMwareCbt\",\"targetVmName\":\"gytoxuwhtt\",\"targetVmSize\":\"qsaqmebgszplu\",\"targetResourceGroupId\":\"ekpdzzmssg\",\"targetAvailabilitySetId\":\"vokyejidbdqzsqun\",\"targetAvailabilityZone\":\"wztlvvwsnmrkky\",\"targetProximityPlacementGroupId\":\"repwpwfkcaux\",\"targetBootDiagnosticsStorageAccountId\":\"avcpfpdofuckclbt\",\"targetNetworkId\":\"ue\",\"testNetworkId\":\"ol\",\"vmNics\":[{\"nicId\":\"lfngojfsqebuuxj\",\"isPrimaryNic\":\"hfxfjwpdkktpmb\",\"targetSubnetName\":\"bmbrwgzzxljbkh\",\"targetStaticIPAddress\":\"dplau\",\"isSelectedForMigration\":\"dmhweqjfyxydgto\",\"targetNicName\":\"qbvwglgw\",\"testSubnetName\":\"vxakglh\",\"testStaticIPAddress\":\"esrfgamqiydvx\"},{\"nicId\":\"gdhyhgoq\",\"isPrimaryNic\":\"soy\",\"targetSubnetName\":\"xyjrcbqpb\",\"targetStaticIPAddress\":\"pglqjo\",\"isSelectedForMigration\":\"dahneaoovty\",\"targetNicName\":\"tivfwjlo\",\"testSubnetName\":\"ekfsrm\",\"testStaticIPAddress\":\"klajvcfocz\"}],\"vmDisks\":[{\"diskId\":\"ejov\",\"targetDiskName\":\"wxn\",\"isOSDisk\":\"hhnoyrzaaoee\"},{\"diskId\":\"pmjen\",\"targetDiskName\":\"eat\",\"isOSDisk\":\"xxcrxoxdjxld\"}],\"licenseType\":\"NoLicenseType\",\"sqlServerLicenseType\":\"NotSpecified\",\"performAutoResync\":\"nzkdolrndwdbvxvz\",\"targetVmTags\":{\"unkfthmcxqqx\":\"doyqx\",\"oanpohrvm\":\"yzkl\",\"a\":\"rqra\"},\"targetDiskTags\":{\"khjqjpvbaihxjtg\":\"znllaslk\",\"roigbsfsgsaenwld\":\"gtaiywbq\",\"jc\":\"mhljqlxspm\",\"hsxrznmgsdaluyc\":\"ryldsxeb\"},\"targetNicTags\":{\"xebjl\":\"frbhseuerbg\",\"pryj\":\"dcaytujraxd\",\"ouxly\":\"gtnse\"}}")
                .toObject(VMwareCbtUpdateMigrationItemInput.class);
        Assertions.assertEquals("gytoxuwhtt", model.targetVmName());
        Assertions.assertEquals("qsaqmebgszplu", model.targetVmSize());
        Assertions.assertEquals("ekpdzzmssg", model.targetResourceGroupId());
        Assertions.assertEquals("vokyejidbdqzsqun", model.targetAvailabilitySetId());
        Assertions.assertEquals("wztlvvwsnmrkky", model.targetAvailabilityZone());
        Assertions.assertEquals("repwpwfkcaux", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("avcpfpdofuckclbt", model.targetBootDiagnosticsStorageAccountId());
        Assertions.assertEquals("ue", model.targetNetworkId());
        Assertions.assertEquals("ol", model.testNetworkId());
        Assertions.assertEquals("lfngojfsqebuuxj", model.vmNics().get(0).nicId());
        Assertions.assertEquals("hfxfjwpdkktpmb", model.vmNics().get(0).isPrimaryNic());
        Assertions.assertEquals("bmbrwgzzxljbkh", model.vmNics().get(0).targetSubnetName());
        Assertions.assertEquals("dplau", model.vmNics().get(0).targetStaticIpAddress());
        Assertions.assertEquals("dmhweqjfyxydgto", model.vmNics().get(0).isSelectedForMigration());
        Assertions.assertEquals("qbvwglgw", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("vxakglh", model.vmNics().get(0).testSubnetName());
        Assertions.assertEquals("esrfgamqiydvx", model.vmNics().get(0).testStaticIpAddress());
        Assertions.assertEquals("ejov", model.vmDisks().get(0).diskId());
        Assertions.assertEquals("wxn", model.vmDisks().get(0).targetDiskName());
        Assertions.assertEquals("hhnoyrzaaoee", model.vmDisks().get(0).isOSDisk());
        Assertions.assertEquals(LicenseType.NO_LICENSE_TYPE, model.licenseType());
        Assertions.assertEquals(SqlServerLicenseType.NOT_SPECIFIED, model.sqlServerLicenseType());
        Assertions.assertEquals("nzkdolrndwdbvxvz", model.performAutoResync());
        Assertions.assertEquals("doyqx", model.targetVmTags().get("unkfthmcxqqx"));
        Assertions.assertEquals("znllaslk", model.targetDiskTags().get("khjqjpvbaihxjtg"));
        Assertions.assertEquals("frbhseuerbg", model.targetNicTags().get("xebjl"));
    }

    @Test
    public void testSerialize() {
        VMwareCbtUpdateMigrationItemInput model =
            new VMwareCbtUpdateMigrationItemInput()
                .withTargetVmName("gytoxuwhtt")
                .withTargetVmSize("qsaqmebgszplu")
                .withTargetResourceGroupId("ekpdzzmssg")
                .withTargetAvailabilitySetId("vokyejidbdqzsqun")
                .withTargetAvailabilityZone("wztlvvwsnmrkky")
                .withTargetProximityPlacementGroupId("repwpwfkcaux")
                .withTargetBootDiagnosticsStorageAccountId("avcpfpdofuckclbt")
                .withTargetNetworkId("ue")
                .withTestNetworkId("ol")
                .withVmNics(
                    Arrays
                        .asList(
                            new VMwareCbtNicInput()
                                .withNicId("lfngojfsqebuuxj")
                                .withIsPrimaryNic("hfxfjwpdkktpmb")
                                .withTargetSubnetName("bmbrwgzzxljbkh")
                                .withTargetStaticIpAddress("dplau")
                                .withIsSelectedForMigration("dmhweqjfyxydgto")
                                .withTargetNicName("qbvwglgw")
                                .withTestSubnetName("vxakglh")
                                .withTestStaticIpAddress("esrfgamqiydvx"),
                            new VMwareCbtNicInput()
                                .withNicId("gdhyhgoq")
                                .withIsPrimaryNic("soy")
                                .withTargetSubnetName("xyjrcbqpb")
                                .withTargetStaticIpAddress("pglqjo")
                                .withIsSelectedForMigration("dahneaoovty")
                                .withTargetNicName("tivfwjlo")
                                .withTestSubnetName("ekfsrm")
                                .withTestStaticIpAddress("klajvcfocz")))
                .withVmDisks(
                    Arrays
                        .asList(
                            new VMwareCbtUpdateDiskInput()
                                .withDiskId("ejov")
                                .withTargetDiskName("wxn")
                                .withIsOSDisk("hhnoyrzaaoee"),
                            new VMwareCbtUpdateDiskInput()
                                .withDiskId("pmjen")
                                .withTargetDiskName("eat")
                                .withIsOSDisk("xxcrxoxdjxld")))
                .withLicenseType(LicenseType.NO_LICENSE_TYPE)
                .withSqlServerLicenseType(SqlServerLicenseType.NOT_SPECIFIED)
                .withPerformAutoResync("nzkdolrndwdbvxvz")
                .withTargetVmTags(mapOf("unkfthmcxqqx", "doyqx", "oanpohrvm", "yzkl", "a", "rqra"))
                .withTargetDiskTags(
                    mapOf(
                        "khjqjpvbaihxjtg",
                        "znllaslk",
                        "roigbsfsgsaenwld",
                        "gtaiywbq",
                        "jc",
                        "mhljqlxspm",
                        "hsxrznmgsdaluyc",
                        "ryldsxeb"))
                .withTargetNicTags(mapOf("xebjl", "frbhseuerbg", "pryj", "dcaytujraxd", "ouxly", "gtnse"));
        model = BinaryData.fromObject(model).toObject(VMwareCbtUpdateMigrationItemInput.class);
        Assertions.assertEquals("gytoxuwhtt", model.targetVmName());
        Assertions.assertEquals("qsaqmebgszplu", model.targetVmSize());
        Assertions.assertEquals("ekpdzzmssg", model.targetResourceGroupId());
        Assertions.assertEquals("vokyejidbdqzsqun", model.targetAvailabilitySetId());
        Assertions.assertEquals("wztlvvwsnmrkky", model.targetAvailabilityZone());
        Assertions.assertEquals("repwpwfkcaux", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("avcpfpdofuckclbt", model.targetBootDiagnosticsStorageAccountId());
        Assertions.assertEquals("ue", model.targetNetworkId());
        Assertions.assertEquals("ol", model.testNetworkId());
        Assertions.assertEquals("lfngojfsqebuuxj", model.vmNics().get(0).nicId());
        Assertions.assertEquals("hfxfjwpdkktpmb", model.vmNics().get(0).isPrimaryNic());
        Assertions.assertEquals("bmbrwgzzxljbkh", model.vmNics().get(0).targetSubnetName());
        Assertions.assertEquals("dplau", model.vmNics().get(0).targetStaticIpAddress());
        Assertions.assertEquals("dmhweqjfyxydgto", model.vmNics().get(0).isSelectedForMigration());
        Assertions.assertEquals("qbvwglgw", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("vxakglh", model.vmNics().get(0).testSubnetName());
        Assertions.assertEquals("esrfgamqiydvx", model.vmNics().get(0).testStaticIpAddress());
        Assertions.assertEquals("ejov", model.vmDisks().get(0).diskId());
        Assertions.assertEquals("wxn", model.vmDisks().get(0).targetDiskName());
        Assertions.assertEquals("hhnoyrzaaoee", model.vmDisks().get(0).isOSDisk());
        Assertions.assertEquals(LicenseType.NO_LICENSE_TYPE, model.licenseType());
        Assertions.assertEquals(SqlServerLicenseType.NOT_SPECIFIED, model.sqlServerLicenseType());
        Assertions.assertEquals("nzkdolrndwdbvxvz", model.performAutoResync());
        Assertions.assertEquals("doyqx", model.targetVmTags().get("unkfthmcxqqx"));
        Assertions.assertEquals("znllaslk", model.targetDiskTags().get("khjqjpvbaihxjtg"));
        Assertions.assertEquals("frbhseuerbg", model.targetNicTags().get("xebjl"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
