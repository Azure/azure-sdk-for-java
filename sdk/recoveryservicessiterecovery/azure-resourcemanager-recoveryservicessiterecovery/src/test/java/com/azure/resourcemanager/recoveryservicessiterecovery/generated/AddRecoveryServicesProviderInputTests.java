// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AddRecoveryServicesProviderInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AddRecoveryServicesProviderInputProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IdentityProviderInput;
import org.junit.jupiter.api.Assertions;

public final class AddRecoveryServicesProviderInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AddRecoveryServicesProviderInput model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"machineName\":\"huzqgn\",\"machineId\":\"gkynscliqh\",\"biosId\":\"h\",\"authenticationIdentityInput\":{\"tenantId\":\"nk\",\"applicationId\":\"mtk\",\"objectId\":\"bo\",\"audience\":\"ppnvdxz\",\"aadAuthority\":\"hihfrbbcevqagtlt\"},\"resourceAccessIdentityInput\":{\"tenantId\":\"hlfkqojpy\",\"applicationId\":\"vgtrdcnifmzzs\",\"objectId\":\"ymbrnysuxmpraf\",\"audience\":\"g\",\"aadAuthority\":\"khocxvdfffwaf\"},\"dataPlaneAuthenticationIdentityInput\":{\"tenantId\":\"oudaspavehhrvk\",\"applicationId\":\"unzo\",\"objectId\":\"ud\",\"audience\":\"cxgkmoyxcdyui\",\"aadAuthority\":\"hmfdnbzydvfvfcj\"}}}")
                .toObject(AddRecoveryServicesProviderInput.class);
        Assertions.assertEquals("huzqgn", model.properties().machineName());
        Assertions.assertEquals("gkynscliqh", model.properties().machineId());
        Assertions.assertEquals("h", model.properties().biosId());
        Assertions.assertEquals("nk", model.properties().authenticationIdentityInput().tenantId());
        Assertions.assertEquals("mtk", model.properties().authenticationIdentityInput().applicationId());
        Assertions.assertEquals("bo", model.properties().authenticationIdentityInput().objectId());
        Assertions.assertEquals("ppnvdxz", model.properties().authenticationIdentityInput().audience());
        Assertions.assertEquals("hihfrbbcevqagtlt", model.properties().authenticationIdentityInput().aadAuthority());
        Assertions.assertEquals("hlfkqojpy", model.properties().resourceAccessIdentityInput().tenantId());
        Assertions.assertEquals("vgtrdcnifmzzs", model.properties().resourceAccessIdentityInput().applicationId());
        Assertions.assertEquals("ymbrnysuxmpraf", model.properties().resourceAccessIdentityInput().objectId());
        Assertions.assertEquals("g", model.properties().resourceAccessIdentityInput().audience());
        Assertions.assertEquals("khocxvdfffwaf", model.properties().resourceAccessIdentityInput().aadAuthority());
        Assertions.assertEquals("oudaspavehhrvk", model.properties().dataPlaneAuthenticationIdentityInput().tenantId());
        Assertions.assertEquals("unzo", model.properties().dataPlaneAuthenticationIdentityInput().applicationId());
        Assertions.assertEquals("ud", model.properties().dataPlaneAuthenticationIdentityInput().objectId());
        Assertions.assertEquals("cxgkmoyxcdyui", model.properties().dataPlaneAuthenticationIdentityInput().audience());
        Assertions
            .assertEquals("hmfdnbzydvfvfcj", model.properties().dataPlaneAuthenticationIdentityInput().aadAuthority());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AddRecoveryServicesProviderInput model =
            new AddRecoveryServicesProviderInput()
                .withProperties(
                    new AddRecoveryServicesProviderInputProperties()
                        .withMachineName("huzqgn")
                        .withMachineId("gkynscliqh")
                        .withBiosId("h")
                        .withAuthenticationIdentityInput(
                            new IdentityProviderInput()
                                .withTenantId("nk")
                                .withApplicationId("mtk")
                                .withObjectId("bo")
                                .withAudience("ppnvdxz")
                                .withAadAuthority("hihfrbbcevqagtlt"))
                        .withResourceAccessIdentityInput(
                            new IdentityProviderInput()
                                .withTenantId("hlfkqojpy")
                                .withApplicationId("vgtrdcnifmzzs")
                                .withObjectId("ymbrnysuxmpraf")
                                .withAudience("g")
                                .withAadAuthority("khocxvdfffwaf"))
                        .withDataPlaneAuthenticationIdentityInput(
                            new IdentityProviderInput()
                                .withTenantId("oudaspavehhrvk")
                                .withApplicationId("unzo")
                                .withObjectId("ud")
                                .withAudience("cxgkmoyxcdyui")
                                .withAadAuthority("hmfdnbzydvfvfcj")));
        model = BinaryData.fromObject(model).toObject(AddRecoveryServicesProviderInput.class);
        Assertions.assertEquals("huzqgn", model.properties().machineName());
        Assertions.assertEquals("gkynscliqh", model.properties().machineId());
        Assertions.assertEquals("h", model.properties().biosId());
        Assertions.assertEquals("nk", model.properties().authenticationIdentityInput().tenantId());
        Assertions.assertEquals("mtk", model.properties().authenticationIdentityInput().applicationId());
        Assertions.assertEquals("bo", model.properties().authenticationIdentityInput().objectId());
        Assertions.assertEquals("ppnvdxz", model.properties().authenticationIdentityInput().audience());
        Assertions.assertEquals("hihfrbbcevqagtlt", model.properties().authenticationIdentityInput().aadAuthority());
        Assertions.assertEquals("hlfkqojpy", model.properties().resourceAccessIdentityInput().tenantId());
        Assertions.assertEquals("vgtrdcnifmzzs", model.properties().resourceAccessIdentityInput().applicationId());
        Assertions.assertEquals("ymbrnysuxmpraf", model.properties().resourceAccessIdentityInput().objectId());
        Assertions.assertEquals("g", model.properties().resourceAccessIdentityInput().audience());
        Assertions.assertEquals("khocxvdfffwaf", model.properties().resourceAccessIdentityInput().aadAuthority());
        Assertions.assertEquals("oudaspavehhrvk", model.properties().dataPlaneAuthenticationIdentityInput().tenantId());
        Assertions.assertEquals("unzo", model.properties().dataPlaneAuthenticationIdentityInput().applicationId());
        Assertions.assertEquals("ud", model.properties().dataPlaneAuthenticationIdentityInput().objectId());
        Assertions.assertEquals("cxgkmoyxcdyui", model.properties().dataPlaneAuthenticationIdentityInput().audience());
        Assertions
            .assertEquals("hmfdnbzydvfvfcj", model.properties().dataPlaneAuthenticationIdentityInput().aadAuthority());
    }
}
