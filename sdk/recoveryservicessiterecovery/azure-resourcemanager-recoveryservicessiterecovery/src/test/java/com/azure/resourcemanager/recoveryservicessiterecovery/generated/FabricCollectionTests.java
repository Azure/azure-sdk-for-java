// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.FabricInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FabricCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FabricProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FabricCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FabricCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"friendlyName\":\"ibmadgakeqsrxy\",\"internalIdentifier\":\"e\",\"bcdrState\":\"ytb\",\"healthErrorDetails\":[],\"health\":\"ouf\"},\"location\":\"mnkzsmod\",\"id\":\"glougpbk\",\"name\":\"tmut\",\"type\":\"uqktap\"},{\"properties\":{\"friendlyName\":\"gcue\",\"internalIdentifier\":\"kdosvqw\",\"bcdrState\":\"mdgbbjfdd\",\"healthErrorDetails\":[],\"health\":\"bexppb\"},\"location\":\"q\",\"id\":\"rolfpfp\",\"name\":\"algbquxigjyjg\",\"type\":\"jaoyfhrtx\"}],\"nextLink\":\"n\"}")
                .toObject(FabricCollection.class);
        Assertions.assertEquals("ibmadgakeqsrxy", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("e", model.value().get(0).properties().internalIdentifier());
        Assertions.assertEquals("ytb", model.value().get(0).properties().bcdrState());
        Assertions.assertEquals("ouf", model.value().get(0).properties().health());
        Assertions.assertEquals("mnkzsmod", model.value().get(0).location());
        Assertions.assertEquals("n", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FabricCollection model =
            new FabricCollection()
                .withValue(
                    Arrays
                        .asList(
                            new FabricInner()
                                .withProperties(
                                    new FabricProperties()
                                        .withFriendlyName("ibmadgakeqsrxy")
                                        .withInternalIdentifier("e")
                                        .withBcdrState("ytb")
                                        .withHealthErrorDetails(Arrays.asList())
                                        .withHealth("ouf"))
                                .withLocation("mnkzsmod"),
                            new FabricInner()
                                .withProperties(
                                    new FabricProperties()
                                        .withFriendlyName("gcue")
                                        .withInternalIdentifier("kdosvqw")
                                        .withBcdrState("mdgbbjfdd")
                                        .withHealthErrorDetails(Arrays.asList())
                                        .withHealth("bexppb"))
                                .withLocation("q")))
                .withNextLink("n");
        model = BinaryData.fromObject(model).toObject(FabricCollection.class);
        Assertions.assertEquals("ibmadgakeqsrxy", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("e", model.value().get(0).properties().internalIdentifier());
        Assertions.assertEquals("ytb", model.value().get(0).properties().bcdrState());
        Assertions.assertEquals("ouf", model.value().get(0).properties().health());
        Assertions.assertEquals("mnkzsmod", model.value().get(0).location());
        Assertions.assertEquals("n", model.nextLink());
    }
}
