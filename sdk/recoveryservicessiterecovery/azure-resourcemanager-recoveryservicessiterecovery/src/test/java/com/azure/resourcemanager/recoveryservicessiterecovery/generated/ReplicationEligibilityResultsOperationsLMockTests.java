// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicessiterecovery.SiteRecoveryManager;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationEligibilityResultsCollection;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReplicationEligibilityResultsOperationsLMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"bek\",\"type\":\"ynfpkyvnhiysdho\",\"id\":\"slhraqkiwlwkff\",\"properties\":{\"clientRequestId\":\"wmwqoguflte\",\"errors\":[{},{}]}},{\"name\":\"gefzj\",\"type\":\"jtqbgysi\",\"id\":\"hnvxwtd\",\"properties\":{\"clientRequestId\":\"bjdbtqyhkxu\",\"errors\":[{},{},{}]}},{\"name\":\"jqgbbjvov\",\"type\":\"whgjsmbcsl\",\"id\":\"gsabdgdheronsdu\",\"properties\":{\"clientRequestId\":\"zvzuat\",\"errors\":[{},{}]}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SiteRecoveryManager manager = SiteRecoveryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ReplicationEligibilityResultsCollection response = manager.replicationEligibilityResultsOperations()
            .listWithResponse("evt", "qwcz", com.azure.core.util.Context.NONE)
            .getValue();

    }
}
