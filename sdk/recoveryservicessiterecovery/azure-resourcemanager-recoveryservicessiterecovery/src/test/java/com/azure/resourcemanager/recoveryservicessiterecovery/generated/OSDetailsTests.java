// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.OSDetails;
import org.junit.jupiter.api.Assertions;

public final class OSDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OSDetails model = BinaryData.fromString(
            "{\"osType\":\"sqlv\",\"productType\":\"cpwgoljtzxnmxsd\",\"osEdition\":\"ygoogxqapjxva\",\"oSVersion\":\"jfucsaodjnosdkv\",\"oSMajorVersion\":\"fasgm\",\"oSMinorVersion\":\"rnzpducdaak\",\"userSelectedOSName\":\"jktzboimyfpq\"}")
            .toObject(OSDetails.class);
        Assertions.assertEquals("sqlv", model.osType());
        Assertions.assertEquals("cpwgoljtzxnmxsd", model.productType());
        Assertions.assertEquals("ygoogxqapjxva", model.osEdition());
        Assertions.assertEquals("jfucsaodjnosdkv", model.oSVersion());
        Assertions.assertEquals("fasgm", model.oSMajorVersion());
        Assertions.assertEquals("rnzpducdaak", model.oSMinorVersion());
        Assertions.assertEquals("jktzboimyfpq", model.userSelectedOSName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OSDetails model = new OSDetails().withOsType("sqlv")
            .withProductType("cpwgoljtzxnmxsd")
            .withOsEdition("ygoogxqapjxva")
            .withOSVersion("jfucsaodjnosdkv")
            .withOSMajorVersion("fasgm")
            .withOSMinorVersion("rnzpducdaak")
            .withUserSelectedOSName("jktzboimyfpq");
        model = BinaryData.fromObject(model).toObject(OSDetails.class);
        Assertions.assertEquals("sqlv", model.osType());
        Assertions.assertEquals("cpwgoljtzxnmxsd", model.productType());
        Assertions.assertEquals("ygoogxqapjxva", model.osEdition());
        Assertions.assertEquals("jfucsaodjnosdkv", model.oSVersion());
        Assertions.assertEquals("fasgm", model.oSMajorVersion());
        Assertions.assertEquals("rnzpducdaak", model.oSMinorVersion());
        Assertions.assertEquals("jktzboimyfpq", model.userSelectedOSName());
    }
}
