// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.OSDetails;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class OSDetailsTests {
    @Test
    public void testDeserialize() {
        OSDetails model =
            BinaryData
                .fromString(
                    "{\"osType\":\"qg\",\"productType\":\"lusrv\",\"osEdition\":\"simjceagbjqvlsu\",\"oSVersion\":\"wzas\",\"oSMajorVersion\":\"gon\",\"oSMinorVersion\":\"jfqipubyznclkfk\"}")
                .toObject(OSDetails.class);
        Assertions.assertEquals("qg", model.osType());
        Assertions.assertEquals("lusrv", model.productType());
        Assertions.assertEquals("simjceagbjqvlsu", model.osEdition());
        Assertions.assertEquals("wzas", model.oSVersion());
        Assertions.assertEquals("gon", model.oSMajorVersion());
        Assertions.assertEquals("jfqipubyznclkfk", model.oSMinorVersion());
    }

    @Test
    public void testSerialize() {
        OSDetails model =
            new OSDetails()
                .withOsType("qg")
                .withProductType("lusrv")
                .withOsEdition("simjceagbjqvlsu")
                .withOSVersion("wzas")
                .withOSMajorVersion("gon")
                .withOSMinorVersion("jfqipubyznclkfk");
        model = BinaryData.fromObject(model).toObject(OSDetails.class);
        Assertions.assertEquals("qg", model.osType());
        Assertions.assertEquals("lusrv", model.productType());
        Assertions.assertEquals("simjceagbjqvlsu", model.osEdition());
        Assertions.assertEquals("wzas", model.oSVersion());
        Assertions.assertEquals("gon", model.oSMajorVersion());
        Assertions.assertEquals("jfqipubyznclkfk", model.oSMinorVersion());
    }
}
