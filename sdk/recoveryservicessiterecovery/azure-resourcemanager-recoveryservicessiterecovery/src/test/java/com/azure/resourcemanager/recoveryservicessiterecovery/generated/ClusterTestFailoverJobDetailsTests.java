// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ClusterTestFailoverJobDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FailoverReplicationProtectedItemDetails;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ClusterTestFailoverJobDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterTestFailoverJobDetails model = BinaryData.fromString(
            "{\"instanceType\":\"ClusterTestFailoverJobDetails\",\"testFailoverStatus\":\"ibanb\",\"comments\":\"pwtzvpakloz\",\"networkName\":\"bzrpejp\",\"networkFriendlyName\":\"s\",\"networkType\":\"bttt\",\"protectedItemDetails\":[{\"name\":\"xunrswgkpjhboy\",\"friendlyName\":\"ebhuhkslgwlokhu\",\"testVmName\":\"ijyzcqypzqzufgsy\",\"testVmFriendlyName\":\"jyvdwtfxptpqayam\",\"networkConnectionStatus\":\"cf\",\"networkFriendlyName\":\"bmxsnxoc\",\"subnet\":\"llojkpoyhgwwdj\",\"recoveryPointId\":\"dbdljz\",\"recoveryPointTime\":\"2021-03-08T07:19:07Z\"}],\"affectedObjectDetails\":{\"dxwbsfpyxxtj\":\"vuqbsgzlrqhbjnqo\"}}")
            .toObject(ClusterTestFailoverJobDetails.class);
        Assertions.assertEquals("vuqbsgzlrqhbjnqo", model.affectedObjectDetails().get("dxwbsfpyxxtj"));
        Assertions.assertEquals("ibanb", model.testFailoverStatus());
        Assertions.assertEquals("pwtzvpakloz", model.comments());
        Assertions.assertEquals("bzrpejp", model.networkName());
        Assertions.assertEquals("s", model.networkFriendlyName());
        Assertions.assertEquals("bttt", model.networkType());
        Assertions.assertEquals("xunrswgkpjhboy", model.protectedItemDetails().get(0).name());
        Assertions.assertEquals("ebhuhkslgwlokhu", model.protectedItemDetails().get(0).friendlyName());
        Assertions.assertEquals("ijyzcqypzqzufgsy", model.protectedItemDetails().get(0).testVmName());
        Assertions.assertEquals("jyvdwtfxptpqayam", model.protectedItemDetails().get(0).testVmFriendlyName());
        Assertions.assertEquals("cf", model.protectedItemDetails().get(0).networkConnectionStatus());
        Assertions.assertEquals("bmxsnxoc", model.protectedItemDetails().get(0).networkFriendlyName());
        Assertions.assertEquals("llojkpoyhgwwdj", model.protectedItemDetails().get(0).subnet());
        Assertions.assertEquals("dbdljz", model.protectedItemDetails().get(0).recoveryPointId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-08T07:19:07Z"),
            model.protectedItemDetails().get(0).recoveryPointTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterTestFailoverJobDetails model
            = new ClusterTestFailoverJobDetails().withAffectedObjectDetails(mapOf("dxwbsfpyxxtj", "vuqbsgzlrqhbjnqo"))
                .withTestFailoverStatus("ibanb")
                .withComments("pwtzvpakloz")
                .withNetworkName("bzrpejp")
                .withNetworkFriendlyName("s")
                .withNetworkType("bttt")
                .withProtectedItemDetails(
                    Arrays.asList(new FailoverReplicationProtectedItemDetails().withName("xunrswgkpjhboy")
                        .withFriendlyName("ebhuhkslgwlokhu")
                        .withTestVmName("ijyzcqypzqzufgsy")
                        .withTestVmFriendlyName("jyvdwtfxptpqayam")
                        .withNetworkConnectionStatus("cf")
                        .withNetworkFriendlyName("bmxsnxoc")
                        .withSubnet("llojkpoyhgwwdj")
                        .withRecoveryPointId("dbdljz")
                        .withRecoveryPointTime(OffsetDateTime.parse("2021-03-08T07:19:07Z"))));
        model = BinaryData.fromObject(model).toObject(ClusterTestFailoverJobDetails.class);
        Assertions.assertEquals("vuqbsgzlrqhbjnqo", model.affectedObjectDetails().get("dxwbsfpyxxtj"));
        Assertions.assertEquals("ibanb", model.testFailoverStatus());
        Assertions.assertEquals("pwtzvpakloz", model.comments());
        Assertions.assertEquals("bzrpejp", model.networkName());
        Assertions.assertEquals("s", model.networkFriendlyName());
        Assertions.assertEquals("bttt", model.networkType());
        Assertions.assertEquals("xunrswgkpjhboy", model.protectedItemDetails().get(0).name());
        Assertions.assertEquals("ebhuhkslgwlokhu", model.protectedItemDetails().get(0).friendlyName());
        Assertions.assertEquals("ijyzcqypzqzufgsy", model.protectedItemDetails().get(0).testVmName());
        Assertions.assertEquals("jyvdwtfxptpqayam", model.protectedItemDetails().get(0).testVmFriendlyName());
        Assertions.assertEquals("cf", model.protectedItemDetails().get(0).networkConnectionStatus());
        Assertions.assertEquals("bmxsnxoc", model.protectedItemDetails().get(0).networkFriendlyName());
        Assertions.assertEquals("llojkpoyhgwwdj", model.protectedItemDetails().get(0).subnet());
        Assertions.assertEquals("dbdljz", model.protectedItemDetails().get(0).recoveryPointId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-08T07:19:07Z"),
            model.protectedItemDetails().get(0).recoveryPointTime());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
