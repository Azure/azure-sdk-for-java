// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AddRecoveryServicesProviderInputProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IdentityProviderInput;
import org.junit.jupiter.api.Assertions;

public final class AddRecoveryServicesProviderInputPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AddRecoveryServicesProviderInputProperties model =
            BinaryData
                .fromString(
                    "{\"machineName\":\"aeoisrvh\",\"machineId\":\"orffukiscv\",\"biosId\":\"zhwplefaxvxilc\",\"authenticationIdentityInput\":{\"tenantId\":\"tg\",\"applicationId\":\"hnze\",\"objectId\":\"qxtjjfzqlqhyca\",\"audience\":\"odggx\",\"aadAuthority\":\"beesmieknlra\"},\"resourceAccessIdentityInput\":{\"tenantId\":\"iaa\",\"applicationId\":\"iuagydwqfbylyrfg\",\"objectId\":\"agt\",\"audience\":\"ojocqwogf\",\"aadAuthority\":\"zjvusfzldmo\"},\"dataPlaneAuthenticationIdentityInput\":{\"tenantId\":\"xylfsb\",\"applicationId\":\"kadpysown\",\"objectId\":\"tgkbugrjqctojc\",\"audience\":\"isofieypefojyqd\",\"aadAuthority\":\"cuplcplcwkhih\"}}")
                .toObject(AddRecoveryServicesProviderInputProperties.class);
        Assertions.assertEquals("aeoisrvh", model.machineName());
        Assertions.assertEquals("orffukiscv", model.machineId());
        Assertions.assertEquals("zhwplefaxvxilc", model.biosId());
        Assertions.assertEquals("tg", model.authenticationIdentityInput().tenantId());
        Assertions.assertEquals("hnze", model.authenticationIdentityInput().applicationId());
        Assertions.assertEquals("qxtjjfzqlqhyca", model.authenticationIdentityInput().objectId());
        Assertions.assertEquals("odggx", model.authenticationIdentityInput().audience());
        Assertions.assertEquals("beesmieknlra", model.authenticationIdentityInput().aadAuthority());
        Assertions.assertEquals("iaa", model.resourceAccessIdentityInput().tenantId());
        Assertions.assertEquals("iuagydwqfbylyrfg", model.resourceAccessIdentityInput().applicationId());
        Assertions.assertEquals("agt", model.resourceAccessIdentityInput().objectId());
        Assertions.assertEquals("ojocqwogf", model.resourceAccessIdentityInput().audience());
        Assertions.assertEquals("zjvusfzldmo", model.resourceAccessIdentityInput().aadAuthority());
        Assertions.assertEquals("xylfsb", model.dataPlaneAuthenticationIdentityInput().tenantId());
        Assertions.assertEquals("kadpysown", model.dataPlaneAuthenticationIdentityInput().applicationId());
        Assertions.assertEquals("tgkbugrjqctojc", model.dataPlaneAuthenticationIdentityInput().objectId());
        Assertions.assertEquals("isofieypefojyqd", model.dataPlaneAuthenticationIdentityInput().audience());
        Assertions.assertEquals("cuplcplcwkhih", model.dataPlaneAuthenticationIdentityInput().aadAuthority());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AddRecoveryServicesProviderInputProperties model =
            new AddRecoveryServicesProviderInputProperties()
                .withMachineName("aeoisrvh")
                .withMachineId("orffukiscv")
                .withBiosId("zhwplefaxvxilc")
                .withAuthenticationIdentityInput(
                    new IdentityProviderInput()
                        .withTenantId("tg")
                        .withApplicationId("hnze")
                        .withObjectId("qxtjjfzqlqhyca")
                        .withAudience("odggx")
                        .withAadAuthority("beesmieknlra"))
                .withResourceAccessIdentityInput(
                    new IdentityProviderInput()
                        .withTenantId("iaa")
                        .withApplicationId("iuagydwqfbylyrfg")
                        .withObjectId("agt")
                        .withAudience("ojocqwogf")
                        .withAadAuthority("zjvusfzldmo"))
                .withDataPlaneAuthenticationIdentityInput(
                    new IdentityProviderInput()
                        .withTenantId("xylfsb")
                        .withApplicationId("kadpysown")
                        .withObjectId("tgkbugrjqctojc")
                        .withAudience("isofieypefojyqd")
                        .withAadAuthority("cuplcplcwkhih"));
        model = BinaryData.fromObject(model).toObject(AddRecoveryServicesProviderInputProperties.class);
        Assertions.assertEquals("aeoisrvh", model.machineName());
        Assertions.assertEquals("orffukiscv", model.machineId());
        Assertions.assertEquals("zhwplefaxvxilc", model.biosId());
        Assertions.assertEquals("tg", model.authenticationIdentityInput().tenantId());
        Assertions.assertEquals("hnze", model.authenticationIdentityInput().applicationId());
        Assertions.assertEquals("qxtjjfzqlqhyca", model.authenticationIdentityInput().objectId());
        Assertions.assertEquals("odggx", model.authenticationIdentityInput().audience());
        Assertions.assertEquals("beesmieknlra", model.authenticationIdentityInput().aadAuthority());
        Assertions.assertEquals("iaa", model.resourceAccessIdentityInput().tenantId());
        Assertions.assertEquals("iuagydwqfbylyrfg", model.resourceAccessIdentityInput().applicationId());
        Assertions.assertEquals("agt", model.resourceAccessIdentityInput().objectId());
        Assertions.assertEquals("ojocqwogf", model.resourceAccessIdentityInput().audience());
        Assertions.assertEquals("zjvusfzldmo", model.resourceAccessIdentityInput().aadAuthority());
        Assertions.assertEquals("xylfsb", model.dataPlaneAuthenticationIdentityInput().tenantId());
        Assertions.assertEquals("kadpysown", model.dataPlaneAuthenticationIdentityInput().applicationId());
        Assertions.assertEquals("tgkbugrjqctojc", model.dataPlaneAuthenticationIdentityInput().objectId());
        Assertions.assertEquals("isofieypefojyqd", model.dataPlaneAuthenticationIdentityInput().audience());
        Assertions.assertEquals("cuplcplcwkhih", model.dataPlaneAuthenticationIdentityInput().aadAuthority());
    }
}
