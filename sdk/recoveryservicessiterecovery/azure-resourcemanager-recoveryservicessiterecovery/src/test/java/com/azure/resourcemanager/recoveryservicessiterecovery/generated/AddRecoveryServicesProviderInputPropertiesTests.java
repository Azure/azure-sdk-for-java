// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AddRecoveryServicesProviderInputProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IdentityProviderInput;
import org.junit.jupiter.api.Assertions;

public final class AddRecoveryServicesProviderInputPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AddRecoveryServicesProviderInputProperties model = BinaryData.fromString(
            "{\"machineName\":\"cc\",\"machineId\":\"nhxk\",\"biosId\":\"v\",\"authenticationIdentityInput\":{\"tenantId\":\"tnrzvuljra\",\"applicationId\":\"eranokqgukkjqnv\",\"objectId\":\"roylaxxu\",\"audience\":\"cdisd\",\"aadAuthority\":\"sfjbjsvg\"},\"resourceAccessIdentityInput\":{\"tenantId\":\"rwhryvycytd\",\"applicationId\":\"lxgccknfnwmbtm\",\"objectId\":\"pdvjdhttzaefedx\",\"audience\":\"hchrphkmcrjdqn\",\"aadAuthority\":\"dfzpbgtgkylkdg\"},\"dataPlaneAuthenticationIdentityInput\":{\"tenantId\":\"jeuut\",\"applicationId\":\"wxezwzhok\",\"objectId\":\"bwnhhtql\",\"audience\":\"ehgpp\",\"aadAuthority\":\"pifhpfeoajvgcxtx\"}}")
            .toObject(AddRecoveryServicesProviderInputProperties.class);
        Assertions.assertEquals("cc", model.machineName());
        Assertions.assertEquals("nhxk", model.machineId());
        Assertions.assertEquals("v", model.biosId());
        Assertions.assertEquals("tnrzvuljra", model.authenticationIdentityInput().tenantId());
        Assertions.assertEquals("eranokqgukkjqnv", model.authenticationIdentityInput().applicationId());
        Assertions.assertEquals("roylaxxu", model.authenticationIdentityInput().objectId());
        Assertions.assertEquals("cdisd", model.authenticationIdentityInput().audience());
        Assertions.assertEquals("sfjbjsvg", model.authenticationIdentityInput().aadAuthority());
        Assertions.assertEquals("rwhryvycytd", model.resourceAccessIdentityInput().tenantId());
        Assertions.assertEquals("lxgccknfnwmbtm", model.resourceAccessIdentityInput().applicationId());
        Assertions.assertEquals("pdvjdhttzaefedx", model.resourceAccessIdentityInput().objectId());
        Assertions.assertEquals("hchrphkmcrjdqn", model.resourceAccessIdentityInput().audience());
        Assertions.assertEquals("dfzpbgtgkylkdg", model.resourceAccessIdentityInput().aadAuthority());
        Assertions.assertEquals("jeuut", model.dataPlaneAuthenticationIdentityInput().tenantId());
        Assertions.assertEquals("wxezwzhok", model.dataPlaneAuthenticationIdentityInput().applicationId());
        Assertions.assertEquals("bwnhhtql", model.dataPlaneAuthenticationIdentityInput().objectId());
        Assertions.assertEquals("ehgpp", model.dataPlaneAuthenticationIdentityInput().audience());
        Assertions.assertEquals("pifhpfeoajvgcxtx", model.dataPlaneAuthenticationIdentityInput().aadAuthority());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AddRecoveryServicesProviderInputProperties model
            = new AddRecoveryServicesProviderInputProperties().withMachineName("cc")
                .withMachineId("nhxk")
                .withBiosId("v")
                .withAuthenticationIdentityInput(new IdentityProviderInput().withTenantId("tnrzvuljra")
                    .withApplicationId("eranokqgukkjqnv")
                    .withObjectId("roylaxxu")
                    .withAudience("cdisd")
                    .withAadAuthority("sfjbjsvg"))
                .withResourceAccessIdentityInput(new IdentityProviderInput().withTenantId("rwhryvycytd")
                    .withApplicationId("lxgccknfnwmbtm")
                    .withObjectId("pdvjdhttzaefedx")
                    .withAudience("hchrphkmcrjdqn")
                    .withAadAuthority("dfzpbgtgkylkdg"))
                .withDataPlaneAuthenticationIdentityInput(new IdentityProviderInput().withTenantId("jeuut")
                    .withApplicationId("wxezwzhok")
                    .withObjectId("bwnhhtql")
                    .withAudience("ehgpp")
                    .withAadAuthority("pifhpfeoajvgcxtx"));
        model = BinaryData.fromObject(model).toObject(AddRecoveryServicesProviderInputProperties.class);
        Assertions.assertEquals("cc", model.machineName());
        Assertions.assertEquals("nhxk", model.machineId());
        Assertions.assertEquals("v", model.biosId());
        Assertions.assertEquals("tnrzvuljra", model.authenticationIdentityInput().tenantId());
        Assertions.assertEquals("eranokqgukkjqnv", model.authenticationIdentityInput().applicationId());
        Assertions.assertEquals("roylaxxu", model.authenticationIdentityInput().objectId());
        Assertions.assertEquals("cdisd", model.authenticationIdentityInput().audience());
        Assertions.assertEquals("sfjbjsvg", model.authenticationIdentityInput().aadAuthority());
        Assertions.assertEquals("rwhryvycytd", model.resourceAccessIdentityInput().tenantId());
        Assertions.assertEquals("lxgccknfnwmbtm", model.resourceAccessIdentityInput().applicationId());
        Assertions.assertEquals("pdvjdhttzaefedx", model.resourceAccessIdentityInput().objectId());
        Assertions.assertEquals("hchrphkmcrjdqn", model.resourceAccessIdentityInput().audience());
        Assertions.assertEquals("dfzpbgtgkylkdg", model.resourceAccessIdentityInput().aadAuthority());
        Assertions.assertEquals("jeuut", model.dataPlaneAuthenticationIdentityInput().tenantId());
        Assertions.assertEquals("wxezwzhok", model.dataPlaneAuthenticationIdentityInput().applicationId());
        Assertions.assertEquals("bwnhhtql", model.dataPlaneAuthenticationIdentityInput().objectId());
        Assertions.assertEquals("ehgpp", model.dataPlaneAuthenticationIdentityInput().audience());
        Assertions.assertEquals("pifhpfeoajvgcxtx", model.dataPlaneAuthenticationIdentityInput().aadAuthority());
    }
}
