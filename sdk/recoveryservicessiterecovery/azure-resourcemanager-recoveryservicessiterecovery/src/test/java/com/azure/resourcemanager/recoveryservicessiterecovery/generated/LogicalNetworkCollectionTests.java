// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.LogicalNetworkInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.LogicalNetworkCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.LogicalNetworkProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class LogicalNetworkCollectionTests {
    @Test
    public void testDeserialize() {
        LogicalNetworkCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"friendlyName\":\"kbfkg\",\"networkVirtualizationStatus\":\"dkexxppofm\",\"logicalNetworkUsage\":\"x\",\"logicalNetworkDefinitionsStatus\":\"jpgd\"},\"location\":\"ocjjxhvpmouexh\",\"id\":\"zxibqeoj\",\"name\":\"xqbzvddntwnd\",\"type\":\"icbtwnpzao\"}],\"nextLink\":\"uhrhcffcyddgl\"}")
                .toObject(LogicalNetworkCollection.class);
        Assertions.assertEquals("kbfkg", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("dkexxppofm", model.value().get(0).properties().networkVirtualizationStatus());
        Assertions.assertEquals("x", model.value().get(0).properties().logicalNetworkUsage());
        Assertions.assertEquals("jpgd", model.value().get(0).properties().logicalNetworkDefinitionsStatus());
        Assertions.assertEquals("ocjjxhvpmouexh", model.value().get(0).location());
        Assertions.assertEquals("uhrhcffcyddgl", model.nextLink());
    }

    @Test
    public void testSerialize() {
        LogicalNetworkCollection model =
            new LogicalNetworkCollection()
                .withValue(
                    Arrays
                        .asList(
                            new LogicalNetworkInner()
                                .withProperties(
                                    new LogicalNetworkProperties()
                                        .withFriendlyName("kbfkg")
                                        .withNetworkVirtualizationStatus("dkexxppofm")
                                        .withLogicalNetworkUsage("x")
                                        .withLogicalNetworkDefinitionsStatus("jpgd"))
                                .withLocation("ocjjxhvpmouexh")))
                .withNextLink("uhrhcffcyddgl");
        model = BinaryData.fromObject(model).toObject(LogicalNetworkCollection.class);
        Assertions.assertEquals("kbfkg", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("dkexxppofm", model.value().get(0).properties().networkVirtualizationStatus());
        Assertions.assertEquals("x", model.value().get(0).properties().logicalNetworkUsage());
        Assertions.assertEquals("jpgd", model.value().get(0).properties().logicalNetworkDefinitionsStatus());
        Assertions.assertEquals("ocjjxhvpmouexh", model.value().get(0).location());
        Assertions.assertEquals("uhrhcffcyddgl", model.nextLink());
    }
}
