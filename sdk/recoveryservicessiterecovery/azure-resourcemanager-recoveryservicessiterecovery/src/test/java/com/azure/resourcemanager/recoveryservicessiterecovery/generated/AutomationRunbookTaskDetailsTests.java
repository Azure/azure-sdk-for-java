// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AutomationRunbookTaskDetails;
import org.junit.jupiter.api.Assertions;

public final class AutomationRunbookTaskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutomationRunbookTaskDetails model = BinaryData.fromString(
            "{\"instanceType\":\"AutomationRunbookTaskDetails\",\"name\":\"u\",\"cloudServiceName\":\"a\",\"subscriptionId\":\"mhudfjecehokwcp\",\"accountName\":\"wloesqrggvrbn\",\"runbookId\":\"ukoila\",\"runbookName\":\"duwjleipjlhwy\",\"jobId\":\"zr\",\"jobOutput\":\"ythqkkwhbgxvel\",\"isPrimarySideScript\":true}")
            .toObject(AutomationRunbookTaskDetails.class);
        Assertions.assertEquals("u", model.name());
        Assertions.assertEquals("a", model.cloudServiceName());
        Assertions.assertEquals("mhudfjecehokwcp", model.subscriptionId());
        Assertions.assertEquals("wloesqrggvrbn", model.accountName());
        Assertions.assertEquals("ukoila", model.runbookId());
        Assertions.assertEquals("duwjleipjlhwy", model.runbookName());
        Assertions.assertEquals("zr", model.jobId());
        Assertions.assertEquals("ythqkkwhbgxvel", model.jobOutput());
        Assertions.assertTrue(model.isPrimarySideScript());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AutomationRunbookTaskDetails model = new AutomationRunbookTaskDetails().withName("u")
            .withCloudServiceName("a")
            .withSubscriptionId("mhudfjecehokwcp")
            .withAccountName("wloesqrggvrbn")
            .withRunbookId("ukoila")
            .withRunbookName("duwjleipjlhwy")
            .withJobId("zr")
            .withJobOutput("ythqkkwhbgxvel")
            .withIsPrimarySideScript(true);
        model = BinaryData.fromObject(model).toObject(AutomationRunbookTaskDetails.class);
        Assertions.assertEquals("u", model.name());
        Assertions.assertEquals("a", model.cloudServiceName());
        Assertions.assertEquals("mhudfjecehokwcp", model.subscriptionId());
        Assertions.assertEquals("wloesqrggvrbn", model.accountName());
        Assertions.assertEquals("ukoila", model.runbookId());
        Assertions.assertEquals("duwjleipjlhwy", model.runbookName());
        Assertions.assertEquals("zr", model.jobId());
        Assertions.assertEquals("ythqkkwhbgxvel", model.jobOutput());
        Assertions.assertTrue(model.isPrimarySideScript());
    }
}
