// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AutomationRunbookTaskDetails;
import org.junit.jupiter.api.Assertions;

public final class AutomationRunbookTaskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutomationRunbookTaskDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"AutomationRunbookTaskDetails\",\"name\":\"qlrqffaweyurk\",\"cloudServiceName\":\"y\",\"subscriptionId\":\"xra\",\"accountName\":\"uqd\",\"runbookId\":\"xmrgchbapxkiy\",\"runbookName\":\"j\",\"jobId\":\"ajb\",\"jobOutput\":\"cgduusio\",\"isPrimarySideScript\":true}")
                .toObject(AutomationRunbookTaskDetails.class);
        Assertions.assertEquals("qlrqffaweyurk", model.name());
        Assertions.assertEquals("y", model.cloudServiceName());
        Assertions.assertEquals("xra", model.subscriptionId());
        Assertions.assertEquals("uqd", model.accountName());
        Assertions.assertEquals("xmrgchbapxkiy", model.runbookId());
        Assertions.assertEquals("j", model.runbookName());
        Assertions.assertEquals("ajb", model.jobId());
        Assertions.assertEquals("cgduusio", model.jobOutput());
        Assertions.assertEquals(true, model.isPrimarySideScript());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AutomationRunbookTaskDetails model =
            new AutomationRunbookTaskDetails()
                .withName("qlrqffaweyurk")
                .withCloudServiceName("y")
                .withSubscriptionId("xra")
                .withAccountName("uqd")
                .withRunbookId("xmrgchbapxkiy")
                .withRunbookName("j")
                .withJobId("ajb")
                .withJobOutput("cgduusio")
                .withIsPrimarySideScript(true);
        model = BinaryData.fromObject(model).toObject(AutomationRunbookTaskDetails.class);
        Assertions.assertEquals("qlrqffaweyurk", model.name());
        Assertions.assertEquals("y", model.cloudServiceName());
        Assertions.assertEquals("xra", model.subscriptionId());
        Assertions.assertEquals("uqd", model.accountName());
        Assertions.assertEquals("xmrgchbapxkiy", model.runbookId());
        Assertions.assertEquals("j", model.runbookName());
        Assertions.assertEquals("ajb", model.jobId());
        Assertions.assertEquals("cgduusio", model.jobOutput());
        Assertions.assertEquals(true, model.isPrimarySideScript());
    }
}
