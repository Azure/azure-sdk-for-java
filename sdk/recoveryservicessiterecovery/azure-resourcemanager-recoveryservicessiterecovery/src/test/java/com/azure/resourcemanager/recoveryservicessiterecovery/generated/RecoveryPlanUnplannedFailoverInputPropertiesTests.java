// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PossibleOperationsDirections;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProviderSpecificFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanUnplannedFailoverInputProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SourceSiteOperations;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RecoveryPlanUnplannedFailoverInputPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RecoveryPlanUnplannedFailoverInputProperties model = BinaryData.fromString(
            "{\"failoverDirection\":\"PrimaryToRecovery\",\"sourceSiteOperations\":\"NotRequired\",\"providerSpecificDetails\":[{\"instanceType\":\"RecoveryPlanProviderSpecificFailoverInput\"},{\"instanceType\":\"RecoveryPlanProviderSpecificFailoverInput\"}]}")
            .toObject(RecoveryPlanUnplannedFailoverInputProperties.class);
        Assertions.assertEquals(PossibleOperationsDirections.PRIMARY_TO_RECOVERY, model.failoverDirection());
        Assertions.assertEquals(SourceSiteOperations.NOT_REQUIRED, model.sourceSiteOperations());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RecoveryPlanUnplannedFailoverInputProperties model = new RecoveryPlanUnplannedFailoverInputProperties()
            .withFailoverDirection(PossibleOperationsDirections.PRIMARY_TO_RECOVERY)
            .withSourceSiteOperations(SourceSiteOperations.NOT_REQUIRED)
            .withProviderSpecificDetails(Arrays.asList(new RecoveryPlanProviderSpecificFailoverInput(),
                new RecoveryPlanProviderSpecificFailoverInput()));
        model = BinaryData.fromObject(model).toObject(RecoveryPlanUnplannedFailoverInputProperties.class);
        Assertions.assertEquals(PossibleOperationsDirections.PRIMARY_TO_RECOVERY, model.failoverDirection());
        Assertions.assertEquals(SourceSiteOperations.NOT_REQUIRED, model.sourceSiteOperations());
    }
}
