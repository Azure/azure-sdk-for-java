// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PossibleOperationsDirections;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProviderSpecificFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanUnplannedFailoverInputProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SourceSiteOperations;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class RecoveryPlanUnplannedFailoverInputPropertiesTests {
    @Test
    public void testDeserialize() {
        RecoveryPlanUnplannedFailoverInputProperties model =
            BinaryData
                .fromString(
                    "{\"failoverDirection\":\"RecoveryToPrimary\",\"sourceSiteOperations\":\"NotRequired\",\"providerSpecificDetails\":[{\"instanceType\":\"RecoveryPlanProviderSpecificFailoverInput\"},{\"instanceType\":\"RecoveryPlanProviderSpecificFailoverInput\"}]}")
                .toObject(RecoveryPlanUnplannedFailoverInputProperties.class);
        Assertions.assertEquals(PossibleOperationsDirections.RECOVERY_TO_PRIMARY, model.failoverDirection());
        Assertions.assertEquals(SourceSiteOperations.NOT_REQUIRED, model.sourceSiteOperations());
    }

    @Test
    public void testSerialize() {
        RecoveryPlanUnplannedFailoverInputProperties model =
            new RecoveryPlanUnplannedFailoverInputProperties()
                .withFailoverDirection(PossibleOperationsDirections.RECOVERY_TO_PRIMARY)
                .withSourceSiteOperations(SourceSiteOperations.NOT_REQUIRED)
                .withProviderSpecificDetails(
                    Arrays
                        .asList(
                            new RecoveryPlanProviderSpecificFailoverInput(),
                            new RecoveryPlanProviderSpecificFailoverInput()));
        model = BinaryData.fromObject(model).toObject(RecoveryPlanUnplannedFailoverInputProperties.class);
        Assertions.assertEquals(PossibleOperationsDirections.RECOVERY_TO_PRIMARY, model.failoverDirection());
        Assertions.assertEquals(SourceSiteOperations.NOT_REQUIRED, model.sourceSiteOperations());
    }
}
