// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.ReplicationProtectedItemInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationProtectedItemCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationProtectedItemProperties;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ReplicationProtectedItemCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReplicationProtectedItemCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"friendlyName\":\"mwyhr\",\"protectedItemType\":\"uyfta\",\"protectableItemId\":\"cpwi\",\"recoveryServicesProviderId\":\"vqtmnub\",\"primaryFabricFriendlyName\":\"kpzksmondjmq\",\"primaryFabricProvider\":\"vypomgkopkwho\",\"recoveryFabricFriendlyName\":\"pajqgxysm\",\"recoveryFabricId\":\"mbqfqvmk\",\"primaryProtectionContainerFriendlyName\":\"oz\",\"recoveryProtectionContainerFriendlyName\":\"vhelxprglyatdd\",\"protectionState\":\"cbcuejrjxgciqi\",\"protectionStateDescription\":\"hos\",\"activeLocation\":\"dqrhzoymib\",\"testFailoverState\":\"qyib\",\"testFailoverStateDescription\":\"wfluszdt\",\"switchProviderState\":\"rkwofyyvoqa\",\"switchProviderStateDescription\":\"iexpbtgiwbwo\",\"allowedOperations\":[],\"replicationHealth\":\"ashrt\",\"failoverHealth\":\"kcnqxwbpo\",\"healthErrors\":[],\"policyId\":\"pi\",\"policyFriendlyName\":\"waasip\",\"lastSuccessfulFailoverTime\":\"2021-10-02T17:21:38Z\",\"lastSuccessfulTestFailoverTime\":\"2021-09-26T03:40:24Z\",\"failoverRecoveryPointId\":\"qerpqlpqwcc\",\"recoveryContainerId\":\"gbdbutauv\",\"eventCorrelationId\":\"tkuwhhmhykojo\"},\"location\":\"fnndl\",\"id\":\"ichkoymkcdyhb\",\"name\":\"kkpwdreqnovvq\",\"type\":\"ovljxywsu\"},{\"properties\":{\"friendlyName\":\"rsndsytgadgvra\",\"protectedItemType\":\"en\",\"protectableItemId\":\"nzar\",\"recoveryServicesProviderId\":\"lquuijfqkacewii\",\"primaryFabricFriendlyName\":\"pubjibw\",\"primaryFabricProvider\":\"f\",\"recoveryFabricFriendlyName\":\"hqkvpuvksgplsak\",\"recoveryFabricId\":\"n\",\"primaryProtectionContainerFriendlyName\":\"ynl\",\"recoveryProtectionContainerFriendlyName\":\"huopxodlqiynto\",\"protectionState\":\"ihleos\",\"protectionStateDescription\":\"w\",\"activeLocation\":\"mslyzrpzbchckqqz\",\"testFailoverState\":\"ox\",\"testFailoverStateDescription\":\"suiizynkedyat\",\"switchProviderState\":\"yhqmibzyhwi\",\"switchProviderStateDescription\":\"mypyynpcdpu\",\"allowedOperations\":[],\"replicationHealth\":\"g\",\"failoverHealth\":\"z\",\"healthErrors\":[],\"policyId\":\"biknsorgjhxbld\",\"policyFriendlyName\":\"wwrlkdmtncv\",\"lastSuccessfulFailoverTime\":\"2021-02-27T06:46:30Z\",\"lastSuccessfulTestFailoverTime\":\"2021-07-06T10:29:53Z\",\"failoverRecoveryPointId\":\"d\",\"recoveryContainerId\":\"syocogjltdtbnnha\",\"eventCorrelationId\":\"ocrkvcikh\"},\"location\":\"p\",\"id\":\"mqg\",\"name\":\"qqu\",\"type\":\"zikywgg\"},{\"properties\":{\"friendlyName\":\"lla\",\"protectedItemType\":\"elwuipi\",\"protectableItemId\":\"jzkzi\",\"recoveryServicesProviderId\":\"vvcnayr\",\"primaryFabricFriendlyName\":\"rnxxmueed\",\"primaryFabricProvider\":\"rdvstkwqqtch\",\"recoveryFabricFriendlyName\":\"lmfmtdaay\",\"recoveryFabricId\":\"v\",\"primaryProtectionContainerFriendlyName\":\"gpiohgwxrtfudxe\",\"recoveryProtectionContainerFriendlyName\":\"gyqagvrvmnpkuk\",\"protectionState\":\"i\",\"protectionStateDescription\":\"blxgwimf\",\"activeLocation\":\"hfjx\",\"testFailoverState\":\"szkkfoqre\",\"testFailoverStateDescription\":\"kzikfjawneaivxwc\",\"switchProviderState\":\"lpcirelsf\",\"switchProviderStateDescription\":\"enwabfatk\",\"allowedOperations\":[],\"replicationHealth\":\"xbjhwuaanozjosph\",\"failoverHealth\":\"ulpjr\",\"healthErrors\":[],\"policyId\":\"glrvimjwosytxi\",\"policyFriendlyName\":\"skfc\",\"lastSuccessfulFailoverTime\":\"2021-03-03T12:07:05Z\",\"lastSuccessfulTestFailoverTime\":\"2021-11-11T13:45:02Z\",\"failoverRecoveryPointId\":\"kkezzikhlyfjhdgq\",\"recoveryContainerId\":\"bdunygaeqid\",\"eventCorrelationId\":\"fatpxllrxcyjmoa\"},\"location\":\"uvarmywdmjsjq\",\"id\":\"jhhyxxrwlycoduhp\",\"name\":\"xkgymareqnajxqu\",\"type\":\"jhkycub\"}],\"nextLink\":\"dgssofwqmzqal\"}")
                .toObject(ReplicationProtectedItemCollection.class);
        Assertions.assertEquals("mwyhr", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("uyfta", model.value().get(0).properties().protectedItemType());
        Assertions.assertEquals("cpwi", model.value().get(0).properties().protectableItemId());
        Assertions.assertEquals("vqtmnub", model.value().get(0).properties().recoveryServicesProviderId());
        Assertions.assertEquals("kpzksmondjmq", model.value().get(0).properties().primaryFabricFriendlyName());
        Assertions.assertEquals("vypomgkopkwho", model.value().get(0).properties().primaryFabricProvider());
        Assertions.assertEquals("pajqgxysm", model.value().get(0).properties().recoveryFabricFriendlyName());
        Assertions.assertEquals("mbqfqvmk", model.value().get(0).properties().recoveryFabricId());
        Assertions.assertEquals("oz", model.value().get(0).properties().primaryProtectionContainerFriendlyName());
        Assertions
            .assertEquals(
                "vhelxprglyatdd", model.value().get(0).properties().recoveryProtectionContainerFriendlyName());
        Assertions.assertEquals("cbcuejrjxgciqi", model.value().get(0).properties().protectionState());
        Assertions.assertEquals("hos", model.value().get(0).properties().protectionStateDescription());
        Assertions.assertEquals("dqrhzoymib", model.value().get(0).properties().activeLocation());
        Assertions.assertEquals("qyib", model.value().get(0).properties().testFailoverState());
        Assertions.assertEquals("wfluszdt", model.value().get(0).properties().testFailoverStateDescription());
        Assertions.assertEquals("rkwofyyvoqa", model.value().get(0).properties().switchProviderState());
        Assertions.assertEquals("iexpbtgiwbwo", model.value().get(0).properties().switchProviderStateDescription());
        Assertions.assertEquals("ashrt", model.value().get(0).properties().replicationHealth());
        Assertions.assertEquals("kcnqxwbpo", model.value().get(0).properties().failoverHealth());
        Assertions.assertEquals("pi", model.value().get(0).properties().policyId());
        Assertions.assertEquals("waasip", model.value().get(0).properties().policyFriendlyName());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-10-02T17:21:38Z"),
                model.value().get(0).properties().lastSuccessfulFailoverTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-09-26T03:40:24Z"),
                model.value().get(0).properties().lastSuccessfulTestFailoverTime());
        Assertions.assertEquals("qerpqlpqwcc", model.value().get(0).properties().failoverRecoveryPointId());
        Assertions.assertEquals("gbdbutauv", model.value().get(0).properties().recoveryContainerId());
        Assertions.assertEquals("tkuwhhmhykojo", model.value().get(0).properties().eventCorrelationId());
        Assertions.assertEquals("fnndl", model.value().get(0).location());
        Assertions.assertEquals("dgssofwqmzqal", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReplicationProtectedItemCollection model =
            new ReplicationProtectedItemCollection()
                .withValue(
                    Arrays
                        .asList(
                            new ReplicationProtectedItemInner()
                                .withProperties(
                                    new ReplicationProtectedItemProperties()
                                        .withFriendlyName("mwyhr")
                                        .withProtectedItemType("uyfta")
                                        .withProtectableItemId("cpwi")
                                        .withRecoveryServicesProviderId("vqtmnub")
                                        .withPrimaryFabricFriendlyName("kpzksmondjmq")
                                        .withPrimaryFabricProvider("vypomgkopkwho")
                                        .withRecoveryFabricFriendlyName("pajqgxysm")
                                        .withRecoveryFabricId("mbqfqvmk")
                                        .withPrimaryProtectionContainerFriendlyName("oz")
                                        .withRecoveryProtectionContainerFriendlyName("vhelxprglyatdd")
                                        .withProtectionState("cbcuejrjxgciqi")
                                        .withProtectionStateDescription("hos")
                                        .withActiveLocation("dqrhzoymib")
                                        .withTestFailoverState("qyib")
                                        .withTestFailoverStateDescription("wfluszdt")
                                        .withSwitchProviderState("rkwofyyvoqa")
                                        .withSwitchProviderStateDescription("iexpbtgiwbwo")
                                        .withAllowedOperations(Arrays.asList())
                                        .withReplicationHealth("ashrt")
                                        .withFailoverHealth("kcnqxwbpo")
                                        .withHealthErrors(Arrays.asList())
                                        .withPolicyId("pi")
                                        .withPolicyFriendlyName("waasip")
                                        .withLastSuccessfulFailoverTime(OffsetDateTime.parse("2021-10-02T17:21:38Z"))
                                        .withLastSuccessfulTestFailoverTime(
                                            OffsetDateTime.parse("2021-09-26T03:40:24Z"))
                                        .withFailoverRecoveryPointId("qerpqlpqwcc")
                                        .withRecoveryContainerId("gbdbutauv")
                                        .withEventCorrelationId("tkuwhhmhykojo"))
                                .withLocation("fnndl"),
                            new ReplicationProtectedItemInner()
                                .withProperties(
                                    new ReplicationProtectedItemProperties()
                                        .withFriendlyName("rsndsytgadgvra")
                                        .withProtectedItemType("en")
                                        .withProtectableItemId("nzar")
                                        .withRecoveryServicesProviderId("lquuijfqkacewii")
                                        .withPrimaryFabricFriendlyName("pubjibw")
                                        .withPrimaryFabricProvider("f")
                                        .withRecoveryFabricFriendlyName("hqkvpuvksgplsak")
                                        .withRecoveryFabricId("n")
                                        .withPrimaryProtectionContainerFriendlyName("ynl")
                                        .withRecoveryProtectionContainerFriendlyName("huopxodlqiynto")
                                        .withProtectionState("ihleos")
                                        .withProtectionStateDescription("w")
                                        .withActiveLocation("mslyzrpzbchckqqz")
                                        .withTestFailoverState("ox")
                                        .withTestFailoverStateDescription("suiizynkedyat")
                                        .withSwitchProviderState("yhqmibzyhwi")
                                        .withSwitchProviderStateDescription("mypyynpcdpu")
                                        .withAllowedOperations(Arrays.asList())
                                        .withReplicationHealth("g")
                                        .withFailoverHealth("z")
                                        .withHealthErrors(Arrays.asList())
                                        .withPolicyId("biknsorgjhxbld")
                                        .withPolicyFriendlyName("wwrlkdmtncv")
                                        .withLastSuccessfulFailoverTime(OffsetDateTime.parse("2021-02-27T06:46:30Z"))
                                        .withLastSuccessfulTestFailoverTime(
                                            OffsetDateTime.parse("2021-07-06T10:29:53Z"))
                                        .withFailoverRecoveryPointId("d")
                                        .withRecoveryContainerId("syocogjltdtbnnha")
                                        .withEventCorrelationId("ocrkvcikh"))
                                .withLocation("p"),
                            new ReplicationProtectedItemInner()
                                .withProperties(
                                    new ReplicationProtectedItemProperties()
                                        .withFriendlyName("lla")
                                        .withProtectedItemType("elwuipi")
                                        .withProtectableItemId("jzkzi")
                                        .withRecoveryServicesProviderId("vvcnayr")
                                        .withPrimaryFabricFriendlyName("rnxxmueed")
                                        .withPrimaryFabricProvider("rdvstkwqqtch")
                                        .withRecoveryFabricFriendlyName("lmfmtdaay")
                                        .withRecoveryFabricId("v")
                                        .withPrimaryProtectionContainerFriendlyName("gpiohgwxrtfudxe")
                                        .withRecoveryProtectionContainerFriendlyName("gyqagvrvmnpkuk")
                                        .withProtectionState("i")
                                        .withProtectionStateDescription("blxgwimf")
                                        .withActiveLocation("hfjx")
                                        .withTestFailoverState("szkkfoqre")
                                        .withTestFailoverStateDescription("kzikfjawneaivxwc")
                                        .withSwitchProviderState("lpcirelsf")
                                        .withSwitchProviderStateDescription("enwabfatk")
                                        .withAllowedOperations(Arrays.asList())
                                        .withReplicationHealth("xbjhwuaanozjosph")
                                        .withFailoverHealth("ulpjr")
                                        .withHealthErrors(Arrays.asList())
                                        .withPolicyId("glrvimjwosytxi")
                                        .withPolicyFriendlyName("skfc")
                                        .withLastSuccessfulFailoverTime(OffsetDateTime.parse("2021-03-03T12:07:05Z"))
                                        .withLastSuccessfulTestFailoverTime(
                                            OffsetDateTime.parse("2021-11-11T13:45:02Z"))
                                        .withFailoverRecoveryPointId("kkezzikhlyfjhdgq")
                                        .withRecoveryContainerId("bdunygaeqid")
                                        .withEventCorrelationId("fatpxllrxcyjmoa"))
                                .withLocation("uvarmywdmjsjq")))
                .withNextLink("dgssofwqmzqal");
        model = BinaryData.fromObject(model).toObject(ReplicationProtectedItemCollection.class);
        Assertions.assertEquals("mwyhr", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("uyfta", model.value().get(0).properties().protectedItemType());
        Assertions.assertEquals("cpwi", model.value().get(0).properties().protectableItemId());
        Assertions.assertEquals("vqtmnub", model.value().get(0).properties().recoveryServicesProviderId());
        Assertions.assertEquals("kpzksmondjmq", model.value().get(0).properties().primaryFabricFriendlyName());
        Assertions.assertEquals("vypomgkopkwho", model.value().get(0).properties().primaryFabricProvider());
        Assertions.assertEquals("pajqgxysm", model.value().get(0).properties().recoveryFabricFriendlyName());
        Assertions.assertEquals("mbqfqvmk", model.value().get(0).properties().recoveryFabricId());
        Assertions.assertEquals("oz", model.value().get(0).properties().primaryProtectionContainerFriendlyName());
        Assertions
            .assertEquals(
                "vhelxprglyatdd", model.value().get(0).properties().recoveryProtectionContainerFriendlyName());
        Assertions.assertEquals("cbcuejrjxgciqi", model.value().get(0).properties().protectionState());
        Assertions.assertEquals("hos", model.value().get(0).properties().protectionStateDescription());
        Assertions.assertEquals("dqrhzoymib", model.value().get(0).properties().activeLocation());
        Assertions.assertEquals("qyib", model.value().get(0).properties().testFailoverState());
        Assertions.assertEquals("wfluszdt", model.value().get(0).properties().testFailoverStateDescription());
        Assertions.assertEquals("rkwofyyvoqa", model.value().get(0).properties().switchProviderState());
        Assertions.assertEquals("iexpbtgiwbwo", model.value().get(0).properties().switchProviderStateDescription());
        Assertions.assertEquals("ashrt", model.value().get(0).properties().replicationHealth());
        Assertions.assertEquals("kcnqxwbpo", model.value().get(0).properties().failoverHealth());
        Assertions.assertEquals("pi", model.value().get(0).properties().policyId());
        Assertions.assertEquals("waasip", model.value().get(0).properties().policyFriendlyName());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-10-02T17:21:38Z"),
                model.value().get(0).properties().lastSuccessfulFailoverTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-09-26T03:40:24Z"),
                model.value().get(0).properties().lastSuccessfulTestFailoverTime());
        Assertions.assertEquals("qerpqlpqwcc", model.value().get(0).properties().failoverRecoveryPointId());
        Assertions.assertEquals("gbdbutauv", model.value().get(0).properties().recoveryContainerId());
        Assertions.assertEquals("tkuwhhmhykojo", model.value().get(0).properties().eventCorrelationId());
        Assertions.assertEquals("fnndl", model.value().get(0).location());
        Assertions.assertEquals("dgssofwqmzqal", model.nextLink());
    }
}
