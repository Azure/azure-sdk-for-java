// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyInput;
import org.junit.jupiter.api.Assertions;

public final class HyperVReplicaBluePolicyInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVReplicaBluePolicyInput model = BinaryData.fromString(
            "{\"instanceType\":\"HyperVReplica2012R2\",\"replicationFrequencyInSeconds\":635322642,\"recoveryPoints\":1923596622,\"applicationConsistentSnapshotFrequencyInHours\":1537790283,\"compression\":\"nrholhujb\",\"initialReplicationMethod\":\"xiplkysolsyj\",\"onlineReplicationStartTime\":\"xslwhd\",\"offlineReplicationImportPath\":\"vhtbbzjhfvh\",\"offlineReplicationExportPath\":\"zb\",\"replicationPort\":1668972402,\"allowedAuthenticationType\":1931538005,\"replicaDeletion\":\"ihotjecohmxv\"}")
            .toObject(HyperVReplicaBluePolicyInput.class);
        Assertions.assertEquals(1923596622, model.recoveryPoints());
        Assertions.assertEquals(1537790283, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals("nrholhujb", model.compression());
        Assertions.assertEquals("xiplkysolsyj", model.initialReplicationMethod());
        Assertions.assertEquals("xslwhd", model.onlineReplicationStartTime());
        Assertions.assertEquals("vhtbbzjhfvh", model.offlineReplicationImportPath());
        Assertions.assertEquals("zb", model.offlineReplicationExportPath());
        Assertions.assertEquals(1668972402, model.replicationPort());
        Assertions.assertEquals(1931538005, model.allowedAuthenticationType());
        Assertions.assertEquals("ihotjecohmxv", model.replicaDeletion());
        Assertions.assertEquals(635322642, model.replicationFrequencyInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVReplicaBluePolicyInput model = new HyperVReplicaBluePolicyInput().withRecoveryPoints(1923596622)
            .withApplicationConsistentSnapshotFrequencyInHours(1537790283).withCompression("nrholhujb")
            .withInitialReplicationMethod("xiplkysolsyj").withOnlineReplicationStartTime("xslwhd")
            .withOfflineReplicationImportPath("vhtbbzjhfvh").withOfflineReplicationExportPath("zb")
            .withReplicationPort(1668972402).withAllowedAuthenticationType(1931538005)
            .withReplicaDeletion("ihotjecohmxv").withReplicationFrequencyInSeconds(635322642);
        model = BinaryData.fromObject(model).toObject(HyperVReplicaBluePolicyInput.class);
        Assertions.assertEquals(1923596622, model.recoveryPoints());
        Assertions.assertEquals(1537790283, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals("nrholhujb", model.compression());
        Assertions.assertEquals("xiplkysolsyj", model.initialReplicationMethod());
        Assertions.assertEquals("xslwhd", model.onlineReplicationStartTime());
        Assertions.assertEquals("vhtbbzjhfvh", model.offlineReplicationImportPath());
        Assertions.assertEquals("zb", model.offlineReplicationExportPath());
        Assertions.assertEquals(1668972402, model.replicationPort());
        Assertions.assertEquals(1931538005, model.allowedAuthenticationType());
        Assertions.assertEquals("ihotjecohmxv", model.replicaDeletion());
        Assertions.assertEquals(635322642, model.replicationFrequencyInSeconds());
    }
}
