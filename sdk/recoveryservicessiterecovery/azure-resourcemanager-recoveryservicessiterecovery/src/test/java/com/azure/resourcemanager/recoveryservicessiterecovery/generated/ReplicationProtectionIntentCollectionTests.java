// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.ReplicationProtectionIntentInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationProtectionIntentCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationProtectionIntentProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ReplicationProtectionIntentCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReplicationProtectionIntentCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"friendlyName\":\"ujeickp\",\"jobId\":\"cpopmxel\",\"jobState\":\"clt\",\"isActive\":true,\"creationTimeUTC\":\"ex\"},\"location\":\"f\",\"id\":\"kqscazuawxtzx\",\"name\":\"uamwabzxrvxc\",\"type\":\"s\"}],\"nextLink\":\"phai\"}")
                .toObject(ReplicationProtectionIntentCollection.class);
        Assertions.assertEquals("ujeickp", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("f", model.value().get(0).location());
        Assertions.assertEquals("phai", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReplicationProtectionIntentCollection model =
            new ReplicationProtectionIntentCollection()
                .withValue(
                    Arrays
                        .asList(
                            new ReplicationProtectionIntentInner()
                                .withProperties(new ReplicationProtectionIntentProperties().withFriendlyName("ujeickp"))
                                .withLocation("f")))
                .withNextLink("phai");
        model = BinaryData.fromObject(model).toObject(ReplicationProtectionIntentCollection.class);
        Assertions.assertEquals("ujeickp", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("f", model.value().get(0).location());
        Assertions.assertEquals("phai", model.nextLink());
    }
}
