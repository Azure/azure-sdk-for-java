// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.StorageClassificationInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.StorageClassificationCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.StorageClassificationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class StorageClassificationCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StorageClassificationCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"friendlyName\":\"zjcjbtr\"},\"location\":\"ehvvib\",\"id\":\"xjjs\",\"name\":\"oqbeitpkxzt\",\"type\":\"oobklftidgfcwq\"}],\"nextLink\":\"imaq\"}")
                .toObject(StorageClassificationCollection.class);
        Assertions.assertEquals("zjcjbtr", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("ehvvib", model.value().get(0).location());
        Assertions.assertEquals("imaq", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StorageClassificationCollection model =
            new StorageClassificationCollection()
                .withValue(
                    Arrays
                        .asList(
                            new StorageClassificationInner()
                                .withProperties(new StorageClassificationProperties().withFriendlyName("zjcjbtr"))
                                .withLocation("ehvvib")))
                .withNextLink("imaq");
        model = BinaryData.fromObject(model).toObject(StorageClassificationCollection.class);
        Assertions.assertEquals("zjcjbtr", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("ehvvib", model.value().get(0).location());
        Assertions.assertEquals("imaq", model.nextLink());
    }
}
