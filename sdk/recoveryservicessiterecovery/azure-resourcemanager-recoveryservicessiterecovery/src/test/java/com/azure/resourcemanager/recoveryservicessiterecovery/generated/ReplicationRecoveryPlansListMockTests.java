// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicessiterecovery.SiteRecoveryManager;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlan;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanGroupType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReplicationRecoveryPlansListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"friendlyName\":\"grzafqsoza\",\"primaryFabricId\":\"xnhlvagugwxdwt\",\"primaryFabricFriendlyName\":\"f\",\"recoveryFabricId\":\"rzplhaljomg\",\"recoveryFabricFriendlyName\":\"rprraptvbjenylg\",\"failoverDeploymentModel\":\"rsnvofuyzvbploa\",\"replicationProviders\":[\"ghgermmadkbxuips\"],\"allowedOperations\":[\"xugpubeq\",\"wxzmuzgueuygpbh\",\"u\",\"e\"],\"lastPlannedFailoverTime\":\"2021-01-08T05:05:30Z\",\"lastUnplannedFailoverTime\":\"2021-04-19T02:39:44Z\",\"lastTestFailoverTime\":\"2021-11-10T12:49:41Z\",\"currentScenario\":{\"scenarioName\":\"xzxwrnqwdjvlw\",\"jobId\":\"xyylwsfx\",\"startTime\":\"2021-08-16T16:53Z\"},\"currentScenarioStatus\":\"jezjcbciuaga\",\"currentScenarioStatusDescription\":\"xgwwm\",\"groups\":[{\"groupType\":\"Shutdown\",\"replicationProtectedItems\":[{},{},{},{}],\"startGroupActions\":[{\"actionName\":\"uzsyfwamhme\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"xxb\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"agwnom\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"iscnzcufysal\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"jfkjexqfzmhkridi\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]},{\"groupType\":\"Failover\",\"replicationProtectedItems\":[{},{}],\"startGroupActions\":[{\"actionName\":\"nmpifj\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"hjenb\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"upfpllo\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"adjffllrsfghyye\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"dzuddcccls\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]}],\"providerSpecificDetails\":[{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"},{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"},{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"},{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"}]},\"location\":\"xxpmnypktgslkok\",\"id\":\"aqgzcojgdqjhzfec\",\"name\":\"gpjnydkkgbvs\",\"type\":\"ks\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SiteRecoveryManager manager = SiteRecoveryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<RecoveryPlan> response
            = manager.replicationRecoveryPlans().list("fpjpsbcxqiyapi", "cjlfugnrz", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("grzafqsoza", response.iterator().next().properties().friendlyName());
        Assertions.assertEquals("xnhlvagugwxdwt", response.iterator().next().properties().primaryFabricId());
        Assertions.assertEquals("f", response.iterator().next().properties().primaryFabricFriendlyName());
        Assertions.assertEquals("rzplhaljomg", response.iterator().next().properties().recoveryFabricId());
        Assertions.assertEquals("rprraptvbjenylg",
            response.iterator().next().properties().recoveryFabricFriendlyName());
        Assertions.assertEquals("rsnvofuyzvbploa", response.iterator().next().properties().failoverDeploymentModel());
        Assertions.assertEquals("ghgermmadkbxuips",
            response.iterator().next().properties().replicationProviders().get(0));
        Assertions.assertEquals("xugpubeq", response.iterator().next().properties().allowedOperations().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-08T05:05:30Z"),
            response.iterator().next().properties().lastPlannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-19T02:39:44Z"),
            response.iterator().next().properties().lastUnplannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-10T12:49:41Z"),
            response.iterator().next().properties().lastTestFailoverTime());
        Assertions.assertEquals("xzxwrnqwdjvlw",
            response.iterator().next().properties().currentScenario().scenarioName());
        Assertions.assertEquals("xyylwsfx", response.iterator().next().properties().currentScenario().jobId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-16T16:53Z"),
            response.iterator().next().properties().currentScenario().startTime());
        Assertions.assertEquals("jezjcbciuaga", response.iterator().next().properties().currentScenarioStatus());
        Assertions.assertEquals("xgwwm", response.iterator().next().properties().currentScenarioStatusDescription());
        Assertions.assertEquals(RecoveryPlanGroupType.SHUTDOWN,
            response.iterator().next().properties().groups().get(0).groupType());
        Assertions.assertEquals("uzsyfwamhme",
            response.iterator().next().properties().groups().get(0).startGroupActions().get(0).actionName());
        Assertions.assertEquals("iscnzcufysal",
            response.iterator().next().properties().groups().get(0).endGroupActions().get(0).actionName());
        Assertions.assertEquals("xxpmnypktgslkok", response.iterator().next().location());
    }
}
