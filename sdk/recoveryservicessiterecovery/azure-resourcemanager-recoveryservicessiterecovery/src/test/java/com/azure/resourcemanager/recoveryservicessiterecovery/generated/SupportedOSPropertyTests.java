// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SupportedOSDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SupportedOSProperty;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SupportedOSPropertyTests {
    @Test
    public void testDeserialize() {
        SupportedOSProperty model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"gox\",\"supportedOs\":[{\"osName\":\"qhibtozipqwjedm\",\"osType\":\"r\",\"osVersions\":[]},{\"osName\":\"wpktvqylkmqpzoyh\",\"osType\":\"bcg\",\"osVersions\":[]},{\"osName\":\"oxoebqi\",\"osType\":\"ipnwj\",\"osVersions\":[]},{\"osName\":\"lafcbahh\",\"osType\":\"pofoi\",\"osVersions\":[]}]}")
                .toObject(SupportedOSProperty.class);
        Assertions.assertEquals("gox", model.instanceType());
        Assertions.assertEquals("qhibtozipqwjedm", model.supportedOs().get(0).osName());
        Assertions.assertEquals("r", model.supportedOs().get(0).osType());
    }

    @Test
    public void testSerialize() {
        SupportedOSProperty model =
            new SupportedOSProperty()
                .withInstanceType("gox")
                .withSupportedOs(
                    Arrays
                        .asList(
                            new SupportedOSDetails()
                                .withOsName("qhibtozipqwjedm")
                                .withOsType("r")
                                .withOsVersions(Arrays.asList()),
                            new SupportedOSDetails()
                                .withOsName("wpktvqylkmqpzoyh")
                                .withOsType("bcg")
                                .withOsVersions(Arrays.asList()),
                            new SupportedOSDetails()
                                .withOsName("oxoebqi")
                                .withOsType("ipnwj")
                                .withOsVersions(Arrays.asList()),
                            new SupportedOSDetails()
                                .withOsName("lafcbahh")
                                .withOsType("pofoi")
                                .withOsVersions(Arrays.asList())));
        model = BinaryData.fromObject(model).toObject(SupportedOSProperty.class);
        Assertions.assertEquals("gox", model.instanceType());
        Assertions.assertEquals("qhibtozipqwjedm", model.supportedOs().get(0).osName());
        Assertions.assertEquals("r", model.supportedOs().get(0).osType());
    }
}
