// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.OSVersionWrapper;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SupportedOSDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SupportedOSProperty;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SupportedOSPropertyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SupportedOSProperty model = BinaryData.fromString(
            "{\"instanceType\":\"tjo\",\"supportedOs\":[{\"osName\":\"ovjufycsjmlbe\",\"osType\":\"ej\",\"osVersions\":[{\"version\":\"xeg\",\"servicePack\":\"ortudawlpjfel\"},{\"version\":\"rpptcbgqnzmnhiil\",\"servicePack\":\"lwcjgckbbcccgzpr\"}]},{\"osName\":\"xnyuffatsgftipwc\",\"osType\":\"yubhiqdx\",\"osVersions\":[{\"version\":\"pnuhzafccnu\",\"servicePack\":\"i\"},{\"version\":\"yl\",\"servicePack\":\"igvxvatvcrk\"},{\"version\":\"b\",\"servicePack\":\"qxvhcsyhzlwxa\"},{\"version\":\"ov\",\"servicePack\":\"exdnd\"}]},{\"osName\":\"dwead\",\"osType\":\"zmwntopagt\",\"osVersions\":[{\"version\":\"magoaqylkjz\",\"servicePack\":\"iua\"}]}]}")
            .toObject(SupportedOSProperty.class);
        Assertions.assertEquals("tjo", model.instanceType());
        Assertions.assertEquals("ovjufycsjmlbe", model.supportedOs().get(0).osName());
        Assertions.assertEquals("ej", model.supportedOs().get(0).osType());
        Assertions.assertEquals("xeg", model.supportedOs().get(0).osVersions().get(0).version());
        Assertions.assertEquals("ortudawlpjfel", model.supportedOs().get(0).osVersions().get(0).servicePack());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SupportedOSProperty model
            = new SupportedOSProperty().withInstanceType("tjo")
                .withSupportedOs(
                    Arrays
                        .asList(
                            new SupportedOSDetails().withOsName("ovjufycsjmlbe")
                                .withOsType("ej")
                                .withOsVersions(Arrays
                                    .asList(new OSVersionWrapper().withVersion("xeg").withServicePack("ortudawlpjfel"),
                                        new OSVersionWrapper().withVersion("rpptcbgqnzmnhiil")
                                            .withServicePack("lwcjgckbbcccgzpr"))),
                            new SupportedOSDetails().withOsName("xnyuffatsgftipwc")
                                .withOsType("yubhiqdx")
                                .withOsVersions(Arrays.asList(
                                    new OSVersionWrapper().withVersion("pnuhzafccnu").withServicePack("i"),
                                    new OSVersionWrapper().withVersion("yl").withServicePack("igvxvatvcrk"),
                                    new OSVersionWrapper().withVersion("b").withServicePack("qxvhcsyhzlwxa"),
                                    new OSVersionWrapper().withVersion("ov").withServicePack("exdnd"))),
                            new SupportedOSDetails().withOsName("dwead")
                                .withOsType("zmwntopagt")
                                .withOsVersions(Arrays.asList(
                                    new OSVersionWrapper().withVersion("magoaqylkjz").withServicePack("iua")))));
        model = BinaryData.fromObject(model).toObject(SupportedOSProperty.class);
        Assertions.assertEquals("tjo", model.instanceType());
        Assertions.assertEquals("ovjufycsjmlbe", model.supportedOs().get(0).osName());
        Assertions.assertEquals("ej", model.supportedOs().get(0).osType());
        Assertions.assertEquals("xeg", model.supportedOs().get(0).osVersions().get(0).version());
        Assertions.assertEquals("ortudawlpjfel", model.supportedOs().get(0).osVersions().get(0).servicePack());
    }
}
