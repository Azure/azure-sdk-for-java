// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageRcmNicInput;
import org.junit.jupiter.api.Assertions;

public final class InMageRcmNicInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageRcmNicInput model = BinaryData.fromString(
            "{\"nicId\":\"sevchefpg\",\"isPrimaryNic\":\"edyybruholaemwcg\",\"isSelectedForFailover\":\"mrimaabsqql\",\"targetSubnetName\":\"b\",\"targetStaticIPAddress\":\"ow\",\"testSubnetName\":\"hdkmbjsmihrijezb\",\"testStaticIPAddress\":\"jwfcz\",\"targetNicName\":\"kvb\"}")
            .toObject(InMageRcmNicInput.class);
        Assertions.assertEquals("sevchefpg", model.nicId());
        Assertions.assertEquals("edyybruholaemwcg", model.isPrimaryNic());
        Assertions.assertEquals("mrimaabsqql", model.isSelectedForFailover());
        Assertions.assertEquals("b", model.targetSubnetName());
        Assertions.assertEquals("ow", model.targetStaticIpAddress());
        Assertions.assertEquals("hdkmbjsmihrijezb", model.testSubnetName());
        Assertions.assertEquals("jwfcz", model.testStaticIpAddress());
        Assertions.assertEquals("kvb", model.targetNicName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageRcmNicInput model = new InMageRcmNicInput().withNicId("sevchefpg")
            .withIsPrimaryNic("edyybruholaemwcg")
            .withIsSelectedForFailover("mrimaabsqql")
            .withTargetSubnetName("b")
            .withTargetStaticIpAddress("ow")
            .withTestSubnetName("hdkmbjsmihrijezb")
            .withTestStaticIpAddress("jwfcz")
            .withTargetNicName("kvb");
        model = BinaryData.fromObject(model).toObject(InMageRcmNicInput.class);
        Assertions.assertEquals("sevchefpg", model.nicId());
        Assertions.assertEquals("edyybruholaemwcg", model.isPrimaryNic());
        Assertions.assertEquals("mrimaabsqql", model.isSelectedForFailover());
        Assertions.assertEquals("b", model.targetSubnetName());
        Assertions.assertEquals("ow", model.targetStaticIpAddress());
        Assertions.assertEquals("hdkmbjsmihrijezb", model.testSubnetName());
        Assertions.assertEquals("jwfcz", model.testStaticIpAddress());
        Assertions.assertEquals("kvb", model.targetNicName());
    }
}
