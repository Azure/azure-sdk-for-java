// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpRequest;
import com.azure.core.http.HttpResponse;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.resourcemanager.recoveryservicessiterecovery.SiteRecoveryManager;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.CreateRecoveryPlanInputProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FailoverDeploymentModel;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlan;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanAction;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanActionDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanGroup;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanGroupType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProtectedItem;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProviderSpecificInput;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Mockito;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

public final class ReplicationRecoveryPlansCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        HttpClient httpClient = Mockito.mock(HttpClient.class);
        HttpResponse httpResponse = Mockito.mock(HttpResponse.class);
        ArgumentCaptor<HttpRequest> httpRequest = ArgumentCaptor.forClass(HttpRequest.class);

        String responseStr
            = "{\"properties\":{\"friendlyName\":\"sfgb\",\"primaryFabricId\":\"tsaz\",\"primaryFabricFriendlyName\":\"cxlubrukhq\",\"recoveryFabricId\":\"oyrbdkgqd\",\"recoveryFabricFriendlyName\":\"vvj\",\"failoverDeploymentModel\":\"jjfexuvsveams\",\"replicationProviders\":[\"uuvhxiohg\",\"mufzuuyszhae\",\"mtyosdpxtsdy\",\"fgefvwgwp\"],\"allowedOperations\":[\"iavwmixaqg\"],\"lastPlannedFailoverTime\":\"2021-09-07T11:23:33Z\",\"lastUnplannedFailoverTime\":\"2021-08-07T10:56:29Z\",\"lastTestFailoverTime\":\"2021-04-15T08:30:28Z\",\"currentScenario\":{\"scenarioName\":\"umlkjsv\",\"jobId\":\"tmlixalphkg\",\"startTime\":\"2021-09-24T23:02:48Z\"},\"currentScenarioStatus\":\"e\",\"currentScenarioStatusDescription\":\"gdj\",\"groups\":[{\"groupType\":\"Shutdown\",\"replicationProtectedItems\":[{},{}],\"startGroupActions\":[{\"actionName\":\"uyrlk\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"i\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"rmrjpjthi\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"sabcylzz\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"etumzenkrd\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"ues\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]},{\"groupType\":\"Boot\",\"replicationProtectedItems\":[{}],\"startGroupActions\":[{\"actionName\":\"oibdctjwfeb\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"qqeetsqac\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"czfro\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"raiai\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]},{\"groupType\":\"Boot\",\"replicationProtectedItems\":[{}],\"startGroupActions\":[{\"actionName\":\"wamptldddorz\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"jhnxfkffngfpi\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"loi\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"xdbktuqnbcjknrq\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]},{\"groupType\":\"Boot\",\"replicationProtectedItems\":[{}],\"startGroupActions\":[{\"actionName\":\"ku\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}],\"endGroupActions\":[{\"actionName\":\"ii\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"inlic\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}},{\"actionName\":\"moyoioxdwff\",\"failoverTypes\":[],\"failoverDirections\":[],\"customDetails\":{\"instanceType\":\"RecoveryPlanActionDetails\"}}]}],\"providerSpecificDetails\":[{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"},{\"instanceType\":\"RecoveryPlanProviderSpecificDetails\"}]},\"location\":\"ke\",\"id\":\"curr\",\"name\":\"uecokyduqzusc\",\"type\":\"lbqv\"}";

        Mockito.when(httpResponse.getStatusCode()).thenReturn(200);
        Mockito.when(httpResponse.getHeaders()).thenReturn(new HttpHeaders());
        Mockito.when(httpResponse.getBody())
            .thenReturn(Flux.just(ByteBuffer.wrap(responseStr.getBytes(StandardCharsets.UTF_8))));
        Mockito.when(httpResponse.getBodyAsByteArray())
            .thenReturn(Mono.just(responseStr.getBytes(StandardCharsets.UTF_8)));
        Mockito.when(httpClient.send(httpRequest.capture(), Mockito.any())).thenReturn(Mono.defer(() -> {
            Mockito.when(httpResponse.getRequest()).thenReturn(httpRequest.getValue());
            return Mono.just(httpResponse);
        }));

        SiteRecoveryManager manager = SiteRecoveryManager.configure().withHttpClient(httpClient).authenticate(
            tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
            new AzureProfile("", "", AzureEnvironment.AZURE));

        RecoveryPlan response = manager.replicationRecoveryPlans().define("uvqbeyxwrmupzpe")
            .withExistingVault("gynsixgzbbnug", "quarb")
            .withProperties(new CreateRecoveryPlanInputProperties().withPrimaryFabricId("zbhg")
                .withRecoveryFabricId("ajkvwkoc").withFailoverDeploymentModel(FailoverDeploymentModel.RESOURCE_MANAGER)
                .withGroups(Arrays.asList(new RecoveryPlanGroup().withGroupType(RecoveryPlanGroupType.BOOT)
                    .withReplicationProtectedItems(Arrays.asList(new RecoveryPlanProtectedItem(),
                        new RecoveryPlanProtectedItem(), new RecoveryPlanProtectedItem(),
                        new RecoveryPlanProtectedItem()))
                    .withStartGroupActions(Arrays.asList(new RecoveryPlanAction().withActionName("atbgvlp")
                        .withFailoverTypes(Arrays.asList()).withFailoverDirections(Arrays.asList())
                        .withCustomDetails(new RecoveryPlanActionDetails())))
                    .withEndGroupActions(Arrays.asList(
                        new RecoveryPlanAction().withActionName("gen").withFailoverTypes(Arrays.asList())
                            .withFailoverDirections(Arrays.asList()).withCustomDetails(new RecoveryPlanActionDetails()),
                        new RecoveryPlanAction().withActionName("akybepsihz").withFailoverTypes(Arrays.asList())
                            .withFailoverDirections(Arrays.asList()).withCustomDetails(new RecoveryPlanActionDetails()),
                        new RecoveryPlanAction().withActionName("ieoymp").withFailoverTypes(Arrays.asList())
                            .withFailoverDirections(Arrays.asList())
                            .withCustomDetails(new RecoveryPlanActionDetails())))))
                .withProviderSpecificInput(Arrays.asList(new RecoveryPlanProviderSpecificInput())))
            .create();

        Assertions.assertEquals("sfgb", response.properties().friendlyName());
        Assertions.assertEquals("tsaz", response.properties().primaryFabricId());
        Assertions.assertEquals("cxlubrukhq", response.properties().primaryFabricFriendlyName());
        Assertions.assertEquals("oyrbdkgqd", response.properties().recoveryFabricId());
        Assertions.assertEquals("vvj", response.properties().recoveryFabricFriendlyName());
        Assertions.assertEquals("jjfexuvsveams", response.properties().failoverDeploymentModel());
        Assertions.assertEquals("uuvhxiohg", response.properties().replicationProviders().get(0));
        Assertions.assertEquals("iavwmixaqg", response.properties().allowedOperations().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-07T11:23:33Z"),
            response.properties().lastPlannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-07T10:56:29Z"),
            response.properties().lastUnplannedFailoverTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-15T08:30:28Z"),
            response.properties().lastTestFailoverTime());
        Assertions.assertEquals("umlkjsv", response.properties().currentScenario().scenarioName());
        Assertions.assertEquals("tmlixalphkg", response.properties().currentScenario().jobId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-24T23:02:48Z"),
            response.properties().currentScenario().startTime());
        Assertions.assertEquals("e", response.properties().currentScenarioStatus());
        Assertions.assertEquals("gdj", response.properties().currentScenarioStatusDescription());
        Assertions.assertEquals(RecoveryPlanGroupType.SHUTDOWN, response.properties().groups().get(0).groupType());
        Assertions.assertEquals("uyrlk", response.properties().groups().get(0).startGroupActions().get(0).actionName());
        Assertions.assertEquals("rmrjpjthi",
            response.properties().groups().get(0).endGroupActions().get(0).actionName());
        Assertions.assertEquals("ke", response.location());
    }
}
