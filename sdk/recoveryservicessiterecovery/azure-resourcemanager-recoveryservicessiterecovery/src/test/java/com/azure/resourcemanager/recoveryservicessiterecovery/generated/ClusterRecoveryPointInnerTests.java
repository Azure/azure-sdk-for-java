// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.ClusterRecoveryPointInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ClusterProviderSpecificRecoveryPointDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ClusterRecoveryPointProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ClusterRecoveryPointType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ClusterRecoveryPointInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterRecoveryPointInner model = BinaryData.fromString(
            "{\"id\":\"ukiscvwmzhw\",\"name\":\"efaxvxilc\",\"type\":\"gnhnzeyq\",\"properties\":{\"recoveryPointTime\":\"2021-04-19T12:51:33Z\",\"recoveryPointType\":\"NotSpecified\",\"providerSpecificDetails\":{\"instanceType\":\"ClusterProviderSpecificRecoveryPointDetails\"}}}")
            .toObject(ClusterRecoveryPointInner.class);
        Assertions.assertEquals("ukiscvwmzhw", model.id());
        Assertions.assertEquals("efaxvxilc", model.name());
        Assertions.assertEquals("gnhnzeyq", model.type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-19T12:51:33Z"), model.properties().recoveryPointTime());
        Assertions.assertEquals(ClusterRecoveryPointType.NOT_SPECIFIED, model.properties().recoveryPointType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterRecoveryPointInner model
            = new ClusterRecoveryPointInner().withId("ukiscvwmzhw")
                .withName("efaxvxilc")
                .withType("gnhnzeyq")
                .withProperties(new ClusterRecoveryPointProperties()
                    .withRecoveryPointTime(OffsetDateTime.parse("2021-04-19T12:51:33Z"))
                    .withRecoveryPointType(ClusterRecoveryPointType.NOT_SPECIFIED)
                    .withProviderSpecificDetails(new ClusterProviderSpecificRecoveryPointDetails()));
        model = BinaryData.fromObject(model).toObject(ClusterRecoveryPointInner.class);
        Assertions.assertEquals("ukiscvwmzhw", model.id());
        Assertions.assertEquals("efaxvxilc", model.name());
        Assertions.assertEquals("gnhnzeyq", model.type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-19T12:51:33Z"), model.properties().recoveryPointTime());
        Assertions.assertEquals(ClusterRecoveryPointType.NOT_SPECIFIED, model.properties().recoveryPointType());
    }
}
