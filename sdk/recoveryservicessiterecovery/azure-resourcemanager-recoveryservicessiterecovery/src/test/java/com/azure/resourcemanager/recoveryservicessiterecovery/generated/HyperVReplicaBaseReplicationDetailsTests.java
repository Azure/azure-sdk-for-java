// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.DiskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaBaseReplicationDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InitialReplicationDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IpConfigDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMNicDetails;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class HyperVReplicaBaseReplicationDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVReplicaBaseReplicationDetails model = BinaryData.fromString(
            "{\"instanceType\":\"HyperVReplicaBaseReplicationDetails\",\"lastReplicatedTime\":\"2021-06-24T20:56:10Z\",\"vmNics\":[{\"nicId\":\"bmyqjog\",\"replicaNicId\":\"saidjan\",\"sourceNicArmId\":\"movdxxurn\",\"vMNetworkName\":\"jmoilunwe\",\"recoveryVMNetworkId\":\"deel\",\"ipConfigs\":[{\"name\":\"yozdsfzjuegrhrht\",\"isPrimary\":false,\"subnetName\":\"tv\",\"staticIPAddress\":\"nxvgjb\",\"ipAddressType\":\"obpnjodf\",\"isSeletedForFailover\":true,\"recoverySubnetName\":\"qwm\",\"recoveryStaticIPAddress\":\"smoxsazuxejgwe\",\"recoveryIPAddressType\":\"wnf\",\"recoveryPublicIPAddressId\":\"zzaczsinqbdn\",\"recoveryLBBackendAddressPoolIds\":[\"bozsyvr\",\"kjmyitrchwudlx\"],\"tfoSubnetName\":\"ihtpmnoejhql\",\"tfoStaticIPAddress\":\"sibz\",\"tfoPublicIPAddressId\":\"rfgxkyd\",\"tfoLBBackendAddressPoolIds\":[\"pgfqvmtyw\"]},{\"name\":\"a\",\"isPrimary\":false,\"subnetName\":\"jpewpyjlfx\",\"staticIPAddress\":\"pqcrzgeuqxbpiat\",\"ipAddressType\":\"aujegqdtadra\",\"isSeletedForFailover\":false,\"recoverySubnetName\":\"hjkrukizyhgs\",\"recoveryStaticIPAddress\":\"nqskt\",\"recoveryIPAddressType\":\"fpjbqggwe\",\"recoveryPublicIPAddressId\":\"w\",\"recoveryLBBackendAddressPoolIds\":[\"mnc\",\"bf\"],\"tfoSubnetName\":\"scstunmlhxd\",\"tfoStaticIPAddress\":\"klciichgjsysm\",\"tfoPublicIPAddressId\":\"o\",\"tfoLBBackendAddressPoolIds\":[\"xfkzsifcuv\",\"dujgcwxve\",\"bbwjtrdxrizagb\",\"giarksykpgdqxw\"]},{\"name\":\"zrwiqrxha\",\"isPrimary\":true,\"subnetName\":\"osqkptjqgk\",\"staticIPAddress\":\"mmainwhe\",\"ipAddressType\":\"kp\",\"isSeletedForFailover\":true,\"recoverySubnetName\":\"ntobu\",\"recoveryStaticIPAddress\":\"azz\",\"recoveryIPAddressType\":\"wgvydjufb\",\"recoveryPublicIPAddressId\":\"lblaxpegj\",\"recoveryLBBackendAddressPoolIds\":[\"bal\",\"dxagl\",\"f\"],\"tfoSubnetName\":\"lbtlqhopxo\",\"tfoStaticIPAddress\":\"mrsiflikyypzkg\",\"tfoPublicIPAddressId\":\"xfmyrqs\",\"tfoLBBackendAddressPoolIds\":[\"oksz\",\"nm\",\"wgpterdiuw\",\"i\"]}],\"selectionType\":\"skw\",\"recoveryNetworkSecurityGroupId\":\"sdetjygowifcqpol\",\"enableAcceleratedNetworkingOnRecovery\":true,\"tfoVMNetworkId\":\"sdgzyy\",\"tfoNetworkSecurityGroupId\":\"oxlvocptvdxxheig\",\"enableAcceleratedNetworkingOnTfo\":false,\"recoveryNicName\":\"wzghjhjv\",\"recoveryNicResourceGroupName\":\"bzzbwayb\",\"reuseExistingNic\":false,\"tfoRecoveryNicName\":\"fb\",\"tfoRecoveryNicResourceGroupName\":\"mqtnap\",\"tfoReuseExistingNic\":true,\"targetNicName\":\"xrjnbsconxav\"},{\"nicId\":\"neychbjizq\",\"replicaNicId\":\"gnwdxz\",\"sourceNicArmId\":\"p\",\"vMNetworkName\":\"rfbo\",\"recoveryVMNetworkId\":\"ipmlnfyzavf\",\"ipConfigs\":[{\"name\":\"icdbkpdj\",\"isPrimary\":false,\"subnetName\":\"smqaz\",\"staticIPAddress\":\"gonjhxshthmgpczq\",\"ipAddressType\":\"ptkbvcpxtzhi\",\"isSeletedForFailover\":false,\"recoverySubnetName\":\"timpkjblorns\",\"recoveryStaticIPAddress\":\"qhudsmusuaawj\",\"recoveryIPAddressType\":\"xwjnfcz\",\"recoveryPublicIPAddressId\":\"nii\",\"recoveryLBBackendAddressPoolIds\":[\"vqban\"],\"tfoSubnetName\":\"jtgirnb\",\"tfoStaticIPAddress\":\"gm\",\"tfoPublicIPAddressId\":\"orgmynltwmpftm\",\"tfoLBBackendAddressPoolIds\":[\"a\"]}],\"selectionType\":\"gsy\",\"recoveryNetworkSecurityGroupId\":\"etamfddrvlkpzwb\",\"enableAcceleratedNetworkingOnRecovery\":true,\"tfoVMNetworkId\":\"cc\",\"tfoNetworkSecurityGroupId\":\"id\",\"enableAcceleratedNetworkingOnTfo\":false,\"recoveryNicName\":\"kahmjedbiucvkhhw\",\"recoveryNicResourceGroupName\":\"pjbweunxcq\",\"reuseExistingNic\":false,\"tfoRecoveryNicName\":\"ufoihppiybxv\",\"tfoRecoveryNicResourceGroupName\":\"zuzpbgkzcs\",\"tfoReuseExistingNic\":true,\"targetNicName\":\"zvkunhdi\"}],\"vmId\":\"uktirzkaugpu\",\"vmProtectionState\":\"ocf\",\"vmProtectionStateDescription\":\"lwgofm\",\"initialReplicationDetails\":{\"initialReplicationType\":\"rjlvzklkvbgi\",\"initialReplicationProgressPercentage\":\"jtkakvl\"},\"vMDiskDetails\":[{\"maxSizeMB\":7962655555398941339,\"vhdType\":\"zaptuosk\",\"vhdId\":\"izjixwfgcd\",\"vhdName\":\"kkcxwnujvqynvav\"},{\"maxSizeMB\":6961201468214314648,\"vhdType\":\"uqohhi\",\"vhdId\":\"a\",\"vhdName\":\"uddrwjc\"},{\"maxSizeMB\":3187253478458170915,\"vhdType\":\"lhpv\",\"vhdId\":\"dbwen\",\"vhdName\":\"nafhxrzfr\"},{\"maxSizeMB\":1546022163223316974,\"vhdType\":\"ucwviqllukhkrcq\",\"vhdId\":\"cbvzarmqcb\",\"vhdName\":\"kst\"}]}")
            .toObject(HyperVReplicaBaseReplicationDetails.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-24T20:56:10Z"), model.lastReplicatedTime());
        Assertions.assertEquals("bmyqjog", model.vmNics().get(0).nicId());
        Assertions.assertEquals("saidjan", model.vmNics().get(0).replicaNicId());
        Assertions.assertEquals("movdxxurn", model.vmNics().get(0).sourceNicArmId());
        Assertions.assertEquals("jmoilunwe", model.vmNics().get(0).vMNetworkName());
        Assertions.assertEquals("deel", model.vmNics().get(0).recoveryVMNetworkId());
        Assertions.assertEquals("yozdsfzjuegrhrht", model.vmNics().get(0).ipConfigs().get(0).name());
        Assertions.assertFalse(model.vmNics().get(0).ipConfigs().get(0).isPrimary());
        Assertions.assertEquals("tv", model.vmNics().get(0).ipConfigs().get(0).subnetName());
        Assertions.assertEquals("nxvgjb", model.vmNics().get(0).ipConfigs().get(0).staticIpAddress());
        Assertions.assertEquals("obpnjodf", model.vmNics().get(0).ipConfigs().get(0).ipAddressType());
        Assertions.assertTrue(model.vmNics().get(0).ipConfigs().get(0).isSeletedForFailover());
        Assertions.assertEquals("qwm", model.vmNics().get(0).ipConfigs().get(0).recoverySubnetName());
        Assertions.assertEquals("smoxsazuxejgwe", model.vmNics().get(0).ipConfigs().get(0).recoveryStaticIpAddress());
        Assertions.assertEquals("wnf", model.vmNics().get(0).ipConfigs().get(0).recoveryIpAddressType());
        Assertions.assertEquals("zzaczsinqbdn", model.vmNics().get(0).ipConfigs().get(0).recoveryPublicIpAddressId());
        Assertions.assertEquals("bozsyvr",
            model.vmNics().get(0).ipConfigs().get(0).recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("ihtpmnoejhql", model.vmNics().get(0).ipConfigs().get(0).tfoSubnetName());
        Assertions.assertEquals("sibz", model.vmNics().get(0).ipConfigs().get(0).tfoStaticIpAddress());
        Assertions.assertEquals("rfgxkyd", model.vmNics().get(0).ipConfigs().get(0).tfoPublicIpAddressId());
        Assertions.assertEquals("pgfqvmtyw",
            model.vmNics().get(0).ipConfigs().get(0).tfoLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("skw", model.vmNics().get(0).selectionType());
        Assertions.assertEquals("sdetjygowifcqpol", model.vmNics().get(0).recoveryNetworkSecurityGroupId());
        Assertions.assertTrue(model.vmNics().get(0).enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("sdgzyy", model.vmNics().get(0).tfoVMNetworkId());
        Assertions.assertEquals("oxlvocptvdxxheig", model.vmNics().get(0).tfoNetworkSecurityGroupId());
        Assertions.assertFalse(model.vmNics().get(0).enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("wzghjhjv", model.vmNics().get(0).recoveryNicName());
        Assertions.assertEquals("bzzbwayb", model.vmNics().get(0).recoveryNicResourceGroupName());
        Assertions.assertFalse(model.vmNics().get(0).reuseExistingNic());
        Assertions.assertEquals("fb", model.vmNics().get(0).tfoRecoveryNicName());
        Assertions.assertEquals("mqtnap", model.vmNics().get(0).tfoRecoveryNicResourceGroupName());
        Assertions.assertTrue(model.vmNics().get(0).tfoReuseExistingNic());
        Assertions.assertEquals("xrjnbsconxav", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("uktirzkaugpu", model.vmId());
        Assertions.assertEquals("ocf", model.vmProtectionState());
        Assertions.assertEquals("lwgofm", model.vmProtectionStateDescription());
        Assertions.assertEquals("rjlvzklkvbgi", model.initialReplicationDetails().initialReplicationType());
        Assertions.assertEquals("jtkakvl", model.initialReplicationDetails().initialReplicationProgressPercentage());
        Assertions.assertEquals(7962655555398941339L, model.vMDiskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("zaptuosk", model.vMDiskDetails().get(0).vhdType());
        Assertions.assertEquals("izjixwfgcd", model.vMDiskDetails().get(0).vhdId());
        Assertions.assertEquals("kkcxwnujvqynvav", model.vMDiskDetails().get(0).vhdName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVReplicaBaseReplicationDetails model
            = new HyperVReplicaBaseReplicationDetails()
                .withLastReplicatedTime(OffsetDateTime.parse("2021-06-24T20:56:10Z"))
                .withVmNics(
                    Arrays
                        .asList(
                            new VMNicDetails().withNicId("bmyqjog")
                                .withReplicaNicId("saidjan")
                                .withSourceNicArmId("movdxxurn")
                                .withVMNetworkName("jmoilunwe")
                                .withRecoveryVMNetworkId("deel")
                                .withIpConfigs(
                                    Arrays.asList(
                                        new IpConfigDetails().withName("yozdsfzjuegrhrht")
                                            .withIsPrimary(false)
                                            .withSubnetName("tv")
                                            .withStaticIpAddress("nxvgjb")
                                            .withIpAddressType("obpnjodf")
                                            .withIsSeletedForFailover(true)
                                            .withRecoverySubnetName("qwm")
                                            .withRecoveryStaticIpAddress("smoxsazuxejgwe")
                                            .withRecoveryIpAddressType("wnf")
                                            .withRecoveryPublicIpAddressId("zzaczsinqbdn")
                                            .withRecoveryLBBackendAddressPoolIds(
                                                Arrays.asList("bozsyvr", "kjmyitrchwudlx"))
                                            .withTfoSubnetName("ihtpmnoejhql")
                                            .withTfoStaticIpAddress("sibz")
                                            .withTfoPublicIpAddressId("rfgxkyd")
                                            .withTfoLBBackendAddressPoolIds(Arrays.asList("pgfqvmtyw")),
                                        new IpConfigDetails().withName("a")
                                            .withIsPrimary(false)
                                            .withSubnetName("jpewpyjlfx")
                                            .withStaticIpAddress("pqcrzgeuqxbpiat")
                                            .withIpAddressType("aujegqdtadra")
                                            .withIsSeletedForFailover(false)
                                            .withRecoverySubnetName("hjkrukizyhgs")
                                            .withRecoveryStaticIpAddress("nqskt")
                                            .withRecoveryIpAddressType("fpjbqggwe")
                                            .withRecoveryPublicIpAddressId("w")
                                            .withRecoveryLBBackendAddressPoolIds(Arrays.asList("mnc", "bf"))
                                            .withTfoSubnetName("scstunmlhxd")
                                            .withTfoStaticIpAddress("klciichgjsysm")
                                            .withTfoPublicIpAddressId("o")
                                            .withTfoLBBackendAddressPoolIds(Arrays
                                                .asList("xfkzsifcuv", "dujgcwxve", "bbwjtrdxrizagb", "giarksykpgdqxw")),
                                        new IpConfigDetails().withName("zrwiqrxha")
                                            .withIsPrimary(true)
                                            .withSubnetName("osqkptjqgk")
                                            .withStaticIpAddress("mmainwhe")
                                            .withIpAddressType("kp")
                                            .withIsSeletedForFailover(true)
                                            .withRecoverySubnetName("ntobu")
                                            .withRecoveryStaticIpAddress("azz")
                                            .withRecoveryIpAddressType("wgvydjufb")
                                            .withRecoveryPublicIpAddressId("lblaxpegj")
                                            .withRecoveryLBBackendAddressPoolIds(Arrays.asList("bal", "dxagl", "f"))
                                            .withTfoSubnetName("lbtlqhopxo")
                                            .withTfoStaticIpAddress("mrsiflikyypzkg")
                                            .withTfoPublicIpAddressId("xfmyrqs")
                                            .withTfoLBBackendAddressPoolIds(
                                                Arrays.asList("oksz", "nm", "wgpterdiuw", "i"))))
                                .withSelectionType("skw")
                                .withRecoveryNetworkSecurityGroupId("sdetjygowifcqpol")
                                .withEnableAcceleratedNetworkingOnRecovery(true)
                                .withTfoVMNetworkId("sdgzyy")
                                .withTfoNetworkSecurityGroupId("oxlvocptvdxxheig")
                                .withEnableAcceleratedNetworkingOnTfo(false)
                                .withRecoveryNicName("wzghjhjv")
                                .withRecoveryNicResourceGroupName("bzzbwayb")
                                .withReuseExistingNic(false)
                                .withTfoRecoveryNicName("fb")
                                .withTfoRecoveryNicResourceGroupName("mqtnap")
                                .withTfoReuseExistingNic(true)
                                .withTargetNicName("xrjnbsconxav"),
                            new VMNicDetails().withNicId("neychbjizq")
                                .withReplicaNicId("gnwdxz")
                                .withSourceNicArmId("p")
                                .withVMNetworkName("rfbo")
                                .withRecoveryVMNetworkId("ipmlnfyzavf")
                                .withIpConfigs(Arrays.asList(new IpConfigDetails().withName("icdbkpdj")
                                    .withIsPrimary(false)
                                    .withSubnetName("smqaz")
                                    .withStaticIpAddress("gonjhxshthmgpczq")
                                    .withIpAddressType("ptkbvcpxtzhi")
                                    .withIsSeletedForFailover(false)
                                    .withRecoverySubnetName("timpkjblorns")
                                    .withRecoveryStaticIpAddress("qhudsmusuaawj")
                                    .withRecoveryIpAddressType("xwjnfcz")
                                    .withRecoveryPublicIpAddressId("nii")
                                    .withRecoveryLBBackendAddressPoolIds(Arrays.asList("vqban"))
                                    .withTfoSubnetName("jtgirnb")
                                    .withTfoStaticIpAddress("gm")
                                    .withTfoPublicIpAddressId("orgmynltwmpftm")
                                    .withTfoLBBackendAddressPoolIds(Arrays.asList("a"))))
                                .withSelectionType("gsy")
                                .withRecoveryNetworkSecurityGroupId("etamfddrvlkpzwb")
                                .withEnableAcceleratedNetworkingOnRecovery(true)
                                .withTfoVMNetworkId("cc")
                                .withTfoNetworkSecurityGroupId("id")
                                .withEnableAcceleratedNetworkingOnTfo(false)
                                .withRecoveryNicName("kahmjedbiucvkhhw")
                                .withRecoveryNicResourceGroupName("pjbweunxcq")
                                .withReuseExistingNic(false)
                                .withTfoRecoveryNicName("ufoihppiybxv")
                                .withTfoRecoveryNicResourceGroupName("zuzpbgkzcs")
                                .withTfoReuseExistingNic(true)
                                .withTargetNicName("zvkunhdi")))
                .withVmId("uktirzkaugpu")
                .withVmProtectionState("ocf")
                .withVmProtectionStateDescription("lwgofm")
                .withInitialReplicationDetails(
                    new InitialReplicationDetails().withInitialReplicationType("rjlvzklkvbgi")
                        .withInitialReplicationProgressPercentage("jtkakvl"))
                .withVMDiskDetails(Arrays.asList(
                    new DiskDetails().withMaxSizeMB(7962655555398941339L)
                        .withVhdType("zaptuosk")
                        .withVhdId("izjixwfgcd")
                        .withVhdName("kkcxwnujvqynvav"),
                    new DiskDetails().withMaxSizeMB(6961201468214314648L)
                        .withVhdType("uqohhi")
                        .withVhdId("a")
                        .withVhdName("uddrwjc"),
                    new DiskDetails().withMaxSizeMB(3187253478458170915L)
                        .withVhdType("lhpv")
                        .withVhdId("dbwen")
                        .withVhdName("nafhxrzfr"),
                    new DiskDetails().withMaxSizeMB(1546022163223316974L)
                        .withVhdType("ucwviqllukhkrcq")
                        .withVhdId("cbvzarmqcb")
                        .withVhdName("kst")));
        model = BinaryData.fromObject(model).toObject(HyperVReplicaBaseReplicationDetails.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-24T20:56:10Z"), model.lastReplicatedTime());
        Assertions.assertEquals("bmyqjog", model.vmNics().get(0).nicId());
        Assertions.assertEquals("saidjan", model.vmNics().get(0).replicaNicId());
        Assertions.assertEquals("movdxxurn", model.vmNics().get(0).sourceNicArmId());
        Assertions.assertEquals("jmoilunwe", model.vmNics().get(0).vMNetworkName());
        Assertions.assertEquals("deel", model.vmNics().get(0).recoveryVMNetworkId());
        Assertions.assertEquals("yozdsfzjuegrhrht", model.vmNics().get(0).ipConfigs().get(0).name());
        Assertions.assertFalse(model.vmNics().get(0).ipConfigs().get(0).isPrimary());
        Assertions.assertEquals("tv", model.vmNics().get(0).ipConfigs().get(0).subnetName());
        Assertions.assertEquals("nxvgjb", model.vmNics().get(0).ipConfigs().get(0).staticIpAddress());
        Assertions.assertEquals("obpnjodf", model.vmNics().get(0).ipConfigs().get(0).ipAddressType());
        Assertions.assertTrue(model.vmNics().get(0).ipConfigs().get(0).isSeletedForFailover());
        Assertions.assertEquals("qwm", model.vmNics().get(0).ipConfigs().get(0).recoverySubnetName());
        Assertions.assertEquals("smoxsazuxejgwe", model.vmNics().get(0).ipConfigs().get(0).recoveryStaticIpAddress());
        Assertions.assertEquals("wnf", model.vmNics().get(0).ipConfigs().get(0).recoveryIpAddressType());
        Assertions.assertEquals("zzaczsinqbdn", model.vmNics().get(0).ipConfigs().get(0).recoveryPublicIpAddressId());
        Assertions.assertEquals("bozsyvr",
            model.vmNics().get(0).ipConfigs().get(0).recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("ihtpmnoejhql", model.vmNics().get(0).ipConfigs().get(0).tfoSubnetName());
        Assertions.assertEquals("sibz", model.vmNics().get(0).ipConfigs().get(0).tfoStaticIpAddress());
        Assertions.assertEquals("rfgxkyd", model.vmNics().get(0).ipConfigs().get(0).tfoPublicIpAddressId());
        Assertions.assertEquals("pgfqvmtyw",
            model.vmNics().get(0).ipConfigs().get(0).tfoLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("skw", model.vmNics().get(0).selectionType());
        Assertions.assertEquals("sdetjygowifcqpol", model.vmNics().get(0).recoveryNetworkSecurityGroupId());
        Assertions.assertTrue(model.vmNics().get(0).enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("sdgzyy", model.vmNics().get(0).tfoVMNetworkId());
        Assertions.assertEquals("oxlvocptvdxxheig", model.vmNics().get(0).tfoNetworkSecurityGroupId());
        Assertions.assertFalse(model.vmNics().get(0).enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("wzghjhjv", model.vmNics().get(0).recoveryNicName());
        Assertions.assertEquals("bzzbwayb", model.vmNics().get(0).recoveryNicResourceGroupName());
        Assertions.assertFalse(model.vmNics().get(0).reuseExistingNic());
        Assertions.assertEquals("fb", model.vmNics().get(0).tfoRecoveryNicName());
        Assertions.assertEquals("mqtnap", model.vmNics().get(0).tfoRecoveryNicResourceGroupName());
        Assertions.assertTrue(model.vmNics().get(0).tfoReuseExistingNic());
        Assertions.assertEquals("xrjnbsconxav", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("uktirzkaugpu", model.vmId());
        Assertions.assertEquals("ocf", model.vmProtectionState());
        Assertions.assertEquals("lwgofm", model.vmProtectionStateDescription());
        Assertions.assertEquals("rjlvzklkvbgi", model.initialReplicationDetails().initialReplicationType());
        Assertions.assertEquals("jtkakvl", model.initialReplicationDetails().initialReplicationProgressPercentage());
        Assertions.assertEquals(7962655555398941339L, model.vMDiskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("zaptuosk", model.vMDiskDetails().get(0).vhdType());
        Assertions.assertEquals("izjixwfgcd", model.vMDiskDetails().get(0).vhdId());
        Assertions.assertEquals("kkcxwnujvqynvav", model.vMDiskDetails().get(0).vhdName());
    }
}
