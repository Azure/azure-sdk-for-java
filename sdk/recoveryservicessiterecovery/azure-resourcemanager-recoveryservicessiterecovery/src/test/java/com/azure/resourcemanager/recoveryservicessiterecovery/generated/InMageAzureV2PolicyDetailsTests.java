// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageAzureV2PolicyDetails;
import org.junit.jupiter.api.Assertions;

public final class InMageAzureV2PolicyDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageAzureV2PolicyDetails model = BinaryData.fromString(
            "{\"instanceType\":\"InMageAzureV2\",\"crashConsistentFrequencyInMinutes\":31671776,\"recoveryPointThresholdInMinutes\":1910148528,\"recoveryPointHistory\":791424061,\"appConsistentFrequencyInMinutes\":1709196531,\"multiVmSyncStatus\":\"zplusdekpdzzms\"}")
            .toObject(InMageAzureV2PolicyDetails.class);
        Assertions.assertEquals(31671776, model.crashConsistentFrequencyInMinutes());
        Assertions.assertEquals(1910148528, model.recoveryPointThresholdInMinutes());
        Assertions.assertEquals(791424061, model.recoveryPointHistory());
        Assertions.assertEquals(1709196531, model.appConsistentFrequencyInMinutes());
        Assertions.assertEquals("zplusdekpdzzms", model.multiVmSyncStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageAzureV2PolicyDetails model
            = new InMageAzureV2PolicyDetails().withCrashConsistentFrequencyInMinutes(31671776)
                .withRecoveryPointThresholdInMinutes(1910148528)
                .withRecoveryPointHistory(791424061)
                .withAppConsistentFrequencyInMinutes(1709196531)
                .withMultiVmSyncStatus("zplusdekpdzzms");
        model = BinaryData.fromObject(model).toObject(InMageAzureV2PolicyDetails.class);
        Assertions.assertEquals(31671776, model.crashConsistentFrequencyInMinutes());
        Assertions.assertEquals(1910148528, model.recoveryPointThresholdInMinutes());
        Assertions.assertEquals(791424061, model.recoveryPointHistory());
        Assertions.assertEquals(1709196531, model.appConsistentFrequencyInMinutes());
        Assertions.assertEquals("zplusdekpdzzms", model.multiVmSyncStatus());
    }
}
