// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.DiskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVVirtualMachineDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.OSDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.PresenceStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class HyperVVirtualMachineDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVVirtualMachineDetails model = BinaryData.fromString(
            "{\"instanceType\":\"HyperVVirtualMachine\",\"sourceItemId\":\"rkkderfrswqikw\",\"generation\":\"w\",\"osDetails\":{\"osType\":\"gicwnxhtfmcqbs\",\"productType\":\"zp\",\"osEdition\":\"hzp\",\"oSVersion\":\"qumjdjxhzghgod\",\"oSMajorVersion\":\"nrceqavfdbdfmmx\",\"oSMinorVersion\":\"naj\",\"userSelectedOSName\":\"pjyyqmkwlhvc\"},\"diskDetails\":[{\"maxSizeMB\":7303763880942717315,\"vhdType\":\"kluxxrwzobuzmsxg\",\"vhdId\":\"tdtkwppthuz\",\"vhdName\":\"rmimrljdpoqfxyem\"},{\"maxSizeMB\":2513433009868353955,\"vhdType\":\"aew\",\"vhdId\":\"ec\",\"vhdName\":\"amfmxtllfl\"},{\"maxSizeMB\":1500411696037148636,\"vhdType\":\"nrrfijhggabqb\",\"vhdId\":\"mkli\",\"vhdName\":\"rwdvffhsdpzou\"}],\"hasPhysicalDisk\":\"Present\",\"hasFibreChannelAdapter\":\"Unknown\",\"hasSharedVhd\":\"Unknown\",\"hyperVHostId\":\"qnjxrdfddtul\"}")
            .toObject(HyperVVirtualMachineDetails.class);
        Assertions.assertEquals("rkkderfrswqikw", model.sourceItemId());
        Assertions.assertEquals("w", model.generation());
        Assertions.assertEquals("gicwnxhtfmcqbs", model.osDetails().osType());
        Assertions.assertEquals("zp", model.osDetails().productType());
        Assertions.assertEquals("hzp", model.osDetails().osEdition());
        Assertions.assertEquals("qumjdjxhzghgod", model.osDetails().oSVersion());
        Assertions.assertEquals("nrceqavfdbdfmmx", model.osDetails().oSMajorVersion());
        Assertions.assertEquals("naj", model.osDetails().oSMinorVersion());
        Assertions.assertEquals("pjyyqmkwlhvc", model.osDetails().userSelectedOSName());
        Assertions.assertEquals(7303763880942717315L, model.diskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("kluxxrwzobuzmsxg", model.diskDetails().get(0).vhdType());
        Assertions.assertEquals("tdtkwppthuz", model.diskDetails().get(0).vhdId());
        Assertions.assertEquals("rmimrljdpoqfxyem", model.diskDetails().get(0).vhdName());
        Assertions.assertEquals(PresenceStatus.PRESENT, model.hasPhysicalDisk());
        Assertions.assertEquals(PresenceStatus.UNKNOWN, model.hasFibreChannelAdapter());
        Assertions.assertEquals(PresenceStatus.UNKNOWN, model.hasSharedVhd());
        Assertions.assertEquals("qnjxrdfddtul", model.hyperVHostId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVVirtualMachineDetails model = new HyperVVirtualMachineDetails().withSourceItemId("rkkderfrswqikw")
            .withGeneration("w")
            .withOsDetails(new OSDetails().withOsType("gicwnxhtfmcqbs")
                .withProductType("zp")
                .withOsEdition("hzp")
                .withOSVersion("qumjdjxhzghgod")
                .withOSMajorVersion("nrceqavfdbdfmmx")
                .withOSMinorVersion("naj")
                .withUserSelectedOSName("pjyyqmkwlhvc"))
            .withDiskDetails(Arrays.asList(
                new DiskDetails().withMaxSizeMB(7303763880942717315L)
                    .withVhdType("kluxxrwzobuzmsxg")
                    .withVhdId("tdtkwppthuz")
                    .withVhdName("rmimrljdpoqfxyem"),
                new DiskDetails().withMaxSizeMB(2513433009868353955L)
                    .withVhdType("aew")
                    .withVhdId("ec")
                    .withVhdName("amfmxtllfl"),
                new DiskDetails().withMaxSizeMB(1500411696037148636L)
                    .withVhdType("nrrfijhggabqb")
                    .withVhdId("mkli")
                    .withVhdName("rwdvffhsdpzou")))
            .withHasPhysicalDisk(PresenceStatus.PRESENT)
            .withHasFibreChannelAdapter(PresenceStatus.UNKNOWN)
            .withHasSharedVhd(PresenceStatus.UNKNOWN)
            .withHyperVHostId("qnjxrdfddtul");
        model = BinaryData.fromObject(model).toObject(HyperVVirtualMachineDetails.class);
        Assertions.assertEquals("rkkderfrswqikw", model.sourceItemId());
        Assertions.assertEquals("w", model.generation());
        Assertions.assertEquals("gicwnxhtfmcqbs", model.osDetails().osType());
        Assertions.assertEquals("zp", model.osDetails().productType());
        Assertions.assertEquals("hzp", model.osDetails().osEdition());
        Assertions.assertEquals("qumjdjxhzghgod", model.osDetails().oSVersion());
        Assertions.assertEquals("nrceqavfdbdfmmx", model.osDetails().oSMajorVersion());
        Assertions.assertEquals("naj", model.osDetails().oSMinorVersion());
        Assertions.assertEquals("pjyyqmkwlhvc", model.osDetails().userSelectedOSName());
        Assertions.assertEquals(7303763880942717315L, model.diskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("kluxxrwzobuzmsxg", model.diskDetails().get(0).vhdType());
        Assertions.assertEquals("tdtkwppthuz", model.diskDetails().get(0).vhdId());
        Assertions.assertEquals("rmimrljdpoqfxyem", model.diskDetails().get(0).vhdName());
        Assertions.assertEquals(PresenceStatus.PRESENT, model.hasPhysicalDisk());
        Assertions.assertEquals(PresenceStatus.UNKNOWN, model.hasFibreChannelAdapter());
        Assertions.assertEquals(PresenceStatus.UNKNOWN, model.hasSharedVhd());
        Assertions.assertEquals("qnjxrdfddtul", model.hyperVHostId());
    }
}
