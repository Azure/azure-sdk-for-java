// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AsrTask;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.GroupTaskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InlineWorkflowTaskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.TaskTypeDetails;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class InlineWorkflowTaskDetailsTests {
    @Test
    public void testDeserialize() {
        InlineWorkflowTaskDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"InlineWorkflowTaskDetails\",\"workflowIds\":[\"pglaoh\"],\"childTasks\":[{\"taskId\":\"jtnqjil\",\"name\":\"wkdcwmqs\",\"startTime\":\"2021-01-18T02:03:45Z\",\"endTime\":\"2021-10-09T13:51:53Z\",\"allowedActions\":[\"dqaolfylnkk\",\"jpjvly\",\"ltm\",\"wob\"],\"friendlyName\":\"whlwy\",\"state\":\"nqzocrdzg\",\"stateDescription\":\"euntgxdncaqtti\",\"taskType\":\"oifuvnyttzgixgy\",\"customDetails\":{\"instanceType\":\"TaskTypeDetails\"},\"groupTaskCustomDetails\":{\"instanceType\":\"GroupTaskDetails\",\"childTasks\":[]},\"errors\":[]},{\"taskId\":\"behlqtxnr\",\"name\":\"kndrndpgfjo\",\"startTime\":\"2020-12-22T10:21:19Z\",\"endTime\":\"2021-11-15T13:15:36Z\",\"allowedActions\":[\"wfhipxwgsab\",\"c\"],\"friendlyName\":\"owzafczu\",\"state\":\"ljcirvpefycdvei\",\"stateDescription\":\"tjnsx\",\"taskType\":\"jlnsj\",\"customDetails\":{\"instanceType\":\"TaskTypeDetails\"},\"groupTaskCustomDetails\":{\"instanceType\":\"GroupTaskDetails\",\"childTasks\":[]},\"errors\":[]},{\"taskId\":\"bxqvmvuayt\",\"name\":\"dxk\",\"startTime\":\"2021-03-09T13:46:46Z\",\"endTime\":\"2021-07-07T16:40:13Z\",\"allowedActions\":[\"tghyksarcdr\",\"xsl\",\"vlzladl\"],\"friendlyName\":\"kpbqhvfdqqjw\",\"state\":\"hwzdanojisgglmv\",\"stateDescription\":\"atuztjct\",\"taskType\":\"pvbkaehxsmzyg\",\"customDetails\":{\"instanceType\":\"TaskTypeDetails\"},\"groupTaskCustomDetails\":{\"instanceType\":\"GroupTaskDetails\",\"childTasks\":[]},\"errors\":[]},{\"taskId\":\"eivmak\",\"name\":\"ysowl\",\"startTime\":\"2021-11-13T07:37:04Z\",\"endTime\":\"2021-05-20T20:56:47Z\",\"allowedActions\":[\"ctvtf\"],\"friendlyName\":\"skdchmaiubavl\",\"state\":\"pvgmfa\",\"stateDescription\":\"zazmg\",\"taskType\":\"e\",\"customDetails\":{\"instanceType\":\"TaskTypeDetails\"},\"groupTaskCustomDetails\":{\"instanceType\":\"GroupTaskDetails\",\"childTasks\":[]},\"errors\":[]}]}")
                .toObject(InlineWorkflowTaskDetails.class);
        Assertions.assertEquals("jtnqjil", model.childTasks().get(0).taskId());
        Assertions.assertEquals("wkdcwmqs", model.childTasks().get(0).name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-18T02:03:45Z"), model.childTasks().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-09T13:51:53Z"), model.childTasks().get(0).endTime());
        Assertions.assertEquals("dqaolfylnkk", model.childTasks().get(0).allowedActions().get(0));
        Assertions.assertEquals("whlwy", model.childTasks().get(0).friendlyName());
        Assertions.assertEquals("nqzocrdzg", model.childTasks().get(0).state());
        Assertions.assertEquals("euntgxdncaqtti", model.childTasks().get(0).stateDescription());
        Assertions.assertEquals("oifuvnyttzgixgy", model.childTasks().get(0).taskType());
        Assertions.assertEquals("pglaoh", model.workflowIds().get(0));
    }

    @Test
    public void testSerialize() {
        InlineWorkflowTaskDetails model =
            new InlineWorkflowTaskDetails()
                .withChildTasks(
                    Arrays
                        .asList(
                            new AsrTask()
                                .withTaskId("jtnqjil")
                                .withName("wkdcwmqs")
                                .withStartTime(OffsetDateTime.parse("2021-01-18T02:03:45Z"))
                                .withEndTime(OffsetDateTime.parse("2021-10-09T13:51:53Z"))
                                .withAllowedActions(Arrays.asList("dqaolfylnkk", "jpjvly", "ltm", "wob"))
                                .withFriendlyName("whlwy")
                                .withState("nqzocrdzg")
                                .withStateDescription("euntgxdncaqtti")
                                .withTaskType("oifuvnyttzgixgy")
                                .withCustomDetails(new TaskTypeDetails())
                                .withGroupTaskCustomDetails(new GroupTaskDetails().withChildTasks(Arrays.asList()))
                                .withErrors(Arrays.asList()),
                            new AsrTask()
                                .withTaskId("behlqtxnr")
                                .withName("kndrndpgfjo")
                                .withStartTime(OffsetDateTime.parse("2020-12-22T10:21:19Z"))
                                .withEndTime(OffsetDateTime.parse("2021-11-15T13:15:36Z"))
                                .withAllowedActions(Arrays.asList("wfhipxwgsab", "c"))
                                .withFriendlyName("owzafczu")
                                .withState("ljcirvpefycdvei")
                                .withStateDescription("tjnsx")
                                .withTaskType("jlnsj")
                                .withCustomDetails(new TaskTypeDetails())
                                .withGroupTaskCustomDetails(new GroupTaskDetails().withChildTasks(Arrays.asList()))
                                .withErrors(Arrays.asList()),
                            new AsrTask()
                                .withTaskId("bxqvmvuayt")
                                .withName("dxk")
                                .withStartTime(OffsetDateTime.parse("2021-03-09T13:46:46Z"))
                                .withEndTime(OffsetDateTime.parse("2021-07-07T16:40:13Z"))
                                .withAllowedActions(Arrays.asList("tghyksarcdr", "xsl", "vlzladl"))
                                .withFriendlyName("kpbqhvfdqqjw")
                                .withState("hwzdanojisgglmv")
                                .withStateDescription("atuztjct")
                                .withTaskType("pvbkaehxsmzyg")
                                .withCustomDetails(new TaskTypeDetails())
                                .withGroupTaskCustomDetails(new GroupTaskDetails().withChildTasks(Arrays.asList()))
                                .withErrors(Arrays.asList()),
                            new AsrTask()
                                .withTaskId("eivmak")
                                .withName("ysowl")
                                .withStartTime(OffsetDateTime.parse("2021-11-13T07:37:04Z"))
                                .withEndTime(OffsetDateTime.parse("2021-05-20T20:56:47Z"))
                                .withAllowedActions(Arrays.asList("ctvtf"))
                                .withFriendlyName("skdchmaiubavl")
                                .withState("pvgmfa")
                                .withStateDescription("zazmg")
                                .withTaskType("e")
                                .withCustomDetails(new TaskTypeDetails())
                                .withGroupTaskCustomDetails(new GroupTaskDetails().withChildTasks(Arrays.asList()))
                                .withErrors(Arrays.asList())))
                .withWorkflowIds(Arrays.asList("pglaoh"));
        model = BinaryData.fromObject(model).toObject(InlineWorkflowTaskDetails.class);
        Assertions.assertEquals("jtnqjil", model.childTasks().get(0).taskId());
        Assertions.assertEquals("wkdcwmqs", model.childTasks().get(0).name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-18T02:03:45Z"), model.childTasks().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-09T13:51:53Z"), model.childTasks().get(0).endTime());
        Assertions.assertEquals("dqaolfylnkk", model.childTasks().get(0).allowedActions().get(0));
        Assertions.assertEquals("whlwy", model.childTasks().get(0).friendlyName());
        Assertions.assertEquals("nqzocrdzg", model.childTasks().get(0).state());
        Assertions.assertEquals("euntgxdncaqtti", model.childTasks().get(0).stateDescription());
        Assertions.assertEquals("oifuvnyttzgixgy", model.childTasks().get(0).taskType());
        Assertions.assertEquals("pglaoh", model.workflowIds().get(0));
    }
}
