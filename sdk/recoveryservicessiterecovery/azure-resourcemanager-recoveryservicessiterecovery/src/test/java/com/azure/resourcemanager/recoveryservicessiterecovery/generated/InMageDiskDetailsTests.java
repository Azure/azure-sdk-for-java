// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.DiskVolumeDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageDiskDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InMageDiskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageDiskDetails model = BinaryData.fromString(
            "{\"diskId\":\"pieidzlvssqy\",\"diskName\":\"opac\",\"diskSizeInMB\":\"hydv\",\"diskType\":\"mfngpmillxgjsci\",\"diskConfiguration\":\"gsoriobij\",\"volumeList\":[{\"label\":\"yeuynhbokay\",\"name\":\"wybriopdwe\"},{\"label\":\"tnorwaigsioct\",\"name\":\"mvjanx\"}]}")
            .toObject(InMageDiskDetails.class);
        Assertions.assertEquals("pieidzlvssqy", model.diskId());
        Assertions.assertEquals("opac", model.diskName());
        Assertions.assertEquals("hydv", model.diskSizeInMB());
        Assertions.assertEquals("mfngpmillxgjsci", model.diskType());
        Assertions.assertEquals("gsoriobij", model.diskConfiguration());
        Assertions.assertEquals("yeuynhbokay", model.volumeList().get(0).label());
        Assertions.assertEquals("wybriopdwe", model.volumeList().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageDiskDetails model = new InMageDiskDetails().withDiskId("pieidzlvssqy")
            .withDiskName("opac")
            .withDiskSizeInMB("hydv")
            .withDiskType("mfngpmillxgjsci")
            .withDiskConfiguration("gsoriobij")
            .withVolumeList(Arrays.asList(new DiskVolumeDetails().withLabel("yeuynhbokay").withName("wybriopdwe"),
                new DiskVolumeDetails().withLabel("tnorwaigsioct").withName("mvjanx")));
        model = BinaryData.fromObject(model).toObject(InMageDiskDetails.class);
        Assertions.assertEquals("pieidzlvssqy", model.diskId());
        Assertions.assertEquals("opac", model.diskName());
        Assertions.assertEquals("hydv", model.diskSizeInMB());
        Assertions.assertEquals("mfngpmillxgjsci", model.diskType());
        Assertions.assertEquals("gsoriobij", model.diskConfiguration());
        Assertions.assertEquals("yeuynhbokay", model.volumeList().get(0).label());
        Assertions.assertEquals("wybriopdwe", model.volumeList().get(0).name());
    }
}
