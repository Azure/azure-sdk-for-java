// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.DiskVolumeDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageDiskDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InMageDiskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageDiskDetails model =
            BinaryData
                .fromString(
                    "{\"diskId\":\"kgxqwqueuuylztpz\",\"diskName\":\"zevjykofve\",\"diskSizeInMB\":\"fkhkqtwqlep\",\"diskType\":\"zkca\",\"diskConfiguration\":\"wz\",\"volumeList\":[{\"label\":\"gffjw\",\"name\":\"nrtwz\"},{\"label\":\"qkifmxawostfz\",\"name\":\"hrkmjqncfv\"},{\"label\":\"cnhemvwfnq\",\"name\":\"ypvndrw\"},{\"label\":\"od\",\"name\":\"grssgw\"}]}")
                .toObject(InMageDiskDetails.class);
        Assertions.assertEquals("kgxqwqueuuylztpz", model.diskId());
        Assertions.assertEquals("zevjykofve", model.diskName());
        Assertions.assertEquals("fkhkqtwqlep", model.diskSizeInMB());
        Assertions.assertEquals("zkca", model.diskType());
        Assertions.assertEquals("wz", model.diskConfiguration());
        Assertions.assertEquals("gffjw", model.volumeList().get(0).label());
        Assertions.assertEquals("nrtwz", model.volumeList().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageDiskDetails model =
            new InMageDiskDetails()
                .withDiskId("kgxqwqueuuylztpz")
                .withDiskName("zevjykofve")
                .withDiskSizeInMB("fkhkqtwqlep")
                .withDiskType("zkca")
                .withDiskConfiguration("wz")
                .withVolumeList(
                    Arrays
                        .asList(
                            new DiskVolumeDetails().withLabel("gffjw").withName("nrtwz"),
                            new DiskVolumeDetails().withLabel("qkifmxawostfz").withName("hrkmjqncfv"),
                            new DiskVolumeDetails().withLabel("cnhemvwfnq").withName("ypvndrw"),
                            new DiskVolumeDetails().withLabel("od").withName("grssgw")));
        model = BinaryData.fromObject(model).toObject(InMageDiskDetails.class);
        Assertions.assertEquals("kgxqwqueuuylztpz", model.diskId());
        Assertions.assertEquals("zevjykofve", model.diskName());
        Assertions.assertEquals("fkhkqtwqlep", model.diskSizeInMB());
        Assertions.assertEquals("zkca", model.diskType());
        Assertions.assertEquals("wz", model.diskConfiguration());
        Assertions.assertEquals("gffjw", model.volumeList().get(0).label());
        Assertions.assertEquals("nrtwz", model.volumeList().get(0).name());
    }
}
