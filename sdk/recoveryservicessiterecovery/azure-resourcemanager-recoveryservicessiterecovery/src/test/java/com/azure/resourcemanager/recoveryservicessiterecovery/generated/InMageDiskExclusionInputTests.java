// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageDiskExclusionInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageDiskSignatureExclusionOptions;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageVolumeExclusionOptions;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class InMageDiskExclusionInputTests {
    @Test
    public void testDeserialize() {
        InMageDiskExclusionInput model =
            BinaryData
                .fromString(
                    "{\"volumeOptions\":[{\"volumeLabel\":\"mjxuvjipfdvhaxd\",\"onlyExcludeIfSingleVolume\":\"zaehpphthd\"},{\"volumeLabel\":\"mvetatlakfq\",\"onlyExcludeIfSingleVolume\":\"xwgiks\"},{\"volumeLabel\":\"vtooxrpo\",\"onlyExcludeIfSingleVolume\":\"phchgjtnhtukfaci\"}],\"diskSignatureOptions\":[{\"diskSignature\":\"ntumeezbxvq\"},{\"diskSignature\":\"nuvwcgasgomtmjzw\"},{\"diskSignature\":\"qgo\"},{\"diskSignature\":\"xpwwzt\"}]}")
                .toObject(InMageDiskExclusionInput.class);
        Assertions.assertEquals("mjxuvjipfdvhaxd", model.volumeOptions().get(0).volumeLabel());
        Assertions.assertEquals("zaehpphthd", model.volumeOptions().get(0).onlyExcludeIfSingleVolume());
        Assertions.assertEquals("ntumeezbxvq", model.diskSignatureOptions().get(0).diskSignature());
    }

    @Test
    public void testSerialize() {
        InMageDiskExclusionInput model =
            new InMageDiskExclusionInput()
                .withVolumeOptions(
                    Arrays
                        .asList(
                            new InMageVolumeExclusionOptions()
                                .withVolumeLabel("mjxuvjipfdvhaxd")
                                .withOnlyExcludeIfSingleVolume("zaehpphthd"),
                            new InMageVolumeExclusionOptions()
                                .withVolumeLabel("mvetatlakfq")
                                .withOnlyExcludeIfSingleVolume("xwgiks"),
                            new InMageVolumeExclusionOptions()
                                .withVolumeLabel("vtooxrpo")
                                .withOnlyExcludeIfSingleVolume("phchgjtnhtukfaci")))
                .withDiskSignatureOptions(
                    Arrays
                        .asList(
                            new InMageDiskSignatureExclusionOptions().withDiskSignature("ntumeezbxvq"),
                            new InMageDiskSignatureExclusionOptions().withDiskSignature("nuvwcgasgomtmjzw"),
                            new InMageDiskSignatureExclusionOptions().withDiskSignature("qgo"),
                            new InMageDiskSignatureExclusionOptions().withDiskSignature("xpwwzt")));
        model = BinaryData.fromObject(model).toObject(InMageDiskExclusionInput.class);
        Assertions.assertEquals("mjxuvjipfdvhaxd", model.volumeOptions().get(0).volumeLabel());
        Assertions.assertEquals("zaehpphthd", model.volumeOptions().get(0).onlyExcludeIfSingleVolume());
        Assertions.assertEquals("ntumeezbxvq", model.diskSignatureOptions().get(0).diskSignature());
    }
}
