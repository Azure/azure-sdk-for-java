// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageDiskExclusionInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageDiskSignatureExclusionOptions;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageVolumeExclusionOptions;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InMageDiskExclusionInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageDiskExclusionInput model = BinaryData.fromString(
            "{\"volumeOptions\":[{\"volumeLabel\":\"f\",\"onlyExcludeIfSingleVolume\":\"jnwosst\"},{\"volumeLabel\":\"xt\",\"onlyExcludeIfSingleVolume\":\"xx\"},{\"volumeLabel\":\"fcwrri\",\"onlyExcludeIfSingleVolume\":\"xeezwyhjmbjiqe\"}],\"diskSignatureOptions\":[{\"diskSignature\":\"bsohcwhpyvdkgdet\"},{\"diskSignature\":\"wcanzbjekwuyckyv\"}]}")
            .toObject(InMageDiskExclusionInput.class);
        Assertions.assertEquals("f", model.volumeOptions().get(0).volumeLabel());
        Assertions.assertEquals("jnwosst", model.volumeOptions().get(0).onlyExcludeIfSingleVolume());
        Assertions.assertEquals("bsohcwhpyvdkgdet", model.diskSignatureOptions().get(0).diskSignature());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageDiskExclusionInput model = new InMageDiskExclusionInput()
            .withVolumeOptions(Arrays.asList(
                new InMageVolumeExclusionOptions().withVolumeLabel("f").withOnlyExcludeIfSingleVolume("jnwosst"),
                new InMageVolumeExclusionOptions().withVolumeLabel("xt").withOnlyExcludeIfSingleVolume("xx"),
                new InMageVolumeExclusionOptions().withVolumeLabel("fcwrri")
                    .withOnlyExcludeIfSingleVolume("xeezwyhjmbjiqe")))
            .withDiskSignatureOptions(
                Arrays.asList(new InMageDiskSignatureExclusionOptions().withDiskSignature("bsohcwhpyvdkgdet"),
                    new InMageDiskSignatureExclusionOptions().withDiskSignature("wcanzbjekwuyckyv")));
        model = BinaryData.fromObject(model).toObject(InMageDiskExclusionInput.class);
        Assertions.assertEquals("f", model.volumeOptions().get(0).volumeLabel());
        Assertions.assertEquals("jnwosst", model.volumeOptions().get(0).onlyExcludeIfSingleVolume());
        Assertions.assertEquals("bsohcwhpyvdkgdet", model.diskSignatureOptions().get(0).diskSignature());
    }
}
