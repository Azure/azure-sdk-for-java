// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AddVCenterRequest;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AddVCenterRequestProperties;
import org.junit.jupiter.api.Assertions;

public final class AddVCenterRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AddVCenterRequest model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"friendlyName\":\"awddjibab\",\"ipAddress\":\"ititvtzeexavoxt\",\"processServerId\":\"lecdmdqbw\",\"port\":\"pqtgsfjac\",\"runAsAccountId\":\"lhhxudbxvodhtnsi\"}}")
                .toObject(AddVCenterRequest.class);
        Assertions.assertEquals("awddjibab", model.properties().friendlyName());
        Assertions.assertEquals("ititvtzeexavoxt", model.properties().ipAddress());
        Assertions.assertEquals("lecdmdqbw", model.properties().processServerId());
        Assertions.assertEquals("pqtgsfjac", model.properties().port());
        Assertions.assertEquals("lhhxudbxvodhtnsi", model.properties().runAsAccountId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AddVCenterRequest model =
            new AddVCenterRequest()
                .withProperties(
                    new AddVCenterRequestProperties()
                        .withFriendlyName("awddjibab")
                        .withIpAddress("ititvtzeexavoxt")
                        .withProcessServerId("lecdmdqbw")
                        .withPort("pqtgsfjac")
                        .withRunAsAccountId("lhhxudbxvodhtnsi"));
        model = BinaryData.fromObject(model).toObject(AddVCenterRequest.class);
        Assertions.assertEquals("awddjibab", model.properties().friendlyName());
        Assertions.assertEquals("ititvtzeexavoxt", model.properties().ipAddress());
        Assertions.assertEquals("lecdmdqbw", model.properties().processServerId());
        Assertions.assertEquals("pqtgsfjac", model.properties().port());
        Assertions.assertEquals("lhhxudbxvodhtnsi", model.properties().runAsAccountId());
    }
}
