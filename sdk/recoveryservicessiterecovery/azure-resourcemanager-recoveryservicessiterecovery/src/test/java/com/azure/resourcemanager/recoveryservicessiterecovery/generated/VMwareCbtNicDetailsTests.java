// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.EthernetAddressType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtNicDetails;
import org.junit.jupiter.api.Assertions;

public final class VMwareCbtNicDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VMwareCbtNicDetails model = BinaryData.fromString(
            "{\"nicId\":\"icovj\",\"isPrimaryNic\":\"vwrmjx\",\"sourceIPAddress\":\"uod\",\"sourceIPAddressType\":\"Static\",\"sourceNetworkId\":\"bassqfyylwpp\",\"targetIPAddress\":\"gkbzbloas\",\"targetIPAddressType\":\"Static\",\"targetSubnetName\":\"qvovdpmhttu\",\"testNetworkId\":\"qjsrvjnqtaqgxq\",\"testSubnetName\":\"kceincnrec\",\"testIPAddress\":\"iywevsfg\",\"testIPAddressType\":\"Static\",\"targetNicName\":\"szd\",\"isSelectedForMigration\":\"mjsqsvzvm\"}")
            .toObject(VMwareCbtNicDetails.class);
        Assertions.assertEquals("vwrmjx", model.isPrimaryNic());
        Assertions.assertEquals("gkbzbloas", model.targetIpAddress());
        Assertions.assertEquals(EthernetAddressType.STATIC, model.targetIpAddressType());
        Assertions.assertEquals("qvovdpmhttu", model.targetSubnetName());
        Assertions.assertEquals("qjsrvjnqtaqgxq", model.testNetworkId());
        Assertions.assertEquals("kceincnrec", model.testSubnetName());
        Assertions.assertEquals("iywevsfg", model.testIpAddress());
        Assertions.assertEquals(EthernetAddressType.STATIC, model.testIpAddressType());
        Assertions.assertEquals("szd", model.targetNicName());
        Assertions.assertEquals("mjsqsvzvm", model.isSelectedForMigration());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VMwareCbtNicDetails model = new VMwareCbtNicDetails().withIsPrimaryNic("vwrmjx")
            .withTargetIpAddress("gkbzbloas")
            .withTargetIpAddressType(EthernetAddressType.STATIC)
            .withTargetSubnetName("qvovdpmhttu")
            .withTestNetworkId("qjsrvjnqtaqgxq")
            .withTestSubnetName("kceincnrec")
            .withTestIpAddress("iywevsfg")
            .withTestIpAddressType(EthernetAddressType.STATIC)
            .withTargetNicName("szd")
            .withIsSelectedForMigration("mjsqsvzvm");
        model = BinaryData.fromObject(model).toObject(VMwareCbtNicDetails.class);
        Assertions.assertEquals("vwrmjx", model.isPrimaryNic());
        Assertions.assertEquals("gkbzbloas", model.targetIpAddress());
        Assertions.assertEquals(EthernetAddressType.STATIC, model.targetIpAddressType());
        Assertions.assertEquals("qvovdpmhttu", model.targetSubnetName());
        Assertions.assertEquals("qjsrvjnqtaqgxq", model.testNetworkId());
        Assertions.assertEquals("kceincnrec", model.testSubnetName());
        Assertions.assertEquals("iywevsfg", model.testIpAddress());
        Assertions.assertEquals(EthernetAddressType.STATIC, model.testIpAddressType());
        Assertions.assertEquals("szd", model.targetNicName());
        Assertions.assertEquals("mjsqsvzvm", model.isSelectedForMigration());
    }
}
