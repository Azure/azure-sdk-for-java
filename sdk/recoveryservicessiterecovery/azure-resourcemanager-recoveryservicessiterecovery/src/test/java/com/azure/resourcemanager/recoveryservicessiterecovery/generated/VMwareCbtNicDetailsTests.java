// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.EthernetAddressType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtNicDetails;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class VMwareCbtNicDetailsTests {
    @Test
    public void testDeserialize() {
        VMwareCbtNicDetails model =
            BinaryData
                .fromString(
                    "{\"nicId\":\"l\",\"isPrimaryNic\":\"krehyhtmj\",\"sourceIPAddress\":\"uif\",\"sourceIPAddressType\":\"Dynamic\",\"sourceNetworkId\":\"faryrvjlg\",\"targetIPAddress\":\"zvj\",\"targetIPAddressType\":\"Static\",\"targetSubnetName\":\"oyiyaxqv\",\"testNetworkId\":\"eiwtczkdd\",\"testSubnetName\":\"ovbooqbmdqrxy\",\"testIPAddress\":\"ae\",\"testIPAddressType\":\"Static\",\"targetNicName\":\"lw\",\"isSelectedForMigration\":\"dtlri\"}")
                .toObject(VMwareCbtNicDetails.class);
        Assertions.assertEquals("krehyhtmj", model.isPrimaryNic());
        Assertions.assertEquals("zvj", model.targetIpAddress());
        Assertions.assertEquals(EthernetAddressType.STATIC, model.targetIpAddressType());
        Assertions.assertEquals("oyiyaxqv", model.targetSubnetName());
        Assertions.assertEquals("eiwtczkdd", model.testNetworkId());
        Assertions.assertEquals("ovbooqbmdqrxy", model.testSubnetName());
        Assertions.assertEquals("ae", model.testIpAddress());
        Assertions.assertEquals(EthernetAddressType.STATIC, model.testIpAddressType());
        Assertions.assertEquals("lw", model.targetNicName());
        Assertions.assertEquals("dtlri", model.isSelectedForMigration());
    }

    @Test
    public void testSerialize() {
        VMwareCbtNicDetails model =
            new VMwareCbtNicDetails()
                .withIsPrimaryNic("krehyhtmj")
                .withTargetIpAddress("zvj")
                .withTargetIpAddressType(EthernetAddressType.STATIC)
                .withTargetSubnetName("oyiyaxqv")
                .withTestNetworkId("eiwtczkdd")
                .withTestSubnetName("ovbooqbmdqrxy")
                .withTestIpAddress("ae")
                .withTestIpAddressType(EthernetAddressType.STATIC)
                .withTargetNicName("lw")
                .withIsSelectedForMigration("dtlri");
        model = BinaryData.fromObject(model).toObject(VMwareCbtNicDetails.class);
        Assertions.assertEquals("krehyhtmj", model.isPrimaryNic());
        Assertions.assertEquals("zvj", model.targetIpAddress());
        Assertions.assertEquals(EthernetAddressType.STATIC, model.targetIpAddressType());
        Assertions.assertEquals("oyiyaxqv", model.targetSubnetName());
        Assertions.assertEquals("eiwtczkdd", model.testNetworkId());
        Assertions.assertEquals("ovbooqbmdqrxy", model.testSubnetName());
        Assertions.assertEquals("ae", model.testIpAddress());
        Assertions.assertEquals(EthernetAddressType.STATIC, model.testIpAddressType());
        Assertions.assertEquals("lw", model.targetNicName());
        Assertions.assertEquals("dtlri", model.isSelectedForMigration());
    }
}
