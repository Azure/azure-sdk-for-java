// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicessiterecovery.SiteRecoveryManager;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.NetworkMapping;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReplicationNetworkMappingsListByReplicatMockTests {
    @Test
    public void testListByReplicationNetworks() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"state\":\"phifkfrp\",\"primaryNetworkFriendlyName\":\"lubpebrmjjnfpght\",\"primaryNetworkId\":\"tpkimskhnkkhbykr\",\"primaryFabricFriendlyName\":\"hrcmelycpgokuth\",\"recoveryNetworkFriendlyName\":\"ybnzbnvmsh\",\"recoveryNetworkId\":\"zzlapyixlvzc\",\"recoveryFabricArmId\":\"laebxiau\",\"recoveryFabricFriendlyName\":\"uptessjlwjta\",\"fabricSpecificSettings\":{\"instanceType\":\"NetworkMappingFabricSpecificSettings\"}},\"location\":\"blskxgxqa\",\"id\":\"g\",\"name\":\"slkvcvwp\",\"type\":\"l\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SiteRecoveryManager manager = SiteRecoveryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<NetworkMapping> response = manager.replicationNetworkMappings()
            .listByReplicationNetworks("vqbugihcdvfoizo", "bloejzsaxzgkq", "vde", "p",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("phifkfrp", response.iterator().next().properties().state());
        Assertions.assertEquals("lubpebrmjjnfpght",
            response.iterator().next().properties().primaryNetworkFriendlyName());
        Assertions.assertEquals("tpkimskhnkkhbykr", response.iterator().next().properties().primaryNetworkId());
        Assertions.assertEquals("hrcmelycpgokuth", response.iterator().next().properties().primaryFabricFriendlyName());
        Assertions.assertEquals("ybnzbnvmsh", response.iterator().next().properties().recoveryNetworkFriendlyName());
        Assertions.assertEquals("zzlapyixlvzc", response.iterator().next().properties().recoveryNetworkId());
        Assertions.assertEquals("laebxiau", response.iterator().next().properties().recoveryFabricArmId());
        Assertions.assertEquals("uptessjlwjta", response.iterator().next().properties().recoveryFabricFriendlyName());
        Assertions.assertEquals("blskxgxqa", response.iterator().next().location());
    }
}
