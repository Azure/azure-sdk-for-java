// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.A2AEventDetails;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class A2AEventDetailsTests {
    @Test
    public void testDeserialize() {
        A2AEventDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"A2A\",\"protectedItemName\":\"ykyujxsg\",\"fabricObjectId\":\"srrryejylmbkzu\",\"fabricName\":\"igrfihotjewl\",\"fabricLocation\":\"uzzjgnrefq\",\"remoteFabricName\":\"qotoihiqakydiwfb\",\"remoteFabricLocation\":\"wpzdqtvhcspo\"}")
                .toObject(A2AEventDetails.class);
        Assertions.assertEquals("ykyujxsg", model.protectedItemName());
        Assertions.assertEquals("srrryejylmbkzu", model.fabricObjectId());
        Assertions.assertEquals("igrfihotjewl", model.fabricName());
        Assertions.assertEquals("uzzjgnrefq", model.fabricLocation());
        Assertions.assertEquals("qotoihiqakydiwfb", model.remoteFabricName());
        Assertions.assertEquals("wpzdqtvhcspo", model.remoteFabricLocation());
    }

    @Test
    public void testSerialize() {
        A2AEventDetails model =
            new A2AEventDetails()
                .withProtectedItemName("ykyujxsg")
                .withFabricObjectId("srrryejylmbkzu")
                .withFabricName("igrfihotjewl")
                .withFabricLocation("uzzjgnrefq")
                .withRemoteFabricName("qotoihiqakydiwfb")
                .withRemoteFabricLocation("wpzdqtvhcspo");
        model = BinaryData.fromObject(model).toObject(A2AEventDetails.class);
        Assertions.assertEquals("ykyujxsg", model.protectedItemName());
        Assertions.assertEquals("srrryejylmbkzu", model.fabricObjectId());
        Assertions.assertEquals("igrfihotjewl", model.fabricName());
        Assertions.assertEquals("uzzjgnrefq", model.fabricLocation());
        Assertions.assertEquals("qotoihiqakydiwfb", model.remoteFabricName());
        Assertions.assertEquals("wpzdqtvhcspo", model.remoteFabricLocation());
    }
}
