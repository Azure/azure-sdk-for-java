// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.A2AEventDetails;
import org.junit.jupiter.api.Assertions;

public final class A2AEventDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        A2AEventDetails model = BinaryData.fromString(
            "{\"instanceType\":\"A2A\",\"protectedItemName\":\"wvcmj\",\"fabricObjectId\":\"xiid\",\"fabricName\":\"czskoswoqiqazu\",\"fabricLocation\":\"mxzkr\",\"remoteFabricName\":\"oiisbamnppcce\",\"remoteFabricLocation\":\"ztdsbeza\"}")
            .toObject(A2AEventDetails.class);
        Assertions.assertEquals("wvcmj", model.protectedItemName());
        Assertions.assertEquals("xiid", model.fabricObjectId());
        Assertions.assertEquals("czskoswoqiqazu", model.fabricName());
        Assertions.assertEquals("mxzkr", model.fabricLocation());
        Assertions.assertEquals("oiisbamnppcce", model.remoteFabricName());
        Assertions.assertEquals("ztdsbeza", model.remoteFabricLocation());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        A2AEventDetails model = new A2AEventDetails().withProtectedItemName("wvcmj")
            .withFabricObjectId("xiid")
            .withFabricName("czskoswoqiqazu")
            .withFabricLocation("mxzkr")
            .withRemoteFabricName("oiisbamnppcce")
            .withRemoteFabricLocation("ztdsbeza");
        model = BinaryData.fromObject(model).toObject(A2AEventDetails.class);
        Assertions.assertEquals("wvcmj", model.protectedItemName());
        Assertions.assertEquals("xiid", model.fabricObjectId());
        Assertions.assertEquals("czskoswoqiqazu", model.fabricName());
        Assertions.assertEquals("mxzkr", model.fabricLocation());
        Assertions.assertEquals("oiisbamnppcce", model.remoteFabricName());
        Assertions.assertEquals("ztdsbeza", model.remoteFabricLocation());
    }
}
