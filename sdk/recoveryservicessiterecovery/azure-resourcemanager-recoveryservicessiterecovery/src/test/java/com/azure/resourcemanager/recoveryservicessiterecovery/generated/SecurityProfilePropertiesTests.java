// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SecurityConfiguration;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SecurityProfileProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SecurityType;
import org.junit.jupiter.api.Assertions;

public final class SecurityProfilePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecurityProfileProperties model = BinaryData.fromString(
            "{\"targetVmSecurityType\":\"None\",\"targetVmSecureBoot\":\"Enabled\",\"targetVmTpm\":\"Enabled\",\"targetVmMonitoring\":\"Disabled\",\"targetVmConfidentialEncryption\":\"Enabled\"}")
            .toObject(SecurityProfileProperties.class);
        Assertions.assertEquals(SecurityType.NONE, model.targetVmSecurityType());
        Assertions.assertEquals(SecurityConfiguration.ENABLED, model.targetVmSecureBoot());
        Assertions.assertEquals(SecurityConfiguration.ENABLED, model.targetVmTpm());
        Assertions.assertEquals(SecurityConfiguration.DISABLED, model.targetVmMonitoring());
        Assertions.assertEquals(SecurityConfiguration.ENABLED, model.targetVmConfidentialEncryption());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecurityProfileProperties model = new SecurityProfileProperties().withTargetVmSecurityType(SecurityType.NONE)
            .withTargetVmSecureBoot(SecurityConfiguration.ENABLED)
            .withTargetVmTpm(SecurityConfiguration.ENABLED)
            .withTargetVmMonitoring(SecurityConfiguration.DISABLED)
            .withTargetVmConfidentialEncryption(SecurityConfiguration.ENABLED);
        model = BinaryData.fromObject(model).toObject(SecurityProfileProperties.class);
        Assertions.assertEquals(SecurityType.NONE, model.targetVmSecurityType());
        Assertions.assertEquals(SecurityConfiguration.ENABLED, model.targetVmSecureBoot());
        Assertions.assertEquals(SecurityConfiguration.ENABLED, model.targetVmTpm());
        Assertions.assertEquals(SecurityConfiguration.DISABLED, model.targetVmMonitoring());
        Assertions.assertEquals(SecurityConfiguration.ENABLED, model.targetVmConfidentialEncryption());
    }
}
