// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicessiterecovery.SiteRecoveryManager;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.StorageClassificationMapping;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.StorageMappingInputProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StorageClassificationMappingsCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"targetStorageClassificationId\":\"cquajpoipdjxy\"},\"location\":\"gvraxhntoiw\",\"id\":\"szk\",\"name\":\"lk\",\"type\":\"sjwrretsluqfgksd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SiteRecoveryManager manager = SiteRecoveryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        StorageClassificationMapping response = manager.storageClassificationMappings()
            .define("feudbobmoljirch")
            .withExistingReplicationStorageClassification("ebdltniui", "merf", "hgvcy", "ddoeilhgga")
            .withProperties(new StorageMappingInputProperties().withTargetStorageClassificationId("zi"))
            .create();

        Assertions.assertEquals("cquajpoipdjxy", response.properties().targetStorageClassificationId());
        Assertions.assertEquals("gvraxhntoiw", response.location());
    }
}
