// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AzureVmDiskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaAzureManagedDiskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaAzureReplicationDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InitialReplicationDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.OSDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMNicDetails;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class HyperVReplicaAzureReplicationDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVReplicaAzureReplicationDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"HyperVReplicaAzure\",\"azureVmDiskDetails\":[{\"vhdType\":\"fblhkalehp\",\"vhdId\":\"awugiqjti\",\"diskId\":\"qgdm\",\"vhdName\":\"i\",\"maxSizeMB\":\"teajohiyg\",\"targetDiskLocation\":\"n\",\"targetDiskName\":\"n\",\"lunId\":\"czykmktpvw\",\"diskEncryptionSetId\":\"csehchkhufm\",\"customTargetDiskName\":\"umqy\"},{\"vhdType\":\"ydzulodsaeuzan\",\"vhdId\":\"fnhsenwphp\",\"diskId\":\"ngqjclidf\",\"vhdName\":\"jwjj\",\"maxSizeMB\":\"wbeqrkuor\",\"targetDiskLocation\":\"ssruqnmdvhazcvj\",\"targetDiskName\":\"iqswbqer\",\"lunId\":\"xiytxtdgukvl\",\"diskEncryptionSetId\":\"ktg\",\"customTargetDiskName\":\"tyouambewreswmow\"},{\"vhdType\":\"mmuteyxeyguq\",\"vhdId\":\"ijiitns\",\"diskId\":\"lz\",\"vhdName\":\"sygrijwa\",\"maxSizeMB\":\"fanraybfu\",\"targetDiskLocation\":\"frojsydgr\",\"targetDiskName\":\"dkygywezski\",\"lunId\":\"afygzmxieqvds\",\"diskEncryptionSetId\":\"klixqcahyhxaly\",\"customTargetDiskName\":\"awoijp\"},{\"vhdType\":\"tblxpkkwjdjodqhy\",\"vhdId\":\"ncn\",\"diskId\":\"mehllizhceu\",\"vhdName\":\"qodkadppyibngql\",\"maxSizeMB\":\"ywrxw\",\"targetDiskLocation\":\"dtluvvadswzsn\",\"targetDiskName\":\"emlowuowhl\",\"lunId\":\"nwyrmouv\",\"diskEncryptionSetId\":\"gmokzkltrfowt\",\"customTargetDiskName\":\"rfmvlihcvjdrqcrj\"}],\"recoveryAzureVmName\":\"h\",\"recoveryAzureVMSize\":\"ukvhd\",\"recoveryAzureStorageAccount\":\"wyojbfqzdkfnjyi\",\"recoveryAzureLogStorageAccountId\":\"afr\",\"lastReplicatedTime\":\"2021-01-23T11:55:55Z\",\"rpoInSeconds\":6416520261503066829,\"lastRpoCalculatedTime\":\"2020-12-22T03:22:41Z\",\"vmId\":\"umzznvalqjrhuz\",\"vmProtectionState\":\"xonjtpusl\",\"vmProtectionStateDescription\":\"wpvtiotzbpdbol\",\"initialReplicationDetails\":{\"initialReplicationType\":\"yfqiuasig\",\"initialReplicationProgressPercentage\":\"wsocnequygdjbo\"},\"vmNics\":[{\"nicId\":\"tqjkqevad\",\"replicaNicId\":\"mwiuawvcm\",\"sourceNicArmId\":\"kxiidisczskoswo\",\"vMNetworkName\":\"qazu\",\"recoveryVMNetworkId\":\"mxzkr\",\"ipConfigs\":[],\"selectionType\":\"isbamnppcc\",\"recoveryNetworkSecurityGroupId\":\"u\",\"enableAcceleratedNetworkingOnRecovery\":true,\"tfoVMNetworkId\":\"bezaxyfukzxuiz\",\"tfoNetworkSecurityGroupId\":\"hnepkpeti\",\"enableAcceleratedNetworkingOnTfo\":true,\"recoveryNicName\":\"iubxdukec\",\"recoveryNicResourceGroupName\":\"dazvdhctm\",\"reuseExistingNic\":false,\"tfoRecoveryNicName\":\"zudblnsntrpcaq\",\"tfoRecoveryNicResourceGroupName\":\"ofkbtf\",\"tfoReuseExistingNic\":false,\"targetNicName\":\"bnldpvcbh\"},{\"nicId\":\"zyqu\",\"replicaNicId\":\"sqxutr\",\"sourceNicArmId\":\"rruyuu\",\"vMNetworkName\":\"vlm\",\"recoveryVMNetworkId\":\"wcolbmxl\",\"ipConfigs\":[],\"selectionType\":\"pcpahprzrvxhmtf\",\"recoveryNetworkSecurityGroupId\":\"cnxzcmj\",\"enableAcceleratedNetworkingOnRecovery\":true,\"tfoVMNetworkId\":\"noq\",\"tfoNetworkSecurityGroupId\":\"tdisnjevhdlmyd\",\"enableAcceleratedNetworkingOnTfo\":false,\"recoveryNicName\":\"epfwwt\",\"recoveryNicResourceGroupName\":\"doesxxhmwcdb\",\"reuseExistingNic\":false,\"tfoRecoveryNicName\":\"ikxkxhneg\",\"tfoRecoveryNicResourceGroupName\":\"jzrbhtmeplv\",\"tfoReuseExistingNic\":false,\"targetNicName\":\"brlbpgs\"},{\"nicId\":\"agnchjhgemuowaky\",\"replicaNicId\":\"lhjym\",\"sourceNicArmId\":\"gqtagd\",\"vMNetworkName\":\"lss\",\"recoveryVMNetworkId\":\"jomevtfycnlb\",\"ipConfigs\":[],\"selectionType\":\"odk\",\"recoveryNetworkSecurityGroupId\":\"ji\",\"enableAcceleratedNetworkingOnRecovery\":false,\"tfoVMNetworkId\":\"sik\",\"tfoNetworkSecurityGroupId\":\"bcufqbvntn\",\"enableAcceleratedNetworkingOnTfo\":false,\"recoveryNicName\":\"sorhcekx\",\"recoveryNicResourceGroupName\":\"lykmxcpwzvmdo\",\"reuseExistingNic\":true,\"tfoRecoveryNicName\":\"tiwlwxlboncqb\",\"tfoRecoveryNicResourceGroupName\":\"qicqchygt\",\"tfoReuseExistingNic\":false,\"targetNicName\":\"janepubdpkx\"}],\"selectedRecoveryAzureNetworkId\":\"vgxiaodetvo\",\"selectedSourceNicId\":\"xdxuwsaifmc\",\"encryption\":\"osbz\",\"oSDetails\":{\"osType\":\"gcv\",\"productType\":\"cknjolgj\",\"osEdition\":\"xpvelszerqzevxo\",\"oSVersion\":\"intxwa\",\"oSMajorVersion\":\"glzoblqwa\",\"oSMinorVersion\":\"r\"},\"sourceVmRamSizeInMB\":689377873,\"sourceVmCpuCount\":475916651,\"enableRdpOnTargetOption\":\"yqbhd\",\"recoveryAzureResourceGroupId\":\"fjrqpjiyr\",\"recoveryAvailabilitySetId\":\"crgaxwmzwdf\",\"targetAvailabilityZone\":\"nrzorpd\",\"targetProximityPlacementGroupId\":\"bqc\",\"useManagedDisks\":\"jfgxxsaetg\",\"licenseType\":\"gvpyigdaqqilzdc\",\"sqlServerLicenseType\":\"wjoe\",\"lastRecoveryPointReceived\":\"2021-02-24T04:50:53Z\",\"targetVmTags\":{\"ilfjqqacdmk\":\"caifpaurww\",\"akeciqchx\":\"wxdcvjwcyz\",\"wdfmmpzhzzwvywr\":\"tuicds\",\"aondjrkclamgg\":\"yngydgrpxncaki\"},\"seedManagedDiskTags\":{\"xhqf\":\"mfejdoqeykglty\"},\"targetManagedDiskTags\":{\"iucijjcea\":\"ayejsxtlgflwfgz\"},\"targetNicTags\":{\"tvamcaszknx\":\"jjj\"},\"protectedManagedDisks\":[{\"diskId\":\"xetyvku\",\"seedManagedDiskId\":\"ignohi\",\"replicaDiskType\":\"gqogjwpindedva\",\"diskEncryptionSetId\":\"xbhmed\"},{\"diskId\":\"lbjywfcfxzirzzih\",\"seedManagedDiskId\":\"ypusuvjslczwci\",\"replicaDiskType\":\"jsllfryvd\",\"diskEncryptionSetId\":\"x\"},{\"diskId\":\"q\",\"seedManagedDiskId\":\"frgnawbabgfbktyj\",\"replicaDiskType\":\"czlfsy\",\"diskEncryptionSetId\":\"frbzgowo\"}]}")
                .toObject(HyperVReplicaAzureReplicationDetails.class);
        Assertions.assertEquals("fblhkalehp", model.azureVmDiskDetails().get(0).vhdType());
        Assertions.assertEquals("awugiqjti", model.azureVmDiskDetails().get(0).vhdId());
        Assertions.assertEquals("qgdm", model.azureVmDiskDetails().get(0).diskId());
        Assertions.assertEquals("i", model.azureVmDiskDetails().get(0).vhdName());
        Assertions.assertEquals("teajohiyg", model.azureVmDiskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("n", model.azureVmDiskDetails().get(0).targetDiskLocation());
        Assertions.assertEquals("n", model.azureVmDiskDetails().get(0).targetDiskName());
        Assertions.assertEquals("czykmktpvw", model.azureVmDiskDetails().get(0).lunId());
        Assertions.assertEquals("csehchkhufm", model.azureVmDiskDetails().get(0).diskEncryptionSetId());
        Assertions.assertEquals("umqy", model.azureVmDiskDetails().get(0).customTargetDiskName());
        Assertions.assertEquals("h", model.recoveryAzureVmName());
        Assertions.assertEquals("ukvhd", model.recoveryAzureVMSize());
        Assertions.assertEquals("wyojbfqzdkfnjyi", model.recoveryAzureStorageAccount());
        Assertions.assertEquals("afr", model.recoveryAzureLogStorageAccountId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-23T11:55:55Z"), model.lastReplicatedTime());
        Assertions.assertEquals(6416520261503066829L, model.rpoInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-22T03:22:41Z"), model.lastRpoCalculatedTime());
        Assertions.assertEquals("umzznvalqjrhuz", model.vmId());
        Assertions.assertEquals("xonjtpusl", model.vmProtectionState());
        Assertions.assertEquals("wpvtiotzbpdbol", model.vmProtectionStateDescription());
        Assertions.assertEquals("yfqiuasig", model.initialReplicationDetails().initialReplicationType());
        Assertions
            .assertEquals("wsocnequygdjbo", model.initialReplicationDetails().initialReplicationProgressPercentage());
        Assertions.assertEquals("tqjkqevad", model.vmNics().get(0).nicId());
        Assertions.assertEquals("mwiuawvcm", model.vmNics().get(0).replicaNicId());
        Assertions.assertEquals("kxiidisczskoswo", model.vmNics().get(0).sourceNicArmId());
        Assertions.assertEquals("qazu", model.vmNics().get(0).vMNetworkName());
        Assertions.assertEquals("mxzkr", model.vmNics().get(0).recoveryVMNetworkId());
        Assertions.assertEquals("isbamnppcc", model.vmNics().get(0).selectionType());
        Assertions.assertEquals("u", model.vmNics().get(0).recoveryNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.vmNics().get(0).enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("bezaxyfukzxuiz", model.vmNics().get(0).tfoVMNetworkId());
        Assertions.assertEquals("hnepkpeti", model.vmNics().get(0).tfoNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.vmNics().get(0).enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("iubxdukec", model.vmNics().get(0).recoveryNicName());
        Assertions.assertEquals("dazvdhctm", model.vmNics().get(0).recoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.vmNics().get(0).reuseExistingNic());
        Assertions.assertEquals("zudblnsntrpcaq", model.vmNics().get(0).tfoRecoveryNicName());
        Assertions.assertEquals("ofkbtf", model.vmNics().get(0).tfoRecoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.vmNics().get(0).tfoReuseExistingNic());
        Assertions.assertEquals("bnldpvcbh", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("vgxiaodetvo", model.selectedRecoveryAzureNetworkId());
        Assertions.assertEquals("xdxuwsaifmc", model.selectedSourceNicId());
        Assertions.assertEquals("osbz", model.encryption());
        Assertions.assertEquals("gcv", model.oSDetails().osType());
        Assertions.assertEquals("cknjolgj", model.oSDetails().productType());
        Assertions.assertEquals("xpvelszerqzevxo", model.oSDetails().osEdition());
        Assertions.assertEquals("intxwa", model.oSDetails().oSVersion());
        Assertions.assertEquals("glzoblqwa", model.oSDetails().oSMajorVersion());
        Assertions.assertEquals("r", model.oSDetails().oSMinorVersion());
        Assertions.assertEquals(689377873, model.sourceVmRamSizeInMB());
        Assertions.assertEquals(475916651, model.sourceVmCpuCount());
        Assertions.assertEquals("yqbhd", model.enableRdpOnTargetOption());
        Assertions.assertEquals("fjrqpjiyr", model.recoveryAzureResourceGroupId());
        Assertions.assertEquals("crgaxwmzwdf", model.recoveryAvailabilitySetId());
        Assertions.assertEquals("nrzorpd", model.targetAvailabilityZone());
        Assertions.assertEquals("bqc", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("jfgxxsaetg", model.useManagedDisks());
        Assertions.assertEquals("gvpyigdaqqilzdc", model.licenseType());
        Assertions.assertEquals("wjoe", model.sqlServerLicenseType());
        Assertions.assertEquals("caifpaurww", model.targetVmTags().get("ilfjqqacdmk"));
        Assertions.assertEquals("mfejdoqeykglty", model.seedManagedDiskTags().get("xhqf"));
        Assertions.assertEquals("ayejsxtlgflwfgz", model.targetManagedDiskTags().get("iucijjcea"));
        Assertions.assertEquals("jjj", model.targetNicTags().get("tvamcaszknx"));
        Assertions.assertEquals("xetyvku", model.protectedManagedDisks().get(0).diskId());
        Assertions.assertEquals("ignohi", model.protectedManagedDisks().get(0).seedManagedDiskId());
        Assertions.assertEquals("gqogjwpindedva", model.protectedManagedDisks().get(0).replicaDiskType());
        Assertions.assertEquals("xbhmed", model.protectedManagedDisks().get(0).diskEncryptionSetId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVReplicaAzureReplicationDetails model =
            new HyperVReplicaAzureReplicationDetails()
                .withAzureVmDiskDetails(
                    Arrays
                        .asList(
                            new AzureVmDiskDetails()
                                .withVhdType("fblhkalehp")
                                .withVhdId("awugiqjti")
                                .withDiskId("qgdm")
                                .withVhdName("i")
                                .withMaxSizeMB("teajohiyg")
                                .withTargetDiskLocation("n")
                                .withTargetDiskName("n")
                                .withLunId("czykmktpvw")
                                .withDiskEncryptionSetId("csehchkhufm")
                                .withCustomTargetDiskName("umqy"),
                            new AzureVmDiskDetails()
                                .withVhdType("ydzulodsaeuzan")
                                .withVhdId("fnhsenwphp")
                                .withDiskId("ngqjclidf")
                                .withVhdName("jwjj")
                                .withMaxSizeMB("wbeqrkuor")
                                .withTargetDiskLocation("ssruqnmdvhazcvj")
                                .withTargetDiskName("iqswbqer")
                                .withLunId("xiytxtdgukvl")
                                .withDiskEncryptionSetId("ktg")
                                .withCustomTargetDiskName("tyouambewreswmow"),
                            new AzureVmDiskDetails()
                                .withVhdType("mmuteyxeyguq")
                                .withVhdId("ijiitns")
                                .withDiskId("lz")
                                .withVhdName("sygrijwa")
                                .withMaxSizeMB("fanraybfu")
                                .withTargetDiskLocation("frojsydgr")
                                .withTargetDiskName("dkygywezski")
                                .withLunId("afygzmxieqvds")
                                .withDiskEncryptionSetId("klixqcahyhxaly")
                                .withCustomTargetDiskName("awoijp"),
                            new AzureVmDiskDetails()
                                .withVhdType("tblxpkkwjdjodqhy")
                                .withVhdId("ncn")
                                .withDiskId("mehllizhceu")
                                .withVhdName("qodkadppyibngql")
                                .withMaxSizeMB("ywrxw")
                                .withTargetDiskLocation("dtluvvadswzsn")
                                .withTargetDiskName("emlowuowhl")
                                .withLunId("nwyrmouv")
                                .withDiskEncryptionSetId("gmokzkltrfowt")
                                .withCustomTargetDiskName("rfmvlihcvjdrqcrj")))
                .withRecoveryAzureVmName("h")
                .withRecoveryAzureVMSize("ukvhd")
                .withRecoveryAzureStorageAccount("wyojbfqzdkfnjyi")
                .withRecoveryAzureLogStorageAccountId("afr")
                .withLastReplicatedTime(OffsetDateTime.parse("2021-01-23T11:55:55Z"))
                .withRpoInSeconds(6416520261503066829L)
                .withLastRpoCalculatedTime(OffsetDateTime.parse("2020-12-22T03:22:41Z"))
                .withVmId("umzznvalqjrhuz")
                .withVmProtectionState("xonjtpusl")
                .withVmProtectionStateDescription("wpvtiotzbpdbol")
                .withInitialReplicationDetails(
                    new InitialReplicationDetails()
                        .withInitialReplicationType("yfqiuasig")
                        .withInitialReplicationProgressPercentage("wsocnequygdjbo"))
                .withVmNics(
                    Arrays
                        .asList(
                            new VMNicDetails()
                                .withNicId("tqjkqevad")
                                .withReplicaNicId("mwiuawvcm")
                                .withSourceNicArmId("kxiidisczskoswo")
                                .withVMNetworkName("qazu")
                                .withRecoveryVMNetworkId("mxzkr")
                                .withIpConfigs(Arrays.asList())
                                .withSelectionType("isbamnppcc")
                                .withRecoveryNetworkSecurityGroupId("u")
                                .withEnableAcceleratedNetworkingOnRecovery(true)
                                .withTfoVMNetworkId("bezaxyfukzxuiz")
                                .withTfoNetworkSecurityGroupId("hnepkpeti")
                                .withEnableAcceleratedNetworkingOnTfo(true)
                                .withRecoveryNicName("iubxdukec")
                                .withRecoveryNicResourceGroupName("dazvdhctm")
                                .withReuseExistingNic(false)
                                .withTfoRecoveryNicName("zudblnsntrpcaq")
                                .withTfoRecoveryNicResourceGroupName("ofkbtf")
                                .withTfoReuseExistingNic(false)
                                .withTargetNicName("bnldpvcbh"),
                            new VMNicDetails()
                                .withNicId("zyqu")
                                .withReplicaNicId("sqxutr")
                                .withSourceNicArmId("rruyuu")
                                .withVMNetworkName("vlm")
                                .withRecoveryVMNetworkId("wcolbmxl")
                                .withIpConfigs(Arrays.asList())
                                .withSelectionType("pcpahprzrvxhmtf")
                                .withRecoveryNetworkSecurityGroupId("cnxzcmj")
                                .withEnableAcceleratedNetworkingOnRecovery(true)
                                .withTfoVMNetworkId("noq")
                                .withTfoNetworkSecurityGroupId("tdisnjevhdlmyd")
                                .withEnableAcceleratedNetworkingOnTfo(false)
                                .withRecoveryNicName("epfwwt")
                                .withRecoveryNicResourceGroupName("doesxxhmwcdb")
                                .withReuseExistingNic(false)
                                .withTfoRecoveryNicName("ikxkxhneg")
                                .withTfoRecoveryNicResourceGroupName("jzrbhtmeplv")
                                .withTfoReuseExistingNic(false)
                                .withTargetNicName("brlbpgs"),
                            new VMNicDetails()
                                .withNicId("agnchjhgemuowaky")
                                .withReplicaNicId("lhjym")
                                .withSourceNicArmId("gqtagd")
                                .withVMNetworkName("lss")
                                .withRecoveryVMNetworkId("jomevtfycnlb")
                                .withIpConfigs(Arrays.asList())
                                .withSelectionType("odk")
                                .withRecoveryNetworkSecurityGroupId("ji")
                                .withEnableAcceleratedNetworkingOnRecovery(false)
                                .withTfoVMNetworkId("sik")
                                .withTfoNetworkSecurityGroupId("bcufqbvntn")
                                .withEnableAcceleratedNetworkingOnTfo(false)
                                .withRecoveryNicName("sorhcekx")
                                .withRecoveryNicResourceGroupName("lykmxcpwzvmdo")
                                .withReuseExistingNic(true)
                                .withTfoRecoveryNicName("tiwlwxlboncqb")
                                .withTfoRecoveryNicResourceGroupName("qicqchygt")
                                .withTfoReuseExistingNic(false)
                                .withTargetNicName("janepubdpkx")))
                .withSelectedRecoveryAzureNetworkId("vgxiaodetvo")
                .withSelectedSourceNicId("xdxuwsaifmc")
                .withEncryption("osbz")
                .withOSDetails(
                    new OSDetails()
                        .withOsType("gcv")
                        .withProductType("cknjolgj")
                        .withOsEdition("xpvelszerqzevxo")
                        .withOSVersion("intxwa")
                        .withOSMajorVersion("glzoblqwa")
                        .withOSMinorVersion("r"))
                .withSourceVmRamSizeInMB(689377873)
                .withSourceVmCpuCount(475916651)
                .withEnableRdpOnTargetOption("yqbhd")
                .withRecoveryAzureResourceGroupId("fjrqpjiyr")
                .withRecoveryAvailabilitySetId("crgaxwmzwdf")
                .withTargetAvailabilityZone("nrzorpd")
                .withTargetProximityPlacementGroupId("bqc")
                .withUseManagedDisks("jfgxxsaetg")
                .withLicenseType("gvpyigdaqqilzdc")
                .withSqlServerLicenseType("wjoe")
                .withTargetVmTags(
                    mapOf(
                        "ilfjqqacdmk",
                        "caifpaurww",
                        "akeciqchx",
                        "wxdcvjwcyz",
                        "wdfmmpzhzzwvywr",
                        "tuicds",
                        "aondjrkclamgg",
                        "yngydgrpxncaki"))
                .withSeedManagedDiskTags(mapOf("xhqf", "mfejdoqeykglty"))
                .withTargetManagedDiskTags(mapOf("iucijjcea", "ayejsxtlgflwfgz"))
                .withTargetNicTags(mapOf("tvamcaszknx", "jjj"))
                .withProtectedManagedDisks(
                    Arrays
                        .asList(
                            new HyperVReplicaAzureManagedDiskDetails()
                                .withDiskId("xetyvku")
                                .withSeedManagedDiskId("ignohi")
                                .withReplicaDiskType("gqogjwpindedva")
                                .withDiskEncryptionSetId("xbhmed"),
                            new HyperVReplicaAzureManagedDiskDetails()
                                .withDiskId("lbjywfcfxzirzzih")
                                .withSeedManagedDiskId("ypusuvjslczwci")
                                .withReplicaDiskType("jsllfryvd")
                                .withDiskEncryptionSetId("x"),
                            new HyperVReplicaAzureManagedDiskDetails()
                                .withDiskId("q")
                                .withSeedManagedDiskId("frgnawbabgfbktyj")
                                .withReplicaDiskType("czlfsy")
                                .withDiskEncryptionSetId("frbzgowo")));
        model = BinaryData.fromObject(model).toObject(HyperVReplicaAzureReplicationDetails.class);
        Assertions.assertEquals("fblhkalehp", model.azureVmDiskDetails().get(0).vhdType());
        Assertions.assertEquals("awugiqjti", model.azureVmDiskDetails().get(0).vhdId());
        Assertions.assertEquals("qgdm", model.azureVmDiskDetails().get(0).diskId());
        Assertions.assertEquals("i", model.azureVmDiskDetails().get(0).vhdName());
        Assertions.assertEquals("teajohiyg", model.azureVmDiskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("n", model.azureVmDiskDetails().get(0).targetDiskLocation());
        Assertions.assertEquals("n", model.azureVmDiskDetails().get(0).targetDiskName());
        Assertions.assertEquals("czykmktpvw", model.azureVmDiskDetails().get(0).lunId());
        Assertions.assertEquals("csehchkhufm", model.azureVmDiskDetails().get(0).diskEncryptionSetId());
        Assertions.assertEquals("umqy", model.azureVmDiskDetails().get(0).customTargetDiskName());
        Assertions.assertEquals("h", model.recoveryAzureVmName());
        Assertions.assertEquals("ukvhd", model.recoveryAzureVMSize());
        Assertions.assertEquals("wyojbfqzdkfnjyi", model.recoveryAzureStorageAccount());
        Assertions.assertEquals("afr", model.recoveryAzureLogStorageAccountId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-23T11:55:55Z"), model.lastReplicatedTime());
        Assertions.assertEquals(6416520261503066829L, model.rpoInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-22T03:22:41Z"), model.lastRpoCalculatedTime());
        Assertions.assertEquals("umzznvalqjrhuz", model.vmId());
        Assertions.assertEquals("xonjtpusl", model.vmProtectionState());
        Assertions.assertEquals("wpvtiotzbpdbol", model.vmProtectionStateDescription());
        Assertions.assertEquals("yfqiuasig", model.initialReplicationDetails().initialReplicationType());
        Assertions
            .assertEquals("wsocnequygdjbo", model.initialReplicationDetails().initialReplicationProgressPercentage());
        Assertions.assertEquals("tqjkqevad", model.vmNics().get(0).nicId());
        Assertions.assertEquals("mwiuawvcm", model.vmNics().get(0).replicaNicId());
        Assertions.assertEquals("kxiidisczskoswo", model.vmNics().get(0).sourceNicArmId());
        Assertions.assertEquals("qazu", model.vmNics().get(0).vMNetworkName());
        Assertions.assertEquals("mxzkr", model.vmNics().get(0).recoveryVMNetworkId());
        Assertions.assertEquals("isbamnppcc", model.vmNics().get(0).selectionType());
        Assertions.assertEquals("u", model.vmNics().get(0).recoveryNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.vmNics().get(0).enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("bezaxyfukzxuiz", model.vmNics().get(0).tfoVMNetworkId());
        Assertions.assertEquals("hnepkpeti", model.vmNics().get(0).tfoNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.vmNics().get(0).enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("iubxdukec", model.vmNics().get(0).recoveryNicName());
        Assertions.assertEquals("dazvdhctm", model.vmNics().get(0).recoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.vmNics().get(0).reuseExistingNic());
        Assertions.assertEquals("zudblnsntrpcaq", model.vmNics().get(0).tfoRecoveryNicName());
        Assertions.assertEquals("ofkbtf", model.vmNics().get(0).tfoRecoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.vmNics().get(0).tfoReuseExistingNic());
        Assertions.assertEquals("bnldpvcbh", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("vgxiaodetvo", model.selectedRecoveryAzureNetworkId());
        Assertions.assertEquals("xdxuwsaifmc", model.selectedSourceNicId());
        Assertions.assertEquals("osbz", model.encryption());
        Assertions.assertEquals("gcv", model.oSDetails().osType());
        Assertions.assertEquals("cknjolgj", model.oSDetails().productType());
        Assertions.assertEquals("xpvelszerqzevxo", model.oSDetails().osEdition());
        Assertions.assertEquals("intxwa", model.oSDetails().oSVersion());
        Assertions.assertEquals("glzoblqwa", model.oSDetails().oSMajorVersion());
        Assertions.assertEquals("r", model.oSDetails().oSMinorVersion());
        Assertions.assertEquals(689377873, model.sourceVmRamSizeInMB());
        Assertions.assertEquals(475916651, model.sourceVmCpuCount());
        Assertions.assertEquals("yqbhd", model.enableRdpOnTargetOption());
        Assertions.assertEquals("fjrqpjiyr", model.recoveryAzureResourceGroupId());
        Assertions.assertEquals("crgaxwmzwdf", model.recoveryAvailabilitySetId());
        Assertions.assertEquals("nrzorpd", model.targetAvailabilityZone());
        Assertions.assertEquals("bqc", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("jfgxxsaetg", model.useManagedDisks());
        Assertions.assertEquals("gvpyigdaqqilzdc", model.licenseType());
        Assertions.assertEquals("wjoe", model.sqlServerLicenseType());
        Assertions.assertEquals("caifpaurww", model.targetVmTags().get("ilfjqqacdmk"));
        Assertions.assertEquals("mfejdoqeykglty", model.seedManagedDiskTags().get("xhqf"));
        Assertions.assertEquals("ayejsxtlgflwfgz", model.targetManagedDiskTags().get("iucijjcea"));
        Assertions.assertEquals("jjj", model.targetNicTags().get("tvamcaszknx"));
        Assertions.assertEquals("xetyvku", model.protectedManagedDisks().get(0).diskId());
        Assertions.assertEquals("ignohi", model.protectedManagedDisks().get(0).seedManagedDiskId());
        Assertions.assertEquals("gqogjwpindedva", model.protectedManagedDisks().get(0).replicaDiskType());
        Assertions.assertEquals("xbhmed", model.protectedManagedDisks().get(0).diskEncryptionSetId());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
