// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AzureVmDiskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.DiskAccountType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaAzureManagedDiskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaAzureReplicationDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InitialReplicationDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IpConfigDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.LinuxLicenseType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.OSDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.OSUpgradeSupportedVersions;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SecurityConfiguration;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SecurityProfileProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.SecurityType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMNicDetails;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class HyperVReplicaAzureReplicationDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVReplicaAzureReplicationDetails model = BinaryData.fromString(
            "{\"instanceType\":\"HyperVReplicaAzure\",\"azureVmDiskDetails\":[{\"vhdType\":\"agpokddxe\",\"vhdId\":\"h\",\"diskId\":\"guavtptb\",\"vhdName\":\"wkqyns\",\"maxSizeMB\":\"bvoffb\",\"targetDiskLocation\":\"w\",\"targetDiskName\":\"xaexqokmyrljial\",\"lunId\":\"nobrqlpb\",\"diskEncryptionSetId\":\"trpzuyudivbxnh\",\"customTargetDiskName\":\"eaeonqelwgdh\"},{\"vhdType\":\"uzytz\",\"vhdId\":\"ogatmoljiy\",\"diskId\":\"pinm\",\"vhdName\":\"fkneerzztrkn\",\"maxSizeMB\":\"ulugdybnhrxlelfj\",\"targetDiskLocation\":\"eizcpih\",\"targetDiskName\":\"miw\",\"lunId\":\"kpty\",\"diskEncryptionSetId\":\"ydbjzcqymlcf\",\"customTargetDiskName\":\"hmhsurlgwqkpm\"},{\"vhdType\":\"pstauol\",\"vhdId\":\"iubmom\",\"diskId\":\"vvjhvvlrlohewjj\",\"vhdName\":\"jnkdflqion\",\"maxSizeMB\":\"aeqkzfzqxjoshoh\",\"targetDiskLocation\":\"tryegpkh\",\"targetDiskName\":\"mexznlwkb\",\"lunId\":\"kxkhupzerufgj\",\"diskEncryptionSetId\":\"cdr\",\"customTargetDiskName\":\"fcemftzgyyky\"}],\"recoveryAzureVmName\":\"ugekdfqn\",\"recoveryAzureVMSize\":\"twd\",\"recoveryAzureStorageAccount\":\"rczfjjnnuxxr\",\"recoveryAzureLogStorageAccountId\":\"mhmnulwemp\",\"lastReplicatedTime\":\"2021-08-17T16:05:42Z\",\"rpoInSeconds\":5454538624815551746,\"lastRpoCalculatedTime\":\"2021-09-15T22:11:03Z\",\"vmId\":\"rsulwzp\",\"vmProtectionState\":\"usnaw\",\"vmProtectionStateDescription\":\"hgz\",\"initialReplicationDetails\":{\"initialReplicationType\":\"riyrgkoekvz\",\"initialReplicationProgressPercentage\":\"xyxhighctxbxmo\"},\"vmNics\":[{\"nicId\":\"ydeyk\",\"replicaNicId\":\"kiczdfrj\",\"sourceNicArmId\":\"zikgqabooh\",\"vMNetworkName\":\"msgycqs\",\"recoveryVMNetworkId\":\"mdvewuyqaeohpjh\",\"ipConfigs\":[{\"name\":\"bvhhdaurgh\",\"isPrimary\":false,\"subnetName\":\"exbkhx\",\"staticIPAddress\":\"joezlqxrkdknkobe\",\"ipAddressType\":\"mbozom\",\"isSeletedForFailover\":true,\"recoverySubnetName\":\"icbigwcdgzse\",\"recoveryStaticIPAddress\":\"uxk\",\"recoveryIPAddressType\":\"ai\",\"recoveryPublicIPAddressId\":\"abmdlqj\",\"recoveryLBBackendAddressPoolIds\":[\"pfixlhupmo\"],\"tfoSubnetName\":\"hzbdnpxpkcd\",\"tfoStaticIPAddress\":\"eyxel\",\"tfoPublicIPAddressId\":\"cghf\",\"tfoLBBackendAddressPoolIds\":[\"fss\",\"yghsf\",\"rkbhammgmqfm\"]},{\"name\":\"gvqcpdwj\",\"isPrimary\":true,\"subnetName\":\"weyslandkdcdjh\",\"staticIPAddress\":\"hghcgawnrrnqu\",\"ipAddressType\":\"sotirei\",\"isSeletedForFailover\":true,\"recoverySubnetName\":\"bfsx\",\"recoveryStaticIPAddress\":\"cyil\",\"recoveryIPAddressType\":\"zmmx\",\"recoveryPublicIPAddressId\":\"zlquzexo\",\"recoveryLBBackendAddressPoolIds\":[\"ebjvb\",\"inzabwmvoglj\"],\"tfoSubnetName\":\"lpgidn\",\"tfoStaticIPAddress\":\"ehaqidoyzltgio\",\"tfoPublicIPAddressId\":\"oqpe\",\"tfoLBBackendAddressPoolIds\":[\"eapfse\",\"gdtpe\",\"nacyheqwb\"]},{\"name\":\"qncjubkhjozfymcw\",\"isPrimary\":true,\"subnetName\":\"yvqyvliqiips\",\"staticIPAddress\":\"bsvs\",\"ipAddressType\":\"ieswhddzydisn\",\"isSeletedForFailover\":true,\"recoverySubnetName\":\"wyj\",\"recoveryStaticIPAddress\":\"ldpxott\",\"recoveryIPAddressType\":\"i\",\"recoveryPublicIPAddressId\":\"cqibzj\",\"recoveryLBBackendAddressPoolIds\":[\"ee\",\"iphryvcjwqwo\",\"sratjhdhzyb\"],\"tfoSubnetName\":\"ijh\",\"tfoStaticIPAddress\":\"zgdkkagvwu\",\"tfoPublicIPAddressId\":\"susmmorfmzhwi\",\"tfoLBBackendAddressPoolIds\":[\"hnijmriprlkdneyt\",\"lrcxivcbkut\"]},{\"name\":\"mltwjfluxynbpvzl\",\"isPrimary\":false,\"subnetName\":\"uyq\",\"staticIPAddress\":\"ckhmocgjshgouarh\",\"ipAddressType\":\"ixq\",\"isSeletedForFailover\":false,\"recoverySubnetName\":\"jkyb\",\"recoveryStaticIPAddress\":\"rcl\",\"recoveryIPAddressType\":\"tzqnrbctbhpjh\",\"recoveryPublicIPAddressId\":\"cvrdnyeitaneqady\",\"recoveryLBBackendAddressPoolIds\":[\"ahwriuomzczfk\",\"ceevsa\",\"xwspcaxikhfjq\",\"bglcxkxgzzromvy\"],\"tfoSubnetName\":\"sem\",\"tfoStaticIPAddress\":\"esrfsvpinkzpatq\",\"tfoPublicIPAddressId\":\"iswxspv\",\"tfoLBBackendAddressPoolIds\":[\"jazbbgspftesu\",\"zpvpvdyly\",\"covqseusrfjbdxzf\"]}],\"selectionType\":\"xm\",\"recoveryNetworkSecurityGroupId\":\"muoswkjmdih\",\"enableAcceleratedNetworkingOnRecovery\":true,\"tfoVMNetworkId\":\"yzlwhbwzjnufzrf\",\"tfoNetworkSecurityGroupId\":\"dq\",\"enableAcceleratedNetworkingOnTfo\":false,\"recoveryNicName\":\"zrtftedzuubjt\",\"recoveryNicResourceGroupName\":\"jsxmtyjjvavdpw\",\"reuseExistingNic\":false,\"tfoRecoveryNicName\":\"d\",\"tfoRecoveryNicResourceGroupName\":\"titsf\",\"tfoReuseExistingNic\":false,\"targetNicName\":\"anmhkscauwazcgw\"},{\"nicId\":\"riwgybjp\",\"replicaNicId\":\"ok\",\"sourceNicArmId\":\"vgllixdgby\",\"vMNetworkName\":\"wewqkj\",\"recoveryVMNetworkId\":\"prwpxsoohu\",\"ipConfigs\":[{\"name\":\"skl\",\"isPrimary\":false,\"subnetName\":\"ugggzlfbgrdcgu\",\"staticIPAddress\":\"rtmdylperpil\",\"ipAddressType\":\"jzgc\",\"isSeletedForFailover\":true,\"recoverySubnetName\":\"fpfbodetres\",\"recoveryStaticIPAddress\":\"vtshuvf\",\"recoveryIPAddressType\":\"ai\",\"recoveryPublicIPAddressId\":\"uqk\",\"recoveryLBBackendAddressPoolIds\":[\"gjypanhxmpdxxze\",\"wwzjwotnxlkfhglh\",\"foxqwecrsn\",\"pcs\"],\"tfoSubnetName\":\"qxovppqibukk\",\"tfoStaticIPAddress\":\"zrlrmlccmetjs\",\"tfoPublicIPAddressId\":\"ivfqbqnasdsy\",\"tfoLBBackendAddressPoolIds\":[\"sieuscpl\",\"yvdgxlyzk\",\"itdshezsvkolru\",\"jovmozsaye\"]},{\"name\":\"azwzlpzbtzuykyki\",\"isPrimary\":false,\"subnetName\":\"yepfn\",\"staticIPAddress\":\"mbezacfpztg\",\"ipAddressType\":\"wyqejgaao\",\"isSeletedForFailover\":true,\"recoverySubnetName\":\"kppgkqzkcyzm\",\"recoveryStaticIPAddress\":\"ngdyfcixrhlcq\",\"recoveryIPAddressType\":\"oejgoiutgwrmkah\",\"recoveryPublicIPAddressId\":\"hazyntacihnco\",\"recoveryLBBackendAddressPoolIds\":[\"pnmliq\",\"v\",\"bhikeaqgr\"],\"tfoSubnetName\":\"pomxpu\",\"tfoStaticIPAddress\":\"tsdfjyieso\",\"tfoPublicIPAddressId\":\"iqbuou\",\"tfoLBBackendAddressPoolIds\":[\"yzgleofjs\"]}],\"selectionType\":\"bwwzvdajf\",\"recoveryNetworkSecurityGroupId\":\"n\",\"enableAcceleratedNetworkingOnRecovery\":true,\"tfoVMNetworkId\":\"ciqgjjrlhiqlwixv\",\"tfoNetworkSecurityGroupId\":\"ougu\",\"enableAcceleratedNetworkingOnTfo\":false,\"recoveryNicName\":\"opgjttba\",\"recoveryNicResourceGroupName\":\"alapdlndbe\",\"reuseExistingNic\":true,\"tfoRecoveryNicName\":\"ixv\",\"tfoRecoveryNicResourceGroupName\":\"wy\",\"tfoReuseExistingNic\":false,\"targetNicName\":\"fqvz\"}],\"selectedRecoveryAzureNetworkId\":\"msp\",\"selectedSourceNicId\":\"zfe\",\"encryption\":\"jljmphfkyezol\",\"oSDetails\":{\"osType\":\"mi\",\"productType\":\"ydoccnxshanzb\",\"osEdition\":\"adh\",\"oSVersion\":\"tecaa\",\"oSMajorVersion\":\"dohzniucbdaombwi\",\"oSMinorVersion\":\"jdllwktle\",\"userSelectedOSName\":\"wavvqxuajgcqwuly\"},\"sourceVmRamSizeInMB\":562316193,\"sourceVmCpuCount\":775679047,\"enableRdpOnTargetOption\":\"druwsikx\",\"recoveryAzureResourceGroupId\":\"clhuulriqbyokv\",\"recoveryAvailabilitySetId\":\"bzsxebrslttfy\",\"targetAvailabilityZone\":\"djws\",\"targetProximityPlacementGroupId\":\"ardnagttpufpbpgn\",\"useManagedDisks\":\"olhujbfwxiplkyso\",\"licenseType\":\"yjprxslw\",\"sqlServerLicenseType\":\"mcvht\",\"linuxLicenseType\":\"NoLicenseType\",\"lastRecoveryPointReceived\":\"2021-02-20T03:44:55Z\",\"targetVmTags\":{\"otjecohmxvvl\":\"huwzbxpcqzgi\"},\"seedManagedDiskTags\":{\"bxwie\":\"ka\",\"derltfokyksyim\":\"xuy\",\"i\":\"ccgrvkcxzznn\"},\"targetManagedDiskTags\":{\"rjmwvvbtuqkxxi\":\"sejegprkjgu\",\"ekotjgxi\":\"wgxql\",\"by\":\"qfkyfhiwvjaqu\"},\"targetNicTags\":{\"umexmj\":\"skpajbmg\"},\"protectedManagedDisks\":[{\"diskId\":\"ccwkqmtx\",\"seedManagedDiskId\":\"eqi\",\"replicaDiskType\":\"rpilgftrqrejdaah\",\"diskEncryptionSetId\":\"imldahlfxlmu\",\"targetDiskAccountType\":\"PremiumV2_LRS\",\"sectorSizeInBytes\":621209356},{\"diskId\":\"jn\",\"seedManagedDiskId\":\"n\",\"replicaDiskType\":\"kiioshj\",\"diskEncryptionSetId\":\"zetybn\",\"targetDiskAccountType\":\"Standard_LRS\",\"sectorSizeInBytes\":749166562},{\"diskId\":\"gctjch\",\"seedManagedDiskId\":\"vmywjzebecuvlb\",\"replicaDiskType\":\"vwcljkx\",\"diskEncryptionSetId\":\"lrwoxzgwpsyxj\",\"targetDiskAccountType\":\"UltraSSD_LRS\",\"sectorSizeInBytes\":1506225108}],\"allAvailableOSUpgradeConfigurations\":[{\"supportedSourceOsVersion\":\"bker\",\"supportedTargetOsVersions\":[\"kgawqwjxil\",\"fkcefeygz\"]},{\"supportedSourceOsVersion\":\"jo\",\"supportedTargetOsVersions\":[\"mnaybdjnxumentq\"]},{\"supportedSourceOsVersion\":\"tw\",\"supportedTargetOsVersions\":[\"xym\",\"lwivqt\",\"wlhlsycoybajasq\",\"bfajcywhjqwmchq\"]},{\"supportedSourceOsVersion\":\"tfxcpupuk\",\"supportedTargetOsVersions\":[\"j\",\"pwdlvwti\",\"smosaonhqnam\",\"pultas\"]}],\"targetVmSecurityProfile\":{\"targetVmSecurityType\":\"None\",\"targetVmSecureBoot\":\"Disabled\",\"targetVmTpm\":\"Disabled\",\"targetVmMonitoring\":\"Enabled\",\"targetVmConfidentialEncryption\":\"Disabled\"}}")
            .toObject(HyperVReplicaAzureReplicationDetails.class);
        Assertions.assertEquals("agpokddxe", model.azureVmDiskDetails().get(0).vhdType());
        Assertions.assertEquals("h", model.azureVmDiskDetails().get(0).vhdId());
        Assertions.assertEquals("guavtptb", model.azureVmDiskDetails().get(0).diskId());
        Assertions.assertEquals("wkqyns", model.azureVmDiskDetails().get(0).vhdName());
        Assertions.assertEquals("bvoffb", model.azureVmDiskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("w", model.azureVmDiskDetails().get(0).targetDiskLocation());
        Assertions.assertEquals("xaexqokmyrljial", model.azureVmDiskDetails().get(0).targetDiskName());
        Assertions.assertEquals("nobrqlpb", model.azureVmDiskDetails().get(0).lunId());
        Assertions.assertEquals("trpzuyudivbxnh", model.azureVmDiskDetails().get(0).diskEncryptionSetId());
        Assertions.assertEquals("eaeonqelwgdh", model.azureVmDiskDetails().get(0).customTargetDiskName());
        Assertions.assertEquals("ugekdfqn", model.recoveryAzureVmName());
        Assertions.assertEquals("twd", model.recoveryAzureVMSize());
        Assertions.assertEquals("rczfjjnnuxxr", model.recoveryAzureStorageAccount());
        Assertions.assertEquals("mhmnulwemp", model.recoveryAzureLogStorageAccountId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T16:05:42Z"), model.lastReplicatedTime());
        Assertions.assertEquals(5454538624815551746L, model.rpoInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-15T22:11:03Z"), model.lastRpoCalculatedTime());
        Assertions.assertEquals("rsulwzp", model.vmId());
        Assertions.assertEquals("usnaw", model.vmProtectionState());
        Assertions.assertEquals("hgz", model.vmProtectionStateDescription());
        Assertions.assertEquals("riyrgkoekvz", model.initialReplicationDetails().initialReplicationType());
        Assertions.assertEquals("xyxhighctxbxmo",
            model.initialReplicationDetails().initialReplicationProgressPercentage());
        Assertions.assertEquals("ydeyk", model.vmNics().get(0).nicId());
        Assertions.assertEquals("kiczdfrj", model.vmNics().get(0).replicaNicId());
        Assertions.assertEquals("zikgqabooh", model.vmNics().get(0).sourceNicArmId());
        Assertions.assertEquals("msgycqs", model.vmNics().get(0).vMNetworkName());
        Assertions.assertEquals("mdvewuyqaeohpjh", model.vmNics().get(0).recoveryVMNetworkId());
        Assertions.assertEquals("bvhhdaurgh", model.vmNics().get(0).ipConfigs().get(0).name());
        Assertions.assertFalse(model.vmNics().get(0).ipConfigs().get(0).isPrimary());
        Assertions.assertEquals("exbkhx", model.vmNics().get(0).ipConfigs().get(0).subnetName());
        Assertions.assertEquals("joezlqxrkdknkobe", model.vmNics().get(0).ipConfigs().get(0).staticIpAddress());
        Assertions.assertEquals("mbozom", model.vmNics().get(0).ipConfigs().get(0).ipAddressType());
        Assertions.assertTrue(model.vmNics().get(0).ipConfigs().get(0).isSeletedForFailover());
        Assertions.assertEquals("icbigwcdgzse", model.vmNics().get(0).ipConfigs().get(0).recoverySubnetName());
        Assertions.assertEquals("uxk", model.vmNics().get(0).ipConfigs().get(0).recoveryStaticIpAddress());
        Assertions.assertEquals("ai", model.vmNics().get(0).ipConfigs().get(0).recoveryIpAddressType());
        Assertions.assertEquals("abmdlqj", model.vmNics().get(0).ipConfigs().get(0).recoveryPublicIpAddressId());
        Assertions.assertEquals("pfixlhupmo",
            model.vmNics().get(0).ipConfigs().get(0).recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("hzbdnpxpkcd", model.vmNics().get(0).ipConfigs().get(0).tfoSubnetName());
        Assertions.assertEquals("eyxel", model.vmNics().get(0).ipConfigs().get(0).tfoStaticIpAddress());
        Assertions.assertEquals("cghf", model.vmNics().get(0).ipConfigs().get(0).tfoPublicIpAddressId());
        Assertions.assertEquals("fss", model.vmNics().get(0).ipConfigs().get(0).tfoLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("xm", model.vmNics().get(0).selectionType());
        Assertions.assertEquals("muoswkjmdih", model.vmNics().get(0).recoveryNetworkSecurityGroupId());
        Assertions.assertTrue(model.vmNics().get(0).enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("yzlwhbwzjnufzrf", model.vmNics().get(0).tfoVMNetworkId());
        Assertions.assertEquals("dq", model.vmNics().get(0).tfoNetworkSecurityGroupId());
        Assertions.assertFalse(model.vmNics().get(0).enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("zrtftedzuubjt", model.vmNics().get(0).recoveryNicName());
        Assertions.assertEquals("jsxmtyjjvavdpw", model.vmNics().get(0).recoveryNicResourceGroupName());
        Assertions.assertFalse(model.vmNics().get(0).reuseExistingNic());
        Assertions.assertEquals("d", model.vmNics().get(0).tfoRecoveryNicName());
        Assertions.assertEquals("titsf", model.vmNics().get(0).tfoRecoveryNicResourceGroupName());
        Assertions.assertFalse(model.vmNics().get(0).tfoReuseExistingNic());
        Assertions.assertEquals("anmhkscauwazcgw", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("msp", model.selectedRecoveryAzureNetworkId());
        Assertions.assertEquals("zfe", model.selectedSourceNicId());
        Assertions.assertEquals("jljmphfkyezol", model.encryption());
        Assertions.assertEquals("mi", model.oSDetails().osType());
        Assertions.assertEquals("ydoccnxshanzb", model.oSDetails().productType());
        Assertions.assertEquals("adh", model.oSDetails().osEdition());
        Assertions.assertEquals("tecaa", model.oSDetails().oSVersion());
        Assertions.assertEquals("dohzniucbdaombwi", model.oSDetails().oSMajorVersion());
        Assertions.assertEquals("jdllwktle", model.oSDetails().oSMinorVersion());
        Assertions.assertEquals("wavvqxuajgcqwuly", model.oSDetails().userSelectedOSName());
        Assertions.assertEquals(562316193, model.sourceVmRamSizeInMB());
        Assertions.assertEquals(775679047, model.sourceVmCpuCount());
        Assertions.assertEquals("druwsikx", model.enableRdpOnTargetOption());
        Assertions.assertEquals("clhuulriqbyokv", model.recoveryAzureResourceGroupId());
        Assertions.assertEquals("bzsxebrslttfy", model.recoveryAvailabilitySetId());
        Assertions.assertEquals("djws", model.targetAvailabilityZone());
        Assertions.assertEquals("ardnagttpufpbpgn", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("olhujbfwxiplkyso", model.useManagedDisks());
        Assertions.assertEquals("yjprxslw", model.licenseType());
        Assertions.assertEquals("mcvht", model.sqlServerLicenseType());
        Assertions.assertEquals(LinuxLicenseType.NO_LICENSE_TYPE, model.linuxLicenseType());
        Assertions.assertEquals("huwzbxpcqzgi", model.targetVmTags().get("otjecohmxvvl"));
        Assertions.assertEquals("ka", model.seedManagedDiskTags().get("bxwie"));
        Assertions.assertEquals("sejegprkjgu", model.targetManagedDiskTags().get("rjmwvvbtuqkxxi"));
        Assertions.assertEquals("skpajbmg", model.targetNicTags().get("umexmj"));
        Assertions.assertEquals("ccwkqmtx", model.protectedManagedDisks().get(0).diskId());
        Assertions.assertEquals("eqi", model.protectedManagedDisks().get(0).seedManagedDiskId());
        Assertions.assertEquals("rpilgftrqrejdaah", model.protectedManagedDisks().get(0).replicaDiskType());
        Assertions.assertEquals("imldahlfxlmu", model.protectedManagedDisks().get(0).diskEncryptionSetId());
        Assertions.assertEquals(DiskAccountType.PREMIUM_V2_LRS,
            model.protectedManagedDisks().get(0).targetDiskAccountType());
        Assertions.assertEquals(621209356, model.protectedManagedDisks().get(0).sectorSizeInBytes());
        Assertions.assertEquals(SecurityType.NONE, model.targetVmSecurityProfile().targetVmSecurityType());
        Assertions.assertEquals(SecurityConfiguration.DISABLED, model.targetVmSecurityProfile().targetVmSecureBoot());
        Assertions.assertEquals(SecurityConfiguration.DISABLED, model.targetVmSecurityProfile().targetVmTpm());
        Assertions.assertEquals(SecurityConfiguration.ENABLED, model.targetVmSecurityProfile().targetVmMonitoring());
        Assertions.assertEquals(SecurityConfiguration.DISABLED,
            model.targetVmSecurityProfile().targetVmConfidentialEncryption());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVReplicaAzureReplicationDetails model
            = new HyperVReplicaAzureReplicationDetails()
                .withAzureVmDiskDetails(Arrays.asList(
                    new AzureVmDiskDetails().withVhdType("agpokddxe")
                        .withVhdId("h")
                        .withDiskId("guavtptb")
                        .withVhdName("wkqyns")
                        .withMaxSizeMB("bvoffb")
                        .withTargetDiskLocation("w")
                        .withTargetDiskName("xaexqokmyrljial")
                        .withLunId("nobrqlpb")
                        .withDiskEncryptionSetId("trpzuyudivbxnh")
                        .withCustomTargetDiskName("eaeonqelwgdh"),
                    new AzureVmDiskDetails().withVhdType("uzytz")
                        .withVhdId("ogatmoljiy")
                        .withDiskId("pinm")
                        .withVhdName("fkneerzztrkn")
                        .withMaxSizeMB("ulugdybnhrxlelfj")
                        .withTargetDiskLocation("eizcpih")
                        .withTargetDiskName("miw")
                        .withLunId("kpty")
                        .withDiskEncryptionSetId("ydbjzcqymlcf")
                        .withCustomTargetDiskName("hmhsurlgwqkpm"),
                    new AzureVmDiskDetails().withVhdType("pstauol")
                        .withVhdId("iubmom")
                        .withDiskId("vvjhvvlrlohewjj")
                        .withVhdName("jnkdflqion")
                        .withMaxSizeMB("aeqkzfzqxjoshoh")
                        .withTargetDiskLocation("tryegpkh")
                        .withTargetDiskName("mexznlwkb")
                        .withLunId("kxkhupzerufgj")
                        .withDiskEncryptionSetId("cdr")
                        .withCustomTargetDiskName("fcemftzgyyky")))
                .withRecoveryAzureVmName("ugekdfqn")
                .withRecoveryAzureVMSize("twd")
                .withRecoveryAzureStorageAccount("rczfjjnnuxxr")
                .withRecoveryAzureLogStorageAccountId("mhmnulwemp")
                .withLastReplicatedTime(OffsetDateTime.parse("2021-08-17T16:05:42Z"))
                .withRpoInSeconds(5454538624815551746L)
                .withLastRpoCalculatedTime(OffsetDateTime.parse("2021-09-15T22:11:03Z"))
                .withVmId("rsulwzp")
                .withVmProtectionState("usnaw")
                .withVmProtectionStateDescription("hgz")
                .withInitialReplicationDetails(new InitialReplicationDetails().withInitialReplicationType("riyrgkoekvz")
                    .withInitialReplicationProgressPercentage("xyxhighctxbxmo"))
                .withVmNics(
                    Arrays
                        .asList(
                            new VMNicDetails().withNicId("ydeyk")
                                .withReplicaNicId("kiczdfrj")
                                .withSourceNicArmId("zikgqabooh")
                                .withVMNetworkName("msgycqs")
                                .withRecoveryVMNetworkId("mdvewuyqaeohpjh")
                                .withIpConfigs(
                                    Arrays.asList(new IpConfigDetails().withName("bvhhdaurgh")
                                        .withIsPrimary(false)
                                        .withSubnetName("exbkhx")
                                        .withStaticIpAddress("joezlqxrkdknkobe")
                                        .withIpAddressType("mbozom")
                                        .withIsSeletedForFailover(true)
                                        .withRecoverySubnetName("icbigwcdgzse")
                                        .withRecoveryStaticIpAddress("uxk")
                                        .withRecoveryIpAddressType("ai")
                                        .withRecoveryPublicIpAddressId("abmdlqj")
                                        .withRecoveryLBBackendAddressPoolIds(Arrays.asList("pfixlhupmo"))
                                        .withTfoSubnetName("hzbdnpxpkcd")
                                        .withTfoStaticIpAddress("eyxel")
                                        .withTfoPublicIpAddressId("cghf")
                                        .withTfoLBBackendAddressPoolIds(Arrays.asList("fss", "yghsf", "rkbhammgmqfm")),
                                        new IpConfigDetails().withName("gvqcpdwj")
                                            .withIsPrimary(true)
                                            .withSubnetName("weyslandkdcdjh")
                                            .withStaticIpAddress("hghcgawnrrnqu")
                                            .withIpAddressType("sotirei")
                                            .withIsSeletedForFailover(true)
                                            .withRecoverySubnetName("bfsx")
                                            .withRecoveryStaticIpAddress("cyil")
                                            .withRecoveryIpAddressType("zmmx")
                                            .withRecoveryPublicIpAddressId("zlquzexo")
                                            .withRecoveryLBBackendAddressPoolIds(Arrays.asList("ebjvb", "inzabwmvoglj"))
                                            .withTfoSubnetName("lpgidn")
                                            .withTfoStaticIpAddress("ehaqidoyzltgio")
                                            .withTfoPublicIpAddressId("oqpe")
                                            .withTfoLBBackendAddressPoolIds(
                                                Arrays.asList("eapfse", "gdtpe", "nacyheqwb")),
                                        new IpConfigDetails().withName("qncjubkhjozfymcw")
                                            .withIsPrimary(true)
                                            .withSubnetName("yvqyvliqiips")
                                            .withStaticIpAddress("bsvs")
                                            .withIpAddressType("ieswhddzydisn")
                                            .withIsSeletedForFailover(true)
                                            .withRecoverySubnetName("wyj")
                                            .withRecoveryStaticIpAddress("ldpxott")
                                            .withRecoveryIpAddressType("i")
                                            .withRecoveryPublicIpAddressId("cqibzj")
                                            .withRecoveryLBBackendAddressPoolIds(
                                                Arrays.asList("ee", "iphryvcjwqwo", "sratjhdhzyb"))
                                            .withTfoSubnetName("ijh")
                                            .withTfoStaticIpAddress("zgdkkagvwu")
                                            .withTfoPublicIpAddressId("susmmorfmzhwi")
                                            .withTfoLBBackendAddressPoolIds(
                                                Arrays.asList("hnijmriprlkdneyt", "lrcxivcbkut")),
                                        new IpConfigDetails().withName("mltwjfluxynbpvzl")
                                            .withIsPrimary(false)
                                            .withSubnetName("uyq")
                                            .withStaticIpAddress("ckhmocgjshgouarh")
                                            .withIpAddressType("ixq")
                                            .withIsSeletedForFailover(false)
                                            .withRecoverySubnetName("jkyb")
                                            .withRecoveryStaticIpAddress("rcl")
                                            .withRecoveryIpAddressType("tzqnrbctbhpjh")
                                            .withRecoveryPublicIpAddressId("cvrdnyeitaneqady")
                                            .withRecoveryLBBackendAddressPoolIds(Arrays.asList("ahwriuomzczfk",
                                                "ceevsa", "xwspcaxikhfjq", "bglcxkxgzzromvy"))
                                            .withTfoSubnetName("sem")
                                            .withTfoStaticIpAddress("esrfsvpinkzpatq")
                                            .withTfoPublicIpAddressId("iswxspv")
                                            .withTfoLBBackendAddressPoolIds(
                                                Arrays.asList("jazbbgspftesu", "zpvpvdyly", "covqseusrfjbdxzf"))))
                                .withSelectionType("xm")
                                .withRecoveryNetworkSecurityGroupId("muoswkjmdih")
                                .withEnableAcceleratedNetworkingOnRecovery(true)
                                .withTfoVMNetworkId("yzlwhbwzjnufzrf")
                                .withTfoNetworkSecurityGroupId("dq")
                                .withEnableAcceleratedNetworkingOnTfo(false)
                                .withRecoveryNicName("zrtftedzuubjt")
                                .withRecoveryNicResourceGroupName("jsxmtyjjvavdpw")
                                .withReuseExistingNic(false)
                                .withTfoRecoveryNicName("d")
                                .withTfoRecoveryNicResourceGroupName("titsf")
                                .withTfoReuseExistingNic(false)
                                .withTargetNicName("anmhkscauwazcgw"),
                            new VMNicDetails().withNicId("riwgybjp")
                                .withReplicaNicId("ok")
                                .withSourceNicArmId("vgllixdgby")
                                .withVMNetworkName("wewqkj")
                                .withRecoveryVMNetworkId("prwpxsoohu")
                                .withIpConfigs(
                                    Arrays
                                        .asList(
                                            new IpConfigDetails().withName("skl")
                                                .withIsPrimary(false)
                                                .withSubnetName("ugggzlfbgrdcgu")
                                                .withStaticIpAddress("rtmdylperpil")
                                                .withIpAddressType("jzgc")
                                                .withIsSeletedForFailover(true)
                                                .withRecoverySubnetName("fpfbodetres")
                                                .withRecoveryStaticIpAddress("vtshuvf")
                                                .withRecoveryIpAddressType("ai")
                                                .withRecoveryPublicIpAddressId("uqk")
                                                .withRecoveryLBBackendAddressPoolIds(Arrays.asList("gjypanhxmpdxxze",
                                                    "wwzjwotnxlkfhglh", "foxqwecrsn", "pcs"))
                                                .withTfoSubnetName("qxovppqibukk")
                                                .withTfoStaticIpAddress("zrlrmlccmetjs")
                                                .withTfoPublicIpAddressId("ivfqbqnasdsy")
                                                .withTfoLBBackendAddressPoolIds(Arrays.asList("sieuscpl", "yvdgxlyzk",
                                                    "itdshezsvkolru", "jovmozsaye")),
                                            new IpConfigDetails().withName("azwzlpzbtzuykyki")
                                                .withIsPrimary(false)
                                                .withSubnetName("yepfn")
                                                .withStaticIpAddress("mbezacfpztg")
                                                .withIpAddressType("wyqejgaao")
                                                .withIsSeletedForFailover(true)
                                                .withRecoverySubnetName("kppgkqzkcyzm")
                                                .withRecoveryStaticIpAddress("ngdyfcixrhlcq")
                                                .withRecoveryIpAddressType("oejgoiutgwrmkah")
                                                .withRecoveryPublicIpAddressId("hazyntacihnco")
                                                .withRecoveryLBBackendAddressPoolIds(
                                                    Arrays.asList("pnmliq", "v", "bhikeaqgr"))
                                                .withTfoSubnetName("pomxpu")
                                                .withTfoStaticIpAddress("tsdfjyieso")
                                                .withTfoPublicIpAddressId("iqbuou")
                                                .withTfoLBBackendAddressPoolIds(Arrays.asList("yzgleofjs"))))
                                .withSelectionType("bwwzvdajf")
                                .withRecoveryNetworkSecurityGroupId("n")
                                .withEnableAcceleratedNetworkingOnRecovery(true)
                                .withTfoVMNetworkId("ciqgjjrlhiqlwixv")
                                .withTfoNetworkSecurityGroupId("ougu")
                                .withEnableAcceleratedNetworkingOnTfo(false)
                                .withRecoveryNicName("opgjttba")
                                .withRecoveryNicResourceGroupName("alapdlndbe")
                                .withReuseExistingNic(true)
                                .withTfoRecoveryNicName("ixv")
                                .withTfoRecoveryNicResourceGroupName("wy")
                                .withTfoReuseExistingNic(false)
                                .withTargetNicName("fqvz")))
                .withSelectedRecoveryAzureNetworkId("msp")
                .withSelectedSourceNicId("zfe")
                .withEncryption("jljmphfkyezol")
                .withOSDetails(new OSDetails().withOsType("mi")
                    .withProductType("ydoccnxshanzb")
                    .withOsEdition("adh")
                    .withOSVersion("tecaa")
                    .withOSMajorVersion("dohzniucbdaombwi")
                    .withOSMinorVersion("jdllwktle")
                    .withUserSelectedOSName("wavvqxuajgcqwuly"))
                .withSourceVmRamSizeInMB(562316193)
                .withSourceVmCpuCount(775679047)
                .withEnableRdpOnTargetOption("druwsikx")
                .withRecoveryAzureResourceGroupId("clhuulriqbyokv")
                .withRecoveryAvailabilitySetId("bzsxebrslttfy")
                .withTargetAvailabilityZone("djws")
                .withTargetProximityPlacementGroupId("ardnagttpufpbpgn")
                .withUseManagedDisks("olhujbfwxiplkyso")
                .withLicenseType("yjprxslw")
                .withSqlServerLicenseType("mcvht")
                .withLinuxLicenseType(LinuxLicenseType.NO_LICENSE_TYPE)
                .withTargetVmTags(mapOf("otjecohmxvvl", "huwzbxpcqzgi"))
                .withSeedManagedDiskTags(mapOf("bxwie", "ka", "derltfokyksyim", "xuy", "i", "ccgrvkcxzznn"))
                .withTargetManagedDiskTags(
                    mapOf("rjmwvvbtuqkxxi", "sejegprkjgu", "ekotjgxi", "wgxql", "by", "qfkyfhiwvjaqu"))
                .withTargetNicTags(mapOf("umexmj", "skpajbmg"))
                .withProtectedManagedDisks(Arrays.asList(
                    new HyperVReplicaAzureManagedDiskDetails().withDiskId("ccwkqmtx")
                        .withSeedManagedDiskId("eqi")
                        .withReplicaDiskType("rpilgftrqrejdaah")
                        .withDiskEncryptionSetId("imldahlfxlmu")
                        .withTargetDiskAccountType(DiskAccountType.PREMIUM_V2_LRS)
                        .withSectorSizeInBytes(621209356),
                    new HyperVReplicaAzureManagedDiskDetails().withDiskId("jn")
                        .withSeedManagedDiskId("n")
                        .withReplicaDiskType("kiioshj")
                        .withDiskEncryptionSetId("zetybn")
                        .withTargetDiskAccountType(DiskAccountType.STANDARD_LRS)
                        .withSectorSizeInBytes(749166562),
                    new HyperVReplicaAzureManagedDiskDetails().withDiskId("gctjch")
                        .withSeedManagedDiskId("vmywjzebecuvlb")
                        .withReplicaDiskType("vwcljkx")
                        .withDiskEncryptionSetId("lrwoxzgwpsyxj")
                        .withTargetDiskAccountType(DiskAccountType.ULTRA_SSD_LRS)
                        .withSectorSizeInBytes(1506225108)))
                .withAllAvailableOSUpgradeConfigurations(
                    Arrays.asList(new OSUpgradeSupportedVersions(), new OSUpgradeSupportedVersions(),
                        new OSUpgradeSupportedVersions(), new OSUpgradeSupportedVersions()))
                .withTargetVmSecurityProfile(new SecurityProfileProperties().withTargetVmSecurityType(SecurityType.NONE)
                    .withTargetVmSecureBoot(SecurityConfiguration.DISABLED)
                    .withTargetVmTpm(SecurityConfiguration.DISABLED)
                    .withTargetVmMonitoring(SecurityConfiguration.ENABLED)
                    .withTargetVmConfidentialEncryption(SecurityConfiguration.DISABLED));
        model = BinaryData.fromObject(model).toObject(HyperVReplicaAzureReplicationDetails.class);
        Assertions.assertEquals("agpokddxe", model.azureVmDiskDetails().get(0).vhdType());
        Assertions.assertEquals("h", model.azureVmDiskDetails().get(0).vhdId());
        Assertions.assertEquals("guavtptb", model.azureVmDiskDetails().get(0).diskId());
        Assertions.assertEquals("wkqyns", model.azureVmDiskDetails().get(0).vhdName());
        Assertions.assertEquals("bvoffb", model.azureVmDiskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("w", model.azureVmDiskDetails().get(0).targetDiskLocation());
        Assertions.assertEquals("xaexqokmyrljial", model.azureVmDiskDetails().get(0).targetDiskName());
        Assertions.assertEquals("nobrqlpb", model.azureVmDiskDetails().get(0).lunId());
        Assertions.assertEquals("trpzuyudivbxnh", model.azureVmDiskDetails().get(0).diskEncryptionSetId());
        Assertions.assertEquals("eaeonqelwgdh", model.azureVmDiskDetails().get(0).customTargetDiskName());
        Assertions.assertEquals("ugekdfqn", model.recoveryAzureVmName());
        Assertions.assertEquals("twd", model.recoveryAzureVMSize());
        Assertions.assertEquals("rczfjjnnuxxr", model.recoveryAzureStorageAccount());
        Assertions.assertEquals("mhmnulwemp", model.recoveryAzureLogStorageAccountId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T16:05:42Z"), model.lastReplicatedTime());
        Assertions.assertEquals(5454538624815551746L, model.rpoInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-15T22:11:03Z"), model.lastRpoCalculatedTime());
        Assertions.assertEquals("rsulwzp", model.vmId());
        Assertions.assertEquals("usnaw", model.vmProtectionState());
        Assertions.assertEquals("hgz", model.vmProtectionStateDescription());
        Assertions.assertEquals("riyrgkoekvz", model.initialReplicationDetails().initialReplicationType());
        Assertions.assertEquals("xyxhighctxbxmo",
            model.initialReplicationDetails().initialReplicationProgressPercentage());
        Assertions.assertEquals("ydeyk", model.vmNics().get(0).nicId());
        Assertions.assertEquals("kiczdfrj", model.vmNics().get(0).replicaNicId());
        Assertions.assertEquals("zikgqabooh", model.vmNics().get(0).sourceNicArmId());
        Assertions.assertEquals("msgycqs", model.vmNics().get(0).vMNetworkName());
        Assertions.assertEquals("mdvewuyqaeohpjh", model.vmNics().get(0).recoveryVMNetworkId());
        Assertions.assertEquals("bvhhdaurgh", model.vmNics().get(0).ipConfigs().get(0).name());
        Assertions.assertFalse(model.vmNics().get(0).ipConfigs().get(0).isPrimary());
        Assertions.assertEquals("exbkhx", model.vmNics().get(0).ipConfigs().get(0).subnetName());
        Assertions.assertEquals("joezlqxrkdknkobe", model.vmNics().get(0).ipConfigs().get(0).staticIpAddress());
        Assertions.assertEquals("mbozom", model.vmNics().get(0).ipConfigs().get(0).ipAddressType());
        Assertions.assertTrue(model.vmNics().get(0).ipConfigs().get(0).isSeletedForFailover());
        Assertions.assertEquals("icbigwcdgzse", model.vmNics().get(0).ipConfigs().get(0).recoverySubnetName());
        Assertions.assertEquals("uxk", model.vmNics().get(0).ipConfigs().get(0).recoveryStaticIpAddress());
        Assertions.assertEquals("ai", model.vmNics().get(0).ipConfigs().get(0).recoveryIpAddressType());
        Assertions.assertEquals("abmdlqj", model.vmNics().get(0).ipConfigs().get(0).recoveryPublicIpAddressId());
        Assertions.assertEquals("pfixlhupmo",
            model.vmNics().get(0).ipConfigs().get(0).recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("hzbdnpxpkcd", model.vmNics().get(0).ipConfigs().get(0).tfoSubnetName());
        Assertions.assertEquals("eyxel", model.vmNics().get(0).ipConfigs().get(0).tfoStaticIpAddress());
        Assertions.assertEquals("cghf", model.vmNics().get(0).ipConfigs().get(0).tfoPublicIpAddressId());
        Assertions.assertEquals("fss", model.vmNics().get(0).ipConfigs().get(0).tfoLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("xm", model.vmNics().get(0).selectionType());
        Assertions.assertEquals("muoswkjmdih", model.vmNics().get(0).recoveryNetworkSecurityGroupId());
        Assertions.assertTrue(model.vmNics().get(0).enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("yzlwhbwzjnufzrf", model.vmNics().get(0).tfoVMNetworkId());
        Assertions.assertEquals("dq", model.vmNics().get(0).tfoNetworkSecurityGroupId());
        Assertions.assertFalse(model.vmNics().get(0).enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("zrtftedzuubjt", model.vmNics().get(0).recoveryNicName());
        Assertions.assertEquals("jsxmtyjjvavdpw", model.vmNics().get(0).recoveryNicResourceGroupName());
        Assertions.assertFalse(model.vmNics().get(0).reuseExistingNic());
        Assertions.assertEquals("d", model.vmNics().get(0).tfoRecoveryNicName());
        Assertions.assertEquals("titsf", model.vmNics().get(0).tfoRecoveryNicResourceGroupName());
        Assertions.assertFalse(model.vmNics().get(0).tfoReuseExistingNic());
        Assertions.assertEquals("anmhkscauwazcgw", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("msp", model.selectedRecoveryAzureNetworkId());
        Assertions.assertEquals("zfe", model.selectedSourceNicId());
        Assertions.assertEquals("jljmphfkyezol", model.encryption());
        Assertions.assertEquals("mi", model.oSDetails().osType());
        Assertions.assertEquals("ydoccnxshanzb", model.oSDetails().productType());
        Assertions.assertEquals("adh", model.oSDetails().osEdition());
        Assertions.assertEquals("tecaa", model.oSDetails().oSVersion());
        Assertions.assertEquals("dohzniucbdaombwi", model.oSDetails().oSMajorVersion());
        Assertions.assertEquals("jdllwktle", model.oSDetails().oSMinorVersion());
        Assertions.assertEquals("wavvqxuajgcqwuly", model.oSDetails().userSelectedOSName());
        Assertions.assertEquals(562316193, model.sourceVmRamSizeInMB());
        Assertions.assertEquals(775679047, model.sourceVmCpuCount());
        Assertions.assertEquals("druwsikx", model.enableRdpOnTargetOption());
        Assertions.assertEquals("clhuulriqbyokv", model.recoveryAzureResourceGroupId());
        Assertions.assertEquals("bzsxebrslttfy", model.recoveryAvailabilitySetId());
        Assertions.assertEquals("djws", model.targetAvailabilityZone());
        Assertions.assertEquals("ardnagttpufpbpgn", model.targetProximityPlacementGroupId());
        Assertions.assertEquals("olhujbfwxiplkyso", model.useManagedDisks());
        Assertions.assertEquals("yjprxslw", model.licenseType());
        Assertions.assertEquals("mcvht", model.sqlServerLicenseType());
        Assertions.assertEquals(LinuxLicenseType.NO_LICENSE_TYPE, model.linuxLicenseType());
        Assertions.assertEquals("huwzbxpcqzgi", model.targetVmTags().get("otjecohmxvvl"));
        Assertions.assertEquals("ka", model.seedManagedDiskTags().get("bxwie"));
        Assertions.assertEquals("sejegprkjgu", model.targetManagedDiskTags().get("rjmwvvbtuqkxxi"));
        Assertions.assertEquals("skpajbmg", model.targetNicTags().get("umexmj"));
        Assertions.assertEquals("ccwkqmtx", model.protectedManagedDisks().get(0).diskId());
        Assertions.assertEquals("eqi", model.protectedManagedDisks().get(0).seedManagedDiskId());
        Assertions.assertEquals("rpilgftrqrejdaah", model.protectedManagedDisks().get(0).replicaDiskType());
        Assertions.assertEquals("imldahlfxlmu", model.protectedManagedDisks().get(0).diskEncryptionSetId());
        Assertions.assertEquals(DiskAccountType.PREMIUM_V2_LRS,
            model.protectedManagedDisks().get(0).targetDiskAccountType());
        Assertions.assertEquals(621209356, model.protectedManagedDisks().get(0).sectorSizeInBytes());
        Assertions.assertEquals(SecurityType.NONE, model.targetVmSecurityProfile().targetVmSecurityType());
        Assertions.assertEquals(SecurityConfiguration.DISABLED, model.targetVmSecurityProfile().targetVmSecureBoot());
        Assertions.assertEquals(SecurityConfiguration.DISABLED, model.targetVmSecurityProfile().targetVmTpm());
        Assertions.assertEquals(SecurityConfiguration.ENABLED, model.targetVmSecurityProfile().targetVmMonitoring());
        Assertions.assertEquals(SecurityConfiguration.DISABLED,
            model.targetVmSecurityProfile().targetVmConfidentialEncryption());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
