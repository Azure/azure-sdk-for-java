// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.ProtectionContainerInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ProtectionContainerFabricSpecificDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ProtectionContainerProperties;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ProtectionContainerInnerTests {
    @Test
    public void testDeserialize() {
        ProtectionContainerInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"fabricFriendlyName\":\"aaxdbabphlwrq\",\"friendlyName\":\"ktsthsucocmny\",\"fabricType\":\"zt\",\"protectedItemCount\":1372436938,\"pairingStatus\":\"wrqpue\",\"role\":\"kzywbiex\",\"fabricSpecificDetails\":{\"instanceType\":\"yueaxibxujwb\"}},\"location\":\"walm\",\"id\":\"zyoxaepdkzjan\",\"name\":\"ux\",\"type\":\"hdwbavxbniwdjs\"}")
                .toObject(ProtectionContainerInner.class);
        Assertions.assertEquals("aaxdbabphlwrq", model.properties().fabricFriendlyName());
        Assertions.assertEquals("ktsthsucocmny", model.properties().friendlyName());
        Assertions.assertEquals("zt", model.properties().fabricType());
        Assertions.assertEquals(1372436938, model.properties().protectedItemCount());
        Assertions.assertEquals("wrqpue", model.properties().pairingStatus());
        Assertions.assertEquals("kzywbiex", model.properties().role());
        Assertions.assertEquals("walm", model.location());
    }

    @Test
    public void testSerialize() {
        ProtectionContainerInner model =
            new ProtectionContainerInner()
                .withProperties(
                    new ProtectionContainerProperties()
                        .withFabricFriendlyName("aaxdbabphlwrq")
                        .withFriendlyName("ktsthsucocmny")
                        .withFabricType("zt")
                        .withProtectedItemCount(1372436938)
                        .withPairingStatus("wrqpue")
                        .withRole("kzywbiex")
                        .withFabricSpecificDetails(new ProtectionContainerFabricSpecificDetails()))
                .withLocation("walm");
        model = BinaryData.fromObject(model).toObject(ProtectionContainerInner.class);
        Assertions.assertEquals("aaxdbabphlwrq", model.properties().fabricFriendlyName());
        Assertions.assertEquals("ktsthsucocmny", model.properties().friendlyName());
        Assertions.assertEquals("zt", model.properties().fabricType());
        Assertions.assertEquals(1372436938, model.properties().protectedItemCount());
        Assertions.assertEquals("wrqpue", model.properties().pairingStatus());
        Assertions.assertEquals("kzywbiex", model.properties().role());
        Assertions.assertEquals("walm", model.location());
    }
}
