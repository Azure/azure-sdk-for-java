// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.ProtectionContainerInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ProtectionContainerFabricSpecificDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ProtectionContainerProperties;
import org.junit.jupiter.api.Assertions;

public final class ProtectionContainerInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProtectionContainerInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"fabricFriendlyName\":\"tsthsucocm\",\"friendlyName\":\"yazttbtwwrqpue\",\"fabricType\":\"kzywbiex\",\"protectedItemCount\":1206070255,\"pairingStatus\":\"ue\",\"role\":\"ibx\",\"fabricSpecificDetails\":{\"instanceType\":\"bhqwalmuzyoxa\"}},\"location\":\"dkzjancuxrh\",\"id\":\"wbavxbniwdj\",\"name\":\"wz\",\"type\":\"s\"}")
                .toObject(ProtectionContainerInner.class);
        Assertions.assertEquals("tsthsucocm", model.properties().fabricFriendlyName());
        Assertions.assertEquals("yazttbtwwrqpue", model.properties().friendlyName());
        Assertions.assertEquals("kzywbiex", model.properties().fabricType());
        Assertions.assertEquals(1206070255, model.properties().protectedItemCount());
        Assertions.assertEquals("ue", model.properties().pairingStatus());
        Assertions.assertEquals("ibx", model.properties().role());
        Assertions.assertEquals("dkzjancuxrh", model.location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProtectionContainerInner model =
            new ProtectionContainerInner()
                .withProperties(
                    new ProtectionContainerProperties()
                        .withFabricFriendlyName("tsthsucocm")
                        .withFriendlyName("yazttbtwwrqpue")
                        .withFabricType("kzywbiex")
                        .withProtectedItemCount(1206070255)
                        .withPairingStatus("ue")
                        .withRole("ibx")
                        .withFabricSpecificDetails(new ProtectionContainerFabricSpecificDetails()))
                .withLocation("dkzjancuxrh");
        model = BinaryData.fromObject(model).toObject(ProtectionContainerInner.class);
        Assertions.assertEquals("tsthsucocm", model.properties().fabricFriendlyName());
        Assertions.assertEquals("yazttbtwwrqpue", model.properties().friendlyName());
        Assertions.assertEquals("kzywbiex", model.properties().fabricType());
        Assertions.assertEquals(1206070255, model.properties().protectedItemCount());
        Assertions.assertEquals("ue", model.properties().pairingStatus());
        Assertions.assertEquals("ibx", model.properties().role());
        Assertions.assertEquals("dkzjancuxrh", model.location());
    }
}
