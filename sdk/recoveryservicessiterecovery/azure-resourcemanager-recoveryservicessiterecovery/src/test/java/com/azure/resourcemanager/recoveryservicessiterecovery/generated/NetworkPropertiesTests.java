// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.NetworkProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.Subnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class NetworkPropertiesTests {
    @Test
    public void testDeserialize() {
        NetworkProperties model =
            BinaryData
                .fromString(
                    "{\"fabricType\":\"seiphe\",\"subnets\":[{\"name\":\"keyyi\",\"friendlyName\":\"jbdlwtgrhpdjpju\",\"addressList\":[\"xazjpqyegual\",\"b\"]},{\"name\":\"hejjz\",\"friendlyName\":\"dudgwdslfhot\",\"addressList\":[\"ynpwlbj\",\"pgacftadehxnlty\",\"sop\"]}],\"friendlyName\":\"suesnzw\",\"networkType\":\"jbavorxzdm\"}")
                .toObject(NetworkProperties.class);
        Assertions.assertEquals("seiphe", model.fabricType());
        Assertions.assertEquals("keyyi", model.subnets().get(0).name());
        Assertions.assertEquals("jbdlwtgrhpdjpju", model.subnets().get(0).friendlyName());
        Assertions.assertEquals("xazjpqyegual", model.subnets().get(0).addressList().get(0));
        Assertions.assertEquals("suesnzw", model.friendlyName());
        Assertions.assertEquals("jbavorxzdm", model.networkType());
    }

    @Test
    public void testSerialize() {
        NetworkProperties model =
            new NetworkProperties()
                .withFabricType("seiphe")
                .withSubnets(
                    Arrays
                        .asList(
                            new Subnet()
                                .withName("keyyi")
                                .withFriendlyName("jbdlwtgrhpdjpju")
                                .withAddressList(Arrays.asList("xazjpqyegual", "b")),
                            new Subnet()
                                .withName("hejjz")
                                .withFriendlyName("dudgwdslfhot")
                                .withAddressList(Arrays.asList("ynpwlbj", "pgacftadehxnlty", "sop"))))
                .withFriendlyName("suesnzw")
                .withNetworkType("jbavorxzdm");
        model = BinaryData.fromObject(model).toObject(NetworkProperties.class);
        Assertions.assertEquals("seiphe", model.fabricType());
        Assertions.assertEquals("keyyi", model.subnets().get(0).name());
        Assertions.assertEquals("jbdlwtgrhpdjpju", model.subnets().get(0).friendlyName());
        Assertions.assertEquals("xazjpqyegual", model.subnets().get(0).addressList().get(0));
        Assertions.assertEquals("suesnzw", model.friendlyName());
        Assertions.assertEquals("jbavorxzdm", model.networkType());
    }
}
