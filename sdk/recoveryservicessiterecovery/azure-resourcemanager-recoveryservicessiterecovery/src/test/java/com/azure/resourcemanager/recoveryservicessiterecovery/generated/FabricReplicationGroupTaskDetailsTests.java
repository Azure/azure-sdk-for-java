// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FabricReplicationGroupTaskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.JobEntity;
import org.junit.jupiter.api.Assertions;

public final class FabricReplicationGroupTaskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FabricReplicationGroupTaskDetails model = BinaryData.fromString(
            "{\"instanceType\":\"FabricReplicationGroupTaskDetails\",\"skippedReason\":\"ransyby\",\"skippedReasonString\":\"ol\",\"jobTask\":{\"jobId\":\"ghsrleinkfscjfn\",\"jobFriendlyName\":\"wvuagfqwtl\",\"targetObjectId\":\"gvmreuptrklzmi\",\"targetObjectName\":\"jwolxfsvaghmpynw\",\"targetInstanceType\":\"lr\",\"jobScenarioName\":\"gtzjcv\"}}")
            .toObject(FabricReplicationGroupTaskDetails.class);
        Assertions.assertEquals("ghsrleinkfscjfn", model.jobTask().jobId());
        Assertions.assertEquals("wvuagfqwtl", model.jobTask().jobFriendlyName());
        Assertions.assertEquals("gvmreuptrklzmi", model.jobTask().targetObjectId());
        Assertions.assertEquals("jwolxfsvaghmpynw", model.jobTask().targetObjectName());
        Assertions.assertEquals("lr", model.jobTask().targetInstanceType());
        Assertions.assertEquals("gtzjcv", model.jobTask().jobScenarioName());
        Assertions.assertEquals("ransyby", model.skippedReason());
        Assertions.assertEquals("ol", model.skippedReasonString());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FabricReplicationGroupTaskDetails model
            = new FabricReplicationGroupTaskDetails().withJobTask(new JobEntity().withJobId("ghsrleinkfscjfn")
                .withJobFriendlyName("wvuagfqwtl")
                .withTargetObjectId("gvmreuptrklzmi")
                .withTargetObjectName("jwolxfsvaghmpynw")
                .withTargetInstanceType("lr")
                .withJobScenarioName("gtzjcv")).withSkippedReason("ransyby").withSkippedReasonString("ol");
        model = BinaryData.fromObject(model).toObject(FabricReplicationGroupTaskDetails.class);
        Assertions.assertEquals("ghsrleinkfscjfn", model.jobTask().jobId());
        Assertions.assertEquals("wvuagfqwtl", model.jobTask().jobFriendlyName());
        Assertions.assertEquals("gvmreuptrklzmi", model.jobTask().targetObjectId());
        Assertions.assertEquals("jwolxfsvaghmpynw", model.jobTask().targetObjectName());
        Assertions.assertEquals("lr", model.jobTask().targetInstanceType());
        Assertions.assertEquals("gtzjcv", model.jobTask().jobScenarioName());
        Assertions.assertEquals("ransyby", model.skippedReason());
        Assertions.assertEquals("ol", model.skippedReasonString());
    }
}
