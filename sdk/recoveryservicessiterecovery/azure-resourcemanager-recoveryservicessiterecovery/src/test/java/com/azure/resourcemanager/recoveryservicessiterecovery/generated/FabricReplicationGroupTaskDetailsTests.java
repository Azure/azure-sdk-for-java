// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FabricReplicationGroupTaskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.JobEntity;
import org.junit.jupiter.api.Assertions;

public final class FabricReplicationGroupTaskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FabricReplicationGroupTaskDetails model = BinaryData.fromString(
            "{\"instanceType\":\"FabricReplicationGroupTaskDetails\",\"skippedReason\":\"nmfbc\",\"skippedReasonString\":\"qktkrumzuedkyzbf\",\"jobTask\":{\"jobId\":\"vqkxiuxqggvq\",\"jobFriendlyName\":\"hyhlwcjsqg\",\"targetObjectId\":\"hffbxrq\",\"targetObjectName\":\"ijpeuql\",\"targetInstanceType\":\"x\",\"jobScenarioName\":\"ztv\"}}")
            .toObject(FabricReplicationGroupTaskDetails.class);
        Assertions.assertEquals("vqkxiuxqggvq", model.jobTask().jobId());
        Assertions.assertEquals("hyhlwcjsqg", model.jobTask().jobFriendlyName());
        Assertions.assertEquals("hffbxrq", model.jobTask().targetObjectId());
        Assertions.assertEquals("ijpeuql", model.jobTask().targetObjectName());
        Assertions.assertEquals("x", model.jobTask().targetInstanceType());
        Assertions.assertEquals("ztv", model.jobTask().jobScenarioName());
        Assertions.assertEquals("nmfbc", model.skippedReason());
        Assertions.assertEquals("qktkrumzuedkyzbf", model.skippedReasonString());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FabricReplicationGroupTaskDetails model = new FabricReplicationGroupTaskDetails().withJobTask(
            new JobEntity().withJobId("vqkxiuxqggvq").withJobFriendlyName("hyhlwcjsqg").withTargetObjectId("hffbxrq")
                .withTargetObjectName("ijpeuql").withTargetInstanceType("x").withJobScenarioName("ztv"))
            .withSkippedReason("nmfbc").withSkippedReasonString("qktkrumzuedkyzbf");
        model = BinaryData.fromObject(model).toObject(FabricReplicationGroupTaskDetails.class);
        Assertions.assertEquals("vqkxiuxqggvq", model.jobTask().jobId());
        Assertions.assertEquals("hyhlwcjsqg", model.jobTask().jobFriendlyName());
        Assertions.assertEquals("hffbxrq", model.jobTask().targetObjectId());
        Assertions.assertEquals("ijpeuql", model.jobTask().targetObjectName());
        Assertions.assertEquals("x", model.jobTask().targetInstanceType());
        Assertions.assertEquals("ztv", model.jobTask().jobScenarioName());
        Assertions.assertEquals("nmfbc", model.skippedReason());
        Assertions.assertEquals("qktkrumzuedkyzbf", model.skippedReasonString());
    }
}
