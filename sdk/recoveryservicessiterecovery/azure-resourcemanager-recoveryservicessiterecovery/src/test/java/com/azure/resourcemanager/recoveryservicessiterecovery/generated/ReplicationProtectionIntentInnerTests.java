// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.ReplicationProtectionIntentInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationProtectionIntentProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ReplicationProtectionIntentProviderSpecificSettings;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ReplicationProtectionIntentInnerTests {
    @Test
    public void testDeserialize() {
        ReplicationProtectionIntentInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"friendlyName\":\"yasflvgsgzwy\",\"jobId\":\"koih\",\"jobState\":\"smjblmljhlnym\",\"isActive\":true,\"creationTimeUTC\":\"yryuzcb\",\"providerSpecificDetails\":{\"instanceType\":\"ReplicationProtectionIntentProviderSpecificSettings\"}},\"location\":\"vxmvw\",\"id\":\"gtayxonsupeujlz\",\"name\":\"nh\",\"type\":\"vsqltnzoibgsxg\"}")
                .toObject(ReplicationProtectionIntentInner.class);
        Assertions.assertEquals("yasflvgsgzwy", model.properties().friendlyName());
        Assertions.assertEquals("vxmvw", model.location());
    }

    @Test
    public void testSerialize() {
        ReplicationProtectionIntentInner model =
            new ReplicationProtectionIntentInner()
                .withProperties(
                    new ReplicationProtectionIntentProperties()
                        .withFriendlyName("yasflvgsgzwy")
                        .withProviderSpecificDetails(new ReplicationProtectionIntentProviderSpecificSettings()))
                .withLocation("vxmvw");
        model = BinaryData.fromObject(model).toObject(ReplicationProtectionIntentInner.class);
        Assertions.assertEquals("yasflvgsgzwy", model.properties().friendlyName());
        Assertions.assertEquals("vxmvw", model.location());
    }
}
