// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IdentityProviderInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageRcmFabricCreationInput;
import org.junit.jupiter.api.Assertions;

public final class InMageRcmFabricCreationInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageRcmFabricCreationInput model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"InMageRcm\",\"vmwareSiteId\":\"imyc\",\"physicalSiteId\":\"grvkcxzznnuif\",\"sourceAgentIdentity\":{\"tenantId\":\"rsejegprkj\",\"applicationId\":\"uw\",\"objectId\":\"jmwvvbtuqkxxi\",\"audience\":\"wgxql\",\"aadAuthority\":\"ekotjgxi\"}}")
                .toObject(InMageRcmFabricCreationInput.class);
        Assertions.assertEquals("imyc", model.vmwareSiteId());
        Assertions.assertEquals("grvkcxzznnuif", model.physicalSiteId());
        Assertions.assertEquals("rsejegprkj", model.sourceAgentIdentity().tenantId());
        Assertions.assertEquals("uw", model.sourceAgentIdentity().applicationId());
        Assertions.assertEquals("jmwvvbtuqkxxi", model.sourceAgentIdentity().objectId());
        Assertions.assertEquals("wgxql", model.sourceAgentIdentity().audience());
        Assertions.assertEquals("ekotjgxi", model.sourceAgentIdentity().aadAuthority());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageRcmFabricCreationInput model =
            new InMageRcmFabricCreationInput()
                .withVmwareSiteId("imyc")
                .withPhysicalSiteId("grvkcxzznnuif")
                .withSourceAgentIdentity(
                    new IdentityProviderInput()
                        .withTenantId("rsejegprkj")
                        .withApplicationId("uw")
                        .withObjectId("jmwvvbtuqkxxi")
                        .withAudience("wgxql")
                        .withAadAuthority("ekotjgxi"));
        model = BinaryData.fromObject(model).toObject(InMageRcmFabricCreationInput.class);
        Assertions.assertEquals("imyc", model.vmwareSiteId());
        Assertions.assertEquals("grvkcxzznnuif", model.physicalSiteId());
        Assertions.assertEquals("rsejegprkj", model.sourceAgentIdentity().tenantId());
        Assertions.assertEquals("uw", model.sourceAgentIdentity().applicationId());
        Assertions.assertEquals("jmwvvbtuqkxxi", model.sourceAgentIdentity().objectId());
        Assertions.assertEquals("wgxql", model.sourceAgentIdentity().audience());
        Assertions.assertEquals("ekotjgxi", model.sourceAgentIdentity().aadAuthority());
    }
}
