// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IdentityProviderInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageRcmFabricCreationInput;
import org.junit.jupiter.api.Assertions;

public final class InMageRcmFabricCreationInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageRcmFabricCreationInput model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"InMageRcm\",\"vmwareSiteId\":\"aj\",\"physicalSiteId\":\"iygmgs\",\"sourceAgentIdentity\":{\"tenantId\":\"vmdmzenlr\",\"applicationId\":\"tgfczljdncidtjva\",\"objectId\":\"yyznmrgcdogcvuc\",\"audience\":\"ytoxuwhttnzq\",\"aadAuthority\":\"aqm\"}}")
                .toObject(InMageRcmFabricCreationInput.class);
        Assertions.assertEquals("aj", model.vmwareSiteId());
        Assertions.assertEquals("iygmgs", model.physicalSiteId());
        Assertions.assertEquals("vmdmzenlr", model.sourceAgentIdentity().tenantId());
        Assertions.assertEquals("tgfczljdncidtjva", model.sourceAgentIdentity().applicationId());
        Assertions.assertEquals("yyznmrgcdogcvuc", model.sourceAgentIdentity().objectId());
        Assertions.assertEquals("ytoxuwhttnzq", model.sourceAgentIdentity().audience());
        Assertions.assertEquals("aqm", model.sourceAgentIdentity().aadAuthority());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageRcmFabricCreationInput model =
            new InMageRcmFabricCreationInput()
                .withVmwareSiteId("aj")
                .withPhysicalSiteId("iygmgs")
                .withSourceAgentIdentity(
                    new IdentityProviderInput()
                        .withTenantId("vmdmzenlr")
                        .withApplicationId("tgfczljdncidtjva")
                        .withObjectId("yyznmrgcdogcvuc")
                        .withAudience("ytoxuwhttnzq")
                        .withAadAuthority("aqm"));
        model = BinaryData.fromObject(model).toObject(InMageRcmFabricCreationInput.class);
        Assertions.assertEquals("aj", model.vmwareSiteId());
        Assertions.assertEquals("iygmgs", model.physicalSiteId());
        Assertions.assertEquals("vmdmzenlr", model.sourceAgentIdentity().tenantId());
        Assertions.assertEquals("tgfczljdncidtjva", model.sourceAgentIdentity().applicationId());
        Assertions.assertEquals("yyznmrgcdogcvuc", model.sourceAgentIdentity().objectId());
        Assertions.assertEquals("ytoxuwhttnzq", model.sourceAgentIdentity().audience());
        Assertions.assertEquals("aqm", model.sourceAgentIdentity().aadAuthority());
    }
}
