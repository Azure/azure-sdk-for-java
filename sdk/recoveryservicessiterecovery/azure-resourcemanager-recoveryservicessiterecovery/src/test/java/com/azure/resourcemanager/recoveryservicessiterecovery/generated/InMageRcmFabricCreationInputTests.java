// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IdentityProviderInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageRcmFabricCreationInput;
import org.junit.jupiter.api.Assertions;

public final class InMageRcmFabricCreationInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageRcmFabricCreationInput model = BinaryData.fromString(
            "{\"instanceType\":\"InMageRcm\",\"vmwareSiteId\":\"q\",\"physicalSiteId\":\"uauzmz\",\"sourceAgentIdentity\":{\"tenantId\":\"vrtrfz\",\"applicationId\":\"hezvhjudxdyy\",\"objectId\":\"udma\",\"audience\":\"swtvd\",\"aadAuthority\":\"xbqssgfenffdxbvw\"}}")
            .toObject(InMageRcmFabricCreationInput.class);
        Assertions.assertEquals("q", model.vmwareSiteId());
        Assertions.assertEquals("uauzmz", model.physicalSiteId());
        Assertions.assertEquals("vrtrfz", model.sourceAgentIdentity().tenantId());
        Assertions.assertEquals("hezvhjudxdyy", model.sourceAgentIdentity().applicationId());
        Assertions.assertEquals("udma", model.sourceAgentIdentity().objectId());
        Assertions.assertEquals("swtvd", model.sourceAgentIdentity().audience());
        Assertions.assertEquals("xbqssgfenffdxbvw", model.sourceAgentIdentity().aadAuthority());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageRcmFabricCreationInput model = new InMageRcmFabricCreationInput().withVmwareSiteId("q")
            .withPhysicalSiteId("uauzmz")
            .withSourceAgentIdentity(new IdentityProviderInput().withTenantId("vrtrfz")
                .withApplicationId("hezvhjudxdyy")
                .withObjectId("udma")
                .withAudience("swtvd")
                .withAadAuthority("xbqssgfenffdxbvw"));
        model = BinaryData.fromObject(model).toObject(InMageRcmFabricCreationInput.class);
        Assertions.assertEquals("q", model.vmwareSiteId());
        Assertions.assertEquals("uauzmz", model.physicalSiteId());
        Assertions.assertEquals("vrtrfz", model.sourceAgentIdentity().tenantId());
        Assertions.assertEquals("hezvhjudxdyy", model.sourceAgentIdentity().applicationId());
        Assertions.assertEquals("udma", model.sourceAgentIdentity().objectId());
        Assertions.assertEquals("swtvd", model.sourceAgentIdentity().audience());
        Assertions.assertEquals("xbqssgfenffdxbvw", model.sourceAgentIdentity().aadAuthority());
    }
}
