// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.DiskAccountType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageRcmAddDisksInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InMageRcmDiskInput;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InMageRcmAddDisksInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InMageRcmAddDisksInput model = BinaryData.fromString(
            "{\"instanceType\":\"InMageRcm\",\"disks\":[{\"diskId\":\"p\",\"logStorageAccountId\":\"glxkoikmtrawrqk\",\"diskType\":\"Premium_ZRS\",\"diskEncryptionSetId\":\"bun\",\"sectorSizeInBytes\":86574286},{\"diskId\":\"klwzlw\",\"logStorageAccountId\":\"epr\",\"diskType\":\"StandardSSD_LRS\",\"diskEncryptionSetId\":\"zltkaszfj\",\"sectorSizeInBytes\":2087140922},{\"diskId\":\"cbduxapgrcqebmvr\",\"logStorageAccountId\":\"jomlnwsbvvdlsf\",\"diskType\":\"PremiumV2_LRS\",\"diskEncryptionSetId\":\"qe\",\"sectorSizeInBytes\":1863324951},{\"diskId\":\"ed\",\"logStorageAccountId\":\"bgzancoinmphymcq\",\"diskType\":\"StandardSSD_ZRS\",\"diskEncryptionSetId\":\"ltvdhqnufbx\",\"sectorSizeInBytes\":1891244585}]}")
            .toObject(InMageRcmAddDisksInput.class);
        Assertions.assertEquals("p", model.disks().get(0).diskId());
        Assertions.assertEquals("glxkoikmtrawrqk", model.disks().get(0).logStorageAccountId());
        Assertions.assertEquals(DiskAccountType.PREMIUM_ZRS, model.disks().get(0).diskType());
        Assertions.assertEquals("bun", model.disks().get(0).diskEncryptionSetId());
        Assertions.assertEquals(86574286, model.disks().get(0).sectorSizeInBytes());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InMageRcmAddDisksInput model = new InMageRcmAddDisksInput().withDisks(Arrays.asList(
            new InMageRcmDiskInput().withDiskId("p")
                .withLogStorageAccountId("glxkoikmtrawrqk")
                .withDiskType(DiskAccountType.PREMIUM_ZRS)
                .withDiskEncryptionSetId("bun")
                .withSectorSizeInBytes(86574286),
            new InMageRcmDiskInput().withDiskId("klwzlw")
                .withLogStorageAccountId("epr")
                .withDiskType(DiskAccountType.STANDARD_SSD_LRS)
                .withDiskEncryptionSetId("zltkaszfj")
                .withSectorSizeInBytes(2087140922),
            new InMageRcmDiskInput().withDiskId("cbduxapgrcqebmvr")
                .withLogStorageAccountId("jomlnwsbvvdlsf")
                .withDiskType(DiskAccountType.PREMIUM_V2_LRS)
                .withDiskEncryptionSetId("qe")
                .withSectorSizeInBytes(1863324951),
            new InMageRcmDiskInput().withDiskId("ed")
                .withLogStorageAccountId("bgzancoinmphymcq")
                .withDiskType(DiskAccountType.STANDARD_SSD_ZRS)
                .withDiskEncryptionSetId("ltvdhqnufbx")
                .withSectorSizeInBytes(1891244585)));
        model = BinaryData.fromObject(model).toObject(InMageRcmAddDisksInput.class);
        Assertions.assertEquals("p", model.disks().get(0).diskId());
        Assertions.assertEquals("glxkoikmtrawrqk", model.disks().get(0).logStorageAccountId());
        Assertions.assertEquals(DiskAccountType.PREMIUM_ZRS, model.disks().get(0).diskType());
        Assertions.assertEquals("bun", model.disks().get(0).diskEncryptionSetId());
        Assertions.assertEquals(86574286, model.disks().get(0).sectorSizeInBytes());
    }
}
