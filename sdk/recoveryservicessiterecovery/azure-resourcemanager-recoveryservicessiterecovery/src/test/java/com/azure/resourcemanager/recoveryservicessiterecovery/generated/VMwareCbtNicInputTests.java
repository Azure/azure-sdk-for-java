// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtNicInput;
import org.junit.jupiter.api.Assertions;

public final class VMwareCbtNicInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VMwareCbtNicInput model = BinaryData.fromString(
            "{\"nicId\":\"t\",\"isPrimaryNic\":\"wghndaevhgs\",\"targetSubnetName\":\"w\",\"targetStaticIPAddress\":\"seufig\",\"isSelectedForMigration\":\"jjuzk\",\"targetNicName\":\"mciwu\",\"testSubnetName\":\"zekypyovljlbzd\",\"testStaticIPAddress\":\"ybpaxhpzysovsnw\"}")
            .toObject(VMwareCbtNicInput.class);
        Assertions.assertEquals("t", model.nicId());
        Assertions.assertEquals("wghndaevhgs", model.isPrimaryNic());
        Assertions.assertEquals("w", model.targetSubnetName());
        Assertions.assertEquals("seufig", model.targetStaticIpAddress());
        Assertions.assertEquals("jjuzk", model.isSelectedForMigration());
        Assertions.assertEquals("mciwu", model.targetNicName());
        Assertions.assertEquals("zekypyovljlbzd", model.testSubnetName());
        Assertions.assertEquals("ybpaxhpzysovsnw", model.testStaticIpAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VMwareCbtNicInput model = new VMwareCbtNicInput().withNicId("t")
            .withIsPrimaryNic("wghndaevhgs")
            .withTargetSubnetName("w")
            .withTargetStaticIpAddress("seufig")
            .withIsSelectedForMigration("jjuzk")
            .withTargetNicName("mciwu")
            .withTestSubnetName("zekypyovljlbzd")
            .withTestStaticIpAddress("ybpaxhpzysovsnw");
        model = BinaryData.fromObject(model).toObject(VMwareCbtNicInput.class);
        Assertions.assertEquals("t", model.nicId());
        Assertions.assertEquals("wghndaevhgs", model.isPrimaryNic());
        Assertions.assertEquals("w", model.targetSubnetName());
        Assertions.assertEquals("seufig", model.targetStaticIpAddress());
        Assertions.assertEquals("jjuzk", model.isSelectedForMigration());
        Assertions.assertEquals("mciwu", model.targetNicName());
        Assertions.assertEquals("zekypyovljlbzd", model.testSubnetName());
        Assertions.assertEquals("ybpaxhpzysovsnw", model.testStaticIpAddress());
    }
}
