// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.RecoveryPlanInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanProperties;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RecoveryPlanCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RecoveryPlanCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"friendlyName\":\"b\",\"primaryFabricId\":\"bwvqvxkdi\",\"primaryFabricFriendlyName\":\"ihebwtsw\",\"recoveryFabricId\":\"uwfmduragegizvc\",\"recoveryFabricFriendlyName\":\"elisdjub\",\"failoverDeploymentModel\":\"bqigkx\",\"replicationProviders\":[],\"allowedOperations\":[],\"lastPlannedFailoverTime\":\"2021-11-10T07:11:50Z\",\"lastUnplannedFailoverTime\":\"2021-02-28T17:22:58Z\",\"lastTestFailoverTime\":\"2021-06-05T20:54:50Z\",\"currentScenarioStatus\":\"yrcmjdmspofap\",\"currentScenarioStatusDescription\":\"hryl\",\"groups\":[],\"providerSpecificDetails\":[]},\"location\":\"rz\",\"id\":\"bzjedmstk\",\"name\":\"nlvxbcuii\",\"type\":\"nktwfansnvpdibmi\"},{\"properties\":{\"friendlyName\":\"tbzbkiwbuqnyophz\",\"primaryFabricId\":\"l\",\"primaryFabricFriendlyName\":\"crpfbcunez\",\"recoveryFabricId\":\"e\",\"recoveryFabricFriendlyName\":\"lfwyfwlwxjwetn\",\"failoverDeploymentModel\":\"ihclafzv\",\"replicationProviders\":[],\"allowedOperations\":[],\"lastPlannedFailoverTime\":\"2021-10-22T09:32:37Z\",\"lastUnplannedFailoverTime\":\"2021-01-02T03:46:41Z\",\"lastTestFailoverTime\":\"2021-08-23T02:35:52Z\",\"currentScenarioStatus\":\"tcmwqkchc\",\"currentScenarioStatusDescription\":\"axfe\",\"groups\":[],\"providerSpecificDetails\":[]},\"location\":\"jexfdeqvhp\",\"id\":\"ylkkshkbffmbm\",\"name\":\"zjrgyww\",\"type\":\"gjxsnptfu\"},{\"properties\":{\"friendlyName\":\"cg\",\"primaryFabricId\":\"o\",\"primaryFabricFriendlyName\":\"ttaqutdew\",\"recoveryFabricId\":\"xswvru\",\"recoveryFabricFriendlyName\":\"zzjgehkfki\",\"failoverDeploymentModel\":\"tixo\",\"replicationProviders\":[],\"allowedOperations\":[],\"lastPlannedFailoverTime\":\"2021-03-14T18:41:32Z\",\"lastUnplannedFailoverTime\":\"2021-02-15T23:36:52Z\",\"lastTestFailoverTime\":\"2021-08-02T11:19:23Z\",\"currentScenarioStatus\":\"pqwhixmonst\",\"currentScenarioStatusDescription\":\"i\",\"groups\":[],\"providerSpecificDetails\":[]},\"location\":\"elfclducc\",\"id\":\"irdsvuwcob\",\"name\":\"egstmninwjizci\",\"type\":\"nghgshej\"},{\"properties\":{\"friendlyName\":\"xqmul\",\"primaryFabricId\":\"lxqzvn\",\"primaryFabricFriendlyName\":\"sbycucrwnamikz\",\"recoveryFabricId\":\"rqbsmswziq\",\"recoveryFabricFriendlyName\":\"uhok\",\"failoverDeploymentModel\":\"uswhvhczznvfbycj\",\"replicationProviders\":[],\"allowedOperations\":[],\"lastPlannedFailoverTime\":\"2021-07-04T04:10Z\",\"lastUnplannedFailoverTime\":\"2021-01-11T06:52:26Z\",\"lastTestFailoverTime\":\"2021-06-03T06:24:37Z\",\"currentScenarioStatus\":\"wmxqhndvnoamlds\",\"currentScenarioStatusDescription\":\"aohdjh\",\"groups\":[],\"providerSpecificDetails\":[]},\"location\":\"okxcoxp\",\"id\":\"lnjetaglt\",\"name\":\"xo\",\"type\":\"tft\"}],\"nextLink\":\"pnpbswveflocc\"}")
                .toObject(RecoveryPlanCollection.class);
        Assertions.assertEquals("b", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("bwvqvxkdi", model.value().get(0).properties().primaryFabricId());
        Assertions.assertEquals("ihebwtsw", model.value().get(0).properties().primaryFabricFriendlyName());
        Assertions.assertEquals("uwfmduragegizvc", model.value().get(0).properties().recoveryFabricId());
        Assertions.assertEquals("elisdjub", model.value().get(0).properties().recoveryFabricFriendlyName());
        Assertions.assertEquals("bqigkx", model.value().get(0).properties().failoverDeploymentModel());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-11-10T07:11:50Z"),
                model.value().get(0).properties().lastPlannedFailoverTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-02-28T17:22:58Z"),
                model.value().get(0).properties().lastUnplannedFailoverTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-06-05T20:54:50Z"), model.value().get(0).properties().lastTestFailoverTime());
        Assertions.assertEquals("yrcmjdmspofap", model.value().get(0).properties().currentScenarioStatus());
        Assertions.assertEquals("hryl", model.value().get(0).properties().currentScenarioStatusDescription());
        Assertions.assertEquals("rz", model.value().get(0).location());
        Assertions.assertEquals("pnpbswveflocc", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RecoveryPlanCollection model =
            new RecoveryPlanCollection()
                .withValue(
                    Arrays
                        .asList(
                            new RecoveryPlanInner()
                                .withProperties(
                                    new RecoveryPlanProperties()
                                        .withFriendlyName("b")
                                        .withPrimaryFabricId("bwvqvxkdi")
                                        .withPrimaryFabricFriendlyName("ihebwtsw")
                                        .withRecoveryFabricId("uwfmduragegizvc")
                                        .withRecoveryFabricFriendlyName("elisdjub")
                                        .withFailoverDeploymentModel("bqigkx")
                                        .withReplicationProviders(Arrays.asList())
                                        .withAllowedOperations(Arrays.asList())
                                        .withLastPlannedFailoverTime(OffsetDateTime.parse("2021-11-10T07:11:50Z"))
                                        .withLastUnplannedFailoverTime(OffsetDateTime.parse("2021-02-28T17:22:58Z"))
                                        .withLastTestFailoverTime(OffsetDateTime.parse("2021-06-05T20:54:50Z"))
                                        .withCurrentScenarioStatus("yrcmjdmspofap")
                                        .withCurrentScenarioStatusDescription("hryl")
                                        .withGroups(Arrays.asList())
                                        .withProviderSpecificDetails(Arrays.asList()))
                                .withLocation("rz"),
                            new RecoveryPlanInner()
                                .withProperties(
                                    new RecoveryPlanProperties()
                                        .withFriendlyName("tbzbkiwbuqnyophz")
                                        .withPrimaryFabricId("l")
                                        .withPrimaryFabricFriendlyName("crpfbcunez")
                                        .withRecoveryFabricId("e")
                                        .withRecoveryFabricFriendlyName("lfwyfwlwxjwetn")
                                        .withFailoverDeploymentModel("ihclafzv")
                                        .withReplicationProviders(Arrays.asList())
                                        .withAllowedOperations(Arrays.asList())
                                        .withLastPlannedFailoverTime(OffsetDateTime.parse("2021-10-22T09:32:37Z"))
                                        .withLastUnplannedFailoverTime(OffsetDateTime.parse("2021-01-02T03:46:41Z"))
                                        .withLastTestFailoverTime(OffsetDateTime.parse("2021-08-23T02:35:52Z"))
                                        .withCurrentScenarioStatus("tcmwqkchc")
                                        .withCurrentScenarioStatusDescription("axfe")
                                        .withGroups(Arrays.asList())
                                        .withProviderSpecificDetails(Arrays.asList()))
                                .withLocation("jexfdeqvhp"),
                            new RecoveryPlanInner()
                                .withProperties(
                                    new RecoveryPlanProperties()
                                        .withFriendlyName("cg")
                                        .withPrimaryFabricId("o")
                                        .withPrimaryFabricFriendlyName("ttaqutdew")
                                        .withRecoveryFabricId("xswvru")
                                        .withRecoveryFabricFriendlyName("zzjgehkfki")
                                        .withFailoverDeploymentModel("tixo")
                                        .withReplicationProviders(Arrays.asList())
                                        .withAllowedOperations(Arrays.asList())
                                        .withLastPlannedFailoverTime(OffsetDateTime.parse("2021-03-14T18:41:32Z"))
                                        .withLastUnplannedFailoverTime(OffsetDateTime.parse("2021-02-15T23:36:52Z"))
                                        .withLastTestFailoverTime(OffsetDateTime.parse("2021-08-02T11:19:23Z"))
                                        .withCurrentScenarioStatus("pqwhixmonst")
                                        .withCurrentScenarioStatusDescription("i")
                                        .withGroups(Arrays.asList())
                                        .withProviderSpecificDetails(Arrays.asList()))
                                .withLocation("elfclducc"),
                            new RecoveryPlanInner()
                                .withProperties(
                                    new RecoveryPlanProperties()
                                        .withFriendlyName("xqmul")
                                        .withPrimaryFabricId("lxqzvn")
                                        .withPrimaryFabricFriendlyName("sbycucrwnamikz")
                                        .withRecoveryFabricId("rqbsmswziq")
                                        .withRecoveryFabricFriendlyName("uhok")
                                        .withFailoverDeploymentModel("uswhvhczznvfbycj")
                                        .withReplicationProviders(Arrays.asList())
                                        .withAllowedOperations(Arrays.asList())
                                        .withLastPlannedFailoverTime(OffsetDateTime.parse("2021-07-04T04:10Z"))
                                        .withLastUnplannedFailoverTime(OffsetDateTime.parse("2021-01-11T06:52:26Z"))
                                        .withLastTestFailoverTime(OffsetDateTime.parse("2021-06-03T06:24:37Z"))
                                        .withCurrentScenarioStatus("wmxqhndvnoamlds")
                                        .withCurrentScenarioStatusDescription("aohdjh")
                                        .withGroups(Arrays.asList())
                                        .withProviderSpecificDetails(Arrays.asList()))
                                .withLocation("okxcoxp")))
                .withNextLink("pnpbswveflocc");
        model = BinaryData.fromObject(model).toObject(RecoveryPlanCollection.class);
        Assertions.assertEquals("b", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals("bwvqvxkdi", model.value().get(0).properties().primaryFabricId());
        Assertions.assertEquals("ihebwtsw", model.value().get(0).properties().primaryFabricFriendlyName());
        Assertions.assertEquals("uwfmduragegizvc", model.value().get(0).properties().recoveryFabricId());
        Assertions.assertEquals("elisdjub", model.value().get(0).properties().recoveryFabricFriendlyName());
        Assertions.assertEquals("bqigkx", model.value().get(0).properties().failoverDeploymentModel());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-11-10T07:11:50Z"),
                model.value().get(0).properties().lastPlannedFailoverTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-02-28T17:22:58Z"),
                model.value().get(0).properties().lastUnplannedFailoverTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-06-05T20:54:50Z"), model.value().get(0).properties().lastTestFailoverTime());
        Assertions.assertEquals("yrcmjdmspofap", model.value().get(0).properties().currentScenarioStatus());
        Assertions.assertEquals("hryl", model.value().get(0).properties().currentScenarioStatusDescription());
        Assertions.assertEquals("rz", model.value().get(0).location());
        Assertions.assertEquals("pnpbswveflocc", model.nextLink());
    }
}
