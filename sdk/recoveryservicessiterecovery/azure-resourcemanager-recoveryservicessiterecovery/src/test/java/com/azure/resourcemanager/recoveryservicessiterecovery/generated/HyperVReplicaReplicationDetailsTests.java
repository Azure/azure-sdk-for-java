// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.DiskDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaReplicationDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.InitialReplicationDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMNicDetails;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class HyperVReplicaReplicationDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVReplicaReplicationDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"HyperVReplica2012\",\"lastReplicatedTime\":\"2021-08-05T23:31:29Z\",\"vmNics\":[{\"nicId\":\"logxsvtzar\",\"replicaNicId\":\"vqnsqk\",\"sourceNicArmId\":\"mbjwzzoslpkyb\",\"vMNetworkName\":\"lwkzpgajsqjcem\",\"recoveryVMNetworkId\":\"mfuvqarwzxuqr\",\"ipConfigs\":[],\"selectionType\":\"immbwxsfgtdm\",\"recoveryNetworkSecurityGroupId\":\"xekr\",\"enableAcceleratedNetworkingOnRecovery\":false,\"tfoVMNetworkId\":\"kbudbtwaokb\",\"tfoNetworkSecurityGroupId\":\"lyttaaknwfr\",\"enableAcceleratedNetworkingOnTfo\":true,\"recoveryNicName\":\"mhpdu\",\"recoveryNicResourceGroupName\":\"igatolekscbctna\",\"reuseExistingNic\":true,\"tfoRecoveryNicName\":\"wbzxpdcldpkawn\",\"tfoRecoveryNicResourceGroupName\":\"laimouxwk\",\"tfoReuseExistingNic\":false,\"targetNicName\":\"dmfcoibicziusws\"},{\"nicId\":\"rk\",\"replicaNicId\":\"sjhbtq\",\"sourceNicArmId\":\"yfscyrfwbivqvo\",\"vMNetworkName\":\"uyzwvbhlimbyqecr\",\"recoveryVMNetworkId\":\"dlikcdrdaasa\",\"ipConfigs\":[],\"selectionType\":\"sm\",\"recoveryNetworkSecurityGroupId\":\"wiyjvzuko\",\"enableAcceleratedNetworkingOnRecovery\":false,\"tfoVMNetworkId\":\"wnvz\",\"tfoNetworkSecurityGroupId\":\"n\",\"enableAcceleratedNetworkingOnTfo\":true,\"recoveryNicName\":\"sxvjabjqqaxuyvy\",\"recoveryNicResourceGroupName\":\"nudn\",\"reuseExistingNic\":false,\"tfoRecoveryNicName\":\"hjxwxq\",\"tfoRecoveryNicResourceGroupName\":\"uipmpvks\",\"tfoReuseExistingNic\":false,\"targetNicName\":\"sqxtltclkrdpq\"},{\"nicId\":\"hyrfrakkldgr\",\"replicaNicId\":\"fcmfcn\",\"sourceNicArmId\":\"ajqmat\",\"vMNetworkName\":\"tie\",\"recoveryVMNetworkId\":\"zqgxx\",\"ipConfigs\":[],\"selectionType\":\"mtlpqagyno\",\"recoveryNetworkSecurityGroupId\":\"rnzcalinc\",\"enableAcceleratedNetworkingOnRecovery\":false,\"tfoVMNetworkId\":\"zxaqzibm\",\"tfoNetworkSecurityGroupId\":\"miymqruqguhfupet\",\"enableAcceleratedNetworkingOnTfo\":true,\"recoveryNicName\":\"oqsbpkflanfkgxsy\",\"recoveryNicResourceGroupName\":\"wuzowpuoh\",\"reuseExistingNic\":true,\"tfoRecoveryNicName\":\"rgukxrztio\",\"tfoRecoveryNicResourceGroupName\":\"lutixmq\",\"tfoReuseExistingNic\":false,\"targetNicName\":\"izcbfzmcrunfhiuc\"},{\"nicId\":\"fbcpaqktkrumzu\",\"replicaNicId\":\"kyzbfvxovqkxiux\",\"sourceNicArmId\":\"gvqrnhyhlwcj\",\"vMNetworkName\":\"ggjh\",\"recoveryVMNetworkId\":\"bxrqrkijp\",\"ipConfigs\":[],\"selectionType\":\"sdxeqztvxwmwwmjs\",\"recoveryNetworkSecurityGroupId\":\"na\",\"enableAcceleratedNetworkingOnRecovery\":false,\"tfoVMNetworkId\":\"ecleqioulndhzyo\",\"tfoNetworkSecurityGroupId\":\"jhtollh\",\"enableAcceleratedNetworkingOnTfo\":false,\"recoveryNicName\":\"mytzln\",\"recoveryNicResourceGroupName\":\"xpno\",\"reuseExistingNic\":true,\"tfoRecoveryNicName\":\"n\",\"tfoRecoveryNicResourceGroupName\":\"cswqa\",\"tfoReuseExistingNic\":true,\"targetNicName\":\"t\"}],\"vmId\":\"gvjrktpgaeuky\",\"vmProtectionState\":\"ohpmwhqn\",\"vmProtectionStateDescription\":\"sklhsidsjtdlp\",\"initialReplicationDetails\":{\"initialReplicationType\":\"njg\",\"initialReplicationProgressPercentage\":\"lsvbzfcpuoeedw\"},\"vMDiskDetails\":[{\"maxSizeMB\":7080601273118037708,\"vhdType\":\"syekrdrenxol\",\"vhdId\":\"yehqbeivdlhydwb\",\"vhdName\":\"fgrlpun\"},{\"maxSizeMB\":2571864308647583523,\"vhdType\":\"esmmpathubtahd\",\"vhdId\":\"niiwllbvgwz\",\"vhdName\":\"ft\"}]}")
                .toObject(HyperVReplicaReplicationDetails.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-05T23:31:29Z"), model.lastReplicatedTime());
        Assertions.assertEquals("logxsvtzar", model.vmNics().get(0).nicId());
        Assertions.assertEquals("vqnsqk", model.vmNics().get(0).replicaNicId());
        Assertions.assertEquals("mbjwzzoslpkyb", model.vmNics().get(0).sourceNicArmId());
        Assertions.assertEquals("lwkzpgajsqjcem", model.vmNics().get(0).vMNetworkName());
        Assertions.assertEquals("mfuvqarwzxuqr", model.vmNics().get(0).recoveryVMNetworkId());
        Assertions.assertEquals("immbwxsfgtdm", model.vmNics().get(0).selectionType());
        Assertions.assertEquals("xekr", model.vmNics().get(0).recoveryNetworkSecurityGroupId());
        Assertions.assertEquals(false, model.vmNics().get(0).enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("kbudbtwaokb", model.vmNics().get(0).tfoVMNetworkId());
        Assertions.assertEquals("lyttaaknwfr", model.vmNics().get(0).tfoNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.vmNics().get(0).enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("mhpdu", model.vmNics().get(0).recoveryNicName());
        Assertions.assertEquals("igatolekscbctna", model.vmNics().get(0).recoveryNicResourceGroupName());
        Assertions.assertEquals(true, model.vmNics().get(0).reuseExistingNic());
        Assertions.assertEquals("wbzxpdcldpkawn", model.vmNics().get(0).tfoRecoveryNicName());
        Assertions.assertEquals("laimouxwk", model.vmNics().get(0).tfoRecoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.vmNics().get(0).tfoReuseExistingNic());
        Assertions.assertEquals("dmfcoibicziusws", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("gvjrktpgaeuky", model.vmId());
        Assertions.assertEquals("ohpmwhqn", model.vmProtectionState());
        Assertions.assertEquals("sklhsidsjtdlp", model.vmProtectionStateDescription());
        Assertions.assertEquals("njg", model.initialReplicationDetails().initialReplicationType());
        Assertions
            .assertEquals("lsvbzfcpuoeedw", model.initialReplicationDetails().initialReplicationProgressPercentage());
        Assertions.assertEquals(7080601273118037708L, model.vMDiskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("syekrdrenxol", model.vMDiskDetails().get(0).vhdType());
        Assertions.assertEquals("yehqbeivdlhydwb", model.vMDiskDetails().get(0).vhdId());
        Assertions.assertEquals("fgrlpun", model.vMDiskDetails().get(0).vhdName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVReplicaReplicationDetails model =
            new HyperVReplicaReplicationDetails()
                .withLastReplicatedTime(OffsetDateTime.parse("2021-08-05T23:31:29Z"))
                .withVmNics(
                    Arrays
                        .asList(
                            new VMNicDetails()
                                .withNicId("logxsvtzar")
                                .withReplicaNicId("vqnsqk")
                                .withSourceNicArmId("mbjwzzoslpkyb")
                                .withVMNetworkName("lwkzpgajsqjcem")
                                .withRecoveryVMNetworkId("mfuvqarwzxuqr")
                                .withIpConfigs(Arrays.asList())
                                .withSelectionType("immbwxsfgtdm")
                                .withRecoveryNetworkSecurityGroupId("xekr")
                                .withEnableAcceleratedNetworkingOnRecovery(false)
                                .withTfoVMNetworkId("kbudbtwaokb")
                                .withTfoNetworkSecurityGroupId("lyttaaknwfr")
                                .withEnableAcceleratedNetworkingOnTfo(true)
                                .withRecoveryNicName("mhpdu")
                                .withRecoveryNicResourceGroupName("igatolekscbctna")
                                .withReuseExistingNic(true)
                                .withTfoRecoveryNicName("wbzxpdcldpkawn")
                                .withTfoRecoveryNicResourceGroupName("laimouxwk")
                                .withTfoReuseExistingNic(false)
                                .withTargetNicName("dmfcoibicziusws"),
                            new VMNicDetails()
                                .withNicId("rk")
                                .withReplicaNicId("sjhbtq")
                                .withSourceNicArmId("yfscyrfwbivqvo")
                                .withVMNetworkName("uyzwvbhlimbyqecr")
                                .withRecoveryVMNetworkId("dlikcdrdaasa")
                                .withIpConfigs(Arrays.asList())
                                .withSelectionType("sm")
                                .withRecoveryNetworkSecurityGroupId("wiyjvzuko")
                                .withEnableAcceleratedNetworkingOnRecovery(false)
                                .withTfoVMNetworkId("wnvz")
                                .withTfoNetworkSecurityGroupId("n")
                                .withEnableAcceleratedNetworkingOnTfo(true)
                                .withRecoveryNicName("sxvjabjqqaxuyvy")
                                .withRecoveryNicResourceGroupName("nudn")
                                .withReuseExistingNic(false)
                                .withTfoRecoveryNicName("hjxwxq")
                                .withTfoRecoveryNicResourceGroupName("uipmpvks")
                                .withTfoReuseExistingNic(false)
                                .withTargetNicName("sqxtltclkrdpq"),
                            new VMNicDetails()
                                .withNicId("hyrfrakkldgr")
                                .withReplicaNicId("fcmfcn")
                                .withSourceNicArmId("ajqmat")
                                .withVMNetworkName("tie")
                                .withRecoveryVMNetworkId("zqgxx")
                                .withIpConfigs(Arrays.asList())
                                .withSelectionType("mtlpqagyno")
                                .withRecoveryNetworkSecurityGroupId("rnzcalinc")
                                .withEnableAcceleratedNetworkingOnRecovery(false)
                                .withTfoVMNetworkId("zxaqzibm")
                                .withTfoNetworkSecurityGroupId("miymqruqguhfupet")
                                .withEnableAcceleratedNetworkingOnTfo(true)
                                .withRecoveryNicName("oqsbpkflanfkgxsy")
                                .withRecoveryNicResourceGroupName("wuzowpuoh")
                                .withReuseExistingNic(true)
                                .withTfoRecoveryNicName("rgukxrztio")
                                .withTfoRecoveryNicResourceGroupName("lutixmq")
                                .withTfoReuseExistingNic(false)
                                .withTargetNicName("izcbfzmcrunfhiuc"),
                            new VMNicDetails()
                                .withNicId("fbcpaqktkrumzu")
                                .withReplicaNicId("kyzbfvxovqkxiux")
                                .withSourceNicArmId("gvqrnhyhlwcj")
                                .withVMNetworkName("ggjh")
                                .withRecoveryVMNetworkId("bxrqrkijp")
                                .withIpConfigs(Arrays.asList())
                                .withSelectionType("sdxeqztvxwmwwmjs")
                                .withRecoveryNetworkSecurityGroupId("na")
                                .withEnableAcceleratedNetworkingOnRecovery(false)
                                .withTfoVMNetworkId("ecleqioulndhzyo")
                                .withTfoNetworkSecurityGroupId("jhtollh")
                                .withEnableAcceleratedNetworkingOnTfo(false)
                                .withRecoveryNicName("mytzln")
                                .withRecoveryNicResourceGroupName("xpno")
                                .withReuseExistingNic(true)
                                .withTfoRecoveryNicName("n")
                                .withTfoRecoveryNicResourceGroupName("cswqa")
                                .withTfoReuseExistingNic(true)
                                .withTargetNicName("t")))
                .withVmId("gvjrktpgaeuky")
                .withVmProtectionState("ohpmwhqn")
                .withVmProtectionStateDescription("sklhsidsjtdlp")
                .withInitialReplicationDetails(
                    new InitialReplicationDetails()
                        .withInitialReplicationType("njg")
                        .withInitialReplicationProgressPercentage("lsvbzfcpuoeedw"))
                .withVMDiskDetails(
                    Arrays
                        .asList(
                            new DiskDetails()
                                .withMaxSizeMB(7080601273118037708L)
                                .withVhdType("syekrdrenxol")
                                .withVhdId("yehqbeivdlhydwb")
                                .withVhdName("fgrlpun"),
                            new DiskDetails()
                                .withMaxSizeMB(2571864308647583523L)
                                .withVhdType("esmmpathubtahd")
                                .withVhdId("niiwllbvgwz")
                                .withVhdName("ft")));
        model = BinaryData.fromObject(model).toObject(HyperVReplicaReplicationDetails.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-05T23:31:29Z"), model.lastReplicatedTime());
        Assertions.assertEquals("logxsvtzar", model.vmNics().get(0).nicId());
        Assertions.assertEquals("vqnsqk", model.vmNics().get(0).replicaNicId());
        Assertions.assertEquals("mbjwzzoslpkyb", model.vmNics().get(0).sourceNicArmId());
        Assertions.assertEquals("lwkzpgajsqjcem", model.vmNics().get(0).vMNetworkName());
        Assertions.assertEquals("mfuvqarwzxuqr", model.vmNics().get(0).recoveryVMNetworkId());
        Assertions.assertEquals("immbwxsfgtdm", model.vmNics().get(0).selectionType());
        Assertions.assertEquals("xekr", model.vmNics().get(0).recoveryNetworkSecurityGroupId());
        Assertions.assertEquals(false, model.vmNics().get(0).enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("kbudbtwaokb", model.vmNics().get(0).tfoVMNetworkId());
        Assertions.assertEquals("lyttaaknwfr", model.vmNics().get(0).tfoNetworkSecurityGroupId());
        Assertions.assertEquals(true, model.vmNics().get(0).enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("mhpdu", model.vmNics().get(0).recoveryNicName());
        Assertions.assertEquals("igatolekscbctna", model.vmNics().get(0).recoveryNicResourceGroupName());
        Assertions.assertEquals(true, model.vmNics().get(0).reuseExistingNic());
        Assertions.assertEquals("wbzxpdcldpkawn", model.vmNics().get(0).tfoRecoveryNicName());
        Assertions.assertEquals("laimouxwk", model.vmNics().get(0).tfoRecoveryNicResourceGroupName());
        Assertions.assertEquals(false, model.vmNics().get(0).tfoReuseExistingNic());
        Assertions.assertEquals("dmfcoibicziusws", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("gvjrktpgaeuky", model.vmId());
        Assertions.assertEquals("ohpmwhqn", model.vmProtectionState());
        Assertions.assertEquals("sklhsidsjtdlp", model.vmProtectionStateDescription());
        Assertions.assertEquals("njg", model.initialReplicationDetails().initialReplicationType());
        Assertions
            .assertEquals("lsvbzfcpuoeedw", model.initialReplicationDetails().initialReplicationProgressPercentage());
        Assertions.assertEquals(7080601273118037708L, model.vMDiskDetails().get(0).maxSizeMB());
        Assertions.assertEquals("syekrdrenxol", model.vMDiskDetails().get(0).vhdType());
        Assertions.assertEquals("yehqbeivdlhydwb", model.vMDiskDetails().get(0).vhdId());
        Assertions.assertEquals("fgrlpun", model.vMDiskDetails().get(0).vhdName());
    }
}
