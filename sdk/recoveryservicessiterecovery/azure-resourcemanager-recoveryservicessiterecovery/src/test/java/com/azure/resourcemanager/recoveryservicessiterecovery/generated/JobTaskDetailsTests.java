// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.JobEntity;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.JobTaskDetails;
import org.junit.jupiter.api.Assertions;

public final class JobTaskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JobTaskDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"JobTaskDetails\",\"jobTask\":{\"jobId\":\"wwmjs\",\"jobFriendlyName\":\"na\",\"targetObjectId\":\"amecle\",\"targetObjectName\":\"oulndhzyoeojhto\",\"targetInstanceType\":\"h\",\"jobScenarioName\":\"idmytzln\"}}")
                .toObject(JobTaskDetails.class);
        Assertions.assertEquals("wwmjs", model.jobTask().jobId());
        Assertions.assertEquals("na", model.jobTask().jobFriendlyName());
        Assertions.assertEquals("amecle", model.jobTask().targetObjectId());
        Assertions.assertEquals("oulndhzyoeojhto", model.jobTask().targetObjectName());
        Assertions.assertEquals("h", model.jobTask().targetInstanceType());
        Assertions.assertEquals("idmytzln", model.jobTask().jobScenarioName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JobTaskDetails model =
            new JobTaskDetails()
                .withJobTask(
                    new JobEntity()
                        .withJobId("wwmjs")
                        .withJobFriendlyName("na")
                        .withTargetObjectId("amecle")
                        .withTargetObjectName("oulndhzyoeojhto")
                        .withTargetInstanceType("h")
                        .withJobScenarioName("idmytzln"));
        model = BinaryData.fromObject(model).toObject(JobTaskDetails.class);
        Assertions.assertEquals("wwmjs", model.jobTask().jobId());
        Assertions.assertEquals("na", model.jobTask().jobFriendlyName());
        Assertions.assertEquals("amecle", model.jobTask().targetObjectId());
        Assertions.assertEquals("oulndhzyoeojhto", model.jobTask().targetObjectName());
        Assertions.assertEquals("h", model.jobTask().targetInstanceType());
        Assertions.assertEquals("idmytzln", model.jobTask().jobScenarioName());
    }
}
