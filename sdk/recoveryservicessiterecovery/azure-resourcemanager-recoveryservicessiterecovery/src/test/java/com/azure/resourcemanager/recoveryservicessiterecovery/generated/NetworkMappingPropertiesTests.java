// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.NetworkMappingFabricSpecificSettings;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.NetworkMappingProperties;
import org.junit.jupiter.api.Assertions;

public final class NetworkMappingPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkMappingProperties model =
            BinaryData
                .fromString(
                    "{\"state\":\"vudwtiukbldng\",\"primaryNetworkFriendlyName\":\"ocipazyxoeg\",\"primaryNetworkId\":\"g\",\"primaryFabricFriendlyName\":\"piu\",\"recoveryNetworkFriendlyName\":\"ygevqzntypmrbpiz\",\"recoveryNetworkId\":\"r\",\"recoveryFabricArmId\":\"sdpydnfyhxdeoejz\",\"recoveryFabricFriendlyName\":\"w\",\"fabricSpecificSettings\":{\"instanceType\":\"NetworkMappingFabricSpecificSettings\"}}")
                .toObject(NetworkMappingProperties.class);
        Assertions.assertEquals("vudwtiukbldng", model.state());
        Assertions.assertEquals("ocipazyxoeg", model.primaryNetworkFriendlyName());
        Assertions.assertEquals("g", model.primaryNetworkId());
        Assertions.assertEquals("piu", model.primaryFabricFriendlyName());
        Assertions.assertEquals("ygevqzntypmrbpiz", model.recoveryNetworkFriendlyName());
        Assertions.assertEquals("r", model.recoveryNetworkId());
        Assertions.assertEquals("sdpydnfyhxdeoejz", model.recoveryFabricArmId());
        Assertions.assertEquals("w", model.recoveryFabricFriendlyName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkMappingProperties model =
            new NetworkMappingProperties()
                .withState("vudwtiukbldng")
                .withPrimaryNetworkFriendlyName("ocipazyxoeg")
                .withPrimaryNetworkId("g")
                .withPrimaryFabricFriendlyName("piu")
                .withRecoveryNetworkFriendlyName("ygevqzntypmrbpiz")
                .withRecoveryNetworkId("r")
                .withRecoveryFabricArmId("sdpydnfyhxdeoejz")
                .withRecoveryFabricFriendlyName("w")
                .withFabricSpecificSettings(new NetworkMappingFabricSpecificSettings());
        model = BinaryData.fromObject(model).toObject(NetworkMappingProperties.class);
        Assertions.assertEquals("vudwtiukbldng", model.state());
        Assertions.assertEquals("ocipazyxoeg", model.primaryNetworkFriendlyName());
        Assertions.assertEquals("g", model.primaryNetworkId());
        Assertions.assertEquals("piu", model.primaryFabricFriendlyName());
        Assertions.assertEquals("ygevqzntypmrbpiz", model.recoveryNetworkFriendlyName());
        Assertions.assertEquals("r", model.recoveryNetworkId());
        Assertions.assertEquals("sdpydnfyhxdeoejz", model.recoveryFabricArmId());
        Assertions.assertEquals("w", model.recoveryFabricFriendlyName());
    }
}
