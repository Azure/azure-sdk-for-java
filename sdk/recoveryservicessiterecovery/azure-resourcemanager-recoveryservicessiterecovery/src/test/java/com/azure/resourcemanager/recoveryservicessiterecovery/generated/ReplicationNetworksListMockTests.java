// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicessiterecovery.SiteRecoveryManager;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.Network;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReplicationNetworksListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"fabricType\":\"gxqbfkce\",\"subnets\":[{\"name\":\"recjb\",\"friendlyName\":\"wevsfgdrmnszdosm\",\"addressList\":[\"svz\",\"mxtc\",\"ghndae\"]},{\"name\":\"gsulwvgseufigvfj\",\"friendlyName\":\"zkilmciwuh\",\"addressList\":[\"kypy\",\"vljlbzdlby\",\"paxhpz\"]}],\"friendlyName\":\"ov\",\"networkType\":\"wbh\"},\"location\":\"zges\",\"id\":\"hshagpa\",\"name\":\"nezpby\",\"type\":\"yvynpmggqgage\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SiteRecoveryManager manager = SiteRecoveryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Network> response
            = manager.replicationNetworks().list("sybxhqvov", "pmhttuvsqjsrvjnq", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("gxqbfkce", response.iterator().next().properties().fabricType());
        Assertions.assertEquals("recjb", response.iterator().next().properties().subnets().get(0).name());
        Assertions.assertEquals("wevsfgdrmnszdosm",
            response.iterator().next().properties().subnets().get(0).friendlyName());
        Assertions.assertEquals("svz", response.iterator().next().properties().subnets().get(0).addressList().get(0));
        Assertions.assertEquals("ov", response.iterator().next().properties().friendlyName());
        Assertions.assertEquals("wbh", response.iterator().next().properties().networkType());
        Assertions.assertEquals("zges", response.iterator().next().location());
    }
}
