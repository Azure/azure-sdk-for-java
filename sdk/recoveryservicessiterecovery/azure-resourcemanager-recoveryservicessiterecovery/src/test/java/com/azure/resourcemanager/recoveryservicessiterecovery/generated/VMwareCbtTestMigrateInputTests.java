// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ManagedRunCommandScriptInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtNicInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtTestMigrateInput;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VMwareCbtTestMigrateInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VMwareCbtTestMigrateInput model = BinaryData.fromString(
            "{\"instanceType\":\"VMwareCbt\",\"recoveryPointId\":\"vqbugihcdvfoizo\",\"networkId\":\"bloejzsaxzgkq\",\"vmNics\":[{\"nicId\":\"eppjnaphifkfrp\",\"isPrimaryNic\":\"p\",\"targetSubnetName\":\"bpebrmj\",\"targetStaticIPAddress\":\"fpghtbttpkim\",\"isSelectedForMigration\":\"hnkkhbykrs\",\"targetNicName\":\"rcmelycpgokut\",\"testSubnetName\":\"vybnzbnvmshfuzz\",\"testStaticIPAddress\":\"pyixlv\"},{\"nicId\":\"cgulaebxi\",\"isPrimaryNic\":\"uq\",\"targetSubnetName\":\"ptessjlw\",\"targetStaticIPAddress\":\"atpvbl\",\"isSelectedForMigration\":\"xgxqayga\",\"targetNicName\":\"kvc\",\"testSubnetName\":\"pvlcjbvyez\",\"testStaticIPAddress\":\"jkqonbw\"},{\"nicId\":\"iieyozvrc\",\"isPrimaryNic\":\"fpucwn\",\"targetSubnetName\":\"gqefgzjvbxqcb\",\"targetStaticIPAddress\":\"arxt\",\"isSelectedForMigration\":\"ciagvkdlhu\",\"targetNicName\":\"klbjoafmjfe\",\"testSubnetName\":\"lvoepknarse\",\"testStaticIPAddress\":\"ncsqoacbuqd\"}],\"osUpgradeVersion\":\"apleq\",\"postMigrationSteps\":[{\"stepName\":\"xenvszgl\",\"scriptUrl\":\"yakeszsu\",\"scriptParameters\":\"vulaqcwggc\"}]}")
            .toObject(VMwareCbtTestMigrateInput.class);
        Assertions.assertEquals("vqbugihcdvfoizo", model.recoveryPointId());
        Assertions.assertEquals("bloejzsaxzgkq", model.networkId());
        Assertions.assertEquals("eppjnaphifkfrp", model.vmNics().get(0).nicId());
        Assertions.assertEquals("p", model.vmNics().get(0).isPrimaryNic());
        Assertions.assertEquals("bpebrmj", model.vmNics().get(0).targetSubnetName());
        Assertions.assertEquals("fpghtbttpkim", model.vmNics().get(0).targetStaticIpAddress());
        Assertions.assertEquals("hnkkhbykrs", model.vmNics().get(0).isSelectedForMigration());
        Assertions.assertEquals("rcmelycpgokut", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("vybnzbnvmshfuzz", model.vmNics().get(0).testSubnetName());
        Assertions.assertEquals("pyixlv", model.vmNics().get(0).testStaticIpAddress());
        Assertions.assertEquals("apleq", model.osUpgradeVersion());
        Assertions.assertEquals("xenvszgl", model.postMigrationSteps().get(0).stepName());
        Assertions.assertEquals("yakeszsu", model.postMigrationSteps().get(0).scriptUrl());
        Assertions.assertEquals("vulaqcwggc", model.postMigrationSteps().get(0).scriptParameters());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VMwareCbtTestMigrateInput model = new VMwareCbtTestMigrateInput().withRecoveryPointId("vqbugihcdvfoizo")
            .withNetworkId("bloejzsaxzgkq")
            .withVmNics(Arrays.asList(
                new VMwareCbtNicInput().withNicId("eppjnaphifkfrp")
                    .withIsPrimaryNic("p")
                    .withTargetSubnetName("bpebrmj")
                    .withTargetStaticIpAddress("fpghtbttpkim")
                    .withIsSelectedForMigration("hnkkhbykrs")
                    .withTargetNicName("rcmelycpgokut")
                    .withTestSubnetName("vybnzbnvmshfuzz")
                    .withTestStaticIpAddress("pyixlv"),
                new VMwareCbtNicInput().withNicId("cgulaebxi")
                    .withIsPrimaryNic("uq")
                    .withTargetSubnetName("ptessjlw")
                    .withTargetStaticIpAddress("atpvbl")
                    .withIsSelectedForMigration("xgxqayga")
                    .withTargetNicName("kvc")
                    .withTestSubnetName("pvlcjbvyez")
                    .withTestStaticIpAddress("jkqonbw"),
                new VMwareCbtNicInput().withNicId("iieyozvrc")
                    .withIsPrimaryNic("fpucwn")
                    .withTargetSubnetName("gqefgzjvbxqcb")
                    .withTargetStaticIpAddress("arxt")
                    .withIsSelectedForMigration("ciagvkdlhu")
                    .withTargetNicName("klbjoafmjfe")
                    .withTestSubnetName("lvoepknarse")
                    .withTestStaticIpAddress("ncsqoacbuqd")))
            .withOsUpgradeVersion("apleq")
            .withPostMigrationSteps(Arrays.asList(new ManagedRunCommandScriptInput().withStepName("xenvszgl")
                .withScriptUrl("yakeszsu")
                .withScriptParameters("vulaqcwggc")));
        model = BinaryData.fromObject(model).toObject(VMwareCbtTestMigrateInput.class);
        Assertions.assertEquals("vqbugihcdvfoizo", model.recoveryPointId());
        Assertions.assertEquals("bloejzsaxzgkq", model.networkId());
        Assertions.assertEquals("eppjnaphifkfrp", model.vmNics().get(0).nicId());
        Assertions.assertEquals("p", model.vmNics().get(0).isPrimaryNic());
        Assertions.assertEquals("bpebrmj", model.vmNics().get(0).targetSubnetName());
        Assertions.assertEquals("fpghtbttpkim", model.vmNics().get(0).targetStaticIpAddress());
        Assertions.assertEquals("hnkkhbykrs", model.vmNics().get(0).isSelectedForMigration());
        Assertions.assertEquals("rcmelycpgokut", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("vybnzbnvmshfuzz", model.vmNics().get(0).testSubnetName());
        Assertions.assertEquals("pyixlv", model.vmNics().get(0).testStaticIpAddress());
        Assertions.assertEquals("apleq", model.osUpgradeVersion());
        Assertions.assertEquals("xenvszgl", model.postMigrationSteps().get(0).stepName());
        Assertions.assertEquals("yakeszsu", model.postMigrationSteps().get(0).scriptUrl());
        Assertions.assertEquals("vulaqcwggc", model.postMigrationSteps().get(0).scriptParameters());
    }
}
