// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtNicInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMwareCbtTestMigrateInput;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VMwareCbtTestMigrateInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VMwareCbtTestMigrateInput model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"VMwareCbt\",\"recoveryPointId\":\"feyvkbdgdd\",\"networkId\":\"rhd\",\"vmNics\":[{\"nicId\":\"beuuqutkzwtjwwg\",\"isPrimaryNic\":\"zytijcx\",\"targetSubnetName\":\"ondegjdydhqkkk\",\"targetStaticIPAddress\":\"uckcatuqbhpow\",\"isSelectedForMigration\":\"xtpzdlyse\",\"targetNicName\":\"toakatprytgrhz\",\"testSubnetName\":\"fdpfawrptvcsht\",\"testStaticIPAddress\":\"tzc\"},{\"nicId\":\"tbqgdirdamm\",\"isPrimaryNic\":\"zjgcfjfx\",\"targetSubnetName\":\"wjjirmu\",\"targetStaticIPAddress\":\"gftt\",\"isSelectedForMigration\":\"ofgeoagf\",\"targetNicName\":\"ftnxodwxmdajwiy\",\"testSubnetName\":\"gsevmdm\",\"testStaticIPAddress\":\"nlrstgf\"}]}")
                .toObject(VMwareCbtTestMigrateInput.class);
        Assertions.assertEquals("feyvkbdgdd", model.recoveryPointId());
        Assertions.assertEquals("rhd", model.networkId());
        Assertions.assertEquals("beuuqutkzwtjwwg", model.vmNics().get(0).nicId());
        Assertions.assertEquals("zytijcx", model.vmNics().get(0).isPrimaryNic());
        Assertions.assertEquals("ondegjdydhqkkk", model.vmNics().get(0).targetSubnetName());
        Assertions.assertEquals("uckcatuqbhpow", model.vmNics().get(0).targetStaticIpAddress());
        Assertions.assertEquals("xtpzdlyse", model.vmNics().get(0).isSelectedForMigration());
        Assertions.assertEquals("toakatprytgrhz", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("fdpfawrptvcsht", model.vmNics().get(0).testSubnetName());
        Assertions.assertEquals("tzc", model.vmNics().get(0).testStaticIpAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VMwareCbtTestMigrateInput model =
            new VMwareCbtTestMigrateInput()
                .withRecoveryPointId("feyvkbdgdd")
                .withNetworkId("rhd")
                .withVmNics(
                    Arrays
                        .asList(
                            new VMwareCbtNicInput()
                                .withNicId("beuuqutkzwtjwwg")
                                .withIsPrimaryNic("zytijcx")
                                .withTargetSubnetName("ondegjdydhqkkk")
                                .withTargetStaticIpAddress("uckcatuqbhpow")
                                .withIsSelectedForMigration("xtpzdlyse")
                                .withTargetNicName("toakatprytgrhz")
                                .withTestSubnetName("fdpfawrptvcsht")
                                .withTestStaticIpAddress("tzc"),
                            new VMwareCbtNicInput()
                                .withNicId("tbqgdirdamm")
                                .withIsPrimaryNic("zjgcfjfx")
                                .withTargetSubnetName("wjjirmu")
                                .withTargetStaticIpAddress("gftt")
                                .withIsSelectedForMigration("ofgeoagf")
                                .withTargetNicName("ftnxodwxmdajwiy")
                                .withTestSubnetName("gsevmdm")
                                .withTestStaticIpAddress("nlrstgf")));
        model = BinaryData.fromObject(model).toObject(VMwareCbtTestMigrateInput.class);
        Assertions.assertEquals("feyvkbdgdd", model.recoveryPointId());
        Assertions.assertEquals("rhd", model.networkId());
        Assertions.assertEquals("beuuqutkzwtjwwg", model.vmNics().get(0).nicId());
        Assertions.assertEquals("zytijcx", model.vmNics().get(0).isPrimaryNic());
        Assertions.assertEquals("ondegjdydhqkkk", model.vmNics().get(0).targetSubnetName());
        Assertions.assertEquals("uckcatuqbhpow", model.vmNics().get(0).targetStaticIpAddress());
        Assertions.assertEquals("xtpzdlyse", model.vmNics().get(0).isSelectedForMigration());
        Assertions.assertEquals("toakatprytgrhz", model.vmNics().get(0).targetNicName());
        Assertions.assertEquals("fdpfawrptvcsht", model.vmNics().get(0).testSubnetName());
        Assertions.assertEquals("tzc", model.vmNics().get(0).testStaticIpAddress());
    }
}
