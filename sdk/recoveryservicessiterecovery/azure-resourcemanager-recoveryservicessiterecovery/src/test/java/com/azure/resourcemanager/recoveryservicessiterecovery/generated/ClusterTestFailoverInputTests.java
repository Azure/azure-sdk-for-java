// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ClusterTestFailoverInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ClusterTestFailoverInputProperties;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ClusterTestFailoverProviderSpecificInput;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FailoverDirection;
import org.junit.jupiter.api.Assertions;

public final class ClusterTestFailoverInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterTestFailoverInput model = BinaryData.fromString(
            "{\"properties\":{\"failoverDirection\":\"RecoveryToPrimary\",\"networkType\":\"dggxdbeesmi\",\"networkId\":\"nlrariaawiuagy\",\"providerSpecificDetails\":{\"instanceType\":\"ClusterTestFailoverProviderSpecificInput\"}}}")
            .toObject(ClusterTestFailoverInput.class);
        Assertions.assertEquals(FailoverDirection.RECOVERY_TO_PRIMARY, model.properties().failoverDirection());
        Assertions.assertEquals("dggxdbeesmi", model.properties().networkType());
        Assertions.assertEquals("nlrariaawiuagy", model.properties().networkId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterTestFailoverInput model = new ClusterTestFailoverInput().withProperties(
            new ClusterTestFailoverInputProperties().withFailoverDirection(FailoverDirection.RECOVERY_TO_PRIMARY)
                .withNetworkType("dggxdbeesmi")
                .withNetworkId("nlrariaawiuagy")
                .withProviderSpecificDetails(new ClusterTestFailoverProviderSpecificInput()));
        model = BinaryData.fromObject(model).toObject(ClusterTestFailoverInput.class);
        Assertions.assertEquals(FailoverDirection.RECOVERY_TO_PRIMARY, model.properties().failoverDirection());
        Assertions.assertEquals("dggxdbeesmi", model.properties().networkType());
        Assertions.assertEquals("nlrariaawiuagy", model.properties().networkId());
    }
}
