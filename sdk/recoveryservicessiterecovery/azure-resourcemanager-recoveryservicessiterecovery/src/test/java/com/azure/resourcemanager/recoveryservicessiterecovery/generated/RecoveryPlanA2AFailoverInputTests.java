// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.A2ARpRecoveryPointType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.MultiVmSyncPointOption;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.RecoveryPlanA2AFailoverInput;
import org.junit.jupiter.api.Assertions;

public final class RecoveryPlanA2AFailoverInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RecoveryPlanA2AFailoverInput model = BinaryData.fromString(
            "{\"instanceType\":\"A2A\",\"recoveryPointType\":\"LatestProcessed\",\"cloudServiceCreationOption\":\"ahbqsvnkxm\",\"multiVmSyncPointOption\":\"UseMultiVmSyncRecoveryPoint\"}")
            .toObject(RecoveryPlanA2AFailoverInput.class);
        Assertions.assertEquals(A2ARpRecoveryPointType.LATEST_PROCESSED, model.recoveryPointType());
        Assertions.assertEquals("ahbqsvnkxm", model.cloudServiceCreationOption());
        Assertions.assertEquals(MultiVmSyncPointOption.USE_MULTI_VM_SYNC_RECOVERY_POINT,
            model.multiVmSyncPointOption());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RecoveryPlanA2AFailoverInput model
            = new RecoveryPlanA2AFailoverInput().withRecoveryPointType(A2ARpRecoveryPointType.LATEST_PROCESSED)
                .withCloudServiceCreationOption("ahbqsvnkxm")
                .withMultiVmSyncPointOption(MultiVmSyncPointOption.USE_MULTI_VM_SYNC_RECOVERY_POINT);
        model = BinaryData.fromObject(model).toObject(RecoveryPlanA2AFailoverInput.class);
        Assertions.assertEquals(A2ARpRecoveryPointType.LATEST_PROCESSED, model.recoveryPointType());
        Assertions.assertEquals("ahbqsvnkxm", model.cloudServiceCreationOption());
        Assertions.assertEquals(MultiVmSyncPointOption.USE_MULTI_VM_SYNC_RECOVERY_POINT,
            model.multiVmSyncPointOption());
    }
}
