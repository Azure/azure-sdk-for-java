// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.UpdateVCenterRequest;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.UpdateVCenterRequestProperties;
import org.junit.jupiter.api.Assertions;

public final class UpdateVCenterRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateVCenterRequest model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"friendlyName\":\"hxkizvytnrzv\",\"ipAddress\":\"jraaeranokqguk\",\"processServerId\":\"qnvb\",\"port\":\"ylaxxulcdi\",\"runAsAccountId\":\"osfjbjsv\"}}")
                .toObject(UpdateVCenterRequest.class);
        Assertions.assertEquals("hxkizvytnrzv", model.properties().friendlyName());
        Assertions.assertEquals("jraaeranokqguk", model.properties().ipAddress());
        Assertions.assertEquals("qnvb", model.properties().processServerId());
        Assertions.assertEquals("ylaxxulcdi", model.properties().port());
        Assertions.assertEquals("osfjbjsv", model.properties().runAsAccountId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateVCenterRequest model =
            new UpdateVCenterRequest()
                .withProperties(
                    new UpdateVCenterRequestProperties()
                        .withFriendlyName("hxkizvytnrzv")
                        .withIpAddress("jraaeranokqguk")
                        .withProcessServerId("qnvb")
                        .withPort("ylaxxulcdi")
                        .withRunAsAccountId("osfjbjsv"));
        model = BinaryData.fromObject(model).toObject(UpdateVCenterRequest.class);
        Assertions.assertEquals("hxkizvytnrzv", model.properties().friendlyName());
        Assertions.assertEquals("jraaeranokqguk", model.properties().ipAddress());
        Assertions.assertEquals("qnvb", model.properties().processServerId());
        Assertions.assertEquals("ylaxxulcdi", model.properties().port());
        Assertions.assertEquals("osfjbjsv", model.properties().runAsAccountId());
    }
}
