// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyDetails;
import org.junit.jupiter.api.Assertions;

public final class HyperVReplicaBluePolicyDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVReplicaBluePolicyDetails model = BinaryData.fromString(
            "{\"instanceType\":\"HyperVReplica2012R2\",\"replicationFrequencyInSeconds\":2136761436,\"recoveryPoints\":1535856297,\"applicationConsistentSnapshotFrequencyInHours\":834618815,\"compression\":\"uajgcqwulynk\",\"initialReplicationMethod\":\"cfdruwsikxx\",\"onlineReplicationStartTime\":\"lhuulriqb\",\"offlineReplicationImportPath\":\"kvjgbzs\",\"offlineReplicationExportPath\":\"br\",\"replicationPort\":1636269751,\"allowedAuthenticationType\":1781145950,\"replicaDeletionOption\":\"hcdjwsuoardnagt\"}")
            .toObject(HyperVReplicaBluePolicyDetails.class);
        Assertions.assertEquals(2136761436, model.replicationFrequencyInSeconds());
        Assertions.assertEquals(1535856297, model.recoveryPoints());
        Assertions.assertEquals(834618815, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals("uajgcqwulynk", model.compression());
        Assertions.assertEquals("cfdruwsikxx", model.initialReplicationMethod());
        Assertions.assertEquals("lhuulriqb", model.onlineReplicationStartTime());
        Assertions.assertEquals("kvjgbzs", model.offlineReplicationImportPath());
        Assertions.assertEquals("br", model.offlineReplicationExportPath());
        Assertions.assertEquals(1636269751, model.replicationPort());
        Assertions.assertEquals(1781145950, model.allowedAuthenticationType());
        Assertions.assertEquals("hcdjwsuoardnagt", model.replicaDeletionOption());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVReplicaBluePolicyDetails model
            = new HyperVReplicaBluePolicyDetails().withReplicationFrequencyInSeconds(2136761436)
                .withRecoveryPoints(1535856297).withApplicationConsistentSnapshotFrequencyInHours(834618815)
                .withCompression("uajgcqwulynk").withInitialReplicationMethod("cfdruwsikxx")
                .withOnlineReplicationStartTime("lhuulriqb").withOfflineReplicationImportPath("kvjgbzs")
                .withOfflineReplicationExportPath("br").withReplicationPort(1636269751)
                .withAllowedAuthenticationType(1781145950).withReplicaDeletionOption("hcdjwsuoardnagt");
        model = BinaryData.fromObject(model).toObject(HyperVReplicaBluePolicyDetails.class);
        Assertions.assertEquals(2136761436, model.replicationFrequencyInSeconds());
        Assertions.assertEquals(1535856297, model.recoveryPoints());
        Assertions.assertEquals(834618815, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals("uajgcqwulynk", model.compression());
        Assertions.assertEquals("cfdruwsikxx", model.initialReplicationMethod());
        Assertions.assertEquals("lhuulriqb", model.onlineReplicationStartTime());
        Assertions.assertEquals("kvjgbzs", model.offlineReplicationImportPath());
        Assertions.assertEquals("br", model.offlineReplicationExportPath());
        Assertions.assertEquals(1636269751, model.replicationPort());
        Assertions.assertEquals(1781145950, model.allowedAuthenticationType());
        Assertions.assertEquals("hcdjwsuoardnagt", model.replicaDeletionOption());
    }
}
