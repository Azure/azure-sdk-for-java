// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyDetails;
import org.junit.jupiter.api.Assertions;

public final class HyperVReplicaBluePolicyDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVReplicaBluePolicyDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"HyperVReplica2012R2\",\"replicationFrequencyInSeconds\":702215256,\"recoveryPoints\":1495517843,\"applicationConsistentSnapshotFrequencyInHours\":1045485421,\"compression\":\"pckaewse\",\"initialReplicationMethod\":\"eskwxeg\",\"onlineReplicationStartTime\":\"hrg\",\"offlineReplicationImportPath\":\"zhctm\",\"offlineReplicationExportPath\":\"sghpbcbcpzarpze\",\"replicationPort\":689242789,\"allowedAuthenticationType\":949221763,\"replicaDeletionOption\":\"tz\"}")
                .toObject(HyperVReplicaBluePolicyDetails.class);
        Assertions.assertEquals(702215256, model.replicationFrequencyInSeconds());
        Assertions.assertEquals(1495517843, model.recoveryPoints());
        Assertions.assertEquals(1045485421, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals("pckaewse", model.compression());
        Assertions.assertEquals("eskwxeg", model.initialReplicationMethod());
        Assertions.assertEquals("hrg", model.onlineReplicationStartTime());
        Assertions.assertEquals("zhctm", model.offlineReplicationImportPath());
        Assertions.assertEquals("sghpbcbcpzarpze", model.offlineReplicationExportPath());
        Assertions.assertEquals(689242789, model.replicationPort());
        Assertions.assertEquals(949221763, model.allowedAuthenticationType());
        Assertions.assertEquals("tz", model.replicaDeletionOption());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVReplicaBluePolicyDetails model =
            new HyperVReplicaBluePolicyDetails()
                .withReplicationFrequencyInSeconds(702215256)
                .withRecoveryPoints(1495517843)
                .withApplicationConsistentSnapshotFrequencyInHours(1045485421)
                .withCompression("pckaewse")
                .withInitialReplicationMethod("eskwxeg")
                .withOnlineReplicationStartTime("hrg")
                .withOfflineReplicationImportPath("zhctm")
                .withOfflineReplicationExportPath("sghpbcbcpzarpze")
                .withReplicationPort(689242789)
                .withAllowedAuthenticationType(949221763)
                .withReplicaDeletionOption("tz");
        model = BinaryData.fromObject(model).toObject(HyperVReplicaBluePolicyDetails.class);
        Assertions.assertEquals(702215256, model.replicationFrequencyInSeconds());
        Assertions.assertEquals(1495517843, model.recoveryPoints());
        Assertions.assertEquals(1045485421, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals("pckaewse", model.compression());
        Assertions.assertEquals("eskwxeg", model.initialReplicationMethod());
        Assertions.assertEquals("hrg", model.onlineReplicationStartTime());
        Assertions.assertEquals("zhctm", model.offlineReplicationImportPath());
        Assertions.assertEquals("sghpbcbcpzarpze", model.offlineReplicationExportPath());
        Assertions.assertEquals(689242789, model.replicationPort());
        Assertions.assertEquals(949221763, model.allowedAuthenticationType());
        Assertions.assertEquals("tz", model.replicaDeletionOption());
    }
}
