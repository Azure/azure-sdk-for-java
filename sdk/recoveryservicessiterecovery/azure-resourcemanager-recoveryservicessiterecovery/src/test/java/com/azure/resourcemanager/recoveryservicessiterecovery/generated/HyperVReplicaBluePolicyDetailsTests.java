// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyDetails;
import org.junit.jupiter.api.Assertions;

public final class HyperVReplicaBluePolicyDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVReplicaBluePolicyDetails model = BinaryData.fromString(
            "{\"instanceType\":\"HyperVReplica2012R2\",\"replicationFrequencyInSeconds\":1078670025,\"recoveryPoints\":1561409554,\"applicationConsistentSnapshotFrequencyInHours\":1468254749,\"compression\":\"jyhdrxb\",\"initialReplicationMethod\":\"vcehqw\",\"onlineReplicationStartTime\":\"txnmxgnmguz\",\"offlineReplicationImportPath\":\"wvor\",\"offlineReplicationExportPath\":\"lkjnbkb\",\"replicationPort\":350723455,\"allowedAuthenticationType\":1801263098,\"replicaDeletionOption\":\"stqkqsygxiyn\"}")
            .toObject(HyperVReplicaBluePolicyDetails.class);
        Assertions.assertEquals(1078670025, model.replicationFrequencyInSeconds());
        Assertions.assertEquals(1561409554, model.recoveryPoints());
        Assertions.assertEquals(1468254749, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals("jyhdrxb", model.compression());
        Assertions.assertEquals("vcehqw", model.initialReplicationMethod());
        Assertions.assertEquals("txnmxgnmguz", model.onlineReplicationStartTime());
        Assertions.assertEquals("wvor", model.offlineReplicationImportPath());
        Assertions.assertEquals("lkjnbkb", model.offlineReplicationExportPath());
        Assertions.assertEquals(350723455, model.replicationPort());
        Assertions.assertEquals(1801263098, model.allowedAuthenticationType());
        Assertions.assertEquals("stqkqsygxiyn", model.replicaDeletionOption());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVReplicaBluePolicyDetails model
            = new HyperVReplicaBluePolicyDetails().withReplicationFrequencyInSeconds(1078670025)
                .withRecoveryPoints(1561409554)
                .withApplicationConsistentSnapshotFrequencyInHours(1468254749)
                .withCompression("jyhdrxb")
                .withInitialReplicationMethod("vcehqw")
                .withOnlineReplicationStartTime("txnmxgnmguz")
                .withOfflineReplicationImportPath("wvor")
                .withOfflineReplicationExportPath("lkjnbkb")
                .withReplicationPort(350723455)
                .withAllowedAuthenticationType(1801263098)
                .withReplicaDeletionOption("stqkqsygxiyn");
        model = BinaryData.fromObject(model).toObject(HyperVReplicaBluePolicyDetails.class);
        Assertions.assertEquals(1078670025, model.replicationFrequencyInSeconds());
        Assertions.assertEquals(1561409554, model.recoveryPoints());
        Assertions.assertEquals(1468254749, model.applicationConsistentSnapshotFrequencyInHours());
        Assertions.assertEquals("jyhdrxb", model.compression());
        Assertions.assertEquals("vcehqw", model.initialReplicationMethod());
        Assertions.assertEquals("txnmxgnmguz", model.onlineReplicationStartTime());
        Assertions.assertEquals("wvor", model.offlineReplicationImportPath());
        Assertions.assertEquals("lkjnbkb", model.offlineReplicationExportPath());
        Assertions.assertEquals(350723455, model.replicationPort());
        Assertions.assertEquals(1801263098, model.allowedAuthenticationType());
        Assertions.assertEquals("stqkqsygxiyn", model.replicaDeletionOption());
    }
}
