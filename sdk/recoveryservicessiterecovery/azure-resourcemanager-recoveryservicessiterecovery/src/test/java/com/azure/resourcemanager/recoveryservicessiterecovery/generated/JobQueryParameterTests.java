// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ExportJobOutputSerializationType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.JobQueryParameter;
import org.junit.jupiter.api.Assertions;

public final class JobQueryParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JobQueryParameter model =
            BinaryData
                .fromString(
                    "{\"startTime\":\"z\",\"endTime\":\"qnmcjngzqdqx\",\"fabricId\":\"jw\",\"affectedObjectTypes\":\"yfu\",\"jobStatus\":\"zsvtuikzhajqgl\",\"jobOutputType\":\"Json\",\"jobName\":\"l\",\"timezoneOffset\":57.55268828049329}")
                .toObject(JobQueryParameter.class);
        Assertions.assertEquals("z", model.startTime());
        Assertions.assertEquals("qnmcjngzqdqx", model.endTime());
        Assertions.assertEquals("jw", model.fabricId());
        Assertions.assertEquals("yfu", model.affectedObjectTypes());
        Assertions.assertEquals("zsvtuikzhajqgl", model.jobStatus());
        Assertions.assertEquals(ExportJobOutputSerializationType.JSON, model.jobOutputType());
        Assertions.assertEquals("l", model.jobName());
        Assertions.assertEquals(57.55268828049329D, model.timezoneOffset());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JobQueryParameter model =
            new JobQueryParameter()
                .withStartTime("z")
                .withEndTime("qnmcjngzqdqx")
                .withFabricId("jw")
                .withAffectedObjectTypes("yfu")
                .withJobStatus("zsvtuikzhajqgl")
                .withJobOutputType(ExportJobOutputSerializationType.JSON)
                .withJobName("l")
                .withTimezoneOffset(57.55268828049329D);
        model = BinaryData.fromObject(model).toObject(JobQueryParameter.class);
        Assertions.assertEquals("z", model.startTime());
        Assertions.assertEquals("qnmcjngzqdqx", model.endTime());
        Assertions.assertEquals("jw", model.fabricId());
        Assertions.assertEquals("yfu", model.affectedObjectTypes());
        Assertions.assertEquals("zsvtuikzhajqgl", model.jobStatus());
        Assertions.assertEquals(ExportJobOutputSerializationType.JSON, model.jobOutputType());
        Assertions.assertEquals("l", model.jobName());
        Assertions.assertEquals(57.55268828049329D, model.timezoneOffset());
    }
}
