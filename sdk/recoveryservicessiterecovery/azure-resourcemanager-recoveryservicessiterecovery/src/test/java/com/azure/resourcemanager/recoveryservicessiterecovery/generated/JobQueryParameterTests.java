// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.ExportJobOutputSerializationType;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.JobQueryParameter;
import org.junit.jupiter.api.Assertions;

public final class JobQueryParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JobQueryParameter model =
            BinaryData
                .fromString(
                    "{\"startTime\":\"amhsycxhxzgazt\",\"endTime\":\"boi\",\"fabricId\":\"mfqhppubowse\",\"affectedObjectTypes\":\"fgkmtdhern\",\"jobStatus\":\"tcjuahokqto\",\"jobOutputType\":\"Excel\",\"jobName\":\"xof\",\"timezoneOffset\":37.56433108394144}")
                .toObject(JobQueryParameter.class);
        Assertions.assertEquals("amhsycxhxzgazt", model.startTime());
        Assertions.assertEquals("boi", model.endTime());
        Assertions.assertEquals("mfqhppubowse", model.fabricId());
        Assertions.assertEquals("fgkmtdhern", model.affectedObjectTypes());
        Assertions.assertEquals("tcjuahokqto", model.jobStatus());
        Assertions.assertEquals(ExportJobOutputSerializationType.EXCEL, model.jobOutputType());
        Assertions.assertEquals("xof", model.jobName());
        Assertions.assertEquals(37.56433108394144D, model.timezoneOffset());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JobQueryParameter model =
            new JobQueryParameter()
                .withStartTime("amhsycxhxzgazt")
                .withEndTime("boi")
                .withFabricId("mfqhppubowse")
                .withAffectedObjectTypes("fgkmtdhern")
                .withJobStatus("tcjuahokqto")
                .withJobOutputType(ExportJobOutputSerializationType.EXCEL)
                .withJobName("xof")
                .withTimezoneOffset(37.56433108394144D);
        model = BinaryData.fromObject(model).toObject(JobQueryParameter.class);
        Assertions.assertEquals("amhsycxhxzgazt", model.startTime());
        Assertions.assertEquals("boi", model.endTime());
        Assertions.assertEquals("mfqhppubowse", model.fabricId());
        Assertions.assertEquals("fgkmtdhern", model.affectedObjectTypes());
        Assertions.assertEquals("tcjuahokqto", model.jobStatus());
        Assertions.assertEquals(ExportJobOutputSerializationType.EXCEL, model.jobOutputType());
        Assertions.assertEquals("xof", model.jobName());
        Assertions.assertEquals(37.56433108394144D, model.timezoneOffset());
    }
}
