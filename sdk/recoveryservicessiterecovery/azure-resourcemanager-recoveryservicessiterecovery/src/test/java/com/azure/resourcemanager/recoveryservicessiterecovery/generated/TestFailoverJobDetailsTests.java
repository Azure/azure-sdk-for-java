// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FailoverReplicationProtectedItemDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.TestFailoverJobDetails;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class TestFailoverJobDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TestFailoverJobDetails model =
            BinaryData
                .fromString(
                    "{\"instanceType\":\"TestFailoverJobDetails\",\"testFailoverStatus\":\"yqxadyfhbmw\",\"comments\":\"ojqttbsp\",\"networkName\":\"hg\",\"networkFriendlyName\":\"qjsgyzst\",\"networkType\":\"rzxrkns\",\"protectedItemDetails\":[{\"name\":\"duyehiiitt\",\"friendlyName\":\"yuqwrldaxurfqazc\",\"testVmName\":\"zjvxdzcigg\",\"testVmFriendlyName\":\"vt\",\"networkConnectionStatus\":\"fwalzyxwhoeamo\",\"networkFriendlyName\":\"bdoeysf\",\"subnet\":\"imtwuuhau\",\"recoveryPointId\":\"nkwmnfeub\",\"recoveryPointTime\":\"2021-07-30T07:39:19Z\"},{\"name\":\"r\",\"friendlyName\":\"fugiphrrkuu\",\"testVmName\":\"qdurhzzfopue\",\"testVmFriendlyName\":\"usvwluj\",\"networkConnectionStatus\":\"wnibittoz\",\"networkFriendlyName\":\"dqumqvfm\",\"subnet\":\"ad\",\"recoveryPointId\":\"gctxegtvgwyur\",\"recoveryPointTime\":\"2021-12-07T16:51:48Z\"},{\"name\":\"nzzryizwbxgde\",\"friendlyName\":\"layunomirhpfabe\",\"testVmName\":\"lamwmgewa\",\"testVmFriendlyName\":\"f\",\"networkConnectionStatus\":\"bcpjstbhem\",\"networkFriendlyName\":\"u\",\"subnet\":\"qsnxfbxufeapdr\",\"recoveryPointId\":\"yvbsuadu\",\"recoveryPointTime\":\"2021-05-19T06:55:15Z\"},{\"name\":\"kaxpfobkzhmh\",\"friendlyName\":\"qltd\",\"testVmName\":\"uq\",\"testVmFriendlyName\":\"jadhfztl\",\"networkConnectionStatus\":\"ysrkgzkyhudbk\",\"networkFriendlyName\":\"pzqxlcweakfec\",\"subnet\":\"xfaqufqizjvp\",\"recoveryPointId\":\"ooajeyyjmjjx\",\"recoveryPointTime\":\"2021-11-04T07:21:59Z\"}],\"affectedObjectDetails\":{\"zkjtyqpdwadeg\":\"hnzlslekctt\",\"qymjzucwwmejjqhd\":\"ztldsvczdjiah\",\"ookyfoz\":\"wvmqxi\",\"x\":\"bn\"}}")
                .toObject(TestFailoverJobDetails.class);
        Assertions.assertEquals("hnzlslekctt", model.affectedObjectDetails().get("zkjtyqpdwadeg"));
        Assertions.assertEquals("yqxadyfhbmw", model.testFailoverStatus());
        Assertions.assertEquals("ojqttbsp", model.comments());
        Assertions.assertEquals("hg", model.networkName());
        Assertions.assertEquals("qjsgyzst", model.networkFriendlyName());
        Assertions.assertEquals("rzxrkns", model.networkType());
        Assertions.assertEquals("duyehiiitt", model.protectedItemDetails().get(0).name());
        Assertions.assertEquals("yuqwrldaxurfqazc", model.protectedItemDetails().get(0).friendlyName());
        Assertions.assertEquals("zjvxdzcigg", model.protectedItemDetails().get(0).testVmName());
        Assertions.assertEquals("vt", model.protectedItemDetails().get(0).testVmFriendlyName());
        Assertions.assertEquals("fwalzyxwhoeamo", model.protectedItemDetails().get(0).networkConnectionStatus());
        Assertions.assertEquals("bdoeysf", model.protectedItemDetails().get(0).networkFriendlyName());
        Assertions.assertEquals("imtwuuhau", model.protectedItemDetails().get(0).subnet());
        Assertions.assertEquals("nkwmnfeub", model.protectedItemDetails().get(0).recoveryPointId());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-07-30T07:39:19Z"), model.protectedItemDetails().get(0).recoveryPointTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TestFailoverJobDetails model =
            new TestFailoverJobDetails()
                .withAffectedObjectDetails(
                    mapOf(
                        "zkjtyqpdwadeg",
                        "hnzlslekctt",
                        "qymjzucwwmejjqhd",
                        "ztldsvczdjiah",
                        "ookyfoz",
                        "wvmqxi",
                        "x",
                        "bn"))
                .withTestFailoverStatus("yqxadyfhbmw")
                .withComments("ojqttbsp")
                .withNetworkName("hg")
                .withNetworkFriendlyName("qjsgyzst")
                .withNetworkType("rzxrkns")
                .withProtectedItemDetails(
                    Arrays
                        .asList(
                            new FailoverReplicationProtectedItemDetails()
                                .withName("duyehiiitt")
                                .withFriendlyName("yuqwrldaxurfqazc")
                                .withTestVmName("zjvxdzcigg")
                                .withTestVmFriendlyName("vt")
                                .withNetworkConnectionStatus("fwalzyxwhoeamo")
                                .withNetworkFriendlyName("bdoeysf")
                                .withSubnet("imtwuuhau")
                                .withRecoveryPointId("nkwmnfeub")
                                .withRecoveryPointTime(OffsetDateTime.parse("2021-07-30T07:39:19Z")),
                            new FailoverReplicationProtectedItemDetails()
                                .withName("r")
                                .withFriendlyName("fugiphrrkuu")
                                .withTestVmName("qdurhzzfopue")
                                .withTestVmFriendlyName("usvwluj")
                                .withNetworkConnectionStatus("wnibittoz")
                                .withNetworkFriendlyName("dqumqvfm")
                                .withSubnet("ad")
                                .withRecoveryPointId("gctxegtvgwyur")
                                .withRecoveryPointTime(OffsetDateTime.parse("2021-12-07T16:51:48Z")),
                            new FailoverReplicationProtectedItemDetails()
                                .withName("nzzryizwbxgde")
                                .withFriendlyName("layunomirhpfabe")
                                .withTestVmName("lamwmgewa")
                                .withTestVmFriendlyName("f")
                                .withNetworkConnectionStatus("bcpjstbhem")
                                .withNetworkFriendlyName("u")
                                .withSubnet("qsnxfbxufeapdr")
                                .withRecoveryPointId("yvbsuadu")
                                .withRecoveryPointTime(OffsetDateTime.parse("2021-05-19T06:55:15Z")),
                            new FailoverReplicationProtectedItemDetails()
                                .withName("kaxpfobkzhmh")
                                .withFriendlyName("qltd")
                                .withTestVmName("uq")
                                .withTestVmFriendlyName("jadhfztl")
                                .withNetworkConnectionStatus("ysrkgzkyhudbk")
                                .withNetworkFriendlyName("pzqxlcweakfec")
                                .withSubnet("xfaqufqizjvp")
                                .withRecoveryPointId("ooajeyyjmjjx")
                                .withRecoveryPointTime(OffsetDateTime.parse("2021-11-04T07:21:59Z"))));
        model = BinaryData.fromObject(model).toObject(TestFailoverJobDetails.class);
        Assertions.assertEquals("hnzlslekctt", model.affectedObjectDetails().get("zkjtyqpdwadeg"));
        Assertions.assertEquals("yqxadyfhbmw", model.testFailoverStatus());
        Assertions.assertEquals("ojqttbsp", model.comments());
        Assertions.assertEquals("hg", model.networkName());
        Assertions.assertEquals("qjsgyzst", model.networkFriendlyName());
        Assertions.assertEquals("rzxrkns", model.networkType());
        Assertions.assertEquals("duyehiiitt", model.protectedItemDetails().get(0).name());
        Assertions.assertEquals("yuqwrldaxurfqazc", model.protectedItemDetails().get(0).friendlyName());
        Assertions.assertEquals("zjvxdzcigg", model.protectedItemDetails().get(0).testVmName());
        Assertions.assertEquals("vt", model.protectedItemDetails().get(0).testVmFriendlyName());
        Assertions.assertEquals("fwalzyxwhoeamo", model.protectedItemDetails().get(0).networkConnectionStatus());
        Assertions.assertEquals("bdoeysf", model.protectedItemDetails().get(0).networkFriendlyName());
        Assertions.assertEquals("imtwuuhau", model.protectedItemDetails().get(0).subnet());
        Assertions.assertEquals("nkwmnfeub", model.protectedItemDetails().get(0).recoveryPointId());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-07-30T07:39:19Z"), model.protectedItemDetails().get(0).recoveryPointTime());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
