// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FailoverReplicationProtectedItemDetails;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class FailoverReplicationProtectedItemDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FailoverReplicationProtectedItemDetails model = BinaryData.fromString(
            "{\"name\":\"pbwxgoooxz\",\"friendlyName\":\"admskx\",\"testVmName\":\"pdgzigjsugswhg\",\"testVmFriendlyName\":\"odkwwnbafocto\",\"networkConnectionStatus\":\"haquvwsxbgnvk\",\"networkFriendlyName\":\"vqchoadhrs\",\"subnet\":\"vzvsp\",\"recoveryPointId\":\"dsrgfajg\",\"recoveryPointTime\":\"2021-10-09T22:42:19Z\"}")
            .toObject(FailoverReplicationProtectedItemDetails.class);
        Assertions.assertEquals("pbwxgoooxz", model.name());
        Assertions.assertEquals("admskx", model.friendlyName());
        Assertions.assertEquals("pdgzigjsugswhg", model.testVmName());
        Assertions.assertEquals("odkwwnbafocto", model.testVmFriendlyName());
        Assertions.assertEquals("haquvwsxbgnvk", model.networkConnectionStatus());
        Assertions.assertEquals("vqchoadhrs", model.networkFriendlyName());
        Assertions.assertEquals("vzvsp", model.subnet());
        Assertions.assertEquals("dsrgfajg", model.recoveryPointId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-09T22:42:19Z"), model.recoveryPointTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FailoverReplicationProtectedItemDetails model
            = new FailoverReplicationProtectedItemDetails().withName("pbwxgoooxz")
                .withFriendlyName("admskx")
                .withTestVmName("pdgzigjsugswhg")
                .withTestVmFriendlyName("odkwwnbafocto")
                .withNetworkConnectionStatus("haquvwsxbgnvk")
                .withNetworkFriendlyName("vqchoadhrs")
                .withSubnet("vzvsp")
                .withRecoveryPointId("dsrgfajg")
                .withRecoveryPointTime(OffsetDateTime.parse("2021-10-09T22:42:19Z"));
        model = BinaryData.fromObject(model).toObject(FailoverReplicationProtectedItemDetails.class);
        Assertions.assertEquals("pbwxgoooxz", model.name());
        Assertions.assertEquals("admskx", model.friendlyName());
        Assertions.assertEquals("pdgzigjsugswhg", model.testVmName());
        Assertions.assertEquals("odkwwnbafocto", model.testVmFriendlyName());
        Assertions.assertEquals("haquvwsxbgnvk", model.networkConnectionStatus());
        Assertions.assertEquals("vqchoadhrs", model.networkFriendlyName());
        Assertions.assertEquals("vzvsp", model.subnet());
        Assertions.assertEquals("dsrgfajg", model.recoveryPointId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-09T22:42:19Z"), model.recoveryPointTime());
    }
}
