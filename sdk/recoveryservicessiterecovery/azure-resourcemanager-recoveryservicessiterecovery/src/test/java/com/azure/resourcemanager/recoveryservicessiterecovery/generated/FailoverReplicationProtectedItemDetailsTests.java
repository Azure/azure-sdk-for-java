// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.FailoverReplicationProtectedItemDetails;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class FailoverReplicationProtectedItemDetailsTests {
    @Test
    public void testDeserialize() {
        FailoverReplicationProtectedItemDetails model =
            BinaryData
                .fromString(
                    "{\"name\":\"agttm\",\"friendlyName\":\"magoaqylkjz\",\"testVmName\":\"iua\",\"testVmFriendlyName\":\"cgm\",\"networkConnectionStatus\":\"tpfinzcpdltkr\",\"networkFriendlyName\":\"jmtbd\",\"subnet\":\"cqguef\",\"recoveryPointId\":\"ompheqdur\",\"recoveryPointTime\":\"2021-09-13T13:50:20Z\"}")
                .toObject(FailoverReplicationProtectedItemDetails.class);
        Assertions.assertEquals("agttm", model.name());
        Assertions.assertEquals("magoaqylkjz", model.friendlyName());
        Assertions.assertEquals("iua", model.testVmName());
        Assertions.assertEquals("cgm", model.testVmFriendlyName());
        Assertions.assertEquals("tpfinzcpdltkr", model.networkConnectionStatus());
        Assertions.assertEquals("jmtbd", model.networkFriendlyName());
        Assertions.assertEquals("cqguef", model.subnet());
        Assertions.assertEquals("ompheqdur", model.recoveryPointId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-13T13:50:20Z"), model.recoveryPointTime());
    }

    @Test
    public void testSerialize() {
        FailoverReplicationProtectedItemDetails model =
            new FailoverReplicationProtectedItemDetails()
                .withName("agttm")
                .withFriendlyName("magoaqylkjz")
                .withTestVmName("iua")
                .withTestVmFriendlyName("cgm")
                .withNetworkConnectionStatus("tpfinzcpdltkr")
                .withNetworkFriendlyName("jmtbd")
                .withSubnet("cqguef")
                .withRecoveryPointId("ompheqdur")
                .withRecoveryPointTime(OffsetDateTime.parse("2021-09-13T13:50:20Z"));
        model = BinaryData.fromObject(model).toObject(FailoverReplicationProtectedItemDetails.class);
        Assertions.assertEquals("agttm", model.name());
        Assertions.assertEquals("magoaqylkjz", model.friendlyName());
        Assertions.assertEquals("iua", model.testVmName());
        Assertions.assertEquals("cgm", model.testVmFriendlyName());
        Assertions.assertEquals("tpfinzcpdltkr", model.networkConnectionStatus());
        Assertions.assertEquals("jmtbd", model.networkFriendlyName());
        Assertions.assertEquals("cqguef", model.subnet());
        Assertions.assertEquals("ompheqdur", model.recoveryPointId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-13T13:50:20Z"), model.recoveryPointTime());
    }
}
