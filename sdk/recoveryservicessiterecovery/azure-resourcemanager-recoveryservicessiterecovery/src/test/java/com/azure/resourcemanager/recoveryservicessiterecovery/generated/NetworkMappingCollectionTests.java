// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.NetworkMappingInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.NetworkMappingCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.NetworkMappingProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class NetworkMappingCollectionTests {
    @Test
    public void testDeserialize() {
        NetworkMappingCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"state\":\"yk\",\"primaryNetworkFriendlyName\":\"enevfyexfwhybci\",\"primaryNetworkId\":\"yvdcsitynnaa\",\"primaryFabricFriendlyName\":\"ectehf\",\"recoveryNetworkFriendlyName\":\"scjeypv\",\"recoveryNetworkId\":\"zrkgqhcjrefovg\",\"recoveryFabricArmId\":\"qsl\",\"recoveryFabricFriendlyName\":\"yvxyqjp\"},\"location\":\"t\",\"id\":\"pngjcrcczsqpjhvm\",\"name\":\"ajvnysounqe\",\"type\":\"a\"},{\"properties\":{\"state\":\"eupfhyhltrpm\",\"primaryNetworkFriendlyName\":\"jmcmatuokthfu\",\"primaryNetworkId\":\"aodsfcpkv\",\"primaryFabricFriendlyName\":\"dpuozmyz\",\"recoveryNetworkFriendlyName\":\"agfuaxbezyiu\",\"recoveryNetworkId\":\"ktwh\",\"recoveryFabricArmId\":\"xw\",\"recoveryFabricFriendlyName\":\"wqsmbsur\"},\"location\":\"moryocfsfksym\",\"id\":\"dystkiiuxhqyud\",\"name\":\"o\",\"type\":\"rq\"},{\"properties\":{\"state\":\"oczvy\",\"primaryNetworkFriendlyName\":\"qrvkdv\",\"primaryNetworkId\":\"llr\",\"primaryFabricFriendlyName\":\"vdfwatkpn\",\"recoveryNetworkFriendlyName\":\"lexxbczwtru\",\"recoveryNetworkId\":\"qzbqjvsov\",\"recoveryFabricArmId\":\"okacspk\",\"recoveryFabricFriendlyName\":\"hzdobpxjmflbvvnc\"},\"location\":\"cciw\",\"id\":\"zjuqkhrsaj\",\"name\":\"wkuofoskghsauu\",\"type\":\"mjmvxieduugidyjr\"}],\"nextLink\":\"byao\"}")
                .toObject(NetworkMappingCollection.class);
        Assertions.assertEquals("yk", model.value().get(0).properties().state());
        Assertions.assertEquals("enevfyexfwhybci", model.value().get(0).properties().primaryNetworkFriendlyName());
        Assertions.assertEquals("yvdcsitynnaa", model.value().get(0).properties().primaryNetworkId());
        Assertions.assertEquals("ectehf", model.value().get(0).properties().primaryFabricFriendlyName());
        Assertions.assertEquals("scjeypv", model.value().get(0).properties().recoveryNetworkFriendlyName());
        Assertions.assertEquals("zrkgqhcjrefovg", model.value().get(0).properties().recoveryNetworkId());
        Assertions.assertEquals("qsl", model.value().get(0).properties().recoveryFabricArmId());
        Assertions.assertEquals("yvxyqjp", model.value().get(0).properties().recoveryFabricFriendlyName());
        Assertions.assertEquals("t", model.value().get(0).location());
        Assertions.assertEquals("byao", model.nextLink());
    }

    @Test
    public void testSerialize() {
        NetworkMappingCollection model =
            new NetworkMappingCollection()
                .withValue(
                    Arrays
                        .asList(
                            new NetworkMappingInner()
                                .withProperties(
                                    new NetworkMappingProperties()
                                        .withState("yk")
                                        .withPrimaryNetworkFriendlyName("enevfyexfwhybci")
                                        .withPrimaryNetworkId("yvdcsitynnaa")
                                        .withPrimaryFabricFriendlyName("ectehf")
                                        .withRecoveryNetworkFriendlyName("scjeypv")
                                        .withRecoveryNetworkId("zrkgqhcjrefovg")
                                        .withRecoveryFabricArmId("qsl")
                                        .withRecoveryFabricFriendlyName("yvxyqjp"))
                                .withLocation("t"),
                            new NetworkMappingInner()
                                .withProperties(
                                    new NetworkMappingProperties()
                                        .withState("eupfhyhltrpm")
                                        .withPrimaryNetworkFriendlyName("jmcmatuokthfu")
                                        .withPrimaryNetworkId("aodsfcpkv")
                                        .withPrimaryFabricFriendlyName("dpuozmyz")
                                        .withRecoveryNetworkFriendlyName("agfuaxbezyiu")
                                        .withRecoveryNetworkId("ktwh")
                                        .withRecoveryFabricArmId("xw")
                                        .withRecoveryFabricFriendlyName("wqsmbsur"))
                                .withLocation("moryocfsfksym"),
                            new NetworkMappingInner()
                                .withProperties(
                                    new NetworkMappingProperties()
                                        .withState("oczvy")
                                        .withPrimaryNetworkFriendlyName("qrvkdv")
                                        .withPrimaryNetworkId("llr")
                                        .withPrimaryFabricFriendlyName("vdfwatkpn")
                                        .withRecoveryNetworkFriendlyName("lexxbczwtru")
                                        .withRecoveryNetworkId("qzbqjvsov")
                                        .withRecoveryFabricArmId("okacspk")
                                        .withRecoveryFabricFriendlyName("hzdobpxjmflbvvnc"))
                                .withLocation("cciw")))
                .withNextLink("byao");
        model = BinaryData.fromObject(model).toObject(NetworkMappingCollection.class);
        Assertions.assertEquals("yk", model.value().get(0).properties().state());
        Assertions.assertEquals("enevfyexfwhybci", model.value().get(0).properties().primaryNetworkFriendlyName());
        Assertions.assertEquals("yvdcsitynnaa", model.value().get(0).properties().primaryNetworkId());
        Assertions.assertEquals("ectehf", model.value().get(0).properties().primaryFabricFriendlyName());
        Assertions.assertEquals("scjeypv", model.value().get(0).properties().recoveryNetworkFriendlyName());
        Assertions.assertEquals("zrkgqhcjrefovg", model.value().get(0).properties().recoveryNetworkId());
        Assertions.assertEquals("qsl", model.value().get(0).properties().recoveryFabricArmId());
        Assertions.assertEquals("yvxyqjp", model.value().get(0).properties().recoveryFabricFriendlyName());
        Assertions.assertEquals("t", model.value().get(0).location());
        Assertions.assertEquals("byao", model.nextLink());
    }
}
