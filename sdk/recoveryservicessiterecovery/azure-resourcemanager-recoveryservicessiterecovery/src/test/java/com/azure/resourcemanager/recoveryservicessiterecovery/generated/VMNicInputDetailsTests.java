// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.IpConfigInputDetails;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.VMNicInputDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VMNicInputDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VMNicInputDetails model =
            BinaryData
                .fromString(
                    "{\"nicId\":\"woiindf\",\"ipConfigs\":[{\"ipConfigName\":\"ylwbtlhflsjcdhsz\",\"isPrimary\":true,\"isSeletedForFailover\":true,\"recoverySubnetName\":\"ofel\",\"recoveryStaticIPAddress\":\"grqmqhldvrii\",\"recoveryPublicIPAddressId\":\"jnalghf\",\"recoveryLBBackendAddressPoolIds\":[\"vsexsowuelu\",\"hhahhxvrhmzkwpjg\",\"wspughftqsxhqx\"],\"tfoSubnetName\":\"xukndxdigr\",\"tfoStaticIPAddress\":\"uufzdmsyqtfihw\",\"tfoPublicIPAddressId\":\"otzi\",\"tfoLBBackendAddressPoolIds\":[\"mvpp\",\"o\",\"zqzudph\",\"amvdkfwynwcvtbv\"]}],\"selectionType\":\"yhmtnvyqiat\",\"recoveryNetworkSecurityGroupId\":\"wp\",\"enableAcceleratedNetworkingOnRecovery\":false,\"tfoNetworkSecurityGroupId\":\"zcjaesgvvsccy\",\"enableAcceleratedNetworkingOnTfo\":false,\"recoveryNicName\":\"qfhwyg\",\"recoveryNicResourceGroupName\":\"vdnkfxusem\",\"reuseExistingNic\":true,\"tfoNicName\":\"muhapfcqdpsqxqv\",\"tfoNicResourceGroupName\":\"vuoy\",\"tfoReuseExistingNic\":false,\"targetNicName\":\"elvezrypq\"}")
                .toObject(VMNicInputDetails.class);
        Assertions.assertEquals("woiindf", model.nicId());
        Assertions.assertEquals("ylwbtlhflsjcdhsz", model.ipConfigs().get(0).ipConfigName());
        Assertions.assertEquals(true, model.ipConfigs().get(0).isPrimary());
        Assertions.assertEquals(true, model.ipConfigs().get(0).isSeletedForFailover());
        Assertions.assertEquals("ofel", model.ipConfigs().get(0).recoverySubnetName());
        Assertions.assertEquals("grqmqhldvrii", model.ipConfigs().get(0).recoveryStaticIpAddress());
        Assertions.assertEquals("jnalghf", model.ipConfigs().get(0).recoveryPublicIpAddressId());
        Assertions.assertEquals("vsexsowuelu", model.ipConfigs().get(0).recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("xukndxdigr", model.ipConfigs().get(0).tfoSubnetName());
        Assertions.assertEquals("uufzdmsyqtfihw", model.ipConfigs().get(0).tfoStaticIpAddress());
        Assertions.assertEquals("otzi", model.ipConfigs().get(0).tfoPublicIpAddressId());
        Assertions.assertEquals("mvpp", model.ipConfigs().get(0).tfoLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("yhmtnvyqiat", model.selectionType());
        Assertions.assertEquals("wp", model.recoveryNetworkSecurityGroupId());
        Assertions.assertEquals(false, model.enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("zcjaesgvvsccy", model.tfoNetworkSecurityGroupId());
        Assertions.assertEquals(false, model.enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("qfhwyg", model.recoveryNicName());
        Assertions.assertEquals("vdnkfxusem", model.recoveryNicResourceGroupName());
        Assertions.assertEquals(true, model.reuseExistingNic());
        Assertions.assertEquals("muhapfcqdpsqxqv", model.tfoNicName());
        Assertions.assertEquals("vuoy", model.tfoNicResourceGroupName());
        Assertions.assertEquals(false, model.tfoReuseExistingNic());
        Assertions.assertEquals("elvezrypq", model.targetNicName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VMNicInputDetails model =
            new VMNicInputDetails()
                .withNicId("woiindf")
                .withIpConfigs(
                    Arrays
                        .asList(
                            new IpConfigInputDetails()
                                .withIpConfigName("ylwbtlhflsjcdhsz")
                                .withIsPrimary(true)
                                .withIsSeletedForFailover(true)
                                .withRecoverySubnetName("ofel")
                                .withRecoveryStaticIpAddress("grqmqhldvrii")
                                .withRecoveryPublicIpAddressId("jnalghf")
                                .withRecoveryLBBackendAddressPoolIds(
                                    Arrays.asList("vsexsowuelu", "hhahhxvrhmzkwpjg", "wspughftqsxhqx"))
                                .withTfoSubnetName("xukndxdigr")
                                .withTfoStaticIpAddress("uufzdmsyqtfihw")
                                .withTfoPublicIpAddressId("otzi")
                                .withTfoLBBackendAddressPoolIds(
                                    Arrays.asList("mvpp", "o", "zqzudph", "amvdkfwynwcvtbv"))))
                .withSelectionType("yhmtnvyqiat")
                .withRecoveryNetworkSecurityGroupId("wp")
                .withEnableAcceleratedNetworkingOnRecovery(false)
                .withTfoNetworkSecurityGroupId("zcjaesgvvsccy")
                .withEnableAcceleratedNetworkingOnTfo(false)
                .withRecoveryNicName("qfhwyg")
                .withRecoveryNicResourceGroupName("vdnkfxusem")
                .withReuseExistingNic(true)
                .withTfoNicName("muhapfcqdpsqxqv")
                .withTfoNicResourceGroupName("vuoy")
                .withTfoReuseExistingNic(false)
                .withTargetNicName("elvezrypq");
        model = BinaryData.fromObject(model).toObject(VMNicInputDetails.class);
        Assertions.assertEquals("woiindf", model.nicId());
        Assertions.assertEquals("ylwbtlhflsjcdhsz", model.ipConfigs().get(0).ipConfigName());
        Assertions.assertEquals(true, model.ipConfigs().get(0).isPrimary());
        Assertions.assertEquals(true, model.ipConfigs().get(0).isSeletedForFailover());
        Assertions.assertEquals("ofel", model.ipConfigs().get(0).recoverySubnetName());
        Assertions.assertEquals("grqmqhldvrii", model.ipConfigs().get(0).recoveryStaticIpAddress());
        Assertions.assertEquals("jnalghf", model.ipConfigs().get(0).recoveryPublicIpAddressId());
        Assertions.assertEquals("vsexsowuelu", model.ipConfigs().get(0).recoveryLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("xukndxdigr", model.ipConfigs().get(0).tfoSubnetName());
        Assertions.assertEquals("uufzdmsyqtfihw", model.ipConfigs().get(0).tfoStaticIpAddress());
        Assertions.assertEquals("otzi", model.ipConfigs().get(0).tfoPublicIpAddressId());
        Assertions.assertEquals("mvpp", model.ipConfigs().get(0).tfoLBBackendAddressPoolIds().get(0));
        Assertions.assertEquals("yhmtnvyqiat", model.selectionType());
        Assertions.assertEquals("wp", model.recoveryNetworkSecurityGroupId());
        Assertions.assertEquals(false, model.enableAcceleratedNetworkingOnRecovery());
        Assertions.assertEquals("zcjaesgvvsccy", model.tfoNetworkSecurityGroupId());
        Assertions.assertEquals(false, model.enableAcceleratedNetworkingOnTfo());
        Assertions.assertEquals("qfhwyg", model.recoveryNicName());
        Assertions.assertEquals("vdnkfxusem", model.recoveryNicResourceGroupName());
        Assertions.assertEquals(true, model.reuseExistingNic());
        Assertions.assertEquals("muhapfcqdpsqxqv", model.tfoNicName());
        Assertions.assertEquals("vuoy", model.tfoNicResourceGroupName());
        Assertions.assertEquals(false, model.tfoReuseExistingNic());
        Assertions.assertEquals("elvezrypq", model.targetNicName());
    }
}
