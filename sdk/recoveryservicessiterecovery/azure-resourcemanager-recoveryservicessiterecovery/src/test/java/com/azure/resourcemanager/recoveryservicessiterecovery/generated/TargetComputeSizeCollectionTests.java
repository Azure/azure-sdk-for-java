// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.TargetComputeSizeInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.TargetComputeSizeCollection;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.TargetComputeSizeProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class TargetComputeSizeCollectionTests {
    @Test
    public void testDeserialize() {
        TargetComputeSizeCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"id\":\"dgoihxumwctondzj\",\"name\":\"udfdlwgg\",\"type\":\"sb\",\"properties\":{\"name\":\"vvt\",\"friendlyName\":\"einqf\",\"cpuCoresCount\":1568035160,\"vCPUsAvailable\":846707727,\"memoryInGB\":68.51617198645849,\"maxDataDiskCount\":2046119653,\"maxNicsCount\":600640237,\"errors\":[],\"highIopsSupported\":\"ttwqmsni\",\"hyperVGenerations\":[]}},{\"id\":\"dmqnrojlpij\",\"name\":\"rxfrddhc\",\"type\":\"tizzronasxif\",\"properties\":{\"name\":\"qyzhf\",\"friendlyName\":\"esgogc\",\"cpuCoresCount\":978834991,\"vCPUsAvailable\":1907577103,\"memoryInGB\":49.87733446240953,\"maxDataDiskCount\":991388734,\"maxNicsCount\":387522619,\"errors\":[],\"highIopsSupported\":\"ossxk\",\"hyperVGenerations\":[]}},{\"id\":\"h\",\"name\":\"gh\",\"type\":\"bdhqxvcxgf\",\"properties\":{\"name\":\"sofbshrn\",\"friendlyName\":\"buswdvzyy\",\"cpuCoresCount\":2106961788,\"vCPUsAvailable\":1761285242,\"memoryInGB\":9.602484507887132,\"maxDataDiskCount\":461683729,\"maxNicsCount\":1338270870,\"errors\":[],\"highIopsSupported\":\"wnopqgikyzirtx\",\"hyperVGenerations\":[]}},{\"id\":\"x\",\"name\":\"jntpsewgioilqu\",\"type\":\"ydxtqm\",\"properties\":{\"name\":\"xorgg\",\"friendlyName\":\"hyaomtbghhavgr\",\"cpuCoresCount\":88097201,\"vCPUsAvailable\":1786221046,\"memoryInGB\":80.33415237986642,\"maxDataDiskCount\":894379890,\"maxNicsCount\":557877366,\"errors\":[],\"highIopsSupported\":\"gjmfxumvfcl\",\"hyperVGenerations\":[]}}],\"nextLink\":\"vwxnbkfe\"}")
                .toObject(TargetComputeSizeCollection.class);
        Assertions.assertEquals("dgoihxumwctondzj", model.value().get(0).id());
        Assertions.assertEquals("udfdlwgg", model.value().get(0).name());
        Assertions.assertEquals("sb", model.value().get(0).type());
        Assertions.assertEquals("vvt", model.value().get(0).properties().name());
        Assertions.assertEquals("einqf", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals(1568035160, model.value().get(0).properties().cpuCoresCount());
        Assertions.assertEquals(68.51617198645849D, model.value().get(0).properties().memoryInGB());
        Assertions.assertEquals(2046119653, model.value().get(0).properties().maxDataDiskCount());
        Assertions.assertEquals(600640237, model.value().get(0).properties().maxNicsCount());
        Assertions.assertEquals("ttwqmsni", model.value().get(0).properties().highIopsSupported());
        Assertions.assertEquals("vwxnbkfe", model.nextLink());
    }

    @Test
    public void testSerialize() {
        TargetComputeSizeCollection model =
            new TargetComputeSizeCollection()
                .withValue(
                    Arrays
                        .asList(
                            new TargetComputeSizeInner()
                                .withId("dgoihxumwctondzj")
                                .withName("udfdlwgg")
                                .withType("sb")
                                .withProperties(
                                    new TargetComputeSizeProperties()
                                        .withName("vvt")
                                        .withFriendlyName("einqf")
                                        .withCpuCoresCount(1568035160)
                                        .withMemoryInGB(68.51617198645849D)
                                        .withMaxDataDiskCount(2046119653)
                                        .withMaxNicsCount(600640237)
                                        .withErrors(Arrays.asList())
                                        .withHighIopsSupported("ttwqmsni")
                                        .withHyperVGenerations(Arrays.asList())),
                            new TargetComputeSizeInner()
                                .withId("dmqnrojlpij")
                                .withName("rxfrddhc")
                                .withType("tizzronasxif")
                                .withProperties(
                                    new TargetComputeSizeProperties()
                                        .withName("qyzhf")
                                        .withFriendlyName("esgogc")
                                        .withCpuCoresCount(978834991)
                                        .withMemoryInGB(49.87733446240953D)
                                        .withMaxDataDiskCount(991388734)
                                        .withMaxNicsCount(387522619)
                                        .withErrors(Arrays.asList())
                                        .withHighIopsSupported("ossxk")
                                        .withHyperVGenerations(Arrays.asList())),
                            new TargetComputeSizeInner()
                                .withId("h")
                                .withName("gh")
                                .withType("bdhqxvcxgf")
                                .withProperties(
                                    new TargetComputeSizeProperties()
                                        .withName("sofbshrn")
                                        .withFriendlyName("buswdvzyy")
                                        .withCpuCoresCount(2106961788)
                                        .withMemoryInGB(9.602484507887132D)
                                        .withMaxDataDiskCount(461683729)
                                        .withMaxNicsCount(1338270870)
                                        .withErrors(Arrays.asList())
                                        .withHighIopsSupported("wnopqgikyzirtx")
                                        .withHyperVGenerations(Arrays.asList())),
                            new TargetComputeSizeInner()
                                .withId("x")
                                .withName("jntpsewgioilqu")
                                .withType("ydxtqm")
                                .withProperties(
                                    new TargetComputeSizeProperties()
                                        .withName("xorgg")
                                        .withFriendlyName("hyaomtbghhavgr")
                                        .withCpuCoresCount(88097201)
                                        .withMemoryInGB(80.33415237986642D)
                                        .withMaxDataDiskCount(894379890)
                                        .withMaxNicsCount(557877366)
                                        .withErrors(Arrays.asList())
                                        .withHighIopsSupported("gjmfxumvfcl")
                                        .withHyperVGenerations(Arrays.asList()))))
                .withNextLink("vwxnbkfe");
        model = BinaryData.fromObject(model).toObject(TargetComputeSizeCollection.class);
        Assertions.assertEquals("dgoihxumwctondzj", model.value().get(0).id());
        Assertions.assertEquals("udfdlwgg", model.value().get(0).name());
        Assertions.assertEquals("sb", model.value().get(0).type());
        Assertions.assertEquals("vvt", model.value().get(0).properties().name());
        Assertions.assertEquals("einqf", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals(1568035160, model.value().get(0).properties().cpuCoresCount());
        Assertions.assertEquals(68.51617198645849D, model.value().get(0).properties().memoryInGB());
        Assertions.assertEquals(2046119653, model.value().get(0).properties().maxDataDiskCount());
        Assertions.assertEquals(600640237, model.value().get(0).properties().maxNicsCount());
        Assertions.assertEquals("ttwqmsni", model.value().get(0).properties().highIopsSupported());
        Assertions.assertEquals("vwxnbkfe", model.nextLink());
    }
}
