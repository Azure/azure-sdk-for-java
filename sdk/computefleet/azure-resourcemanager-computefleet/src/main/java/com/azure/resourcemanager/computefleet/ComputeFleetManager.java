// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet;

import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpPipeline;
import com.azure.core.management.profile.AzureProfile;
import com.azure.resourcemanager.computefleet.fluent.AzureFleetClient;
import com.azure.resourcemanager.computefleet.implementation.AzureFleetClientBuilder;
import com.azure.resourcemanager.computefleet.implementation.FleetsImpl;
import com.azure.resourcemanager.computefleet.implementation.OperationsImpl;
import com.azure.resourcemanager.computefleet.models.Fleets;
import com.azure.resourcemanager.computefleet.models.Operations;
import java.time.Duration;
import java.util.Objects;

/**
 * Entry point to ComputeFleetManager.
 */
public final class ComputeFleetManager {
    private Operations operations;

    private Fleets fleets;

    private final AzureFleetClient clientObject;

    private ComputeFleetManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        this.clientObject = new AzureFleetClientBuilder().pipeline(httpPipeline)
            .endpoint(profile.getEnvironment().getResourceManagerEndpoint())
            .subscriptionId(profile.getSubscriptionId())
            .defaultPollInterval(defaultPollInterval)
            .buildClient();
    }

    /**
     * Creates an instance of Compute Fleet service API entry point.
     * 
     * @param credential the credential to use.
     * @param profile the Azure profile for client.
     * @return the Compute Fleet service API instance.
     */
    public static ComputeFleetManager authenticate(TokenCredential credential, AzureProfile profile) {
        Objects.requireNonNull(credential, "'credential' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return configure().authenticate(credential, profile);
    }

    /**
     * Creates an instance of Compute Fleet service API entry point.
     * 
     * @param httpPipeline the {@link HttpPipeline} configured with Azure authentication credential.
     * @param profile the Azure profile for client.
     * @return the Compute Fleet service API instance.
     */
    public static ComputeFleetManager authenticate(HttpPipeline httpPipeline, AzureProfile profile) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return new ComputeFleetManager(httpPipeline, profile, null);
    }

    /**
     * Gets a Configurable instance that can be used to create ComputeFleetManager with optional configuration.
     * 
     * @return the Configurable instance allowing configurations.
     */
    public static Configurable configure() {
        return new ComputeFleetManager.Configurable();
    }

    /**
     * Gets the resource collection API of Operations.
     * 
     * @return Resource collection API of Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(clientObject.getOperations(), this);
        }
        return operations;
    }

    /**
     * Gets the resource collection API of Fleets. It manages Fleet.
     * 
     * @return Resource collection API of Fleets.
     */
    public Fleets fleets() {
        if (this.fleets == null) {
            this.fleets = new FleetsImpl(clientObject.getFleets(), this);
        }
        return fleets;
    }

    /**
     * Gets wrapped service client AzureFleetClient providing direct access to the underlying auto-generated API
     * implementation, based on Azure REST API.
     * 
     * @return Wrapped service client AzureFleetClient.
     */
    public AzureFleetClient serviceClient() {
        return this.clientObject;
    }
}
