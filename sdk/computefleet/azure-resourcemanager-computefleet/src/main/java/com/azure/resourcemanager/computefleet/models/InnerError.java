// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Inner error details.
 */
@Immutable
public final class InnerError implements JsonSerializable<InnerError> {
    /*
     * The exception type.
     */
    private String exceptionType;

    /*
     * The internal error message or exception dump.
     */
    private String errorDetail;

    /**
     * Creates an instance of InnerError class.
     */
    private InnerError() {
    }

    /**
     * Get the exceptionType property: The exception type.
     * 
     * @return the exceptionType value.
     */
    public String exceptionType() {
        return this.exceptionType;
    }

    /**
     * Get the errorDetail property: The internal error message or exception dump.
     * 
     * @return the errorDetail value.
     */
    public String errorDetail() {
        return this.errorDetail;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("exceptionType", this.exceptionType);
        jsonWriter.writeStringField("errorDetail", this.errorDetail);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InnerError from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InnerError if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the InnerError.
     */
    public static InnerError fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InnerError deserializedInnerError = new InnerError();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("exceptionType".equals(fieldName)) {
                    deserializedInnerError.exceptionType = reader.getString();
                } else if ("errorDetail".equals(fieldName)) {
                    deserializedInnerError.errorDetail = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInnerError;
        });
    }
}
