// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes a virtual machines scale set IP Configuration's PublicIPAddress
 * configuration.
 */
@Fluent
public final class VirtualMachineScaleSetPublicIPAddressConfiguration
    implements JsonSerializable<VirtualMachineScaleSetPublicIPAddressConfiguration> {
    /*
     * The publicIP address configuration name.
     */
    private String name;

    /*
     * Describes a virtual machines scale set IP Configuration's PublicIPAddress
     * configuration
     */
    private VirtualMachineScaleSetPublicIPAddressConfigurationProperties properties;

    /*
     * Describes the public IP Sku. It can only be set with OrchestrationMode as
     * Flexible.
     */
    private PublicIPAddressSku sku;

    /**
     * Creates an instance of VirtualMachineScaleSetPublicIPAddressConfiguration class.
     */
    public VirtualMachineScaleSetPublicIPAddressConfiguration() {
    }

    /**
     * Get the name property: The publicIP address configuration name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The publicIP address configuration name.
     * 
     * @param name the name value to set.
     * @return the VirtualMachineScaleSetPublicIPAddressConfiguration object itself.
     */
    public VirtualMachineScaleSetPublicIPAddressConfiguration withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the properties property: Describes a virtual machines scale set IP Configuration's PublicIPAddress
     * configuration.
     * 
     * @return the properties value.
     */
    public VirtualMachineScaleSetPublicIPAddressConfigurationProperties properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Describes a virtual machines scale set IP Configuration's PublicIPAddress
     * configuration.
     * 
     * @param properties the properties value to set.
     * @return the VirtualMachineScaleSetPublicIPAddressConfiguration object itself.
     */
    public VirtualMachineScaleSetPublicIPAddressConfiguration
        withProperties(VirtualMachineScaleSetPublicIPAddressConfigurationProperties properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the sku property: Describes the public IP Sku. It can only be set with OrchestrationMode as
     * Flexible.
     * 
     * @return the sku value.
     */
    public PublicIPAddressSku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: Describes the public IP Sku. It can only be set with OrchestrationMode as
     * Flexible.
     * 
     * @param sku the sku value to set.
     * @return the VirtualMachineScaleSetPublicIPAddressConfiguration object itself.
     */
    public VirtualMachineScaleSetPublicIPAddressConfiguration withSku(PublicIPAddressSku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property name in model VirtualMachineScaleSetPublicIPAddressConfiguration"));
        }
        if (properties() != null) {
            properties().validate();
        }
        if (sku() != null) {
            sku().validate();
        }
    }

    private static final ClientLogger LOGGER
        = new ClientLogger(VirtualMachineScaleSetPublicIPAddressConfiguration.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeJsonField("properties", this.properties);
        jsonWriter.writeJsonField("sku", this.sku);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualMachineScaleSetPublicIPAddressConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualMachineScaleSetPublicIPAddressConfiguration if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the VirtualMachineScaleSetPublicIPAddressConfiguration.
     */
    public static VirtualMachineScaleSetPublicIPAddressConfiguration fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualMachineScaleSetPublicIPAddressConfiguration deserializedVirtualMachineScaleSetPublicIPAddressConfiguration
                = new VirtualMachineScaleSetPublicIPAddressConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedVirtualMachineScaleSetPublicIPAddressConfiguration.name = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedVirtualMachineScaleSetPublicIPAddressConfiguration.properties
                        = VirtualMachineScaleSetPublicIPAddressConfigurationProperties.fromJson(reader);
                } else if ("sku".equals(fieldName)) {
                    deserializedVirtualMachineScaleSetPublicIPAddressConfiguration.sku
                        = PublicIPAddressSku.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualMachineScaleSetPublicIPAddressConfiguration;
        });
    }
}
