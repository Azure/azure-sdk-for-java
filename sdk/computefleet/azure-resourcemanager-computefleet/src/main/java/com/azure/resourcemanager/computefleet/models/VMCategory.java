// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * VMCategories defined for Azure VMs.
 * See:
 * https://learn.microsoft.com/en-us/azure/virtual-machines/sizes/overview?tabs=breakdownseries%2Cgeneralsizelist%2Ccomputesizelist%2Cmemorysizelist%2Cstoragesizelist%2Cgpusizelist%2Cfpgasizelist%2Chpcsizelist#general-purpose.
 */
public final class VMCategory extends ExpandableStringEnum<VMCategory> {
    /**
     * General purpose VM sizes provide balanced CPU-to-memory ratio. Ideal for testing and development, small to medium
     * databases, and low to medium traffic web servers.
     */
    public static final VMCategory GENERAL_PURPOSE = fromString("GeneralPurpose");

    /**
     * Compute optimized VM sizes have a high CPU-to-memory ratio. These sizes are good for medium traffic web servers,
     * network appliances, batch processes, and application servers.
     */
    public static final VMCategory COMPUTE_OPTIMIZED = fromString("ComputeOptimized");

    /**
     * Memory optimized VM sizes offer a high memory-to-CPU ratio that is great for relational database servers, medium
     * to large caches, and in-memory analytics.
     */
    public static final VMCategory MEMORY_OPTIMIZED = fromString("MemoryOptimized");

    /**
     * Storage optimized virtual machine (VM) sizes offer high disk throughput and IO, and are ideal for Big Data, SQL,
     * NoSQL databases, data warehousing, and large transactional databases.
     * Examples include Cassandra, MongoDB, Cloudera, and Redis.
     */
    public static final VMCategory STORAGE_OPTIMIZED = fromString("StorageOptimized");

    /**
     * GPU optimized VM sizes are specialized virtual machines available with single, multiple, or fractional GPUs.
     * These sizes are designed for compute-intensive, graphics-intensive, and visualization workloads.
     */
    public static final VMCategory GPU_ACCELERATED = fromString("GpuAccelerated");

    /**
     * FPGA optimized VM sizes are specialized virtual machines available with single or multiple FPGA.
     * These sizes are designed for compute-intensive workloads. This article provides information about the number and
     * type of FPGA, vCPUs, data disks, and NICs.
     * Storage throughput and network bandwidth are also included for each size in this grouping.
     */
    public static final VMCategory FPGA_ACCELERATED = fromString("FpgaAccelerated");

    /**
     * Azure High Performance Compute VMs are optimized for various HPC workloads such as computational fluid dynamics,
     * finite element analysis, frontend and backend EDA,
     * rendering, molecular dynamics, computational geo science, weather simulation, and financial risk analysis.
     */
    public static final VMCategory HIGH_PERFORMANCE_COMPUTE = fromString("HighPerformanceCompute");

    /**
     * Creates a new instance of VMCategory value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public VMCategory() {
    }

    /**
     * Creates or finds a VMCategory from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding VMCategory.
     */
    public static VMCategory fromString(String name) {
        return fromString(name, VMCategory.class);
    }

    /**
     * Gets known VMCategory values.
     * 
     * @return known VMCategory values.
     */
    public static Collection<VMCategory> values() {
        return values(VMCategory.class);
    }
}
