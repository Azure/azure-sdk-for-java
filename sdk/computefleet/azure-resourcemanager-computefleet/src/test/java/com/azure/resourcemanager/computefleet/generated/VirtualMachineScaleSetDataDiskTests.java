// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computefleet.models.CachingTypes;
import com.azure.resourcemanager.computefleet.models.DiskCreateOptionTypes;
import com.azure.resourcemanager.computefleet.models.DiskDeleteOptionTypes;
import com.azure.resourcemanager.computefleet.models.DiskEncryptionSetParameters;
import com.azure.resourcemanager.computefleet.models.SecurityEncryptionTypes;
import com.azure.resourcemanager.computefleet.models.StorageAccountTypes;
import com.azure.resourcemanager.computefleet.models.VMDiskSecurityProfile;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetDataDisk;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetManagedDiskParameters;
import org.junit.jupiter.api.Assertions;

public final class VirtualMachineScaleSetDataDiskTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualMachineScaleSetDataDisk model = BinaryData.fromString(
            "{\"name\":\"hcbonqvpkvlr\",\"lun\":1945684802,\"caching\":\"None\",\"writeAcceleratorEnabled\":false,\"createOption\":\"Attach\",\"diskSizeGB\":625674029,\"managedDisk\":{\"storageAccountType\":\"Premium_LRS\",\"diskEncryptionSet\":{\"id\":\"okeyyienj\"},\"securityProfile\":{\"securityEncryptionType\":\"NonPersistedTPM\",\"diskEncryptionSet\":{\"id\":\"rhpdjpjumas\"}}},\"diskIOPSReadWrite\":1164635978047948118,\"diskMBpsReadWrite\":4118233747929526801,\"deleteOption\":\"Delete\"}")
            .toObject(VirtualMachineScaleSetDataDisk.class);
        Assertions.assertEquals("hcbonqvpkvlr", model.name());
        Assertions.assertEquals(1945684802, model.lun());
        Assertions.assertEquals(CachingTypes.NONE, model.caching());
        Assertions.assertEquals(false, model.writeAcceleratorEnabled());
        Assertions.assertEquals(DiskCreateOptionTypes.ATTACH, model.createOption());
        Assertions.assertEquals(625674029, model.diskSizeGB());
        Assertions.assertEquals(StorageAccountTypes.PREMIUM_LRS, model.managedDisk().storageAccountType());
        Assertions.assertEquals("okeyyienj", model.managedDisk().diskEncryptionSet().id());
        Assertions.assertEquals(SecurityEncryptionTypes.NON_PERSISTED_TPM,
            model.managedDisk().securityProfile().securityEncryptionType());
        Assertions.assertEquals("rhpdjpjumas", model.managedDisk().securityProfile().diskEncryptionSet().id());
        Assertions.assertEquals(1164635978047948118L, model.diskIOPSReadWrite());
        Assertions.assertEquals(4118233747929526801L, model.diskMBpsReadWrite());
        Assertions.assertEquals(DiskDeleteOptionTypes.DELETE, model.deleteOption());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualMachineScaleSetDataDisk model
            = new VirtualMachineScaleSetDataDisk().withName("hcbonqvpkvlr")
                .withLun(1945684802)
                .withCaching(CachingTypes.NONE)
                .withWriteAcceleratorEnabled(false)
                .withCreateOption(DiskCreateOptionTypes.ATTACH)
                .withDiskSizeGB(625674029)
                .withManagedDisk(new VirtualMachineScaleSetManagedDiskParameters()
                    .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS)
                    .withDiskEncryptionSet(new DiskEncryptionSetParameters().withId("okeyyienj"))
                    .withSecurityProfile(new VMDiskSecurityProfile()
                        .withSecurityEncryptionType(SecurityEncryptionTypes.NON_PERSISTED_TPM)
                        .withDiskEncryptionSet(new DiskEncryptionSetParameters().withId("rhpdjpjumas"))))
                .withDiskIOPSReadWrite(1164635978047948118L)
                .withDiskMBpsReadWrite(4118233747929526801L)
                .withDeleteOption(DiskDeleteOptionTypes.DELETE);
        model = BinaryData.fromObject(model).toObject(VirtualMachineScaleSetDataDisk.class);
        Assertions.assertEquals("hcbonqvpkvlr", model.name());
        Assertions.assertEquals(1945684802, model.lun());
        Assertions.assertEquals(CachingTypes.NONE, model.caching());
        Assertions.assertEquals(false, model.writeAcceleratorEnabled());
        Assertions.assertEquals(DiskCreateOptionTypes.ATTACH, model.createOption());
        Assertions.assertEquals(625674029, model.diskSizeGB());
        Assertions.assertEquals(StorageAccountTypes.PREMIUM_LRS, model.managedDisk().storageAccountType());
        Assertions.assertEquals("okeyyienj", model.managedDisk().diskEncryptionSet().id());
        Assertions.assertEquals(SecurityEncryptionTypes.NON_PERSISTED_TPM,
            model.managedDisk().securityProfile().securityEncryptionType());
        Assertions.assertEquals("rhpdjpjumas", model.managedDisk().securityProfile().diskEncryptionSet().id());
        Assertions.assertEquals(1164635978047948118L, model.diskIOPSReadWrite());
        Assertions.assertEquals(4118233747929526801L, model.diskMBpsReadWrite());
        Assertions.assertEquals(DiskDeleteOptionTypes.DELETE, model.deleteOption());
    }
}
