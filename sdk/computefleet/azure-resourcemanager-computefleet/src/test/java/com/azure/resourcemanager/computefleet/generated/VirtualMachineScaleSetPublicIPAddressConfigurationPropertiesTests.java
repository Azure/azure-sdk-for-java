// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.generated;

import com.azure.core.management.SubResource;
import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computefleet.models.DeleteOptions;
import com.azure.resourcemanager.computefleet.models.DomainNameLabelScopeTypes;
import com.azure.resourcemanager.computefleet.models.IPVersion;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetIpTag;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetPublicIPAddressConfigurationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualMachineScaleSetPublicIPAddressConfigurationProperties model = BinaryData.fromString(
            "{\"idleTimeoutInMinutes\":2022437290,\"dnsSettings\":{\"domainNameLabel\":\"niwdjsw\",\"domainNameLabelScope\":\"TenantReuse\"},\"ipTags\":[{\"ipTagType\":\"gnxytxhpzxbz\",\"tag\":\"zabglcuhxwt\"}],\"publicIPPrefix\":{\"id\":\"qik\"},\"publicIPAddressVersion\":\"IPv4\",\"deleteOption\":\"Delete\"}")
            .toObject(VirtualMachineScaleSetPublicIPAddressConfigurationProperties.class);
        Assertions.assertEquals(2022437290, model.idleTimeoutInMinutes());
        Assertions.assertEquals("niwdjsw", model.dnsSettings().domainNameLabel());
        Assertions.assertEquals(DomainNameLabelScopeTypes.TENANT_REUSE, model.dnsSettings().domainNameLabelScope());
        Assertions.assertEquals("gnxytxhpzxbz", model.ipTags().get(0).ipTagType());
        Assertions.assertEquals("zabglcuhxwt", model.ipTags().get(0).tag());
        Assertions.assertEquals("qik", model.publicIPPrefix().id());
        Assertions.assertEquals(IPVersion.IPV4, model.publicIPAddressVersion());
        Assertions.assertEquals(DeleteOptions.DELETE, model.deleteOption());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualMachineScaleSetPublicIPAddressConfigurationProperties model
            = new VirtualMachineScaleSetPublicIPAddressConfigurationProperties().withIdleTimeoutInMinutes(2022437290)
                .withDnsSettings(
                    new VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings().withDomainNameLabel("niwdjsw")
                        .withDomainNameLabelScope(DomainNameLabelScopeTypes.TENANT_REUSE))
                .withIpTags(Arrays
                    .asList(new VirtualMachineScaleSetIpTag().withIpTagType("gnxytxhpzxbz").withTag("zabglcuhxwt")))
                .withPublicIPPrefix(new SubResource().withId("qik"))
                .withPublicIPAddressVersion(IPVersion.IPV4)
                .withDeleteOption(DeleteOptions.DELETE);
        model
            = BinaryData.fromObject(model).toObject(VirtualMachineScaleSetPublicIPAddressConfigurationProperties.class);
        Assertions.assertEquals(2022437290, model.idleTimeoutInMinutes());
        Assertions.assertEquals("niwdjsw", model.dnsSettings().domainNameLabel());
        Assertions.assertEquals(DomainNameLabelScopeTypes.TENANT_REUSE, model.dnsSettings().domainNameLabelScope());
        Assertions.assertEquals("gnxytxhpzxbz", model.ipTags().get(0).ipTagType());
        Assertions.assertEquals("zabglcuhxwt", model.ipTags().get(0).tag());
        Assertions.assertEquals("qik", model.publicIPPrefix().id());
        Assertions.assertEquals(IPVersion.IPV4, model.publicIPAddressVersion());
        Assertions.assertEquals(DeleteOptions.DELETE, model.deleteOption());
    }
}
