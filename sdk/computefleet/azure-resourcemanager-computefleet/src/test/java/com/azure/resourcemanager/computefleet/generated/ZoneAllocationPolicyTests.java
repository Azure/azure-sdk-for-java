// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computefleet.models.ZoneAllocationPolicy;
import com.azure.resourcemanager.computefleet.models.ZoneDistributionStrategy;
import com.azure.resourcemanager.computefleet.models.ZonePreference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ZoneAllocationPolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ZoneAllocationPolicy model = BinaryData.fromString(
            "{\"distributionStrategy\":\"BestEffortSingleZone\",\"zonePreferences\":[{\"zone\":\"prnxipeil\",\"rank\":1819249918}]}")
            .toObject(ZoneAllocationPolicy.class);
        Assertions.assertEquals(ZoneDistributionStrategy.BEST_EFFORT_SINGLE_ZONE, model.distributionStrategy());
        Assertions.assertEquals("prnxipeil", model.zonePreferences().get(0).zone());
        Assertions.assertEquals(1819249918, model.zonePreferences().get(0).rank());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ZoneAllocationPolicy model
            = new ZoneAllocationPolicy().withDistributionStrategy(ZoneDistributionStrategy.BEST_EFFORT_SINGLE_ZONE)
                .withZonePreferences(Arrays.asList(new ZonePreference().withZone("prnxipeil").withRank(1819249918)));
        model = BinaryData.fromObject(model).toObject(ZoneAllocationPolicy.class);
        Assertions.assertEquals(ZoneDistributionStrategy.BEST_EFFORT_SINGLE_ZONE, model.distributionStrategy());
        Assertions.assertEquals("prnxipeil", model.zonePreferences().get(0).zone());
        Assertions.assertEquals(1819249918, model.zonePreferences().get(0).rank());
    }
}
