// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computefleet.models.AcceleratorManufacturer;
import com.azure.resourcemanager.computefleet.models.AcceleratorType;
import com.azure.resourcemanager.computefleet.models.ArchitectureType;
import com.azure.resourcemanager.computefleet.models.CpuManufacturer;
import com.azure.resourcemanager.computefleet.models.LocalStorageDiskType;
import com.azure.resourcemanager.computefleet.models.VMAttributeMinMaxDouble;
import com.azure.resourcemanager.computefleet.models.VMAttributeMinMaxInteger;
import com.azure.resourcemanager.computefleet.models.VMAttributeSupport;
import com.azure.resourcemanager.computefleet.models.VMAttributes;
import com.azure.resourcemanager.computefleet.models.VMCategory;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VMAttributesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VMAttributes model = BinaryData.fromString(
            "{\"vCpuCount\":{\"min\":1969125414,\"max\":1742159588},\"memoryInGiB\":{\"min\":49.296618686162205,\"max\":46.151559748687454},\"memoryInGiBPerVCpu\":{\"min\":15.72140906109526,\"max\":33.70355434967512},\"localStorageSupport\":\"Excluded\",\"localStorageInGiB\":{\"min\":34.26097915956968,\"max\":39.601987566482045},\"localStorageDiskTypes\":[\"HDD\",\"HDD\"],\"dataDiskCount\":{\"min\":681393134,\"max\":264024813},\"networkInterfaceCount\":{\"min\":1130701644,\"max\":1278778169},\"networkBandwidthInMbps\":{\"min\":44.56756335924435,\"max\":21.074497607942167},\"rdmaSupport\":\"Excluded\",\"rdmaNetworkInterfaceCount\":{\"min\":1936335434,\"max\":1618302294},\"acceleratorSupport\":\"Included\",\"acceleratorManufacturers\":[\"Nvidia\",\"Nvidia\",\"Nvidia\",\"Nvidia\"],\"acceleratorTypes\":[\"FPGA\",\"GPU\",\"FPGA\"],\"acceleratorCount\":{\"min\":2125910534,\"max\":1296548216},\"vmCategories\":[\"FpgaAccelerated\",\"GpuAccelerated\",\"GpuAccelerated\",\"GeneralPurpose\"],\"architectureTypes\":[\"X64\"],\"cpuManufacturers\":[\"Ampere\"],\"burstableSupport\":\"Excluded\",\"excludedVMSizes\":[\"kao\",\"wyiftyhxhur\",\"k\",\"tyxolniwpwc\"]}")
            .toObject(VMAttributes.class);
        Assertions.assertEquals(1969125414, model.vCpuCount().min());
        Assertions.assertEquals(1742159588, model.vCpuCount().max());
        Assertions.assertEquals(49.296618686162205D, model.memoryInGiB().min());
        Assertions.assertEquals(46.151559748687454D, model.memoryInGiB().max());
        Assertions.assertEquals(15.72140906109526D, model.memoryInGiBPerVCpu().min());
        Assertions.assertEquals(33.70355434967512D, model.memoryInGiBPerVCpu().max());
        Assertions.assertEquals(VMAttributeSupport.EXCLUDED, model.localStorageSupport());
        Assertions.assertEquals(34.26097915956968D, model.localStorageInGiB().min());
        Assertions.assertEquals(39.601987566482045D, model.localStorageInGiB().max());
        Assertions.assertEquals(LocalStorageDiskType.HDD, model.localStorageDiskTypes().get(0));
        Assertions.assertEquals(681393134, model.dataDiskCount().min());
        Assertions.assertEquals(264024813, model.dataDiskCount().max());
        Assertions.assertEquals(1130701644, model.networkInterfaceCount().min());
        Assertions.assertEquals(1278778169, model.networkInterfaceCount().max());
        Assertions.assertEquals(44.56756335924435D, model.networkBandwidthInMbps().min());
        Assertions.assertEquals(21.074497607942167D, model.networkBandwidthInMbps().max());
        Assertions.assertEquals(VMAttributeSupport.EXCLUDED, model.rdmaSupport());
        Assertions.assertEquals(1936335434, model.rdmaNetworkInterfaceCount().min());
        Assertions.assertEquals(1618302294, model.rdmaNetworkInterfaceCount().max());
        Assertions.assertEquals(VMAttributeSupport.INCLUDED, model.acceleratorSupport());
        Assertions.assertEquals(AcceleratorManufacturer.NVIDIA, model.acceleratorManufacturers().get(0));
        Assertions.assertEquals(AcceleratorType.FPGA, model.acceleratorTypes().get(0));
        Assertions.assertEquals(2125910534, model.acceleratorCount().min());
        Assertions.assertEquals(1296548216, model.acceleratorCount().max());
        Assertions.assertEquals(VMCategory.FPGA_ACCELERATED, model.vmCategories().get(0));
        Assertions.assertEquals(ArchitectureType.X64, model.architectureTypes().get(0));
        Assertions.assertEquals(CpuManufacturer.AMPERE, model.cpuManufacturers().get(0));
        Assertions.assertEquals(VMAttributeSupport.EXCLUDED, model.burstableSupport());
        Assertions.assertEquals("kao", model.excludedVMSizes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VMAttributes model = new VMAttributes()
            .withVCpuCount(new VMAttributeMinMaxInteger().withMin(1969125414).withMax(1742159588))
            .withMemoryInGiB(new VMAttributeMinMaxDouble().withMin(49.296618686162205D).withMax(46.151559748687454D))
            .withMemoryInGiBPerVCpu(
                new VMAttributeMinMaxDouble().withMin(15.72140906109526D).withMax(33.70355434967512D))
            .withLocalStorageSupport(VMAttributeSupport.EXCLUDED)
            .withLocalStorageInGiB(
                new VMAttributeMinMaxDouble().withMin(34.26097915956968D).withMax(39.601987566482045D))
            .withLocalStorageDiskTypes(Arrays.asList(LocalStorageDiskType.HDD, LocalStorageDiskType.HDD))
            .withDataDiskCount(new VMAttributeMinMaxInteger().withMin(681393134).withMax(264024813))
            .withNetworkInterfaceCount(new VMAttributeMinMaxInteger().withMin(1130701644).withMax(1278778169))
            .withNetworkBandwidthInMbps(
                new VMAttributeMinMaxDouble().withMin(44.56756335924435D).withMax(21.074497607942167D))
            .withRdmaSupport(VMAttributeSupport.EXCLUDED)
            .withRdmaNetworkInterfaceCount(new VMAttributeMinMaxInteger().withMin(1936335434).withMax(1618302294))
            .withAcceleratorSupport(VMAttributeSupport.INCLUDED)
            .withAcceleratorManufacturers(Arrays.asList(AcceleratorManufacturer.NVIDIA, AcceleratorManufacturer.NVIDIA,
                AcceleratorManufacturer.NVIDIA, AcceleratorManufacturer.NVIDIA))
            .withAcceleratorTypes(Arrays.asList(AcceleratorType.FPGA, AcceleratorType.GPU, AcceleratorType.FPGA))
            .withAcceleratorCount(new VMAttributeMinMaxInteger().withMin(2125910534).withMax(1296548216))
            .withVmCategories(Arrays.asList(VMCategory.FPGA_ACCELERATED, VMCategory.GPU_ACCELERATED,
                VMCategory.GPU_ACCELERATED, VMCategory.GENERAL_PURPOSE))
            .withArchitectureTypes(Arrays.asList(ArchitectureType.X64))
            .withCpuManufacturers(Arrays.asList(CpuManufacturer.AMPERE))
            .withBurstableSupport(VMAttributeSupport.EXCLUDED)
            .withExcludedVMSizes(Arrays.asList("kao", "wyiftyhxhur", "k", "tyxolniwpwc"));
        model = BinaryData.fromObject(model).toObject(VMAttributes.class);
        Assertions.assertEquals(1969125414, model.vCpuCount().min());
        Assertions.assertEquals(1742159588, model.vCpuCount().max());
        Assertions.assertEquals(49.296618686162205D, model.memoryInGiB().min());
        Assertions.assertEquals(46.151559748687454D, model.memoryInGiB().max());
        Assertions.assertEquals(15.72140906109526D, model.memoryInGiBPerVCpu().min());
        Assertions.assertEquals(33.70355434967512D, model.memoryInGiBPerVCpu().max());
        Assertions.assertEquals(VMAttributeSupport.EXCLUDED, model.localStorageSupport());
        Assertions.assertEquals(34.26097915956968D, model.localStorageInGiB().min());
        Assertions.assertEquals(39.601987566482045D, model.localStorageInGiB().max());
        Assertions.assertEquals(LocalStorageDiskType.HDD, model.localStorageDiskTypes().get(0));
        Assertions.assertEquals(681393134, model.dataDiskCount().min());
        Assertions.assertEquals(264024813, model.dataDiskCount().max());
        Assertions.assertEquals(1130701644, model.networkInterfaceCount().min());
        Assertions.assertEquals(1278778169, model.networkInterfaceCount().max());
        Assertions.assertEquals(44.56756335924435D, model.networkBandwidthInMbps().min());
        Assertions.assertEquals(21.074497607942167D, model.networkBandwidthInMbps().max());
        Assertions.assertEquals(VMAttributeSupport.EXCLUDED, model.rdmaSupport());
        Assertions.assertEquals(1936335434, model.rdmaNetworkInterfaceCount().min());
        Assertions.assertEquals(1618302294, model.rdmaNetworkInterfaceCount().max());
        Assertions.assertEquals(VMAttributeSupport.INCLUDED, model.acceleratorSupport());
        Assertions.assertEquals(AcceleratorManufacturer.NVIDIA, model.acceleratorManufacturers().get(0));
        Assertions.assertEquals(AcceleratorType.FPGA, model.acceleratorTypes().get(0));
        Assertions.assertEquals(2125910534, model.acceleratorCount().min());
        Assertions.assertEquals(1296548216, model.acceleratorCount().max());
        Assertions.assertEquals(VMCategory.FPGA_ACCELERATED, model.vmCategories().get(0));
        Assertions.assertEquals(ArchitectureType.X64, model.architectureTypes().get(0));
        Assertions.assertEquals(CpuManufacturer.AMPERE, model.cpuManufacturers().get(0));
        Assertions.assertEquals(VMAttributeSupport.EXCLUDED, model.burstableSupport());
        Assertions.assertEquals("kao", model.excludedVMSizes().get(0));
    }
}
