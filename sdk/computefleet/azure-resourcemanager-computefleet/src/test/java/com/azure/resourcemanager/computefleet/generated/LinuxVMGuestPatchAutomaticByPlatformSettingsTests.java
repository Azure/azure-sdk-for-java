// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computefleet.models.LinuxVMGuestPatchAutomaticByPlatformRebootSetting;
import com.azure.resourcemanager.computefleet.models.LinuxVMGuestPatchAutomaticByPlatformSettings;
import org.junit.jupiter.api.Assertions;

public final class LinuxVMGuestPatchAutomaticByPlatformSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LinuxVMGuestPatchAutomaticByPlatformSettings model
            = BinaryData.fromString("{\"rebootSetting\":\"Always\",\"bypassPlatformSafetyChecksOnUserSchedule\":false}")
                .toObject(LinuxVMGuestPatchAutomaticByPlatformSettings.class);
        Assertions.assertEquals(LinuxVMGuestPatchAutomaticByPlatformRebootSetting.ALWAYS, model.rebootSetting());
        Assertions.assertEquals(false, model.bypassPlatformSafetyChecksOnUserSchedule());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LinuxVMGuestPatchAutomaticByPlatformSettings model = new LinuxVMGuestPatchAutomaticByPlatformSettings()
            .withRebootSetting(LinuxVMGuestPatchAutomaticByPlatformRebootSetting.ALWAYS)
            .withBypassPlatformSafetyChecksOnUserSchedule(false);
        model = BinaryData.fromObject(model).toObject(LinuxVMGuestPatchAutomaticByPlatformSettings.class);
        Assertions.assertEquals(LinuxVMGuestPatchAutomaticByPlatformRebootSetting.ALWAYS, model.rebootSetting());
        Assertions.assertEquals(false, model.bypassPlatformSafetyChecksOnUserSchedule());
    }
}
