// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computefleet.models.DiskEncryptionSetParameters;
import com.azure.resourcemanager.computefleet.models.SecurityEncryptionTypes;
import com.azure.resourcemanager.computefleet.models.StorageAccountTypes;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetManagedDiskParameters;
import com.azure.resourcemanager.computefleet.models.VMDiskSecurityProfile;
import org.junit.jupiter.api.Assertions;

public final class VirtualMachineScaleSetManagedDiskParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualMachineScaleSetManagedDiskParameters model = BinaryData.fromString(
            "{\"storageAccountType\":\"Premium_LRS\",\"diskEncryptionSet\":{\"id\":\"qcjm\"},\"securityProfile\":{\"securityEncryptionType\":\"NonPersistedTPM\",\"diskEncryptionSet\":{\"id\":\"qidtqajzyu\"}}}")
            .toObject(VirtualMachineScaleSetManagedDiskParameters.class);
        Assertions.assertEquals(StorageAccountTypes.PREMIUM_LRS, model.storageAccountType());
        Assertions.assertEquals("qcjm", model.diskEncryptionSet().id());
        Assertions.assertEquals(SecurityEncryptionTypes.NON_PERSISTED_TPM,
            model.securityProfile().securityEncryptionType());
        Assertions.assertEquals("qidtqajzyu", model.securityProfile().diskEncryptionSet().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualMachineScaleSetManagedDiskParameters model
            = new VirtualMachineScaleSetManagedDiskParameters().withStorageAccountType(StorageAccountTypes.PREMIUM_LRS)
                .withDiskEncryptionSet(new DiskEncryptionSetParameters().withId("qcjm"))
                .withSecurityProfile(
                    new VMDiskSecurityProfile().withSecurityEncryptionType(SecurityEncryptionTypes.NON_PERSISTED_TPM)
                        .withDiskEncryptionSet(new DiskEncryptionSetParameters().withId("qidtqajzyu")));
        model = BinaryData.fromObject(model).toObject(VirtualMachineScaleSetManagedDiskParameters.class);
        Assertions.assertEquals(StorageAccountTypes.PREMIUM_LRS, model.storageAccountType());
        Assertions.assertEquals("qcjm", model.diskEncryptionSet().id());
        Assertions.assertEquals(SecurityEncryptionTypes.NON_PERSISTED_TPM,
            model.securityProfile().securityEncryptionType());
        Assertions.assertEquals("qidtqajzyu", model.securityProfile().diskEncryptionSet().id());
    }
}
