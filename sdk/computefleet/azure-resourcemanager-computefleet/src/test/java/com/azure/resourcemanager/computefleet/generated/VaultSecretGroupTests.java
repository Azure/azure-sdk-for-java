// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.generated;

import com.azure.core.management.SubResource;
import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computefleet.models.VaultCertificate;
import com.azure.resourcemanager.computefleet.models.VaultSecretGroup;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VaultSecretGroupTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VaultSecretGroup model = BinaryData.fromString(
            "{\"sourceVault\":{\"id\":\"tjelt\"},\"vaultCertificates\":[{\"certificateUrl\":\"hugjzzdatqxhoc\",\"certificateStore\":\"eablg\"},{\"certificateUrl\":\"uticndvkaozwyif\",\"certificateStore\":\"hxh\"},{\"certificateUrl\":\"okftyxolniwpwcuk\",\"certificateStore\":\"kgiawxklryplwck\"},{\"certificateUrl\":\"syyp\",\"certificateStore\":\"dhsgcba\"}]}")
            .toObject(VaultSecretGroup.class);
        Assertions.assertEquals("tjelt", model.sourceVault().id());
        Assertions.assertEquals("hugjzzdatqxhoc", model.vaultCertificates().get(0).certificateUrl());
        Assertions.assertEquals("eablg", model.vaultCertificates().get(0).certificateStore());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VaultSecretGroup model
            = new VaultSecretGroup().withSourceVault(new SubResource().withId("tjelt"))
                .withVaultCertificates(Arrays.asList(
                    new VaultCertificate().withCertificateUrl("hugjzzdatqxhoc").withCertificateStore("eablg"),
                    new VaultCertificate().withCertificateUrl("uticndvkaozwyif").withCertificateStore("hxh"),
                    new VaultCertificate().withCertificateUrl("okftyxolniwpwcuk")
                        .withCertificateStore("kgiawxklryplwck"),
                    new VaultCertificate().withCertificateUrl("syyp").withCertificateStore("dhsgcba")));
        model = BinaryData.fromObject(model).toObject(VaultSecretGroup.class);
        Assertions.assertEquals("tjelt", model.sourceVault().id());
        Assertions.assertEquals("hugjzzdatqxhoc", model.vaultCertificates().get(0).certificateUrl());
        Assertions.assertEquals("eablg", model.vaultCertificates().get(0).certificateStore());
    }
}
