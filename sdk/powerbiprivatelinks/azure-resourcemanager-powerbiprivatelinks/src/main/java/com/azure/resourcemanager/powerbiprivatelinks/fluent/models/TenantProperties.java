// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbiprivatelinks.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** TenantProperties. */
@Fluent
public final class TenantProperties {
    /*
     * Specifies the tenant id of the resource.
     */
    @JsonProperty(value = "tenantId")
    private String tenantId;

    /*
     * Specifies the private endpoint connections of the resource.
     */
    @JsonProperty(value = "privateEndpointConnections")
    private List<PrivateEndpointConnectionInner> privateEndpointConnections;

    /** Creates an instance of TenantProperties class. */
    public TenantProperties() {
    }

    /**
     * Get the tenantId property: Specifies the tenant id of the resource.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: Specifies the tenant id of the resource.
     *
     * @param tenantId the tenantId value to set.
     * @return the TenantProperties object itself.
     */
    public TenantProperties withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the privateEndpointConnections property: Specifies the private endpoint connections of the resource.
     *
     * @return the privateEndpointConnections value.
     */
    public List<PrivateEndpointConnectionInner> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }

    /**
     * Set the privateEndpointConnections property: Specifies the private endpoint connections of the resource.
     *
     * @param privateEndpointConnections the privateEndpointConnections value to set.
     * @return the TenantProperties object itself.
     */
    public TenantProperties withPrivateEndpointConnections(
        List<PrivateEndpointConnectionInner> privateEndpointConnections) {
        this.privateEndpointConnections = privateEndpointConnections;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (privateEndpointConnections() != null) {
            privateEndpointConnections().forEach(e -> e.validate());
        }
    }
}
