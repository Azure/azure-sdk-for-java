// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbiprivatelinks.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** AsyncOperationDetail. */
@Fluent
public final class AsyncOperationDetailInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AsyncOperationDetailInner.class);

    /*
     * The operation id.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * The operation name.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The operation status.
     */
    @JsonProperty(value = "status")
    private String status;

    /*
     * The operation start time.
     */
    @JsonProperty(value = "startTime")
    private String startTime;

    /*
     * The operation end time.
     */
    @JsonProperty(value = "endTime")
    private String endTime;

    /*
     * The error.
     */
    @JsonProperty(value = "error")
    private ManagementError error;

    /**
     * Get the id property: The operation id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: The operation id.
     *
     * @param id the id value to set.
     * @return the AsyncOperationDetailInner object itself.
     */
    public AsyncOperationDetailInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: The operation name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The operation name.
     *
     * @param name the name value to set.
     * @return the AsyncOperationDetailInner object itself.
     */
    public AsyncOperationDetailInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the status property: The operation status.
     *
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: The operation status.
     *
     * @param status the status value to set.
     * @return the AsyncOperationDetailInner object itself.
     */
    public AsyncOperationDetailInner withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the startTime property: The operation start time.
     *
     * @return the startTime value.
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: The operation start time.
     *
     * @param startTime the startTime value to set.
     * @return the AsyncOperationDetailInner object itself.
     */
    public AsyncOperationDetailInner withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the endTime property: The operation end time.
     *
     * @return the endTime value.
     */
    public String endTime() {
        return this.endTime;
    }

    /**
     * Set the endTime property: The operation end time.
     *
     * @param endTime the endTime value to set.
     * @return the AsyncOperationDetailInner object itself.
     */
    public AsyncOperationDetailInner withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Get the error property: The error.
     *
     * @return the error value.
     */
    public ManagementError error() {
        return this.error;
    }

    /**
     * Set the error property: The error.
     *
     * @param error the error value to set.
     * @return the AsyncOperationDetailInner object itself.
     */
    public AsyncOperationDetailInner withError(ManagementError error) {
        this.error = error;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
