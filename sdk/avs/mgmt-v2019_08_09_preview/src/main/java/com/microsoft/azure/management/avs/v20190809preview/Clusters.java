/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.avs.v2019_08_09_preview;

import com.microsoft.azure.ListOperationCallback;
import com.microsoft.azure.management.avs.v20190809preview.models.ApiErrorException;
import com.microsoft.azure.management.avs.v20190809preview.models.Cluster;
import com.microsoft.azure.Page;
import com.microsoft.azure.PagedList;
import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceFuture;
import com.microsoft.rest.ServiceResponse;
import java.io.IOException;
import java.util.List;
import rx.Observable;

/**
 * An instance of this class provides access to all the operations defined
 * in Clusters.
 */
public interface Clusters {
    /**
     * List clusters in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ApiErrorException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the PagedList&lt;Cluster&gt; object if successful.
     */
    PagedList<Cluster> list(final String resourceGroupName, final String privateCloudName);

    /**
     * List clusters in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<Cluster>> listAsync(final String resourceGroupName, final String privateCloudName, final ListOperationCallback<Cluster> serviceCallback);

    /**
     * List clusters in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;Cluster&gt; object
     */
    Observable<Page<Cluster>> listAsync(final String resourceGroupName, final String privateCloudName);

    /**
     * List clusters in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;Cluster&gt; object
     */
    Observable<ServiceResponse<Page<Cluster>>> listWithServiceResponseAsync(final String resourceGroupName, final String privateCloudName);

    /**
     * Get a cluster by name in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ApiErrorException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the Cluster object if successful.
     */
    Cluster get(String resourceGroupName, String privateCloudName, String clusterName);

    /**
     * Get a cluster by name in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<Cluster> getAsync(String resourceGroupName, String privateCloudName, String clusterName, final ServiceCallback<Cluster> serviceCallback);

    /**
     * Get a cluster by name in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the Cluster object
     */
    Observable<Cluster> getAsync(String resourceGroupName, String privateCloudName, String clusterName);

    /**
     * Get a cluster by name in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the Cluster object
     */
    Observable<ServiceResponse<Cluster>> getWithServiceResponseAsync(String resourceGroupName, String privateCloudName, String clusterName);

    /**
     * Create or update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName The name of the private cloud.
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ApiErrorException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the Cluster object if successful.
     */
    Cluster createOrUpdate(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Create or update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName The name of the private cloud.
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in the private cloud
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<Cluster> createOrUpdateAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster, final ServiceCallback<Cluster> serviceCallback);

    /**
     * Create or update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName The name of the private cloud.
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the Cluster object
     */
    Observable<Cluster> createOrUpdateAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Create or update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName The name of the private cloud.
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the Cluster object
     */
    Observable<ServiceResponse<Cluster>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Create or update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName The name of the private cloud.
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ApiErrorException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the Cluster object if successful.
     */
    Cluster beginCreateOrUpdate(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Create or update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName The name of the private cloud.
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in the private cloud
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<Cluster> beginCreateOrUpdateAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster, final ServiceCallback<Cluster> serviceCallback);

    /**
     * Create or update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName The name of the private cloud.
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the Cluster object
     */
    Observable<Cluster> beginCreateOrUpdateAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Create or update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName The name of the private cloud.
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the Cluster object
     */
    Observable<ServiceResponse<Cluster>> beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in a private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ApiErrorException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the Cluster object if successful.
     */
    Cluster update(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in a private cloud
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<Cluster> updateAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster, final ServiceCallback<Cluster> serviceCallback);

    /**
     * Update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in a private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the Cluster object
     */
    Observable<Cluster> updateAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in a private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the Cluster object
     */
    Observable<ServiceResponse<Cluster>> updateWithServiceResponseAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in a private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ApiErrorException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the Cluster object if successful.
     */
    Cluster beginUpdate(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in a private cloud
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<Cluster> beginUpdateAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster, final ServiceCallback<Cluster> serviceCallback);

    /**
     * Update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in a private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the Cluster object
     */
    Observable<Cluster> beginUpdateAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Update a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param cluster A cluster in a private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the Cluster object
     */
    Observable<ServiceResponse<Cluster>> beginUpdateWithServiceResponseAsync(String resourceGroupName, String privateCloudName, String clusterName, Cluster cluster);

    /**
     * Delete a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ApiErrorException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     */
    void delete(String resourceGroupName, String privateCloudName, String clusterName);

    /**
     * Delete a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<Void> deleteAsync(String resourceGroupName, String privateCloudName, String clusterName, final ServiceCallback<Void> serviceCallback);

    /**
     * Delete a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceResponse} object if successful.
     */
    Observable<Void> deleteAsync(String resourceGroupName, String privateCloudName, String clusterName);

    /**
     * Delete a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceResponse} object if successful.
     */
    Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String privateCloudName, String clusterName);

    /**
     * Delete a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ApiErrorException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     */
    void beginDelete(String resourceGroupName, String privateCloudName, String clusterName);

    /**
     * Delete a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String privateCloudName, String clusterName, final ServiceCallback<Void> serviceCallback);

    /**
     * Delete a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceResponse} object if successful.
     */
    Observable<Void> beginDeleteAsync(String resourceGroupName, String privateCloudName, String clusterName);

    /**
     * Delete a cluster in a private cloud.
     *
     * @param resourceGroupName Name of the resource group within the Azure subscription
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceResponse} object if successful.
     */
    Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String privateCloudName, String clusterName);

    /**
     * List clusters in a private cloud.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ApiErrorException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the PagedList&lt;Cluster&gt; object if successful.
     */
    PagedList<Cluster> listNext(final String nextPageLink);

    /**
     * List clusters in a private cloud.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param serviceFuture the ServiceFuture object tracking the Retrofit calls
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<Cluster>> listNextAsync(final String nextPageLink, final ServiceFuture<List<Cluster>> serviceFuture, final ListOperationCallback<Cluster> serviceCallback);

    /**
     * List clusters in a private cloud.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;Cluster&gt; object
     */
    Observable<Page<Cluster>> listNextAsync(final String nextPageLink);

    /**
     * List clusters in a private cloud.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;Cluster&gt; object
     */
    Observable<ServiceResponse<Page<Cluster>>> listNextWithServiceResponseAsync(final String nextPageLink);

}
