// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.AffinityStrength;
import com.azure.resourcemanager.avs.models.AffinityType;
import com.azure.resourcemanager.avs.models.AzureHybridBenefitType;
import com.azure.resourcemanager.avs.models.PlacementPolicyState;
import com.azure.resourcemanager.avs.models.VmHostPlacementPolicyProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VmHostPlacementPolicyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VmHostPlacementPolicyProperties model = BinaryData.fromString(
            "{\"type\":\"VmHost\",\"vmMembers\":[\"wr\",\"ehwagoh\",\"uffkmrqemvvh\"],\"hostMembers\":[\"tdrjfutacoebj\"],\"affinityType\":\"AntiAffinity\",\"affinityStrength\":\"Must\",\"azureHybridBenefitType\":\"None\",\"state\":\"Enabled\",\"displayName\":\"wcpmguaadraufac\",\"provisioningState\":\"Succeeded\"}")
            .toObject(VmHostPlacementPolicyProperties.class);
        Assertions.assertEquals(PlacementPolicyState.ENABLED, model.state());
        Assertions.assertEquals("wcpmguaadraufac", model.displayName());
        Assertions.assertEquals("wr", model.vmMembers().get(0));
        Assertions.assertEquals("tdrjfutacoebj", model.hostMembers().get(0));
        Assertions.assertEquals(AffinityType.ANTI_AFFINITY, model.affinityType());
        Assertions.assertEquals(AffinityStrength.MUST, model.affinityStrength());
        Assertions.assertEquals(AzureHybridBenefitType.NONE, model.azureHybridBenefitType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VmHostPlacementPolicyProperties model
            = new VmHostPlacementPolicyProperties().withState(PlacementPolicyState.ENABLED)
                .withDisplayName("wcpmguaadraufac")
                .withVmMembers(Arrays.asList("wr", "ehwagoh", "uffkmrqemvvh"))
                .withHostMembers(Arrays.asList("tdrjfutacoebj"))
                .withAffinityType(AffinityType.ANTI_AFFINITY)
                .withAffinityStrength(AffinityStrength.MUST)
                .withAzureHybridBenefitType(AzureHybridBenefitType.NONE);
        model = BinaryData.fromObject(model).toObject(VmHostPlacementPolicyProperties.class);
        Assertions.assertEquals(PlacementPolicyState.ENABLED, model.state());
        Assertions.assertEquals("wcpmguaadraufac", model.displayName());
        Assertions.assertEquals("wr", model.vmMembers().get(0));
        Assertions.assertEquals("tdrjfutacoebj", model.hostMembers().get(0));
        Assertions.assertEquals(AffinityType.ANTI_AFFINITY, model.affinityType());
        Assertions.assertEquals(AffinityStrength.MUST, model.affinityStrength());
        Assertions.assertEquals(AzureHybridBenefitType.NONE, model.azureHybridBenefitType());
    }
}
