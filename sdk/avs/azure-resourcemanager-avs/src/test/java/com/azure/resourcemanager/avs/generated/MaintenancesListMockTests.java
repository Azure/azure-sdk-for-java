// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Maintenance;
import com.azure.resourcemanager.avs.models.MaintenanceStateName;
import com.azure.resourcemanager.avs.models.MaintenanceStatusFilter;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MaintenancesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"component\":\"VCSA\",\"displayName\":\"mjsmwr\",\"clusterId\":1712169364,\"infoLink\":\"xfzzzwyjafitlhgu\",\"impact\":\"uchlgmltx\",\"scheduledByMicrosoft\":false,\"state\":{\"name\":\"InProgress\",\"message\":\"sgzv\",\"startedAt\":\"2021-05-04T04:08:29Z\",\"endedAt\":\"2021-08-22T06:37:05Z\"},\"scheduledStartTime\":\"2021-02-08T10:28:39Z\",\"estimatedDurationInMinutes\":6814533521400429806,\"provisioningState\":\"Succeeded\",\"operations\":[{\"kind\":\"MaintenanceManagementOperation\"},{\"kind\":\"MaintenanceManagementOperation\"},{\"kind\":\"MaintenanceManagementOperation\"},{\"kind\":\"MaintenanceManagementOperation\"}],\"maintenanceReadiness\":{\"type\":\"Preflight\",\"status\":\"DataNotAvailable\",\"message\":\"mxq\",\"failedChecks\":[{\"name\":\"p\",\"impactedResources\":[{},{}]},{\"name\":\"t\",\"impactedResources\":[{},{},{}]}],\"lastUpdated\":\"2021-03-01T04:34:23Z\"}},\"id\":\"vl\",\"name\":\"jchcsrlzknmzla\",\"type\":\"rupdwvnphcnzq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Maintenance> response = manager.maintenances()
            .list("lxrzvhqjwtr", "tgvgzp", MaintenanceStateName.NOT_SCHEDULED, MaintenanceStatusFilter.ACTIVE,
                OffsetDateTime.parse("2021-06-27T16:49:11Z"), OffsetDateTime.parse("2021-06-04T02:53:26Z"),
                com.azure.core.util.Context.NONE);

    }
}
