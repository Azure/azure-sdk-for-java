// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.ScriptExecutionProperties;
import com.azure.resourcemanager.avs.models.ScriptExecutionParameter;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ScriptExecutionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScriptExecutionProperties model = BinaryData.fromString(
            "{\"scriptCmdletId\":\"eoybfhjxakvvjgs\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"dilmyww\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"kxn\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"edabgyvudtjue\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"bcihxuuwhc\"}],\"failureReason\":\"xccybvpa\",\"timeout\":\"akkud\",\"retention\":\"xgwjplmagstcyoh\",\"submittedAt\":\"2021-07-05T16:33:29Z\",\"startedAt\":\"2021-11-14T02:06:38Z\",\"finishedAt\":\"2021-05-12T18:54:52Z\",\"provisioningState\":\"Succeeded\",\"output\":[\"ogsjkmnwqjno\",\"aiy\",\"ddviacegfnmntfpm\"],\"namedOutputs\":{\"vvbalx\":\"datamfnczd\",\"chp\":\"datal\",\"evwrdnhfuk\":\"datadb\",\"fcvlerch\":\"datavsjcswsmystuluqy\"},\"information\":[\"mfpjbabw\"],\"warnings\":[\"cxsspuunnoxyh\",\"xgqddrih\",\"fhoqca\",\"ewda\"],\"errors\":[\"jvlpjxxkzbr\",\"sgeivsiy\"]}")
            .toObject(ScriptExecutionProperties.class);
        Assertions.assertEquals("eoybfhjxakvvjgs", model.scriptCmdletId());
        Assertions.assertEquals("dilmyww", model.parameters().get(0).name());
        Assertions.assertEquals("kxn", model.hiddenParameters().get(0).name());
        Assertions.assertEquals("xccybvpa", model.failureReason());
        Assertions.assertEquals("akkud", model.timeout());
        Assertions.assertEquals("xgwjplmagstcyoh", model.retention());
        Assertions.assertEquals("ogsjkmnwqjno", model.output().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScriptExecutionProperties model = new ScriptExecutionProperties().withScriptCmdletId("eoybfhjxakvvjgs")
            .withParameters(Arrays.asList(new ScriptExecutionParameter().withName("dilmyww")))
            .withHiddenParameters(Arrays.asList(new ScriptExecutionParameter().withName("kxn"),
                new ScriptExecutionParameter().withName("edabgyvudtjue"),
                new ScriptExecutionParameter().withName("bcihxuuwhc")))
            .withFailureReason("xccybvpa")
            .withTimeout("akkud")
            .withRetention("xgwjplmagstcyoh")
            .withOutput(Arrays.asList("ogsjkmnwqjno", "aiy", "ddviacegfnmntfpm"))
            .withNamedOutputs(mapOf("vvbalx", "datamfnczd", "chp", "datal", "evwrdnhfuk", "datadb", "fcvlerch",
                "datavsjcswsmystuluqy"));
        model = BinaryData.fromObject(model).toObject(ScriptExecutionProperties.class);
        Assertions.assertEquals("eoybfhjxakvvjgs", model.scriptCmdletId());
        Assertions.assertEquals("dilmyww", model.parameters().get(0).name());
        Assertions.assertEquals("kxn", model.hiddenParameters().get(0).name());
        Assertions.assertEquals("xccybvpa", model.failureReason());
        Assertions.assertEquals("akkud", model.timeout());
        Assertions.assertEquals("xgwjplmagstcyoh", model.retention());
        Assertions.assertEquals("ogsjkmnwqjno", model.output().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
