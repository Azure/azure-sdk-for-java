// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsServiceUpdate;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServiceUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceUpdate model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"ked\",\"dnsServiceIp\":\"trwyhqmib\",\"defaultDnsZone\":\"hwit\",\"fqdnZones\":[\"pyy\",\"pcdpumnz\",\"mwzn\",\"abikns\"],\"logLevel\":\"DEBUG\",\"status\":\"SUCCESS\",\"provisioningState\":\"Failed\",\"revision\":47198303661040179}}")
            .toObject(WorkloadNetworkDnsServiceUpdate.class);
        Assertions.assertEquals("ked", model.displayName());
        Assertions.assertEquals("trwyhqmib", model.dnsServiceIp());
        Assertions.assertEquals("hwit", model.defaultDnsZone());
        Assertions.assertEquals("pyy", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(47198303661040179L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceUpdate model = new WorkloadNetworkDnsServiceUpdate().withDisplayName("ked")
            .withDnsServiceIp("trwyhqmib")
            .withDefaultDnsZone("hwit")
            .withFqdnZones(Arrays.asList("pyy", "pcdpumnz", "mwzn", "abikns"))
            .withLogLevel(DnsServiceLogLevelEnum.DEBUG)
            .withRevision(47198303661040179L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceUpdate.class);
        Assertions.assertEquals("ked", model.displayName());
        Assertions.assertEquals("trwyhqmib", model.dnsServiceIp());
        Assertions.assertEquals("hwit", model.defaultDnsZone());
        Assertions.assertEquals("pyy", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(47198303661040179L, model.revision());
    }
}
