// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsServiceUpdate;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServiceUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceUpdate model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"wae\",\"dnsServiceIp\":\"uzkopbminrfd\",\"defaultDnsZone\":\"yuhhziu\",\"fqdnZones\":[\"ozbhdmsmlmzq\",\"oftrmaequia\",\"xicslfao\",\"z\"],\"logLevel\":\"INFO\",\"status\":\"SUCCESS\",\"provisioningState\":\"Failed\",\"revision\":6031076886992856914}}")
            .toObject(WorkloadNetworkDnsServiceUpdate.class);
        Assertions.assertEquals("wae", model.displayName());
        Assertions.assertEquals("uzkopbminrfd", model.dnsServiceIp());
        Assertions.assertEquals("yuhhziu", model.defaultDnsZone());
        Assertions.assertEquals("ozbhdmsmlmzq", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.INFO, model.logLevel());
        Assertions.assertEquals(6031076886992856914L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceUpdate model = new WorkloadNetworkDnsServiceUpdate().withDisplayName("wae")
            .withDnsServiceIp("uzkopbminrfd")
            .withDefaultDnsZone("yuhhziu")
            .withFqdnZones(Arrays.asList("ozbhdmsmlmzq", "oftrmaequia", "xicslfao", "z"))
            .withLogLevel(DnsServiceLogLevelEnum.INFO)
            .withRevision(6031076886992856914L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceUpdate.class);
        Assertions.assertEquals("wae", model.displayName());
        Assertions.assertEquals("uzkopbminrfd", model.dnsServiceIp());
        Assertions.assertEquals("yuhhziu", model.defaultDnsZone());
        Assertions.assertEquals("ozbhdmsmlmzq", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.INFO, model.logLevel());
        Assertions.assertEquals(6031076886992856914L, model.revision());
    }
}
