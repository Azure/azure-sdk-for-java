// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegment;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksCreateSegmentMockTests {
    @Test
    public void testCreateSegment() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"hslhca\",\"connectedGateway\":\"u\",\"subnet\":{\"dhcpRanges\":[\"wfmvigorqjbt\",\"zhraglkafh\",\"n\"],\"gatewayAddress\":\"ujeickp\"},\"portVif\":[{\"portName\":\"opmx\"},{\"portName\":\"nwcl\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Succeeded\",\"revision\":6137899211514369318},\"id\":\"lfmk\",\"name\":\"scazuawxtzxpu\",\"type\":\"mwabzxrvxc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadNetworkSegment response = manager.workloadNetworks()
            .defineSegment("jqg")
            .withExistingPrivateCloud("svtui", "zh")
            .withDisplayName("hm")
            .withConnectedGateway("qryxyn")
            .withSubnet(new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("dpsovwxznptgo"))
                .withGatewayAddress("ybbabpfhvfsl"))
            .withRevision(4417408561997868139L)
            .create();

        Assertions.assertEquals("hslhca", response.displayName());
        Assertions.assertEquals("u", response.connectedGateway());
        Assertions.assertEquals("wfmvigorqjbt", response.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("ujeickp", response.subnet().gatewayAddress());
        Assertions.assertEquals(6137899211514369318L, response.revision());
    }
}
