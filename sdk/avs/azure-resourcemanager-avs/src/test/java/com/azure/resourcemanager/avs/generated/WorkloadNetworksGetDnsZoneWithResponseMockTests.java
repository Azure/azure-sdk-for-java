// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsZone;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksGetDnsZoneWithResponseMockTests {
    @Test
    public void testGetDnsZoneWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"juscvsfx\",\"domain\":[\"tmgxuupbezqcc\",\"drtc\",\"ukdqkkyihztg\",\"qm\"],\"dnsServerIps\":[\"gwldo\",\"chillcecf\",\"huwaoaguhic\",\"llizs\"],\"sourceIp\":\"csjvhrwef\",\"dnsServices\":2091546182568270804,\"provisioningState\":\"Succeeded\",\"revision\":4430853762890090237},\"id\":\"s\",\"name\":\"haep\",\"type\":\"a\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkloadNetworkDnsZone response = manager.workloadNetworks()
            .getDnsZoneWithResponse("mghihp", "ecmslclbl", "jxl", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("juscvsfx", response.displayName());
        Assertions.assertEquals("tmgxuupbezqcc", response.domain().get(0));
        Assertions.assertEquals("gwldo", response.dnsServerIps().get(0));
        Assertions.assertEquals("csjvhrwef", response.sourceIp());
        Assertions.assertEquals(2091546182568270804L, response.dnsServices());
        Assertions.assertEquals(4430853762890090237L, response.revision());
    }
}
