// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsZone;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksGetDnsZoneWithResponseMockTests {
    @Test
    public void testGetDnsZoneWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"uztcktyhjtqed\",\"domain\":[\"ulwm\",\"rqzz\",\"rjvpglydzgkrvqee\",\"toepryu\"],\"dnsServerIps\":[\"ytp\",\"dmovzvfva\",\"wzqa\"],\"sourceIp\":\"lgzurig\",\"dnsServices\":4544236688410248601,\"provisioningState\":\"Updating\",\"revision\":442627726134054774},\"id\":\"okpvzm\",\"name\":\"qtmldgxo\",\"type\":\"firclnpkciayz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadNetworkDnsZone response = manager.workloadNetworks()
            .getDnsZoneWithResponse("bkkd", "flvestmjlxrrilo", "apeewchpxlkt", "kuziycsle",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("uztcktyhjtqed", response.displayName());
        Assertions.assertEquals("ulwm", response.domain().get(0));
        Assertions.assertEquals("ytp", response.dnsServerIps().get(0));
        Assertions.assertEquals("lgzurig", response.sourceIp());
        Assertions.assertEquals(4544236688410248601L, response.dnsServices());
        Assertions.assertEquals(442627726134054774L, response.revision());
    }
}
