// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsZone;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksGetDnsZoneWithResponseMockTests {
    @Test
    public void testGetDnsZoneWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"ajoylhjl\",\"domain\":[\"y\",\"primr\"],\"dnsServerIps\":[\"teecjmeislst\",\"asylwx\"],\"sourceIp\":\"aumweoohguufu\",\"dnsServices\":2748183930947748817,\"provisioningState\":\"Updating\",\"revision\":7433692398956601722},\"id\":\"zolbaemwmdxmebw\",\"name\":\"scjpahlxv\",\"type\":\"a\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadNetworkDnsZone response = manager.workloadNetworks()
            .getDnsZoneWithResponse("a", "llibphbqzmizak", "kan", "jpdn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ajoylhjl", response.displayName());
        Assertions.assertEquals("y", response.domain().get(0));
        Assertions.assertEquals("teecjmeislst", response.dnsServerIps().get(0));
        Assertions.assertEquals("aumweoohguufu", response.sourceIp());
        Assertions.assertEquals(2748183930947748817L, response.dnsServices());
        Assertions.assertEquals(7433692398956601722L, response.revision());
    }
}
