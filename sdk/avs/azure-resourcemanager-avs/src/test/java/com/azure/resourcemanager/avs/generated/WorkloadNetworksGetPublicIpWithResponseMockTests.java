// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPublicIp;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksGetPublicIpWithResponseMockTests {
    @Test
    public void testGetPublicIpWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"jg\",\"numberOfPublicIPs\":8699123673474583360,\"publicIPBlock\":\"oguyaip\",\"provisioningState\":\"Updating\"},\"id\":\"ault\",\"name\":\"ijjumfq\",\"type\":\"azlnqnmcjngzqdqx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkloadNetworkPublicIp response = manager.workloadNetworks()
            .getPublicIpWithResponse("wexjkmfxapjwogq", "nobpudcdabtqwpw", "awbzasqb", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jg", response.displayName());
        Assertions.assertEquals(8699123673474583360L, response.numberOfPublicIPs());
    }
}
