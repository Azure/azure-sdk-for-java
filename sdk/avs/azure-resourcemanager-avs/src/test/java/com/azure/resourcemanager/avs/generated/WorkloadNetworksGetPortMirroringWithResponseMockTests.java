// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPortMirroring;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksGetPortMirroringWithResponseMockTests {
    @Test
    public void testGetPortMirroringWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"ndo\",\"direction\":\"BIDIRECTIONAL\",\"source\":\"ltoormkfqlwxldyk\",\"destination\":\"sy\",\"status\":\"FAILURE\",\"provisioningState\":\"Updating\",\"revision\":5192971092079574246},\"id\":\"bmjk\",\"name\":\"ibjgsjjxxahm\",\"type\":\"nadzyq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkloadNetworkPortMirroring response = manager.workloadNetworks()
            .getPortMirroringWithResponse("ffg", "lukkutvlxhrpqhvm", "lcouqehbhbcdszir",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ndo", response.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.BIDIRECTIONAL, response.direction());
        Assertions.assertEquals("ltoormkfqlwxldyk", response.source());
        Assertions.assertEquals("sy", response.destination());
        Assertions.assertEquals(5192971092079574246L, response.revision());
    }
}
