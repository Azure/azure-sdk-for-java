// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsZoneUpdate;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneUpdate model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"uhqlbjbsybbqwrvt\",\"domain\":[\"mfpgv\",\"pip\"],\"dnsServerIps\":[\"thaqfxssmwu\"],\"sourceIp\":\"bdsrez\",\"dnsServices\":187520251,\"provisioningState\":\"Updating\",\"revision\":222195184885469593}}")
            .toObject(WorkloadNetworkDnsZoneUpdate.class);
        Assertions.assertEquals("uhqlbjbsybbqwrvt", model.displayName());
        Assertions.assertEquals("mfpgv", model.domain().get(0));
        Assertions.assertEquals("thaqfxssmwu", model.dnsServerIps().get(0));
        Assertions.assertEquals("bdsrez", model.sourceIp());
        Assertions.assertEquals(187520251, model.dnsServices());
        Assertions.assertEquals(222195184885469593L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneUpdate model = new WorkloadNetworkDnsZoneUpdate().withDisplayName("uhqlbjbsybbqwrvt")
            .withDomain(Arrays.asList("mfpgv", "pip"))
            .withDnsServerIps(Arrays.asList("thaqfxssmwu"))
            .withSourceIp("bdsrez")
            .withDnsServices(187520251)
            .withRevision(222195184885469593L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneUpdate.class);
        Assertions.assertEquals("uhqlbjbsybbqwrvt", model.displayName());
        Assertions.assertEquals("mfpgv", model.domain().get(0));
        Assertions.assertEquals("thaqfxssmwu", model.dnsServerIps().get(0));
        Assertions.assertEquals("bdsrez", model.sourceIp());
        Assertions.assertEquals(187520251, model.dnsServices());
        Assertions.assertEquals(222195184885469593L, model.revision());
    }
}
