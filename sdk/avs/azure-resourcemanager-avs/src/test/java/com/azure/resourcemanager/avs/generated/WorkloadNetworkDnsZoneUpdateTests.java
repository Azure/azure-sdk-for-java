// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsZoneUpdate;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneUpdate model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"r\",\"domain\":[\"dgmfpgvmpipasl\",\"haq\",\"x\"],\"dnsServerIps\":[\"wutwbdsre\",\"pdrhne\",\"yowqkdwytisibir\"],\"sourceIp\":\"pikpz\",\"dnsServices\":2049479560,\"provisioningState\":\"Updating\",\"revision\":3967363356786779271}}")
            .toObject(WorkloadNetworkDnsZoneUpdate.class);
        Assertions.assertEquals("r", model.displayName());
        Assertions.assertEquals("dgmfpgvmpipasl", model.domain().get(0));
        Assertions.assertEquals("wutwbdsre", model.dnsServerIps().get(0));
        Assertions.assertEquals("pikpz", model.sourceIp());
        Assertions.assertEquals(2049479560, model.dnsServices());
        Assertions.assertEquals(3967363356786779271L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneUpdate model = new WorkloadNetworkDnsZoneUpdate().withDisplayName("r")
            .withDomain(Arrays.asList("dgmfpgvmpipasl", "haq", "x"))
            .withDnsServerIps(Arrays.asList("wutwbdsre", "pdrhne", "yowqkdwytisibir"))
            .withSourceIp("pikpz")
            .withDnsServices(2049479560)
            .withRevision(3967363356786779271L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneUpdate.class);
        Assertions.assertEquals("r", model.displayName());
        Assertions.assertEquals("dgmfpgvmpipasl", model.domain().get(0));
        Assertions.assertEquals("wutwbdsre", model.dnsServerIps().get(0));
        Assertions.assertEquals("pikpz", model.sourceIp());
        Assertions.assertEquals(2049479560, model.dnsServices());
        Assertions.assertEquals(3967363356786779271L, model.revision());
    }
}
