// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsZoneUpdate;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneUpdate model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"jijpxac\",\"domain\":[\"dfnbyxbaaabjyv\",\"yffimrzrtuzqogs\",\"xnevfdnwn\"],\"dnsServerIps\":[\"wzsyyceuzs\",\"i\",\"judpfrxt\",\"thzvaytdwkqbrqu\"],\"sourceIp\":\"axhexiilivp\",\"dnsServices\":1539937555,\"provisioningState\":\"Deleting\",\"revision\":6198974522263993191}}")
            .toObject(WorkloadNetworkDnsZoneUpdate.class);
        Assertions.assertEquals("jijpxac", model.displayName());
        Assertions.assertEquals("dfnbyxbaaabjyv", model.domain().get(0));
        Assertions.assertEquals("wzsyyceuzs", model.dnsServerIps().get(0));
        Assertions.assertEquals("axhexiilivp", model.sourceIp());
        Assertions.assertEquals(1539937555, model.dnsServices());
        Assertions.assertEquals(6198974522263993191L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneUpdate model = new WorkloadNetworkDnsZoneUpdate().withDisplayName("jijpxac")
            .withDomain(Arrays.asList("dfnbyxbaaabjyv", "yffimrzrtuzqogs", "xnevfdnwn"))
            .withDnsServerIps(Arrays.asList("wzsyyceuzs", "i", "judpfrxt", "thzvaytdwkqbrqu"))
            .withSourceIp("axhexiilivp")
            .withDnsServices(1539937555)
            .withRevision(6198974522263993191L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneUpdate.class);
        Assertions.assertEquals("jijpxac", model.displayName());
        Assertions.assertEquals("dfnbyxbaaabjyv", model.domain().get(0));
        Assertions.assertEquals("wzsyyceuzs", model.dnsServerIps().get(0));
        Assertions.assertEquals("axhexiilivp", model.sourceIp());
        Assertions.assertEquals(1539937555, model.dnsServices());
        Assertions.assertEquals(6198974522263993191L, model.revision());
    }
}
