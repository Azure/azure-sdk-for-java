// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Cluster;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"clusterSize\":892408076,\"provisioningState\":\"Canceled\",\"clusterId\":1073428271,\"hosts\":[\"cfdmmcpugmehqe\",\"vufhbzehewhoq\",\"nlbqnbldxeaclg\"],\"vsanDatastoreName\":\"horimkr\"},\"sku\":{\"name\":\"r\",\"tier\":\"Free\",\"size\":\"cso\",\"family\":\"dpuviyf\",\"capacity\":901847104},\"id\":\"eolhbhlvbmx\",\"name\":\"qi\",\"type\":\"s\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Cluster response = manager.clusters()
            .getWithResponse("oshbragapyy", "mfsvbpav", "opfppdbwnupgah", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("r", response.sku().name());
        Assertions.assertEquals(SkuTier.FREE, response.sku().tier());
        Assertions.assertEquals("cso", response.sku().size());
        Assertions.assertEquals("dpuviyf", response.sku().family());
        Assertions.assertEquals(901847104, response.sku().capacity());
        Assertions.assertEquals(892408076, response.clusterSize());
        Assertions.assertEquals("cfdmmcpugmehqe", response.hosts().get(0));
        Assertions.assertEquals("horimkr", response.vsanDatastoreName());
    }
}
