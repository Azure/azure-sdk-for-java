// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentUpdate;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentUpdate model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"cmgyud\",\"connectedGateway\":\"tlmoyrx\",\"subnet\":{\"dhcpRanges\":[\"dw\"],\"gatewayAddress\":\"ntxhdzhlrqjbhck\"},\"portVif\":[{\"portName\":\"rxsbkyvp\"},{\"portName\":\"anuzbpzkafkuw\"},{\"portName\":\"rnwb\"}],\"status\":\"SUCCESS\",\"provisioningState\":\"Building\",\"revision\":3647688567520643313}}")
            .toObject(WorkloadNetworkSegmentUpdate.class);
        Assertions.assertEquals("cmgyud", model.displayName());
        Assertions.assertEquals("tlmoyrx", model.connectedGateway());
        Assertions.assertEquals("dw", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("ntxhdzhlrqjbhck", model.subnet().gatewayAddress());
        Assertions.assertEquals(3647688567520643313L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentUpdate model = new WorkloadNetworkSegmentUpdate().withDisplayName("cmgyud")
            .withConnectedGateway("tlmoyrx")
            .withSubnet(new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("dw"))
                .withGatewayAddress("ntxhdzhlrqjbhck"))
            .withRevision(3647688567520643313L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentUpdate.class);
        Assertions.assertEquals("cmgyud", model.displayName());
        Assertions.assertEquals("tlmoyrx", model.connectedGateway());
        Assertions.assertEquals("dw", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("ntxhdzhlrqjbhck", model.subnet().gatewayAddress());
        Assertions.assertEquals(3647688567520643313L, model.revision());
    }
}
