// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentUpdate;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentUpdate model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"umvfclu\",\"connectedGateway\":\"vwxnbkfe\",\"subnet\":{\"dhcpRanges\":[\"cy\",\"wzdgirujbzbo\"],\"gatewayAddress\":\"zzbtdcqvpniyujvi\"},\"portVif\":[{\"portName\":\"shfssnrbgyef\"}],\"status\":\"SUCCESS\",\"provisioningState\":\"Succeeded\",\"revision\":8721260312586763684}}")
            .toObject(WorkloadNetworkSegmentUpdate.class);
        Assertions.assertEquals("umvfclu", model.displayName());
        Assertions.assertEquals("vwxnbkfe", model.connectedGateway());
        Assertions.assertEquals("cy", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("zzbtdcqvpniyujvi", model.subnet().gatewayAddress());
        Assertions.assertEquals(8721260312586763684L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentUpdate model = new WorkloadNetworkSegmentUpdate().withDisplayName("umvfclu")
            .withConnectedGateway("vwxnbkfe")
            .withSubnet(new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("cy", "wzdgirujbzbo"))
                .withGatewayAddress("zzbtdcqvpniyujvi"))
            .withRevision(8721260312586763684L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentUpdate.class);
        Assertions.assertEquals("umvfclu", model.displayName());
        Assertions.assertEquals("vwxnbkfe", model.connectedGateway());
        Assertions.assertEquals("cy", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("zzbtdcqvpniyujvi", model.subnet().gatewayAddress());
        Assertions.assertEquals(8721260312586763684L, model.revision());
    }
}
