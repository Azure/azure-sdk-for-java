// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Cluster;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"clusterSize\":331049008,\"provisioningState\":\"Canceled\",\"clusterId\":2026678131,\"hosts\":[\"jzh\",\"izxfpxt\"],\"vsanDatastoreName\":\"scjavftju\"},\"sku\":{\"name\":\"dqazkmtgguwpijra\",\"tier\":\"Premium\",\"size\":\"m\",\"family\":\"hfcf\",\"capacity\":1456716709},\"id\":\"gkn\",\"name\":\"uvyinzqodfvpgs\",\"type\":\"oxgsgbpfgzdjtx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Cluster> response
            = manager.clusters().list("gncxykxhdj", "limmbcxf", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("dqazkmtgguwpijra", response.iterator().next().sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.iterator().next().sku().tier());
        Assertions.assertEquals("m", response.iterator().next().sku().size());
        Assertions.assertEquals("hfcf", response.iterator().next().sku().family());
        Assertions.assertEquals(1456716709, response.iterator().next().sku().capacity());
        Assertions.assertEquals(331049008, response.iterator().next().clusterSize());
        Assertions.assertEquals("jzh", response.iterator().next().hosts().get(0));
        Assertions.assertEquals("scjavftju", response.iterator().next().vsanDatastoreName());
    }
}
