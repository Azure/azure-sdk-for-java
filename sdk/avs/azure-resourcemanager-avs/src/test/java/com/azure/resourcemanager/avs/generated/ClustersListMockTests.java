// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Cluster;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"clusterSize\":608447753,\"provisioningState\":\"Succeeded\",\"clusterId\":1379010451,\"hosts\":[\"bjfu\"],\"vsanDatastoreName\":\"moichdlpnfpubntn\"},\"sku\":{\"name\":\"atzviqsowsaael\",\"tier\":\"Premium\",\"size\":\"cjuhplrvkm\",\"family\":\"wmj\",\"capacity\":1925288663},\"id\":\"ggcvk\",\"name\":\"y\",\"type\":\"izrzb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Cluster> response = manager.clusters().list("hcspo", "aqa", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("atzviqsowsaael", response.iterator().next().sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.iterator().next().sku().tier());
        Assertions.assertEquals("cjuhplrvkm", response.iterator().next().sku().size());
        Assertions.assertEquals("wmj", response.iterator().next().sku().family());
        Assertions.assertEquals(1925288663, response.iterator().next().sku().capacity());
        Assertions.assertEquals(608447753, response.iterator().next().clusterSize());
        Assertions.assertEquals("bjfu", response.iterator().next().hosts().get(0));
        Assertions.assertEquals("moichdlpnfpubntn", response.iterator().next().vsanDatastoreName());
    }
}
