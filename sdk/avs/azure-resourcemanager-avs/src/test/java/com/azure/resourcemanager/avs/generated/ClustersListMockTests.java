// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Cluster;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"clusterSize\":356071455,\"provisioningState\":\"Failed\",\"clusterId\":752629993,\"hosts\":[\"xznptgoeiyb\",\"abpfhvfs\",\"kvntjlrigjkskyri\"],\"vsanDatastoreName\":\"vzidsxwaab\"},\"sku\":{\"name\":\"mifrygznmma\",\"tier\":\"Basic\",\"size\":\"kzobgopxlhsln\",\"family\":\"xieixynllxec\",\"capacity\":2059770888},\"id\":\"jphslhcaw\",\"name\":\"u\",\"type\":\"i\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Cluster> response
            = manager.clusters().list("jqg", "cfhmlrqryxyn", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("mifrygznmma", response.iterator().next().sku().name());
        Assertions.assertEquals(SkuTier.BASIC, response.iterator().next().sku().tier());
        Assertions.assertEquals("kzobgopxlhsln", response.iterator().next().sku().size());
        Assertions.assertEquals("xieixynllxec", response.iterator().next().sku().family());
        Assertions.assertEquals(2059770888, response.iterator().next().sku().capacity());
        Assertions.assertEquals(356071455, response.iterator().next().clusterSize());
        Assertions.assertEquals("xznptgoeiyb", response.iterator().next().hosts().get(0));
        Assertions.assertEquals("vzidsxwaab", response.iterator().next().vsanDatastoreName());
    }
}
