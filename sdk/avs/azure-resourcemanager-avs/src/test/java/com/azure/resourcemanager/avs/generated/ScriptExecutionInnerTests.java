// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.ScriptExecutionInner;
import com.azure.resourcemanager.avs.models.ScriptExecutionParameter;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ScriptExecutionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScriptExecutionInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"scriptCmdletId\":\"abwidfcxsspuun\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"yhkx\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"drihpfhoqcaaewda\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"mdjvlpj\"}],\"failureReason\":\"kzbrmsgeivsiy\",\"timeout\":\"zkdnc\",\"retention\":\"xonbzoggculapz\",\"submittedAt\":\"2021-07-25T18:35:20Z\",\"startedAt\":\"2021-08-05T01:58:35Z\",\"finishedAt\":\"2021-06-21T04:03:02Z\",\"provisioningState\":\"Cancelled\",\"output\":[\"pnylb\",\"uajlyj\"],\"namedOutputs\":{\"zhvfcibyfmowuxr\":\"dataof\",\"xfzwi\":\"datajpvd\",\"xjrk\":\"datavwzjbhyz\"},\"information\":[\"trnegvmnvuqeqvld\",\"pa\"],\"warnings\":[\"bkkd\",\"flvestmjlxrrilo\",\"apeewchpxlkt\",\"kuziycsle\"],\"errors\":[\"uztcktyhjtqed\"]},\"id\":\"gzulwmmrqzzr\",\"name\":\"jvpglydzgk\",\"type\":\"vqeevtoep\"}")
                .toObject(ScriptExecutionInner.class);
        Assertions.assertEquals("abwidfcxsspuun", model.scriptCmdletId());
        Assertions.assertEquals("yhkx", model.parameters().get(0).name());
        Assertions.assertEquals("drihpfhoqcaaewda", model.hiddenParameters().get(0).name());
        Assertions.assertEquals("kzbrmsgeivsiy", model.failureReason());
        Assertions.assertEquals("zkdnc", model.timeout());
        Assertions.assertEquals("xonbzoggculapz", model.retention());
        Assertions.assertEquals("pnylb", model.output().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScriptExecutionInner model =
            new ScriptExecutionInner()
                .withScriptCmdletId("abwidfcxsspuun")
                .withParameters(Arrays.asList(new ScriptExecutionParameter().withName("yhkx")))
                .withHiddenParameters(
                    Arrays
                        .asList(
                            new ScriptExecutionParameter().withName("drihpfhoqcaaewda"),
                            new ScriptExecutionParameter().withName("mdjvlpj")))
                .withFailureReason("kzbrmsgeivsiy")
                .withTimeout("zkdnc")
                .withRetention("xonbzoggculapz")
                .withOutput(Arrays.asList("pnylb", "uajlyj"))
                .withNamedOutputs(mapOf("zhvfcibyfmowuxr", "dataof", "xfzwi", "datajpvd", "xjrk", "datavwzjbhyz"));
        model = BinaryData.fromObject(model).toObject(ScriptExecutionInner.class);
        Assertions.assertEquals("abwidfcxsspuun", model.scriptCmdletId());
        Assertions.assertEquals("yhkx", model.parameters().get(0).name());
        Assertions.assertEquals("drihpfhoqcaaewda", model.hiddenParameters().get(0).name());
        Assertions.assertEquals("kzbrmsgeivsiy", model.failureReason());
        Assertions.assertEquals("zkdnc", model.timeout());
        Assertions.assertEquals("xonbzoggculapz", model.retention());
        Assertions.assertEquals("pnylb", model.output().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
