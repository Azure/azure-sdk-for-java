// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.ScriptExecutionInner;
import com.azure.resourcemanager.avs.models.ScriptExecutionParameter;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ScriptExecutionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScriptExecutionInner model = BinaryData.fromString(
            "{\"properties\":{\"scriptCmdletId\":\"bxvwv\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"lqbhsf\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"lyt\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"blmpewww\"}],\"failureReason\":\"krvrns\",\"timeout\":\"shqjohxcrsbf\",\"retention\":\"asrru\",\"submittedAt\":\"2021-08-23T16:56:34Z\",\"startedAt\":\"2021-07-10T06:08:41Z\",\"finishedAt\":\"2021-03-07T17:24:46Z\",\"provisioningState\":\"Running\",\"output\":[\"gjb\",\"rxbpyb\",\"rfbjf\"],\"namedOutputs\":{\"zbexilzznfqqnvw\":\"datassotftpv\"},\"information\":[\"taruoujmkcj\",\"wqytjrybnwjewgdr\",\"ervnaenqpehi\",\"doy\"],\"warnings\":[\"fthnzdn\",\"sl\"],\"errors\":[\"yq\",\"gynduha\",\"hqlkthumaqo\"]},\"id\":\"gycdu\",\"name\":\"ertgccymva\",\"type\":\"l\"}")
            .toObject(ScriptExecutionInner.class);
        Assertions.assertEquals("bxvwv", model.scriptCmdletId());
        Assertions.assertEquals("lqbhsf", model.parameters().get(0).name());
        Assertions.assertEquals("lyt", model.hiddenParameters().get(0).name());
        Assertions.assertEquals("krvrns", model.failureReason());
        Assertions.assertEquals("shqjohxcrsbf", model.timeout());
        Assertions.assertEquals("asrru", model.retention());
        Assertions.assertEquals("gjb", model.output().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScriptExecutionInner model = new ScriptExecutionInner().withScriptCmdletId("bxvwv")
            .withParameters(Arrays.asList(new ScriptExecutionParameter().withName("lqbhsf")))
            .withHiddenParameters(Arrays.asList(new ScriptExecutionParameter().withName("lyt"),
                new ScriptExecutionParameter().withName("blmpewww")))
            .withFailureReason("krvrns")
            .withTimeout("shqjohxcrsbf")
            .withRetention("asrru")
            .withOutput(Arrays.asList("gjb", "rxbpyb", "rfbjf"))
            .withNamedOutputs(mapOf("zbexilzznfqqnvw", "datassotftpv"));
        model = BinaryData.fromObject(model).toObject(ScriptExecutionInner.class);
        Assertions.assertEquals("bxvwv", model.scriptCmdletId());
        Assertions.assertEquals("lqbhsf", model.parameters().get(0).name());
        Assertions.assertEquals("lyt", model.hiddenParameters().get(0).name());
        Assertions.assertEquals("krvrns", model.failureReason());
        Assertions.assertEquals("shqjohxcrsbf", model.timeout());
        Assertions.assertEquals("asrru", model.retention());
        Assertions.assertEquals("gjb", model.output().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
