// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.ScriptExecutionInner;
import com.azure.resourcemanager.avs.models.ScriptExecutionParameter;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ScriptExecutionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScriptExecutionInner model = BinaryData.fromString(
            "{\"properties\":{\"scriptCmdletId\":\"bnujrywvtylbf\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"urdoi\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"iithtywu\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"xcbihw\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"fdntwjchrdgoih\"}],\"failureReason\":\"mwctondzjluudfd\",\"timeout\":\"wggytsbwtovvt\",\"retention\":\"einqf\",\"submittedAt\":\"2021-05-10T20:16:44Z\",\"startedAt\":\"2021-09-17T22:17:43Z\",\"finishedAt\":\"2021-10-13T18:52:56Z\",\"provisioningState\":\"Canceled\",\"output\":[\"nepttwqmsni\",\"fcdmqnrojlpijn\",\"rxfrddhc\"],\"namedOutputs\":{\"hftwesgog\":\"dataizzronasxiftozqy\",\"sxkkg\":\"datazhonnxkrlgnyhmo\",\"rghxjb\":\"datah\"},\"information\":[\"xvcxgfrpdsofbshr\",\"svbuswdvzyy\",\"ycnunvjsrtk\",\"awnopqgikyzirtxd\"],\"warnings\":[\"zejntps\"],\"errors\":[\"ioilqukrydxtq\",\"ieoxorggufhyaomt\"]},\"id\":\"hhavgrvkffovjz\",\"name\":\"pjbi\",\"type\":\"gjmfxumvfcl\"}")
            .toObject(ScriptExecutionInner.class);
        Assertions.assertEquals("bnujrywvtylbf", model.scriptCmdletId());
        Assertions.assertEquals("urdoi", model.parameters().get(0).name());
        Assertions.assertEquals("fdntwjchrdgoih", model.hiddenParameters().get(0).name());
        Assertions.assertEquals("mwctondzjluudfd", model.failureReason());
        Assertions.assertEquals("wggytsbwtovvt", model.timeout());
        Assertions.assertEquals("einqf", model.retention());
        Assertions.assertEquals("nepttwqmsni", model.output().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScriptExecutionInner model = new ScriptExecutionInner().withScriptCmdletId("bnujrywvtylbf")
            .withParameters(Arrays.asList(new ScriptExecutionParameter().withName("urdoi"),
                new ScriptExecutionParameter().withName("iithtywu"), new ScriptExecutionParameter().withName("xcbihw")))
            .withHiddenParameters(Arrays.asList(new ScriptExecutionParameter().withName("fdntwjchrdgoih")))
            .withFailureReason("mwctondzjluudfd")
            .withTimeout("wggytsbwtovvt")
            .withRetention("einqf")
            .withOutput(Arrays.asList("nepttwqmsni", "fcdmqnrojlpijn", "rxfrddhc"))
            .withNamedOutputs(
                mapOf("hftwesgog", "dataizzronasxiftozqy", "sxkkg", "datazhonnxkrlgnyhmo", "rghxjb", "datah"));
        model = BinaryData.fromObject(model).toObject(ScriptExecutionInner.class);
        Assertions.assertEquals("bnujrywvtylbf", model.scriptCmdletId());
        Assertions.assertEquals("urdoi", model.parameters().get(0).name());
        Assertions.assertEquals("fdntwjchrdgoih", model.hiddenParameters().get(0).name());
        Assertions.assertEquals("mwctondzjluudfd", model.failureReason());
        Assertions.assertEquals("wggytsbwtovvt", model.timeout());
        Assertions.assertEquals("einqf", model.retention());
        Assertions.assertEquals("nepttwqmsni", model.output().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
