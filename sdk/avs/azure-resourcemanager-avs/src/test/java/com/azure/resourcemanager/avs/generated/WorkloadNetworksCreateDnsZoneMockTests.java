// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsZone;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksCreateDnsZoneMockTests {
    @Test
    public void testCreateDnsZone() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"p\",\"domain\":[\"kmkkholvdnd\",\"iauogphuartv\",\"iukyefchnmna\",\"mnxhkxjqirwrweo\"],\"dnsServerIps\":[\"fifhxwrsnew\",\"ozqvbubqmam\"],\"sourceIp\":\"ycxhxzgaztta\",\"dnsServices\":4188257113856333497,\"provisioningState\":\"Succeeded\",\"revision\":7627151834870513384},\"id\":\"pubowsepdfg\",\"name\":\"mtdherngb\",\"type\":\"c\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkloadNetworkDnsZone response = manager.workloadNetworks()
            .defineDnsZone("vxwlmzqwmvtxnj")
            .withExistingPrivateCloud("fotang", "fhnykzcugs")
            .withDisplayName("cuqudtcvclxy")
            .withDomain(Arrays.asList("k", "gfabuiyjibuzphdu", "neiknpg", "xgjiuqh"))
            .withDnsServerIps(Arrays.asList("ozipqwjedmurrxx", "ewpktvqy"))
            .withSourceIp("mqpzoyhlfbcgw")
            .withDnsServices(538997648361215207L)
            .withRevision(3478297628275672558L)
            .create();

        Assertions.assertEquals("p", response.displayName());
        Assertions.assertEquals("kmkkholvdnd", response.domain().get(0));
        Assertions.assertEquals("fifhxwrsnew", response.dnsServerIps().get(0));
        Assertions.assertEquals("ycxhxzgaztta", response.sourceIp());
        Assertions.assertEquals(4188257113856333497L, response.dnsServices());
        Assertions.assertEquals(7627151834870513384L, response.revision());
    }
}
