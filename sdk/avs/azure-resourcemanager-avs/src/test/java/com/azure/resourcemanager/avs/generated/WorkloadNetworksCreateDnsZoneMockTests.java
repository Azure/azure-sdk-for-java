// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsZone;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksCreateDnsZoneMockTests {
    @Test
    public void testCreateDnsZone() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"brbqgvgovp\",\"domain\":[\"tefjoknssqyzq\",\"dikdfrdbi\",\"mrjgeihfqlggwfi\"],\"dnsServerIps\":[\"xmjpbyep\",\"mgtvlj\",\"rc\"],\"sourceIp\":\"fqip\",\"dnsServices\":677047223,\"provisioningState\":\"Succeeded\",\"revision\":7473871365700679593},\"id\":\"wcabvnuileeya\",\"name\":\"wlpaugmrmfjlrxwt\",\"type\":\"aukhfkvcisiz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadNetworkDnsZone response = manager.workloadNetworks()
            .defineDnsZone("sj")
            .withExistingPrivateCloud("ihywartspph", "ixkykxd")
            .withDisplayName("mucfxhikkf")
            .withDomain(Arrays.asList("ymyincqlhriswslm", "iiovgqcgxu", "gqkctotiowlxte"))
            .withDnsServerIps(Arrays.asList("tjgwdtguk", "anblwphqlkccu"))
            .withSourceIp("ygqwahoiu")
            .withDnsServices(698419976)
            .withRevision(5183867271027363575L)
            .create();

        Assertions.assertEquals("brbqgvgovp", response.displayName());
        Assertions.assertEquals("tefjoknssqyzq", response.domain().get(0));
        Assertions.assertEquals("xmjpbyep", response.dnsServerIps().get(0));
        Assertions.assertEquals("fqip", response.sourceIp());
        Assertions.assertEquals(677047223, response.dnsServices());
        Assertions.assertEquals(7473871365700679593L, response.revision());
    }
}
