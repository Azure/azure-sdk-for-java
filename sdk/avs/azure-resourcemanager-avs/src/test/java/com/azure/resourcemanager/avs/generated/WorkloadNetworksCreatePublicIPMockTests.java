// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPublicIp;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksCreatePublicIPMockTests {
    @Test
    public void testCreatePublicIP() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"gc\",\"numberOfPublicIPs\":3532216119776852559,\"publicIPBlock\":\"wmbtmvpdvjdhtt\",\"provisioningState\":\"Succeeded\"},\"id\":\"edxihchrphkmcrj\",\"name\":\"qnsdfzpbgtgky\",\"type\":\"kdghrjeuutlwx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadNetworkPublicIp response = manager.workloadNetworks()
            .definePublicIP("zvulj")
            .withExistingWorkloadNetwork("cc", "knh", "kizvytn")
            .withDisplayName("eranokqgukkjqnv")
            .withNumberOfPublicIPs(8939885428846863813L)
            .create();

        Assertions.assertEquals("gc", response.displayName());
        Assertions.assertEquals(3532216119776852559L, response.numberOfPublicIPs());
    }
}
