// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.OperationInner;
import com.azure.resourcemanager.avs.models.LogSpecification;
import com.azure.resourcemanager.avs.models.MetricDimension;
import com.azure.resourcemanager.avs.models.MetricSpecification;
import com.azure.resourcemanager.avs.models.OperationProperties;
import com.azure.resourcemanager.avs.models.ServiceSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model =
            BinaryData
                .fromString(
                    "{\"name\":\"kc\",\"display\":{\"provider\":\"arcryuanzwuxzdxt\",\"resource\":\"rlhm\",\"operation\":\"fp\",\"description\":\"qobmtukk\"},\"isDataAction\":false,\"origin\":\"tihfx\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{\"name\":\"vg\",\"displayName\":\"zsymglzufcyzkohd\",\"blobDuration\":\"hanufhfcbjysagi\"},{\"name\":\"xqhabi\",\"displayName\":\"ikxwc\",\"blobDuration\":\"yscnpqxu\"},{\"name\":\"vyq\",\"displayName\":\"wby\",\"blobDuration\":\"k\"},{\"name\":\"dumjgrtfwvuk\",\"displayName\":\"audccsnhs\",\"blobDuration\":\"nyejhkryhtnap\"}],\"metricSpecifications\":[{\"name\":\"okjye\",\"displayName\":\"kvnipjoxz\",\"displayDescription\":\"chgejspodm\",\"unit\":\"lzydehojwyahux\",\"category\":\"pmqnja\",\"aggregationType\":\"ixjsprozvcputeg\",\"supportedAggregationTypes\":[\"mfdatscmdvpj\",\"u\",\"suuv\",\"kjozkrwfnd\"],\"supportedTimeGrainTypes\":[\"jpslwejd\",\"vwryoqpso\"],\"fillGapWithZero\":true,\"dimensions\":[{},{}],\"enableRegionalMdmAccount\":\"akl\",\"sourceMdmAccount\":\"ahbc\",\"sourceMdmNamespace\":\"ffdfdosygexpa\"},{\"name\":\"akhmsbzjhcrz\",\"displayName\":\"dphlxaolt\",\"displayDescription\":\"trg\",\"unit\":\"bpf\",\"category\":\"s\",\"aggregationType\":\"zgvfcjrwz\",\"supportedAggregationTypes\":[\"j\",\"felluwfzitonpe\",\"fpjkjlxofp\",\"vhpfxxypininmay\"],\"supportedTimeGrainTypes\":[\"bbkpodep\"],\"fillGapWithZero\":true,\"dimensions\":[{},{},{}],\"enableRegionalMdmAccount\":\"vamih\",\"sourceMdmAccount\":\"gnarxzxtheo\",\"sourceMdmNamespace\":\"si\"}]}}}")
                .toObject(OperationInner.class);
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals("tihfx", model.origin());
        Assertions.assertEquals("vg", model.properties().serviceSpecification().logSpecifications().get(0).name());
        Assertions
            .assertEquals(
                "zsymglzufcyzkohd", model.properties().serviceSpecification().logSpecifications().get(0).displayName());
        Assertions
            .assertEquals(
                "hanufhfcbjysagi", model.properties().serviceSpecification().logSpecifications().get(0).blobDuration());
        Assertions
            .assertEquals("okjye", model.properties().serviceSpecification().metricSpecifications().get(0).name());
        Assertions
            .assertEquals(
                "kvnipjoxz", model.properties().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions
            .assertEquals(
                "chgejspodm",
                model.properties().serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions
            .assertEquals(
                "lzydehojwyahux", model.properties().serviceSpecification().metricSpecifications().get(0).unit());
        Assertions
            .assertEquals("pmqnja", model.properties().serviceSpecification().metricSpecifications().get(0).category());
        Assertions
            .assertEquals(
                "ixjsprozvcputeg",
                model.properties().serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions
            .assertEquals(
                "mfdatscmdvpj",
                model
                    .properties()
                    .serviceSpecification()
                    .metricSpecifications()
                    .get(0)
                    .supportedAggregationTypes()
                    .get(0));
        Assertions
            .assertEquals(
                "jpslwejd",
                model
                    .properties()
                    .serviceSpecification()
                    .metricSpecifications()
                    .get(0)
                    .supportedTimeGrainTypes()
                    .get(0));
        Assertions
            .assertEquals(
                true, model.properties().serviceSpecification().metricSpecifications().get(0).fillGapWithZero());
        Assertions
            .assertEquals(
                "akl",
                model.properties().serviceSpecification().metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions
            .assertEquals(
                "ahbc", model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmAccount());
        Assertions
            .assertEquals(
                "ffdfdosygexpa",
                model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmNamespace());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model =
            new OperationInner()
                .withIsDataAction(false)
                .withOrigin("tihfx")
                .withProperties(
                    new OperationProperties()
                        .withServiceSpecification(
                            new ServiceSpecification()
                                .withLogSpecifications(
                                    Arrays
                                        .asList(
                                            new LogSpecification()
                                                .withName("vg")
                                                .withDisplayName("zsymglzufcyzkohd")
                                                .withBlobDuration("hanufhfcbjysagi"),
                                            new LogSpecification()
                                                .withName("xqhabi")
                                                .withDisplayName("ikxwc")
                                                .withBlobDuration("yscnpqxu"),
                                            new LogSpecification()
                                                .withName("vyq")
                                                .withDisplayName("wby")
                                                .withBlobDuration("k"),
                                            new LogSpecification()
                                                .withName("dumjgrtfwvuk")
                                                .withDisplayName("audccsnhs")
                                                .withBlobDuration("nyejhkryhtnap")))
                                .withMetricSpecifications(
                                    Arrays
                                        .asList(
                                            new MetricSpecification()
                                                .withName("okjye")
                                                .withDisplayName("kvnipjoxz")
                                                .withDisplayDescription("chgejspodm")
                                                .withUnit("lzydehojwyahux")
                                                .withCategory("pmqnja")
                                                .withAggregationType("ixjsprozvcputeg")
                                                .withSupportedAggregationTypes(
                                                    Arrays.asList("mfdatscmdvpj", "u", "suuv", "kjozkrwfnd"))
                                                .withSupportedTimeGrainTypes(Arrays.asList("jpslwejd", "vwryoqpso"))
                                                .withFillGapWithZero(true)
                                                .withDimensions(
                                                    Arrays.asList(new MetricDimension(), new MetricDimension()))
                                                .withEnableRegionalMdmAccount("akl")
                                                .withSourceMdmAccount("ahbc")
                                                .withSourceMdmNamespace("ffdfdosygexpa"),
                                            new MetricSpecification()
                                                .withName("akhmsbzjhcrz")
                                                .withDisplayName("dphlxaolt")
                                                .withDisplayDescription("trg")
                                                .withUnit("bpf")
                                                .withCategory("s")
                                                .withAggregationType("zgvfcjrwz")
                                                .withSupportedAggregationTypes(
                                                    Arrays
                                                        .asList("j", "felluwfzitonpe", "fpjkjlxofp", "vhpfxxypininmay"))
                                                .withSupportedTimeGrainTypes(Arrays.asList("bbkpodep"))
                                                .withFillGapWithZero(true)
                                                .withDimensions(
                                                    Arrays
                                                        .asList(
                                                            new MetricDimension(),
                                                            new MetricDimension(),
                                                            new MetricDimension()))
                                                .withEnableRegionalMdmAccount("vamih")
                                                .withSourceMdmAccount("gnarxzxtheo")
                                                .withSourceMdmNamespace("si")))));
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals("tihfx", model.origin());
        Assertions.assertEquals("vg", model.properties().serviceSpecification().logSpecifications().get(0).name());
        Assertions
            .assertEquals(
                "zsymglzufcyzkohd", model.properties().serviceSpecification().logSpecifications().get(0).displayName());
        Assertions
            .assertEquals(
                "hanufhfcbjysagi", model.properties().serviceSpecification().logSpecifications().get(0).blobDuration());
        Assertions
            .assertEquals("okjye", model.properties().serviceSpecification().metricSpecifications().get(0).name());
        Assertions
            .assertEquals(
                "kvnipjoxz", model.properties().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions
            .assertEquals(
                "chgejspodm",
                model.properties().serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions
            .assertEquals(
                "lzydehojwyahux", model.properties().serviceSpecification().metricSpecifications().get(0).unit());
        Assertions
            .assertEquals("pmqnja", model.properties().serviceSpecification().metricSpecifications().get(0).category());
        Assertions
            .assertEquals(
                "ixjsprozvcputeg",
                model.properties().serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions
            .assertEquals(
                "mfdatscmdvpj",
                model
                    .properties()
                    .serviceSpecification()
                    .metricSpecifications()
                    .get(0)
                    .supportedAggregationTypes()
                    .get(0));
        Assertions
            .assertEquals(
                "jpslwejd",
                model
                    .properties()
                    .serviceSpecification()
                    .metricSpecifications()
                    .get(0)
                    .supportedTimeGrainTypes()
                    .get(0));
        Assertions
            .assertEquals(
                true, model.properties().serviceSpecification().metricSpecifications().get(0).fillGapWithZero());
        Assertions
            .assertEquals(
                "akl",
                model.properties().serviceSpecification().metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions
            .assertEquals(
                "ahbc", model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmAccount());
        Assertions
            .assertEquals(
                "ffdfdosygexpa",
                model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmNamespace());
    }
}
