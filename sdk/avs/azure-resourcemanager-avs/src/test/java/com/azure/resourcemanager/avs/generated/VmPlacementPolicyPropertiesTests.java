// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.AffinityType;
import com.azure.resourcemanager.avs.models.PlacementPolicyState;
import com.azure.resourcemanager.avs.models.VmPlacementPolicyProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VmPlacementPolicyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VmPlacementPolicyProperties model = BinaryData.fromString(
            "{\"type\":\"VmVm\",\"vmMembers\":[\"xpgpq\",\"hiszepnnbjcrxgib\",\"daxconfozauorsuk\",\"kwbqplhlvnuu\"],\"affinityType\":\"Affinity\",\"state\":\"Disabled\",\"displayName\":\"phwzsoldweyuqdu\",\"provisioningState\":\"Failed\"}")
            .toObject(VmPlacementPolicyProperties.class);
        Assertions.assertEquals(PlacementPolicyState.DISABLED, model.state());
        Assertions.assertEquals("phwzsoldweyuqdu", model.displayName());
        Assertions.assertEquals("xpgpq", model.vmMembers().get(0));
        Assertions.assertEquals(AffinityType.AFFINITY, model.affinityType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VmPlacementPolicyProperties model = new VmPlacementPolicyProperties().withState(PlacementPolicyState.DISABLED)
            .withDisplayName("phwzsoldweyuqdu")
            .withVmMembers(Arrays.asList("xpgpq", "hiszepnnbjcrxgib", "daxconfozauorsuk", "kwbqplhlvnuu"))
            .withAffinityType(AffinityType.AFFINITY);
        model = BinaryData.fromObject(model).toObject(VmPlacementPolicyProperties.class);
        Assertions.assertEquals(PlacementPolicyState.DISABLED, model.state());
        Assertions.assertEquals("phwzsoldweyuqdu", model.displayName());
        Assertions.assertEquals("xpgpq", model.vmMembers().get(0));
        Assertions.assertEquals(AffinityType.AFFINITY, model.affinityType());
    }
}
