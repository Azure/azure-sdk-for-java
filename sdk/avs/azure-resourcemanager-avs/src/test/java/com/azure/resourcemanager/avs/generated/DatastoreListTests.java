// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.implementation.models.DatastoreList;
import com.azure.resourcemanager.avs.models.MountOptionEnum;
import org.junit.jupiter.api.Assertions;

public final class DatastoreListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatastoreList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"netAppVolume\":{\"id\":\"uxh\"},\"diskPoolVolume\":{\"targetId\":\"udxorrqn\",\"lunName\":\"poczvyifqrvkdvjs\",\"mountOption\":\"MOUNT\",\"path\":\"vvdfwatkpnpul\"},\"elasticSanVolume\":{\"targetId\":\"xbczwtruwiqz\"},\"status\":\"Inaccessible\"},\"id\":\"sovmyokacspkwl\",\"name\":\"zdobpxjmflbvvnch\",\"type\":\"kcciwwzjuqkhr\"},{\"properties\":{\"provisioningState\":\"Cancelled\",\"netAppVolume\":{\"id\":\"ku\"},\"diskPoolVolume\":{\"targetId\":\"oskg\",\"lunName\":\"sauuimj\",\"mountOption\":\"ATTACH\",\"path\":\"eduugi\"},\"elasticSanVolume\":{\"targetId\":\"jrrfbyaosve\"},\"status\":\"Attached\"},\"id\":\"npc\",\"name\":\"hocohslkev\",\"type\":\"eggzfb\"},{\"properties\":{\"provisioningState\":\"Updating\",\"netAppVolume\":{\"id\":\"faxkffeii\"},\"diskPoolVolume\":{\"targetId\":\"lvmezyvshxmzsbbz\",\"lunName\":\"ggi\",\"mountOption\":\"ATTACH\",\"path\":\"burvjxxjnspy\"},\"elasticSanVolume\":{\"targetId\":\"tko\"},\"status\":\"Detached\"},\"id\":\"uknvudwti\",\"name\":\"kbldngkpocipa\",\"type\":\"yxoegukgjnp\"}],\"nextLink\":\"cgygev\"}")
            .toObject(DatastoreList.class);
        Assertions.assertEquals("uxh", model.value().get(0).netAppVolume().id());
        Assertions.assertEquals("udxorrqn", model.value().get(0).diskPoolVolume().targetId());
        Assertions.assertEquals("poczvyifqrvkdvjs", model.value().get(0).diskPoolVolume().lunName());
        Assertions.assertEquals(MountOptionEnum.MOUNT, model.value().get(0).diskPoolVolume().mountOption());
        Assertions.assertEquals("xbczwtruwiqz", model.value().get(0).elasticSanVolume().targetId());
        Assertions.assertEquals("cgygev", model.nextLink());
    }
}
