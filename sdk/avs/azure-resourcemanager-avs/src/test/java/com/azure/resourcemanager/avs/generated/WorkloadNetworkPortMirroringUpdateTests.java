// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPortMirroringUpdate;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkPortMirroringUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkPortMirroringUpdate model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"cdntnevfiwjmy\",\"direction\":\"INGRESS\",\"source\":\"slswtm\",\"destination\":\"riofzpyqse\",\"status\":\"SUCCESS\",\"provisioningState\":\"Building\",\"revision\":1436715784442722991}}")
            .toObject(WorkloadNetworkPortMirroringUpdate.class);
        Assertions.assertEquals("cdntnevfiwjmy", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.INGRESS, model.direction());
        Assertions.assertEquals("slswtm", model.source());
        Assertions.assertEquals("riofzpyqse", model.destination());
        Assertions.assertEquals(1436715784442722991L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkPortMirroringUpdate model
            = new WorkloadNetworkPortMirroringUpdate().withDisplayName("cdntnevfiwjmy")
                .withDirection(PortMirroringDirectionEnum.INGRESS)
                .withSource("slswtm")
                .withDestination("riofzpyqse")
                .withRevision(1436715784442722991L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkPortMirroringUpdate.class);
        Assertions.assertEquals("cdntnevfiwjmy", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.INGRESS, model.direction());
        Assertions.assertEquals("slswtm", model.source());
        Assertions.assertEquals("riofzpyqse", model.destination());
        Assertions.assertEquals(1436715784442722991L, model.revision());
    }
}
