// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkPortMirroringProperties;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkPortMirroringPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkPortMirroringProperties model =
            BinaryData
                .fromString(
                    "{\"displayName\":\"tpp\",\"direction\":\"BIDIRECTIONAL\",\"source\":\"xorjaltolmncwsob\",\"destination\":\"csdbnwdcfhuc\",\"status\":\"FAILURE\",\"provisioningState\":\"Failed\",\"revision\":6962670154943364996}")
                .toObject(WorkloadNetworkPortMirroringProperties.class);
        Assertions.assertEquals("tpp", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.BIDIRECTIONAL, model.direction());
        Assertions.assertEquals("xorjaltolmncwsob", model.source());
        Assertions.assertEquals("csdbnwdcfhuc", model.destination());
        Assertions.assertEquals(6962670154943364996L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkPortMirroringProperties model =
            new WorkloadNetworkPortMirroringProperties()
                .withDisplayName("tpp")
                .withDirection(PortMirroringDirectionEnum.BIDIRECTIONAL)
                .withSource("xorjaltolmncwsob")
                .withDestination("csdbnwdcfhuc")
                .withRevision(6962670154943364996L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkPortMirroringProperties.class);
        Assertions.assertEquals("tpp", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.BIDIRECTIONAL, model.direction());
        Assertions.assertEquals("xorjaltolmncwsob", model.source());
        Assertions.assertEquals("csdbnwdcfhuc", model.destination());
        Assertions.assertEquals(6962670154943364996L, model.revision());
    }
}
