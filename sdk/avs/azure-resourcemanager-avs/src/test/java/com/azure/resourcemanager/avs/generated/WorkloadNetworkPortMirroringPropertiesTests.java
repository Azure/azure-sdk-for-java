// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkPortMirroringProperties;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkPortMirroringPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkPortMirroringProperties model = BinaryData.fromString(
            "{\"displayName\":\"ijddtvqc\",\"direction\":\"INGRESS\",\"source\":\"ijaeukm\",\"destination\":\"ieekpndzaa\",\"status\":\"FAILURE\",\"provisioningState\":\"Building\",\"revision\":3142659872258126549}")
            .toObject(WorkloadNetworkPortMirroringProperties.class);
        Assertions.assertEquals("ijddtvqc", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.INGRESS, model.direction());
        Assertions.assertEquals("ijaeukm", model.source());
        Assertions.assertEquals("ieekpndzaa", model.destination());
        Assertions.assertEquals(3142659872258126549L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkPortMirroringProperties model
            = new WorkloadNetworkPortMirroringProperties().withDisplayName("ijddtvqc")
                .withDirection(PortMirroringDirectionEnum.INGRESS)
                .withSource("ijaeukm")
                .withDestination("ieekpndzaa")
                .withRevision(3142659872258126549L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkPortMirroringProperties.class);
        Assertions.assertEquals("ijddtvqc", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.INGRESS, model.direction());
        Assertions.assertEquals("ijaeukm", model.source());
        Assertions.assertEquals("ieekpndzaa", model.destination());
        Assertions.assertEquals(3142659872258126549L, model.revision());
    }
}
