// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkVMGroup;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworkVmGroupsCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"ctbrxkjzwrgxffm\",\"members\":[\"wfbkgozxwo\",\"dby\"],\"status\":\"FAILURE\",\"provisioningState\":\"Succeeded\",\"revision\":8453153522791825173},\"id\":\"apxbi\",\"name\":\"gn\",\"type\":\"gjkn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadNetworkVMGroup response = manager.workloadNetworkVmGroups()
            .define("xuckpggqoweyir")
            .withExistingPrivateCloud("hdenxaulk", "akdkifmjnnawtqab")
            .withDisplayName("isngwflqqmpizru")
            .withMembers(Arrays.asList("qxpxiwfcngjsaa", "iixtmkzj"))
            .withRevision(8321849396779286295L)
            .create();

        Assertions.assertEquals("ctbrxkjzwrgxffm", response.displayName());
        Assertions.assertEquals("wfbkgozxwo", response.members().get(0));
        Assertions.assertEquals(8453153522791825173L, response.revision());
    }
}
