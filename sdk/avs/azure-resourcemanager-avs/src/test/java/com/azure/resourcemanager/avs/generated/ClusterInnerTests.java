// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.ClusterInner;
import com.azure.resourcemanager.avs.models.Sku;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterInner model = BinaryData.fromString(
            "{\"properties\":{\"clusterSize\":1288567604,\"provisioningState\":\"Deleting\",\"clusterId\":186641812,\"hosts\":[\"yb\"],\"vsanDatastoreName\":\"qedqytbciqfoufl\"},\"sku\":{\"name\":\"mnkzsmod\",\"tier\":\"Basic\",\"size\":\"ugpbkw\",\"family\":\"utduqktapspwgcu\",\"capacity\":1218908818},\"id\":\"mkdo\",\"name\":\"vqwhbmdgbbjfd\",\"type\":\"gmbmbexppbh\"}")
            .toObject(ClusterInner.class);
        Assertions.assertEquals("mnkzsmod", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("ugpbkw", model.sku().size());
        Assertions.assertEquals("utduqktapspwgcu", model.sku().family());
        Assertions.assertEquals(1218908818, model.sku().capacity());
        Assertions.assertEquals(1288567604, model.clusterSize());
        Assertions.assertEquals("yb", model.hosts().get(0));
        Assertions.assertEquals("qedqytbciqfoufl", model.vsanDatastoreName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterInner model = new ClusterInner()
            .withSku(new Sku().withName("mnkzsmod")
                .withTier(SkuTier.BASIC)
                .withSize("ugpbkw")
                .withFamily("utduqktapspwgcu")
                .withCapacity(1218908818))
            .withClusterSize(1288567604)
            .withHosts(Arrays.asList("yb"))
            .withVsanDatastoreName("qedqytbciqfoufl");
        model = BinaryData.fromObject(model).toObject(ClusterInner.class);
        Assertions.assertEquals("mnkzsmod", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("ugpbkw", model.sku().size());
        Assertions.assertEquals("utduqktapspwgcu", model.sku().family());
        Assertions.assertEquals(1218908818, model.sku().capacity());
        Assertions.assertEquals(1288567604, model.clusterSize());
        Assertions.assertEquals("yb", model.hosts().get(0));
        Assertions.assertEquals("qedqytbciqfoufl", model.vsanDatastoreName());
    }
}
