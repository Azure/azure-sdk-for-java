// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.ClusterInner;
import com.azure.resourcemanager.avs.models.Sku;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterInner model = BinaryData.fromString(
            "{\"properties\":{\"clusterSize\":2024300309,\"provisioningState\":\"Failed\",\"clusterId\":804356907,\"hosts\":[\"vpk\",\"lrxnjeaseiphe\",\"f\",\"okeyyienj\"],\"vsanDatastoreName\":\"lwtgrhpdj\"},\"sku\":{\"name\":\"jumasx\",\"tier\":\"Basic\",\"size\":\"qyeg\",\"family\":\"lhbxxhejjzzvdud\",\"capacity\":621270176},\"id\":\"lfh\",\"name\":\"twmcynpwlb\",\"type\":\"npgacftade\"}")
            .toObject(ClusterInner.class);
        Assertions.assertEquals("jumasx", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("qyeg", model.sku().size());
        Assertions.assertEquals("lhbxxhejjzzvdud", model.sku().family());
        Assertions.assertEquals(621270176, model.sku().capacity());
        Assertions.assertEquals(2024300309, model.clusterSize());
        Assertions.assertEquals("vpk", model.hosts().get(0));
        Assertions.assertEquals("lwtgrhpdj", model.vsanDatastoreName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterInner model = new ClusterInner()
            .withSku(new Sku().withName("jumasx")
                .withTier(SkuTier.BASIC)
                .withSize("qyeg")
                .withFamily("lhbxxhejjzzvdud")
                .withCapacity(621270176))
            .withClusterSize(2024300309)
            .withHosts(Arrays.asList("vpk", "lrxnjeaseiphe", "f", "okeyyienj"))
            .withVsanDatastoreName("lwtgrhpdj");
        model = BinaryData.fromObject(model).toObject(ClusterInner.class);
        Assertions.assertEquals("jumasx", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("qyeg", model.sku().size());
        Assertions.assertEquals("lhbxxhejjzzvdud", model.sku().family());
        Assertions.assertEquals(621270176, model.sku().capacity());
        Assertions.assertEquals(2024300309, model.clusterSize());
        Assertions.assertEquals("vpk", model.hosts().get(0));
        Assertions.assertEquals("lwtgrhpdj", model.vsanDatastoreName());
    }
}
