// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.ClusterInner;
import com.azure.resourcemanager.avs.models.Sku;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterInner model = BinaryData.fromString(
            "{\"properties\":{\"clusterSize\":57544677,\"provisioningState\":\"Deleting\",\"clusterId\":1358705226,\"hosts\":[\"tki\",\"uxh\",\"yudxorrqnbp\"],\"vsanDatastoreName\":\"zvyifqrvkdvj\"},\"sku\":{\"name\":\"llr\",\"tier\":\"Standard\",\"size\":\"f\",\"family\":\"t\",\"capacity\":207833423},\"id\":\"ulexxbczwtr\",\"name\":\"wiqzbqjvsovmyo\",\"type\":\"acspkwl\"}")
            .toObject(ClusterInner.class);
        Assertions.assertEquals("llr", model.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals("f", model.sku().size());
        Assertions.assertEquals("t", model.sku().family());
        Assertions.assertEquals(207833423, model.sku().capacity());
        Assertions.assertEquals(57544677, model.clusterSize());
        Assertions.assertEquals("tki", model.hosts().get(0));
        Assertions.assertEquals("zvyifqrvkdvj", model.vsanDatastoreName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterInner model = new ClusterInner().withSku(
            new Sku().withName("llr").withTier(SkuTier.STANDARD).withSize("f").withFamily("t").withCapacity(207833423))
            .withClusterSize(57544677)
            .withHosts(Arrays.asList("tki", "uxh", "yudxorrqnbp"))
            .withVsanDatastoreName("zvyifqrvkdvj");
        model = BinaryData.fromObject(model).toObject(ClusterInner.class);
        Assertions.assertEquals("llr", model.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals("f", model.sku().size());
        Assertions.assertEquals("t", model.sku().family());
        Assertions.assertEquals(207833423, model.sku().capacity());
        Assertions.assertEquals(57544677, model.clusterSize());
        Assertions.assertEquals("tki", model.hosts().get(0));
        Assertions.assertEquals("zvyifqrvkdvj", model.vsanDatastoreName());
    }
}
