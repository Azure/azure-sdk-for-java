// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScriptExecutionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"scriptCmdletId\":\"cl\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"jknyu\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"gvttx\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"upzaamrdixtre\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"ids\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"yskbruff\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"l\"}],\"failureReason\":\"k\",\"timeout\":\"utvlxhr\",\"retention\":\"hvmblcouqehbhbc\",\"submittedAt\":\"2021-08-26T19:29:12Z\",\"startedAt\":\"2021-08-10T10:48:26Z\",\"finishedAt\":\"2021-04-02T17:51Z\",\"provisioningState\":\"Failed\",\"output\":[\"ypmbltoormkfq\",\"wxldykalsygaoln\",\"pnnbm\"],\"namedOutputs\":{},\"information\":[\"jgsjjxxahmrn\",\"dzyqe\",\"xyivpinbm\",\"wbjijkgq\"],\"warnings\":[\"mbk\"],\"errors\":[\"jauj\",\"aan\",\"ggiycwkdtaawxwf\"]},\"id\":\"aumrrqmbzmqkrat\",\"name\":\"nxwbjsidbirkfp\",\"type\":\"sokdgoge\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ScriptExecution> response
            = manager.scriptExecutions().list("in", "ofvfkakpoldtve", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("cl", response.iterator().next().scriptCmdletId());
        Assertions.assertEquals("jknyu", response.iterator().next().parameters().get(0).name());
        Assertions.assertEquals("upzaamrdixtre", response.iterator().next().hiddenParameters().get(0).name());
        Assertions.assertEquals("k", response.iterator().next().failureReason());
        Assertions.assertEquals("utvlxhr", response.iterator().next().timeout());
        Assertions.assertEquals("hvmblcouqehbhbc", response.iterator().next().retention());
        Assertions.assertEquals("ypmbltoormkfq", response.iterator().next().output().get(0));
    }
}
