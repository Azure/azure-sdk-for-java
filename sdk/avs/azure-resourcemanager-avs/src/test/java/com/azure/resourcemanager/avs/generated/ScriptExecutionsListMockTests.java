// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScriptExecutionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"scriptCmdletId\":\"pdulon\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"np\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"w\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"ehtuevrhr\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"oogwxhnsduugwb\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"reur\"}],\"failureReason\":\"kfuarenlv\",\"timeout\":\"htkln\",\"retention\":\"afvvk\",\"submittedAt\":\"2021-04-06T11:17:07Z\",\"startedAt\":\"2021-01-30T13:56:43Z\",\"finishedAt\":\"2021-11-11T21:24:27Z\",\"provisioningState\":\"Failed\",\"output\":[\"cqxypokkhminq\",\"ymc\",\"ngnbdxxew\"],\"namedOutputs\":{\"ct\":\"datanvudbchaqdtvqecr\",\"ytxzvtznapxbanno\":\"dataxxdtddmflh\"},\"information\":[\"xc\",\"ytprwnwvroev\"],\"warnings\":[\"yo\",\"rrrouuxvnsa\",\"bcrymodizrx\"],\"errors\":[\"bdxnaz\",\"mkmlmvevfx\",\"op\",\"hbzxli\"]},\"id\":\"rdddtfgxqbawpcb\",\"name\":\"nzqcy\",\"type\":\"napqo\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ScriptExecution> response
            = manager.scriptExecutions().list("xddbhfhpfpaz", "zoyw", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("pdulon", response.iterator().next().scriptCmdletId());
        Assertions.assertEquals("np", response.iterator().next().parameters().get(0).name());
        Assertions.assertEquals("oogwxhnsduugwb", response.iterator().next().hiddenParameters().get(0).name());
        Assertions.assertEquals("kfuarenlv", response.iterator().next().failureReason());
        Assertions.assertEquals("htkln", response.iterator().next().timeout());
        Assertions.assertEquals("afvvk", response.iterator().next().retention());
        Assertions.assertEquals("cqxypokkhminq", response.iterator().next().output().get(0));
    }
}
