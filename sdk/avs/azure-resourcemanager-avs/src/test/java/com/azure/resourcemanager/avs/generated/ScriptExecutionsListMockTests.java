// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScriptExecutionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"scriptCmdletId\":\"exaoguya\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"dsdaultxijjumf\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"z\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"nqnm\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"jng\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"qdqx\"}],\"failureReason\":\"jw\",\"timeout\":\"nyfusfzsvtuikzh\",\"retention\":\"qglcfhmlrqryxynq\",\"submittedAt\":\"2021-09-26T14:22:07Z\",\"startedAt\":\"2021-02-04T14:35:25Z\",\"finishedAt\":\"2021-03-13T11:56:36Z\",\"provisioningState\":\"Running\",\"output\":[\"nptgoeiybba\"],\"namedOutputs\":{\"slkvntjl\":\"datahv\",\"vzidsxwaab\":\"dataigjkskyrio\"},\"information\":[\"frygznmmax\",\"izkzobgo\"],\"warnings\":[\"hsln\",\"lxieixynllxecwcr\",\"jphslhcaw\",\"u\"],\"errors\":[\"dwfmvigorqjb\",\"tzh\",\"aglkafhon\"]},\"id\":\"ujeickp\",\"name\":\"vcpopmxe\",\"type\":\"nwcl\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ScriptExecution> response
            = manager.scriptExecutions().list("awbzasqb", "clj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("exaoguya", response.iterator().next().scriptCmdletId());
        Assertions.assertEquals("dsdaultxijjumf", response.iterator().next().parameters().get(0).name());
        Assertions.assertEquals("z", response.iterator().next().hiddenParameters().get(0).name());
        Assertions.assertEquals("jw", response.iterator().next().failureReason());
        Assertions.assertEquals("nyfusfzsvtuikzh", response.iterator().next().timeout());
        Assertions.assertEquals("qglcfhmlrqryxynq", response.iterator().next().retention());
        Assertions.assertEquals("nptgoeiybba", response.iterator().next().output().get(0));
    }
}
