// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkPortMirroringInner;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPortMirroringList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkPortMirroringListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkPortMirroringList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"displayName\":\"kfwynw\",\"direction\":\"INGRESS\",\"source\":\"vkay\",\"destination\":\"tnvyqiatkzwp\",\"status\":\"SUCCESS\",\"provisioningState\":\"Canceled\",\"revision\":3495870097843726971},\"id\":\"sgvvsccyajguq\",\"name\":\"hwyg\",\"type\":\"lvdnkfx\"}],\"nextLink\":\"emdwzrmuhapfc\"}")
            .toObject(WorkloadNetworkPortMirroringList.class);
        Assertions.assertEquals("kfwynw", model.value().get(0).displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.INGRESS, model.value().get(0).direction());
        Assertions.assertEquals("vkay", model.value().get(0).source());
        Assertions.assertEquals("tnvyqiatkzwp", model.value().get(0).destination());
        Assertions.assertEquals(3495870097843726971L, model.value().get(0).revision());
        Assertions.assertEquals("emdwzrmuhapfc", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkPortMirroringList model = new WorkloadNetworkPortMirroringList()
            .withValue(Arrays.asList(new WorkloadNetworkPortMirroringInner().withDisplayName("kfwynw")
                .withDirection(PortMirroringDirectionEnum.INGRESS)
                .withSource("vkay")
                .withDestination("tnvyqiatkzwp")
                .withRevision(3495870097843726971L)))
            .withNextLink("emdwzrmuhapfc");
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkPortMirroringList.class);
        Assertions.assertEquals("kfwynw", model.value().get(0).displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.INGRESS, model.value().get(0).direction());
        Assertions.assertEquals("vkay", model.value().get(0).source());
        Assertions.assertEquals("tnvyqiatkzwp", model.value().get(0).destination());
        Assertions.assertEquals(3495870097843726971L, model.value().get(0).revision());
        Assertions.assertEquals("emdwzrmuhapfc", model.nextLink());
    }
}
