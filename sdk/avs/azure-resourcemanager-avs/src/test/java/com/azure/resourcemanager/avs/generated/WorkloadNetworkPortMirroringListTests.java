// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkPortMirroringInner;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPortMirroringList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkPortMirroringListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkPortMirroringList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"displayName\":\"psvuoymgc\",\"direction\":\"INGRESS\",\"source\":\"ezrypql\",\"destination\":\"eokerqwkyhkobopg\",\"status\":\"SUCCESS\",\"provisioningState\":\"Deleting\",\"revision\":2641865031981689057},\"id\":\"qpcrf\",\"name\":\"bwccsnjvcdwxlpqe\",\"type\":\"ftnkhtj\"}],\"nextLink\":\"i\"}")
            .toObject(WorkloadNetworkPortMirroringList.class);
        Assertions.assertEquals("psvuoymgc", model.value().get(0).displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.INGRESS, model.value().get(0).direction());
        Assertions.assertEquals("ezrypql", model.value().get(0).source());
        Assertions.assertEquals("eokerqwkyhkobopg", model.value().get(0).destination());
        Assertions.assertEquals(2641865031981689057L, model.value().get(0).revision());
        Assertions.assertEquals("i", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkPortMirroringList model = new WorkloadNetworkPortMirroringList()
            .withValue(Arrays.asList(new WorkloadNetworkPortMirroringInner().withDisplayName("psvuoymgc")
                .withDirection(PortMirroringDirectionEnum.INGRESS)
                .withSource("ezrypql")
                .withDestination("eokerqwkyhkobopg")
                .withRevision(2641865031981689057L)))
            .withNextLink("i");
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkPortMirroringList.class);
        Assertions.assertEquals("psvuoymgc", model.value().get(0).displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.INGRESS, model.value().get(0).direction());
        Assertions.assertEquals("ezrypql", model.value().get(0).source());
        Assertions.assertEquals("eokerqwkyhkobopg", model.value().get(0).destination());
        Assertions.assertEquals(2641865031981689057L, model.value().get(0).revision());
        Assertions.assertEquals("i", model.nextLink());
    }
}
