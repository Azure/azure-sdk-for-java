// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.PlacementPolicyUpdateProperties;
import com.azure.resourcemanager.avs.models.AffinityStrength;
import com.azure.resourcemanager.avs.models.AzureHybridBenefitType;
import com.azure.resourcemanager.avs.models.PlacementPolicyState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PlacementPolicyUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PlacementPolicyUpdateProperties model = BinaryData.fromString(
            "{\"state\":\"Disabled\",\"vmMembers\":[\"pnazzm\",\"jrunmpxtt\"],\"hostMembers\":[\"rbnlankxmyskp\",\"henbtkcxywnytn\",\"synlqidybyxczfc\",\"haaxdbabphl\"],\"affinityStrength\":\"Must\",\"azureHybridBenefitType\":\"SqlHost\"}")
            .toObject(PlacementPolicyUpdateProperties.class);
        Assertions.assertEquals(PlacementPolicyState.DISABLED, model.state());
        Assertions.assertEquals("pnazzm", model.vmMembers().get(0));
        Assertions.assertEquals("rbnlankxmyskp", model.hostMembers().get(0));
        Assertions.assertEquals(AffinityStrength.MUST, model.affinityStrength());
        Assertions.assertEquals(AzureHybridBenefitType.SQL_HOST, model.azureHybridBenefitType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PlacementPolicyUpdateProperties model
            = new PlacementPolicyUpdateProperties().withState(PlacementPolicyState.DISABLED)
                .withVmMembers(Arrays.asList("pnazzm", "jrunmpxtt"))
                .withHostMembers(Arrays.asList("rbnlankxmyskp", "henbtkcxywnytn", "synlqidybyxczfc", "haaxdbabphl"))
                .withAffinityStrength(AffinityStrength.MUST)
                .withAzureHybridBenefitType(AzureHybridBenefitType.SQL_HOST);
        model = BinaryData.fromObject(model).toObject(PlacementPolicyUpdateProperties.class);
        Assertions.assertEquals(PlacementPolicyState.DISABLED, model.state());
        Assertions.assertEquals("pnazzm", model.vmMembers().get(0));
        Assertions.assertEquals("rbnlankxmyskp", model.hostMembers().get(0));
        Assertions.assertEquals(AffinityStrength.MUST, model.affinityStrength());
        Assertions.assertEquals(AzureHybridBenefitType.SQL_HOST, model.azureHybridBenefitType());
    }
}
