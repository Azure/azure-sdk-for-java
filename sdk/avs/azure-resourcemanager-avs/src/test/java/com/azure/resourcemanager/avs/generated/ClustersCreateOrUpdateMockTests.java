// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Cluster;
import com.azure.resourcemanager.avs.models.Sku;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"clusterSize\":1055275397,\"provisioningState\":\"Succeeded\",\"clusterId\":14478242,\"hosts\":[\"uncuw\",\"qspkcdqzhlctd\",\"unqndyfpchrqb\",\"jjrcgegydc\"],\"vsanDatastoreName\":\"oxjumvqqo\"},\"sku\":{\"name\":\"ihrraiouaub\",\"tier\":\"Standard\",\"size\":\"oq\",\"family\":\"uojrngiflr\",\"capacity\":2039990607},\"id\":\"ccbiuimzdlyjdfq\",\"name\":\"mkyoqufdvruzsl\",\"type\":\"ojhp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Cluster response = manager.clusters()
            .define("dxe")
            .withExistingPrivateCloud("lvizb", "hfovvacqpbtu")
            .withSku(new Sku().withName("yb")
                .withTier(SkuTier.BASIC)
                .withSize("gdakchz")
                .withFamily("lixqnrkcxkjibn")
                .withCapacity(866421840))
            .withClusterSize(1481188049)
            .withHosts(Arrays.asList("muaslzkw", "rwoycqucwyh", "hnomdrkywuh", "svfuurutlwexxwl"))
            .withVsanDatastoreName("niexzsrzpgepq")
            .create();

        Assertions.assertEquals("ihrraiouaub", response.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, response.sku().tier());
        Assertions.assertEquals("oq", response.sku().size());
        Assertions.assertEquals("uojrngiflr", response.sku().family());
        Assertions.assertEquals(2039990607, response.sku().capacity());
        Assertions.assertEquals(1055275397, response.clusterSize());
        Assertions.assertEquals("uncuw", response.hosts().get(0));
        Assertions.assertEquals("oxjumvqqo", response.vsanDatastoreName());
    }
}
