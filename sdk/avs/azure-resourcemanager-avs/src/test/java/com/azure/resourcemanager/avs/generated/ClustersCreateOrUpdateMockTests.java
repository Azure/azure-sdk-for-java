// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Cluster;
import com.azure.resourcemanager.avs.models.Sku;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"clusterSize\":1609142876,\"provisioningState\":\"Succeeded\",\"clusterId\":1184462676,\"hosts\":[\"rtkgdojbmxvavref\",\"eesvecu\"],\"vsanDatastoreName\":\"pxtxsuwp\"},\"sku\":{\"name\":\"tujwsawdd\",\"tier\":\"Standard\",\"size\":\"bxv\",\"family\":\"itvtzeexavo\",\"capacity\":809172379},\"id\":\"lecdmdqbw\",\"name\":\"ypq\",\"type\":\"gsfjac\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Cluster response = manager.clusters()
            .define("gat")
            .withExistingPrivateCloud("zbezkgimsidxasic", "dyvvjskgfmocwahp")
            .withSku(new Sku().withName("syxkyxvxevblb")
                .withTier(SkuTier.FREE)
                .withSize("ljlageuaulxu")
                .withFamily("mjbnk")
                .withCapacity(1476296254))
            .withClusterSize(187526121)
            .withHosts(Arrays.asList("na", "zybbj"))
            .withVsanDatastoreName("dj")
            .create();

        Assertions.assertEquals("tujwsawdd", response.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, response.sku().tier());
        Assertions.assertEquals("bxv", response.sku().size());
        Assertions.assertEquals("itvtzeexavo", response.sku().family());
        Assertions.assertEquals(809172379, response.sku().capacity());
        Assertions.assertEquals(1609142876, response.clusterSize());
        Assertions.assertEquals("rtkgdojbmxvavref", response.hosts().get(0));
        Assertions.assertEquals("pxtxsuwp", response.vsanDatastoreName());
    }
}
