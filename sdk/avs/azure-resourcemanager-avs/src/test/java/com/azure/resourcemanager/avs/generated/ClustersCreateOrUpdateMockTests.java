// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Cluster;
import com.azure.resourcemanager.avs.models.Sku;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"clusterSize\":2061594635,\"provisioningState\":\"Succeeded\",\"clusterId\":1733569114,\"hosts\":[\"pzdqtvhcspod\",\"qaxsipietgbebjf\",\"lbmoichd\"],\"vsanDatastoreName\":\"nfpubntnbatz\"},\"sku\":{\"name\":\"iqsowsaaelc\",\"tier\":\"Free\",\"size\":\"ju\",\"family\":\"lrvkmjc\",\"capacity\":1748299697},\"id\":\"lgfggcvk\",\"name\":\"y\",\"type\":\"izrzb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Cluster response = manager.clusters()
            .define("bfdpyflubhv")
            .withExistingPrivateCloud("vv", "icphvtrrmhw")
            .withSku(new Sku().withName("mykyujxsglhs")
                .withTier(SkuTier.FREE)
                .withSize("ejylmbkzu")
                .withFamily("igrfihotjewl")
                .withCapacity(349681251))
            .withClusterSize(213573747)
            .withHosts(Arrays.asList("whhmemhooc"))
            .withVsanDatastoreName("tnpqmemczjk")
            .create();

        Assertions.assertEquals("iqsowsaaelc", response.sku().name());
        Assertions.assertEquals(SkuTier.FREE, response.sku().tier());
        Assertions.assertEquals("ju", response.sku().size());
        Assertions.assertEquals("lrvkmjc", response.sku().family());
        Assertions.assertEquals(1748299697, response.sku().capacity());
        Assertions.assertEquals(2061594635, response.clusterSize());
        Assertions.assertEquals("pzdqtvhcspod", response.hosts().get(0));
        Assertions.assertEquals("nfpubntnbatz", response.vsanDatastoreName());
    }
}
