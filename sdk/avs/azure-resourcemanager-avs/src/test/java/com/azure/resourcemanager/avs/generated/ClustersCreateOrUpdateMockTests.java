// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Cluster;
import com.azure.resourcemanager.avs.models.Sku;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"clusterSize\":687861741,\"provisioningState\":\"Succeeded\",\"clusterId\":1053518025,\"hosts\":[\"vluwmncsttij\",\"y\",\"vpo\"],\"vsanDatastoreName\":\"rsg\"},\"sku\":{\"name\":\"gbdhuzqgnjdg\",\"tier\":\"Premium\",\"size\":\"cli\",\"family\":\"zvhxnk\",\"capacity\":144563900},\"id\":\"u\",\"name\":\"otppnv\",\"type\":\"xz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Cluster response = manager.clusters()
            .define("mlqtmldgxob")
            .withExistingPrivateCloud("gzuriglaecxndt", "cokpv")
            .withSku(new Sku().withName("fvjlboxqvkjlmx")
                .withTier(SkuTier.FREE)
                .withSize("ynhdwdigum")
                .withFamily("raauzzpt")
                .withCapacity(1518095696))
            .withClusterSize(1763053171)
            .withHosts(Arrays.asList("ayzri"))
            .withVsanDatastoreName("hya")
            .create();

        Assertions.assertEquals("gbdhuzqgnjdg", response.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.sku().tier());
        Assertions.assertEquals("cli", response.sku().size());
        Assertions.assertEquals("zvhxnk", response.sku().family());
        Assertions.assertEquals(144563900, response.sku().capacity());
        Assertions.assertEquals(687861741, response.clusterSize());
        Assertions.assertEquals("vluwmncsttij", response.hosts().get(0));
        Assertions.assertEquals("rsg", response.vsanDatastoreName());
    }
}
