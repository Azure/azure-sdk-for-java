// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkPortMirroringInner;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkPortMirroringInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkPortMirroringInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"displayName\":\"bzkfzbeyvpn\",\"direction\":\"BIDIRECTIONAL\",\"source\":\"invkjjxdxrbuu\",\"destination\":\"clewyhm\",\"status\":\"FAILURE\",\"provisioningState\":\"Building\",\"revision\":4379393753371043787},\"id\":\"ofncckwyfzqwhxxb\",\"name\":\"yq\",\"type\":\"xzfe\"}")
                .toObject(WorkloadNetworkPortMirroringInner.class);
        Assertions.assertEquals("bzkfzbeyvpn", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.BIDIRECTIONAL, model.direction());
        Assertions.assertEquals("invkjjxdxrbuu", model.source());
        Assertions.assertEquals("clewyhm", model.destination());
        Assertions.assertEquals(4379393753371043787L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkPortMirroringInner model =
            new WorkloadNetworkPortMirroringInner()
                .withDisplayName("bzkfzbeyvpn")
                .withDirection(PortMirroringDirectionEnum.BIDIRECTIONAL)
                .withSource("invkjjxdxrbuu")
                .withDestination("clewyhm")
                .withRevision(4379393753371043787L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkPortMirroringInner.class);
        Assertions.assertEquals("bzkfzbeyvpn", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.BIDIRECTIONAL, model.direction());
        Assertions.assertEquals("invkjjxdxrbuu", model.source());
        Assertions.assertEquals("clewyhm", model.destination());
        Assertions.assertEquals(4379393753371043787L, model.revision());
    }
}
