// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkPortMirroringInner;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkPortMirroringInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkPortMirroringInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"vdkfwynwcvtbvk\",\"direction\":\"BIDIRECTIONAL\",\"source\":\"tnvyqiatkzwp\",\"destination\":\"p\",\"status\":\"FAILURE\",\"provisioningState\":\"Updating\",\"revision\":5044236127047100720},\"id\":\"v\",\"name\":\"ccyajg\",\"type\":\"qfhwyg\"}")
            .toObject(WorkloadNetworkPortMirroringInner.class);
        Assertions.assertEquals("vdkfwynwcvtbvk", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.BIDIRECTIONAL, model.direction());
        Assertions.assertEquals("tnvyqiatkzwp", model.source());
        Assertions.assertEquals("p", model.destination());
        Assertions.assertEquals(5044236127047100720L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkPortMirroringInner model
            = new WorkloadNetworkPortMirroringInner().withDisplayName("vdkfwynwcvtbvk")
                .withDirection(PortMirroringDirectionEnum.BIDIRECTIONAL)
                .withSource("tnvyqiatkzwp")
                .withDestination("p")
                .withRevision(5044236127047100720L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkPortMirroringInner.class);
        Assertions.assertEquals("vdkfwynwcvtbvk", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.BIDIRECTIONAL, model.direction());
        Assertions.assertEquals("tnvyqiatkzwp", model.source());
        Assertions.assertEquals("p", model.destination());
        Assertions.assertEquals(5044236127047100720L, model.revision());
    }
}
