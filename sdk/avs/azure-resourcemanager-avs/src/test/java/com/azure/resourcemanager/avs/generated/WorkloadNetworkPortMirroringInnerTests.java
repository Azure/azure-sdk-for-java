// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkPortMirroringInner;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkPortMirroringInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkPortMirroringInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"xbvtvudu\",\"direction\":\"EGRESS\",\"source\":\"rmrlxqtvcof\",\"destination\":\"f\",\"status\":\"FAILURE\",\"provisioningState\":\"Succeeded\",\"revision\":8171649502486820994},\"id\":\"knnqvsaznq\",\"name\":\"tor\",\"type\":\"dsg\"}")
            .toObject(WorkloadNetworkPortMirroringInner.class);
        Assertions.assertEquals("xbvtvudu", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.EGRESS, model.direction());
        Assertions.assertEquals("rmrlxqtvcof", model.source());
        Assertions.assertEquals("f", model.destination());
        Assertions.assertEquals(8171649502486820994L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkPortMirroringInner model = new WorkloadNetworkPortMirroringInner().withDisplayName("xbvtvudu")
            .withDirection(PortMirroringDirectionEnum.EGRESS)
            .withSource("rmrlxqtvcof")
            .withDestination("f")
            .withRevision(8171649502486820994L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkPortMirroringInner.class);
        Assertions.assertEquals("xbvtvudu", model.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.EGRESS, model.direction());
        Assertions.assertEquals("rmrlxqtvcof", model.source());
        Assertions.assertEquals("f", model.destination());
        Assertions.assertEquals(8171649502486820994L, model.revision());
    }
}
