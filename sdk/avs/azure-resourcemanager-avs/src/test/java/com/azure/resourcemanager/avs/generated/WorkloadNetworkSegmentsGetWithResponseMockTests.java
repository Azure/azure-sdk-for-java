// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegment;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworkSegmentsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"erteeammxqiekk\",\"connectedGateway\":\"ddrtkgdojb\",\"subnet\":{\"dhcpRanges\":[\"vrefdeesv\"],\"gatewayAddress\":\"uij\"},\"portVif\":[{\"portName\":\"s\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Building\",\"revision\":4136420798110514219},\"id\":\"awddjibab\",\"name\":\"vit\",\"type\":\"tvtzeexavoxtfg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadNetworkSegment response = manager.workloadNetworkSegments()
            .getWithResponse("svxeizzgwklnsr", "ffeycx", "ktp", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("erteeammxqiekk", response.displayName());
        Assertions.assertEquals("ddrtkgdojb", response.connectedGateway());
        Assertions.assertEquals("vrefdeesv", response.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("uij", response.subnet().gatewayAddress());
        Assertions.assertEquals(4136420798110514219L, response.revision());
    }
}
