// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkSegmentInner;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"wct\",\"connectedGateway\":\"dzjlu\",\"subnet\":{\"dhcpRanges\":[\"lwg\",\"ytsbwtovv\",\"gseinq\",\"iufxqknpir\"],\"gatewayAddress\":\"epttwqmsniff\"},\"portVif\":[{\"portName\":\"nrojlpijnkr\"},{\"portName\":\"rddh\"},{\"portName\":\"atiz\"},{\"portName\":\"onasxifto\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Updating\",\"revision\":1898314842016883158},\"id\":\"sgogczhonnxk\",\"name\":\"lgnyhmo\",\"type\":\"sxkkg\"}")
            .toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("wct", model.displayName());
        Assertions.assertEquals("dzjlu", model.connectedGateway());
        Assertions.assertEquals("lwg", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("epttwqmsniff", model.subnet().gatewayAddress());
        Assertions.assertEquals(1898314842016883158L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentInner model = new WorkloadNetworkSegmentInner().withDisplayName("wct")
            .withConnectedGateway("dzjlu")
            .withSubnet(new WorkloadNetworkSegmentSubnet()
                .withDhcpRanges(Arrays.asList("lwg", "ytsbwtovv", "gseinq", "iufxqknpir"))
                .withGatewayAddress("epttwqmsniff"))
            .withRevision(1898314842016883158L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("wct", model.displayName());
        Assertions.assertEquals("dzjlu", model.connectedGateway());
        Assertions.assertEquals("lwg", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("epttwqmsniff", model.subnet().gatewayAddress());
        Assertions.assertEquals(1898314842016883158L, model.revision());
    }
}
