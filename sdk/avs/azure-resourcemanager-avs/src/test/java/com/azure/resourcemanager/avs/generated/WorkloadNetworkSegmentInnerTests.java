// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkSegmentInner;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"scjeypv\",\"connectedGateway\":\"zrkgqhcjrefovg\",\"subnet\":{\"dhcpRanges\":[\"leyyvx\"],\"gatewayAddress\":\"jpkcattpng\"},\"portVif\":[{\"portName\":\"czsqpjhvm\"},{\"portName\":\"jvnysounqe\"},{\"portName\":\"noae\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Updating\",\"revision\":9024707891893513418},\"id\":\"pmopjmc\",\"name\":\"atuokthfuiu\",\"type\":\"odsfcpkvxodpuozm\"}")
            .toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("scjeypv", model.displayName());
        Assertions.assertEquals("zrkgqhcjrefovg", model.connectedGateway());
        Assertions.assertEquals("leyyvx", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("jpkcattpng", model.subnet().gatewayAddress());
        Assertions.assertEquals(9024707891893513418L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentInner model = new WorkloadNetworkSegmentInner().withDisplayName("scjeypv")
            .withConnectedGateway("zrkgqhcjrefovg")
            .withSubnet(new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("leyyvx"))
                .withGatewayAddress("jpkcattpng"))
            .withRevision(9024707891893513418L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("scjeypv", model.displayName());
        Assertions.assertEquals("zrkgqhcjrefovg", model.connectedGateway());
        Assertions.assertEquals("leyyvx", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("jpkcattpng", model.subnet().gatewayAddress());
        Assertions.assertEquals(9024707891893513418L, model.revision());
    }
}
