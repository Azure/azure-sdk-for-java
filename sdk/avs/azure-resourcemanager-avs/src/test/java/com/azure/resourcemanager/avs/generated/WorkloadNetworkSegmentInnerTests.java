// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkSegmentInner;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"tizzronasxif\",\"connectedGateway\":\"zq\",\"subnet\":{\"dhcpRanges\":[\"tw\"],\"gatewayAddress\":\"gogczhonnxkrlgny\"},\"portVif\":[{\"portName\":\"sxkkg\"},{\"portName\":\"rrghxjbdhqxvcxgf\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Succeeded\",\"revision\":4282433214728373807},\"id\":\"rnsvbuswd\",\"name\":\"z\",\"type\":\"ybycnunvj\"}")
            .toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("tizzronasxif", model.displayName());
        Assertions.assertEquals("zq", model.connectedGateway());
        Assertions.assertEquals("tw", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("gogczhonnxkrlgny", model.subnet().gatewayAddress());
        Assertions.assertEquals(4282433214728373807L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentInner model = new WorkloadNetworkSegmentInner().withDisplayName("tizzronasxif")
            .withConnectedGateway("zq")
            .withSubnet(new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("tw"))
                .withGatewayAddress("gogczhonnxkrlgny"))
            .withRevision(4282433214728373807L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("tizzronasxif", model.displayName());
        Assertions.assertEquals("zq", model.connectedGateway());
        Assertions.assertEquals("tw", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("gogczhonnxkrlgny", model.subnet().gatewayAddress());
        Assertions.assertEquals(4282433214728373807L, model.revision());
    }
}
