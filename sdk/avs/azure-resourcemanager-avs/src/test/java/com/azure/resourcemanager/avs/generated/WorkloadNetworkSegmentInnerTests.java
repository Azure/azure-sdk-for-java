// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkSegmentInner;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"twbdsrezpdrhn\",\"connectedGateway\":\"yowqkdwytisibir\",\"subnet\":{\"dhcpRanges\":[\"kpzi\",\"ejzanlfz\",\"iavrm\"],\"gatewayAddress\":\"onok\"},\"portVif\":[{\"portName\":\"q\"}],\"status\":\"SUCCESS\",\"provisioningState\":\"Succeeded\",\"revision\":2813820823921531110},\"id\":\"azszrnwoiindfpw\",\"name\":\"jylwbtlhflsj\",\"type\":\"dhszfjv\"}")
            .toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("twbdsrezpdrhn", model.displayName());
        Assertions.assertEquals("yowqkdwytisibir", model.connectedGateway());
        Assertions.assertEquals("kpzi", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("onok", model.subnet().gatewayAddress());
        Assertions.assertEquals(2813820823921531110L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentInner model = new WorkloadNetworkSegmentInner().withDisplayName("twbdsrezpdrhn")
            .withConnectedGateway("yowqkdwytisibir")
            .withSubnet(new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("kpzi", "ejzanlfz", "iavrm"))
                .withGatewayAddress("onok"))
            .withRevision(2813820823921531110L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("twbdsrezpdrhn", model.displayName());
        Assertions.assertEquals("yowqkdwytisibir", model.connectedGateway());
        Assertions.assertEquals("kpzi", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("onok", model.subnet().gatewayAddress());
        Assertions.assertEquals(2813820823921531110L, model.revision());
    }
}
