// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkSegmentInner;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"iuebbaumny\",\"connectedGateway\":\"ped\",\"subnet\":{\"dhcpRanges\":[\"a\",\"ckhsmtxpsieb\",\"fhvpesaps\"],\"gatewayAddress\":\"dqmh\"},\"portVif\":[{\"portName\":\"tldwkyzxuutk\"},{\"portName\":\"ws\"},{\"portName\":\"svlxotogtwrup\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Building\",\"revision\":896120017372838413},\"id\":\"kvceoveilovnotyf\",\"name\":\"fcnj\",\"type\":\"k\"}")
            .toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("iuebbaumny", model.displayName());
        Assertions.assertEquals("ped", model.connectedGateway());
        Assertions.assertEquals("a", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("dqmh", model.subnet().gatewayAddress());
        Assertions.assertEquals(896120017372838413L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentInner model = new WorkloadNetworkSegmentInner().withDisplayName("iuebbaumny")
            .withConnectedGateway("ped")
            .withSubnet(
                new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("a", "ckhsmtxpsieb", "fhvpesaps"))
                    .withGatewayAddress("dqmh"))
            .withRevision(896120017372838413L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("iuebbaumny", model.displayName());
        Assertions.assertEquals("ped", model.connectedGateway());
        Assertions.assertEquals("a", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("dqmh", model.subnet().gatewayAddress());
        Assertions.assertEquals(896120017372838413L, model.revision());
    }
}
