// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkSegmentInner;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"abikns\",\"connectedGateway\":\"gj\",\"subnet\":{\"dhcpRanges\":[\"dtlwwrlkd\",\"tncvokot\"],\"gatewayAddress\":\"xdy\"},\"portVif\":[{\"portName\":\"ocogj\"},{\"portName\":\"dtbnnha\"},{\"portName\":\"ocrkvcikh\"},{\"portName\":\"p\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Succeeded\",\"revision\":7776859938318021776},\"id\":\"zikywgg\",\"name\":\"kallatmel\",\"type\":\"uipiccjzk\"}")
            .toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("abikns", model.displayName());
        Assertions.assertEquals("gj", model.connectedGateway());
        Assertions.assertEquals("dtlwwrlkd", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("xdy", model.subnet().gatewayAddress());
        Assertions.assertEquals(7776859938318021776L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentInner model = new WorkloadNetworkSegmentInner().withDisplayName("abikns")
            .withConnectedGateway("gj")
            .withSubnet(new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("dtlwwrlkd", "tncvokot"))
                .withGatewayAddress("xdy"))
            .withRevision(7776859938318021776L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("abikns", model.displayName());
        Assertions.assertEquals("gj", model.connectedGateway());
        Assertions.assertEquals("dtlwwrlkd", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("xdy", model.subnet().gatewayAddress());
        Assertions.assertEquals(7776859938318021776L, model.revision());
    }
}
