// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkSegmentInner;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"prot\",\"connectedGateway\":\"pundmbxhug\",\"subnet\":{\"dhcpRanges\":[\"avlg\"],\"gatewayAddress\":\"bmftpmdt\"},\"portVif\":[{\"portName\":\"tfvnz\"},{\"portName\":\"jtotpvopvpbd\"},{\"portName\":\"qgqqihedsvqwthmk\"},{\"portName\":\"bcysih\"}],\"status\":\"SUCCESS\",\"provisioningState\":\"Succeeded\",\"revision\":5483811337729194379},\"id\":\"sdtmcdzs\",\"name\":\"fcohdxbzlmcmu\",\"type\":\"pcvhdbevwqqxeys\"}")
            .toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("prot", model.displayName());
        Assertions.assertEquals("pundmbxhug", model.connectedGateway());
        Assertions.assertEquals("avlg", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("bmftpmdt", model.subnet().gatewayAddress());
        Assertions.assertEquals(5483811337729194379L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentInner model = new WorkloadNetworkSegmentInner().withDisplayName("prot")
            .withConnectedGateway("pundmbxhug")
            .withSubnet(
                new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("avlg")).withGatewayAddress("bmftpmdt"))
            .withRevision(5483811337729194379L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("prot", model.displayName());
        Assertions.assertEquals("pundmbxhug", model.connectedGateway());
        Assertions.assertEquals("avlg", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("bmftpmdt", model.subnet().gatewayAddress());
        Assertions.assertEquals(5483811337729194379L, model.revision());
    }
}
