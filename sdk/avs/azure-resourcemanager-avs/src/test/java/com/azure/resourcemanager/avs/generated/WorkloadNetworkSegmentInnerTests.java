// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkSegmentInner;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"f\",\"connectedGateway\":\"vhrfsphuagrt\",\"subnet\":{\"dhcpRanges\":[\"eusqczkvyklxu\",\"yja\",\"fmmfblcqcu\",\"bgq\"],\"gatewayAddress\":\"rtalmet\"},\"portVif\":[{\"portName\":\"dslqxihhrmooizqs\"},{\"portName\":\"pxiutc\"}],\"status\":\"SUCCESS\",\"provisioningState\":\"Failed\",\"revision\":5661325828511806950},\"id\":\"togebjoxsl\",\"name\":\"vnh\",\"type\":\"abrqnkkzj\"}")
            .toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("f", model.displayName());
        Assertions.assertEquals("vhrfsphuagrt", model.connectedGateway());
        Assertions.assertEquals("eusqczkvyklxu", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("rtalmet", model.subnet().gatewayAddress());
        Assertions.assertEquals(5661325828511806950L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentInner model = new WorkloadNetworkSegmentInner().withDisplayName("f")
            .withConnectedGateway("vhrfsphuagrt")
            .withSubnet(new WorkloadNetworkSegmentSubnet()
                .withDhcpRanges(Arrays.asList("eusqczkvyklxu", "yja", "fmmfblcqcu", "bgq"))
                .withGatewayAddress("rtalmet"))
            .withRevision(5661325828511806950L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentInner.class);
        Assertions.assertEquals("f", model.displayName());
        Assertions.assertEquals("vhrfsphuagrt", model.connectedGateway());
        Assertions.assertEquals("eusqczkvyklxu", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("rtalmet", model.subnet().gatewayAddress());
        Assertions.assertEquals(5661325828511806950L, model.revision());
    }
}
