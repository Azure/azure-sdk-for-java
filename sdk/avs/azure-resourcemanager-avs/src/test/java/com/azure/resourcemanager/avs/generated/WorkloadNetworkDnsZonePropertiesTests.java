// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZonePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = BinaryData.fromString(
            "{\"displayName\":\"obaiyhddviaceg\",\"domain\":[\"ntfpmvmemfnc\"],\"dnsServerIps\":[\"vvbalx\"],\"sourceIp\":\"lchpodbzevwrdn\",\"dnsServices\":4609142412513709253,\"provisioningState\":\"Canceled\",\"revision\":9047416798509661707}")
            .toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("obaiyhddviaceg", model.displayName());
        Assertions.assertEquals("ntfpmvmemfnc", model.domain().get(0));
        Assertions.assertEquals("vvbalx", model.dnsServerIps().get(0));
        Assertions.assertEquals("lchpodbzevwrdn", model.sourceIp());
        Assertions.assertEquals(4609142412513709253L, model.dnsServices());
        Assertions.assertEquals(9047416798509661707L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model
            = new WorkloadNetworkDnsZoneProperties().withDisplayName("obaiyhddviaceg")
                .withDomain(Arrays.asList("ntfpmvmemfnc"))
                .withDnsServerIps(Arrays.asList("vvbalx"))
                .withSourceIp("lchpodbzevwrdn")
                .withDnsServices(4609142412513709253L)
                .withRevision(9047416798509661707L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("obaiyhddviaceg", model.displayName());
        Assertions.assertEquals("ntfpmvmemfnc", model.domain().get(0));
        Assertions.assertEquals("vvbalx", model.dnsServerIps().get(0));
        Assertions.assertEquals("lchpodbzevwrdn", model.sourceIp());
        Assertions.assertEquals(4609142412513709253L, model.dnsServices());
        Assertions.assertEquals(9047416798509661707L, model.revision());
    }
}
