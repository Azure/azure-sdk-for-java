// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZonePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = BinaryData.fromString(
            "{\"displayName\":\"gq\",\"domain\":[\"hejhzisx\",\"fpel\",\"lppvksrpq\"],\"dnsServerIps\":[\"zraehtwd\",\"r\",\"tswiby\"],\"sourceIp\":\"dl\",\"dnsServices\":6608655504184346105,\"provisioningState\":\"Updating\",\"revision\":397353475814237502}")
            .toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("gq", model.displayName());
        Assertions.assertEquals("hejhzisx", model.domain().get(0));
        Assertions.assertEquals("zraehtwd", model.dnsServerIps().get(0));
        Assertions.assertEquals("dl", model.sourceIp());
        Assertions.assertEquals(6608655504184346105L, model.dnsServices());
        Assertions.assertEquals(397353475814237502L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = new WorkloadNetworkDnsZoneProperties().withDisplayName("gq")
            .withDomain(Arrays.asList("hejhzisx", "fpel", "lppvksrpq"))
            .withDnsServerIps(Arrays.asList("zraehtwd", "r", "tswiby"))
            .withSourceIp("dl")
            .withDnsServices(6608655504184346105L)
            .withRevision(397353475814237502L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("gq", model.displayName());
        Assertions.assertEquals("hejhzisx", model.domain().get(0));
        Assertions.assertEquals("zraehtwd", model.dnsServerIps().get(0));
        Assertions.assertEquals("dl", model.sourceIp());
        Assertions.assertEquals(6608655504184346105L, model.dnsServices());
        Assertions.assertEquals(397353475814237502L, model.revision());
    }
}
