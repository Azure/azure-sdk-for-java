// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZonePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = BinaryData.fromString(
            "{\"displayName\":\"jorwkqnyhgbij\",\"domain\":[\"vfxzsjab\",\"bsystawfsdjpvk\",\"p\",\"jxbkzbzkdvn\"],\"dnsServerIps\":[\"budurgkakmo\",\"zhjjklffhmouwq\"],\"sourceIp\":\"zrfze\",\"dnsServices\":515977461,\"provisioningState\":\"Failed\",\"revision\":7551956675766407600}")
            .toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("jorwkqnyhgbij", model.displayName());
        Assertions.assertEquals("vfxzsjab", model.domain().get(0));
        Assertions.assertEquals("budurgkakmo", model.dnsServerIps().get(0));
        Assertions.assertEquals("zrfze", model.sourceIp());
        Assertions.assertEquals(515977461, model.dnsServices());
        Assertions.assertEquals(7551956675766407600L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = new WorkloadNetworkDnsZoneProperties().withDisplayName("jorwkqnyhgbij")
            .withDomain(Arrays.asList("vfxzsjab", "bsystawfsdjpvk", "p", "jxbkzbzkdvn"))
            .withDnsServerIps(Arrays.asList("budurgkakmo", "zhjjklffhmouwq"))
            .withSourceIp("zrfze")
            .withDnsServices(515977461)
            .withRevision(7551956675766407600L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("jorwkqnyhgbij", model.displayName());
        Assertions.assertEquals("vfxzsjab", model.domain().get(0));
        Assertions.assertEquals("budurgkakmo", model.dnsServerIps().get(0));
        Assertions.assertEquals("zrfze", model.sourceIp());
        Assertions.assertEquals(515977461, model.dnsServices());
        Assertions.assertEquals(7551956675766407600L, model.revision());
    }
}
