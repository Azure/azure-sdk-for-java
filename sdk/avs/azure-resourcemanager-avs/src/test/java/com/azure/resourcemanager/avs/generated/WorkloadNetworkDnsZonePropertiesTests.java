// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZonePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = BinaryData.fromString(
            "{\"displayName\":\"fsdjpvkvp\",\"domain\":[\"bkzbzkd\",\"ncj\",\"budurgkakmo\"],\"dnsServerIps\":[\"jjklff\",\"mouwqlgzrfzeey\"],\"sourceIp\":\"izikayuhq\",\"dnsServices\":2014142159,\"provisioningState\":\"Failed\",\"revision\":1622110417536296594}")
            .toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("fsdjpvkvp", model.displayName());
        Assertions.assertEquals("bkzbzkd", model.domain().get(0));
        Assertions.assertEquals("jjklff", model.dnsServerIps().get(0));
        Assertions.assertEquals("izikayuhq", model.sourceIp());
        Assertions.assertEquals(2014142159, model.dnsServices());
        Assertions.assertEquals(1622110417536296594L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = new WorkloadNetworkDnsZoneProperties().withDisplayName("fsdjpvkvp")
            .withDomain(Arrays.asList("bkzbzkd", "ncj", "budurgkakmo"))
            .withDnsServerIps(Arrays.asList("jjklff", "mouwqlgzrfzeey"))
            .withSourceIp("izikayuhq")
            .withDnsServices(2014142159)
            .withRevision(1622110417536296594L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("fsdjpvkvp", model.displayName());
        Assertions.assertEquals("bkzbzkd", model.domain().get(0));
        Assertions.assertEquals("jjklff", model.dnsServerIps().get(0));
        Assertions.assertEquals("izikayuhq", model.sourceIp());
        Assertions.assertEquals(2014142159, model.dnsServices());
        Assertions.assertEquals(1622110417536296594L, model.revision());
    }
}
