// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZonePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = BinaryData.fromString(
            "{\"displayName\":\"r\",\"domain\":[\"dmjsjqb\",\"hhyxxrw\",\"yc\",\"duhpk\"],\"dnsServerIps\":[\"ymareqnajxqugj\",\"ky\"],\"sourceIp\":\"beddgssofw\",\"dnsServices\":1153520576,\"provisioningState\":\"Deleting\",\"revision\":7998631817770989072}")
            .toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("r", model.displayName());
        Assertions.assertEquals("dmjsjqb", model.domain().get(0));
        Assertions.assertEquals("ymareqnajxqugj", model.dnsServerIps().get(0));
        Assertions.assertEquals("beddgssofw", model.sourceIp());
        Assertions.assertEquals(1153520576, model.dnsServices());
        Assertions.assertEquals(7998631817770989072L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = new WorkloadNetworkDnsZoneProperties().withDisplayName("r")
            .withDomain(Arrays.asList("dmjsjqb", "hhyxxrw", "yc", "duhpk"))
            .withDnsServerIps(Arrays.asList("ymareqnajxqugj", "ky"))
            .withSourceIp("beddgssofw")
            .withDnsServices(1153520576)
            .withRevision(7998631817770989072L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("r", model.displayName());
        Assertions.assertEquals("dmjsjqb", model.domain().get(0));
        Assertions.assertEquals("ymareqnajxqugj", model.dnsServerIps().get(0));
        Assertions.assertEquals("beddgssofw", model.sourceIp());
        Assertions.assertEquals(1153520576, model.dnsServices());
        Assertions.assertEquals(7998631817770989072L, model.revision());
    }
}
