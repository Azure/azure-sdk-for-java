// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZonePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = BinaryData.fromString(
            "{\"displayName\":\"hyjsvfycx\",\"domain\":[\"voowvr\",\"mtg\"],\"dnsServerIps\":[\"pyostronzmyhgfi\",\"nsxkmcwaekrrjr\",\"afxtsgum\",\"jglikkxwslolb\"],\"sourceIp\":\"vuzlm\",\"dnsServices\":4397404082163755540,\"provisioningState\":\"Failed\",\"revision\":8984187394901716724}")
            .toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("hyjsvfycx", model.displayName());
        Assertions.assertEquals("voowvr", model.domain().get(0));
        Assertions.assertEquals("pyostronzmyhgfi", model.dnsServerIps().get(0));
        Assertions.assertEquals("vuzlm", model.sourceIp());
        Assertions.assertEquals(4397404082163755540L, model.dnsServices());
        Assertions.assertEquals(8984187394901716724L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = new WorkloadNetworkDnsZoneProperties().withDisplayName("hyjsvfycx")
            .withDomain(Arrays.asList("voowvr", "mtg"))
            .withDnsServerIps(Arrays.asList("pyostronzmyhgfi", "nsxkmcwaekrrjr", "afxtsgum", "jglikkxwslolb"))
            .withSourceIp("vuzlm")
            .withDnsServices(4397404082163755540L)
            .withRevision(8984187394901716724L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("hyjsvfycx", model.displayName());
        Assertions.assertEquals("voowvr", model.domain().get(0));
        Assertions.assertEquals("pyostronzmyhgfi", model.dnsServerIps().get(0));
        Assertions.assertEquals("vuzlm", model.sourceIp());
        Assertions.assertEquals(4397404082163755540L, model.dnsServices());
        Assertions.assertEquals(8984187394901716724L, model.revision());
    }
}
