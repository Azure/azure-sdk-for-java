// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.ClusterUpdate;
import com.azure.resourcemanager.avs.models.Sku;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterUpdate model = BinaryData.fromString(
            "{\"sku\":{\"name\":\"hmuouqfprwzwbn\",\"tier\":\"Premium\",\"size\":\"nwui\",\"family\":\"a\",\"capacity\":8203543},\"properties\":{\"clusterSize\":1785230840,\"hosts\":[\"kyfi\",\"rfidfvzwdz\"]}}")
            .toObject(ClusterUpdate.class);
        Assertions.assertEquals("hmuouqfprwzwbn", model.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.sku().tier());
        Assertions.assertEquals("nwui", model.sku().size());
        Assertions.assertEquals("a", model.sku().family());
        Assertions.assertEquals(8203543, model.sku().capacity());
        Assertions.assertEquals(1785230840, model.clusterSize());
        Assertions.assertEquals("kyfi", model.hosts().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterUpdate model = new ClusterUpdate().withSku(new Sku().withName("hmuouqfprwzwbn")
            .withTier(SkuTier.PREMIUM)
            .withSize("nwui")
            .withFamily("a")
            .withCapacity(8203543)).withClusterSize(1785230840).withHosts(Arrays.asList("kyfi", "rfidfvzwdz"));
        model = BinaryData.fromObject(model).toObject(ClusterUpdate.class);
        Assertions.assertEquals("hmuouqfprwzwbn", model.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.sku().tier());
        Assertions.assertEquals("nwui", model.sku().size());
        Assertions.assertEquals("a", model.sku().family());
        Assertions.assertEquals(8203543, model.sku().capacity());
        Assertions.assertEquals(1785230840, model.clusterSize());
        Assertions.assertEquals("kyfi", model.hosts().get(0));
    }
}
