// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.ClusterUpdate;
import com.azure.resourcemanager.avs.models.Sku;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterUpdate model = BinaryData.fromString(
            "{\"sku\":{\"name\":\"auu\",\"tier\":\"Basic\",\"size\":\"vxieduugidyj\",\"family\":\"f\",\"capacity\":786534004},\"properties\":{\"clusterSize\":93185233,\"hosts\":[\"csonpclhoco\"]}}")
            .toObject(ClusterUpdate.class);
        Assertions.assertEquals("auu", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("vxieduugidyj", model.sku().size());
        Assertions.assertEquals("f", model.sku().family());
        Assertions.assertEquals(786534004, model.sku().capacity());
        Assertions.assertEquals(93185233, model.clusterSize());
        Assertions.assertEquals("csonpclhoco", model.hosts().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterUpdate model = new ClusterUpdate().withSku(new Sku().withName("auu")
            .withTier(SkuTier.BASIC)
            .withSize("vxieduugidyj")
            .withFamily("f")
            .withCapacity(786534004)).withClusterSize(93185233).withHosts(Arrays.asList("csonpclhoco"));
        model = BinaryData.fromObject(model).toObject(ClusterUpdate.class);
        Assertions.assertEquals("auu", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("vxieduugidyj", model.sku().size());
        Assertions.assertEquals("f", model.sku().family());
        Assertions.assertEquals(786534004, model.sku().capacity());
        Assertions.assertEquals(93185233, model.clusterSize());
        Assertions.assertEquals("csonpclhoco", model.hosts().get(0));
    }
}
