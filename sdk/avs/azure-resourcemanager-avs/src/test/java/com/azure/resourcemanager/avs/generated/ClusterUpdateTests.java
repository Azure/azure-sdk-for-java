// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.ClusterUpdate;
import com.azure.resourcemanager.avs.models.Sku;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterUpdate model = BinaryData.fromString(
            "{\"sku\":{\"name\":\"sjnkal\",\"tier\":\"Standard\",\"size\":\"iswac\",\"family\":\"gdkz\",\"capacity\":1157139188},\"properties\":{\"clusterSize\":2137392775,\"hosts\":[\"crailvpn\",\"pfuflrw\",\"mh\",\"lxyjr\"]}}")
            .toObject(ClusterUpdate.class);
        Assertions.assertEquals("sjnkal", model.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals("iswac", model.sku().size());
        Assertions.assertEquals("gdkz", model.sku().family());
        Assertions.assertEquals(1157139188, model.sku().capacity());
        Assertions.assertEquals(2137392775, model.clusterSize());
        Assertions.assertEquals("crailvpn", model.hosts().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterUpdate model = new ClusterUpdate()
            .withSku(new Sku().withName("sjnkal")
                .withTier(SkuTier.STANDARD)
                .withSize("iswac")
                .withFamily("gdkz")
                .withCapacity(1157139188))
            .withClusterSize(2137392775)
            .withHosts(Arrays.asList("crailvpn", "pfuflrw", "mh", "lxyjr"));
        model = BinaryData.fromObject(model).toObject(ClusterUpdate.class);
        Assertions.assertEquals("sjnkal", model.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals("iswac", model.sku().size());
        Assertions.assertEquals("gdkz", model.sku().family());
        Assertions.assertEquals(1157139188, model.sku().capacity());
        Assertions.assertEquals(2137392775, model.clusterSize());
        Assertions.assertEquals("crailvpn", model.hosts().get(0));
    }
}
