// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import com.azure.resourcemanager.avs.models.ScriptOutputStreamType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScriptExecutionsGetExecutionLogsWithResponseMockTests {
    @Test
    public void testGetExecutionLogsWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"scriptCmdletId\":\"szhv\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"c\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"hvtrrmhwrbfdpyf\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"ubhvj\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"ocu\"}],\"failureReason\":\"lw\",\"timeout\":\"hmem\",\"retention\":\"oclu\",\"submittedAt\":\"2021-08-23T19:22:29Z\",\"startedAt\":\"2021-11-26T19:05Z\",\"finishedAt\":\"2021-08-15T12:03:46Z\",\"provisioningState\":\"Cancelling\",\"output\":[\"mmyky\",\"jxsglhsr\",\"rye\",\"ylmbkzudni\"],\"namedOutputs\":{\"refqy\":\"dataihotjewlpxuzzjg\",\"kwpzdqtvh\":\"dataqotoihiqakydiwfb\"},\"information\":[\"odaqaxsi\",\"ietgbebjfu\"],\"warnings\":[\"oichdlpnfpubnt\",\"batzviqsows\",\"aelcat\",\"cjuhplrvkm\"],\"errors\":[\"mjvlgfgg\"]},\"id\":\"kyylizr\",\"name\":\"bjpsfxsfuztlvtm\",\"type\":\"agb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ScriptExecution response = manager.scriptExecutions()
            .getExecutionLogsWithResponse("mtkhlowkxxpvbr", "fjmzsyzfho", "lhikcyychunsj",
                Arrays.asList(ScriptOutputStreamType.WARNING, ScriptOutputStreamType.INFORMATION),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("szhv", response.scriptCmdletId());
        Assertions.assertEquals("c", response.parameters().get(0).name());
        Assertions.assertEquals("ocu", response.hiddenParameters().get(0).name());
        Assertions.assertEquals("lw", response.failureReason());
        Assertions.assertEquals("hmem", response.timeout());
        Assertions.assertEquals("oclu", response.retention());
        Assertions.assertEquals("mmyky", response.output().get(0));
    }
}
