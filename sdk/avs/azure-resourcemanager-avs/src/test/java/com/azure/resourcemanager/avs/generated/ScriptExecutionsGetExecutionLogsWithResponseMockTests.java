// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import com.azure.resourcemanager.avs.models.ScriptOutputStreamType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScriptExecutionsGetExecutionLogsWithResponseMockTests {
    @Test
    public void testGetExecutionLogsWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"scriptCmdletId\":\"tcmwqkchc\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"xfe\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"kjexfdeqvhp\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"ylkkshkbffmbm\"}],\"failureReason\":\"jrgywwpgjxsn\",\"timeout\":\"tf\",\"retention\":\"gicgaaoepttaq\",\"submittedAt\":\"2021-09-18T02:59:55Z\",\"startedAt\":\"2021-07-04T14:20:54Z\",\"finishedAt\":\"2021-03-21T09:40:42Z\",\"provisioningState\":\"Failed\",\"output\":[\"ruunzzjgehkf\"],\"namedOutputs\":{\"yinljqe\":\"datartixokff\"},\"information\":[\"hi\",\"monstshiyxgve\",\"fclduccbirdsv\"],\"warnings\":[\"o\",\"iegstm\",\"inwjizcilngh\",\"shejjtbxqm\"],\"errors\":[\"xlxqzvn\",\"rsbycucrwn\",\"mikzeb\"]},\"id\":\"bsmswziqgf\",\"name\":\"hokzrusw\",\"type\":\"vhczznvfby\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ScriptExecution response = manager.scriptExecutions()
            .getExecutionLogsWithResponse("cez", "lfwyfwlwxjwetn", "sihclafzvaylp",
                Arrays.asList(ScriptOutputStreamType.INFORMATION, ScriptOutputStreamType.WARNING,
                    ScriptOutputStreamType.OUTPUT),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("tcmwqkchc", response.scriptCmdletId());
        Assertions.assertEquals("xfe", response.parameters().get(0).name());
        Assertions.assertEquals("kjexfdeqvhp", response.hiddenParameters().get(0).name());
        Assertions.assertEquals("jrgywwpgjxsn", response.failureReason());
        Assertions.assertEquals("tf", response.timeout());
        Assertions.assertEquals("gicgaaoepttaq", response.retention());
        Assertions.assertEquals("ruunzzjgehkf", response.output().get(0));
    }
}
