// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import com.azure.resourcemanager.avs.models.ScriptOutputStreamType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScriptExecutionsGetExecutionLogsWithResponseMockTests {
    @Test
    public void testGetExecutionLogsWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"scriptCmdletId\":\"eseyqr\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"eldotjv\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"iswskuk\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"tasbvw\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"spkxkdt\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"fkndl\"}],\"failureReason\":\"twknvgm\",\"timeout\":\"bugtywatmqa\",\"retention\":\"ueatgroe\",\"submittedAt\":\"2021-01-30T18:47:37Z\",\"startedAt\":\"2021-11-24T21:27:46Z\",\"finishedAt\":\"2021-06-01T18:30:25Z\",\"provisioningState\":\"Succeeded\",\"output\":[\"x\",\"faoytehqpuv\",\"mvqmtdwckygroej\"],\"namedOutputs\":{\"kceysfaqegplw\":\"dataljdjuskbrreqy\",\"ddkvbxgkqu\":\"dataysh\",\"arvvlfnt\":\"dataybwptda\"},\"information\":[\"poi\"],\"warnings\":[\"azerohzrsq\"],\"errors\":[\"xkdnwqapf\",\"sdpcvess\",\"zhhkuuipldqqc\",\"ekvalblhtjq\"]},\"id\":\"yvwehtaemxh\",\"name\":\"zysevusxi\",\"type\":\"zrrryv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ScriptExecution response = manager.scriptExecutions()
            .getExecutionLogsWithResponse("napfdqwowftpt", "uwjtks", "h",
                Arrays.asList(ScriptOutputStreamType.INFORMATION, ScriptOutputStreamType.OUTPUT,
                    ScriptOutputStreamType.INFORMATION),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("eseyqr", response.scriptCmdletId());
        Assertions.assertEquals("eldotjv", response.parameters().get(0).name());
        Assertions.assertEquals("iswskuk", response.hiddenParameters().get(0).name());
        Assertions.assertEquals("twknvgm", response.failureReason());
        Assertions.assertEquals("bugtywatmqa", response.timeout());
        Assertions.assertEquals("ueatgroe", response.retention());
        Assertions.assertEquals("x", response.output().get(0));
    }
}
