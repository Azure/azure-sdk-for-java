// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPortMirroring;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworkPortMirroringProfilesCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"mxqhndvnoamldse\",\"direction\":\"EGRESS\",\"source\":\"djh\",\"destination\":\"lzok\",\"status\":\"SUCCESS\",\"provisioningState\":\"Succeeded\",\"revision\":947940587713808603},\"id\":\"eta\",\"name\":\"ltsxoatf\",\"type\":\"g\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadNetworkPortMirroring response = manager.workloadNetworkPortMirroringProfiles()
            .define("gshejjtbxqmulux")
            .withExistingPrivateCloud("wcobie", "stmninwjizcilng")
            .withDisplayName("zvners")
            .withDirection(PortMirroringDirectionEnum.BIDIRECTIONAL)
            .withSource("crwnamikz")
            .withDestination("rqbsmswziq")
            .withRevision(6886133591151042666L)
            .create();

        Assertions.assertEquals("mxqhndvnoamldse", response.displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.EGRESS, response.direction());
        Assertions.assertEquals("djh", response.source());
        Assertions.assertEquals("lzok", response.destination());
        Assertions.assertEquals(947940587713808603L, response.revision());
    }
}
