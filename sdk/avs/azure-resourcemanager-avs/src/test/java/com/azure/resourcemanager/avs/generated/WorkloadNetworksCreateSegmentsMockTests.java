// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegment;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksCreateSegmentsMockTests {
    @Test
    public void testCreateSegments() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"ov\",\"connectedGateway\":\"pikqmh\",\"subnet\":{\"dhcpRanges\":[\"jrmzvupor\",\"zdfuydzvkfvxcnqm\",\"qpswokmvkhlggdhb\",\"mzqkz\"],\"gatewayAddress\":\"uwiwtglxxhljfpg\"},\"portVif\":[{\"portName\":\"mnzhrgmqg\"},{\"portName\":\"x\"},{\"portName\":\"qcbfrmbodths\"},{\"portName\":\"gvriibakclac\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Succeeded\",\"revision\":3084268757245425916},\"id\":\"au\",\"name\":\"lwvsgm\",\"type\":\"ohqfzizv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkloadNetworkSegment response = manager.workloadNetworks()
            .defineSegments("nlqwzdvpiwhx")
            .withExistingPrivateCloud("z", "yn")
            .withDisplayName("dtmaa")
            .withConnectedGateway("uhuxylrjvmtyg")
            .withSubnet(new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("yospspshc"))
                .withGatewayAddress("kyjpmspbps"))
            .withRevision(6032994899977489924L)
            .create();

        Assertions.assertEquals("ov", response.displayName());
        Assertions.assertEquals("pikqmh", response.connectedGateway());
        Assertions.assertEquals("jrmzvupor", response.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("uwiwtglxxhljfpg", response.subnet().gatewayAddress());
        Assertions.assertEquals(3084268757245425916L, response.revision());
    }
}
