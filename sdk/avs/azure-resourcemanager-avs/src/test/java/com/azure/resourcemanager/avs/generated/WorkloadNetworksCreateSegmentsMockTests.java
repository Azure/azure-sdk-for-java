// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegment;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksCreateSegmentsMockTests {
    @Test
    public void testCreateSegments() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"wzohm\",\"connectedGateway\":\"xxbsojklinhmd\",\"subnet\":{\"dhcpRanges\":[\"prqsgnzxojpsl\",\"vjgp\",\"iufiqwo\",\"xqvapcohh\"],\"gatewayAddress\":\"cqpqojxcxzrzdc\"},\"portVif\":[{\"portName\":\"enribc\"},{\"portName\":\"etzqd\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Succeeded\",\"revision\":4589440004011778535},\"id\":\"namtuatmzw\",\"name\":\"jj\",\"type\":\"cqtjzmi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadNetworkSegment response = manager.workloadNetworks()
            .defineSegments("mg")
            .withExistingPrivateCloud("oyueayfbpcmsp", "byrrueqth")
            .withDisplayName("scbbxig")
            .withConnectedGateway("xiidloped")
            .withSubnet(new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("yqyybxubmdna"))
                .withGatewayAddress("bqwremjela"))
            .withRevision(2916503884742775477L)
            .create();

        Assertions.assertEquals("wzohm", response.displayName());
        Assertions.assertEquals("xxbsojklinhmd", response.connectedGateway());
        Assertions.assertEquals("prqsgnzxojpsl", response.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("cqpqojxcxzrzdc", response.subnet().gatewayAddress());
        Assertions.assertEquals(4589440004011778535L, response.revision());
    }
}
