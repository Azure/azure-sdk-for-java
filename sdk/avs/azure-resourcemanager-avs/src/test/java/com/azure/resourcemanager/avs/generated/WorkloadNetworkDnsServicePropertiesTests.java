// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceProperties;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServicePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model = BinaryData.fromString(
            "{\"displayName\":\"l\",\"dnsServiceIp\":\"ab\",\"defaultDnsZone\":\"oefki\",\"fqdnZones\":[\"tpuqujmq\",\"gkfbtndoaong\",\"jcntuj\"],\"logLevel\":\"DEBUG\",\"status\":\"SUCCESS\",\"provisioningState\":\"Failed\",\"revision\":2832454646775459728}")
            .toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("l", model.displayName());
        Assertions.assertEquals("ab", model.dnsServiceIp());
        Assertions.assertEquals("oefki", model.defaultDnsZone());
        Assertions.assertEquals("tpuqujmq", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(2832454646775459728L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model = new WorkloadNetworkDnsServiceProperties().withDisplayName("l")
            .withDnsServiceIp("ab")
            .withDefaultDnsZone("oefki")
            .withFqdnZones(Arrays.asList("tpuqujmq", "gkfbtndoaong", "jcntuj"))
            .withLogLevel(DnsServiceLogLevelEnum.DEBUG)
            .withRevision(2832454646775459728L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("l", model.displayName());
        Assertions.assertEquals("ab", model.dnsServiceIp());
        Assertions.assertEquals("oefki", model.defaultDnsZone());
        Assertions.assertEquals("tpuqujmq", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(2832454646775459728L, model.revision());
    }
}
