// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceProperties;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServicePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model = BinaryData.fromString(
            "{\"displayName\":\"ynfs\",\"dnsServiceIp\":\"ljphuopxodl\",\"defaultDnsZone\":\"ynt\",\"fqdnZones\":[\"ihleos\",\"swsrms\",\"yzrpzbchckqqzq\"],\"logLevel\":\"ERROR\",\"status\":\"FAILURE\",\"provisioningState\":\"Deleting\",\"revision\":335810871861495992}")
            .toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("ynfs", model.displayName());
        Assertions.assertEquals("ljphuopxodl", model.dnsServiceIp());
        Assertions.assertEquals("ynt", model.defaultDnsZone());
        Assertions.assertEquals("ihleos", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.ERROR, model.logLevel());
        Assertions.assertEquals(335810871861495992L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model = new WorkloadNetworkDnsServiceProperties().withDisplayName("ynfs")
            .withDnsServiceIp("ljphuopxodl")
            .withDefaultDnsZone("ynt")
            .withFqdnZones(Arrays.asList("ihleos", "swsrms", "yzrpzbchckqqzq"))
            .withLogLevel(DnsServiceLogLevelEnum.ERROR)
            .withRevision(335810871861495992L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("ynfs", model.displayName());
        Assertions.assertEquals("ljphuopxodl", model.dnsServiceIp());
        Assertions.assertEquals("ynt", model.defaultDnsZone());
        Assertions.assertEquals("ihleos", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.ERROR, model.logLevel());
        Assertions.assertEquals(335810871861495992L, model.revision());
    }
}
