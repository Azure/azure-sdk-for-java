// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceProperties;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServicePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model =
            BinaryData
                .fromString(
                    "{\"displayName\":\"hgbijt\",\"dnsServiceIp\":\"vfxzsjab\",\"defaultDnsZone\":\"systawfsdjp\",\"fqdnZones\":[\"p\"],\"logLevel\":\"WARNING\",\"status\":\"FAILURE\",\"provisioningState\":\"Deleting\",\"revision\":1701030021377266817}")
                .toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("hgbijt", model.displayName());
        Assertions.assertEquals("vfxzsjab", model.dnsServiceIp());
        Assertions.assertEquals("systawfsdjp", model.defaultDnsZone());
        Assertions.assertEquals("p", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.WARNING, model.logLevel());
        Assertions.assertEquals(1701030021377266817L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model =
            new WorkloadNetworkDnsServiceProperties()
                .withDisplayName("hgbijt")
                .withDnsServiceIp("vfxzsjab")
                .withDefaultDnsZone("systawfsdjp")
                .withFqdnZones(Arrays.asList("p"))
                .withLogLevel(DnsServiceLogLevelEnum.WARNING)
                .withRevision(1701030021377266817L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("hgbijt", model.displayName());
        Assertions.assertEquals("vfxzsjab", model.dnsServiceIp());
        Assertions.assertEquals("systawfsdjp", model.defaultDnsZone());
        Assertions.assertEquals("p", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.WARNING, model.logLevel());
        Assertions.assertEquals(1701030021377266817L, model.revision());
    }
}
