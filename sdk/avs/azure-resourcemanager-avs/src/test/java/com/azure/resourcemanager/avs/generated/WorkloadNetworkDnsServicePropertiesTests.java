// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceProperties;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServicePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model = BinaryData.fromString(
            "{\"displayName\":\"kocrcjdkwtnhx\",\"dnsServiceIp\":\"jbiksqrglssai\",\"defaultDnsZone\":\"p\",\"fqdnZones\":[\"zlljfmppeebvm\"],\"logLevel\":\"INFO\",\"status\":\"SUCCESS\",\"provisioningState\":\"Canceled\",\"revision\":4984941355859305186}")
            .toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("kocrcjdkwtnhx", model.displayName());
        Assertions.assertEquals("jbiksqrglssai", model.dnsServiceIp());
        Assertions.assertEquals("p", model.defaultDnsZone());
        Assertions.assertEquals("zlljfmppeebvm", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.INFO, model.logLevel());
        Assertions.assertEquals(4984941355859305186L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model
            = new WorkloadNetworkDnsServiceProperties().withDisplayName("kocrcjdkwtnhx")
                .withDnsServiceIp("jbiksqrglssai")
                .withDefaultDnsZone("p")
                .withFqdnZones(Arrays.asList("zlljfmppeebvm"))
                .withLogLevel(DnsServiceLogLevelEnum.INFO)
                .withRevision(4984941355859305186L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("kocrcjdkwtnhx", model.displayName());
        Assertions.assertEquals("jbiksqrglssai", model.dnsServiceIp());
        Assertions.assertEquals("p", model.defaultDnsZone());
        Assertions.assertEquals("zlljfmppeebvm", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.INFO, model.logLevel());
        Assertions.assertEquals(4984941355859305186L, model.revision());
    }
}
