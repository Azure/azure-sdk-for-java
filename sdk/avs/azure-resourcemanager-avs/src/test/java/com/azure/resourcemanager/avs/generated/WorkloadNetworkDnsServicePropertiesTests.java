// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceProperties;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServicePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model = BinaryData.fromString(
            "{\"displayName\":\"ykutwpf\",\"dnsServiceIp\":\"a\",\"defaultDnsZone\":\"hrskdsnfd\",\"fqdnZones\":[\"akgtdlmkkzevdlh\",\"wpusdsttwvogv\",\"bejdcn\",\"qqmoaku\"],\"logLevel\":\"DEBUG\",\"status\":\"SUCCESS\",\"provisioningState\":\"Updating\",\"revision\":8437145680290186926}")
            .toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("ykutwpf", model.displayName());
        Assertions.assertEquals("a", model.dnsServiceIp());
        Assertions.assertEquals("hrskdsnfd", model.defaultDnsZone());
        Assertions.assertEquals("akgtdlmkkzevdlh", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(8437145680290186926L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model = new WorkloadNetworkDnsServiceProperties().withDisplayName("ykutwpf")
            .withDnsServiceIp("a")
            .withDefaultDnsZone("hrskdsnfd")
            .withFqdnZones(Arrays.asList("akgtdlmkkzevdlh", "wpusdsttwvogv", "bejdcn", "qqmoaku"))
            .withLogLevel(DnsServiceLogLevelEnum.DEBUG)
            .withRevision(8437145680290186926L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("ykutwpf", model.displayName());
        Assertions.assertEquals("a", model.dnsServiceIp());
        Assertions.assertEquals("hrskdsnfd", model.defaultDnsZone());
        Assertions.assertEquals("akgtdlmkkzevdlh", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(8437145680290186926L, model.revision());
    }
}
