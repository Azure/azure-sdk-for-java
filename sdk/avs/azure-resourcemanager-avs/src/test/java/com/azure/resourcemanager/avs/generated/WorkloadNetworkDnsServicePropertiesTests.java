// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceProperties;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServicePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model = BinaryData.fromString(
            "{\"displayName\":\"cjwvn\",\"dnsServiceIp\":\"ld\",\"defaultDnsZone\":\"gx\",\"fqdnZones\":[\"slpmutwuo\",\"grpkhjwniyqs\",\"uicpd\"],\"logLevel\":\"DEBUG\",\"status\":\"SUCCESS\",\"provisioningState\":\"Building\",\"revision\":2377355799268639179}")
            .toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("cjwvn", model.displayName());
        Assertions.assertEquals("ld", model.dnsServiceIp());
        Assertions.assertEquals("gx", model.defaultDnsZone());
        Assertions.assertEquals("slpmutwuo", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(2377355799268639179L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model = new WorkloadNetworkDnsServiceProperties().withDisplayName("cjwvn")
            .withDnsServiceIp("ld")
            .withDefaultDnsZone("gx")
            .withFqdnZones(Arrays.asList("slpmutwuo", "grpkhjwniyqs", "uicpd"))
            .withLogLevel(DnsServiceLogLevelEnum.DEBUG)
            .withRevision(2377355799268639179L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("cjwvn", model.displayName());
        Assertions.assertEquals("ld", model.dnsServiceIp());
        Assertions.assertEquals("gx", model.defaultDnsZone());
        Assertions.assertEquals("slpmutwuo", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(2377355799268639179L, model.revision());
    }
}
