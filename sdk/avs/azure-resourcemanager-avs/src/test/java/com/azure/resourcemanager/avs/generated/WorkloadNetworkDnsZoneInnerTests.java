// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"rolfpfp\",\"domain\":[\"gbquxigj\",\"jgzjaoyfhrtx\"],\"dnsServerIps\":[\"erkujys\"],\"sourceIp\":\"eju\",\"dnsServices\":189985345706603080,\"provisioningState\":\"Deleting\",\"revision\":7382179578323022889},\"id\":\"jkcpr\",\"name\":\"nwbxgjvtbvpyssz\",\"type\":\"nruj\"}")
            .toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("rolfpfp", model.displayName());
        Assertions.assertEquals("gbquxigj", model.domain().get(0));
        Assertions.assertEquals("erkujys", model.dnsServerIps().get(0));
        Assertions.assertEquals("eju", model.sourceIp());
        Assertions.assertEquals(189985345706603080L, model.dnsServices());
        Assertions.assertEquals(7382179578323022889L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = new WorkloadNetworkDnsZoneInner().withDisplayName("rolfpfp")
            .withDomain(Arrays.asList("gbquxigj", "jgzjaoyfhrtx"))
            .withDnsServerIps(Arrays.asList("erkujys"))
            .withSourceIp("eju")
            .withDnsServices(189985345706603080L)
            .withRevision(7382179578323022889L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("rolfpfp", model.displayName());
        Assertions.assertEquals("gbquxigj", model.domain().get(0));
        Assertions.assertEquals("erkujys", model.dnsServerIps().get(0));
        Assertions.assertEquals("eju", model.sourceIp());
        Assertions.assertEquals(189985345706603080L, model.dnsServices());
        Assertions.assertEquals(7382179578323022889L, model.revision());
    }
}
