// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"y\",\"domain\":[\"wlmdjrkv\",\"g\"],\"dnsServerIps\":[\"vpdbodaciz\",\"j\"],\"sourceIp\":\"hkr\",\"dnsServices\":268834532,\"provisioningState\":\"Updating\",\"revision\":775620038195341343},\"id\":\"p\",\"name\":\"kghv\",\"type\":\"ndzwmkrefa\"}")
            .toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("y", model.displayName());
        Assertions.assertEquals("wlmdjrkv", model.domain().get(0));
        Assertions.assertEquals("vpdbodaciz", model.dnsServerIps().get(0));
        Assertions.assertEquals("hkr", model.sourceIp());
        Assertions.assertEquals(268834532, model.dnsServices());
        Assertions.assertEquals(775620038195341343L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = new WorkloadNetworkDnsZoneInner().withDisplayName("y")
            .withDomain(Arrays.asList("wlmdjrkv", "g"))
            .withDnsServerIps(Arrays.asList("vpdbodaciz", "j"))
            .withSourceIp("hkr")
            .withDnsServices(268834532)
            .withRevision(775620038195341343L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("y", model.displayName());
        Assertions.assertEquals("wlmdjrkv", model.domain().get(0));
        Assertions.assertEquals("vpdbodaciz", model.dnsServerIps().get(0));
        Assertions.assertEquals("hkr", model.sourceIp());
        Assertions.assertEquals(268834532, model.dnsServices());
        Assertions.assertEquals(775620038195341343L, model.revision());
    }
}
