// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"whccs\",\"domain\":[\"aivwitqscywu\",\"gwol\"],\"dnsServerIps\":[\"zbwemh\",\"i\",\"sbrgz\",\"wmsweypqwd\"],\"sourceIp\":\"gicccnxqhuex\",\"dnsServices\":5852678166783434118,\"provisioningState\":\"Building\",\"revision\":3065309169479098927},\"id\":\"ywemhzrn\",\"name\":\"sdtclusiypbs\",\"type\":\"gytguslfead\"}")
            .toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("whccs", model.displayName());
        Assertions.assertEquals("aivwitqscywu", model.domain().get(0));
        Assertions.assertEquals("zbwemh", model.dnsServerIps().get(0));
        Assertions.assertEquals("gicccnxqhuex", model.sourceIp());
        Assertions.assertEquals(5852678166783434118L, model.dnsServices());
        Assertions.assertEquals(3065309169479098927L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = new WorkloadNetworkDnsZoneInner().withDisplayName("whccs")
            .withDomain(Arrays.asList("aivwitqscywu", "gwol"))
            .withDnsServerIps(Arrays.asList("zbwemh", "i", "sbrgz", "wmsweypqwd"))
            .withSourceIp("gicccnxqhuex")
            .withDnsServices(5852678166783434118L)
            .withRevision(3065309169479098927L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("whccs", model.displayName());
        Assertions.assertEquals("aivwitqscywu", model.domain().get(0));
        Assertions.assertEquals("zbwemh", model.dnsServerIps().get(0));
        Assertions.assertEquals("gicccnxqhuex", model.sourceIp());
        Assertions.assertEquals(5852678166783434118L, model.dnsServices());
        Assertions.assertEquals(3065309169479098927L, model.revision());
    }
}
