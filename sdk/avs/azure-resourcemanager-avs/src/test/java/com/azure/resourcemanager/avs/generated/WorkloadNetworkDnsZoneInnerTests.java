// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"osphyoul\",\"domain\":[\"v\",\"ag\",\"rvimjwosytxitcsk\",\"cktqumiekkezzi\"],\"dnsServerIps\":[\"yf\"],\"sourceIp\":\"dgqggebdu\",\"dnsServices\":253317009,\"provisioningState\":\"Deleting\",\"revision\":2683403328100371700},\"id\":\"qfatpxllrxcyjm\",\"name\":\"a\",\"type\":\"su\"}")
            .toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("osphyoul", model.displayName());
        Assertions.assertEquals("v", model.domain().get(0));
        Assertions.assertEquals("yf", model.dnsServerIps().get(0));
        Assertions.assertEquals("dgqggebdu", model.sourceIp());
        Assertions.assertEquals(253317009, model.dnsServices());
        Assertions.assertEquals(2683403328100371700L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = new WorkloadNetworkDnsZoneInner().withDisplayName("osphyoul")
            .withDomain(Arrays.asList("v", "ag", "rvimjwosytxitcsk", "cktqumiekkezzi"))
            .withDnsServerIps(Arrays.asList("yf"))
            .withSourceIp("dgqggebdu")
            .withDnsServices(253317009)
            .withRevision(2683403328100371700L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("osphyoul", model.displayName());
        Assertions.assertEquals("v", model.domain().get(0));
        Assertions.assertEquals("yf", model.dnsServerIps().get(0));
        Assertions.assertEquals("dgqggebdu", model.sourceIp());
        Assertions.assertEquals(253317009, model.dnsServices());
        Assertions.assertEquals(2683403328100371700L, model.revision());
    }
}
