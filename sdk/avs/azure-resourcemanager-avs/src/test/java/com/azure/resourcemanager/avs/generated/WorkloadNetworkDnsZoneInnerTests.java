// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"wjygvjayvblmhvk\",\"domain\":[\"bxvvyhg\",\"opbyrqufegxu\",\"wz\",\"bnhlmc\"],\"dnsServerIps\":[\"dn\"],\"sourceIp\":\"tvgbmhrixkwmy\",\"dnsServices\":7002191229633475908,\"provisioningState\":\"Failed\",\"revision\":2235045579103867231},\"id\":\"pna\",\"name\":\"xexccbdreaxhcexd\",\"type\":\"rvqahqkghtpwi\"}")
            .toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("wjygvjayvblmhvk", model.displayName());
        Assertions.assertEquals("bxvvyhg", model.domain().get(0));
        Assertions.assertEquals("dn", model.dnsServerIps().get(0));
        Assertions.assertEquals("tvgbmhrixkwmy", model.sourceIp());
        Assertions.assertEquals(7002191229633475908L, model.dnsServices());
        Assertions.assertEquals(2235045579103867231L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = new WorkloadNetworkDnsZoneInner().withDisplayName("wjygvjayvblmhvk")
            .withDomain(Arrays.asList("bxvvyhg", "opbyrqufegxu", "wz", "bnhlmc"))
            .withDnsServerIps(Arrays.asList("dn"))
            .withSourceIp("tvgbmhrixkwmy")
            .withDnsServices(7002191229633475908L)
            .withRevision(2235045579103867231L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("wjygvjayvblmhvk", model.displayName());
        Assertions.assertEquals("bxvvyhg", model.domain().get(0));
        Assertions.assertEquals("dn", model.dnsServerIps().get(0));
        Assertions.assertEquals("tvgbmhrixkwmy", model.sourceIp());
        Assertions.assertEquals(7002191229633475908L, model.dnsServices());
        Assertions.assertEquals(2235045579103867231L, model.revision());
    }
}
