// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"displayName\":\"gpikpzimejza\",\"domain\":[\"zxiavrm\",\"zonokixrjqci\",\"gzpfrla\"],\"dnsServerIps\":[\"rnwoiindfp\"],\"sourceIp\":\"jylwbtlhflsj\",\"dnsServices\":9210142067978159406,\"provisioningState\":\"Failed\",\"revision\":8719927850018337646},\"id\":\"bgofeljag\",\"name\":\"qmqhldvriii\",\"type\":\"jnalghf\"}")
                .toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("gpikpzimejza", model.displayName());
        Assertions.assertEquals("zxiavrm", model.domain().get(0));
        Assertions.assertEquals("rnwoiindfp", model.dnsServerIps().get(0));
        Assertions.assertEquals("jylwbtlhflsj", model.sourceIp());
        Assertions.assertEquals(9210142067978159406L, model.dnsServices());
        Assertions.assertEquals(8719927850018337646L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneInner model =
            new WorkloadNetworkDnsZoneInner()
                .withDisplayName("gpikpzimejza")
                .withDomain(Arrays.asList("zxiavrm", "zonokixrjqci", "gzpfrla"))
                .withDnsServerIps(Arrays.asList("rnwoiindfp"))
                .withSourceIp("jylwbtlhflsj")
                .withDnsServices(9210142067978159406L)
                .withRevision(8719927850018337646L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("gpikpzimejza", model.displayName());
        Assertions.assertEquals("zxiavrm", model.domain().get(0));
        Assertions.assertEquals("rnwoiindfp", model.dnsServerIps().get(0));
        Assertions.assertEquals("jylwbtlhflsj", model.sourceIp());
        Assertions.assertEquals(9210142067978159406L, model.dnsServices());
        Assertions.assertEquals(8719927850018337646L, model.revision());
    }
}
