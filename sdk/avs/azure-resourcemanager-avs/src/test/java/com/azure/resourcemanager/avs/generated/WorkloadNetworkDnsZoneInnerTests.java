// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"idjks\",\"domain\":[\"yxvxevblbjed\",\"ljlageuaulxu\",\"smjbnkppxyn\",\"nlsvxeiz\"],\"dnsServerIps\":[\"klnsrmffey\",\"xcktpiymerteeamm\",\"qiekkkzddrt\"],\"sourceIp\":\"doj\",\"dnsServices\":2082724442990629363,\"provisioningState\":\"Succeeded\",\"revision\":8464578871437548472},\"id\":\"eesvecu\",\"name\":\"jpxtxsuwprtuj\",\"type\":\"sawddjibabxvi\"}")
            .toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("idjks", model.displayName());
        Assertions.assertEquals("yxvxevblbjed", model.domain().get(0));
        Assertions.assertEquals("klnsrmffey", model.dnsServerIps().get(0));
        Assertions.assertEquals("doj", model.sourceIp());
        Assertions.assertEquals(2082724442990629363L, model.dnsServices());
        Assertions.assertEquals(8464578871437548472L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = new WorkloadNetworkDnsZoneInner().withDisplayName("idjks")
            .withDomain(Arrays.asList("yxvxevblbjed", "ljlageuaulxu", "smjbnkppxyn", "nlsvxeiz"))
            .withDnsServerIps(Arrays.asList("klnsrmffey", "xcktpiymerteeamm", "qiekkkzddrt"))
            .withSourceIp("doj")
            .withDnsServices(2082724442990629363L)
            .withRevision(8464578871437548472L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("idjks", model.displayName());
        Assertions.assertEquals("yxvxevblbjed", model.domain().get(0));
        Assertions.assertEquals("klnsrmffey", model.dnsServerIps().get(0));
        Assertions.assertEquals("doj", model.sourceIp());
        Assertions.assertEquals(2082724442990629363L, model.dnsServices());
        Assertions.assertEquals(8464578871437548472L, model.revision());
    }
}
