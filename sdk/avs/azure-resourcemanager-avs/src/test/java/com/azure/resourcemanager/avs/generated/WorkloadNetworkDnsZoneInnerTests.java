// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"g\",\"domain\":[\"vpdbodaciz\",\"j\"],\"dnsServerIps\":[\"krribdeibqi\"],\"sourceIp\":\"kghv\",\"dnsServices\":1070567995,\"provisioningState\":\"Failed\",\"revision\":319969410907864820},\"id\":\"fajpjorwk\",\"name\":\"nyhgbijtji\",\"type\":\"fxzsjabibsyst\"}")
            .toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("g", model.displayName());
        Assertions.assertEquals("vpdbodaciz", model.domain().get(0));
        Assertions.assertEquals("krribdeibqi", model.dnsServerIps().get(0));
        Assertions.assertEquals("kghv", model.sourceIp());
        Assertions.assertEquals(1070567995, model.dnsServices());
        Assertions.assertEquals(319969410907864820L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = new WorkloadNetworkDnsZoneInner().withDisplayName("g")
            .withDomain(Arrays.asList("vpdbodaciz", "j"))
            .withDnsServerIps(Arrays.asList("krribdeibqi"))
            .withSourceIp("kghv")
            .withDnsServices(1070567995)
            .withRevision(319969410907864820L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("g", model.displayName());
        Assertions.assertEquals("vpdbodaciz", model.domain().get(0));
        Assertions.assertEquals("krribdeibqi", model.dnsServerIps().get(0));
        Assertions.assertEquals("kghv", model.sourceIp());
        Assertions.assertEquals(1070567995, model.dnsServices());
        Assertions.assertEquals(319969410907864820L, model.revision());
    }
}
