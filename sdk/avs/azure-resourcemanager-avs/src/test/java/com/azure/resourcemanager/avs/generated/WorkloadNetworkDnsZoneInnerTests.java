// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"smypyynpc\",\"domain\":[\"mnzgmwznmabi\",\"nsorgjhxbldt\",\"wwrlkdmtncv\",\"kotl\"],\"dnsServerIps\":[\"yhgsy\"],\"sourceIp\":\"ogjltdtbnnhad\",\"dnsServices\":2230966046874594524,\"provisioningState\":\"Canceled\",\"revision\":5398551830021510565},\"id\":\"nvpamq\",\"name\":\"x\",\"type\":\"queziky\"}")
            .toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("smypyynpc", model.displayName());
        Assertions.assertEquals("mnzgmwznmabi", model.domain().get(0));
        Assertions.assertEquals("yhgsy", model.dnsServerIps().get(0));
        Assertions.assertEquals("ogjltdtbnnhad", model.sourceIp());
        Assertions.assertEquals(2230966046874594524L, model.dnsServices());
        Assertions.assertEquals(5398551830021510565L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = new WorkloadNetworkDnsZoneInner().withDisplayName("smypyynpc")
            .withDomain(Arrays.asList("mnzgmwznmabi", "nsorgjhxbldt", "wwrlkdmtncv", "kotl"))
            .withDnsServerIps(Arrays.asList("yhgsy"))
            .withSourceIp("ogjltdtbnnhad")
            .withDnsServices(2230966046874594524L)
            .withRevision(5398551830021510565L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("smypyynpc", model.displayName());
        Assertions.assertEquals("mnzgmwznmabi", model.domain().get(0));
        Assertions.assertEquals("yhgsy", model.dnsServerIps().get(0));
        Assertions.assertEquals("ogjltdtbnnhad", model.sourceIp());
        Assertions.assertEquals(2230966046874594524L, model.dnsServices());
        Assertions.assertEquals(5398551830021510565L, model.revision());
    }
}
