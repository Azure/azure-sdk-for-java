// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsZoneInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZoneInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"joxoism\",\"domain\":[\"bpimlqoljxkcgxxl\",\"sffgcvizqzd\"],\"dnsServerIps\":[\"w\",\"youpfgfbkj\"],\"sourceIp\":\"dyhgkfminsg\",\"dnsServices\":5465402510748989819,\"provisioningState\":\"Building\",\"revision\":295373443738405642},\"id\":\"tlahbq\",\"name\":\"ctxtgzukxi\",\"type\":\"mmqtgqqqxhr\"}")
            .toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("joxoism", model.displayName());
        Assertions.assertEquals("bpimlqoljxkcgxxl", model.domain().get(0));
        Assertions.assertEquals("w", model.dnsServerIps().get(0));
        Assertions.assertEquals("dyhgkfminsg", model.sourceIp());
        Assertions.assertEquals(5465402510748989819L, model.dnsServices());
        Assertions.assertEquals(295373443738405642L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneInner model = new WorkloadNetworkDnsZoneInner().withDisplayName("joxoism")
            .withDomain(Arrays.asList("bpimlqoljxkcgxxl", "sffgcvizqzd"))
            .withDnsServerIps(Arrays.asList("w", "youpfgfbkj"))
            .withSourceIp("dyhgkfminsg")
            .withDnsServices(5465402510748989819L)
            .withRevision(295373443738405642L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneInner.class);
        Assertions.assertEquals("joxoism", model.displayName());
        Assertions.assertEquals("bpimlqoljxkcgxxl", model.domain().get(0));
        Assertions.assertEquals("w", model.dnsServerIps().get(0));
        Assertions.assertEquals("dyhgkfminsg", model.sourceIp());
        Assertions.assertEquals(5465402510748989819L, model.dnsServices());
        Assertions.assertEquals(295373443738405642L, model.revision());
    }
}
