// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkSegmentProperties;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentProperties model = BinaryData.fromString(
            "{\"displayName\":\"ydagfuaxbe\",\"connectedGateway\":\"iu\",\"subnet\":{\"dhcpRanges\":[\"whrdxwzywqsmbsu\",\"exim\",\"ryocfsfksymdd\",\"stkiiuxhqyud\"],\"gatewayAddress\":\"rrqnbpoczvyifqrv\"},\"portVif\":[{\"portName\":\"sllr\"},{\"portName\":\"vdfwatkpn\"},{\"portName\":\"lexxbczwtru\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Updating\",\"revision\":535203573928767895}")
            .toObject(WorkloadNetworkSegmentProperties.class);
        Assertions.assertEquals("ydagfuaxbe", model.displayName());
        Assertions.assertEquals("iu", model.connectedGateway());
        Assertions.assertEquals("whrdxwzywqsmbsu", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("rrqnbpoczvyifqrv", model.subnet().gatewayAddress());
        Assertions.assertEquals(535203573928767895L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentProperties model = new WorkloadNetworkSegmentProperties().withDisplayName("ydagfuaxbe")
            .withConnectedGateway("iu")
            .withSubnet(new WorkloadNetworkSegmentSubnet()
                .withDhcpRanges(Arrays.asList("whrdxwzywqsmbsu", "exim", "ryocfsfksymdd", "stkiiuxhqyud"))
                .withGatewayAddress("rrqnbpoczvyifqrv"))
            .withRevision(535203573928767895L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentProperties.class);
        Assertions.assertEquals("ydagfuaxbe", model.displayName());
        Assertions.assertEquals("iu", model.connectedGateway());
        Assertions.assertEquals("whrdxwzywqsmbsu", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("rrqnbpoczvyifqrv", model.subnet().gatewayAddress());
        Assertions.assertEquals(535203573928767895L, model.revision());
    }
}
