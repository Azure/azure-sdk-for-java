// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkSegmentProperties;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentProperties model = BinaryData.fromString(
            "{\"displayName\":\"gofel\",\"connectedGateway\":\"grqmqhldvrii\",\"subnet\":{\"dhcpRanges\":[\"al\",\"hfkvtvsexsowuel\",\"qhhahhxvrhmzkwpj\",\"wws\"],\"gatewayAddress\":\"ghftqsxhqxujxuk\"},\"portVif\":[{\"portName\":\"igrjguufzdm\"},{\"portName\":\"qtfihwhbotzinga\"}],\"status\":\"SUCCESS\",\"provisioningState\":\"Building\",\"revision\":3853655697248732253}")
            .toObject(WorkloadNetworkSegmentProperties.class);
        Assertions.assertEquals("gofel", model.displayName());
        Assertions.assertEquals("grqmqhldvrii", model.connectedGateway());
        Assertions.assertEquals("al", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("ghftqsxhqxujxuk", model.subnet().gatewayAddress());
        Assertions.assertEquals(3853655697248732253L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentProperties model = new WorkloadNetworkSegmentProperties().withDisplayName("gofel")
            .withConnectedGateway("grqmqhldvrii")
            .withSubnet(new WorkloadNetworkSegmentSubnet()
                .withDhcpRanges(Arrays.asList("al", "hfkvtvsexsowuel", "qhhahhxvrhmzkwpj", "wws"))
                .withGatewayAddress("ghftqsxhqxujxuk"))
            .withRevision(3853655697248732253L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentProperties.class);
        Assertions.assertEquals("gofel", model.displayName());
        Assertions.assertEquals("grqmqhldvrii", model.connectedGateway());
        Assertions.assertEquals("al", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("ghftqsxhqxujxuk", model.subnet().gatewayAddress());
        Assertions.assertEquals(3853655697248732253L, model.revision());
    }
}
