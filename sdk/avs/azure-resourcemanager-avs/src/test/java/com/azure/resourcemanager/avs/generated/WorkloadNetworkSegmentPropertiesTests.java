// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkSegmentProperties;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentProperties model = BinaryData.fromString(
            "{\"displayName\":\"b\",\"connectedGateway\":\"gaehvvibrxjjst\",\"subnet\":{\"dhcpRanges\":[\"it\",\"kxzt\",\"oobklftidgfcwq\"],\"gatewayAddress\":\"imaq\"},\"portVif\":[{\"portName\":\"mjyhohujswtwko\"},{\"portName\":\"wculkbaw\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Building\",\"revision\":7836663070897979568}")
            .toObject(WorkloadNetworkSegmentProperties.class);
        Assertions.assertEquals("b", model.displayName());
        Assertions.assertEquals("gaehvvibrxjjst", model.connectedGateway());
        Assertions.assertEquals("it", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("imaq", model.subnet().gatewayAddress());
        Assertions.assertEquals(7836663070897979568L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentProperties model = new WorkloadNetworkSegmentProperties().withDisplayName("b")
            .withConnectedGateway("gaehvvibrxjjst")
            .withSubnet(new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("it", "kxzt", "oobklftidgfcwq"))
                .withGatewayAddress("imaq"))
            .withRevision(7836663070897979568L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentProperties.class);
        Assertions.assertEquals("b", model.displayName());
        Assertions.assertEquals("gaehvvibrxjjst", model.connectedGateway());
        Assertions.assertEquals("it", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("imaq", model.subnet().gatewayAddress());
        Assertions.assertEquals(7836663070897979568L, model.revision());
    }
}
