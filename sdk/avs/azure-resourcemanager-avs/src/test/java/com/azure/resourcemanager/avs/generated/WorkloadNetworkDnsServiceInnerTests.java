// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceInner;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServiceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"uwqlgzrfzeey\",\"dnsServiceIp\":\"izikayuhq\",\"defaultDnsZone\":\"jbsybbqw\",\"fqdnZones\":[\"ldgmfpgvmpip\"],\"logLevel\":\"DEBUG\",\"status\":\"SUCCESS\",\"provisioningState\":\"Canceled\",\"revision\":768699206851816710},\"id\":\"mwutwbdsre\",\"name\":\"pdrhne\",\"type\":\"yowqkdwytisibir\"}")
            .toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("uwqlgzrfzeey", model.displayName());
        Assertions.assertEquals("izikayuhq", model.dnsServiceIp());
        Assertions.assertEquals("jbsybbqw", model.defaultDnsZone());
        Assertions.assertEquals("ldgmfpgvmpip", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(768699206851816710L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = new WorkloadNetworkDnsServiceInner().withDisplayName("uwqlgzrfzeey")
            .withDnsServiceIp("izikayuhq")
            .withDefaultDnsZone("jbsybbqw")
            .withFqdnZones(Arrays.asList("ldgmfpgvmpip"))
            .withLogLevel(DnsServiceLogLevelEnum.DEBUG)
            .withRevision(768699206851816710L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("uwqlgzrfzeey", model.displayName());
        Assertions.assertEquals("izikayuhq", model.dnsServiceIp());
        Assertions.assertEquals("jbsybbqw", model.defaultDnsZone());
        Assertions.assertEquals("ldgmfpgvmpip", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(768699206851816710L, model.revision());
    }
}
