// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceInner;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServiceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"v\",\"dnsServiceIp\":\"iqihn\",\"defaultDnsZone\":\"ngbwjz\",\"fqdnZones\":[\"ygxgispemvtz\",\"kufubljo\",\"xqeofjaeqjhqjba\",\"v\"],\"logLevel\":\"INFO\",\"status\":\"FAILURE\",\"provisioningState\":\"Canceled\",\"revision\":6873951751389434508},\"id\":\"tnb\",\"name\":\"bkzgcwrwclx\",\"type\":\"wrljdouskc\"}")
            .toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("v", model.displayName());
        Assertions.assertEquals("iqihn", model.dnsServiceIp());
        Assertions.assertEquals("ngbwjz", model.defaultDnsZone());
        Assertions.assertEquals("ygxgispemvtz", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.INFO, model.logLevel());
        Assertions.assertEquals(6873951751389434508L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = new WorkloadNetworkDnsServiceInner().withDisplayName("v")
            .withDnsServiceIp("iqihn")
            .withDefaultDnsZone("ngbwjz")
            .withFqdnZones(Arrays.asList("ygxgispemvtz", "kufubljo", "xqeofjaeqjhqjba", "v"))
            .withLogLevel(DnsServiceLogLevelEnum.INFO)
            .withRevision(6873951751389434508L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("v", model.displayName());
        Assertions.assertEquals("iqihn", model.dnsServiceIp());
        Assertions.assertEquals("ngbwjz", model.defaultDnsZone());
        Assertions.assertEquals("ygxgispemvtz", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.INFO, model.logLevel());
        Assertions.assertEquals(6873951751389434508L, model.revision());
    }
}
