// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceInner;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServiceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"vvqfovljxyws\",\"dnsServiceIp\":\"syrsndsytgadgvra\",\"defaultDnsZone\":\"en\",\"fqdnZones\":[\"zar\"],\"logLevel\":\"DEBUG\",\"status\":\"SUCCESS\",\"provisioningState\":\"Succeeded\",\"revision\":4399358999277003826},\"id\":\"acewiipfpubjibw\",\"name\":\"iftohqkvpu\",\"type\":\"ksgplsa\"}")
            .toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("vvqfovljxyws", model.displayName());
        Assertions.assertEquals("syrsndsytgadgvra", model.dnsServiceIp());
        Assertions.assertEquals("en", model.defaultDnsZone());
        Assertions.assertEquals("zar", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(4399358999277003826L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = new WorkloadNetworkDnsServiceInner().withDisplayName("vvqfovljxyws")
            .withDnsServiceIp("syrsndsytgadgvra")
            .withDefaultDnsZone("en")
            .withFqdnZones(Arrays.asList("zar"))
            .withLogLevel(DnsServiceLogLevelEnum.DEBUG)
            .withRevision(4399358999277003826L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("vvqfovljxyws", model.displayName());
        Assertions.assertEquals("syrsndsytgadgvra", model.dnsServiceIp());
        Assertions.assertEquals("en", model.defaultDnsZone());
        Assertions.assertEquals("zar", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(4399358999277003826L, model.revision());
    }
}
