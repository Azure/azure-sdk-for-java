// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceInner;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServiceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"fuvglsbjjca\",\"dnsServiceIp\":\"xbvtvudu\",\"defaultDnsZone\":\"cormr\",\"fqdnZones\":[\"tvcof\",\"dflvkg\",\"u\",\"gdknnqv\"],\"logLevel\":\"ERROR\",\"status\":\"FAILURE\",\"provisioningState\":\"Failed\",\"revision\":5006272159891019182},\"id\":\"sgsahmkycgr\",\"name\":\"uwjuetaeburuvdmo\",\"type\":\"s\"}")
            .toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("fuvglsbjjca", model.displayName());
        Assertions.assertEquals("xbvtvudu", model.dnsServiceIp());
        Assertions.assertEquals("cormr", model.defaultDnsZone());
        Assertions.assertEquals("tvcof", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.ERROR, model.logLevel());
        Assertions.assertEquals(5006272159891019182L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = new WorkloadNetworkDnsServiceInner().withDisplayName("fuvglsbjjca")
            .withDnsServiceIp("xbvtvudu")
            .withDefaultDnsZone("cormr")
            .withFqdnZones(Arrays.asList("tvcof", "dflvkg", "u", "gdknnqv"))
            .withLogLevel(DnsServiceLogLevelEnum.ERROR)
            .withRevision(5006272159891019182L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("fuvglsbjjca", model.displayName());
        Assertions.assertEquals("xbvtvudu", model.dnsServiceIp());
        Assertions.assertEquals("cormr", model.defaultDnsZone());
        Assertions.assertEquals("tvcof", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.ERROR, model.logLevel());
        Assertions.assertEquals(5006272159891019182L, model.revision());
    }
}
