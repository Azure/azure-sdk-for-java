// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceInner;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServiceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"a\",\"dnsServiceIp\":\"qusrdvetnws\",\"defaultDnsZone\":\"utnw\",\"fqdnZones\":[\"ycvuzhyrmewipmv\",\"k\",\"xukuqgsj\",\"xundxgk\"],\"logLevel\":\"FATAL\",\"status\":\"SUCCESS\",\"provisioningState\":\"Building\",\"revision\":7918905716501947847},\"id\":\"mhv\",\"name\":\"muvgp\",\"type\":\"uneqsxvmhf\"}")
            .toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("a", model.displayName());
        Assertions.assertEquals("qusrdvetnws", model.dnsServiceIp());
        Assertions.assertEquals("utnw", model.defaultDnsZone());
        Assertions.assertEquals("ycvuzhyrmewipmv", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.FATAL, model.logLevel());
        Assertions.assertEquals(7918905716501947847L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = new WorkloadNetworkDnsServiceInner().withDisplayName("a")
            .withDnsServiceIp("qusrdvetnws")
            .withDefaultDnsZone("utnw")
            .withFqdnZones(Arrays.asList("ycvuzhyrmewipmv", "k", "xukuqgsj", "xundxgk"))
            .withLogLevel(DnsServiceLogLevelEnum.FATAL)
            .withRevision(7918905716501947847L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("a", model.displayName());
        Assertions.assertEquals("qusrdvetnws", model.dnsServiceIp());
        Assertions.assertEquals("utnw", model.defaultDnsZone());
        Assertions.assertEquals("ycvuzhyrmewipmv", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.FATAL, model.logLevel());
        Assertions.assertEquals(7918905716501947847L, model.revision());
    }
}
