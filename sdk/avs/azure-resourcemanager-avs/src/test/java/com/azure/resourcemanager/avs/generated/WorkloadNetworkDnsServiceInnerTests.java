// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceInner;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServiceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"aufactkahzovajjz\",\"dnsServiceIp\":\"xxpshneeku\",\"defaultDnsZone\":\"gs\",\"fqdnZones\":[\"bkwdlenrds\",\"tujbazpju\"],\"logLevel\":\"FATAL\",\"status\":\"SUCCESS\",\"provisioningState\":\"Canceled\",\"revision\":6751784121052191451},\"id\":\"wmd\",\"name\":\"vwpklvxwmygdxp\",\"type\":\"pqchiszep\"}")
            .toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("aufactkahzovajjz", model.displayName());
        Assertions.assertEquals("xxpshneeku", model.dnsServiceIp());
        Assertions.assertEquals("gs", model.defaultDnsZone());
        Assertions.assertEquals("bkwdlenrds", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.FATAL, model.logLevel());
        Assertions.assertEquals(6751784121052191451L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = new WorkloadNetworkDnsServiceInner().withDisplayName("aufactkahzovajjz")
            .withDnsServiceIp("xxpshneeku")
            .withDefaultDnsZone("gs")
            .withFqdnZones(Arrays.asList("bkwdlenrds", "tujbazpju"))
            .withLogLevel(DnsServiceLogLevelEnum.FATAL)
            .withRevision(6751784121052191451L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("aufactkahzovajjz", model.displayName());
        Assertions.assertEquals("xxpshneeku", model.dnsServiceIp());
        Assertions.assertEquals("gs", model.defaultDnsZone());
        Assertions.assertEquals("bkwdlenrds", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.FATAL, model.logLevel());
        Assertions.assertEquals(6751784121052191451L, model.revision());
    }
}
