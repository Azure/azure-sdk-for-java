// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceInner;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServiceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"ywjhhgdnhx\",\"dnsServiceIp\":\"ivfomiloxgg\",\"defaultDnsZone\":\"fi\",\"fqdnZones\":[\"ieuzaofjchvcyyy\",\"fgdo\",\"cubiipuipw\"],\"logLevel\":\"WARNING\",\"status\":\"SUCCESS\",\"provisioningState\":\"Canceled\",\"revision\":3925666504611058153},\"id\":\"izsh\",\"name\":\"vcimpev\",\"type\":\"gmblrri\"}")
            .toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("ywjhhgdnhx", model.displayName());
        Assertions.assertEquals("ivfomiloxgg", model.dnsServiceIp());
        Assertions.assertEquals("fi", model.defaultDnsZone());
        Assertions.assertEquals("ieuzaofjchvcyyy", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.WARNING, model.logLevel());
        Assertions.assertEquals(3925666504611058153L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = new WorkloadNetworkDnsServiceInner().withDisplayName("ywjhhgdnhx")
            .withDnsServiceIp("ivfomiloxgg")
            .withDefaultDnsZone("fi")
            .withFqdnZones(Arrays.asList("ieuzaofjchvcyyy", "fgdo", "cubiipuipw"))
            .withLogLevel(DnsServiceLogLevelEnum.WARNING)
            .withRevision(3925666504611058153L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("ywjhhgdnhx", model.displayName());
        Assertions.assertEquals("ivfomiloxgg", model.dnsServiceIp());
        Assertions.assertEquals("fi", model.defaultDnsZone());
        Assertions.assertEquals("ieuzaofjchvcyyy", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.WARNING, model.logLevel());
        Assertions.assertEquals(3925666504611058153L, model.revision());
    }
}
