// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceInner;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServiceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"jvdcpzfoqouic\",\"dnsServiceIp\":\"xarzgszufoxciq\",\"defaultDnsZone\":\"idoamciodhkha\",\"fqdnZones\":[\"hnzbonl\",\"ntoe\",\"okdwb\"],\"logLevel\":\"ERROR\",\"status\":\"SUCCESS\",\"provisioningState\":\"Failed\",\"revision\":8684744606268928331},\"id\":\"xztvbtqgsfraoyzk\",\"name\":\"owtlmnguxawqald\",\"type\":\"yuuximerqfobwyzn\"}")
            .toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("jvdcpzfoqouic", model.displayName());
        Assertions.assertEquals("xarzgszufoxciq", model.dnsServiceIp());
        Assertions.assertEquals("idoamciodhkha", model.defaultDnsZone());
        Assertions.assertEquals("hnzbonl", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.ERROR, model.logLevel());
        Assertions.assertEquals(8684744606268928331L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = new WorkloadNetworkDnsServiceInner().withDisplayName("jvdcpzfoqouic")
            .withDnsServiceIp("xarzgszufoxciq")
            .withDefaultDnsZone("idoamciodhkha")
            .withFqdnZones(Arrays.asList("hnzbonl", "ntoe", "okdwb"))
            .withLogLevel(DnsServiceLogLevelEnum.ERROR)
            .withRevision(8684744606268928331L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("jvdcpzfoqouic", model.displayName());
        Assertions.assertEquals("xarzgszufoxciq", model.dnsServiceIp());
        Assertions.assertEquals("idoamciodhkha", model.defaultDnsZone());
        Assertions.assertEquals("hnzbonl", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.ERROR, model.logLevel());
        Assertions.assertEquals(8684744606268928331L, model.revision());
    }
}
