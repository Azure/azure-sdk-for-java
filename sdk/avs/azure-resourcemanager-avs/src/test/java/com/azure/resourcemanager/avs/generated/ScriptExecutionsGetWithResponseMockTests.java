// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScriptExecutionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"scriptCmdletId\":\"mzgwe\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"sxwef\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"hecbvopwndyq\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"llklmtk\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"lowkxxpvb\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"dfjmzsyzfhotlh\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"k\"}],\"failureReason\":\"ychunsjlpjrtwszh\",\"timeout\":\"vuicp\",\"retention\":\"trrmhwrb\",\"submittedAt\":\"2021-03-14T13:08:25Z\",\"startedAt\":\"2021-02-16T07:42:20Z\",\"finishedAt\":\"2021-04-11T17:40:45Z\",\"provisioningState\":\"Failed\",\"output\":[\"glrocuy\"],\"namedOutputs\":{\"hhmemhooclutnp\":{},\"memczjkmmyk\":{},\"ujxsglhsr\":{}},\"information\":[\"ejylmbkzu\",\"nigrfihotjewl\",\"xuzzjgnrefq\",\"hqo\"],\"warnings\":[\"hiqakydiwfbrk\",\"pzdqtvhcspod\",\"qaxsipietgbebjf\"],\"errors\":[\"moichdlpnfpubntn\",\"atzviqsowsaael\"]},\"id\":\"ttcjuhplrvkmjc\",\"name\":\"mjvlgfgg\",\"type\":\"vkyylizrzbjpsf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ScriptExecution response = manager.scriptExecutions()
            .getWithResponse("kizmdksaoafclu", "v", "xmycjimryvwgcw", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("mzgwe", response.scriptCmdletId());
        Assertions.assertEquals("sxwef", response.parameters().get(0).name());
        Assertions.assertEquals("llklmtk", response.hiddenParameters().get(0).name());
        Assertions.assertEquals("ychunsjlpjrtwszh", response.failureReason());
        Assertions.assertEquals("vuicp", response.timeout());
        Assertions.assertEquals("trrmhwrb", response.retention());
        Assertions.assertEquals("glrocuy", response.output().get(0));
    }
}
