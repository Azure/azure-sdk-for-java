// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScriptExecutionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"scriptCmdletId\":\"rojphslhcawjutif\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"mvi\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"orq\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"bttzhraglkafhonq\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"ujeickp\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"p\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"pmxelnwcltyje\"}],\"failureReason\":\"xxmlfmkqscazua\",\"timeout\":\"xtzx\",\"retention\":\"amwabzxrvxcushsp\",\"submittedAt\":\"2021-06-11T01:35Z\",\"startedAt\":\"2021-12-02T00:04:23Z\",\"finishedAt\":\"2021-04-04T03:00:41Z\",\"provisioningState\":\"Deleting\",\"output\":[\"vgsgzwywakoihkn\",\"mjblmljhlny\",\"zotqyryuzcb\",\"qqvxmvwfgtayxons\"],\"namedOutputs\":{\"oibgsxg\":\"dataujlzqnhcvsqltn\"},\"information\":[\"yqo\"],\"warnings\":[\"qoxwd\"],\"errors\":[\"bxiqxeiiqbimht\",\"wwinhehf\"]},\"id\":\"ofvwbcb\",\"name\":\"embnkbw\",\"type\":\"qvxkd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ScriptExecution response = manager.scriptExecutions()
            .getWithResponse("znmmaxrizkzobgo", "xlhslnel", "ieixynllxe", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("rojphslhcawjutif", response.scriptCmdletId());
        Assertions.assertEquals("mvi", response.parameters().get(0).name());
        Assertions.assertEquals("p", response.hiddenParameters().get(0).name());
        Assertions.assertEquals("xxmlfmkqscazua", response.failureReason());
        Assertions.assertEquals("xtzx", response.timeout());
        Assertions.assertEquals("amwabzxrvxcushsp", response.retention());
        Assertions.assertEquals("vgsgzwywakoihkn", response.output().get(0));
    }
}
