// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScriptExecutionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"scriptCmdletId\":\"wxeiqbpsmgomg\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"ljdlrgmspl\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"gaufcs\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"hvn\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"wgnxkympqanxrj\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"tw\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"taoypnyghshxc\"}],\"failureReason\":\"hkgmnsg\",\"timeout\":\"pxycphdr\",\"retention\":\"jkhvyomacluzvxnq\",\"submittedAt\":\"2021-05-26T18:55:49Z\",\"startedAt\":\"2021-08-18T08:28:39Z\",\"finishedAt\":\"2021-05-17T11:48:53Z\",\"provisioningState\":\"Pending\",\"output\":[\"oi\"],\"namedOutputs\":{\"ypobkdqzr\":\"datassffxuifmc\"},\"information\":[\"ylollgtrczzydmxz\",\"ijpvuaurkihc\",\"rldefxrdcox\"],\"warnings\":[\"kjanur\",\"nqbnqb\",\"izxqltgrd\",\"gypxrxvbfihwuhvc\"],\"errors\":[\"s\"]},\"id\":\"xrblmliowxihs\",\"name\":\"nxw\",\"type\":\"agnepzwaklsb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ScriptExecution response = manager.scriptExecutions()
            .getWithResponse("wtoaukhfk", "cisiz", "oaedsxjwuivedwcg", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("wxeiqbpsmgomg", response.scriptCmdletId());
        Assertions.assertEquals("ljdlrgmspl", response.parameters().get(0).name());
        Assertions.assertEquals("tw", response.hiddenParameters().get(0).name());
        Assertions.assertEquals("hkgmnsg", response.failureReason());
        Assertions.assertEquals("pxycphdr", response.timeout());
        Assertions.assertEquals("jkhvyomacluzvxnq", response.retention());
        Assertions.assertEquals("oi", response.output().get(0));
    }
}
