// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScriptExecutionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"scriptCmdletId\":\"mffjkutycyarn\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"hguabzoghktdp\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"czhcoeocnh\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"ot\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"jzcfyjzptwr\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"ohapqinfsz\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"yglqdhmrjzral\"}],\"failureReason\":\"pjby\",\"timeout\":\"psjoqcjenk\",\"retention\":\"fq\",\"submittedAt\":\"2021-08-21T02:34:59Z\",\"startedAt\":\"2021-12-04T02:32:58Z\",\"finishedAt\":\"2021-05-25T20:24:43Z\",\"provisioningState\":\"Cancelled\",\"output\":[\"cmpzqjhhhqx\"],\"namedOutputs\":{},\"information\":[\"acoyvivbsizusjs\",\"lbscmnlz\",\"jiu\"],\"warnings\":[\"gmvflnwyvqkx\"],\"errors\":[\"lniylylyfwxz\",\"tgqztwhghmup\"]},\"id\":\"yjtcdxabbujftab\",\"name\":\"nbbklqpxzucafed\",\"type\":\"wwnlzafwxudgnh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ScriptExecution response = manager.scriptExecutions()
            .getWithResponse("ijymrhbguzozky", "wnf", "zhhh", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("mffjkutycyarn", response.scriptCmdletId());
        Assertions.assertEquals("hguabzoghktdp", response.parameters().get(0).name());
        Assertions.assertEquals("ot", response.hiddenParameters().get(0).name());
        Assertions.assertEquals("pjby", response.failureReason());
        Assertions.assertEquals("psjoqcjenk", response.timeout());
        Assertions.assertEquals("fq", response.retention());
        Assertions.assertEquals("cmpzqjhhhqx", response.output().get(0));
    }
}
