// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkVMGroup;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksCreateVMGroupMockTests {
    @Test
    public void testCreateVMGroup() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"iidlop\",\"members\":[\"wdpyq\",\"ybxubmdna\",\"cbq\"],\"status\":\"SUCCESS\",\"provisioningState\":\"Succeeded\",\"revision\":1864803261739962895},\"id\":\"acigel\",\"name\":\"ohdbvqvwzkj\",\"type\":\"pwbeonr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadNetworkVMGroup response = manager.workloadNetworks()
            .defineVMGroup("sgl")
            .withExistingPrivateCloud("bqqqagwwrxa", "mz")
            .withDisplayName("zezkhhltnjadh")
            .withMembers(Arrays.asList("wjqo"))
            .withRevision(5714887426369504206L)
            .create();

        Assertions.assertEquals("iidlop", response.displayName());
        Assertions.assertEquals("wdpyq", response.members().get(0));
        Assertions.assertEquals(1864803261739962895L, response.revision());
    }
}
