// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkVMGroup;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksCreateVMGroupMockTests {
    @Test
    public void testCreateVMGroup() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"ozipqwjedmurrxx\",\"members\":[\"pkt\",\"qylkmqpzoyhlf\",\"cgwgcloxoebqinji\",\"nwjfu\"],\"status\":\"SUCCESS\",\"provisioningState\":\"Succeeded\",\"revision\":6281671660461813390},\"id\":\"hpzpo\",\"name\":\"o\",\"type\":\"yjwpfilkmkkh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkloadNetworkVMGroup response = manager.workloadNetworks()
            .defineVMGroup("ovmribiattg")
            .withExistingPrivateCloud("xmmkjs", "thnwpzte")
            .withDisplayName("cfotangcfhnykzcu")
            .withMembers(Arrays.asList("vxwlmzqwmvtxnj", "xmcuqud", "cvclxynpdk"))
            .withRevision(4206485028697506580L)
            .create();

        Assertions.assertEquals("ozipqwjedmurrxx", response.displayName());
        Assertions.assertEquals("pkt", response.members().get(0));
        Assertions.assertEquals(6281671660461813390L, response.revision());
    }
}
