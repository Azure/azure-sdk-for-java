// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkVMGroup;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksCreateVMGroupMockTests {
    @Test
    public void testCreateVMGroup() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"hzjhf\",\"members\":[\"vvmu\",\"gpmuneqsxvmhfbuz\",\"yihsasbhudypohyu\"],\"status\":\"FAILURE\",\"provisioningState\":\"Succeeded\",\"revision\":3075885746767216016},\"id\":\"rpfoobr\",\"name\":\"ttymsjny\",\"type\":\"qdnfwqzdz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadNetworkVMGroup response = manager.workloadNetworks()
            .defineVMGroup("uvyinzqodfvpgs")
            .withExistingWorkloadNetwork("jcivmmg", "f", "fiwrxgkn")
            .withDisplayName("gsgbpfgzdjt")
            .withMembers(Arrays.asList("flbqvgaq", "lgafcqusrdve"))
            .withRevision(4392924030472678320L)
            .create();

        Assertions.assertEquals("hzjhf", response.displayName());
        Assertions.assertEquals("vvmu", response.members().get(0));
        Assertions.assertEquals(3075885746767216016L, response.revision());
    }
}
