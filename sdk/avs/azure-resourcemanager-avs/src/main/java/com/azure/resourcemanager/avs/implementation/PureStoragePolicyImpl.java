// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.avs.fluent.models.PureStoragePolicyInner;
import com.azure.resourcemanager.avs.models.PureStoragePolicy;
import com.azure.resourcemanager.avs.models.PureStoragePolicyProperties;

public final class PureStoragePolicyImpl
    implements PureStoragePolicy, PureStoragePolicy.Definition, PureStoragePolicy.Update {
    private PureStoragePolicyInner innerObject;

    private final com.azure.resourcemanager.avs.AvsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public PureStoragePolicyProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public PureStoragePolicyInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.avs.AvsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String privateCloudName;

    private String storagePolicyName;

    public PureStoragePolicyImpl withExistingPrivateCloud(String resourceGroupName, String privateCloudName) {
        this.resourceGroupName = resourceGroupName;
        this.privateCloudName = privateCloudName;
        return this;
    }

    public PureStoragePolicy create() {
        this.innerObject = serviceManager.serviceClient()
            .getPureStoragePolicies()
            .createOrUpdate(resourceGroupName, privateCloudName, storagePolicyName, this.innerModel(), Context.NONE);
        return this;
    }

    public PureStoragePolicy create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getPureStoragePolicies()
            .createOrUpdate(resourceGroupName, privateCloudName, storagePolicyName, this.innerModel(), context);
        return this;
    }

    PureStoragePolicyImpl(String name, com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerObject = new PureStoragePolicyInner();
        this.serviceManager = serviceManager;
        this.storagePolicyName = name;
    }

    public PureStoragePolicyImpl update() {
        return this;
    }

    public PureStoragePolicy apply() {
        this.innerObject = serviceManager.serviceClient()
            .getPureStoragePolicies()
            .createOrUpdate(resourceGroupName, privateCloudName, storagePolicyName, this.innerModel(), Context.NONE);
        return this;
    }

    public PureStoragePolicy apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getPureStoragePolicies()
            .createOrUpdate(resourceGroupName, privateCloudName, storagePolicyName, this.innerModel(), context);
        return this;
    }

    PureStoragePolicyImpl(PureStoragePolicyInner innerObject, com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.privateCloudName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "privateClouds");
        this.storagePolicyName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "pureStoragePolicies");
    }

    public PureStoragePolicy refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getPureStoragePolicies()
            .getWithResponse(resourceGroupName, privateCloudName, storagePolicyName, Context.NONE)
            .getValue();
        return this;
    }

    public PureStoragePolicy refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getPureStoragePolicies()
            .getWithResponse(resourceGroupName, privateCloudName, storagePolicyName, context)
            .getValue();
        return this;
    }

    public PureStoragePolicyImpl withProperties(PureStoragePolicyProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
