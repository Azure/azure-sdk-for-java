// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Endpoint addresses.
 */
@Immutable
public final class Endpoints implements JsonSerializable<Endpoints> {
    /*
     * Endpoint FQDN for the NSX-T Data Center manager
     */
    private String nsxtManager;

    /*
     * Endpoint FQDN for Virtual Center Server Appliance
     */
    private String vcsa;

    /*
     * Endpoint FQDN for the HCX Cloud Manager
     */
    private String hcxCloudManager;

    /*
     * Endpoint IP for the NSX-T Data Center manager
     */
    private String nsxtManagerIp;

    /*
     * Endpoint IP for Virtual Center Server Appliance
     */
    private String vcenterIp;

    /*
     * Endpoint IP for the HCX Cloud Manager
     */
    private String hcxCloudManagerIp;

    /**
     * Creates an instance of Endpoints class.
     */
    public Endpoints() {
    }

    /**
     * Get the nsxtManager property: Endpoint FQDN for the NSX-T Data Center manager.
     * 
     * @return the nsxtManager value.
     */
    public String nsxtManager() {
        return this.nsxtManager;
    }

    /**
     * Get the vcsa property: Endpoint FQDN for Virtual Center Server Appliance.
     * 
     * @return the vcsa value.
     */
    public String vcsa() {
        return this.vcsa;
    }

    /**
     * Get the hcxCloudManager property: Endpoint FQDN for the HCX Cloud Manager.
     * 
     * @return the hcxCloudManager value.
     */
    public String hcxCloudManager() {
        return this.hcxCloudManager;
    }

    /**
     * Get the nsxtManagerIp property: Endpoint IP for the NSX-T Data Center manager.
     * 
     * @return the nsxtManagerIp value.
     */
    public String nsxtManagerIp() {
        return this.nsxtManagerIp;
    }

    /**
     * Get the vcenterIp property: Endpoint IP for Virtual Center Server Appliance.
     * 
     * @return the vcenterIp value.
     */
    public String vcenterIp() {
        return this.vcenterIp;
    }

    /**
     * Get the hcxCloudManagerIp property: Endpoint IP for the HCX Cloud Manager.
     * 
     * @return the hcxCloudManagerIp value.
     */
    public String hcxCloudManagerIp() {
        return this.hcxCloudManagerIp;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Endpoints from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Endpoints if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the Endpoints.
     */
    public static Endpoints fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Endpoints deserializedEndpoints = new Endpoints();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("nsxtManager".equals(fieldName)) {
                    deserializedEndpoints.nsxtManager = reader.getString();
                } else if ("vcsa".equals(fieldName)) {
                    deserializedEndpoints.vcsa = reader.getString();
                } else if ("hcxCloudManager".equals(fieldName)) {
                    deserializedEndpoints.hcxCloudManager = reader.getString();
                } else if ("nsxtManagerIp".equals(fieldName)) {
                    deserializedEndpoints.nsxtManagerIp = reader.getString();
                } else if ("vcenterIp".equals(fieldName)) {
                    deserializedEndpoints.vcenterIp = reader.getString();
                } else if ("hcxCloudManagerIp".equals(fieldName)) {
                    deserializedEndpoints.hcxCloudManagerIp = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEndpoints;
        });
    }
}
