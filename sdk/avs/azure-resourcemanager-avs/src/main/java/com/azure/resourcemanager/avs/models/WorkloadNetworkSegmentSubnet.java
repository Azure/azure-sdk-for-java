// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Subnet configuration for segment.
 */
@Fluent
public final class WorkloadNetworkSegmentSubnet implements JsonSerializable<WorkloadNetworkSegmentSubnet> {
    /*
     * DHCP Range assigned for subnet.
     */
    private List<String> dhcpRanges;

    /*
     * Gateway address.
     */
    private String gatewayAddress;

    /**
     * Creates an instance of WorkloadNetworkSegmentSubnet class.
     */
    public WorkloadNetworkSegmentSubnet() {
    }

    /**
     * Get the dhcpRanges property: DHCP Range assigned for subnet.
     * 
     * @return the dhcpRanges value.
     */
    public List<String> dhcpRanges() {
        return this.dhcpRanges;
    }

    /**
     * Set the dhcpRanges property: DHCP Range assigned for subnet.
     * 
     * @param dhcpRanges the dhcpRanges value to set.
     * @return the WorkloadNetworkSegmentSubnet object itself.
     */
    public WorkloadNetworkSegmentSubnet withDhcpRanges(List<String> dhcpRanges) {
        this.dhcpRanges = dhcpRanges;
        return this;
    }

    /**
     * Get the gatewayAddress property: Gateway address.
     * 
     * @return the gatewayAddress value.
     */
    public String gatewayAddress() {
        return this.gatewayAddress;
    }

    /**
     * Set the gatewayAddress property: Gateway address.
     * 
     * @param gatewayAddress the gatewayAddress value to set.
     * @return the WorkloadNetworkSegmentSubnet object itself.
     */
    public WorkloadNetworkSegmentSubnet withGatewayAddress(String gatewayAddress) {
        this.gatewayAddress = gatewayAddress;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("dhcpRanges", this.dhcpRanges, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("gatewayAddress", this.gatewayAddress);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkloadNetworkSegmentSubnet from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkloadNetworkSegmentSubnet if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WorkloadNetworkSegmentSubnet.
     */
    public static WorkloadNetworkSegmentSubnet fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkloadNetworkSegmentSubnet deserializedWorkloadNetworkSegmentSubnet = new WorkloadNetworkSegmentSubnet();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("dhcpRanges".equals(fieldName)) {
                    List<String> dhcpRanges = reader.readArray(reader1 -> reader1.getString());
                    deserializedWorkloadNetworkSegmentSubnet.dhcpRanges = dhcpRanges;
                } else if ("gatewayAddress".equals(fieldName)) {
                    deserializedWorkloadNetworkSegmentSubnet.gatewayAddress = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkloadNetworkSegmentSubnet;
        });
    }
}
