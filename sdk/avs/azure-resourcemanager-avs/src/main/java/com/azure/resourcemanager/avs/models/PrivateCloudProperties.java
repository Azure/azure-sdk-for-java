// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.resourcemanager.avs.fluent.models.PrivateCloudPropertiesInner;
import java.util.List;

/**
 * An immutable client-side representation of PrivateCloudProperties.
 */
public interface PrivateCloudProperties {
    /**
     * Gets the managementCluster property: The default cluster used for management.
     * 
     * @return the managementCluster value.
     */
    ManagementCluster managementCluster();

    /**
     * Gets the internet property: Connectivity to internet is enabled or disabled.
     * 
     * @return the internet value.
     */
    InternetEnum internet();

    /**
     * Gets the identitySources property: vCenter Single Sign On Identity Sources.
     * 
     * @return the identitySources value.
     */
    List<IdentitySource> identitySources();

    /**
     * Gets the availability property: Properties describing how the cloud is distributed across availability zones.
     * 
     * @return the availability value.
     */
    AvailabilityProperties availability();

    /**
     * Gets the encryption property: Customer managed key encryption, can be enabled or disabled.
     * 
     * @return the encryption value.
     */
    Encryption encryption();

    /**
     * Gets the extendedNetworkBlocks property: Array of additional networks noncontiguous with networkBlock. Networks
     * must be
     * unique and non-overlapping across VNet in your subscription, on-premise, and
     * this privateCloud networkBlock attribute. Make sure the CIDR format conforms to
     * (A.B.C.D/X).
     * 
     * @return the extendedNetworkBlocks value.
     */
    List<String> extendedNetworkBlocks();

    /**
     * Gets the provisioningState property: The provisioning state.
     * 
     * @return the provisioningState value.
     */
    PrivateCloudProvisioningState provisioningState();

    /**
     * Gets the circuit property: An ExpressRoute Circuit.
     * 
     * @return the circuit value.
     */
    Circuit circuit();

    /**
     * Gets the endpoints property: The endpoints.
     * 
     * @return the endpoints value.
     */
    Endpoints endpoints();

    /**
     * Gets the networkBlock property: The block of addresses should be unique across VNet in your subscription as
     * well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where
     * A,B,C,D are between 0 and 255, and X is between 0 and 22.
     * 
     * @return the networkBlock value.
     */
    String networkBlock();

    /**
     * Gets the managementNetwork property: Network used to access vCenter Server and NSX-T Manager.
     * 
     * @return the managementNetwork value.
     */
    String managementNetwork();

    /**
     * Gets the provisioningNetwork property: Used for virtual machine cold migration, cloning, and snapshot migration.
     * 
     * @return the provisioningNetwork value.
     */
    String provisioningNetwork();

    /**
     * Gets the vmotionNetwork property: Used for live migration of virtual machines.
     * 
     * @return the vmotionNetwork value.
     */
    String vmotionNetwork();

    /**
     * Gets the vcenterPassword property: Optionally, set the vCenter admin password when the private cloud is created.
     * 
     * @return the vcenterPassword value.
     */
    String vcenterPassword();

    /**
     * Gets the nsxtPassword property: Optionally, set the NSX-T Manager password when the private cloud is created.
     * 
     * @return the nsxtPassword value.
     */
    String nsxtPassword();

    /**
     * Gets the vcenterCertificateThumbprint property: Thumbprint of the vCenter Server SSL certificate.
     * 
     * @return the vcenterCertificateThumbprint value.
     */
    String vcenterCertificateThumbprint();

    /**
     * Gets the nsxtCertificateThumbprint property: Thumbprint of the NSX-T Manager SSL certificate.
     * 
     * @return the nsxtCertificateThumbprint value.
     */
    String nsxtCertificateThumbprint();

    /**
     * Gets the externalCloudLinks property: Array of cloud link IDs from other clouds that connect to this one.
     * 
     * @return the externalCloudLinks value.
     */
    List<String> externalCloudLinks();

    /**
     * Gets the secondaryCircuit property: A secondary expressRoute circuit from a separate AZ. Only present in a
     * stretched private cloud.
     * 
     * @return the secondaryCircuit value.
     */
    Circuit secondaryCircuit();

    /**
     * Gets the nsxPublicIpQuotaRaised property: Flag to indicate whether the private cloud has the quota for
     * provisioned NSX
     * Public IP count raised from 64 to 1024.
     * 
     * @return the nsxPublicIpQuotaRaised value.
     */
    NsxPublicIpQuotaRaisedEnum nsxPublicIpQuotaRaised();

    /**
     * Gets the virtualNetworkId property: Azure resource ID of the virtual network.
     * 
     * @return the virtualNetworkId value.
     */
    String virtualNetworkId();

    /**
     * Gets the dnsZoneType property: The type of DNS zone to use.
     * 
     * @return the dnsZoneType value.
     */
    DnsZoneType dnsZoneType();

    /**
     * Gets the vcfLicense property: The private cloud license.
     * 
     * @return the vcfLicense value.
     */
    VcfLicense vcfLicense();

    /**
     * Gets the inner com.azure.resourcemanager.avs.fluent.models.PrivateCloudPropertiesInner object.
     * 
     * @return the inner object.
     */
    PrivateCloudPropertiesInner innerModel();
}
