// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Details about an error affecting a resource.
 */
@Immutable
public final class ImpactedMaintenanceResourceError implements JsonSerializable<ImpactedMaintenanceResourceError> {
    /*
     * The error code
     */
    private String errorCode;

    /*
     * The name of the error
     */
    private String name;

    /*
     * Additional details about the error
     */
    private String details;

    /*
     * Steps to resolve the error
     */
    private List<String> resolutionSteps;

    /*
     * Indicates whether action is required by the customer
     */
    private Boolean actionRequired;

    /**
     * Creates an instance of ImpactedMaintenanceResourceError class.
     */
    private ImpactedMaintenanceResourceError() {
    }

    /**
     * Get the errorCode property: The error code.
     * 
     * @return the errorCode value.
     */
    public String errorCode() {
        return this.errorCode;
    }

    /**
     * Get the name property: The name of the error.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the details property: Additional details about the error.
     * 
     * @return the details value.
     */
    public String details() {
        return this.details;
    }

    /**
     * Get the resolutionSteps property: Steps to resolve the error.
     * 
     * @return the resolutionSteps value.
     */
    public List<String> resolutionSteps() {
        return this.resolutionSteps;
    }

    /**
     * Get the actionRequired property: Indicates whether action is required by the customer.
     * 
     * @return the actionRequired value.
     */
    public Boolean actionRequired() {
        return this.actionRequired;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ImpactedMaintenanceResourceError from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ImpactedMaintenanceResourceError if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ImpactedMaintenanceResourceError.
     */
    public static ImpactedMaintenanceResourceError fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ImpactedMaintenanceResourceError deserializedImpactedMaintenanceResourceError
                = new ImpactedMaintenanceResourceError();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("errorCode".equals(fieldName)) {
                    deserializedImpactedMaintenanceResourceError.errorCode = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedImpactedMaintenanceResourceError.name = reader.getString();
                } else if ("details".equals(fieldName)) {
                    deserializedImpactedMaintenanceResourceError.details = reader.getString();
                } else if ("resolutionSteps".equals(fieldName)) {
                    List<String> resolutionSteps = reader.readArray(reader1 -> reader1.getString());
                    deserializedImpactedMaintenanceResourceError.resolutionSteps = resolutionSteps;
                } else if ("actionRequired".equals(fieldName)) {
                    deserializedImpactedMaintenanceResourceError.actionRequired
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedImpactedMaintenanceResourceError;
        });
    }
}
