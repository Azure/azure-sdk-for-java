// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.avs.fluent.models.ExpressRouteAuthorizationInner;

/** An immutable client-side representation of ExpressRouteAuthorization. */
public interface ExpressRouteAuthorization {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the provisioningState property: The state of the ExpressRoute Circuit Authorization provisioning.
     *
     * @return the provisioningState value.
     */
    ExpressRouteAuthorizationProvisioningState provisioningState();

    /**
     * Gets the expressRouteAuthorizationId property: The ID of the ExpressRoute Circuit Authorization.
     *
     * @return the expressRouteAuthorizationId value.
     */
    String expressRouteAuthorizationId();

    /**
     * Gets the expressRouteAuthorizationKey property: The key of the ExpressRoute Circuit Authorization.
     *
     * @return the expressRouteAuthorizationKey value.
     */
    String expressRouteAuthorizationKey();

    /**
     * Gets the inner com.azure.resourcemanager.avs.fluent.models.ExpressRouteAuthorizationInner object.
     *
     * @return the inner object.
     */
    ExpressRouteAuthorizationInner innerModel();

    /** The entirety of the ExpressRouteAuthorization definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ExpressRouteAuthorization definition stages. */
    interface DefinitionStages {
        /** The first stage of the ExpressRouteAuthorization definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ExpressRouteAuthorization definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, privateCloudName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param privateCloudName The name of the private cloud.
             * @return the next definition stage.
             */
            WithCreate withExistingPrivateCloud(String resourceGroupName, String privateCloudName);
        }
        /**
         * The stage of the ExpressRouteAuthorization definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ExpressRouteAuthorization create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ExpressRouteAuthorization create(Context context);
        }
    }
    /**
     * Begins update for the ExpressRouteAuthorization resource.
     *
     * @return the stage of resource update.
     */
    ExpressRouteAuthorization.Update update();

    /** The template for ExpressRouteAuthorization update. */
    interface Update {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ExpressRouteAuthorization apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ExpressRouteAuthorization apply(Context context);
    }
    /** The ExpressRouteAuthorization update stages. */
    interface UpdateStages {
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ExpressRouteAuthorization refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ExpressRouteAuthorization refresh(Context context);
}
