// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Refresh MaintenanceReadiness status.
 */
@Immutable
public final class MaintenanceReadinessRefreshOperation extends MaintenanceManagementOperation {
    /*
     * The kind of operation
     */
    private MaintenanceManagementOperationKind kind = MaintenanceManagementOperationKind.MAINTENANCE_READINESS_REFRESH;

    /*
     * If maintenanceReadiness refresh is disabled
     */
    private Boolean isDisabled;

    /*
     * Reason disabling refresh for maintenanceReadiness
     */
    private String disabledReason;

    /*
     * Status of the operation
     */
    private MaintenanceReadinessRefreshOperationStatus status;

    /*
     * Indicates if the operation was refreshed by Microsoft
     */
    private Boolean refreshedByMicrosoft;

    /*
     * Additional message about the operation
     */
    private String message;

    /**
     * Creates an instance of MaintenanceReadinessRefreshOperation class.
     */
    private MaintenanceReadinessRefreshOperation() {
    }

    /**
     * Get the kind property: The kind of operation.
     * 
     * @return the kind value.
     */
    @Override
    public MaintenanceManagementOperationKind kind() {
        return this.kind;
    }

    /**
     * Get the isDisabled property: If maintenanceReadiness refresh is disabled.
     * 
     * @return the isDisabled value.
     */
    public Boolean isDisabled() {
        return this.isDisabled;
    }

    /**
     * Get the disabledReason property: Reason disabling refresh for maintenanceReadiness.
     * 
     * @return the disabledReason value.
     */
    public String disabledReason() {
        return this.disabledReason;
    }

    /**
     * Get the status property: Status of the operation.
     * 
     * @return the status value.
     */
    public MaintenanceReadinessRefreshOperationStatus status() {
        return this.status;
    }

    /**
     * Get the refreshedByMicrosoft property: Indicates if the operation was refreshed by Microsoft.
     * 
     * @return the refreshedByMicrosoft value.
     */
    public Boolean refreshedByMicrosoft() {
        return this.refreshedByMicrosoft;
    }

    /**
     * Get the message property: Additional message about the operation.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MaintenanceReadinessRefreshOperation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MaintenanceReadinessRefreshOperation if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MaintenanceReadinessRefreshOperation.
     */
    public static MaintenanceReadinessRefreshOperation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MaintenanceReadinessRefreshOperation deserializedMaintenanceReadinessRefreshOperation
                = new MaintenanceReadinessRefreshOperation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("kind".equals(fieldName)) {
                    deserializedMaintenanceReadinessRefreshOperation.kind
                        = MaintenanceManagementOperationKind.fromString(reader.getString());
                } else if ("isDisabled".equals(fieldName)) {
                    deserializedMaintenanceReadinessRefreshOperation.isDisabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("disabledReason".equals(fieldName)) {
                    deserializedMaintenanceReadinessRefreshOperation.disabledReason = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedMaintenanceReadinessRefreshOperation.status
                        = MaintenanceReadinessRefreshOperationStatus.fromString(reader.getString());
                } else if ("refreshedByMicrosoft".equals(fieldName)) {
                    deserializedMaintenanceReadinessRefreshOperation.refreshedByMicrosoft
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("message".equals(fieldName)) {
                    deserializedMaintenanceReadinessRefreshOperation.message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMaintenanceReadinessRefreshOperation;
        });
    }
}
