// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.avs.models.ExpressRouteAuthorizationProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExpressRoute Circuit Authorization.
 */
@Fluent
public final class ExpressRouteAuthorizationInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private ExpressRouteAuthorizationProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of ExpressRouteAuthorizationInner class.
     */
    public ExpressRouteAuthorizationInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private ExpressRouteAuthorizationProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the provisioningState property: The state of the ExpressRoute Circuit Authorization provisioning.
     * 
     * @return the provisioningState value.
     */
    public ExpressRouteAuthorizationProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the expressRouteAuthorizationId property: The ID of the ExpressRoute Circuit Authorization.
     * 
     * @return the expressRouteAuthorizationId value.
     */
    public String expressRouteAuthorizationId() {
        return this.innerProperties() == null ? null : this.innerProperties().expressRouteAuthorizationId();
    }

    /**
     * Get the expressRouteAuthorizationKey property: The key of the ExpressRoute Circuit Authorization.
     * 
     * @return the expressRouteAuthorizationKey value.
     */
    public String expressRouteAuthorizationKey() {
        return this.innerProperties() == null ? null : this.innerProperties().expressRouteAuthorizationKey();
    }

    /**
     * Get the expressRouteId property: The ID of the ExpressRoute Circuit.
     * 
     * @return the expressRouteId value.
     */
    public String expressRouteId() {
        return this.innerProperties() == null ? null : this.innerProperties().expressRouteId();
    }

    /**
     * Set the expressRouteId property: The ID of the ExpressRoute Circuit.
     * 
     * @param expressRouteId the expressRouteId value to set.
     * @return the ExpressRouteAuthorizationInner object itself.
     */
    public ExpressRouteAuthorizationInner withExpressRouteId(String expressRouteId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ExpressRouteAuthorizationProperties();
        }
        this.innerProperties().withExpressRouteId(expressRouteId);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
