// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.avs.fluent.IscsiPathsClient;
import com.azure.resourcemanager.avs.fluent.models.IscsiPathInner;
import com.azure.resourcemanager.avs.models.IscsiPath;
import com.azure.resourcemanager.avs.models.IscsiPaths;

public final class IscsiPathsImpl implements IscsiPaths {
    private static final ClientLogger LOGGER = new ClientLogger(IscsiPathsImpl.class);

    private final IscsiPathsClient innerClient;

    private final com.azure.resourcemanager.avs.AvsManager serviceManager;

    public IscsiPathsImpl(IscsiPathsClient innerClient, com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<IscsiPath> listByPrivateCloud(String resourceGroupName, String privateCloudName) {
        PagedIterable<IscsiPathInner> inner
            = this.serviceClient().listByPrivateCloud(resourceGroupName, privateCloudName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new IscsiPathImpl(inner1, this.manager()));
    }

    public PagedIterable<IscsiPath> listByPrivateCloud(String resourceGroupName, String privateCloudName,
        Context context) {
        PagedIterable<IscsiPathInner> inner
            = this.serviceClient().listByPrivateCloud(resourceGroupName, privateCloudName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new IscsiPathImpl(inner1, this.manager()));
    }

    public Response<IscsiPath> getWithResponse(String resourceGroupName, String privateCloudName, Context context) {
        Response<IscsiPathInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, privateCloudName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new IscsiPathImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public IscsiPath get(String resourceGroupName, String privateCloudName) {
        IscsiPathInner inner = this.serviceClient().get(resourceGroupName, privateCloudName);
        if (inner != null) {
            return new IscsiPathImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public IscsiPath createOrUpdate(String resourceGroupName, String privateCloudName, IscsiPathInner resource) {
        IscsiPathInner inner = this.serviceClient().createOrUpdate(resourceGroupName, privateCloudName, resource);
        if (inner != null) {
            return new IscsiPathImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public IscsiPath createOrUpdate(String resourceGroupName, String privateCloudName, IscsiPathInner resource,
        Context context) {
        IscsiPathInner inner
            = this.serviceClient().createOrUpdate(resourceGroupName, privateCloudName, resource, context);
        if (inner != null) {
            return new IscsiPathImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void deleteByResourceGroup(String resourceGroupName, String privateCloudName) {
        this.serviceClient().delete(resourceGroupName, privateCloudName);
    }

    public void delete(String resourceGroupName, String privateCloudName, Context context) {
        this.serviceClient().delete(resourceGroupName, privateCloudName, context);
    }

    private IscsiPathsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.avs.AvsManager manager() {
        return this.serviceManager;
    }
}
