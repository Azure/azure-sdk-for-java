// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.avs.fluent.IscsiPathsClient;
import com.azure.resourcemanager.avs.fluent.models.IscsiPathInner;
import com.azure.resourcemanager.avs.models.IscsiPath;
import com.azure.resourcemanager.avs.models.IscsiPaths;

public final class IscsiPathsImpl implements IscsiPaths {
    private static final ClientLogger LOGGER = new ClientLogger(IscsiPathsImpl.class);

    private final IscsiPathsClient innerClient;

    private final com.azure.resourcemanager.avs.AvsManager serviceManager;

    public IscsiPathsImpl(IscsiPathsClient innerClient, com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<IscsiPath> listByPrivateCloud(String resourceGroupName, String privateCloudName) {
        PagedIterable<IscsiPathInner> inner
            = this.serviceClient().listByPrivateCloud(resourceGroupName, privateCloudName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new IscsiPathImpl(inner1, this.manager()));
    }

    public PagedIterable<IscsiPath> listByPrivateCloud(String resourceGroupName, String privateCloudName,
        Context context) {
        PagedIterable<IscsiPathInner> inner
            = this.serviceClient().listByPrivateCloud(resourceGroupName, privateCloudName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new IscsiPathImpl(inner1, this.manager()));
    }

    public Response<IscsiPath> getWithResponse(String resourceGroupName, String privateCloudName, String iscsiPathName,
        Context context) {
        Response<IscsiPathInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, privateCloudName, iscsiPathName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new IscsiPathImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public IscsiPath get(String resourceGroupName, String privateCloudName, String iscsiPathName) {
        IscsiPathInner inner = this.serviceClient().get(resourceGroupName, privateCloudName, iscsiPathName);
        if (inner != null) {
            return new IscsiPathImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String privateCloudName, String iscsiPathName) {
        this.serviceClient().delete(resourceGroupName, privateCloudName, iscsiPathName);
    }

    public void delete(String resourceGroupName, String privateCloudName, String iscsiPathName, Context context) {
        this.serviceClient().delete(resourceGroupName, privateCloudName, iscsiPathName, context);
    }

    public IscsiPath getById(String id) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String privateCloudName = ResourceManagerUtils.getValueFromIdByName(id, "privateClouds");
        if (privateCloudName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'privateClouds'.", id)));
        }
        String iscsiPathName = ResourceManagerUtils.getValueFromIdByName(id, "iscsiPaths");
        if (iscsiPathName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'iscsiPaths'.", id)));
        }
        return this.getWithResponse(resourceGroupName, privateCloudName, iscsiPathName, Context.NONE).getValue();
    }

    public Response<IscsiPath> getByIdWithResponse(String id, Context context) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String privateCloudName = ResourceManagerUtils.getValueFromIdByName(id, "privateClouds");
        if (privateCloudName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'privateClouds'.", id)));
        }
        String iscsiPathName = ResourceManagerUtils.getValueFromIdByName(id, "iscsiPaths");
        if (iscsiPathName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'iscsiPaths'.", id)));
        }
        return this.getWithResponse(resourceGroupName, privateCloudName, iscsiPathName, context);
    }

    public void deleteById(String id) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String privateCloudName = ResourceManagerUtils.getValueFromIdByName(id, "privateClouds");
        if (privateCloudName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'privateClouds'.", id)));
        }
        String iscsiPathName = ResourceManagerUtils.getValueFromIdByName(id, "iscsiPaths");
        if (iscsiPathName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'iscsiPaths'.", id)));
        }
        this.delete(resourceGroupName, privateCloudName, iscsiPathName, Context.NONE);
    }

    public void deleteByIdWithResponse(String id, Context context) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String privateCloudName = ResourceManagerUtils.getValueFromIdByName(id, "privateClouds");
        if (privateCloudName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'privateClouds'.", id)));
        }
        String iscsiPathName = ResourceManagerUtils.getValueFromIdByName(id, "iscsiPaths");
        if (iscsiPathName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'iscsiPaths'.", id)));
        }
        this.delete(resourceGroupName, privateCloudName, iscsiPathName, context);
    }

    private IscsiPathsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.avs.AvsManager manager() {
        return this.serviceManager;
    }

    public IscsiPathImpl define(String name) {
        return new IscsiPathImpl(name, this.manager());
    }
}
