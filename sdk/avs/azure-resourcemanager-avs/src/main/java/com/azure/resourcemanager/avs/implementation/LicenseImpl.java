// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.avs.fluent.models.LicenseInner;
import com.azure.resourcemanager.avs.fluent.models.LicensePropertiesInner;
import com.azure.resourcemanager.avs.models.License;
import com.azure.resourcemanager.avs.models.LicenseName;
import com.azure.resourcemanager.avs.models.LicenseProperties;

public final class LicenseImpl implements License, License.Definition, License.Update {
    private LicenseInner innerObject;

    private final com.azure.resourcemanager.avs.AvsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public LicenseProperties properties() {
        LicensePropertiesInner inner = this.innerModel().properties();
        if (inner != null) {
            return new LicensePropertiesImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public LicenseInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.avs.AvsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String privateCloudName;

    private LicenseName licenseName;

    public LicenseImpl withExistingPrivateCloud(String resourceGroupName, String privateCloudName) {
        this.resourceGroupName = resourceGroupName;
        this.privateCloudName = privateCloudName;
        return this;
    }

    public License create() {
        this.innerObject = serviceManager.serviceClient()
            .getLicenses()
            .createOrUpdate(resourceGroupName, privateCloudName, licenseName, this.innerModel(), Context.NONE);
        return this;
    }

    public License create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getLicenses()
            .createOrUpdate(resourceGroupName, privateCloudName, licenseName, this.innerModel(), context);
        return this;
    }

    LicenseImpl(LicenseName name, com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerObject = new LicenseInner();
        this.serviceManager = serviceManager;
        this.licenseName = name;
    }

    public LicenseImpl update() {
        return this;
    }

    public License apply() {
        this.innerObject = serviceManager.serviceClient()
            .getLicenses()
            .createOrUpdate(resourceGroupName, privateCloudName, licenseName, this.innerModel(), Context.NONE);
        return this;
    }

    public License apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getLicenses()
            .createOrUpdate(resourceGroupName, privateCloudName, licenseName, this.innerModel(), context);
        return this;
    }

    LicenseImpl(LicenseInner innerObject, com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.privateCloudName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "privateClouds");
        this.licenseName
            = LicenseName.fromString(ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "licenses"));
    }

    public License refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getLicenses()
            .getWithResponse(resourceGroupName, privateCloudName, licenseName, Context.NONE)
            .getValue();
        return this;
    }

    public License refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getLicenses()
            .getWithResponse(resourceGroupName, privateCloudName, licenseName, context)
            .getValue();
        return this;
    }

    public Response<LicenseProperties> getPropertiesWithResponse(Context context) {
        return serviceManager.licenses()
            .getPropertiesWithResponse(resourceGroupName, privateCloudName, licenseName, context);
    }

    public LicenseProperties getProperties() {
        return serviceManager.licenses().getProperties(resourceGroupName, privateCloudName, licenseName);
    }

    public LicenseImpl withProperties(LicensePropertiesInner properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
