// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.avs.models.AddonProvisioningState;
import com.azure.resourcemanager.avs.models.AddonType;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** An addon resource. */
@JsonFlatten
@Fluent
public class AddonInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AddonInner.class);

    /*
     * The SRM license
     */
    @JsonProperty(value = "properties.licenseKey")
    private String licenseKey;

    /*
     * The type of private cloud addon
     */
    @JsonProperty(value = "properties.addonType")
    private AddonType addonType;

    /*
     * The state of the addon provisioning
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private AddonProvisioningState provisioningState;

    /**
     * Get the licenseKey property: The SRM license.
     *
     * @return the licenseKey value.
     */
    public String licenseKey() {
        return this.licenseKey;
    }

    /**
     * Set the licenseKey property: The SRM license.
     *
     * @param licenseKey the licenseKey value to set.
     * @return the AddonInner object itself.
     */
    public AddonInner withLicenseKey(String licenseKey) {
        this.licenseKey = licenseKey;
        return this;
    }

    /**
     * Get the addonType property: The type of private cloud addon.
     *
     * @return the addonType value.
     */
    public AddonType addonType() {
        return this.addonType;
    }

    /**
     * Set the addonType property: The type of private cloud addon.
     *
     * @param addonType the addonType value to set.
     * @return the AddonInner object itself.
     */
    public AddonInner withAddonType(AddonType addonType) {
        this.addonType = addonType;
        return this;
    }

    /**
     * Get the provisioningState property: The state of the addon provisioning.
     *
     * @return the provisioningState value.
     */
    public AddonProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
