// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkPortMirroringInner;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPortMirroringUpdate;

/**
 * An instance of this class provides access to all the operations defined in
 * WorkloadNetworkPortMirroringProfilesClient.
 */
public interface WorkloadNetworkPortMirroringProfilesClient {
    /**
     * List WorkloadNetworkPortMirroring resources by WorkloadNetwork.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a WorkloadNetworkPortMirroring list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WorkloadNetworkPortMirroringInner> listByWorkloadNetwork(String resourceGroupName,
        String privateCloudName);

    /**
     * List WorkloadNetworkPortMirroring resources by WorkloadNetwork.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a WorkloadNetworkPortMirroring list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WorkloadNetworkPortMirroringInner> listByWorkloadNetwork(String resourceGroupName,
        String privateCloudName, Context context);

    /**
     * Get a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a WorkloadNetworkPortMirroring along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WorkloadNetworkPortMirroringInner> getWithResponse(String resourceGroupName, String privateCloudName,
        String portMirroringId, Context context);

    /**
     * Get a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a WorkloadNetworkPortMirroring.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkloadNetworkPortMirroringInner get(String resourceGroupName, String privateCloudName, String portMirroringId);

    /**
     * Create a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param workloadNetworkPortMirroring Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of nSX Port Mirroring.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<WorkloadNetworkPortMirroringInner>, WorkloadNetworkPortMirroringInner> beginCreate(
        String resourceGroupName, String privateCloudName, String portMirroringId,
        WorkloadNetworkPortMirroringInner workloadNetworkPortMirroring);

    /**
     * Create a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param workloadNetworkPortMirroring Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of nSX Port Mirroring.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<WorkloadNetworkPortMirroringInner>, WorkloadNetworkPortMirroringInner> beginCreate(
        String resourceGroupName, String privateCloudName, String portMirroringId,
        WorkloadNetworkPortMirroringInner workloadNetworkPortMirroring, Context context);

    /**
     * Create a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param workloadNetworkPortMirroring Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return nSX Port Mirroring.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkloadNetworkPortMirroringInner create(String resourceGroupName, String privateCloudName, String portMirroringId,
        WorkloadNetworkPortMirroringInner workloadNetworkPortMirroring);

    /**
     * Create a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param workloadNetworkPortMirroring Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return nSX Port Mirroring.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkloadNetworkPortMirroringInner create(String resourceGroupName, String privateCloudName, String portMirroringId,
        WorkloadNetworkPortMirroringInner workloadNetworkPortMirroring, Context context);

    /**
     * Update a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param workloadNetworkPortMirroring The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of nSX Port Mirroring.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<WorkloadNetworkPortMirroringInner>, WorkloadNetworkPortMirroringInner> beginUpdate(
        String resourceGroupName, String privateCloudName, String portMirroringId,
        WorkloadNetworkPortMirroringUpdate workloadNetworkPortMirroring);

    /**
     * Update a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param workloadNetworkPortMirroring The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of nSX Port Mirroring.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<WorkloadNetworkPortMirroringInner>, WorkloadNetworkPortMirroringInner> beginUpdate(
        String resourceGroupName, String privateCloudName, String portMirroringId,
        WorkloadNetworkPortMirroringUpdate workloadNetworkPortMirroring, Context context);

    /**
     * Update a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param workloadNetworkPortMirroring The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return nSX Port Mirroring.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkloadNetworkPortMirroringInner update(String resourceGroupName, String privateCloudName, String portMirroringId,
        WorkloadNetworkPortMirroringUpdate workloadNetworkPortMirroring);

    /**
     * Update a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param workloadNetworkPortMirroring The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return nSX Port Mirroring.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkloadNetworkPortMirroringInner update(String resourceGroupName, String privateCloudName, String portMirroringId,
        WorkloadNetworkPortMirroringUpdate workloadNetworkPortMirroring, Context context);

    /**
     * Delete a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param privateCloudName Name of the private cloud.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String portMirroringId,
        String privateCloudName);

    /**
     * Delete a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param privateCloudName Name of the private cloud.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String portMirroringId,
        String privateCloudName, Context context);

    /**
     * Delete a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param privateCloudName Name of the private cloud.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String portMirroringId, String privateCloudName);

    /**
     * Delete a WorkloadNetworkPortMirroring.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param portMirroringId ID of the NSX port mirroring profile.
     * @param privateCloudName Name of the private cloud.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String portMirroringId, String privateCloudName, Context context);
}
