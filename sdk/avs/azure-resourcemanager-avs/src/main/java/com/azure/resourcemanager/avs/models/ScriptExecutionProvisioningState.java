// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Script Execution provisioning state.
 */
public final class ScriptExecutionProvisioningState extends ExpandableStringEnum<ScriptExecutionProvisioningState> {
    /**
     * Resource has been created.
     */
    public static final ScriptExecutionProvisioningState SUCCEEDED = fromString("Succeeded");

    /**
     * Resource creation failed.
     */
    public static final ScriptExecutionProvisioningState FAILED = fromString("Failed");

    /**
     * Resource creation was canceled.
     */
    public static final ScriptExecutionProvisioningState CANCELED = fromString("Canceled");

    /**
     * is pending.
     */
    public static final ScriptExecutionProvisioningState PENDING = fromString("Pending");

    /**
     * is running.
     */
    public static final ScriptExecutionProvisioningState RUNNING = fromString("Running");

    /**
     * is cancelling.
     */
    public static final ScriptExecutionProvisioningState CANCELLING = fromString("Cancelling");

    /**
     * is cancelled.
     */
    public static final ScriptExecutionProvisioningState CANCELLED = fromString("Cancelled");

    /**
     * is deleting.
     */
    public static final ScriptExecutionProvisioningState DELETING = fromString("Deleting");

    /**
     * Creates a new instance of ScriptExecutionProvisioningState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public ScriptExecutionProvisioningState() {
    }

    /**
     * Creates or finds a ScriptExecutionProvisioningState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ScriptExecutionProvisioningState.
     */
    public static ScriptExecutionProvisioningState fromString(String name) {
        return fromString(name, ScriptExecutionProvisioningState.class);
    }

    /**
     * Gets known ScriptExecutionProvisioningState values.
     * 
     * @return known ScriptExecutionProvisioningState values.
     */
    public static Collection<ScriptExecutionProvisioningState> values() {
        return values(ScriptExecutionProvisioningState.class);
    }
}
