// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** An ExpressRoute Circuit. */
@Immutable
public final class Circuit {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(Circuit.class);

    /*
     * CIDR of primary subnet
     */
    @JsonProperty(value = "primarySubnet", access = JsonProperty.Access.WRITE_ONLY)
    private String primarySubnet;

    /*
     * CIDR of secondary subnet
     */
    @JsonProperty(value = "secondarySubnet", access = JsonProperty.Access.WRITE_ONLY)
    private String secondarySubnet;

    /*
     * Identifier of the ExpressRoute Circuit (Microsoft Colo only)
     */
    @JsonProperty(value = "expressRouteID", access = JsonProperty.Access.WRITE_ONLY)
    private String expressRouteId;

    /*
     * ExpressRoute Circuit private peering identifier
     */
    @JsonProperty(value = "expressRoutePrivatePeeringID", access = JsonProperty.Access.WRITE_ONLY)
    private String expressRoutePrivatePeeringId;

    /**
     * Get the primarySubnet property: CIDR of primary subnet.
     *
     * @return the primarySubnet value.
     */
    public String primarySubnet() {
        return this.primarySubnet;
    }

    /**
     * Get the secondarySubnet property: CIDR of secondary subnet.
     *
     * @return the secondarySubnet value.
     */
    public String secondarySubnet() {
        return this.secondarySubnet;
    }

    /**
     * Get the expressRouteId property: Identifier of the ExpressRoute Circuit (Microsoft Colo only).
     *
     * @return the expressRouteId value.
     */
    public String expressRouteId() {
        return this.expressRouteId;
    }

    /**
     * Get the expressRoutePrivatePeeringId property: ExpressRoute Circuit private peering identifier.
     *
     * @return the expressRoutePrivatePeeringId value.
     */
    public String expressRoutePrivatePeeringId() {
        return this.expressRoutePrivatePeeringId;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
