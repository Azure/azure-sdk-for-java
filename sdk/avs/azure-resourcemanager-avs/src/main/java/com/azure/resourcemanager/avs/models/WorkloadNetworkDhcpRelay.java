// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/** NSX DHCP Relay. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "dhcpType")
@JsonTypeName("RELAY")
@Fluent
public final class WorkloadNetworkDhcpRelay extends WorkloadNetworkDhcpEntity {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WorkloadNetworkDhcpRelay.class);

    /*
     * DHCP Relay Addresses. Max 3.
     */
    @JsonProperty(value = "serverAddresses")
    private List<String> serverAddresses;

    /**
     * Get the serverAddresses property: DHCP Relay Addresses. Max 3.
     *
     * @return the serverAddresses value.
     */
    public List<String> serverAddresses() {
        return this.serverAddresses;
    }

    /**
     * Set the serverAddresses property: DHCP Relay Addresses. Max 3.
     *
     * @param serverAddresses the serverAddresses value to set.
     * @return the WorkloadNetworkDhcpRelay object itself.
     */
    public WorkloadNetworkDhcpRelay withServerAddresses(List<String> serverAddresses) {
        this.serverAddresses = serverAddresses;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public WorkloadNetworkDhcpRelay withDisplayName(String displayName) {
        super.withDisplayName(displayName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public WorkloadNetworkDhcpRelay withRevision(Long revision) {
        super.withRevision(revision);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
