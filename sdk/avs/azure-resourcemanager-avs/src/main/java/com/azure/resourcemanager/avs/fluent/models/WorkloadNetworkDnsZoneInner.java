// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsZoneProvisioningState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** NSX DNS Zone. */
@JsonFlatten
@Fluent
public class WorkloadNetworkDnsZoneInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WorkloadNetworkDnsZoneInner.class);

    /*
     * Display name of the DNS Zone.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /*
     * Domain names of the DNS Zone.
     */
    @JsonProperty(value = "properties.domain")
    private List<String> domain;

    /*
     * DNS Server IP array of the DNS Zone.
     */
    @JsonProperty(value = "properties.dnsServerIps")
    private List<String> dnsServerIps;

    /*
     * Source IP of the DNS Zone.
     */
    @JsonProperty(value = "properties.sourceIp")
    private String sourceIp;

    /*
     * Number of DNS Services using the DNS zone.
     */
    @JsonProperty(value = "properties.dnsServices")
    private Long dnsServices;

    /*
     * The provisioning state
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private WorkloadNetworkDnsZoneProvisioningState provisioningState;

    /*
     * NSX revision number.
     */
    @JsonProperty(value = "properties.revision")
    private Long revision;

    /**
     * Get the displayName property: Display name of the DNS Zone.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Display name of the DNS Zone.
     *
     * @param displayName the displayName value to set.
     * @return the WorkloadNetworkDnsZoneInner object itself.
     */
    public WorkloadNetworkDnsZoneInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the domain property: Domain names of the DNS Zone.
     *
     * @return the domain value.
     */
    public List<String> domain() {
        return this.domain;
    }

    /**
     * Set the domain property: Domain names of the DNS Zone.
     *
     * @param domain the domain value to set.
     * @return the WorkloadNetworkDnsZoneInner object itself.
     */
    public WorkloadNetworkDnsZoneInner withDomain(List<String> domain) {
        this.domain = domain;
        return this;
    }

    /**
     * Get the dnsServerIps property: DNS Server IP array of the DNS Zone.
     *
     * @return the dnsServerIps value.
     */
    public List<String> dnsServerIps() {
        return this.dnsServerIps;
    }

    /**
     * Set the dnsServerIps property: DNS Server IP array of the DNS Zone.
     *
     * @param dnsServerIps the dnsServerIps value to set.
     * @return the WorkloadNetworkDnsZoneInner object itself.
     */
    public WorkloadNetworkDnsZoneInner withDnsServerIps(List<String> dnsServerIps) {
        this.dnsServerIps = dnsServerIps;
        return this;
    }

    /**
     * Get the sourceIp property: Source IP of the DNS Zone.
     *
     * @return the sourceIp value.
     */
    public String sourceIp() {
        return this.sourceIp;
    }

    /**
     * Set the sourceIp property: Source IP of the DNS Zone.
     *
     * @param sourceIp the sourceIp value to set.
     * @return the WorkloadNetworkDnsZoneInner object itself.
     */
    public WorkloadNetworkDnsZoneInner withSourceIp(String sourceIp) {
        this.sourceIp = sourceIp;
        return this;
    }

    /**
     * Get the dnsServices property: Number of DNS Services using the DNS zone.
     *
     * @return the dnsServices value.
     */
    public Long dnsServices() {
        return this.dnsServices;
    }

    /**
     * Set the dnsServices property: Number of DNS Services using the DNS zone.
     *
     * @param dnsServices the dnsServices value to set.
     * @return the WorkloadNetworkDnsZoneInner object itself.
     */
    public WorkloadNetworkDnsZoneInner withDnsServices(Long dnsServices) {
        this.dnsServices = dnsServices;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state.
     *
     * @return the provisioningState value.
     */
    public WorkloadNetworkDnsZoneProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the revision property: NSX revision number.
     *
     * @return the revision value.
     */
    public Long revision() {
        return this.revision;
    }

    /**
     * Set the revision property: NSX revision number.
     *
     * @param revision the revision value to set.
     * @return the WorkloadNetworkDnsZoneInner object itself.
     */
    public WorkloadNetworkDnsZoneInner withRevision(Long revision) {
        this.revision = revision;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
