// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Administrative credentials for accessing vCenter and NSX-T.
 */
@Immutable
public final class AdminCredentialsInner implements JsonSerializable<AdminCredentialsInner> {
    /*
     * NSX-T Manager username
     */
    private String nsxtUsername;

    /*
     * NSX-T Manager password
     */
    private String nsxtPassword;

    /*
     * vCenter admin username
     */
    private String vcenterUsername;

    /*
     * vCenter admin password
     */
    private String vcenterPassword;

    /**
     * Creates an instance of AdminCredentialsInner class.
     */
    public AdminCredentialsInner() {
    }

    /**
     * Get the nsxtUsername property: NSX-T Manager username.
     * 
     * @return the nsxtUsername value.
     */
    public String nsxtUsername() {
        return this.nsxtUsername;
    }

    /**
     * Get the nsxtPassword property: NSX-T Manager password.
     * 
     * @return the nsxtPassword value.
     */
    public String nsxtPassword() {
        return this.nsxtPassword;
    }

    /**
     * Get the vcenterUsername property: vCenter admin username.
     * 
     * @return the vcenterUsername value.
     */
    public String vcenterUsername() {
        return this.vcenterUsername;
    }

    /**
     * Get the vcenterPassword property: vCenter admin password.
     * 
     * @return the vcenterPassword value.
     */
    public String vcenterPassword() {
        return this.vcenterPassword;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AdminCredentialsInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AdminCredentialsInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AdminCredentialsInner.
     */
    public static AdminCredentialsInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AdminCredentialsInner deserializedAdminCredentialsInner = new AdminCredentialsInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("nsxtUsername".equals(fieldName)) {
                    deserializedAdminCredentialsInner.nsxtUsername = reader.getString();
                } else if ("nsxtPassword".equals(fieldName)) {
                    deserializedAdminCredentialsInner.nsxtPassword = reader.getString();
                } else if ("vcenterUsername".equals(fieldName)) {
                    deserializedAdminCredentialsInner.vcenterUsername = reader.getString();
                } else if ("vcenterPassword".equals(fieldName)) {
                    deserializedAdminCredentialsInner.vcenterPassword = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAdminCredentialsInner;
        });
    }
}
