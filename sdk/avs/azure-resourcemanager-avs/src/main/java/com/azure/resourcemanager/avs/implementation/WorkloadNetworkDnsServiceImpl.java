// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceInner;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import com.azure.resourcemanager.avs.models.DnsServiceStatusEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsService;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsServiceProvisioningState;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsServiceUpdate;
import java.util.Collections;
import java.util.List;

public final class WorkloadNetworkDnsServiceImpl
    implements WorkloadNetworkDnsService, WorkloadNetworkDnsService.Definition, WorkloadNetworkDnsService.Update {
    private WorkloadNetworkDnsServiceInner innerObject;

    private final com.azure.resourcemanager.avs.AvsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String dnsServiceIp() {
        return this.innerModel().dnsServiceIp();
    }

    public String defaultDnsZone() {
        return this.innerModel().defaultDnsZone();
    }

    public List<String> fqdnZones() {
        List<String> inner = this.innerModel().fqdnZones();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public DnsServiceLogLevelEnum logLevel() {
        return this.innerModel().logLevel();
    }

    public DnsServiceStatusEnum status() {
        return this.innerModel().status();
    }

    public WorkloadNetworkDnsServiceProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Long revision() {
        return this.innerModel().revision();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public WorkloadNetworkDnsServiceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.avs.AvsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String privateCloudName;

    private String dnsServiceId;

    private WorkloadNetworkDnsServiceUpdate updateWorkloadNetworkDnsService;

    public WorkloadNetworkDnsServiceImpl withExistingPrivateCloud(String resourceGroupName, String privateCloudName) {
        this.resourceGroupName = resourceGroupName;
        this.privateCloudName = privateCloudName;
        return this;
    }

    public WorkloadNetworkDnsService create() {
        this.innerObject = serviceManager.serviceClient()
            .getWorkloadNetworkDnsServices()
            .create(resourceGroupName, privateCloudName, dnsServiceId, this.innerModel(), Context.NONE);
        return this;
    }

    public WorkloadNetworkDnsService create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getWorkloadNetworkDnsServices()
            .create(resourceGroupName, privateCloudName, dnsServiceId, this.innerModel(), context);
        return this;
    }

    WorkloadNetworkDnsServiceImpl(String name, com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerObject = new WorkloadNetworkDnsServiceInner();
        this.serviceManager = serviceManager;
        this.dnsServiceId = name;
    }

    public WorkloadNetworkDnsServiceImpl update() {
        this.updateWorkloadNetworkDnsService = new WorkloadNetworkDnsServiceUpdate();
        return this;
    }

    public WorkloadNetworkDnsService apply() {
        this.innerObject = serviceManager.serviceClient()
            .getWorkloadNetworkDnsServices()
            .update(resourceGroupName, privateCloudName, dnsServiceId, updateWorkloadNetworkDnsService, Context.NONE);
        return this;
    }

    public WorkloadNetworkDnsService apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getWorkloadNetworkDnsServices()
            .update(resourceGroupName, privateCloudName, dnsServiceId, updateWorkloadNetworkDnsService, context);
        return this;
    }

    WorkloadNetworkDnsServiceImpl(WorkloadNetworkDnsServiceInner innerObject,
        com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.privateCloudName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "privateClouds");
        this.dnsServiceId = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "dnsServices");
    }

    public WorkloadNetworkDnsService refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getWorkloadNetworkDnsServices()
            .getWithResponse(resourceGroupName, privateCloudName, dnsServiceId, Context.NONE)
            .getValue();
        return this;
    }

    public WorkloadNetworkDnsService refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getWorkloadNetworkDnsServices()
            .getWithResponse(resourceGroupName, privateCloudName, dnsServiceId, context)
            .getValue();
        return this;
    }

    public WorkloadNetworkDnsServiceImpl withDisplayName(String displayName) {
        if (isInCreateMode()) {
            this.innerModel().withDisplayName(displayName);
            return this;
        } else {
            this.updateWorkloadNetworkDnsService.withDisplayName(displayName);
            return this;
        }
    }

    public WorkloadNetworkDnsServiceImpl withDnsServiceIp(String dnsServiceIp) {
        if (isInCreateMode()) {
            this.innerModel().withDnsServiceIp(dnsServiceIp);
            return this;
        } else {
            this.updateWorkloadNetworkDnsService.withDnsServiceIp(dnsServiceIp);
            return this;
        }
    }

    public WorkloadNetworkDnsServiceImpl withDefaultDnsZone(String defaultDnsZone) {
        if (isInCreateMode()) {
            this.innerModel().withDefaultDnsZone(defaultDnsZone);
            return this;
        } else {
            this.updateWorkloadNetworkDnsService.withDefaultDnsZone(defaultDnsZone);
            return this;
        }
    }

    public WorkloadNetworkDnsServiceImpl withFqdnZones(List<String> fqdnZones) {
        if (isInCreateMode()) {
            this.innerModel().withFqdnZones(fqdnZones);
            return this;
        } else {
            this.updateWorkloadNetworkDnsService.withFqdnZones(fqdnZones);
            return this;
        }
    }

    public WorkloadNetworkDnsServiceImpl withLogLevel(DnsServiceLogLevelEnum logLevel) {
        if (isInCreateMode()) {
            this.innerModel().withLogLevel(logLevel);
            return this;
        } else {
            this.updateWorkloadNetworkDnsService.withLogLevel(logLevel);
            return this;
        }
    }

    public WorkloadNetworkDnsServiceImpl withRevision(Long revision) {
        if (isInCreateMode()) {
            this.innerModel().withRevision(revision);
            return this;
        } else {
            this.updateWorkloadNetworkDnsService.withRevision(revision);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
