// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of WorkloadNetworkDnsZones.
 */
public interface WorkloadNetworkDnsZones {
    /**
     * List WorkloadNetworkDnsZone resources by WorkloadNetwork.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a WorkloadNetworkDnsZone list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WorkloadNetworkDnsZone> listByWorkloadNetwork(String resourceGroupName, String privateCloudName);

    /**
     * List WorkloadNetworkDnsZone resources by WorkloadNetwork.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a WorkloadNetworkDnsZone list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WorkloadNetworkDnsZone> listByWorkloadNetwork(String resourceGroupName, String privateCloudName,
        Context context);

    /**
     * Get a WorkloadNetworkDnsZone.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param dnsZoneId ID of the DNS zone.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a WorkloadNetworkDnsZone along with {@link Response}.
     */
    Response<WorkloadNetworkDnsZone> getWithResponse(String resourceGroupName, String privateCloudName,
        String dnsZoneId, Context context);

    /**
     * Get a WorkloadNetworkDnsZone.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud.
     * @param dnsZoneId ID of the DNS zone.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a WorkloadNetworkDnsZone.
     */
    WorkloadNetworkDnsZone get(String resourceGroupName, String privateCloudName, String dnsZoneId);

    /**
     * Delete a WorkloadNetworkDnsZone.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsZoneId ID of the DNS zone.
     * @param privateCloudName Name of the private cloud.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String dnsZoneId, String privateCloudName);

    /**
     * Delete a WorkloadNetworkDnsZone.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsZoneId ID of the DNS zone.
     * @param privateCloudName Name of the private cloud.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String dnsZoneId, String privateCloudName, Context context);

    /**
     * Get a WorkloadNetworkDnsZone.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a WorkloadNetworkDnsZone along with {@link Response}.
     */
    WorkloadNetworkDnsZone getById(String id);

    /**
     * Get a WorkloadNetworkDnsZone.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a WorkloadNetworkDnsZone along with {@link Response}.
     */
    Response<WorkloadNetworkDnsZone> getByIdWithResponse(String id, Context context);

    /**
     * Delete a WorkloadNetworkDnsZone.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a WorkloadNetworkDnsZone.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new WorkloadNetworkDnsZone resource.
     * 
     * @param name resource name.
     * @return the first stage of the new WorkloadNetworkDnsZone definition.
     */
    WorkloadNetworkDnsZone.DefinitionStages.Blank define(String name);
}
