/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.avs.v2020_03_20.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.avs.v2020_03_20.Locations;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.avs.v2020_03_20.Trial;
import com.microsoft.azure.management.avs.v2020_03_20.Quota;

class LocationsImpl extends WrapperImpl<LocationsInner> implements Locations {
    private final AVSManager manager;

    LocationsImpl(AVSManager manager) {
        super(manager.inner().locations());
        this.manager = manager;
    }

    public AVSManager manager() {
        return this.manager;
    }

    @Override
    public Observable<Trial> checkTrialAvailabilityAsync(String location) {
        LocationsInner client = this.inner();
        return client.checkTrialAvailabilityAsync(location)
        .map(new Func1<TrialInner, Trial>() {
            @Override
            public Trial call(TrialInner inner) {
                return new TrialImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<Quota> checkQuotaAvailabilityAsync(String location) {
        LocationsInner client = this.inner();
        return client.checkQuotaAvailabilityAsync(location)
        .map(new Func1<QuotaInner, Quota>() {
            @Override
            public Quota call(QuotaInner inner) {
                return new QuotaImpl(inner, manager());
            }
        });
    }

}
