/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.avs.v2020_03_20;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The properties of a default cluster.
 */
public class ManagementCluster extends ClusterUpdateProperties {
    /**
     * The state of the cluster provisioning. Possible values include:
     * 'Succeeded', 'Failed', 'Cancelled', 'Deleting', 'Updating'.
     */
    @JsonProperty(value = "provisioningState")
    private ClusterProvisioningState provisioningState;

    /**
     * The identity.
     */
    @JsonProperty(value = "clusterId", access = JsonProperty.Access.WRITE_ONLY)
    private Integer clusterId;

    /**
     * The hosts.
     */
    @JsonProperty(value = "hosts", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> hosts;

    /**
     * Get the state of the cluster provisioning. Possible values include: 'Succeeded', 'Failed', 'Cancelled', 'Deleting', 'Updating'.
     *
     * @return the provisioningState value
     */
    public ClusterProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the state of the cluster provisioning. Possible values include: 'Succeeded', 'Failed', 'Cancelled', 'Deleting', 'Updating'.
     *
     * @param provisioningState the provisioningState value to set
     * @return the ManagementCluster object itself.
     */
    public ManagementCluster withProvisioningState(ClusterProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the identity.
     *
     * @return the clusterId value
     */
    public Integer clusterId() {
        return this.clusterId;
    }

    /**
     * Get the hosts.
     *
     * @return the hosts value
     */
    public List<String> hosts() {
        return this.hosts;
    }

}
