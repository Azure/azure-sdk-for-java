/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.avs.v2020_07_17_preview.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * NSX Port Mirroring.
 */
@JsonFlatten
public class WorkloadNetworkPortMirroring extends ProxyResource {
    /**
     * Display name of the port mirroring profile.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /**
     * Direction of port mirroring profile. Possible values include: 'INGRESS,
     * EGRESS, BIDIRECTIONAL'.
     */
    @JsonProperty(value = "properties.direction")
    private PortMirroringDirectionEnum direction;

    /**
     * Source VM Group.
     */
    @JsonProperty(value = "properties.source")
    private String source;

    /**
     * Destination VM Group.
     */
    @JsonProperty(value = "properties.destination")
    private String destination;

    /**
     * Port Mirroring Status. Possible values include: 'SUCCESS, FAILURE'.
     */
    @JsonProperty(value = "properties.status", access = JsonProperty.Access.WRITE_ONLY)
    private PortMirroringStatusEnum status;

    /**
     * The provisioning state. Possible values include: 'Succeeded', 'Failed',
     * 'Building', 'Deleting', 'Updating'.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private WorkloadNetworkPortMirroringProvisioningState provisioningState;

    /**
     * NSX revision number.
     */
    @JsonProperty(value = "properties.revision")
    private Long revision;

    /**
     * Get display name of the port mirroring profile.
     *
     * @return the displayName value
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set display name of the port mirroring profile.
     *
     * @param displayName the displayName value to set
     * @return the WorkloadNetworkPortMirroring object itself.
     */
    public WorkloadNetworkPortMirroring withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get direction of port mirroring profile. Possible values include: 'INGRESS, EGRESS, BIDIRECTIONAL'.
     *
     * @return the direction value
     */
    public PortMirroringDirectionEnum direction() {
        return this.direction;
    }

    /**
     * Set direction of port mirroring profile. Possible values include: 'INGRESS, EGRESS, BIDIRECTIONAL'.
     *
     * @param direction the direction value to set
     * @return the WorkloadNetworkPortMirroring object itself.
     */
    public WorkloadNetworkPortMirroring withDirection(PortMirroringDirectionEnum direction) {
        this.direction = direction;
        return this;
    }

    /**
     * Get source VM Group.
     *
     * @return the source value
     */
    public String source() {
        return this.source;
    }

    /**
     * Set source VM Group.
     *
     * @param source the source value to set
     * @return the WorkloadNetworkPortMirroring object itself.
     */
    public WorkloadNetworkPortMirroring withSource(String source) {
        this.source = source;
        return this;
    }

    /**
     * Get destination VM Group.
     *
     * @return the destination value
     */
    public String destination() {
        return this.destination;
    }

    /**
     * Set destination VM Group.
     *
     * @param destination the destination value to set
     * @return the WorkloadNetworkPortMirroring object itself.
     */
    public WorkloadNetworkPortMirroring withDestination(String destination) {
        this.destination = destination;
        return this;
    }

    /**
     * Get port Mirroring Status. Possible values include: 'SUCCESS, FAILURE'.
     *
     * @return the status value
     */
    public PortMirroringStatusEnum status() {
        return this.status;
    }

    /**
     * Get the provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building', 'Deleting', 'Updating'.
     *
     * @return the provisioningState value
     */
    public WorkloadNetworkPortMirroringProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get nSX revision number.
     *
     * @return the revision value
     */
    public Long revision() {
        return this.revision;
    }

    /**
     * Set nSX revision number.
     *
     * @param revision the revision value to set
     * @return the WorkloadNetworkPortMirroring object itself.
     */
    public WorkloadNetworkPortMirroring withRevision(Long revision) {
        this.revision = revision;
        return this;
    }

}
