// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Position where the route error happened.
 */
@Fluent
public final class RouteErrorPosition implements JsonSerializable<RouteErrorPosition> {
    /*
     * Line where the route error happened
     */
    private Integer line;

    /*
     * Column where the route error happened
     */
    private Integer column;

    /**
     * Creates an instance of RouteErrorPosition class.
     */
    public RouteErrorPosition() {
    }

    /**
     * Get the line property: Line where the route error happened.
     * 
     * @return the line value.
     */
    public Integer line() {
        return this.line;
    }

    /**
     * Set the line property: Line where the route error happened.
     * 
     * @param line the line value to set.
     * @return the RouteErrorPosition object itself.
     */
    public RouteErrorPosition withLine(Integer line) {
        this.line = line;
        return this;
    }

    /**
     * Get the column property: Column where the route error happened.
     * 
     * @return the column value.
     */
    public Integer column() {
        return this.column;
    }

    /**
     * Set the column property: Column where the route error happened.
     * 
     * @param column the column value to set.
     * @return the RouteErrorPosition object itself.
     */
    public RouteErrorPosition withColumn(Integer column) {
        this.column = column;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("line", this.line);
        jsonWriter.writeNumberField("column", this.column);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RouteErrorPosition from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RouteErrorPosition if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the RouteErrorPosition.
     */
    public static RouteErrorPosition fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RouteErrorPosition deserializedRouteErrorPosition = new RouteErrorPosition();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("line".equals(fieldName)) {
                    deserializedRouteErrorPosition.line = reader.getNullable(JsonReader::getInt);
                } else if ("column".equals(fieldName)) {
                    deserializedRouteErrorPosition.column = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRouteErrorPosition;
        });
    }
}
