// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Routing message.
 */
@Fluent
public final class RoutingMessage implements JsonSerializable<RoutingMessage> {
    /*
     * Body of routing message
     */
    private String body;

    /*
     * App properties
     */
    private Map<String, String> appProperties;

    /*
     * System properties
     */
    private Map<String, String> systemProperties;

    /**
     * Creates an instance of RoutingMessage class.
     */
    public RoutingMessage() {
    }

    /**
     * Get the body property: Body of routing message.
     * 
     * @return the body value.
     */
    public String body() {
        return this.body;
    }

    /**
     * Set the body property: Body of routing message.
     * 
     * @param body the body value to set.
     * @return the RoutingMessage object itself.
     */
    public RoutingMessage withBody(String body) {
        this.body = body;
        return this;
    }

    /**
     * Get the appProperties property: App properties.
     * 
     * @return the appProperties value.
     */
    public Map<String, String> appProperties() {
        return this.appProperties;
    }

    /**
     * Set the appProperties property: App properties.
     * 
     * @param appProperties the appProperties value to set.
     * @return the RoutingMessage object itself.
     */
    public RoutingMessage withAppProperties(Map<String, String> appProperties) {
        this.appProperties = appProperties;
        return this;
    }

    /**
     * Get the systemProperties property: System properties.
     * 
     * @return the systemProperties value.
     */
    public Map<String, String> systemProperties() {
        return this.systemProperties;
    }

    /**
     * Set the systemProperties property: System properties.
     * 
     * @param systemProperties the systemProperties value to set.
     * @return the RoutingMessage object itself.
     */
    public RoutingMessage withSystemProperties(Map<String, String> systemProperties) {
        this.systemProperties = systemProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("body", this.body);
        jsonWriter.writeMapField("appProperties", this.appProperties, (writer, element) -> writer.writeString(element));
        jsonWriter.writeMapField("systemProperties", this.systemProperties,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RoutingMessage from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RoutingMessage if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the RoutingMessage.
     */
    public static RoutingMessage fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RoutingMessage deserializedRoutingMessage = new RoutingMessage();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("body".equals(fieldName)) {
                    deserializedRoutingMessage.body = reader.getString();
                } else if ("appProperties".equals(fieldName)) {
                    Map<String, String> appProperties = reader.readMap(reader1 -> reader1.getString());
                    deserializedRoutingMessage.appProperties = appProperties;
                } else if ("systemProperties".equals(fieldName)) {
                    Map<String, String> systemProperties = reader.readMap(reader1 -> reader1.getString());
                    deserializedRoutingMessage.systemProperties = systemProperties;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRoutingMessage;
        });
    }
}
