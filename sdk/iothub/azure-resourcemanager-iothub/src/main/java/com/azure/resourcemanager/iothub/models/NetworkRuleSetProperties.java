// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Network Rule Set Properties of IotHub.
 */
@Fluent
public final class NetworkRuleSetProperties implements JsonSerializable<NetworkRuleSetProperties> {
    /*
     * Default Action for Network Rule Set
     */
    private DefaultAction defaultAction;

    /*
     * If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub
     */
    private boolean applyToBuiltInEventHubEndpoint;

    /*
     * List of IP Rules
     */
    private List<NetworkRuleSetIpRule> ipRules;

    /**
     * Creates an instance of NetworkRuleSetProperties class.
     */
    public NetworkRuleSetProperties() {
    }

    /**
     * Get the defaultAction property: Default Action for Network Rule Set.
     * 
     * @return the defaultAction value.
     */
    public DefaultAction defaultAction() {
        return this.defaultAction;
    }

    /**
     * Set the defaultAction property: Default Action for Network Rule Set.
     * 
     * @param defaultAction the defaultAction value to set.
     * @return the NetworkRuleSetProperties object itself.
     */
    public NetworkRuleSetProperties withDefaultAction(DefaultAction defaultAction) {
        this.defaultAction = defaultAction;
        return this;
    }

    /**
     * Get the applyToBuiltInEventHubEndpoint property: If True, then Network Rule Set is also applied to BuiltIn
     * EventHub EndPoint of IotHub.
     * 
     * @return the applyToBuiltInEventHubEndpoint value.
     */
    public boolean applyToBuiltInEventHubEndpoint() {
        return this.applyToBuiltInEventHubEndpoint;
    }

    /**
     * Set the applyToBuiltInEventHubEndpoint property: If True, then Network Rule Set is also applied to BuiltIn
     * EventHub EndPoint of IotHub.
     * 
     * @param applyToBuiltInEventHubEndpoint the applyToBuiltInEventHubEndpoint value to set.
     * @return the NetworkRuleSetProperties object itself.
     */
    public NetworkRuleSetProperties withApplyToBuiltInEventHubEndpoint(boolean applyToBuiltInEventHubEndpoint) {
        this.applyToBuiltInEventHubEndpoint = applyToBuiltInEventHubEndpoint;
        return this;
    }

    /**
     * Get the ipRules property: List of IP Rules.
     * 
     * @return the ipRules value.
     */
    public List<NetworkRuleSetIpRule> ipRules() {
        return this.ipRules;
    }

    /**
     * Set the ipRules property: List of IP Rules.
     * 
     * @param ipRules the ipRules value to set.
     * @return the NetworkRuleSetProperties object itself.
     */
    public NetworkRuleSetProperties withIpRules(List<NetworkRuleSetIpRule> ipRules) {
        this.ipRules = ipRules;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (ipRules() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property ipRules in model NetworkRuleSetProperties"));
        } else {
            ipRules().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(NetworkRuleSetProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("applyToBuiltInEventHubEndpoint", this.applyToBuiltInEventHubEndpoint);
        jsonWriter.writeArrayField("ipRules", this.ipRules, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("defaultAction", this.defaultAction == null ? null : this.defaultAction.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NetworkRuleSetProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NetworkRuleSetProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the NetworkRuleSetProperties.
     */
    public static NetworkRuleSetProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NetworkRuleSetProperties deserializedNetworkRuleSetProperties = new NetworkRuleSetProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("applyToBuiltInEventHubEndpoint".equals(fieldName)) {
                    deserializedNetworkRuleSetProperties.applyToBuiltInEventHubEndpoint = reader.getBoolean();
                } else if ("ipRules".equals(fieldName)) {
                    List<NetworkRuleSetIpRule> ipRules
                        = reader.readArray(reader1 -> NetworkRuleSetIpRule.fromJson(reader1));
                    deserializedNetworkRuleSetProperties.ipRules = ipRules;
                } else if ("defaultAction".equals(fieldName)) {
                    deserializedNetworkRuleSetProperties.defaultAction = DefaultAction.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNetworkRuleSetProperties;
        });
    }
}
