// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Quota metrics properties.
 */
@Immutable
public final class IotHubQuotaMetricInfoInner implements JsonSerializable<IotHubQuotaMetricInfoInner> {
    /*
     * The name of the quota metric.
     */
    private String name;

    /*
     * The current value for the quota metric.
     */
    private Long currentValue;

    /*
     * The maximum value of the quota metric.
     */
    private Long maxValue;

    /**
     * Creates an instance of IotHubQuotaMetricInfoInner class.
     */
    public IotHubQuotaMetricInfoInner() {
    }

    /**
     * Get the name property: The name of the quota metric.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the currentValue property: The current value for the quota metric.
     * 
     * @return the currentValue value.
     */
    public Long currentValue() {
        return this.currentValue;
    }

    /**
     * Get the maxValue property: The maximum value of the quota metric.
     * 
     * @return the maxValue value.
     */
    public Long maxValue() {
        return this.maxValue;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IotHubQuotaMetricInfoInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IotHubQuotaMetricInfoInner if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the IotHubQuotaMetricInfoInner.
     */
    public static IotHubQuotaMetricInfoInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IotHubQuotaMetricInfoInner deserializedIotHubQuotaMetricInfoInner = new IotHubQuotaMetricInfoInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedIotHubQuotaMetricInfoInner.name = reader.getString();
                } else if ("currentValue".equals(fieldName)) {
                    deserializedIotHubQuotaMetricInfoInner.currentValue = reader.getNullable(JsonReader::getLong);
                } else if ("maxValue".equals(fieldName)) {
                    deserializedIotHubQuotaMetricInfoInner.maxValue = reader.getNullable(JsonReader::getLong);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIotHubQuotaMetricInfoInner;
        });
    }
}
