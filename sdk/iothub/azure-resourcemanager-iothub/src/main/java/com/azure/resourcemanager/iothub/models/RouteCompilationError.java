// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Compilation error when evaluating route.
 */
@Fluent
public final class RouteCompilationError implements JsonSerializable<RouteCompilationError> {
    /*
     * Route error message
     */
    private String message;

    /*
     * Severity of the route error
     */
    private RouteErrorSeverity severity;

    /*
     * Location where the route error happened
     */
    private RouteErrorRange location;

    /**
     * Creates an instance of RouteCompilationError class.
     */
    public RouteCompilationError() {
    }

    /**
     * Get the message property: Route error message.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: Route error message.
     * 
     * @param message the message value to set.
     * @return the RouteCompilationError object itself.
     */
    public RouteCompilationError withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the severity property: Severity of the route error.
     * 
     * @return the severity value.
     */
    public RouteErrorSeverity severity() {
        return this.severity;
    }

    /**
     * Set the severity property: Severity of the route error.
     * 
     * @param severity the severity value to set.
     * @return the RouteCompilationError object itself.
     */
    public RouteCompilationError withSeverity(RouteErrorSeverity severity) {
        this.severity = severity;
        return this;
    }

    /**
     * Get the location property: Location where the route error happened.
     * 
     * @return the location value.
     */
    public RouteErrorRange location() {
        return this.location;
    }

    /**
     * Set the location property: Location where the route error happened.
     * 
     * @param location the location value to set.
     * @return the RouteCompilationError object itself.
     */
    public RouteCompilationError withLocation(RouteErrorRange location) {
        this.location = location;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (location() != null) {
            location().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("message", this.message);
        jsonWriter.writeStringField("severity", this.severity == null ? null : this.severity.toString());
        jsonWriter.writeJsonField("location", this.location);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RouteCompilationError from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RouteCompilationError if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RouteCompilationError.
     */
    public static RouteCompilationError fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RouteCompilationError deserializedRouteCompilationError = new RouteCompilationError();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("message".equals(fieldName)) {
                    deserializedRouteCompilationError.message = reader.getString();
                } else if ("severity".equals(fieldName)) {
                    deserializedRouteCompilationError.severity = RouteErrorSeverity.fromString(reader.getString());
                } else if ("location".equals(fieldName)) {
                    deserializedRouteCompilationError.location = RouteErrorRange.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRouteCompilationError;
        });
    }
}
