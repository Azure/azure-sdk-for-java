// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.AuthenticationType;
import com.azure.resourcemanager.iothub.models.ManagedIdentity;
import com.azure.resourcemanager.iothub.models.RoutingCosmosDBSqlApiProperties;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class RoutingCosmosDBSqlApiPropertiesTests {
    @Test
    public void testDeserialize() {
        RoutingCosmosDBSqlApiProperties model =
            BinaryData
                .fromString(
                    "{\"name\":\"mwabnetshhszhedp\",\"id\":\"wiwubm\",\"subscriptionId\":\"besldnkwwtppjflc\",\"resourceGroup\":\"gaokonzmnsikv\",\"endpointUri\":\"kqze\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"tfz\"},\"primaryKey\":\"hhvh\",\"secondaryKey\":\"r\",\"databaseName\":\"odkwobd\",\"collectionName\":\"gxtibqdxbxw\",\"partitionKeyName\":\"bogqxndlkzgxhu\",\"partitionKeyTemplate\":\"plbpodxun\"}")
                .toObject(RoutingCosmosDBSqlApiProperties.class);
        Assertions.assertEquals("mwabnetshhszhedp", model.name());
        Assertions.assertEquals("wiwubm", model.id());
        Assertions.assertEquals("besldnkwwtppjflc", model.subscriptionId());
        Assertions.assertEquals("gaokonzmnsikv", model.resourceGroup());
        Assertions.assertEquals("kqze", model.endpointUri());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("tfz", model.identity().userAssignedIdentity());
        Assertions.assertEquals("hhvh", model.primaryKey());
        Assertions.assertEquals("r", model.secondaryKey());
        Assertions.assertEquals("odkwobd", model.databaseName());
        Assertions.assertEquals("gxtibqdxbxw", model.collectionName());
        Assertions.assertEquals("bogqxndlkzgxhu", model.partitionKeyName());
        Assertions.assertEquals("plbpodxun", model.partitionKeyTemplate());
    }

    @Test
    public void testSerialize() {
        RoutingCosmosDBSqlApiProperties model =
            new RoutingCosmosDBSqlApiProperties()
                .withName("mwabnetshhszhedp")
                .withId("wiwubm")
                .withSubscriptionId("besldnkwwtppjflc")
                .withResourceGroup("gaokonzmnsikv")
                .withEndpointUri("kqze")
                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("tfz"))
                .withPrimaryKey("hhvh")
                .withSecondaryKey("r")
                .withDatabaseName("odkwobd")
                .withCollectionName("gxtibqdxbxw")
                .withPartitionKeyName("bogqxndlkzgxhu")
                .withPartitionKeyTemplate("plbpodxun");
        model = BinaryData.fromObject(model).toObject(RoutingCosmosDBSqlApiProperties.class);
        Assertions.assertEquals("mwabnetshhszhedp", model.name());
        Assertions.assertEquals("wiwubm", model.id());
        Assertions.assertEquals("besldnkwwtppjflc", model.subscriptionId());
        Assertions.assertEquals("gaokonzmnsikv", model.resourceGroup());
        Assertions.assertEquals("kqze", model.endpointUri());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("tfz", model.identity().userAssignedIdentity());
        Assertions.assertEquals("hhvh", model.primaryKey());
        Assertions.assertEquals("r", model.secondaryKey());
        Assertions.assertEquals("odkwobd", model.databaseName());
        Assertions.assertEquals("gxtibqdxbxw", model.collectionName());
        Assertions.assertEquals("bogqxndlkzgxhu", model.partitionKeyName());
        Assertions.assertEquals("plbpodxun", model.partitionKeyTemplate());
    }
}
