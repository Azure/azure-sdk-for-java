// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.AuthenticationType;
import com.azure.resourcemanager.iothub.models.ExportDevicesRequest;
import com.azure.resourcemanager.iothub.models.ManagedIdentity;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ExportDevicesRequestTests {
    @Test
    public void testDeserialize() {
        ExportDevicesRequest model =
            BinaryData
                .fromString(
                    "{\"exportBlobContainerUri\":\"jq\",\"excludeKeys\":false,\"exportBlobName\":\"gzpfrla\",\"authenticationType\":\"keyBased\",\"identity\":{\"userAssignedIdentity\":\"woiindf\"},\"includeConfigurations\":false,\"configurationsBlobName\":\"ylwbtlhflsjcdhsz\"}")
                .toObject(ExportDevicesRequest.class);
        Assertions.assertEquals("jq", model.exportBlobContainerUri());
        Assertions.assertEquals(false, model.excludeKeys());
        Assertions.assertEquals("gzpfrla", model.exportBlobName());
        Assertions.assertEquals(AuthenticationType.KEY_BASED, model.authenticationType());
        Assertions.assertEquals("woiindf", model.identity().userAssignedIdentity());
        Assertions.assertEquals(false, model.includeConfigurations());
        Assertions.assertEquals("ylwbtlhflsjcdhsz", model.configurationsBlobName());
    }

    @Test
    public void testSerialize() {
        ExportDevicesRequest model =
            new ExportDevicesRequest()
                .withExportBlobContainerUri("jq")
                .withExcludeKeys(false)
                .withExportBlobName("gzpfrla")
                .withAuthenticationType(AuthenticationType.KEY_BASED)
                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("woiindf"))
                .withIncludeConfigurations(false)
                .withConfigurationsBlobName("ylwbtlhflsjcdhsz");
        model = BinaryData.fromObject(model).toObject(ExportDevicesRequest.class);
        Assertions.assertEquals("jq", model.exportBlobContainerUri());
        Assertions.assertEquals(false, model.excludeKeys());
        Assertions.assertEquals("gzpfrla", model.exportBlobName());
        Assertions.assertEquals(AuthenticationType.KEY_BASED, model.authenticationType());
        Assertions.assertEquals("woiindf", model.identity().userAssignedIdentity());
        Assertions.assertEquals(false, model.includeConfigurations());
        Assertions.assertEquals("ylwbtlhflsjcdhsz", model.configurationsBlobName());
    }
}
