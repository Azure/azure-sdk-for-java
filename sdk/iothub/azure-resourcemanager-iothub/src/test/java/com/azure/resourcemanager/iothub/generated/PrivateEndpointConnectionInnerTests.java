// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.iothub.models.PrivateEndpoint;
import com.azure.resourcemanager.iothub.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.iothub.models.PrivateLinkServiceConnectionState;
import com.azure.resourcemanager.iothub.models.PrivateLinkServiceConnectionStatus;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PrivateEndpointConnectionInnerTests {
    @Test
    public void testDeserialize() {
        PrivateEndpointConnectionInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"privateEndpoint\":{\"id\":\"xazjpqyegual\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"xxhejjzzvd\",\"actionsRequired\":\"gwdslfhotwm\"}},\"id\":\"ynpwlbj\",\"name\":\"pgacftadehxnlty\",\"type\":\"sop\"}")
                .toObject(PrivateEndpointConnectionInner.class);
        Assertions
            .assertEquals(
                PrivateLinkServiceConnectionStatus.PENDING,
                model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("xxhejjzzvd", model.properties().privateLinkServiceConnectionState().description());
        Assertions
            .assertEquals("gwdslfhotwm", model.properties().privateLinkServiceConnectionState().actionsRequired());
    }

    @Test
    public void testSerialize() {
        PrivateEndpointConnectionInner model =
            new PrivateEndpointConnectionInner()
                .withProperties(
                    new PrivateEndpointConnectionProperties()
                        .withPrivateEndpoint(new PrivateEndpoint())
                        .withPrivateLinkServiceConnectionState(
                            new PrivateLinkServiceConnectionState()
                                .withStatus(PrivateLinkServiceConnectionStatus.PENDING)
                                .withDescription("xxhejjzzvd")
                                .withActionsRequired("gwdslfhotwm")));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionInner.class);
        Assertions
            .assertEquals(
                PrivateLinkServiceConnectionStatus.PENDING,
                model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("xxhejjzzvd", model.properties().privateLinkServiceConnectionState().description());
        Assertions
            .assertEquals("gwdslfhotwm", model.properties().privateLinkServiceConnectionState().actionsRequired());
    }
}
