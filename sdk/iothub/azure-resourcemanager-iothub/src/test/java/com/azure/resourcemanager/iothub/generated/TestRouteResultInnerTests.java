// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.TestRouteResultInner;
import com.azure.resourcemanager.iothub.models.RouteCompilationError;
import com.azure.resourcemanager.iothub.models.RouteErrorPosition;
import com.azure.resourcemanager.iothub.models.RouteErrorRange;
import com.azure.resourcemanager.iothub.models.RouteErrorSeverity;
import com.azure.resourcemanager.iothub.models.TestResultStatus;
import com.azure.resourcemanager.iothub.models.TestRouteResultDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TestRouteResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TestRouteResultInner model =
            BinaryData
                .fromString(
                    "{\"result\":\"true\",\"details\":{\"compilationErrors\":[{\"message\":\"wyhrfouyftaakc\",\"severity\":\"warning\",\"location\":{\"start\":{\"line\":842537299,\"column\":1679264198},\"end\":{\"line\":1283701188,\"column\":661760953}}}]}}")
                .toObject(TestRouteResultInner.class);
        Assertions.assertEquals(TestResultStatus.TRUE, model.result());
        Assertions.assertEquals("wyhrfouyftaakc", model.details().compilationErrors().get(0).message());
        Assertions.assertEquals(RouteErrorSeverity.WARNING, model.details().compilationErrors().get(0).severity());
        Assertions.assertEquals(842537299, model.details().compilationErrors().get(0).location().start().line());
        Assertions.assertEquals(1679264198, model.details().compilationErrors().get(0).location().start().column());
        Assertions.assertEquals(1283701188, model.details().compilationErrors().get(0).location().end().line());
        Assertions.assertEquals(661760953, model.details().compilationErrors().get(0).location().end().column());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TestRouteResultInner model =
            new TestRouteResultInner()
                .withResult(TestResultStatus.TRUE)
                .withDetails(
                    new TestRouteResultDetails()
                        .withCompilationErrors(
                            Arrays
                                .asList(
                                    new RouteCompilationError()
                                        .withMessage("wyhrfouyftaakc")
                                        .withSeverity(RouteErrorSeverity.WARNING)
                                        .withLocation(
                                            new RouteErrorRange()
                                                .withStart(
                                                    new RouteErrorPosition().withLine(842537299).withColumn(1679264198))
                                                .withEnd(
                                                    new RouteErrorPosition()
                                                        .withLine(1283701188)
                                                        .withColumn(661760953))))));
        model = BinaryData.fromObject(model).toObject(TestRouteResultInner.class);
        Assertions.assertEquals(TestResultStatus.TRUE, model.result());
        Assertions.assertEquals("wyhrfouyftaakc", model.details().compilationErrors().get(0).message());
        Assertions.assertEquals(RouteErrorSeverity.WARNING, model.details().compilationErrors().get(0).severity());
        Assertions.assertEquals(842537299, model.details().compilationErrors().get(0).location().start().line());
        Assertions.assertEquals(1679264198, model.details().compilationErrors().get(0).location().start().column());
        Assertions.assertEquals(1283701188, model.details().compilationErrors().get(0).location().end().line());
        Assertions.assertEquals(661760953, model.details().compilationErrors().get(0).location().end().column());
    }
}
