// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.AuthenticationType;
import com.azure.resourcemanager.iothub.models.ManagedIdentity;
import com.azure.resourcemanager.iothub.models.RoutingStorageContainerProperties;
import com.azure.resourcemanager.iothub.models.RoutingStorageContainerPropertiesEncoding;
import org.junit.jupiter.api.Assertions;

public final class RoutingStorageContainerPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RoutingStorageContainerProperties model =
            BinaryData
                .fromString(
                    "{\"id\":\"wutttxfvjrbi\",\"connectionString\":\"hxepcyvahfnlj\",\"endpointUri\":\"qxj\",\"authenticationType\":\"keyBased\",\"identity\":{\"userAssignedIdentity\":\"gidokgjljyoxgvcl\"},\"name\":\"bgsncghkjeszzhb\",\"subscriptionId\":\"htxfvgxbfsmxnehm\",\"resourceGroup\":\"ec\",\"containerName\":\"godebfqkkrbmpu\",\"fileNameFormat\":\"riwflzlfb\",\"batchFrequencyInSeconds\":599393599,\"maxChunkSizeInBytes\":1728715445,\"encoding\":\"JSON\"}")
                .toObject(RoutingStorageContainerProperties.class);
        Assertions.assertEquals("wutttxfvjrbi", model.id());
        Assertions.assertEquals("hxepcyvahfnlj", model.connectionString());
        Assertions.assertEquals("qxj", model.endpointUri());
        Assertions.assertEquals(AuthenticationType.KEY_BASED, model.authenticationType());
        Assertions.assertEquals("gidokgjljyoxgvcl", model.identity().userAssignedIdentity());
        Assertions.assertEquals("bgsncghkjeszzhb", model.name());
        Assertions.assertEquals("htxfvgxbfsmxnehm", model.subscriptionId());
        Assertions.assertEquals("ec", model.resourceGroup());
        Assertions.assertEquals("godebfqkkrbmpu", model.containerName());
        Assertions.assertEquals("riwflzlfb", model.fileNameFormat());
        Assertions.assertEquals(599393599, model.batchFrequencyInSeconds());
        Assertions.assertEquals(1728715445, model.maxChunkSizeInBytes());
        Assertions.assertEquals(RoutingStorageContainerPropertiesEncoding.JSON, model.encoding());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RoutingStorageContainerProperties model =
            new RoutingStorageContainerProperties()
                .withId("wutttxfvjrbi")
                .withConnectionString("hxepcyvahfnlj")
                .withEndpointUri("qxj")
                .withAuthenticationType(AuthenticationType.KEY_BASED)
                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("gidokgjljyoxgvcl"))
                .withName("bgsncghkjeszzhb")
                .withSubscriptionId("htxfvgxbfsmxnehm")
                .withResourceGroup("ec")
                .withContainerName("godebfqkkrbmpu")
                .withFileNameFormat("riwflzlfb")
                .withBatchFrequencyInSeconds(599393599)
                .withMaxChunkSizeInBytes(1728715445)
                .withEncoding(RoutingStorageContainerPropertiesEncoding.JSON);
        model = BinaryData.fromObject(model).toObject(RoutingStorageContainerProperties.class);
        Assertions.assertEquals("wutttxfvjrbi", model.id());
        Assertions.assertEquals("hxepcyvahfnlj", model.connectionString());
        Assertions.assertEquals("qxj", model.endpointUri());
        Assertions.assertEquals(AuthenticationType.KEY_BASED, model.authenticationType());
        Assertions.assertEquals("gidokgjljyoxgvcl", model.identity().userAssignedIdentity());
        Assertions.assertEquals("bgsncghkjeszzhb", model.name());
        Assertions.assertEquals("htxfvgxbfsmxnehm", model.subscriptionId());
        Assertions.assertEquals("ec", model.resourceGroup());
        Assertions.assertEquals("godebfqkkrbmpu", model.containerName());
        Assertions.assertEquals("riwflzlfb", model.fileNameFormat());
        Assertions.assertEquals(599393599, model.batchFrequencyInSeconds());
        Assertions.assertEquals(1728715445, model.maxChunkSizeInBytes());
        Assertions.assertEquals(RoutingStorageContainerPropertiesEncoding.JSON, model.encoding());
    }
}
