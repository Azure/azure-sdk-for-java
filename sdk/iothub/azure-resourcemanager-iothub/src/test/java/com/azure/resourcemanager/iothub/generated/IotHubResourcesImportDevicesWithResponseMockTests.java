// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iothub.IotHubManager;
import com.azure.resourcemanager.iothub.models.AuthenticationType;
import com.azure.resourcemanager.iothub.models.ImportDevicesRequest;
import com.azure.resourcemanager.iothub.models.JobResponse;
import com.azure.resourcemanager.iothub.models.ManagedIdentity;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotHubResourcesImportDevicesWithResponseMockTests {
    @Test
    public void testImportDevicesWithResponse() throws Exception {
        String responseStr
            = "{\"jobId\":\"kj\",\"startTimeUtc\":\"Mon, 15 Nov 2021 06:41:50 GMT\",\"endTimeUtc\":\"Tue, 13 Jul 2021 23:55:09 GMT\",\"type\":\"factoryResetDevice\",\"status\":\"running\",\"failureReason\":\"inrvgoupmfi\",\"statusMessage\":\"fggjioolvr\",\"parentJobId\":\"kvtkkg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IotHubManager manager = IotHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        JobResponse response = manager.iotHubResources()
            .importDevicesWithResponse("bopgxedkowepbqp", "rfkbwccsnjvcdwxl",
                new ImportDevicesRequest().withInputBlobContainerUri("qek")
                    .withOutputBlobContainerUri("tn")
                    .withInputBlobName("tjsyin")
                    .withOutputBlobName("fq")
                    .withAuthenticationType(AuthenticationType.KEY_BASED)
                    .withIdentity(new ManagedIdentity().withUserAssignedIdentity("htmdvy"))
                    .withIncludeConfigurations(true)
                    .withConfigurationsBlobName("dgszywkbirryuzh"),
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
