// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iothub.IotHubManager;
import com.azure.resourcemanager.iothub.models.CertificateDescription;
import com.azure.resourcemanager.iothub.models.CertificateVerificationDescription;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CertificatesVerifyWithResponseMockTests {
    @Test
    public void testVerifyWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"subject\":\"mvzzbtdcqvp\",\"expiry\":\"Thu, 01 Apr 2021 22:39:22 GMT\",\"thumbprint\":\"jviylwdshfs\",\"isVerified\":false,\"created\":\"Fri, 15 Oct 2021 12:19:25 GMT\",\"updated\":\"Mon, 09 Aug 2021 21:16:26 GMT\",\"certificate\":\"rymsgaojfmw\",\"policyResourceId\":\"otmrfhir\"},\"etag\":\"ymoxoftpipiwyczu\",\"id\":\"xacpqjli\",\"name\":\"hyus\",\"type\":\"skasdvlmfwdgzxu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IotHubManager manager = IotHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CertificateDescription response = manager.certificates()
            .verifyWithResponse("ghhavgrvkffo", "jzhpjbibgjmfx", "mv", "cluyovwxnbkf",
                new CertificateVerificationDescription().withCertificate("zxscyhwzdgirujb"),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertFalse(response.properties().isVerified());
        Assertions.assertEquals("rymsgaojfmw", response.properties().certificate());
        Assertions.assertEquals("otmrfhir", response.properties().policyResourceId());
    }
}
