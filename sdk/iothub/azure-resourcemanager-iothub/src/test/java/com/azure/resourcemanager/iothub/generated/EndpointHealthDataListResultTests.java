// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.EndpointHealthDataInner;
import com.azure.resourcemanager.iothub.models.EndpointHealthDataListResult;
import com.azure.resourcemanager.iothub.models.EndpointHealthStatus;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EndpointHealthDataListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EndpointHealthDataListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"endpointId\":\"tfdygpfqb\",\"healthStatus\":\"unhealthy\",\"lastKnownError\":\"op\",\"lastKnownErrorTime\":\"Thu,"
                        + " 15 Apr 2021 23:44:21 GMT\",\"lastSuccessfulSendAttemptTime\":\"Mon, 11 Oct 2021 15:02:03"
                        + " GMT\",\"lastSendAttemptTime\":\"Mon, 29 Mar 2021 02:40:43"
                        + " GMT\"},{\"endpointId\":\"opppcqeq\",\"healthStatus\":\"healthy\",\"lastKnownError\":\"dahzxctobg\",\"lastKnownErrorTime\":\"Wed,"
                        + " 01 Sep 2021 00:32:36 GMT\",\"lastSuccessfulSendAttemptTime\":\"Tue, 02 Mar 2021 22:54:24"
                        + " GMT\",\"lastSendAttemptTime\":\"Fri, 29 Jan 2021 19:09:38"
                        + " GMT\"}],\"nextLink\":\"ostmgrcf\"}")
                .toObject(EndpointHealthDataListResult.class);
        Assertions.assertEquals("tfdygpfqb", model.value().get(0).endpointId());
        Assertions.assertEquals(EndpointHealthStatus.UNHEALTHY, model.value().get(0).healthStatus());
        Assertions.assertEquals("op", model.value().get(0).lastKnownError());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-04-15T23:44:21Z"), model.value().get(0).lastKnownErrorTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-10-11T15:02:03Z"), model.value().get(0).lastSuccessfulSendAttemptTime());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-03-29T02:40:43Z"), model.value().get(0).lastSendAttemptTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EndpointHealthDataListResult model =
            new EndpointHealthDataListResult()
                .withValue(
                    Arrays
                        .asList(
                            new EndpointHealthDataInner()
                                .withEndpointId("tfdygpfqb")
                                .withHealthStatus(EndpointHealthStatus.UNHEALTHY)
                                .withLastKnownError("op")
                                .withLastKnownErrorTime(OffsetDateTime.parse("2021-04-15T23:44:21Z"))
                                .withLastSuccessfulSendAttemptTime(OffsetDateTime.parse("2021-10-11T15:02:03Z"))
                                .withLastSendAttemptTime(OffsetDateTime.parse("2021-03-29T02:40:43Z")),
                            new EndpointHealthDataInner()
                                .withEndpointId("opppcqeq")
                                .withHealthStatus(EndpointHealthStatus.HEALTHY)
                                .withLastKnownError("dahzxctobg")
                                .withLastKnownErrorTime(OffsetDateTime.parse("2021-09-01T00:32:36Z"))
                                .withLastSuccessfulSendAttemptTime(OffsetDateTime.parse("2021-03-02T22:54:24Z"))
                                .withLastSendAttemptTime(OffsetDateTime.parse("2021-01-29T19:09:38Z"))));
        model = BinaryData.fromObject(model).toObject(EndpointHealthDataListResult.class);
        Assertions.assertEquals("tfdygpfqb", model.value().get(0).endpointId());
        Assertions.assertEquals(EndpointHealthStatus.UNHEALTHY, model.value().get(0).healthStatus());
        Assertions.assertEquals("op", model.value().get(0).lastKnownError());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-04-15T23:44:21Z"), model.value().get(0).lastKnownErrorTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-10-11T15:02:03Z"), model.value().get(0).lastSuccessfulSendAttemptTime());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-03-29T02:40:43Z"), model.value().get(0).lastSendAttemptTime());
    }
}
