// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.RouteProperties;
import com.azure.resourcemanager.iothub.models.RoutingSource;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RoutePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RouteProperties model =
            BinaryData
                .fromString(
                    "{\"name\":\"dbhrbnlankxm\",\"source\":\"TwinChangeEvents\",\"condition\":\"pbh\",\"endpointNames\":[\"btkcxywnytnrsyn\",\"qidybyx\",\"zfcl\",\"aaxdbabphlwrq\"],\"isEnabled\":false}")
                .toObject(RouteProperties.class);
        Assertions.assertEquals("dbhrbnlankxm", model.name());
        Assertions.assertEquals(RoutingSource.TWIN_CHANGE_EVENTS, model.source());
        Assertions.assertEquals("pbh", model.condition());
        Assertions.assertEquals("btkcxywnytnrsyn", model.endpointNames().get(0));
        Assertions.assertEquals(false, model.isEnabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RouteProperties model =
            new RouteProperties()
                .withName("dbhrbnlankxm")
                .withSource(RoutingSource.TWIN_CHANGE_EVENTS)
                .withCondition("pbh")
                .withEndpointNames(Arrays.asList("btkcxywnytnrsyn", "qidybyx", "zfcl", "aaxdbabphlwrq"))
                .withIsEnabled(false);
        model = BinaryData.fromObject(model).toObject(RouteProperties.class);
        Assertions.assertEquals("dbhrbnlankxm", model.name());
        Assertions.assertEquals(RoutingSource.TWIN_CHANGE_EVENTS, model.source());
        Assertions.assertEquals("pbh", model.condition());
        Assertions.assertEquals("btkcxywnytnrsyn", model.endpointNames().get(0));
        Assertions.assertEquals(false, model.isEnabled());
    }
}
