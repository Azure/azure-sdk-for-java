// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.Name;
import com.azure.resourcemanager.iothub.models.UserSubscriptionQuota;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class UserSubscriptionQuotaTests {
    @Test
    public void testDeserialize() {
        UserSubscriptionQuota model =
            BinaryData
                .fromString(
                    "{\"id\":\"l\",\"type\":\"ab\",\"unit\":\"oefki\",\"currentValue\":841009999,\"limit\":1599154818,\"name\":{\"value\":\"ujmqlgkfbtndoa\",\"localizedValue\":\"gbjcntujitcjed\"}}")
                .toObject(UserSubscriptionQuota.class);
        Assertions.assertEquals("l", model.id());
        Assertions.assertEquals("ab", model.type());
        Assertions.assertEquals("oefki", model.unit());
        Assertions.assertEquals(841009999, model.currentValue());
        Assertions.assertEquals(1599154818, model.limit());
        Assertions.assertEquals("ujmqlgkfbtndoa", model.name().value());
        Assertions.assertEquals("gbjcntujitcjed", model.name().localizedValue());
    }

    @Test
    public void testSerialize() {
        UserSubscriptionQuota model =
            new UserSubscriptionQuota()
                .withId("l")
                .withType("ab")
                .withUnit("oefki")
                .withCurrentValue(841009999)
                .withLimit(1599154818)
                .withName(new Name().withValue("ujmqlgkfbtndoa").withLocalizedValue("gbjcntujitcjed"));
        model = BinaryData.fromObject(model).toObject(UserSubscriptionQuota.class);
        Assertions.assertEquals("l", model.id());
        Assertions.assertEquals("ab", model.type());
        Assertions.assertEquals("oefki", model.unit());
        Assertions.assertEquals(841009999, model.currentValue());
        Assertions.assertEquals(1599154818, model.limit());
        Assertions.assertEquals("ujmqlgkfbtndoa", model.name().value());
        Assertions.assertEquals("gbjcntujitcjed", model.name().localizedValue());
    }
}
