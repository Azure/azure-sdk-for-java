// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.Name;
import com.azure.resourcemanager.iothub.models.UserSubscriptionQuota;
import org.junit.jupiter.api.Assertions;

public final class UserSubscriptionQuotaTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UserSubscriptionQuota model =
            BinaryData
                .fromString(
                    "{\"id\":\"vetvt\",\"type\":\"aqtdoqmcbx\",\"unit\":\"vxysl\",\"currentValue\":675840078,\"limit\":92665469,\"name\":{\"value\":\"blytk\",\"localizedValue\":\"mpew\"}}")
                .toObject(UserSubscriptionQuota.class);
        Assertions.assertEquals("vetvt", model.id());
        Assertions.assertEquals("aqtdoqmcbx", model.type());
        Assertions.assertEquals("vxysl", model.unit());
        Assertions.assertEquals(675840078, model.currentValue());
        Assertions.assertEquals(92665469, model.limit());
        Assertions.assertEquals("blytk", model.name().value());
        Assertions.assertEquals("mpew", model.name().localizedValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UserSubscriptionQuota model =
            new UserSubscriptionQuota()
                .withId("vetvt")
                .withType("aqtdoqmcbx")
                .withUnit("vxysl")
                .withCurrentValue(675840078)
                .withLimit(92665469)
                .withName(new Name().withValue("blytk").withLocalizedValue("mpew"));
        model = BinaryData.fromObject(model).toObject(UserSubscriptionQuota.class);
        Assertions.assertEquals("vetvt", model.id());
        Assertions.assertEquals("aqtdoqmcbx", model.type());
        Assertions.assertEquals("vxysl", model.unit());
        Assertions.assertEquals(675840078, model.currentValue());
        Assertions.assertEquals(92665469, model.limit());
        Assertions.assertEquals("blytk", model.name().value());
        Assertions.assertEquals("mpew", model.name().localizedValue());
    }
}
