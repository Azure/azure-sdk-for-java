// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.Name;
import com.azure.resourcemanager.iothub.models.UserSubscriptionQuota;
import org.junit.jupiter.api.Assertions;

public final class UserSubscriptionQuotaTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UserSubscriptionQuota model =
            BinaryData
                .fromString(
                    "{\"id\":\"ewgdrjervn\",\"type\":\"nqpeh\",\"unit\":\"doy\",\"currentValue\":1553722584,\"limit\":1126761283,\"name\":{\"value\":\"zdnds\",\"localizedValue\":\"nayqi\"}}")
                .toObject(UserSubscriptionQuota.class);
        Assertions.assertEquals("ewgdrjervn", model.id());
        Assertions.assertEquals("nqpeh", model.type());
        Assertions.assertEquals("doy", model.unit());
        Assertions.assertEquals(1553722584, model.currentValue());
        Assertions.assertEquals(1126761283, model.limit());
        Assertions.assertEquals("zdnds", model.name().value());
        Assertions.assertEquals("nayqi", model.name().localizedValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UserSubscriptionQuota model =
            new UserSubscriptionQuota()
                .withId("ewgdrjervn")
                .withType("nqpeh")
                .withUnit("doy")
                .withCurrentValue(1553722584)
                .withLimit(1126761283)
                .withName(new Name().withValue("zdnds").withLocalizedValue("nayqi"));
        model = BinaryData.fromObject(model).toObject(UserSubscriptionQuota.class);
        Assertions.assertEquals("ewgdrjervn", model.id());
        Assertions.assertEquals("nqpeh", model.type());
        Assertions.assertEquals("doy", model.unit());
        Assertions.assertEquals(1553722584, model.currentValue());
        Assertions.assertEquals(1126761283, model.limit());
        Assertions.assertEquals("zdnds", model.name().value());
        Assertions.assertEquals("nayqi", model.name().localizedValue());
    }
}
