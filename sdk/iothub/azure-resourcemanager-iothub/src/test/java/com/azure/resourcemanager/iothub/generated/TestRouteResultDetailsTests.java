// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.RouteCompilationError;
import com.azure.resourcemanager.iothub.models.RouteErrorPosition;
import com.azure.resourcemanager.iothub.models.RouteErrorRange;
import com.azure.resourcemanager.iothub.models.RouteErrorSeverity;
import com.azure.resourcemanager.iothub.models.TestRouteResultDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TestRouteResultDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TestRouteResultDetails model =
            BinaryData
                .fromString(
                    "{\"compilationErrors\":[{\"message\":\"ksmond\",\"severity\":\"warning\",\"location\":{\"start\":{\"line\":882489574,\"column\":336917419},\"end\":{\"line\":1838860649,\"column\":11863753}}}]}")
                .toObject(TestRouteResultDetails.class);
        Assertions.assertEquals("ksmond", model.compilationErrors().get(0).message());
        Assertions.assertEquals(RouteErrorSeverity.WARNING, model.compilationErrors().get(0).severity());
        Assertions.assertEquals(882489574, model.compilationErrors().get(0).location().start().line());
        Assertions.assertEquals(336917419, model.compilationErrors().get(0).location().start().column());
        Assertions.assertEquals(1838860649, model.compilationErrors().get(0).location().end().line());
        Assertions.assertEquals(11863753, model.compilationErrors().get(0).location().end().column());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TestRouteResultDetails model =
            new TestRouteResultDetails()
                .withCompilationErrors(
                    Arrays
                        .asList(
                            new RouteCompilationError()
                                .withMessage("ksmond")
                                .withSeverity(RouteErrorSeverity.WARNING)
                                .withLocation(
                                    new RouteErrorRange()
                                        .withStart(new RouteErrorPosition().withLine(882489574).withColumn(336917419))
                                        .withEnd(new RouteErrorPosition().withLine(1838860649).withColumn(11863753)))));
        model = BinaryData.fromObject(model).toObject(TestRouteResultDetails.class);
        Assertions.assertEquals("ksmond", model.compilationErrors().get(0).message());
        Assertions.assertEquals(RouteErrorSeverity.WARNING, model.compilationErrors().get(0).severity());
        Assertions.assertEquals(882489574, model.compilationErrors().get(0).location().start().line());
        Assertions.assertEquals(336917419, model.compilationErrors().get(0).location().start().column());
        Assertions.assertEquals(1838860649, model.compilationErrors().get(0).location().end().line());
        Assertions.assertEquals(11863753, model.compilationErrors().get(0).location().end().column());
    }
}
