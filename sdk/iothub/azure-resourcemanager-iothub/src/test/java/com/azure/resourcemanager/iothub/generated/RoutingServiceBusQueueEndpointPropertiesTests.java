// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.AuthenticationType;
import com.azure.resourcemanager.iothub.models.ManagedIdentity;
import com.azure.resourcemanager.iothub.models.RoutingServiceBusQueueEndpointProperties;
import org.junit.jupiter.api.Assertions;

public final class RoutingServiceBusQueueEndpointPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RoutingServiceBusQueueEndpointProperties model =
            BinaryData
                .fromString(
                    "{\"id\":\"pazyxoegukg\",\"connectionString\":\"piu\",\"endpointUri\":\"ygevqzntypmrbpiz\",\"entityPath\":\"r\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"ydnfyhxdeoejz\"},\"name\":\"cwif\",\"subscriptionId\":\"ttgzfbis\",\"resourceGroup\":\"bkh\"}")
                .toObject(RoutingServiceBusQueueEndpointProperties.class);
        Assertions.assertEquals("pazyxoegukg", model.id());
        Assertions.assertEquals("piu", model.connectionString());
        Assertions.assertEquals("ygevqzntypmrbpiz", model.endpointUri());
        Assertions.assertEquals("r", model.entityPath());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("ydnfyhxdeoejz", model.identity().userAssignedIdentity());
        Assertions.assertEquals("cwif", model.name());
        Assertions.assertEquals("ttgzfbis", model.subscriptionId());
        Assertions.assertEquals("bkh", model.resourceGroup());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RoutingServiceBusQueueEndpointProperties model =
            new RoutingServiceBusQueueEndpointProperties()
                .withId("pazyxoegukg")
                .withConnectionString("piu")
                .withEndpointUri("ygevqzntypmrbpiz")
                .withEntityPath("r")
                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("ydnfyhxdeoejz"))
                .withName("cwif")
                .withSubscriptionId("ttgzfbis")
                .withResourceGroup("bkh");
        model = BinaryData.fromObject(model).toObject(RoutingServiceBusQueueEndpointProperties.class);
        Assertions.assertEquals("pazyxoegukg", model.id());
        Assertions.assertEquals("piu", model.connectionString());
        Assertions.assertEquals("ygevqzntypmrbpiz", model.endpointUri());
        Assertions.assertEquals("r", model.entityPath());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("ydnfyhxdeoejz", model.identity().userAssignedIdentity());
        Assertions.assertEquals("cwif", model.name());
        Assertions.assertEquals("ttgzfbis", model.subscriptionId());
        Assertions.assertEquals("bkh", model.resourceGroup());
    }
}
