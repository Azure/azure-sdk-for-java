// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.AuthenticationType;
import com.azure.resourcemanager.iothub.models.ManagedIdentity;
import com.azure.resourcemanager.iothub.models.RoutingServiceBusQueueEndpointProperties;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class RoutingServiceBusQueueEndpointPropertiesTests {
    @Test
    public void testDeserialize() {
        RoutingServiceBusQueueEndpointProperties model =
            BinaryData
                .fromString(
                    "{\"id\":\"ymjhxxjyngudivkr\",\"connectionString\":\"wbxqzvszjfau\",\"endpointUri\":\"fdxxivetvtcqaqtd\",\"entityPath\":\"mcbxvwvxysl\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"xoblytkbl\"},\"name\":\"pe\",\"subscriptionId\":\"wfbkrvrns\",\"resourceGroup\":\"hqjohxcrsbfova\"}")
                .toObject(RoutingServiceBusQueueEndpointProperties.class);
        Assertions.assertEquals("ymjhxxjyngudivkr", model.id());
        Assertions.assertEquals("wbxqzvszjfau", model.connectionString());
        Assertions.assertEquals("fdxxivetvtcqaqtd", model.endpointUri());
        Assertions.assertEquals("mcbxvwvxysl", model.entityPath());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("xoblytkbl", model.identity().userAssignedIdentity());
        Assertions.assertEquals("pe", model.name());
        Assertions.assertEquals("wfbkrvrns", model.subscriptionId());
        Assertions.assertEquals("hqjohxcrsbfova", model.resourceGroup());
    }

    @Test
    public void testSerialize() {
        RoutingServiceBusQueueEndpointProperties model =
            new RoutingServiceBusQueueEndpointProperties()
                .withId("ymjhxxjyngudivkr")
                .withConnectionString("wbxqzvszjfau")
                .withEndpointUri("fdxxivetvtcqaqtd")
                .withEntityPath("mcbxvwvxysl")
                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("xoblytkbl"))
                .withName("pe")
                .withSubscriptionId("wfbkrvrns")
                .withResourceGroup("hqjohxcrsbfova");
        model = BinaryData.fromObject(model).toObject(RoutingServiceBusQueueEndpointProperties.class);
        Assertions.assertEquals("ymjhxxjyngudivkr", model.id());
        Assertions.assertEquals("wbxqzvszjfau", model.connectionString());
        Assertions.assertEquals("fdxxivetvtcqaqtd", model.endpointUri());
        Assertions.assertEquals("mcbxvwvxysl", model.entityPath());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("xoblytkbl", model.identity().userAssignedIdentity());
        Assertions.assertEquals("pe", model.name());
        Assertions.assertEquals("wfbkrvrns", model.subscriptionId());
        Assertions.assertEquals("hqjohxcrsbfova", model.resourceGroup());
    }
}
