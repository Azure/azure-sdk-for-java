// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iothub.IotHubManager;
import com.azure.resourcemanager.iothub.models.CertificateDescription;
import com.azure.resourcemanager.iothub.models.CertificateProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CertificatesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"subject\":\"ojgcyzt\",\"expiry\":\"Sat, 12 Jun 2021 09:34:33 GMT\",\"thumbprint\":\"nbaeqphchqn\",\"isVerified\":false,\"created\":\"Sat, 24 Jul 2021 02:25:51 GMT\",\"updated\":\"Thu, 21 Jan 2021 00:49:26 GMT\",\"certificate\":\"wrykqgai\",\"policyResourceId\":\"viklb\"},\"etag\":\"vkhbejdznx\",\"id\":\"vdsrhnjiv\",\"name\":\"lvtno\",\"type\":\"qfzgemjdftul\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IotHubManager manager = IotHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CertificateDescription response = manager.certificates()
            .define("risjnhnytxifqjz")
            .withExistingIotHub("ucvpamrs", "euzvx")
            .withProperties(
                new CertificateProperties().withIsVerified(false).withCertificate("fqntcyp").withPolicyResourceId("jv"))
            .withIfMatch("jslb")
            .create();

        Assertions.assertFalse(response.properties().isVerified());
        Assertions.assertEquals("wrykqgai", response.properties().certificate());
        Assertions.assertEquals("viklb", response.properties().policyResourceId());
    }
}
