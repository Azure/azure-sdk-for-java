// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.AuthenticationType;
import com.azure.resourcemanager.iothub.models.ManagedIdentity;
import com.azure.resourcemanager.iothub.models.StorageEndpointProperties;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class StorageEndpointPropertiesTests {
    @Test
    public void testDeserialize() {
        StorageEndpointProperties model =
            BinaryData
                .fromString(
                    "{\"sasTtlAsIso8601\":\"PT206H38M58S\",\"connectionString\":\"sjnkal\",\"containerName\":\"utiiswacf\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"zewk\"}}")
                .toObject(StorageEndpointProperties.class);
        Assertions.assertEquals(Duration.parse("PT206H38M58S"), model.sasTtlAsIso8601());
        Assertions.assertEquals("sjnkal", model.connectionString());
        Assertions.assertEquals("utiiswacf", model.containerName());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("zewk", model.identity().userAssignedIdentity());
    }

    @Test
    public void testSerialize() {
        StorageEndpointProperties model =
            new StorageEndpointProperties()
                .withSasTtlAsIso8601(Duration.parse("PT206H38M58S"))
                .withConnectionString("sjnkal")
                .withContainerName("utiiswacf")
                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("zewk"));
        model = BinaryData.fromObject(model).toObject(StorageEndpointProperties.class);
        Assertions.assertEquals(Duration.parse("PT206H38M58S"), model.sasTtlAsIso8601());
        Assertions.assertEquals("sjnkal", model.connectionString());
        Assertions.assertEquals("utiiswacf", model.containerName());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("zewk", model.identity().userAssignedIdentity());
    }
}
