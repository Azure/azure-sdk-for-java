// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.AuthenticationType;
import com.azure.resourcemanager.iothub.models.ManagedIdentity;
import com.azure.resourcemanager.iothub.models.RoutingEventHubProperties;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class RoutingEventHubPropertiesTests {
    @Test
    public void testDeserialize() {
        RoutingEventHubProperties model =
            BinaryData
                .fromString(
                    "{\"id\":\"ewgdrjervn\",\"connectionString\":\"nqpeh\",\"endpointUri\":\"doy\",\"entityPath\":\"ifthnz\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"gnayqigynduh\"},\"name\":\"vhqlkthumaqo\",\"subscriptionId\":\"gycdu\",\"resourceGroup\":\"r\"}")
                .toObject(RoutingEventHubProperties.class);
        Assertions.assertEquals("ewgdrjervn", model.id());
        Assertions.assertEquals("nqpeh", model.connectionString());
        Assertions.assertEquals("doy", model.endpointUri());
        Assertions.assertEquals("ifthnz", model.entityPath());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("gnayqigynduh", model.identity().userAssignedIdentity());
        Assertions.assertEquals("vhqlkthumaqo", model.name());
        Assertions.assertEquals("gycdu", model.subscriptionId());
        Assertions.assertEquals("r", model.resourceGroup());
    }

    @Test
    public void testSerialize() {
        RoutingEventHubProperties model =
            new RoutingEventHubProperties()
                .withId("ewgdrjervn")
                .withConnectionString("nqpeh")
                .withEndpointUri("doy")
                .withEntityPath("ifthnz")
                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("gnayqigynduh"))
                .withName("vhqlkthumaqo")
                .withSubscriptionId("gycdu")
                .withResourceGroup("r");
        model = BinaryData.fromObject(model).toObject(RoutingEventHubProperties.class);
        Assertions.assertEquals("ewgdrjervn", model.id());
        Assertions.assertEquals("nqpeh", model.connectionString());
        Assertions.assertEquals("doy", model.endpointUri());
        Assertions.assertEquals("ifthnz", model.entityPath());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("gnayqigynduh", model.identity().userAssignedIdentity());
        Assertions.assertEquals("vhqlkthumaqo", model.name());
        Assertions.assertEquals("gycdu", model.subscriptionId());
        Assertions.assertEquals("r", model.resourceGroup());
    }
}
