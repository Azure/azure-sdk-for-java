// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.SharedAccessSignatureAuthorizationRuleInner;
import com.azure.resourcemanager.iothub.models.AccessRights;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SharedAccessSignatureAuthorizationRuleInnerTests {
    @Test
    public void testDeserialize() {
        SharedAccessSignatureAuthorizationRuleInner model =
            BinaryData
                .fromString(
                    "{\"keyName\":\"zevgb\",\"primaryKey\":\"jqabcypmivkwlzuv\",\"secondaryKey\":\"fwnfnb\",\"rights\":\"RegistryWrite,"
                        + " DeviceConnect\"}")
                .toObject(SharedAccessSignatureAuthorizationRuleInner.class);
        Assertions.assertEquals("zevgb", model.keyName());
        Assertions.assertEquals("jqabcypmivkwlzuv", model.primaryKey());
        Assertions.assertEquals("fwnfnb", model.secondaryKey());
        Assertions.assertEquals(AccessRights.REGISTRY_WRITE_DEVICE_CONNECT, model.rights());
    }

    @Test
    public void testSerialize() {
        SharedAccessSignatureAuthorizationRuleInner model =
            new SharedAccessSignatureAuthorizationRuleInner()
                .withKeyName("zevgb")
                .withPrimaryKey("jqabcypmivkwlzuv")
                .withSecondaryKey("fwnfnb")
                .withRights(AccessRights.REGISTRY_WRITE_DEVICE_CONNECT);
        model = BinaryData.fromObject(model).toObject(SharedAccessSignatureAuthorizationRuleInner.class);
        Assertions.assertEquals("zevgb", model.keyName());
        Assertions.assertEquals("jqabcypmivkwlzuv", model.primaryKey());
        Assertions.assertEquals("fwnfnb", model.secondaryKey());
        Assertions.assertEquals(AccessRights.REGISTRY_WRITE_DEVICE_CONNECT, model.rights());
    }
}
