// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iothub.IotHubManager;
import com.azure.resourcemanager.iothub.models.GroupIdInformation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateLinkResourcesOperationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"id\":\"ulfgslqu\",\"name\":\"wdlenrdsut\",\"type\":\"bazpjuohmi\",\"properties\":{\"groupId\":\"flnorwmduvwp\",\"requiredMembers\":[\"xwmygdxpgpqc\",\"isze\"],\"requiredZoneNames\":[\"bjcrxgibbdaxco\"]}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IotHubManager manager = IotHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        GroupIdInformation response = manager.privateLinkResourcesOperations()
            .getWithResponse("wcpmguaadraufac", "kahzo", "ajjziuxxpshne", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("flnorwmduvwp", response.properties().groupId());
        Assertions.assertEquals("xwmygdxpgpqc", response.properties().requiredMembers().get(0));
        Assertions.assertEquals("bjcrxgibbdaxco", response.properties().requiredZoneNames().get(0));
    }
}
