// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.RoutingMessage;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class RoutingMessageTests {
    @Test
    public void testDeserialize() {
        RoutingMessage model =
            BinaryData
                .fromString(
                    "{\"body\":\"rwr\",\"appProperties\":{\"bminrfdwoyuhhzi\":\"twaenuuzko\",\"zqhof\":\"iefozbhdmsml\",\"ah\":\"rmaequ\"},\"systemProperties\":{\"alnswhccsphk\":\"slfaoqzpiyyl\",\"oluhczbwemh\":\"ivwitqscywugg\",\"sbrgz\":\"i\",\"ggicccnxqhue\":\"wmsweypqwd\"}}")
                .toObject(RoutingMessage.class);
        Assertions.assertEquals("rwr", model.body());
        Assertions.assertEquals("twaenuuzko", model.appProperties().get("bminrfdwoyuhhzi"));
        Assertions.assertEquals("slfaoqzpiyyl", model.systemProperties().get("alnswhccsphk"));
    }

    @Test
    public void testSerialize() {
        RoutingMessage model =
            new RoutingMessage()
                .withBody("rwr")
                .withAppProperties(mapOf("bminrfdwoyuhhzi", "twaenuuzko", "zqhof", "iefozbhdmsml", "ah", "rmaequ"))
                .withSystemProperties(
                    mapOf(
                        "alnswhccsphk",
                        "slfaoqzpiyyl",
                        "oluhczbwemh",
                        "ivwitqscywugg",
                        "sbrgz",
                        "i",
                        "ggicccnxqhue",
                        "wmsweypqwd"));
        model = BinaryData.fromObject(model).toObject(RoutingMessage.class);
        Assertions.assertEquals("rwr", model.body());
        Assertions.assertEquals("twaenuuzko", model.appProperties().get("bminrfdwoyuhhzi"));
        Assertions.assertEquals("slfaoqzpiyyl", model.systemProperties().get("alnswhccsphk"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
