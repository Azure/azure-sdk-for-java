// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.EventHubConsumerGroupInfoInner;
import java.util.HashMap;
import java.util.Map;

public final class EventHubConsumerGroupInfoInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventHubConsumerGroupInfoInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"ali\":\"dataisgwbnbbeldawkz\",\"hashsfwxosow\":\"dataurqhaka\"},\"etag\":\"cugicjoox\",\"id\":\"j\",\"name\":\"bwpucwwfvovbv\",\"type\":\"euecivyhzceuoj\"}")
                .toObject(EventHubConsumerGroupInfoInner.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventHubConsumerGroupInfoInner model =
            new EventHubConsumerGroupInfoInner()
                .withProperties(mapOf("ali", "dataisgwbnbbeldawkz", "hashsfwxosow", "dataurqhaka"));
        model = BinaryData.fromObject(model).toObject(EventHubConsumerGroupInfoInner.class);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
