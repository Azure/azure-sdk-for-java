// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.MatchedRoute;
import com.azure.resourcemanager.iothub.models.RouteProperties;
import com.azure.resourcemanager.iothub.models.RoutingSource;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MatchedRouteTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MatchedRoute model = BinaryData.fromString(
            "{\"properties\":{\"name\":\"mubyynt\",\"source\":\"DeviceMessages\",\"condition\":\"bqtkoievseotgqr\",\"endpointNames\":[\"tmuwlauwzi\",\"xbmp\",\"cjefuzmu\",\"pbttdum\"],\"isEnabled\":false}}")
            .toObject(MatchedRoute.class);
        Assertions.assertEquals("mubyynt", model.properties().name());
        Assertions.assertEquals(RoutingSource.DEVICE_MESSAGES, model.properties().source());
        Assertions.assertEquals("bqtkoievseotgqr", model.properties().condition());
        Assertions.assertEquals("tmuwlauwzi", model.properties().endpointNames().get(0));
        Assertions.assertFalse(model.properties().isEnabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MatchedRoute model = new MatchedRoute().withProperties(new RouteProperties().withName("mubyynt")
            .withSource(RoutingSource.DEVICE_MESSAGES)
            .withCondition("bqtkoievseotgqr")
            .withEndpointNames(Arrays.asList("tmuwlauwzi", "xbmp", "cjefuzmu", "pbttdum"))
            .withIsEnabled(false));
        model = BinaryData.fromObject(model).toObject(MatchedRoute.class);
        Assertions.assertEquals("mubyynt", model.properties().name());
        Assertions.assertEquals(RoutingSource.DEVICE_MESSAGES, model.properties().source());
        Assertions.assertEquals("bqtkoievseotgqr", model.properties().condition());
        Assertions.assertEquals("tmuwlauwzi", model.properties().endpointNames().get(0));
        Assertions.assertFalse(model.properties().isEnabled());
    }
}
