// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.AuthenticationType;
import com.azure.resourcemanager.iothub.models.ManagedIdentity;
import com.azure.resourcemanager.iothub.models.RoutingServiceBusTopicEndpointProperties;
import org.junit.jupiter.api.Assertions;

public final class RoutingServiceBusTopicEndpointPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RoutingServiceBusTopicEndpointProperties model =
            BinaryData
                .fromString(
                    "{\"id\":\"gipwhonowkg\",\"connectionString\":\"wankixzbi\",\"endpointUri\":\"eputtmrywnuzoqf\",\"entityPath\":\"yqzrnkcqvyxlw\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"cohoq\"},\"name\":\"nwvlryavwhheunmm\",\"subscriptionId\":\"gyxzk\",\"resourceGroup\":\"ocukoklyax\"}")
                .toObject(RoutingServiceBusTopicEndpointProperties.class);
        Assertions.assertEquals("gipwhonowkg", model.id());
        Assertions.assertEquals("wankixzbi", model.connectionString());
        Assertions.assertEquals("eputtmrywnuzoqf", model.endpointUri());
        Assertions.assertEquals("yqzrnkcqvyxlw", model.entityPath());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("cohoq", model.identity().userAssignedIdentity());
        Assertions.assertEquals("nwvlryavwhheunmm", model.name());
        Assertions.assertEquals("gyxzk", model.subscriptionId());
        Assertions.assertEquals("ocukoklyax", model.resourceGroup());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RoutingServiceBusTopicEndpointProperties model =
            new RoutingServiceBusTopicEndpointProperties()
                .withId("gipwhonowkg")
                .withConnectionString("wankixzbi")
                .withEndpointUri("eputtmrywnuzoqf")
                .withEntityPath("yqzrnkcqvyxlw")
                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("cohoq"))
                .withName("nwvlryavwhheunmm")
                .withSubscriptionId("gyxzk")
                .withResourceGroup("ocukoklyax");
        model = BinaryData.fromObject(model).toObject(RoutingServiceBusTopicEndpointProperties.class);
        Assertions.assertEquals("gipwhonowkg", model.id());
        Assertions.assertEquals("wankixzbi", model.connectionString());
        Assertions.assertEquals("eputtmrywnuzoqf", model.endpointUri());
        Assertions.assertEquals("yqzrnkcqvyxlw", model.entityPath());
        Assertions.assertEquals(AuthenticationType.IDENTITY_BASED, model.authenticationType());
        Assertions.assertEquals("cohoq", model.identity().userAssignedIdentity());
        Assertions.assertEquals("nwvlryavwhheunmm", model.name());
        Assertions.assertEquals("gyxzk", model.subscriptionId());
        Assertions.assertEquals("ocukoklyax", model.resourceGroup());
    }
}
