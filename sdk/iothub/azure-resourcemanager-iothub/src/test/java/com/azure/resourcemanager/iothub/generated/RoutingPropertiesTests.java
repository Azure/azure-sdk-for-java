// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.AuthenticationType;
import com.azure.resourcemanager.iothub.models.EnrichmentProperties;
import com.azure.resourcemanager.iothub.models.FallbackRouteProperties;
import com.azure.resourcemanager.iothub.models.RouteProperties;
import com.azure.resourcemanager.iothub.models.RoutingCosmosDBSqlApiProperties;
import com.azure.resourcemanager.iothub.models.RoutingEndpoints;
import com.azure.resourcemanager.iothub.models.RoutingEventHubProperties;
import com.azure.resourcemanager.iothub.models.RoutingProperties;
import com.azure.resourcemanager.iothub.models.RoutingServiceBusQueueEndpointProperties;
import com.azure.resourcemanager.iothub.models.RoutingServiceBusTopicEndpointProperties;
import com.azure.resourcemanager.iothub.models.RoutingSource;
import com.azure.resourcemanager.iothub.models.RoutingStorageContainerProperties;
import com.azure.resourcemanager.iothub.models.RoutingStorageContainerPropertiesEncoding;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class RoutingPropertiesTests {
    @Test
    public void testDeserialize() {
        RoutingProperties model =
            BinaryData
                .fromString(
                    "{\"endpoints\":{\"serviceBusQueues\":[{\"id\":\"ypvhezrkg\",\"connectionString\":\"c\",\"endpointUri\":\"efovgmk\",\"entityPath\":\"leyyvx\",\"authenticationType\":\"identityBased\",\"name\":\"k\",\"subscriptionId\":\"t\",\"resourceGroup\":\"ngj\"}],\"serviceBusTopics\":[{\"id\":\"zsqpjhvmdajvny\",\"connectionString\":\"unqecanoae\",\"endpointUri\":\"fhyhltrpmopjmcma\",\"entityPath\":\"okth\",\"authenticationType\":\"keyBased\",\"name\":\"aodsfcpkv\",\"subscriptionId\":\"dpuozmyz\",\"resourceGroup\":\"agfuaxbezyiu\"},{\"id\":\"ktwh\",\"connectionString\":\"xw\",\"endpointUri\":\"wqsmbsur\",\"entityPath\":\"imoryocfsfksym\",\"authenticationType\":\"keyBased\",\"name\":\"tki\",\"subscriptionId\":\"xhqyudxorrqnb\",\"resourceGroup\":\"czvyifq\"}],\"eventHubs\":[{\"id\":\"vjsllrmvvdfw\",\"connectionString\":\"kpnpulexxbczwtr\",\"endpointUri\":\"iqzbq\",\"entityPath\":\"sovmyokacspkwl\",\"authenticationType\":\"identityBased\",\"name\":\"bpxjmfl\",\"subscriptionId\":\"vnchrkcci\",\"resourceGroup\":\"zjuqkhrsaj\"},{\"id\":\"ku\",\"connectionString\":\"oskg\",\"endpointUri\":\"auu\",\"entityPath\":\"jmvxie\",\"authenticationType\":\"keyBased\",\"name\":\"idyjrrfbyaosvexc\",\"subscriptionId\":\"npc\",\"resourceGroup\":\"ocohslkevleg\"}],\"storageContainers\":[{\"id\":\"u\",\"connectionString\":\"mvfaxkffeiith\",\"endpointUri\":\"m\",\"authenticationType\":\"keyBased\",\"name\":\"shxmzsbbzoggigrx\",\"subscriptionId\":\"ur\",\"resourceGroup\":\"xxjnspydptk\",\"containerName\":\"enkouknvudw\",\"fileNameFormat\":\"ukbldngkpo\",\"batchFrequencyInSeconds\":655680628,\"maxChunkSizeInBytes\":198508752,\"encoding\":\"AvroDeflate\"},{\"id\":\"egukgjnpiucg\",\"connectionString\":\"evqzntypmrbp\",\"endpointUri\":\"c\",\"authenticationType\":\"identityBased\",\"name\":\"sdpydnfyhxdeoejz\",\"subscriptionId\":\"w\",\"resourceGroup\":\"sjttgzfbish\",\"containerName\":\"bkh\",\"fileNameFormat\":\"deyeamdphagalpbu\",\"batchFrequencyInSeconds\":605545221,\"maxChunkSizeInBytes\":9013568,\"encoding\":\"JSON\"},{\"id\":\"nowkgshw\",\"connectionString\":\"kix\",\"endpointUri\":\"injep\",\"authenticationType\":\"keyBased\",\"name\":\"rywn\",\"subscriptionId\":\"oqftiyqzrnkcq\",\"resourceGroup\":\"xlwhzlsicoh\",\"containerName\":\"qqn\",\"fileNameFormat\":\"lryav\",\"batchFrequencyInSeconds\":989865410,\"maxChunkSizeInBytes\":1111271416,\"encoding\":\"Avro\"},{\"id\":\"qhgyxzkonocukok\",\"connectionString\":\"axuconuq\",\"endpointUri\":\"fkbey\",\"authenticationType\":\"identityBased\",\"name\":\"mjmwvvjektcx\",\"subscriptionId\":\"nhwlrsffrzpwvl\",\"resourceGroup\":\"q\",\"containerName\":\"biqylihkaet\",\"fileNameFormat\":\"tvfcivfsn\",\"batchFrequencyInSeconds\":24116036,\"maxChunkSizeInBytes\":751726652,\"encoding\":\"Avro\"}],\"cosmosDBSqlCollections\":[{\"name\":\"fbebrjcxer\",\"id\":\"wutttxfvjrbi\",\"subscriptionId\":\"hxepcyvahfnlj\",\"resourceGroup\":\"qxj\",\"endpointUri\":\"uujqgidokgjljyo\",\"authenticationType\":\"identityBased\",\"primaryKey\":\"tbgsncghkj\",\"secondaryKey\":\"zz\",\"databaseName\":\"bijhtxfvgxbf\",\"collectionName\":\"mxnehmp\",\"partitionKeyName\":\"cxgod\",\"partitionKeyTemplate\":\"fqkkr\"}]},\"routes\":[{\"name\":\"ukgri\",\"source\":\"DeviceMessages\",\"condition\":\"zlfbxzpuzycispnq\",\"endpointNames\":[\"hmgkbrpyy\",\"hibnuqqkpika\"],\"isEnabled\":false},{\"name\":\"gvtqagnbuynh\",\"source\":\"DeviceConnectionStateEvents\",\"condition\":\"gmebfsiarbutrcv\",\"endpointNames\":[\"azzmhjrunmpxt\"],\"isEnabled\":true},{\"name\":\"bh\",\"source\":\"DeviceConnectionStateEvents\",\"condition\":\"l\",\"endpointNames\":[\"kx\",\"yskpbhen\",\"tkcxywnytnrsy\",\"lqidyby\"],\"isEnabled\":false},{\"name\":\"zfcl\",\"source\":\"DeviceConnectionStateEvents\",\"condition\":\"xdbabphlwr\",\"endpointNames\":[\"fkts\",\"hsucoc\"],\"isEnabled\":true}],\"fallbackRoute\":{\"name\":\"azt\",\"source\":\"Invalid\",\"condition\":\"wwrq\",\"endpointNames\":[\"edckzywbiexzfey\",\"eaxib\"],\"isEnabled\":false},\"enrichments\":[{\"key\":\"bhqwalmuzyoxa\",\"value\":\"pdkzjancuxr\",\"endpointNames\":[\"wbavxbniwdj\"]},{\"key\":\"wz\",\"value\":\"s\",\"endpointNames\":[\"pgn\"]}]}")
                .toObject(RoutingProperties.class);
        Assertions.assertEquals("ypvhezrkg", model.endpoints().serviceBusQueues().get(0).id());
        Assertions.assertEquals("c", model.endpoints().serviceBusQueues().get(0).connectionString());
        Assertions.assertEquals("efovgmk", model.endpoints().serviceBusQueues().get(0).endpointUri());
        Assertions.assertEquals("leyyvx", model.endpoints().serviceBusQueues().get(0).entityPath());
        Assertions
            .assertEquals(
                AuthenticationType.IDENTITY_BASED, model.endpoints().serviceBusQueues().get(0).authenticationType());
        Assertions.assertEquals("k", model.endpoints().serviceBusQueues().get(0).name());
        Assertions.assertEquals("t", model.endpoints().serviceBusQueues().get(0).subscriptionId());
        Assertions.assertEquals("ngj", model.endpoints().serviceBusQueues().get(0).resourceGroup());
        Assertions.assertEquals("zsqpjhvmdajvny", model.endpoints().serviceBusTopics().get(0).id());
        Assertions.assertEquals("unqecanoae", model.endpoints().serviceBusTopics().get(0).connectionString());
        Assertions.assertEquals("fhyhltrpmopjmcma", model.endpoints().serviceBusTopics().get(0).endpointUri());
        Assertions.assertEquals("okth", model.endpoints().serviceBusTopics().get(0).entityPath());
        Assertions
            .assertEquals(
                AuthenticationType.KEY_BASED, model.endpoints().serviceBusTopics().get(0).authenticationType());
        Assertions.assertEquals("aodsfcpkv", model.endpoints().serviceBusTopics().get(0).name());
        Assertions.assertEquals("dpuozmyz", model.endpoints().serviceBusTopics().get(0).subscriptionId());
        Assertions.assertEquals("agfuaxbezyiu", model.endpoints().serviceBusTopics().get(0).resourceGroup());
        Assertions.assertEquals("vjsllrmvvdfw", model.endpoints().eventHubs().get(0).id());
        Assertions.assertEquals("kpnpulexxbczwtr", model.endpoints().eventHubs().get(0).connectionString());
        Assertions.assertEquals("iqzbq", model.endpoints().eventHubs().get(0).endpointUri());
        Assertions.assertEquals("sovmyokacspkwl", model.endpoints().eventHubs().get(0).entityPath());
        Assertions
            .assertEquals(AuthenticationType.IDENTITY_BASED, model.endpoints().eventHubs().get(0).authenticationType());
        Assertions.assertEquals("bpxjmfl", model.endpoints().eventHubs().get(0).name());
        Assertions.assertEquals("vnchrkcci", model.endpoints().eventHubs().get(0).subscriptionId());
        Assertions.assertEquals("zjuqkhrsaj", model.endpoints().eventHubs().get(0).resourceGroup());
        Assertions.assertEquals("u", model.endpoints().storageContainers().get(0).id());
        Assertions.assertEquals("mvfaxkffeiith", model.endpoints().storageContainers().get(0).connectionString());
        Assertions.assertEquals("m", model.endpoints().storageContainers().get(0).endpointUri());
        Assertions
            .assertEquals(
                AuthenticationType.KEY_BASED, model.endpoints().storageContainers().get(0).authenticationType());
        Assertions.assertEquals("shxmzsbbzoggigrx", model.endpoints().storageContainers().get(0).name());
        Assertions.assertEquals("ur", model.endpoints().storageContainers().get(0).subscriptionId());
        Assertions.assertEquals("xxjnspydptk", model.endpoints().storageContainers().get(0).resourceGroup());
        Assertions.assertEquals("enkouknvudw", model.endpoints().storageContainers().get(0).containerName());
        Assertions.assertEquals("ukbldngkpo", model.endpoints().storageContainers().get(0).fileNameFormat());
        Assertions.assertEquals(655680628, model.endpoints().storageContainers().get(0).batchFrequencyInSeconds());
        Assertions.assertEquals(198508752, model.endpoints().storageContainers().get(0).maxChunkSizeInBytes());
        Assertions
            .assertEquals(
                RoutingStorageContainerPropertiesEncoding.AVRO_DEFLATE,
                model.endpoints().storageContainers().get(0).encoding());
        Assertions.assertEquals("fbebrjcxer", model.endpoints().cosmosDBSqlCollections().get(0).name());
        Assertions.assertEquals("wutttxfvjrbi", model.endpoints().cosmosDBSqlCollections().get(0).id());
        Assertions.assertEquals("hxepcyvahfnlj", model.endpoints().cosmosDBSqlCollections().get(0).subscriptionId());
        Assertions.assertEquals("qxj", model.endpoints().cosmosDBSqlCollections().get(0).resourceGroup());
        Assertions.assertEquals("uujqgidokgjljyo", model.endpoints().cosmosDBSqlCollections().get(0).endpointUri());
        Assertions
            .assertEquals(
                AuthenticationType.IDENTITY_BASED,
                model.endpoints().cosmosDBSqlCollections().get(0).authenticationType());
        Assertions.assertEquals("tbgsncghkj", model.endpoints().cosmosDBSqlCollections().get(0).primaryKey());
        Assertions.assertEquals("zz", model.endpoints().cosmosDBSqlCollections().get(0).secondaryKey());
        Assertions.assertEquals("bijhtxfvgxbf", model.endpoints().cosmosDBSqlCollections().get(0).databaseName());
        Assertions.assertEquals("mxnehmp", model.endpoints().cosmosDBSqlCollections().get(0).collectionName());
        Assertions.assertEquals("cxgod", model.endpoints().cosmosDBSqlCollections().get(0).partitionKeyName());
        Assertions.assertEquals("fqkkr", model.endpoints().cosmosDBSqlCollections().get(0).partitionKeyTemplate());
        Assertions.assertEquals("ukgri", model.routes().get(0).name());
        Assertions.assertEquals(RoutingSource.DEVICE_MESSAGES, model.routes().get(0).source());
        Assertions.assertEquals("zlfbxzpuzycispnq", model.routes().get(0).condition());
        Assertions.assertEquals("hmgkbrpyy", model.routes().get(0).endpointNames().get(0));
        Assertions.assertEquals(false, model.routes().get(0).isEnabled());
        Assertions.assertEquals("azt", model.fallbackRoute().name());
        Assertions.assertEquals(RoutingSource.INVALID, model.fallbackRoute().source());
        Assertions.assertEquals("wwrq", model.fallbackRoute().condition());
        Assertions.assertEquals("edckzywbiexzfey", model.fallbackRoute().endpointNames().get(0));
        Assertions.assertEquals(false, model.fallbackRoute().isEnabled());
        Assertions.assertEquals("bhqwalmuzyoxa", model.enrichments().get(0).key());
        Assertions.assertEquals("pdkzjancuxr", model.enrichments().get(0).value());
        Assertions.assertEquals("wbavxbniwdj", model.enrichments().get(0).endpointNames().get(0));
    }

    @Test
    public void testSerialize() {
        RoutingProperties model =
            new RoutingProperties()
                .withEndpoints(
                    new RoutingEndpoints()
                        .withServiceBusQueues(
                            Arrays
                                .asList(
                                    new RoutingServiceBusQueueEndpointProperties()
                                        .withId("ypvhezrkg")
                                        .withConnectionString("c")
                                        .withEndpointUri("efovgmk")
                                        .withEntityPath("leyyvx")
                                        .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                        .withName("k")
                                        .withSubscriptionId("t")
                                        .withResourceGroup("ngj")))
                        .withServiceBusTopics(
                            Arrays
                                .asList(
                                    new RoutingServiceBusTopicEndpointProperties()
                                        .withId("zsqpjhvmdajvny")
                                        .withConnectionString("unqecanoae")
                                        .withEndpointUri("fhyhltrpmopjmcma")
                                        .withEntityPath("okth")
                                        .withAuthenticationType(AuthenticationType.KEY_BASED)
                                        .withName("aodsfcpkv")
                                        .withSubscriptionId("dpuozmyz")
                                        .withResourceGroup("agfuaxbezyiu"),
                                    new RoutingServiceBusTopicEndpointProperties()
                                        .withId("ktwh")
                                        .withConnectionString("xw")
                                        .withEndpointUri("wqsmbsur")
                                        .withEntityPath("imoryocfsfksym")
                                        .withAuthenticationType(AuthenticationType.KEY_BASED)
                                        .withName("tki")
                                        .withSubscriptionId("xhqyudxorrqnb")
                                        .withResourceGroup("czvyifq")))
                        .withEventHubs(
                            Arrays
                                .asList(
                                    new RoutingEventHubProperties()
                                        .withId("vjsllrmvvdfw")
                                        .withConnectionString("kpnpulexxbczwtr")
                                        .withEndpointUri("iqzbq")
                                        .withEntityPath("sovmyokacspkwl")
                                        .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                        .withName("bpxjmfl")
                                        .withSubscriptionId("vnchrkcci")
                                        .withResourceGroup("zjuqkhrsaj"),
                                    new RoutingEventHubProperties()
                                        .withId("ku")
                                        .withConnectionString("oskg")
                                        .withEndpointUri("auu")
                                        .withEntityPath("jmvxie")
                                        .withAuthenticationType(AuthenticationType.KEY_BASED)
                                        .withName("idyjrrfbyaosvexc")
                                        .withSubscriptionId("npc")
                                        .withResourceGroup("ocohslkevleg")))
                        .withStorageContainers(
                            Arrays
                                .asList(
                                    new RoutingStorageContainerProperties()
                                        .withId("u")
                                        .withConnectionString("mvfaxkffeiith")
                                        .withEndpointUri("m")
                                        .withAuthenticationType(AuthenticationType.KEY_BASED)
                                        .withName("shxmzsbbzoggigrx")
                                        .withSubscriptionId("ur")
                                        .withResourceGroup("xxjnspydptk")
                                        .withContainerName("enkouknvudw")
                                        .withFileNameFormat("ukbldngkpo")
                                        .withBatchFrequencyInSeconds(655680628)
                                        .withMaxChunkSizeInBytes(198508752)
                                        .withEncoding(RoutingStorageContainerPropertiesEncoding.AVRO_DEFLATE),
                                    new RoutingStorageContainerProperties()
                                        .withId("egukgjnpiucg")
                                        .withConnectionString("evqzntypmrbp")
                                        .withEndpointUri("c")
                                        .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                        .withName("sdpydnfyhxdeoejz")
                                        .withSubscriptionId("w")
                                        .withResourceGroup("sjttgzfbish")
                                        .withContainerName("bkh")
                                        .withFileNameFormat("deyeamdphagalpbu")
                                        .withBatchFrequencyInSeconds(605545221)
                                        .withMaxChunkSizeInBytes(9013568)
                                        .withEncoding(RoutingStorageContainerPropertiesEncoding.JSON),
                                    new RoutingStorageContainerProperties()
                                        .withId("nowkgshw")
                                        .withConnectionString("kix")
                                        .withEndpointUri("injep")
                                        .withAuthenticationType(AuthenticationType.KEY_BASED)
                                        .withName("rywn")
                                        .withSubscriptionId("oqftiyqzrnkcq")
                                        .withResourceGroup("xlwhzlsicoh")
                                        .withContainerName("qqn")
                                        .withFileNameFormat("lryav")
                                        .withBatchFrequencyInSeconds(989865410)
                                        .withMaxChunkSizeInBytes(1111271416)
                                        .withEncoding(RoutingStorageContainerPropertiesEncoding.AVRO),
                                    new RoutingStorageContainerProperties()
                                        .withId("qhgyxzkonocukok")
                                        .withConnectionString("axuconuq")
                                        .withEndpointUri("fkbey")
                                        .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                        .withName("mjmwvvjektcx")
                                        .withSubscriptionId("nhwlrsffrzpwvl")
                                        .withResourceGroup("q")
                                        .withContainerName("biqylihkaet")
                                        .withFileNameFormat("tvfcivfsn")
                                        .withBatchFrequencyInSeconds(24116036)
                                        .withMaxChunkSizeInBytes(751726652)
                                        .withEncoding(RoutingStorageContainerPropertiesEncoding.AVRO)))
                        .withCosmosDBSqlCollections(
                            Arrays
                                .asList(
                                    new RoutingCosmosDBSqlApiProperties()
                                        .withName("fbebrjcxer")
                                        .withId("wutttxfvjrbi")
                                        .withSubscriptionId("hxepcyvahfnlj")
                                        .withResourceGroup("qxj")
                                        .withEndpointUri("uujqgidokgjljyo")
                                        .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                        .withPrimaryKey("tbgsncghkj")
                                        .withSecondaryKey("zz")
                                        .withDatabaseName("bijhtxfvgxbf")
                                        .withCollectionName("mxnehmp")
                                        .withPartitionKeyName("cxgod")
                                        .withPartitionKeyTemplate("fqkkr"))))
                .withRoutes(
                    Arrays
                        .asList(
                            new RouteProperties()
                                .withName("ukgri")
                                .withSource(RoutingSource.DEVICE_MESSAGES)
                                .withCondition("zlfbxzpuzycispnq")
                                .withEndpointNames(Arrays.asList("hmgkbrpyy", "hibnuqqkpika"))
                                .withIsEnabled(false),
                            new RouteProperties()
                                .withName("gvtqagnbuynh")
                                .withSource(RoutingSource.DEVICE_CONNECTION_STATE_EVENTS)
                                .withCondition("gmebfsiarbutrcv")
                                .withEndpointNames(Arrays.asList("azzmhjrunmpxt"))
                                .withIsEnabled(true),
                            new RouteProperties()
                                .withName("bh")
                                .withSource(RoutingSource.DEVICE_CONNECTION_STATE_EVENTS)
                                .withCondition("l")
                                .withEndpointNames(Arrays.asList("kx", "yskpbhen", "tkcxywnytnrsy", "lqidyby"))
                                .withIsEnabled(false),
                            new RouteProperties()
                                .withName("zfcl")
                                .withSource(RoutingSource.DEVICE_CONNECTION_STATE_EVENTS)
                                .withCondition("xdbabphlwr")
                                .withEndpointNames(Arrays.asList("fkts", "hsucoc"))
                                .withIsEnabled(true)))
                .withFallbackRoute(
                    new FallbackRouteProperties()
                        .withName("azt")
                        .withSource(RoutingSource.INVALID)
                        .withCondition("wwrq")
                        .withEndpointNames(Arrays.asList("edckzywbiexzfey", "eaxib"))
                        .withIsEnabled(false))
                .withEnrichments(
                    Arrays
                        .asList(
                            new EnrichmentProperties()
                                .withKey("bhqwalmuzyoxa")
                                .withValue("pdkzjancuxr")
                                .withEndpointNames(Arrays.asList("wbavxbniwdj")),
                            new EnrichmentProperties()
                                .withKey("wz")
                                .withValue("s")
                                .withEndpointNames(Arrays.asList("pgn"))));
        model = BinaryData.fromObject(model).toObject(RoutingProperties.class);
        Assertions.assertEquals("ypvhezrkg", model.endpoints().serviceBusQueues().get(0).id());
        Assertions.assertEquals("c", model.endpoints().serviceBusQueues().get(0).connectionString());
        Assertions.assertEquals("efovgmk", model.endpoints().serviceBusQueues().get(0).endpointUri());
        Assertions.assertEquals("leyyvx", model.endpoints().serviceBusQueues().get(0).entityPath());
        Assertions
            .assertEquals(
                AuthenticationType.IDENTITY_BASED, model.endpoints().serviceBusQueues().get(0).authenticationType());
        Assertions.assertEquals("k", model.endpoints().serviceBusQueues().get(0).name());
        Assertions.assertEquals("t", model.endpoints().serviceBusQueues().get(0).subscriptionId());
        Assertions.assertEquals("ngj", model.endpoints().serviceBusQueues().get(0).resourceGroup());
        Assertions.assertEquals("zsqpjhvmdajvny", model.endpoints().serviceBusTopics().get(0).id());
        Assertions.assertEquals("unqecanoae", model.endpoints().serviceBusTopics().get(0).connectionString());
        Assertions.assertEquals("fhyhltrpmopjmcma", model.endpoints().serviceBusTopics().get(0).endpointUri());
        Assertions.assertEquals("okth", model.endpoints().serviceBusTopics().get(0).entityPath());
        Assertions
            .assertEquals(
                AuthenticationType.KEY_BASED, model.endpoints().serviceBusTopics().get(0).authenticationType());
        Assertions.assertEquals("aodsfcpkv", model.endpoints().serviceBusTopics().get(0).name());
        Assertions.assertEquals("dpuozmyz", model.endpoints().serviceBusTopics().get(0).subscriptionId());
        Assertions.assertEquals("agfuaxbezyiu", model.endpoints().serviceBusTopics().get(0).resourceGroup());
        Assertions.assertEquals("vjsllrmvvdfw", model.endpoints().eventHubs().get(0).id());
        Assertions.assertEquals("kpnpulexxbczwtr", model.endpoints().eventHubs().get(0).connectionString());
        Assertions.assertEquals("iqzbq", model.endpoints().eventHubs().get(0).endpointUri());
        Assertions.assertEquals("sovmyokacspkwl", model.endpoints().eventHubs().get(0).entityPath());
        Assertions
            .assertEquals(AuthenticationType.IDENTITY_BASED, model.endpoints().eventHubs().get(0).authenticationType());
        Assertions.assertEquals("bpxjmfl", model.endpoints().eventHubs().get(0).name());
        Assertions.assertEquals("vnchrkcci", model.endpoints().eventHubs().get(0).subscriptionId());
        Assertions.assertEquals("zjuqkhrsaj", model.endpoints().eventHubs().get(0).resourceGroup());
        Assertions.assertEquals("u", model.endpoints().storageContainers().get(0).id());
        Assertions.assertEquals("mvfaxkffeiith", model.endpoints().storageContainers().get(0).connectionString());
        Assertions.assertEquals("m", model.endpoints().storageContainers().get(0).endpointUri());
        Assertions
            .assertEquals(
                AuthenticationType.KEY_BASED, model.endpoints().storageContainers().get(0).authenticationType());
        Assertions.assertEquals("shxmzsbbzoggigrx", model.endpoints().storageContainers().get(0).name());
        Assertions.assertEquals("ur", model.endpoints().storageContainers().get(0).subscriptionId());
        Assertions.assertEquals("xxjnspydptk", model.endpoints().storageContainers().get(0).resourceGroup());
        Assertions.assertEquals("enkouknvudw", model.endpoints().storageContainers().get(0).containerName());
        Assertions.assertEquals("ukbldngkpo", model.endpoints().storageContainers().get(0).fileNameFormat());
        Assertions.assertEquals(655680628, model.endpoints().storageContainers().get(0).batchFrequencyInSeconds());
        Assertions.assertEquals(198508752, model.endpoints().storageContainers().get(0).maxChunkSizeInBytes());
        Assertions
            .assertEquals(
                RoutingStorageContainerPropertiesEncoding.AVRO_DEFLATE,
                model.endpoints().storageContainers().get(0).encoding());
        Assertions.assertEquals("fbebrjcxer", model.endpoints().cosmosDBSqlCollections().get(0).name());
        Assertions.assertEquals("wutttxfvjrbi", model.endpoints().cosmosDBSqlCollections().get(0).id());
        Assertions.assertEquals("hxepcyvahfnlj", model.endpoints().cosmosDBSqlCollections().get(0).subscriptionId());
        Assertions.assertEquals("qxj", model.endpoints().cosmosDBSqlCollections().get(0).resourceGroup());
        Assertions.assertEquals("uujqgidokgjljyo", model.endpoints().cosmosDBSqlCollections().get(0).endpointUri());
        Assertions
            .assertEquals(
                AuthenticationType.IDENTITY_BASED,
                model.endpoints().cosmosDBSqlCollections().get(0).authenticationType());
        Assertions.assertEquals("tbgsncghkj", model.endpoints().cosmosDBSqlCollections().get(0).primaryKey());
        Assertions.assertEquals("zz", model.endpoints().cosmosDBSqlCollections().get(0).secondaryKey());
        Assertions.assertEquals("bijhtxfvgxbf", model.endpoints().cosmosDBSqlCollections().get(0).databaseName());
        Assertions.assertEquals("mxnehmp", model.endpoints().cosmosDBSqlCollections().get(0).collectionName());
        Assertions.assertEquals("cxgod", model.endpoints().cosmosDBSqlCollections().get(0).partitionKeyName());
        Assertions.assertEquals("fqkkr", model.endpoints().cosmosDBSqlCollections().get(0).partitionKeyTemplate());
        Assertions.assertEquals("ukgri", model.routes().get(0).name());
        Assertions.assertEquals(RoutingSource.DEVICE_MESSAGES, model.routes().get(0).source());
        Assertions.assertEquals("zlfbxzpuzycispnq", model.routes().get(0).condition());
        Assertions.assertEquals("hmgkbrpyy", model.routes().get(0).endpointNames().get(0));
        Assertions.assertEquals(false, model.routes().get(0).isEnabled());
        Assertions.assertEquals("azt", model.fallbackRoute().name());
        Assertions.assertEquals(RoutingSource.INVALID, model.fallbackRoute().source());
        Assertions.assertEquals("wwrq", model.fallbackRoute().condition());
        Assertions.assertEquals("edckzywbiexzfey", model.fallbackRoute().endpointNames().get(0));
        Assertions.assertEquals(false, model.fallbackRoute().isEnabled());
        Assertions.assertEquals("bhqwalmuzyoxa", model.enrichments().get(0).key());
        Assertions.assertEquals("pdkzjancuxr", model.enrichments().get(0).value());
        Assertions.assertEquals("wbavxbniwdj", model.enrichments().get(0).endpointNames().get(0));
    }
}
