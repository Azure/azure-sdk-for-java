// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.UserSubscriptionQuotaListResultInner;
import com.azure.resourcemanager.iothub.models.Name;
import com.azure.resourcemanager.iothub.models.UserSubscriptionQuota;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class UserSubscriptionQuotaListResultInnerTests {
    @Test
    public void testDeserialize() {
        UserSubscriptionQuotaListResultInner model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"id\":\"vkg\",\"type\":\"bgdknnqv\",\"unit\":\"znqntoru\",\"currentValue\":1292575401,\"limit\":63235261,\"name\":{\"value\":\"kycgrauwj\",\"localizedValue\":\"taeburuvdm\"}}],\"nextLink\":\"s\"}")
                .toObject(UserSubscriptionQuotaListResultInner.class);
        Assertions.assertEquals("vkg", model.value().get(0).id());
        Assertions.assertEquals("bgdknnqv", model.value().get(0).type());
        Assertions.assertEquals("znqntoru", model.value().get(0).unit());
        Assertions.assertEquals(1292575401, model.value().get(0).currentValue());
        Assertions.assertEquals(63235261, model.value().get(0).limit());
        Assertions.assertEquals("kycgrauwj", model.value().get(0).name().value());
        Assertions.assertEquals("taeburuvdm", model.value().get(0).name().localizedValue());
    }

    @Test
    public void testSerialize() {
        UserSubscriptionQuotaListResultInner model =
            new UserSubscriptionQuotaListResultInner()
                .withValue(
                    Arrays
                        .asList(
                            new UserSubscriptionQuota()
                                .withId("vkg")
                                .withType("bgdknnqv")
                                .withUnit("znqntoru")
                                .withCurrentValue(1292575401)
                                .withLimit(63235261)
                                .withName(new Name().withValue("kycgrauwj").withLocalizedValue("taeburuvdm"))));
        model = BinaryData.fromObject(model).toObject(UserSubscriptionQuotaListResultInner.class);
        Assertions.assertEquals("vkg", model.value().get(0).id());
        Assertions.assertEquals("bgdknnqv", model.value().get(0).type());
        Assertions.assertEquals("znqntoru", model.value().get(0).unit());
        Assertions.assertEquals(1292575401, model.value().get(0).currentValue());
        Assertions.assertEquals(63235261, model.value().get(0).limit());
        Assertions.assertEquals("kycgrauwj", model.value().get(0).name().value());
        Assertions.assertEquals("taeburuvdm", model.value().get(0).name().localizedValue());
    }
}
