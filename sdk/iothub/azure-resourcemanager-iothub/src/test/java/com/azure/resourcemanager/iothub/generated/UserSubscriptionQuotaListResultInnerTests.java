// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.UserSubscriptionQuotaListResultInner;
import com.azure.resourcemanager.iothub.models.Name;
import com.azure.resourcemanager.iothub.models.UserSubscriptionQuota;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UserSubscriptionQuotaListResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UserSubscriptionQuotaListResultInner model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"id\":\"xqzvszjfa\",\"type\":\"j\",\"unit\":\"xxivetv\",\"currentValue\":1920566576,\"limit\":928990245,\"name\":{\"value\":\"oqmcbxvwvxyslq\",\"localizedValue\":\"sfxobl\"}},{\"id\":\"k\",\"type\":\"mpew\",\"unit\":\"fbkrvrnsvs\",\"currentValue\":2131802432,\"limit\":925506689,\"name\":{\"value\":\"rsbfovasrruvw\",\"localizedValue\":\"sqfsubcgjbirxb\"}},{\"id\":\"bsrfbj\",\"type\":\"twss\",\"unit\":\"ftpvjzbexil\",\"currentValue\":1948356330,\"limit\":2126872967,\"name\":{\"value\":\"vwpm\",\"localizedValue\":\"aruoujmkcjhwqyt\"}}],\"nextLink\":\"ybn\"}")
                .toObject(UserSubscriptionQuotaListResultInner.class);
        Assertions.assertEquals("xqzvszjfa", model.value().get(0).id());
        Assertions.assertEquals("j", model.value().get(0).type());
        Assertions.assertEquals("xxivetv", model.value().get(0).unit());
        Assertions.assertEquals(1920566576, model.value().get(0).currentValue());
        Assertions.assertEquals(928990245, model.value().get(0).limit());
        Assertions.assertEquals("oqmcbxvwvxyslq", model.value().get(0).name().value());
        Assertions.assertEquals("sfxobl", model.value().get(0).name().localizedValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UserSubscriptionQuotaListResultInner model =
            new UserSubscriptionQuotaListResultInner()
                .withValue(
                    Arrays
                        .asList(
                            new UserSubscriptionQuota()
                                .withId("xqzvszjfa")
                                .withType("j")
                                .withUnit("xxivetv")
                                .withCurrentValue(1920566576)
                                .withLimit(928990245)
                                .withName(new Name().withValue("oqmcbxvwvxyslq").withLocalizedValue("sfxobl")),
                            new UserSubscriptionQuota()
                                .withId("k")
                                .withType("mpew")
                                .withUnit("fbkrvrnsvs")
                                .withCurrentValue(2131802432)
                                .withLimit(925506689)
                                .withName(new Name().withValue("rsbfovasrruvw").withLocalizedValue("sqfsubcgjbirxb")),
                            new UserSubscriptionQuota()
                                .withId("bsrfbj")
                                .withType("twss")
                                .withUnit("ftpvjzbexil")
                                .withCurrentValue(1948356330)
                                .withLimit(2126872967)
                                .withName(new Name().withValue("vwpm").withLocalizedValue("aruoujmkcjhwqyt"))));
        model = BinaryData.fromObject(model).toObject(UserSubscriptionQuotaListResultInner.class);
        Assertions.assertEquals("xqzvszjfa", model.value().get(0).id());
        Assertions.assertEquals("j", model.value().get(0).type());
        Assertions.assertEquals("xxivetv", model.value().get(0).unit());
        Assertions.assertEquals(1920566576, model.value().get(0).currentValue());
        Assertions.assertEquals(928990245, model.value().get(0).limit());
        Assertions.assertEquals("oqmcbxvwvxyslq", model.value().get(0).name().value());
        Assertions.assertEquals("sfxobl", model.value().get(0).name().localizedValue());
    }
}
