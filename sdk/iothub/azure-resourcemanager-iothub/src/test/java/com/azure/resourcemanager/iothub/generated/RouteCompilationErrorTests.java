// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.RouteCompilationError;
import com.azure.resourcemanager.iothub.models.RouteErrorPosition;
import com.azure.resourcemanager.iothub.models.RouteErrorRange;
import com.azure.resourcemanager.iothub.models.RouteErrorSeverity;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class RouteCompilationErrorTests {
    @Test
    public void testDeserialize() {
        RouteCompilationError model =
            BinaryData
                .fromString(
                    "{\"message\":\"vm\",\"severity\":\"warning\",\"location\":{\"start\":{\"line\":651551575,\"column\":1503531550},\"end\":{\"line\":178976731,\"column\":1464941672}}}")
                .toObject(RouteCompilationError.class);
        Assertions.assertEquals("vm", model.message());
        Assertions.assertEquals(RouteErrorSeverity.WARNING, model.severity());
        Assertions.assertEquals(651551575, model.location().start().line());
        Assertions.assertEquals(1503531550, model.location().start().column());
        Assertions.assertEquals(178976731, model.location().end().line());
        Assertions.assertEquals(1464941672, model.location().end().column());
    }

    @Test
    public void testSerialize() {
        RouteCompilationError model =
            new RouteCompilationError()
                .withMessage("vm")
                .withSeverity(RouteErrorSeverity.WARNING)
                .withLocation(
                    new RouteErrorRange()
                        .withStart(new RouteErrorPosition().withLine(651551575).withColumn(1503531550))
                        .withEnd(new RouteErrorPosition().withLine(178976731).withColumn(1464941672)));
        model = BinaryData.fromObject(model).toObject(RouteCompilationError.class);
        Assertions.assertEquals("vm", model.message());
        Assertions.assertEquals(RouteErrorSeverity.WARNING, model.severity());
        Assertions.assertEquals(651551575, model.location().start().line());
        Assertions.assertEquals(1503531550, model.location().start().column());
        Assertions.assertEquals(178976731, model.location().end().line());
        Assertions.assertEquals(1464941672, model.location().end().column());
    }
}
