// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.FallbackRouteProperties;
import com.azure.resourcemanager.iothub.models.RoutingSource;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FallbackRoutePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FallbackRouteProperties model =
            BinaryData
                .fromString(
                    "{\"name\":\"tsthsucocm\",\"source\":\"DeviceConnectionStateEvents\",\"condition\":\"azt\",\"endpointNames\":[\"twwrqp\"],\"isEnabled\":true}")
                .toObject(FallbackRouteProperties.class);
        Assertions.assertEquals("tsthsucocm", model.name());
        Assertions.assertEquals(RoutingSource.DEVICE_CONNECTION_STATE_EVENTS, model.source());
        Assertions.assertEquals("azt", model.condition());
        Assertions.assertEquals("twwrqp", model.endpointNames().get(0));
        Assertions.assertEquals(true, model.isEnabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FallbackRouteProperties model =
            new FallbackRouteProperties()
                .withName("tsthsucocm")
                .withSource(RoutingSource.DEVICE_CONNECTION_STATE_EVENTS)
                .withCondition("azt")
                .withEndpointNames(Arrays.asList("twwrqp"))
                .withIsEnabled(true);
        model = BinaryData.fromObject(model).toObject(FallbackRouteProperties.class);
        Assertions.assertEquals("tsthsucocm", model.name());
        Assertions.assertEquals(RoutingSource.DEVICE_CONNECTION_STATE_EVENTS, model.source());
        Assertions.assertEquals("azt", model.condition());
        Assertions.assertEquals("twwrqp", model.endpointNames().get(0));
        Assertions.assertEquals(true, model.isEnabled());
    }
}
