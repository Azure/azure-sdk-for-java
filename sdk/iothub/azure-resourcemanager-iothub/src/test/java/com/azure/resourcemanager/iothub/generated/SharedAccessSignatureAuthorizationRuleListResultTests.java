// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.SharedAccessSignatureAuthorizationRuleInner;
import com.azure.resourcemanager.iothub.models.AccessRights;
import com.azure.resourcemanager.iothub.models.SharedAccessSignatureAuthorizationRuleListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SharedAccessSignatureAuthorizationRuleListResultTests {
    @Test
    public void testDeserialize() {
        SharedAccessSignatureAuthorizationRuleListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"keyName\":\"euyowqkd\",\"primaryKey\":\"t\",\"secondaryKey\":\"ib\",\"rights\":\"ServiceConnect,"
                        + " DeviceConnect\"},{\"keyName\":\"cgpik\",\"primaryKey\":\"imejzanl\",\"secondaryKey\":\"xi\",\"rights\":\"ServiceConnect\"}],\"nextLink\":\"mbzonokix\"}")
                .toObject(SharedAccessSignatureAuthorizationRuleListResult.class);
        Assertions.assertEquals("euyowqkd", model.value().get(0).keyName());
        Assertions.assertEquals("t", model.value().get(0).primaryKey());
        Assertions.assertEquals("ib", model.value().get(0).secondaryKey());
        Assertions.assertEquals(AccessRights.SERVICE_CONNECT_DEVICE_CONNECT, model.value().get(0).rights());
    }

    @Test
    public void testSerialize() {
        SharedAccessSignatureAuthorizationRuleListResult model =
            new SharedAccessSignatureAuthorizationRuleListResult()
                .withValue(
                    Arrays
                        .asList(
                            new SharedAccessSignatureAuthorizationRuleInner()
                                .withKeyName("euyowqkd")
                                .withPrimaryKey("t")
                                .withSecondaryKey("ib")
                                .withRights(AccessRights.SERVICE_CONNECT_DEVICE_CONNECT),
                            new SharedAccessSignatureAuthorizationRuleInner()
                                .withKeyName("cgpik")
                                .withPrimaryKey("imejzanl")
                                .withSecondaryKey("xi")
                                .withRights(AccessRights.SERVICE_CONNECT)));
        model = BinaryData.fromObject(model).toObject(SharedAccessSignatureAuthorizationRuleListResult.class);
        Assertions.assertEquals("euyowqkd", model.value().get(0).keyName());
        Assertions.assertEquals("t", model.value().get(0).primaryKey());
        Assertions.assertEquals("ib", model.value().get(0).secondaryKey());
        Assertions.assertEquals(AccessRights.SERVICE_CONNECT_DEVICE_CONNECT, model.value().get(0).rights());
    }
}
