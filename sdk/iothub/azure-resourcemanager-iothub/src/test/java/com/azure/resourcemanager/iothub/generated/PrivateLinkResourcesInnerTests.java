// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.GroupIdInformationInner;
import com.azure.resourcemanager.iothub.fluent.models.PrivateLinkResourcesInner;
import com.azure.resourcemanager.iothub.models.GroupIdInformationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateLinkResourcesInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateLinkResourcesInner model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"id\":\"njhf\",\"name\":\"wmszkk\",\"type\":\"qreyfkzi\",\"properties\":{\"groupId\":\"jawneaiv\",\"requiredMembers\":[\"zel\",\"c\",\"r\"],\"requiredZoneNames\":[\"feaenwab\",\"atklddxbjhwuaa\",\"oz\"]}},{\"id\":\"sphyoulpjrvxa\",\"name\":\"rvimjwosytxitcsk\",\"type\":\"k\",\"properties\":{\"groupId\":\"umiekkezzi\",\"requiredMembers\":[\"yf\"],\"requiredZoneNames\":[\"gqggebdunygae\",\"idb\",\"fatpxllrxcyjmoa\"]}}]}")
                .toObject(PrivateLinkResourcesInner.class);
        Assertions.assertEquals("jawneaiv", model.value().get(0).properties().groupId());
        Assertions.assertEquals("zel", model.value().get(0).properties().requiredMembers().get(0));
        Assertions.assertEquals("feaenwab", model.value().get(0).properties().requiredZoneNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateLinkResourcesInner model =
            new PrivateLinkResourcesInner()
                .withValue(
                    Arrays
                        .asList(
                            new GroupIdInformationInner()
                                .withProperties(
                                    new GroupIdInformationProperties()
                                        .withGroupId("jawneaiv")
                                        .withRequiredMembers(Arrays.asList("zel", "c", "r"))
                                        .withRequiredZoneNames(Arrays.asList("feaenwab", "atklddxbjhwuaa", "oz"))),
                            new GroupIdInformationInner()
                                .withProperties(
                                    new GroupIdInformationProperties()
                                        .withGroupId("umiekkezzi")
                                        .withRequiredMembers(Arrays.asList("yf"))
                                        .withRequiredZoneNames(
                                            Arrays.asList("gqggebdunygae", "idb", "fatpxllrxcyjmoa")))));
        model = BinaryData.fromObject(model).toObject(PrivateLinkResourcesInner.class);
        Assertions.assertEquals("jawneaiv", model.value().get(0).properties().groupId());
        Assertions.assertEquals("zel", model.value().get(0).properties().requiredMembers().get(0));
        Assertions.assertEquals("feaenwab", model.value().get(0).properties().requiredZoneNames().get(0));
    }
}
