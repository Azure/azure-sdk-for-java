// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.GroupIdInformationInner;
import com.azure.resourcemanager.iothub.fluent.models.PrivateLinkResourcesInner;
import com.azure.resourcemanager.iothub.models.GroupIdInformationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateLinkResourcesInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateLinkResourcesInner model = BinaryData.fromString(
            "{\"value\":[{\"id\":\"foqreyfkzik\",\"name\":\"aw\",\"type\":\"a\",\"properties\":{\"groupId\":\"xwczelpcire\",\"requiredMembers\":[\"eae\",\"wabfatkl\"],\"requiredZoneNames\":[\"bjhwuaan\",\"zjosp\",\"youlp\",\"rvxaglrvimjwosy\"]}},{\"id\":\"itc\",\"name\":\"fcktqumiekke\",\"type\":\"ikh\",\"properties\":{\"groupId\":\"fjhdg\",\"requiredMembers\":[\"ebdunyg\",\"eqidbqfatpx\",\"lr\"],\"requiredZoneNames\":[\"jmoadsuv\",\"r\"]}}]}")
            .toObject(PrivateLinkResourcesInner.class);
        Assertions.assertEquals("xwczelpcire", model.value().get(0).properties().groupId());
        Assertions.assertEquals("eae", model.value().get(0).properties().requiredMembers().get(0));
        Assertions.assertEquals("bjhwuaan", model.value().get(0).properties().requiredZoneNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateLinkResourcesInner model = new PrivateLinkResourcesInner().withValue(Arrays.asList(
            new GroupIdInformationInner().withProperties(new GroupIdInformationProperties().withGroupId("xwczelpcire")
                .withRequiredMembers(Arrays.asList("eae", "wabfatkl"))
                .withRequiredZoneNames(Arrays.asList("bjhwuaan", "zjosp", "youlp", "rvxaglrvimjwosy"))),
            new GroupIdInformationInner().withProperties(new GroupIdInformationProperties().withGroupId("fjhdg")
                .withRequiredMembers(Arrays.asList("ebdunyg", "eqidbqfatpx", "lr"))
                .withRequiredZoneNames(Arrays.asList("jmoadsuv", "r")))));
        model = BinaryData.fromObject(model).toObject(PrivateLinkResourcesInner.class);
        Assertions.assertEquals("xwczelpcire", model.value().get(0).properties().groupId());
        Assertions.assertEquals("eae", model.value().get(0).properties().requiredMembers().get(0));
        Assertions.assertEquals("bjhwuaan", model.value().get(0).properties().requiredZoneNames().get(0));
    }
}
