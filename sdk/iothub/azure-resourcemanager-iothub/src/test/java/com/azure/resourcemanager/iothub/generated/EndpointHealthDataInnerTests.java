// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.EndpointHealthDataInner;
import com.azure.resourcemanager.iothub.models.EndpointHealthStatus;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class EndpointHealthDataInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EndpointHealthDataInner model =
            BinaryData
                .fromString(
                    "{\"endpointId\":\"xknalaulppg\",\"healthStatus\":\"dead\",\"lastKnownError\":\"napnyiropuhpigv\",\"lastKnownErrorTime\":\"Tue,"
                        + " 18 May 2021 16:57:02 GMT\",\"lastSuccessfulSendAttemptTime\":\"Sun, 13 Jun 2021 20:05:29"
                        + " GMT\",\"lastSendAttemptTime\":\"Wed, 08 Sep 2021 14:57:52 GMT\"}")
                .toObject(EndpointHealthDataInner.class);
        Assertions.assertEquals("xknalaulppg", model.endpointId());
        Assertions.assertEquals(EndpointHealthStatus.DEAD, model.healthStatus());
        Assertions.assertEquals("napnyiropuhpigv", model.lastKnownError());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-18T16:57:02Z"), model.lastKnownErrorTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-13T20:05:29Z"), model.lastSuccessfulSendAttemptTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-08T14:57:52Z"), model.lastSendAttemptTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EndpointHealthDataInner model =
            new EndpointHealthDataInner()
                .withEndpointId("xknalaulppg")
                .withHealthStatus(EndpointHealthStatus.DEAD)
                .withLastKnownError("napnyiropuhpigv")
                .withLastKnownErrorTime(OffsetDateTime.parse("2021-05-18T16:57:02Z"))
                .withLastSuccessfulSendAttemptTime(OffsetDateTime.parse("2021-06-13T20:05:29Z"))
                .withLastSendAttemptTime(OffsetDateTime.parse("2021-09-08T14:57:52Z"));
        model = BinaryData.fromObject(model).toObject(EndpointHealthDataInner.class);
        Assertions.assertEquals("xknalaulppg", model.endpointId());
        Assertions.assertEquals(EndpointHealthStatus.DEAD, model.healthStatus());
        Assertions.assertEquals("napnyiropuhpigv", model.lastKnownError());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-18T16:57:02Z"), model.lastKnownErrorTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-13T20:05:29Z"), model.lastSuccessfulSendAttemptTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-08T14:57:52Z"), model.lastSendAttemptTime());
    }
}
