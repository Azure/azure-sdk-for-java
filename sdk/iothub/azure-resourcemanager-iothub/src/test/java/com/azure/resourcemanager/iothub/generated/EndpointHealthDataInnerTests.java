// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.EndpointHealthDataInner;
import com.azure.resourcemanager.iothub.models.EndpointHealthStatus;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class EndpointHealthDataInnerTests {
    @Test
    public void testDeserialize() {
        EndpointHealthDataInner model =
            BinaryData
                .fromString(
                    "{\"endpointId\":\"nwdcfhu\",\"healthStatus\":\"unhealthy\",\"lastKnownError\":\"fuvglsbjjca\",\"lastKnownErrorTime\":\"Thu,"
                        + " 27 May 2021 00:53:27 GMT\",\"lastSuccessfulSendAttemptTime\":\"Thu, 06 May 2021 23:29:51"
                        + " GMT\",\"lastSendAttemptTime\":\"Tue, 04 May 2021 05:45:51 GMT\"}")
                .toObject(EndpointHealthDataInner.class);
        Assertions.assertEquals("nwdcfhu", model.endpointId());
        Assertions.assertEquals(EndpointHealthStatus.UNHEALTHY, model.healthStatus());
        Assertions.assertEquals("fuvglsbjjca", model.lastKnownError());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-27T00:53:27Z"), model.lastKnownErrorTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-06T23:29:51Z"), model.lastSuccessfulSendAttemptTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-04T05:45:51Z"), model.lastSendAttemptTime());
    }

    @Test
    public void testSerialize() {
        EndpointHealthDataInner model =
            new EndpointHealthDataInner()
                .withEndpointId("nwdcfhu")
                .withHealthStatus(EndpointHealthStatus.UNHEALTHY)
                .withLastKnownError("fuvglsbjjca")
                .withLastKnownErrorTime(OffsetDateTime.parse("2021-05-27T00:53:27Z"))
                .withLastSuccessfulSendAttemptTime(OffsetDateTime.parse("2021-05-06T23:29:51Z"))
                .withLastSendAttemptTime(OffsetDateTime.parse("2021-05-04T05:45:51Z"));
        model = BinaryData.fromObject(model).toObject(EndpointHealthDataInner.class);
        Assertions.assertEquals("nwdcfhu", model.endpointId());
        Assertions.assertEquals(EndpointHealthStatus.UNHEALTHY, model.healthStatus());
        Assertions.assertEquals("fuvglsbjjca", model.lastKnownError());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-27T00:53:27Z"), model.lastKnownErrorTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-06T23:29:51Z"), model.lastSuccessfulSendAttemptTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-04T05:45:51Z"), model.lastSendAttemptTime());
    }
}
