// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iothub.IotHubManager;
import com.azure.resourcemanager.iothub.models.EndpointHealthData;
import com.azure.resourcemanager.iothub.models.EndpointHealthStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotHubResourcesGetEndpointHealthMockTests {
    @Test
    public void testGetEndpointHealth() throws Exception {
        String responseStr
            = "{\"value\":[{\"endpointId\":\"qhuexm\",\"healthStatus\":\"degraded\",\"lastKnownError\":\"stvlzywemhzrnc\",\"lastKnownErrorTime\":\"Fri, 07 May 2021 09:46:11 GMT\",\"lastSuccessfulSendAttemptTime\":\"Sat, 26 Dec 2020 03:14:52 GMT\",\"lastSendAttemptTime\":\"Wed, 10 Mar 2021 02:09:12 GMT\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IotHubManager manager = IotHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<EndpointHealthData> response = manager.iotHubResources()
            .getEndpointHealth("mhairsbrgzdwmsw", "ypqwdxggiccc", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("qhuexm", response.iterator().next().endpointId());
        Assertions.assertEquals(EndpointHealthStatus.DEGRADED, response.iterator().next().healthStatus());
        Assertions.assertEquals("stvlzywemhzrnc", response.iterator().next().lastKnownError());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-07T09:46:11Z"),
            response.iterator().next().lastKnownErrorTime());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-26T03:14:52Z"),
            response.iterator().next().lastSuccessfulSendAttemptTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-10T02:09:12Z"),
            response.iterator().next().lastSendAttemptTime());
    }
}
