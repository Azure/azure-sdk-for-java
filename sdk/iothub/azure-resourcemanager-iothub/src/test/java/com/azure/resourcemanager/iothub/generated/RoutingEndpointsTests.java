// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.models.AuthenticationType;
import com.azure.resourcemanager.iothub.models.ManagedIdentity;
import com.azure.resourcemanager.iothub.models.RoutingCosmosDBSqlApiProperties;
import com.azure.resourcemanager.iothub.models.RoutingEndpoints;
import com.azure.resourcemanager.iothub.models.RoutingEventHubProperties;
import com.azure.resourcemanager.iothub.models.RoutingServiceBusQueueEndpointProperties;
import com.azure.resourcemanager.iothub.models.RoutingServiceBusTopicEndpointProperties;
import com.azure.resourcemanager.iothub.models.RoutingStorageContainerProperties;
import com.azure.resourcemanager.iothub.models.RoutingStorageContainerPropertiesEncoding;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class RoutingEndpointsTests {
    @Test
    public void testDeserialize() {
        RoutingEndpoints model =
            BinaryData
                .fromString(
                    "{\"serviceBusQueues\":[{\"id\":\"hpzxbzpfzab\",\"connectionString\":\"cuh\",\"endpointUri\":\"tcty\",\"entityPath\":\"klbb\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"zbhvgyuguosv\"},\"name\":\"kfssxqukkf\",\"subscriptionId\":\"gmgsxnkjzkde\",\"resourceGroup\":\"pvlopwiyighxpkd\"}],\"serviceBusTopics\":[{\"id\":\"iuebbaumny\",\"connectionString\":\"ped\",\"endpointUri\":\"jn\",\"entityPath\":\"ckhsmtxpsieb\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"esap\"},\"name\":\"krdqmh\",\"subscriptionId\":\"dhtldwkyz\",\"resourceGroup\":\"utknc\"},{\"id\":\"cwsvlxotog\",\"connectionString\":\"rupqsxvnmicy\",\"endpointUri\":\"ceoveilovno\",\"entityPath\":\"fj\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"k\"},\"name\":\"nxdhbt\",\"subscriptionId\":\"phywpnvj\",\"resourceGroup\":\"qnermclfplphoxu\"},{\"id\":\"rpabg\",\"connectionString\":\"psbjta\",\"endpointUri\":\"ugxywpmueef\",\"entityPath\":\"wfqkquj\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"onobglaocqx\"},\"name\":\"ccm\",\"subscriptionId\":\"udxytlmoyrx\",\"resourceGroup\":\"fudwpznt\"}],\"eventHubs\":[{\"id\":\"hl\",\"connectionString\":\"jbhckfrlhr\",\"endpointUri\":\"bkyvp\",\"entityPath\":\"anuzbpzkafkuw\",\"authenticationType\":\"keyBased\",\"identity\":{\"userAssignedIdentity\":\"bmehh\"},\"name\":\"eyvjusrtslhspkde\",\"subscriptionId\":\"aofmxagkvtme\",\"resourceGroup\":\"qkrhahvljua\"},{\"id\":\"quhcdhmduala\",\"connectionString\":\"qpv\",\"endpointUri\":\"dmwsrcrgvxpvgomz\",\"entityPath\":\"misgwbnb\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"wkz\"},\"name\":\"ali\",\"subscriptionId\":\"rqhakauha\",\"resourceGroup\":\"sfwxosowzxc\"}],\"storageContainers\":[{\"id\":\"jooxdjebw\",\"connectionString\":\"cwwfvovbvme\",\"endpointUri\":\"civyhzceuo\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"jueiotwmcdytd\"},\"name\":\"wit\",\"subscriptionId\":\"rjaw\",\"resourceGroup\":\"wgxhn\",\"containerName\":\"skxfbk\",\"fileNameFormat\":\"cg\",\"batchFrequencyInSeconds\":1567456771,\"maxChunkSizeInBytes\":1082784094,\"encoding\":\"JSON\"}],\"cosmosDBSqlCollections\":[{\"name\":\"auwhvylwzbtdhx\",\"id\":\"znbmpowuwprzq\",\"subscriptionId\":\"eualupjmkhf\",\"resourceGroup\":\"bbcswsrtjri\",\"endpointUri\":\"lrbpbewtghfgbl\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"vlvqhjkbegi\"},\"primaryKey\":\"nmxiebwwaloayqc\",\"secondaryKey\":\"rtzju\",\"databaseName\":\"gwyzm\",\"collectionName\":\"txon\",\"partitionKeyName\":\"ts\",\"partitionKeyTemplate\":\"jcbpwxqpsrknft\"},{\"name\":\"uvriuhprwm\",\"id\":\"vxqtayriwwroyqbe\",\"subscriptionId\":\"mcqibycnojv\",\"resourceGroup\":\"mefqsgzvahapjyzh\",\"endpointUri\":\"vgqzcjrvxd\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"lxkvu\"},\"primaryKey\":\"hzovawjvzunlut\",\"secondaryKey\":\"n\",\"databaseName\":\"rnxipei\",\"collectionName\":\"pjzu\",\"partitionKeyName\":\"jxdultskzbbtdzu\",\"partitionKeyTemplate\":\"e\"},{\"name\":\"kgpwoz\",\"id\":\"kfpbs\",\"subscriptionId\":\"ofd\",\"resourceGroup\":\"uusdttouwa\",\"endpointUri\":\"oekqvk\",\"authenticationType\":\"identityBased\",\"identity\":{\"userAssignedIdentity\":\"vbxwyjsflhh\"},\"primaryKey\":\"aln\",\"secondaryKey\":\"xisxyawjoyaqcsl\",\"databaseName\":\"jpkiidzyexznelix\",\"collectionName\":\"nr\",\"partitionKeyName\":\"folhbnxknal\",\"partitionKeyTemplate\":\"lp\"},{\"name\":\"ggdtpnapnyiro\",\"id\":\"hpigv\",\"subscriptionId\":\"ylgqgitxmedjvcsl\",\"resourceGroup\":\"qwwncw\",\"endpointUri\":\"zhxgktrmgucn\",\"authenticationType\":\"keyBased\",\"identity\":{\"userAssignedIdentity\":\"oellwp\"},\"primaryKey\":\"d\",\"secondaryKey\":\"pfqbuaceopzf\",\"databaseName\":\"rhhuaopppcqeqx\",\"collectionName\":\"lzdahzxctobgbkdm\",\"partitionKeyName\":\"zpostmgrcfbu\",\"partitionKeyTemplate\":\"mfqjhhkxbp\"}]}")
                .toObject(RoutingEndpoints.class);
        Assertions.assertEquals("hpzxbzpfzab", model.serviceBusQueues().get(0).id());
        Assertions.assertEquals("cuh", model.serviceBusQueues().get(0).connectionString());
        Assertions.assertEquals("tcty", model.serviceBusQueues().get(0).endpointUri());
        Assertions.assertEquals("klbb", model.serviceBusQueues().get(0).entityPath());
        Assertions
            .assertEquals(AuthenticationType.IDENTITY_BASED, model.serviceBusQueues().get(0).authenticationType());
        Assertions.assertEquals("zbhvgyuguosv", model.serviceBusQueues().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("kfssxqukkf", model.serviceBusQueues().get(0).name());
        Assertions.assertEquals("gmgsxnkjzkde", model.serviceBusQueues().get(0).subscriptionId());
        Assertions.assertEquals("pvlopwiyighxpkd", model.serviceBusQueues().get(0).resourceGroup());
        Assertions.assertEquals("iuebbaumny", model.serviceBusTopics().get(0).id());
        Assertions.assertEquals("ped", model.serviceBusTopics().get(0).connectionString());
        Assertions.assertEquals("jn", model.serviceBusTopics().get(0).endpointUri());
        Assertions.assertEquals("ckhsmtxpsieb", model.serviceBusTopics().get(0).entityPath());
        Assertions
            .assertEquals(AuthenticationType.IDENTITY_BASED, model.serviceBusTopics().get(0).authenticationType());
        Assertions.assertEquals("esap", model.serviceBusTopics().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("krdqmh", model.serviceBusTopics().get(0).name());
        Assertions.assertEquals("dhtldwkyz", model.serviceBusTopics().get(0).subscriptionId());
        Assertions.assertEquals("utknc", model.serviceBusTopics().get(0).resourceGroup());
        Assertions.assertEquals("hl", model.eventHubs().get(0).id());
        Assertions.assertEquals("jbhckfrlhr", model.eventHubs().get(0).connectionString());
        Assertions.assertEquals("bkyvp", model.eventHubs().get(0).endpointUri());
        Assertions.assertEquals("anuzbpzkafkuw", model.eventHubs().get(0).entityPath());
        Assertions.assertEquals(AuthenticationType.KEY_BASED, model.eventHubs().get(0).authenticationType());
        Assertions.assertEquals("bmehh", model.eventHubs().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("eyvjusrtslhspkde", model.eventHubs().get(0).name());
        Assertions.assertEquals("aofmxagkvtme", model.eventHubs().get(0).subscriptionId());
        Assertions.assertEquals("qkrhahvljua", model.eventHubs().get(0).resourceGroup());
        Assertions.assertEquals("jooxdjebw", model.storageContainers().get(0).id());
        Assertions.assertEquals("cwwfvovbvme", model.storageContainers().get(0).connectionString());
        Assertions.assertEquals("civyhzceuo", model.storageContainers().get(0).endpointUri());
        Assertions
            .assertEquals(AuthenticationType.IDENTITY_BASED, model.storageContainers().get(0).authenticationType());
        Assertions.assertEquals("jueiotwmcdytd", model.storageContainers().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("wit", model.storageContainers().get(0).name());
        Assertions.assertEquals("rjaw", model.storageContainers().get(0).subscriptionId());
        Assertions.assertEquals("wgxhn", model.storageContainers().get(0).resourceGroup());
        Assertions.assertEquals("skxfbk", model.storageContainers().get(0).containerName());
        Assertions.assertEquals("cg", model.storageContainers().get(0).fileNameFormat());
        Assertions.assertEquals(1567456771, model.storageContainers().get(0).batchFrequencyInSeconds());
        Assertions.assertEquals(1082784094, model.storageContainers().get(0).maxChunkSizeInBytes());
        Assertions
            .assertEquals(RoutingStorageContainerPropertiesEncoding.JSON, model.storageContainers().get(0).encoding());
        Assertions.assertEquals("auwhvylwzbtdhx", model.cosmosDBSqlCollections().get(0).name());
        Assertions.assertEquals("znbmpowuwprzq", model.cosmosDBSqlCollections().get(0).id());
        Assertions.assertEquals("eualupjmkhf", model.cosmosDBSqlCollections().get(0).subscriptionId());
        Assertions.assertEquals("bbcswsrtjri", model.cosmosDBSqlCollections().get(0).resourceGroup());
        Assertions.assertEquals("lrbpbewtghfgbl", model.cosmosDBSqlCollections().get(0).endpointUri());
        Assertions
            .assertEquals(
                AuthenticationType.IDENTITY_BASED, model.cosmosDBSqlCollections().get(0).authenticationType());
        Assertions.assertEquals("vlvqhjkbegi", model.cosmosDBSqlCollections().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("nmxiebwwaloayqc", model.cosmosDBSqlCollections().get(0).primaryKey());
        Assertions.assertEquals("rtzju", model.cosmosDBSqlCollections().get(0).secondaryKey());
        Assertions.assertEquals("gwyzm", model.cosmosDBSqlCollections().get(0).databaseName());
        Assertions.assertEquals("txon", model.cosmosDBSqlCollections().get(0).collectionName());
        Assertions.assertEquals("ts", model.cosmosDBSqlCollections().get(0).partitionKeyName());
        Assertions.assertEquals("jcbpwxqpsrknft", model.cosmosDBSqlCollections().get(0).partitionKeyTemplate());
    }

    @Test
    public void testSerialize() {
        RoutingEndpoints model =
            new RoutingEndpoints()
                .withServiceBusQueues(
                    Arrays
                        .asList(
                            new RoutingServiceBusQueueEndpointProperties()
                                .withId("hpzxbzpfzab")
                                .withConnectionString("cuh")
                                .withEndpointUri("tcty")
                                .withEntityPath("klbb")
                                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("zbhvgyuguosv"))
                                .withName("kfssxqukkf")
                                .withSubscriptionId("gmgsxnkjzkde")
                                .withResourceGroup("pvlopwiyighxpkd")))
                .withServiceBusTopics(
                    Arrays
                        .asList(
                            new RoutingServiceBusTopicEndpointProperties()
                                .withId("iuebbaumny")
                                .withConnectionString("ped")
                                .withEndpointUri("jn")
                                .withEntityPath("ckhsmtxpsieb")
                                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("esap"))
                                .withName("krdqmh")
                                .withSubscriptionId("dhtldwkyz")
                                .withResourceGroup("utknc"),
                            new RoutingServiceBusTopicEndpointProperties()
                                .withId("cwsvlxotog")
                                .withConnectionString("rupqsxvnmicy")
                                .withEndpointUri("ceoveilovno")
                                .withEntityPath("fj")
                                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("k"))
                                .withName("nxdhbt")
                                .withSubscriptionId("phywpnvj")
                                .withResourceGroup("qnermclfplphoxu"),
                            new RoutingServiceBusTopicEndpointProperties()
                                .withId("rpabg")
                                .withConnectionString("psbjta")
                                .withEndpointUri("ugxywpmueef")
                                .withEntityPath("wfqkquj")
                                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("onobglaocqx"))
                                .withName("ccm")
                                .withSubscriptionId("udxytlmoyrx")
                                .withResourceGroup("fudwpznt")))
                .withEventHubs(
                    Arrays
                        .asList(
                            new RoutingEventHubProperties()
                                .withId("hl")
                                .withConnectionString("jbhckfrlhr")
                                .withEndpointUri("bkyvp")
                                .withEntityPath("anuzbpzkafkuw")
                                .withAuthenticationType(AuthenticationType.KEY_BASED)
                                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("bmehh"))
                                .withName("eyvjusrtslhspkde")
                                .withSubscriptionId("aofmxagkvtme")
                                .withResourceGroup("qkrhahvljua"),
                            new RoutingEventHubProperties()
                                .withId("quhcdhmduala")
                                .withConnectionString("qpv")
                                .withEndpointUri("dmwsrcrgvxpvgomz")
                                .withEntityPath("misgwbnb")
                                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("wkz"))
                                .withName("ali")
                                .withSubscriptionId("rqhakauha")
                                .withResourceGroup("sfwxosowzxc")))
                .withStorageContainers(
                    Arrays
                        .asList(
                            new RoutingStorageContainerProperties()
                                .withId("jooxdjebw")
                                .withConnectionString("cwwfvovbvme")
                                .withEndpointUri("civyhzceuo")
                                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("jueiotwmcdytd"))
                                .withName("wit")
                                .withSubscriptionId("rjaw")
                                .withResourceGroup("wgxhn")
                                .withContainerName("skxfbk")
                                .withFileNameFormat("cg")
                                .withBatchFrequencyInSeconds(1567456771)
                                .withMaxChunkSizeInBytes(1082784094)
                                .withEncoding(RoutingStorageContainerPropertiesEncoding.JSON)))
                .withCosmosDBSqlCollections(
                    Arrays
                        .asList(
                            new RoutingCosmosDBSqlApiProperties()
                                .withName("auwhvylwzbtdhx")
                                .withId("znbmpowuwprzq")
                                .withSubscriptionId("eualupjmkhf")
                                .withResourceGroup("bbcswsrtjri")
                                .withEndpointUri("lrbpbewtghfgbl")
                                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("vlvqhjkbegi"))
                                .withPrimaryKey("nmxiebwwaloayqc")
                                .withSecondaryKey("rtzju")
                                .withDatabaseName("gwyzm")
                                .withCollectionName("txon")
                                .withPartitionKeyName("ts")
                                .withPartitionKeyTemplate("jcbpwxqpsrknft"),
                            new RoutingCosmosDBSqlApiProperties()
                                .withName("uvriuhprwm")
                                .withId("vxqtayriwwroyqbe")
                                .withSubscriptionId("mcqibycnojv")
                                .withResourceGroup("mefqsgzvahapjyzh")
                                .withEndpointUri("vgqzcjrvxd")
                                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("lxkvu"))
                                .withPrimaryKey("hzovawjvzunlut")
                                .withSecondaryKey("n")
                                .withDatabaseName("rnxipei")
                                .withCollectionName("pjzu")
                                .withPartitionKeyName("jxdultskzbbtdzu")
                                .withPartitionKeyTemplate("e"),
                            new RoutingCosmosDBSqlApiProperties()
                                .withName("kgpwoz")
                                .withId("kfpbs")
                                .withSubscriptionId("ofd")
                                .withResourceGroup("uusdttouwa")
                                .withEndpointUri("oekqvk")
                                .withAuthenticationType(AuthenticationType.IDENTITY_BASED)
                                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("vbxwyjsflhh"))
                                .withPrimaryKey("aln")
                                .withSecondaryKey("xisxyawjoyaqcsl")
                                .withDatabaseName("jpkiidzyexznelix")
                                .withCollectionName("nr")
                                .withPartitionKeyName("folhbnxknal")
                                .withPartitionKeyTemplate("lp"),
                            new RoutingCosmosDBSqlApiProperties()
                                .withName("ggdtpnapnyiro")
                                .withId("hpigv")
                                .withSubscriptionId("ylgqgitxmedjvcsl")
                                .withResourceGroup("qwwncw")
                                .withEndpointUri("zhxgktrmgucn")
                                .withAuthenticationType(AuthenticationType.KEY_BASED)
                                .withIdentity(new ManagedIdentity().withUserAssignedIdentity("oellwp"))
                                .withPrimaryKey("d")
                                .withSecondaryKey("pfqbuaceopzf")
                                .withDatabaseName("rhhuaopppcqeqx")
                                .withCollectionName("lzdahzxctobgbkdm")
                                .withPartitionKeyName("zpostmgrcfbu")
                                .withPartitionKeyTemplate("mfqjhhkxbp")));
        model = BinaryData.fromObject(model).toObject(RoutingEndpoints.class);
        Assertions.assertEquals("hpzxbzpfzab", model.serviceBusQueues().get(0).id());
        Assertions.assertEquals("cuh", model.serviceBusQueues().get(0).connectionString());
        Assertions.assertEquals("tcty", model.serviceBusQueues().get(0).endpointUri());
        Assertions.assertEquals("klbb", model.serviceBusQueues().get(0).entityPath());
        Assertions
            .assertEquals(AuthenticationType.IDENTITY_BASED, model.serviceBusQueues().get(0).authenticationType());
        Assertions.assertEquals("zbhvgyuguosv", model.serviceBusQueues().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("kfssxqukkf", model.serviceBusQueues().get(0).name());
        Assertions.assertEquals("gmgsxnkjzkde", model.serviceBusQueues().get(0).subscriptionId());
        Assertions.assertEquals("pvlopwiyighxpkd", model.serviceBusQueues().get(0).resourceGroup());
        Assertions.assertEquals("iuebbaumny", model.serviceBusTopics().get(0).id());
        Assertions.assertEquals("ped", model.serviceBusTopics().get(0).connectionString());
        Assertions.assertEquals("jn", model.serviceBusTopics().get(0).endpointUri());
        Assertions.assertEquals("ckhsmtxpsieb", model.serviceBusTopics().get(0).entityPath());
        Assertions
            .assertEquals(AuthenticationType.IDENTITY_BASED, model.serviceBusTopics().get(0).authenticationType());
        Assertions.assertEquals("esap", model.serviceBusTopics().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("krdqmh", model.serviceBusTopics().get(0).name());
        Assertions.assertEquals("dhtldwkyz", model.serviceBusTopics().get(0).subscriptionId());
        Assertions.assertEquals("utknc", model.serviceBusTopics().get(0).resourceGroup());
        Assertions.assertEquals("hl", model.eventHubs().get(0).id());
        Assertions.assertEquals("jbhckfrlhr", model.eventHubs().get(0).connectionString());
        Assertions.assertEquals("bkyvp", model.eventHubs().get(0).endpointUri());
        Assertions.assertEquals("anuzbpzkafkuw", model.eventHubs().get(0).entityPath());
        Assertions.assertEquals(AuthenticationType.KEY_BASED, model.eventHubs().get(0).authenticationType());
        Assertions.assertEquals("bmehh", model.eventHubs().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("eyvjusrtslhspkde", model.eventHubs().get(0).name());
        Assertions.assertEquals("aofmxagkvtme", model.eventHubs().get(0).subscriptionId());
        Assertions.assertEquals("qkrhahvljua", model.eventHubs().get(0).resourceGroup());
        Assertions.assertEquals("jooxdjebw", model.storageContainers().get(0).id());
        Assertions.assertEquals("cwwfvovbvme", model.storageContainers().get(0).connectionString());
        Assertions.assertEquals("civyhzceuo", model.storageContainers().get(0).endpointUri());
        Assertions
            .assertEquals(AuthenticationType.IDENTITY_BASED, model.storageContainers().get(0).authenticationType());
        Assertions.assertEquals("jueiotwmcdytd", model.storageContainers().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("wit", model.storageContainers().get(0).name());
        Assertions.assertEquals("rjaw", model.storageContainers().get(0).subscriptionId());
        Assertions.assertEquals("wgxhn", model.storageContainers().get(0).resourceGroup());
        Assertions.assertEquals("skxfbk", model.storageContainers().get(0).containerName());
        Assertions.assertEquals("cg", model.storageContainers().get(0).fileNameFormat());
        Assertions.assertEquals(1567456771, model.storageContainers().get(0).batchFrequencyInSeconds());
        Assertions.assertEquals(1082784094, model.storageContainers().get(0).maxChunkSizeInBytes());
        Assertions
            .assertEquals(RoutingStorageContainerPropertiesEncoding.JSON, model.storageContainers().get(0).encoding());
        Assertions.assertEquals("auwhvylwzbtdhx", model.cosmosDBSqlCollections().get(0).name());
        Assertions.assertEquals("znbmpowuwprzq", model.cosmosDBSqlCollections().get(0).id());
        Assertions.assertEquals("eualupjmkhf", model.cosmosDBSqlCollections().get(0).subscriptionId());
        Assertions.assertEquals("bbcswsrtjri", model.cosmosDBSqlCollections().get(0).resourceGroup());
        Assertions.assertEquals("lrbpbewtghfgbl", model.cosmosDBSqlCollections().get(0).endpointUri());
        Assertions
            .assertEquals(
                AuthenticationType.IDENTITY_BASED, model.cosmosDBSqlCollections().get(0).authenticationType());
        Assertions.assertEquals("vlvqhjkbegi", model.cosmosDBSqlCollections().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("nmxiebwwaloayqc", model.cosmosDBSqlCollections().get(0).primaryKey());
        Assertions.assertEquals("rtzju", model.cosmosDBSqlCollections().get(0).secondaryKey());
        Assertions.assertEquals("gwyzm", model.cosmosDBSqlCollections().get(0).databaseName());
        Assertions.assertEquals("txon", model.cosmosDBSqlCollections().get(0).collectionName());
        Assertions.assertEquals("ts", model.cosmosDBSqlCollections().get(0).partitionKeyName());
        Assertions.assertEquals("jcbpwxqpsrknft", model.cosmosDBSqlCollections().get(0).partitionKeyTemplate());
    }
}
