// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iothub.IotHubManager;
import com.azure.resourcemanager.iothub.models.CertificateDescription;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CertificatesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"subject\":\"nrojlpijnkr\",\"expiry\":\"Sun, 27 Dec 2020 04:23:31 GMT\",\"thumbprint\":\"dhcrati\",\"isVerified\":true,\"created\":\"Wed, 20 Oct 2021 07:10:22 GMT\",\"updated\":\"Thu, 21 Jan 2021 03:47:46 GMT\",\"certificate\":\"i\",\"policyResourceId\":\"ozqyzh\"},\"etag\":\"wesgogczh\",\"id\":\"nnxk\",\"name\":\"lgnyhmo\",\"type\":\"sxkkg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IotHubManager manager = IotHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CertificateDescription response = manager.certificates()
            .getWithResponse("fiufx", "knpirgnepttwq", "sniffc", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertTrue(response.properties().isVerified());
        Assertions.assertEquals("i", response.properties().certificate());
        Assertions.assertEquals("ozqyzh", response.properties().policyResourceId());
    }
}
