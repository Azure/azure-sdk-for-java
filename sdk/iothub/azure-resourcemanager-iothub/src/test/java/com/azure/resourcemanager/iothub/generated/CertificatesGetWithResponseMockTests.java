// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iothub.IotHubManager;
import com.azure.resourcemanager.iothub.models.CertificateDescription;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CertificatesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"subject\":\"einqf\",\"expiry\":\"Mon, 10 May 2021 20:16:44 GMT\",\"thumbprint\":\"qknp\",\"isVerified\":true,\"created\":\"Sun, 25 Apr 2021 01:28:07 GMT\",\"updated\":\"Fri, 15 Oct 2021 22:08:17 GMT\",\"certificate\":\"wqmsniffcdmqn\"},\"etag\":\"jlpijnkrx\",\"id\":\"rddh\",\"name\":\"ratiz\",\"type\":\"ronasxift\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IotHubManager manager = IotHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CertificateDescription response = manager.certificates()
            .getWithResponse("uu", "fdlwg", "ytsbwtovv", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(true, response.properties().isVerified());
        Assertions.assertEquals("wqmsniffcdmqn", response.properties().certificate());
    }
}
