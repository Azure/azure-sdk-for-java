// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iothub.fluent.models.TestAllRoutesResultInner;
import com.azure.resourcemanager.iothub.models.MatchedRoute;
import com.azure.resourcemanager.iothub.models.RouteProperties;
import com.azure.resourcemanager.iothub.models.RoutingSource;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class TestAllRoutesResultInnerTests {
    @Test
    public void testDeserialize() {
        TestAllRoutesResultInner model =
            BinaryData
                .fromString(
                    "{\"routes\":[{\"properties\":{\"name\":\"zywemhzrncsdtclu\",\"source\":\"DeviceConnectionStateEvents\",\"condition\":\"pbsfgytgu\",\"endpointNames\":[],\"isEnabled\":true}}]}")
                .toObject(TestAllRoutesResultInner.class);
        Assertions.assertEquals("zywemhzrncsdtclu", model.routes().get(0).properties().name());
        Assertions
            .assertEquals(RoutingSource.DEVICE_CONNECTION_STATE_EVENTS, model.routes().get(0).properties().source());
        Assertions.assertEquals("pbsfgytgu", model.routes().get(0).properties().condition());
        Assertions.assertEquals(true, model.routes().get(0).properties().isEnabled());
    }

    @Test
    public void testSerialize() {
        TestAllRoutesResultInner model =
            new TestAllRoutesResultInner()
                .withRoutes(
                    Arrays
                        .asList(
                            new MatchedRoute()
                                .withProperties(
                                    new RouteProperties()
                                        .withName("zywemhzrncsdtclu")
                                        .withSource(RoutingSource.DEVICE_CONNECTION_STATE_EVENTS)
                                        .withCondition("pbsfgytgu")
                                        .withEndpointNames(Arrays.asList())
                                        .withIsEnabled(true))));
        model = BinaryData.fromObject(model).toObject(TestAllRoutesResultInner.class);
        Assertions.assertEquals("zywemhzrncsdtclu", model.routes().get(0).properties().name());
        Assertions
            .assertEquals(RoutingSource.DEVICE_CONNECTION_STATE_EVENTS, model.routes().get(0).properties().source());
        Assertions.assertEquals("pbsfgytgu", model.routes().get(0).properties().condition());
        Assertions.assertEquals(true, model.routes().get(0).properties().isEnabled());
    }
}
