/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.iothub.v2019_07_01_preview;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The properties of a routing rule that your IoT hub uses to route messages to
 * endpoints.
 */
public class RouteProperties {
    /**
     * The name of the route. The name can only include alphanumeric
     * characters, periods, underscores, hyphens, has a maximum length of 64
     * characters, and must be unique.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * The source that the routing rule is to be applied to, such as
     * DeviceMessages. Possible values include: 'Invalid', 'DeviceMessages',
     * 'TwinChangeEvents', 'DeviceLifecycleEvents', 'DeviceJobLifecycleEvents',
     * 'DigitalTwinChangeEvents'.
     */
    @JsonProperty(value = "source", required = true)
    private RoutingSource source;

    /**
     * The condition that is evaluated to apply the routing rule. If no
     * condition is provided, it evaluates to true by default. For grammar,
     * see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.
     */
    @JsonProperty(value = "condition")
    private String condition;

    /**
     * The list of endpoints to which messages that satisfy the condition are
     * routed. Currently only one endpoint is allowed.
     */
    @JsonProperty(value = "endpointNames", required = true)
    private List<String> endpointNames;

    /**
     * Used to specify whether a route is enabled.
     */
    @JsonProperty(value = "isEnabled", required = true)
    private boolean isEnabled;

    /**
     * Get the name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
     *
     * @param name the name value to set
     * @return the RouteProperties object itself.
     */
    public RouteProperties withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the source that the routing rule is to be applied to, such as DeviceMessages. Possible values include: 'Invalid', 'DeviceMessages', 'TwinChangeEvents', 'DeviceLifecycleEvents', 'DeviceJobLifecycleEvents', 'DigitalTwinChangeEvents'.
     *
     * @return the source value
     */
    public RoutingSource source() {
        return this.source;
    }

    /**
     * Set the source that the routing rule is to be applied to, such as DeviceMessages. Possible values include: 'Invalid', 'DeviceMessages', 'TwinChangeEvents', 'DeviceLifecycleEvents', 'DeviceJobLifecycleEvents', 'DigitalTwinChangeEvents'.
     *
     * @param source the source value to set
     * @return the RouteProperties object itself.
     */
    public RouteProperties withSource(RoutingSource source) {
        this.source = source;
        return this;
    }

    /**
     * Get the condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.
     *
     * @return the condition value
     */
    public String condition() {
        return this.condition;
    }

    /**
     * Set the condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.
     *
     * @param condition the condition value to set
     * @return the RouteProperties object itself.
     */
    public RouteProperties withCondition(String condition) {
        this.condition = condition;
        return this;
    }

    /**
     * Get the list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
     *
     * @return the endpointNames value
     */
    public List<String> endpointNames() {
        return this.endpointNames;
    }

    /**
     * Set the list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
     *
     * @param endpointNames the endpointNames value to set
     * @return the RouteProperties object itself.
     */
    public RouteProperties withEndpointNames(List<String> endpointNames) {
        this.endpointNames = endpointNames;
        return this;
    }

    /**
     * Get used to specify whether a route is enabled.
     *
     * @return the isEnabled value
     */
    public boolean isEnabled() {
        return this.isEnabled;
    }

    /**
     * Set used to specify whether a route is enabled.
     *
     * @param isEnabled the isEnabled value to set
     * @return the RouteProperties object itself.
     */
    public RouteProperties withIsEnabled(boolean isEnabled) {
        this.isEnabled = isEnabled;
        return this;
    }

}
