// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The IP filter rules for the IoT hub. */
@Fluent
public final class IpFilterRule {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(IpFilterRule.class);

    /*
     * The name of the IP filter rule.
     */
    @JsonProperty(value = "filterName", required = true)
    private String filterName;

    /*
     * The desired action for requests captured by this rule.
     */
    @JsonProperty(value = "action", required = true)
    private IpFilterActionType action;

    /*
     * A string that contains the IP address range in CIDR notation for the
     * rule.
     */
    @JsonProperty(value = "ipMask", required = true)
    private String ipMask;

    /**
     * Get the filterName property: The name of the IP filter rule.
     *
     * @return the filterName value.
     */
    public String getFilterName() {
        return this.filterName;
    }

    /**
     * Set the filterName property: The name of the IP filter rule.
     *
     * @param filterName the filterName value to set.
     * @return the IpFilterRule object itself.
     */
    public IpFilterRule setFilterName(String filterName) {
        this.filterName = filterName;
        return this;
    }

    /**
     * Get the action property: The desired action for requests captured by this rule.
     *
     * @return the action value.
     */
    public IpFilterActionType getAction() {
        return this.action;
    }

    /**
     * Set the action property: The desired action for requests captured by this rule.
     *
     * @param action the action value to set.
     * @return the IpFilterRule object itself.
     */
    public IpFilterRule setAction(IpFilterActionType action) {
        this.action = action;
        return this;
    }

    /**
     * Get the ipMask property: A string that contains the IP address range in CIDR notation for the rule.
     *
     * @return the ipMask value.
     */
    public String getIpMask() {
        return this.ipMask;
    }

    /**
     * Set the ipMask property: A string that contains the IP address range in CIDR notation for the rule.
     *
     * @param ipMask the ipMask value to set.
     * @return the IpFilterRule object itself.
     */
    public IpFilterRule setIpMask(String ipMask) {
        this.ipMask = ipMask;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getFilterName() == null) {
            throw logger.logExceptionAsError(
                    new IllegalArgumentException("Missing required property filterName in model IpFilterRule"));
        }
        if (getAction() == null) {
            throw logger.logExceptionAsError(
                    new IllegalArgumentException("Missing required property action in model IpFilterRule"));
        }
        if (getIpMask() == null) {
            throw logger.logExceptionAsError(
                    new IllegalArgumentException("Missing required property ipMask in model IpFilterRule"));
        }
    }
}
