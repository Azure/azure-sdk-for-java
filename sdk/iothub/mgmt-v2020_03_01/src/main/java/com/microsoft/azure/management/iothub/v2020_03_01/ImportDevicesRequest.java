/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.iothub.v2020_03_01;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Use to provide parameters when requesting an import of all devices in the
 * hub.
 */
public class ImportDevicesRequest {
    /**
     * The input blob container URI.
     */
    @JsonProperty(value = "inputBlobContainerUri", required = true)
    private String inputBlobContainerUri;

    /**
     * The output blob container URI.
     */
    @JsonProperty(value = "outputBlobContainerUri", required = true)
    private String outputBlobContainerUri;

    /**
     * The blob name to be used when importing from the provided input blob
     * container.
     */
    @JsonProperty(value = "inputBlobName")
    private String inputBlobName;

    /**
     * The blob name to use for storing the status of the import job.
     */
    @JsonProperty(value = "outputBlobName")
    private String outputBlobName;

    /**
     * Specifies authentication type being used for connecting to the storage
     * account. Possible values include: 'keyBased', 'identityBased'.
     */
    @JsonProperty(value = "authenticationType")
    private AuthenticationType authenticationType;

    /**
     * Get the input blob container URI.
     *
     * @return the inputBlobContainerUri value
     */
    public String inputBlobContainerUri() {
        return this.inputBlobContainerUri;
    }

    /**
     * Set the input blob container URI.
     *
     * @param inputBlobContainerUri the inputBlobContainerUri value to set
     * @return the ImportDevicesRequest object itself.
     */
    public ImportDevicesRequest withInputBlobContainerUri(String inputBlobContainerUri) {
        this.inputBlobContainerUri = inputBlobContainerUri;
        return this;
    }

    /**
     * Get the output blob container URI.
     *
     * @return the outputBlobContainerUri value
     */
    public String outputBlobContainerUri() {
        return this.outputBlobContainerUri;
    }

    /**
     * Set the output blob container URI.
     *
     * @param outputBlobContainerUri the outputBlobContainerUri value to set
     * @return the ImportDevicesRequest object itself.
     */
    public ImportDevicesRequest withOutputBlobContainerUri(String outputBlobContainerUri) {
        this.outputBlobContainerUri = outputBlobContainerUri;
        return this;
    }

    /**
     * Get the blob name to be used when importing from the provided input blob container.
     *
     * @return the inputBlobName value
     */
    public String inputBlobName() {
        return this.inputBlobName;
    }

    /**
     * Set the blob name to be used when importing from the provided input blob container.
     *
     * @param inputBlobName the inputBlobName value to set
     * @return the ImportDevicesRequest object itself.
     */
    public ImportDevicesRequest withInputBlobName(String inputBlobName) {
        this.inputBlobName = inputBlobName;
        return this;
    }

    /**
     * Get the blob name to use for storing the status of the import job.
     *
     * @return the outputBlobName value
     */
    public String outputBlobName() {
        return this.outputBlobName;
    }

    /**
     * Set the blob name to use for storing the status of the import job.
     *
     * @param outputBlobName the outputBlobName value to set
     * @return the ImportDevicesRequest object itself.
     */
    public ImportDevicesRequest withOutputBlobName(String outputBlobName) {
        this.outputBlobName = outputBlobName;
        return this;
    }

    /**
     * Get specifies authentication type being used for connecting to the storage account. Possible values include: 'keyBased', 'identityBased'.
     *
     * @return the authenticationType value
     */
    public AuthenticationType authenticationType() {
        return this.authenticationType;
    }

    /**
     * Set specifies authentication type being used for connecting to the storage account. Possible values include: 'keyBased', 'identityBased'.
     *
     * @param authenticationType the authenticationType value to set
     * @return the ImportDevicesRequest object itself.
     */
    public ImportDevicesRequest withAuthenticationType(AuthenticationType authenticationType) {
        this.authenticationType = authenticationType;
        return this;
    }

}
