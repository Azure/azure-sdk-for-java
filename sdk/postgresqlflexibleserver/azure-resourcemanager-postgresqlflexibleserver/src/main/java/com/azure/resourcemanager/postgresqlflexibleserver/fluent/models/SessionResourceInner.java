// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Session resource properties.
 */
@Fluent
public final class SessionResourceInner implements JsonSerializable<SessionResourceInner> {
    /*
     * the tuning session start time.
     */
    private String sessionStartTime;

    /*
     * Session id.
     */
    private String sessionId;

    /*
     * The status of the tuning session.
     */
    private String status;

    /*
     * The pre tuning aqr.
     */
    private String preTuningAqr;

    /*
     * The post tuning aqr.
     */
    private String postTuningAqr;

    /*
     * The pre tuning tps.
     */
    private String preTuningTps;

    /*
     * The post tuning tps.
     */
    private String postTuningTps;

    /**
     * Creates an instance of SessionResourceInner class.
     */
    public SessionResourceInner() {
    }

    /**
     * Get the sessionStartTime property: the tuning session start time.
     * 
     * @return the sessionStartTime value.
     */
    public String sessionStartTime() {
        return this.sessionStartTime;
    }

    /**
     * Set the sessionStartTime property: the tuning session start time.
     * 
     * @param sessionStartTime the sessionStartTime value to set.
     * @return the SessionResourceInner object itself.
     */
    public SessionResourceInner withSessionStartTime(String sessionStartTime) {
        this.sessionStartTime = sessionStartTime;
        return this;
    }

    /**
     * Get the sessionId property: Session id.
     * 
     * @return the sessionId value.
     */
    public String sessionId() {
        return this.sessionId;
    }

    /**
     * Set the sessionId property: Session id.
     * 
     * @param sessionId the sessionId value to set.
     * @return the SessionResourceInner object itself.
     */
    public SessionResourceInner withSessionId(String sessionId) {
        this.sessionId = sessionId;
        return this;
    }

    /**
     * Get the status property: The status of the tuning session.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: The status of the tuning session.
     * 
     * @param status the status value to set.
     * @return the SessionResourceInner object itself.
     */
    public SessionResourceInner withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the preTuningAqr property: The pre tuning aqr.
     * 
     * @return the preTuningAqr value.
     */
    public String preTuningAqr() {
        return this.preTuningAqr;
    }

    /**
     * Set the preTuningAqr property: The pre tuning aqr.
     * 
     * @param preTuningAqr the preTuningAqr value to set.
     * @return the SessionResourceInner object itself.
     */
    public SessionResourceInner withPreTuningAqr(String preTuningAqr) {
        this.preTuningAqr = preTuningAqr;
        return this;
    }

    /**
     * Get the postTuningAqr property: The post tuning aqr.
     * 
     * @return the postTuningAqr value.
     */
    public String postTuningAqr() {
        return this.postTuningAqr;
    }

    /**
     * Set the postTuningAqr property: The post tuning aqr.
     * 
     * @param postTuningAqr the postTuningAqr value to set.
     * @return the SessionResourceInner object itself.
     */
    public SessionResourceInner withPostTuningAqr(String postTuningAqr) {
        this.postTuningAqr = postTuningAqr;
        return this;
    }

    /**
     * Get the preTuningTps property: The pre tuning tps.
     * 
     * @return the preTuningTps value.
     */
    public String preTuningTps() {
        return this.preTuningTps;
    }

    /**
     * Set the preTuningTps property: The pre tuning tps.
     * 
     * @param preTuningTps the preTuningTps value to set.
     * @return the SessionResourceInner object itself.
     */
    public SessionResourceInner withPreTuningTps(String preTuningTps) {
        this.preTuningTps = preTuningTps;
        return this;
    }

    /**
     * Get the postTuningTps property: The post tuning tps.
     * 
     * @return the postTuningTps value.
     */
    public String postTuningTps() {
        return this.postTuningTps;
    }

    /**
     * Set the postTuningTps property: The post tuning tps.
     * 
     * @param postTuningTps the postTuningTps value to set.
     * @return the SessionResourceInner object itself.
     */
    public SessionResourceInner withPostTuningTps(String postTuningTps) {
        this.postTuningTps = postTuningTps;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("sessionStartTime", this.sessionStartTime);
        jsonWriter.writeStringField("sessionId", this.sessionId);
        jsonWriter.writeStringField("status", this.status);
        jsonWriter.writeStringField("preTuningAqr", this.preTuningAqr);
        jsonWriter.writeStringField("postTuningAqr", this.postTuningAqr);
        jsonWriter.writeStringField("preTuningTps", this.preTuningTps);
        jsonWriter.writeStringField("postTuningTps", this.postTuningTps);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SessionResourceInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SessionResourceInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SessionResourceInner.
     */
    public static SessionResourceInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SessionResourceInner deserializedSessionResourceInner = new SessionResourceInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sessionStartTime".equals(fieldName)) {
                    deserializedSessionResourceInner.sessionStartTime = reader.getString();
                } else if ("sessionId".equals(fieldName)) {
                    deserializedSessionResourceInner.sessionId = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedSessionResourceInner.status = reader.getString();
                } else if ("preTuningAqr".equals(fieldName)) {
                    deserializedSessionResourceInner.preTuningAqr = reader.getString();
                } else if ("postTuningAqr".equals(fieldName)) {
                    deserializedSessionResourceInner.postTuningAqr = reader.getString();
                } else if ("preTuningTps".equals(fieldName)) {
                    deserializedSessionResourceInner.preTuningTps = reader.getString();
                } else if ("postTuningTps".equals(fieldName)) {
                    deserializedSessionResourceInner.postTuningTps = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSessionResourceInner;
        });
    }
}
