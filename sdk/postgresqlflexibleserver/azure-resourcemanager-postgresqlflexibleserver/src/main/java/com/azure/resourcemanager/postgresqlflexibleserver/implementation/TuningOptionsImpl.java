// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.postgresqlflexibleserver.fluent.TuningOptionsClient;
import com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.TuningOptionsResourceInner;
import com.azure.resourcemanager.postgresqlflexibleserver.models.TuningOptionEnum;
import com.azure.resourcemanager.postgresqlflexibleserver.models.TuningOptions;
import com.azure.resourcemanager.postgresqlflexibleserver.models.TuningOptionsResource;

public final class TuningOptionsImpl implements TuningOptions {
    private static final ClientLogger LOGGER = new ClientLogger(TuningOptionsImpl.class);

    private final TuningOptionsClient innerClient;

    private final com.azure.resourcemanager.postgresqlflexibleserver.PostgreSqlManager serviceManager;

    public TuningOptionsImpl(TuningOptionsClient innerClient,
        com.azure.resourcemanager.postgresqlflexibleserver.PostgreSqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<TuningOptionsResource> getWithResponse(String resourceGroupName, String serverName,
        TuningOptionEnum tuningOption, Context context) {
        Response<TuningOptionsResourceInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, serverName, tuningOption, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new TuningOptionsResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public TuningOptionsResource get(String resourceGroupName, String serverName, TuningOptionEnum tuningOption) {
        TuningOptionsResourceInner inner = this.serviceClient().get(resourceGroupName, serverName, tuningOption);
        if (inner != null) {
            return new TuningOptionsResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<TuningOptionsResource> listByServer(String resourceGroupName, String serverName) {
        PagedIterable<TuningOptionsResourceInner> inner
            = this.serviceClient().listByServer(resourceGroupName, serverName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new TuningOptionsResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<TuningOptionsResource> listByServer(String resourceGroupName, String serverName,
        Context context) {
        PagedIterable<TuningOptionsResourceInner> inner
            = this.serviceClient().listByServer(resourceGroupName, serverName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new TuningOptionsResourceImpl(inner1, this.manager()));
    }

    private TuningOptionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.postgresqlflexibleserver.PostgreSqlManager manager() {
        return this.serviceManager;
    }
}
