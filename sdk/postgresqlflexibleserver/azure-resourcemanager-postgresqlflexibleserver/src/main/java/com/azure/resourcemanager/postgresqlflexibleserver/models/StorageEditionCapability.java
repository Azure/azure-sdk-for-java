// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** storage edition capability. */
@Immutable
public final class StorageEditionCapability {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(StorageEditionCapability.class);

    /*
     * storage edition name
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * The supportedStorageMB property.
     */
    @JsonProperty(value = "supportedStorageMB", access = JsonProperty.Access.WRITE_ONLY)
    private List<StorageMBCapability> supportedStorageMB;

    /*
     * The status
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private String status;

    /**
     * Get the name property: storage edition name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the supportedStorageMB property: The supportedStorageMB property.
     *
     * @return the supportedStorageMB value.
     */
    public List<StorageMBCapability> supportedStorageMB() {
        return this.supportedStorageMB;
    }

    /**
     * Get the status property: The status.
     *
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (supportedStorageMB() != null) {
            supportedStorageMB().forEach(e -> e.validate());
        }
    }
}
