// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.VirtualEndpointResourceProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Represents a virtual endpoint for a server.
 */
@Fluent
public class VirtualEndpointResourceForPatch {
    /*
     * Properties of the virtual endpoint resource.
     */
    @JsonProperty(value = "properties")
    private VirtualEndpointResourceProperties innerProperties;

    /**
     * Creates an instance of VirtualEndpointResourceForPatch class.
     */
    public VirtualEndpointResourceForPatch() {
    }

    /**
     * Get the innerProperties property: Properties of the virtual endpoint resource.
     * 
     * @return the innerProperties value.
     */
    private VirtualEndpointResourceProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the endpointType property: The endpoint type for the virtual endpoint.
     * 
     * @return the endpointType value.
     */
    public VirtualEndpointType endpointType() {
        return this.innerProperties() == null ? null : this.innerProperties().endpointType();
    }

    /**
     * Set the endpointType property: The endpoint type for the virtual endpoint.
     * 
     * @param endpointType the endpointType value to set.
     * @return the VirtualEndpointResourceForPatch object itself.
     */
    public VirtualEndpointResourceForPatch withEndpointType(VirtualEndpointType endpointType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VirtualEndpointResourceProperties();
        }
        this.innerProperties().withEndpointType(endpointType);
        return this;
    }

    /**
     * Get the members property: List of members for a virtual endpoint.
     * 
     * @return the members value.
     */
    public List<String> members() {
        return this.innerProperties() == null ? null : this.innerProperties().members();
    }

    /**
     * Set the members property: List of members for a virtual endpoint.
     * 
     * @param members the members value to set.
     * @return the VirtualEndpointResourceForPatch object itself.
     */
    public VirtualEndpointResourceForPatch withMembers(List<String> members) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VirtualEndpointResourceProperties();
        }
        this.innerProperties().withMembers(members);
        return this;
    }

    /**
     * Get the virtualEndpoints property: List of virtual endpoints for a server.
     * 
     * @return the virtualEndpoints value.
     */
    public List<String> virtualEndpoints() {
        return this.innerProperties() == null ? null : this.innerProperties().virtualEndpoints();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
