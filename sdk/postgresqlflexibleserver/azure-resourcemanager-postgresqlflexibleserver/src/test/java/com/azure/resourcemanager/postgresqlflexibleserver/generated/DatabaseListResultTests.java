// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.DatabaseInner;
import com.azure.resourcemanager.postgresqlflexibleserver.models.DatabaseListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DatabaseListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatabaseListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"charset\":\"c\",\"collation\":\"efovgmk\"},\"id\":\"leyyvx\",\"name\":\"qjpkcattpngjcrc\",\"type\":\"zsqpjhvmdajvny\"},{\"properties\":{\"charset\":\"nqecanoaeup\",\"collation\":\"yhltrpmopjmcm\"},\"id\":\"u\",\"name\":\"kthfui\",\"type\":\"aodsfcpkv\"},{\"properties\":{\"charset\":\"puozmyzydag\",\"collation\":\"axbezyiuo\"},\"id\":\"twhrdxwzywqsm\",\"name\":\"surex\",\"type\":\"moryocfsfksym\"}],\"nextLink\":\"ys\"}")
                .toObject(DatabaseListResult.class);
        Assertions.assertEquals("c", model.value().get(0).charset());
        Assertions.assertEquals("efovgmk", model.value().get(0).collation());
        Assertions.assertEquals("ys", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatabaseListResult model =
            new DatabaseListResult()
                .withValue(
                    Arrays
                        .asList(
                            new DatabaseInner().withCharset("c").withCollation("efovgmk"),
                            new DatabaseInner().withCharset("nqecanoaeup").withCollation("yhltrpmopjmcm"),
                            new DatabaseInner().withCharset("puozmyzydag").withCollation("axbezyiuo")))
                .withNextLink("ys");
        model = BinaryData.fromObject(model).toObject(DatabaseListResult.class);
        Assertions.assertEquals("c", model.value().get(0).charset());
        Assertions.assertEquals("efovgmk", model.value().get(0).collation());
        Assertions.assertEquals("ys", model.nextLink());
    }
}
