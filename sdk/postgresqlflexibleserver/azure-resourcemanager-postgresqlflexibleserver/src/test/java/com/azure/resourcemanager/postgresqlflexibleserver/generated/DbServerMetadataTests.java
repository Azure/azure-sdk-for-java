// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.postgresqlflexibleserver.models.DbServerMetadata;
import com.azure.resourcemanager.postgresqlflexibleserver.models.ServerSku;
import com.azure.resourcemanager.postgresqlflexibleserver.models.SkuTier;
import org.junit.jupiter.api.Assertions;

public final class DbServerMetadataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DbServerMetadata model = BinaryData.fromString(
            "{\"location\":\"oebwnujhemms\",\"version\":\"dkcrodt\",\"storageMb\":1997229408,\"sku\":{\"name\":\"jlfltkacjvefkdlf\",\"tier\":\"MemoryOptimized\"}}")
            .toObject(DbServerMetadata.class);
        Assertions.assertEquals("dkcrodt", model.version());
        Assertions.assertEquals(1997229408, model.storageMb());
        Assertions.assertEquals("jlfltkacjvefkdlf", model.sku().name());
        Assertions.assertEquals(SkuTier.MEMORY_OPTIMIZED, model.sku().tier());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DbServerMetadata model = new DbServerMetadata().withVersion("dkcrodt")
            .withStorageMb(1997229408)
            .withSku(new ServerSku().withName("jlfltkacjvefkdlf").withTier(SkuTier.MEMORY_OPTIMIZED));
        model = BinaryData.fromObject(model).toObject(DbServerMetadata.class);
        Assertions.assertEquals("dkcrodt", model.version());
        Assertions.assertEquals(1997229408, model.storageMb());
        Assertions.assertEquals("jlfltkacjvefkdlf", model.sku().name());
        Assertions.assertEquals(SkuTier.MEMORY_OPTIMIZED, model.sku().tier());
    }
}
