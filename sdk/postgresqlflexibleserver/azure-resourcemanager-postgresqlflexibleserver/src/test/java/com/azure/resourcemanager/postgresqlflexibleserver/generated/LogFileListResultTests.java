// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.LogFileInner;
import com.azure.resourcemanager.postgresqlflexibleserver.models.LogFileListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LogFileListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogFileListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"createdTime\":\"2021-10-31T02:18:42Z\",\"lastModifiedTime\":\"2021-04-04T17:22:28Z\",\"sizeInKb\":7989893119356760730,\"type\":\"m\",\"url\":\"d\"},\"id\":\"mmji\",\"name\":\"yeozphvwauyqncy\",\"type\":\"upkvipmdsc\"},{\"properties\":{\"createdTime\":\"2021-09-24T17:39:42Z\",\"lastModifiedTime\":\"2021-06-13T19:10:51Z\",\"sizeInKb\":7138744715268482510,\"type\":\"stotxh\",\"url\":\"ujbypelmcuvhixb\"},\"id\":\"yfwnylr\",\"name\":\"ool\",\"type\":\"ttpkiwkkbnujrywv\"}],\"nextLink\":\"lbfpncurd\"}")
            .toObject(LogFileListResult.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-31T02:18:42Z"), model.value().get(0).createdTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-04T17:22:28Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals(7989893119356760730L, model.value().get(0).sizeInKb());
        Assertions.assertEquals("m", model.value().get(0).typePropertiesType());
        Assertions.assertEquals("d", model.value().get(0).url());
        Assertions.assertEquals("lbfpncurd", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogFileListResult model = new LogFileListResult().withValue(Arrays.asList(
            new LogFileInner().withCreatedTime(OffsetDateTime.parse("2021-10-31T02:18:42Z"))
                .withLastModifiedTime(OffsetDateTime.parse("2021-04-04T17:22:28Z"))
                .withSizeInKb(7989893119356760730L)
                .withTypePropertiesType("m")
                .withUrl("d"),
            new LogFileInner().withCreatedTime(OffsetDateTime.parse("2021-09-24T17:39:42Z"))
                .withLastModifiedTime(OffsetDateTime.parse("2021-06-13T19:10:51Z"))
                .withSizeInKb(7138744715268482510L)
                .withTypePropertiesType("stotxh")
                .withUrl("ujbypelmcuvhixb")))
            .withNextLink("lbfpncurd");
        model = BinaryData.fromObject(model).toObject(LogFileListResult.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-31T02:18:42Z"), model.value().get(0).createdTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-04T17:22:28Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals(7989893119356760730L, model.value().get(0).sizeInKb());
        Assertions.assertEquals("m", model.value().get(0).typePropertiesType());
        Assertions.assertEquals("d", model.value().get(0).url());
        Assertions.assertEquals("lbfpncurd", model.nextLink());
    }
}
