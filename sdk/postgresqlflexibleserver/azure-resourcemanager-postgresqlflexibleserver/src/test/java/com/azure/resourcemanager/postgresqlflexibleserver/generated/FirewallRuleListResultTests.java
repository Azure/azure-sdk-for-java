// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.FirewallRuleInner;
import com.azure.resourcemanager.postgresqlflexibleserver.models.FirewallRuleListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FirewallRuleListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FirewallRuleListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"startIpAddress\":\"fcnihgwq\",\"endIpAddress\":\"pnedgf\"},\"id\":\"vkcvqvpkeqd\",\"name\":\"vdrhvoo\",\"type\":\"sotbob\"},{\"properties\":{\"startIpAddress\":\"dopcjwvnh\",\"endIpAddress\":\"ld\"},\"id\":\"gx\",\"name\":\"xrslpm\",\"type\":\"twuoegrpkhjwni\"}],\"nextLink\":\"sluicpdggkzz\"}")
                .toObject(FirewallRuleListResult.class);
        Assertions.assertEquals("fcnihgwq", model.value().get(0).startIpAddress());
        Assertions.assertEquals("pnedgf", model.value().get(0).endIpAddress());
        Assertions.assertEquals("sluicpdggkzz", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FirewallRuleListResult model =
            new FirewallRuleListResult()
                .withValue(
                    Arrays
                        .asList(
                            new FirewallRuleInner().withStartIpAddress("fcnihgwq").withEndIpAddress("pnedgf"),
                            new FirewallRuleInner().withStartIpAddress("dopcjwvnh").withEndIpAddress("ld")))
                .withNextLink("sluicpdggkzz");
        model = BinaryData.fromObject(model).toObject(FirewallRuleListResult.class);
        Assertions.assertEquals("fcnihgwq", model.value().get(0).startIpAddress());
        Assertions.assertEquals("pnedgf", model.value().get(0).endIpAddress());
        Assertions.assertEquals("sluicpdggkzz", model.nextLink());
    }
}
