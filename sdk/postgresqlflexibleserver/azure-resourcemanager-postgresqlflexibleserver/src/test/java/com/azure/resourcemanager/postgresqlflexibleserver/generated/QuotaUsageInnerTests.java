// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.QuotaUsageInner;
import com.azure.resourcemanager.postgresqlflexibleserver.models.NameProperty;
import org.junit.jupiter.api.Assertions;

public final class QuotaUsageInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaUsageInner model =
            BinaryData
                .fromString(
                    "{\"name\":{\"value\":\"seinqfiuf\",\"localizedValue\":\"knpirgnepttwq\"},\"limit\":3780805237352846590,\"unit\":\"fcdmqnrojlpijn\",\"currentValue\":4906118574644662043,\"id\":\"ddhcratizzr\"}")
                .toObject(QuotaUsageInner.class);
        Assertions.assertEquals("seinqfiuf", model.name().value());
        Assertions.assertEquals("knpirgnepttwq", model.name().localizedValue());
        Assertions.assertEquals(3780805237352846590L, model.limit());
        Assertions.assertEquals("fcdmqnrojlpijn", model.unit());
        Assertions.assertEquals(4906118574644662043L, model.currentValue());
        Assertions.assertEquals("ddhcratizzr", model.id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaUsageInner model =
            new QuotaUsageInner()
                .withName(new NameProperty().withValue("seinqfiuf").withLocalizedValue("knpirgnepttwq"))
                .withLimit(3780805237352846590L)
                .withUnit("fcdmqnrojlpijn")
                .withCurrentValue(4906118574644662043L)
                .withId("ddhcratizzr");
        model = BinaryData.fromObject(model).toObject(QuotaUsageInner.class);
        Assertions.assertEquals("seinqfiuf", model.name().value());
        Assertions.assertEquals("knpirgnepttwq", model.name().localizedValue());
        Assertions.assertEquals(3780805237352846590L, model.limit());
        Assertions.assertEquals("fcdmqnrojlpijn", model.unit());
        Assertions.assertEquals(4906118574644662043L, model.currentValue());
        Assertions.assertEquals("ddhcratizzr", model.id());
    }
}
