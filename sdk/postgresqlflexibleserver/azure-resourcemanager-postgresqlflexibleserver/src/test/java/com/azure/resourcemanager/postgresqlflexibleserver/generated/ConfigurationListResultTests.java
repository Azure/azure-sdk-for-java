// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ConfigurationInner;
import com.azure.resourcemanager.postgresqlflexibleserver.models.ConfigurationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ConfigurationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConfigurationListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"value\":\"nhsjcnyej\",\"description\":\"ryhtnapczwlokjy\",\"defaultValue\":\"kkvnipjox\",\"dataType\":\"Numeric\",\"allowedValues\":\"hgejspodma\",\"source\":\"zyde\",\"isDynamicConfig\":true,\"isReadOnly\":false,\"isConfigPendingRestart\":true,\"unit\":\"xinpmqnjaq\",\"documentationLink\":\"xj\"},\"id\":\"r\",\"name\":\"zvcputegjvwmfda\",\"type\":\"scmdvpjhulsuu\"},{\"properties\":{\"value\":\"jozkrwfndiod\",\"description\":\"slwejdpvw\",\"defaultValue\":\"oqpsoa\",\"dataType\":\"Numeric\",\"allowedValues\":\"zakljlahbc\",\"source\":\"ffdfdosygexpa\",\"isDynamicConfig\":true,\"isReadOnly\":true,\"isConfigPendingRestart\":false,\"unit\":\"zjhcrzevdphlx\",\"documentationLink\":\"lthqtrgqjbp\"},\"id\":\"fsinzgvfcjrwzoxx\",\"name\":\"tfell\",\"type\":\"wfzitonpeqfpjk\"}],\"nextLink\":\"xofpdvhpfxxypi\"}")
                .toObject(ConfigurationListResult.class);
        Assertions.assertEquals("nhsjcnyej", model.value().get(0).value());
        Assertions.assertEquals("zyde", model.value().get(0).source());
        Assertions.assertEquals("xofpdvhpfxxypi", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConfigurationListResult model =
            new ConfigurationListResult()
                .withValue(
                    Arrays
                        .asList(
                            new ConfigurationInner().withValue("nhsjcnyej").withSource("zyde"),
                            new ConfigurationInner().withValue("jozkrwfndiod").withSource("ffdfdosygexpa")))
                .withNextLink("xofpdvhpfxxypi");
        model = BinaryData.fromObject(model).toObject(ConfigurationListResult.class);
        Assertions.assertEquals("nhsjcnyej", model.value().get(0).value());
        Assertions.assertEquals("zyde", model.value().get(0).source());
        Assertions.assertEquals("xofpdvhpfxxypi", model.nextLink());
    }
}
