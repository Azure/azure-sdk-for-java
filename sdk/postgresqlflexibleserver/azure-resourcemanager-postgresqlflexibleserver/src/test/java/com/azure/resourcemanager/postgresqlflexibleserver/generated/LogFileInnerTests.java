// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.LogFileInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class LogFileInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogFileInner model = BinaryData.fromString(
            "{\"properties\":{\"createdTime\":\"2021-12-07T02:03:19Z\",\"lastModifiedTime\":\"2021-06-16T15:34:06Z\",\"sizeInKb\":4507882308438079300,\"type\":\"g\",\"url\":\"ujb\"},\"id\":\"omvzzbtd\",\"name\":\"qvpn\",\"type\":\"yujviylwdshfssn\"}")
            .toObject(LogFileInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-07T02:03:19Z"), model.createdTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-16T15:34:06Z"), model.lastModifiedTime());
        Assertions.assertEquals(4507882308438079300L, model.sizeInKb());
        Assertions.assertEquals("g", model.typePropertiesType());
        Assertions.assertEquals("ujb", model.url());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogFileInner model = new LogFileInner().withCreatedTime(OffsetDateTime.parse("2021-12-07T02:03:19Z"))
            .withLastModifiedTime(OffsetDateTime.parse("2021-06-16T15:34:06Z"))
            .withSizeInKb(4507882308438079300L)
            .withTypePropertiesType("g")
            .withUrl("ujb");
        model = BinaryData.fromObject(model).toObject(LogFileInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-07T02:03:19Z"), model.createdTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-16T15:34:06Z"), model.lastModifiedTime());
        Assertions.assertEquals(4507882308438079300L, model.sizeInKb());
        Assertions.assertEquals("g", model.typePropertiesType());
        Assertions.assertEquals("ujb", model.url());
    }
}
