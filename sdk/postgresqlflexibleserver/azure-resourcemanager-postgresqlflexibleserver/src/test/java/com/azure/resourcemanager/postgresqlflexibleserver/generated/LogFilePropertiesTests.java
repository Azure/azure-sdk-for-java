// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.LogFileProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class LogFilePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogFileProperties model =
            BinaryData
                .fromString(
                    "{\"createdTime\":\"2021-06-21T18:35:02Z\",\"lastModifiedTime\":\"2021-06-21T01:18:29Z\",\"sizeInKb\":8981770461637201272,\"type\":\"dgzxulucvpamrsr\",\"url\":\"zvxurisjnhny\"}")
                .toObject(LogFileProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-21T18:35:02Z"), model.createdTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-21T01:18:29Z"), model.lastModifiedTime());
        Assertions.assertEquals(8981770461637201272L, model.sizeInKb());
        Assertions.assertEquals("dgzxulucvpamrsr", model.type());
        Assertions.assertEquals("zvxurisjnhny", model.url());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogFileProperties model =
            new LogFileProperties()
                .withCreatedTime(OffsetDateTime.parse("2021-06-21T18:35:02Z"))
                .withLastModifiedTime(OffsetDateTime.parse("2021-06-21T01:18:29Z"))
                .withSizeInKb(8981770461637201272L)
                .withType("dgzxulucvpamrsr")
                .withUrl("zvxurisjnhny");
        model = BinaryData.fromObject(model).toObject(LogFileProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-21T18:35:02Z"), model.createdTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-21T01:18:29Z"), model.lastModifiedTime());
        Assertions.assertEquals(8981770461637201272L, model.sizeInKb());
        Assertions.assertEquals("dgzxulucvpamrsr", model.type());
        Assertions.assertEquals("zvxurisjnhny", model.url());
    }
}
