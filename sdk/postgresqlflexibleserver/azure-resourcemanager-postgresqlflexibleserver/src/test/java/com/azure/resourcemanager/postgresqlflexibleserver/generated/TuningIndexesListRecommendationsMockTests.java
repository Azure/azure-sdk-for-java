// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlflexibleserver.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.postgresqlflexibleserver.PostgreSqlManager;
import com.azure.resourcemanager.postgresqlflexibleserver.models.IndexRecommendationResource;
import com.azure.resourcemanager.postgresqlflexibleserver.models.RecommendationType;
import com.azure.resourcemanager.postgresqlflexibleserver.models.TuningOptionEnum;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TuningIndexesListRecommendationsMockTests {
    @Test
    public void testListRecommendations() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"initialRecommendedTime\":\"2021-08-14T01:37:51Z\",\"lastRecommendedTime\":\"2021-05-27T22:38:34Z\",\"timesRecommended\":1214046395,\"improvedQueryIds\":[1464612539790608915,8608381823862362175,5891893224233637084,7315546447064539633],\"recommendationReason\":\"tzlswvaj\",\"recommendationType\":\"DropIndex\",\"implementationDetails\":{\"method\":\"x\",\"script\":\"qzasunwqrjzfrgqh\"},\"analyzedWorkload\":{\"startTime\":\"2021-04-05T15:21:07Z\",\"endTime\":\"2021-06-25T08:11:06Z\",\"queryCount\":280737276},\"estimatedImpact\":[{\"dimensionName\":\"r\",\"unit\":\"mbpyryxamebly\",\"queryId\":5825870420723879875,\"absoluteValue\":47.90070362234346},{\"dimensionName\":\"ocxnehvsmtodl\",\"unit\":\"yapucygvoa\",\"queryId\":6485859784985209976,\"absoluteValue\":72.88003049869354},{\"dimensionName\":\"ghiee\",\"unit\":\"lgvvpaseksgbu\",\"queryId\":6893190449137526055,\"absoluteValue\":92.07427386165983}],\"details\":{\"databaseName\":\"gaqi\",\"schema\":\"rpiwrqofulo\",\"table\":\"jnlex\",\"indexType\":\"cbjpibkephuu\",\"indexName\":\"rctat\",\"indexColumns\":[\"ntqpbr\",\"cyrduczkg\",\"fxyfsrucvcrrpcj\"],\"includedColumns\":[\"st\",\"jeaq\"]}},\"id\":\"mvvfko\",\"name\":\"mlghktuidvrmazlp\",\"type\":\"wwexymzvlazipbh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PostgreSqlManager manager = PostgreSqlManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<IndexRecommendationResource> response = manager.tuningIndexes()
            .listRecommendations("z", "izvg", TuningOptionEnum.INDEX, RecommendationType.CREATE_INDEX,
                com.azure.core.util.Context.NONE);

    }
}
