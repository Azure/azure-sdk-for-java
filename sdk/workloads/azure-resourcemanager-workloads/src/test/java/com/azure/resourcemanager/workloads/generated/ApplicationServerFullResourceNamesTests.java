// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloads.models.ApplicationServerFullResourceNames;
import com.azure.resourcemanager.workloads.models.VirtualMachineResourceNames;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ApplicationServerFullResourceNamesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApplicationServerFullResourceNames model =
            BinaryData
                .fromString(
                    "{\"virtualMachines\":[{\"vmName\":\"p\",\"hostName\":\"cjaesgvvs\",\"networkInterfaces\":[],\"osDiskName\":\"jguq\",\"dataDiskNames\":{\"emdwzrmuhapfc\":[\"gzlvdnkfxu\"],\"elvezrypq\":[\"psqxq\",\"psvuoymgc\"],\"erqwkyhkobopg\":[\"feo\"],\"fq\":[\"dkow\",\"pbqpcrfkbwccsn\",\"vcdwxlpqekftn\",\"htjsying\"]}},{\"vmName\":\"mtdh\",\"hostName\":\"dvypgikdgsz\",\"networkInterfaces\":[],\"osDiskName\":\"irryuzhlh\",\"dataDiskNames\":{\"ioolvrwxkvtkkgll\":[\"rvqqaatj\",\"nrvgoupmfiibfgg\"],\"wz\":[\"jygvjayvbl\",\"hvkzuh\",\"xvvy\",\"gsopbyrqufegxu\"],\"jejveg\":[\"nhlmctlpdng\",\"tvgbmhrixkwmy\"]}},{\"vmName\":\"bpnaixexccbdre\",\"hostName\":\"hcexdrrvqa\",\"networkInterfaces\":[],\"osDiskName\":\"htpwij\",\"dataDiskNames\":{\"waekrrjreafxtsgu\":[\"svfycxzbfv\",\"owvrvmtgjqppyos\",\"ronzmyhgfip\",\"sxkm\"],\"elfk\":[\"jglikkxwslolb\",\"pvuzlmv\"]}},{\"vmName\":\"plcrpwjxeznoig\",\"hostName\":\"njwmwkpnbsazejj\",\"networkInterfaces\":[],\"osDiskName\":\"gfhsxttaugzxn\",\"dataDiskNames\":{\"ou\":[\"pxdtnkdmkq\",\"jlwuenvrkp\"],\"qttezlwfffiakpjp\":[\"bre\",\"qaaysjkixqt\"],\"edltmmjihyeozp\":[\"m\"],\"qncygupkvi\":[\"wau\"]}}],\"availabilitySetName\":\"dscwxqupevzhf\"}")
                .toObject(ApplicationServerFullResourceNames.class);
        Assertions.assertEquals("p", model.virtualMachines().get(0).vmName());
        Assertions.assertEquals("cjaesgvvs", model.virtualMachines().get(0).hostname());
        Assertions.assertEquals("jguq", model.virtualMachines().get(0).osDiskName());
        Assertions
            .assertEquals("gzlvdnkfxu", model.virtualMachines().get(0).dataDiskNames().get("emdwzrmuhapfc").get(0));
        Assertions.assertEquals("dscwxqupevzhf", model.availabilitySetName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApplicationServerFullResourceNames model =
            new ApplicationServerFullResourceNames()
                .withVirtualMachines(
                    Arrays
                        .asList(
                            new VirtualMachineResourceNames()
                                .withVmName("p")
                                .withHostname("cjaesgvvs")
                                .withNetworkInterfaces(Arrays.asList())
                                .withOsDiskName("jguq")
                                .withDataDiskNames(
                                    mapOf(
                                        "emdwzrmuhapfc",
                                        Arrays.asList("gzlvdnkfxu"),
                                        "elvezrypq",
                                        Arrays.asList("psqxq", "psvuoymgc"),
                                        "erqwkyhkobopg",
                                        Arrays.asList("feo"),
                                        "fq",
                                        Arrays.asList("dkow", "pbqpcrfkbwccsn", "vcdwxlpqekftn", "htjsying"))),
                            new VirtualMachineResourceNames()
                                .withVmName("mtdh")
                                .withHostname("dvypgikdgsz")
                                .withNetworkInterfaces(Arrays.asList())
                                .withOsDiskName("irryuzhlh")
                                .withDataDiskNames(
                                    mapOf(
                                        "ioolvrwxkvtkkgll",
                                        Arrays.asList("rvqqaatj", "nrvgoupmfiibfgg"),
                                        "wz",
                                        Arrays.asList("jygvjayvbl", "hvkzuh", "xvvy", "gsopbyrqufegxu"),
                                        "jejveg",
                                        Arrays.asList("nhlmctlpdng", "tvgbmhrixkwmy"))),
                            new VirtualMachineResourceNames()
                                .withVmName("bpnaixexccbdre")
                                .withHostname("hcexdrrvqa")
                                .withNetworkInterfaces(Arrays.asList())
                                .withOsDiskName("htpwij")
                                .withDataDiskNames(
                                    mapOf(
                                        "waekrrjreafxtsgu",
                                        Arrays.asList("svfycxzbfv", "owvrvmtgjqppyos", "ronzmyhgfip", "sxkm"),
                                        "elfk",
                                        Arrays.asList("jglikkxwslolb", "pvuzlmv"))),
                            new VirtualMachineResourceNames()
                                .withVmName("plcrpwjxeznoig")
                                .withHostname("njwmwkpnbsazejj")
                                .withNetworkInterfaces(Arrays.asList())
                                .withOsDiskName("gfhsxttaugzxn")
                                .withDataDiskNames(
                                    mapOf(
                                        "ou",
                                        Arrays.asList("pxdtnkdmkq", "jlwuenvrkp"),
                                        "qttezlwfffiakpjp",
                                        Arrays.asList("bre", "qaaysjkixqt"),
                                        "edltmmjihyeozp",
                                        Arrays.asList("m"),
                                        "qncygupkvi",
                                        Arrays.asList("wau")))))
                .withAvailabilitySetName("dscwxqupevzhf");
        model = BinaryData.fromObject(model).toObject(ApplicationServerFullResourceNames.class);
        Assertions.assertEquals("p", model.virtualMachines().get(0).vmName());
        Assertions.assertEquals("cjaesgvvs", model.virtualMachines().get(0).hostname());
        Assertions.assertEquals("jguq", model.virtualMachines().get(0).osDiskName());
        Assertions
            .assertEquals("gzlvdnkfxu", model.virtualMachines().get(0).dataDiskNames().get("emdwzrmuhapfc").get(0));
        Assertions.assertEquals("dscwxqupevzhf", model.availabilitySetName());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
