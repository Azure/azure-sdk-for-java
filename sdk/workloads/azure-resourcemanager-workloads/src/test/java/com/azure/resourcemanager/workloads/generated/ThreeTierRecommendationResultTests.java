// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloads.models.ThreeTierRecommendationResult;
import org.junit.jupiter.api.Assertions;

public final class ThreeTierRecommendationResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ThreeTierRecommendationResult model = BinaryData.fromString(
            "{\"deploymentType\":\"ThreeTier\",\"dbVmSku\":\"q\",\"databaseInstanceCount\":3975020961959459727,\"centralServerVmSku\":\"rsbfovasrruvw\",\"centralServerInstanceCount\":5986857107017021380,\"applicationServerVmSku\":\"sub\",\"applicationServerInstanceCount\":2319304863641210663}")
            .toObject(ThreeTierRecommendationResult.class);
        Assertions.assertEquals("q", model.dbVmSku());
        Assertions.assertEquals(3975020961959459727L, model.databaseInstanceCount());
        Assertions.assertEquals("rsbfovasrruvw", model.centralServerVmSku());
        Assertions.assertEquals(5986857107017021380L, model.centralServerInstanceCount());
        Assertions.assertEquals("sub", model.applicationServerVmSku());
        Assertions.assertEquals(2319304863641210663L, model.applicationServerInstanceCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ThreeTierRecommendationResult model = new ThreeTierRecommendationResult().withDbVmSku("q")
            .withDatabaseInstanceCount(3975020961959459727L)
            .withCentralServerVmSku("rsbfovasrruvw")
            .withCentralServerInstanceCount(5986857107017021380L)
            .withApplicationServerVmSku("sub")
            .withApplicationServerInstanceCount(2319304863641210663L);
        model = BinaryData.fromObject(model).toObject(ThreeTierRecommendationResult.class);
        Assertions.assertEquals("q", model.dbVmSku());
        Assertions.assertEquals(3975020961959459727L, model.databaseInstanceCount());
        Assertions.assertEquals("rsbfovasrruvw", model.centralServerVmSku());
        Assertions.assertEquals(5986857107017021380L, model.centralServerInstanceCount());
        Assertions.assertEquals("sub", model.applicationServerVmSku());
        Assertions.assertEquals(2319304863641210663L, model.applicationServerInstanceCount());
    }
}
