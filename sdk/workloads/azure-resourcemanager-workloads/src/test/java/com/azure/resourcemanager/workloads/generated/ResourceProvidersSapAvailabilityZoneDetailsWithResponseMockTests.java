// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloads.WorkloadsManager;
import com.azure.resourcemanager.workloads.models.SapAvailabilityZoneDetailsRequest;
import com.azure.resourcemanager.workloads.models.SapAvailabilityZoneDetailsResult;
import com.azure.resourcemanager.workloads.models.SapDatabaseType;
import com.azure.resourcemanager.workloads.models.SapProductType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersSapAvailabilityZoneDetailsWithResponseMockTests {
    @Test
    public void testSapAvailabilityZoneDetailsWithResponse() throws Exception {
        String responseStr
            = "{\"availabilityZonePairs\":[{\"zoneA\":1750720875062450600,\"zoneB\":4417563431245742652}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadsManager manager = WorkloadsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SapAvailabilityZoneDetailsResult response = manager.resourceProviders()
            .sapAvailabilityZoneDetailsWithResponse("iplt",
                new SapAvailabilityZoneDetailsRequest().withAppLocation("n")
                    .withSapProduct(SapProductType.ECC)
                    .withDatabaseType(SapDatabaseType.HANA),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(1750720875062450600L, response.availabilityZonePairs().get(0).zoneA());
        Assertions.assertEquals(4417563431245742652L, response.availabilityZonePairs().get(0).zoneB());
    }
}
