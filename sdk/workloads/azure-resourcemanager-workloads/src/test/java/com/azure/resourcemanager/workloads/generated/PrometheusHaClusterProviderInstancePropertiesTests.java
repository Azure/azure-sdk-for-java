// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloads.models.PrometheusHaClusterProviderInstanceProperties;
import com.azure.resourcemanager.workloads.models.SslPreference;
import org.junit.jupiter.api.Assertions;

public final class PrometheusHaClusterProviderInstancePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrometheusHaClusterProviderInstanceProperties model = BinaryData.fromString(
            "{\"providerType\":\"PrometheusHaCluster\",\"prometheusUrl\":\"opqgikyzirtxdyux\",\"hostname\":\"jntpsewgioilqu\",\"sid\":\"ydxtqm\",\"clusterName\":\"ox\",\"sslPreference\":\"ServerCertificate\",\"sslCertificateUri\":\"ufhyaomtbgh\"}")
            .toObject(PrometheusHaClusterProviderInstanceProperties.class);
        Assertions.assertEquals("opqgikyzirtxdyux", model.prometheusUrl());
        Assertions.assertEquals("jntpsewgioilqu", model.hostname());
        Assertions.assertEquals("ydxtqm", model.sid());
        Assertions.assertEquals("ox", model.clusterName());
        Assertions.assertEquals(SslPreference.SERVER_CERTIFICATE, model.sslPreference());
        Assertions.assertEquals("ufhyaomtbgh", model.sslCertificateUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrometheusHaClusterProviderInstanceProperties model
            = new PrometheusHaClusterProviderInstanceProperties().withPrometheusUrl("opqgikyzirtxdyux")
                .withHostname("jntpsewgioilqu")
                .withSid("ydxtqm")
                .withClusterName("ox")
                .withSslPreference(SslPreference.SERVER_CERTIFICATE)
                .withSslCertificateUri("ufhyaomtbgh");
        model = BinaryData.fromObject(model).toObject(PrometheusHaClusterProviderInstanceProperties.class);
        Assertions.assertEquals("opqgikyzirtxdyux", model.prometheusUrl());
        Assertions.assertEquals("jntpsewgioilqu", model.hostname());
        Assertions.assertEquals("ydxtqm", model.sid());
        Assertions.assertEquals("ox", model.clusterName());
        Assertions.assertEquals(SslPreference.SERVER_CERTIFICATE, model.sslPreference());
        Assertions.assertEquals("ufhyaomtbgh", model.sslCertificateUri());
    }
}
