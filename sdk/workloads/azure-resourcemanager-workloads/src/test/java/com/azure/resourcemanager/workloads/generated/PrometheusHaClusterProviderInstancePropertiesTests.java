// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloads.models.PrometheusHaClusterProviderInstanceProperties;
import com.azure.resourcemanager.workloads.models.SslPreference;
import org.junit.jupiter.api.Assertions;

public final class PrometheusHaClusterProviderInstancePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrometheusHaClusterProviderInstanceProperties model =
            BinaryData
                .fromString(
                    "{\"providerType\":\"PrometheusHaCluster\",\"prometheusUrl\":\"kkqfqjbvle\",\"hostname\":\"fmluiqtqzfavyvn\",\"sid\":\"ybar\",\"clusterName\":\"uayjkqa\",\"sslPreference\":\"RootCertificate\",\"sslCertificateUri\":\"slesjcbhernnt\"}")
                .toObject(PrometheusHaClusterProviderInstanceProperties.class);
        Assertions.assertEquals("kkqfqjbvle", model.prometheusUrl());
        Assertions.assertEquals("fmluiqtqzfavyvn", model.hostname());
        Assertions.assertEquals("ybar", model.sid());
        Assertions.assertEquals("uayjkqa", model.clusterName());
        Assertions.assertEquals(SslPreference.ROOT_CERTIFICATE, model.sslPreference());
        Assertions.assertEquals("slesjcbhernnt", model.sslCertificateUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrometheusHaClusterProviderInstanceProperties model =
            new PrometheusHaClusterProviderInstanceProperties()
                .withPrometheusUrl("kkqfqjbvle")
                .withHostname("fmluiqtqzfavyvn")
                .withSid("ybar")
                .withClusterName("uayjkqa")
                .withSslPreference(SslPreference.ROOT_CERTIFICATE)
                .withSslCertificateUri("slesjcbhernnt");
        model = BinaryData.fromObject(model).toObject(PrometheusHaClusterProviderInstanceProperties.class);
        Assertions.assertEquals("kkqfqjbvle", model.prometheusUrl());
        Assertions.assertEquals("fmluiqtqzfavyvn", model.hostname());
        Assertions.assertEquals("ybar", model.sid());
        Assertions.assertEquals("uayjkqa", model.clusterName());
        Assertions.assertEquals(SslPreference.ROOT_CERTIFICATE, model.sslPreference());
        Assertions.assertEquals("slesjcbhernnt", model.sslCertificateUri());
    }
}
