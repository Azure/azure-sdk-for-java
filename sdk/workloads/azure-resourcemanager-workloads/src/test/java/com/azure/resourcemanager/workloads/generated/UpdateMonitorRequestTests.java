// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloads.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.workloads.models.UpdateMonitorRequest;
import com.azure.resourcemanager.workloads.models.UserAssignedIdentity;
import com.azure.resourcemanager.workloads.models.UserAssignedServiceIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class UpdateMonitorRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateMonitorRequest model =
            BinaryData
                .fromString(
                    "{\"tags\":{\"hxsrzdzucersc\":\"lylpstdb\",\"iwjmygtdssls\":\"ntnev\",\"emwabnet\":\"tmweriofzpyq\"},\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"d\":{\"principalId\":\"3521d407-d54a-42ec-9e8c-fb16405b26c7\",\"clientId\":\"9e888b0b-a720-480b-8b2d-a013a2da9fcd\"},\"wiwubm\":{\"principalId\":\"64fafe0a-8831-43d5-9ad8-b3da2b7edf38\",\"clientId\":\"12778276-16c9-47c6-a0c8-50d81e07f320\"},\"esl\":{\"principalId\":\"91a9f724-8f74-4037-996e-4e8ab340d42a\",\"clientId\":\"52747258-c3c1-4376-8a58-6362e8980250\"}}}}")
                .toObject(UpdateMonitorRequest.class);
        Assertions.assertEquals("lylpstdb", model.tags().get("hxsrzdzucersc"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateMonitorRequest model =
            new UpdateMonitorRequest()
                .withTags(mapOf("hxsrzdzucersc", "lylpstdb", "iwjmygtdssls", "ntnev", "emwabnet", "tmweriofzpyq"))
                .withIdentity(
                    new UserAssignedServiceIdentity()
                        .withType(ManagedServiceIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentities(
                            mapOf(
                                "d",
                                new UserAssignedIdentity(),
                                "wiwubm",
                                new UserAssignedIdentity(),
                                "esl",
                                new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(UpdateMonitorRequest.class);
        Assertions.assertEquals("lylpstdb", model.tags().get("hxsrzdzucersc"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
