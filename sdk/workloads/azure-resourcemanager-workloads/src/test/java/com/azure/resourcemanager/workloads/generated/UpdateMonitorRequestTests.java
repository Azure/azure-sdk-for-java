// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloads.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.workloads.models.UpdateMonitorRequest;
import com.azure.resourcemanager.workloads.models.UserAssignedIdentity;
import com.azure.resourcemanager.workloads.models.UserAssignedServiceIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class UpdateMonitorRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateMonitorRequest model = BinaryData.fromString(
            "{\"tags\":{\"yyazttbt\":\"tsthsucocm\",\"ckzywbiexzfeyue\":\"wrqpue\",\"zyoxaepdkzjan\":\"xibxujwbhqwalm\",\"hdwbavxbniwdjs\":\"ux\"},\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{\"gnxytxhpzxbz\":{\"principalId\":\"0724dce4-a136-4915-ab23-a149329124cf\",\"clientId\":\"347cc763-3cb2-4c87-8325-1a59bc61be34\"},\"abgl\":{\"principalId\":\"84739e4c-073d-4bfa-8034-fe92b44d315c\",\"clientId\":\"d00e3780-463e-48aa-b0ef-34717178c41e\"},\"xwtctyqiklbbovpl\":{\"principalId\":\"d3cbd74c-0bcc-4bba-a797-2cce7f9fd81e\",\"clientId\":\"736a8164-e970-4fe4-92fe-961492cce3f8\"}}}}")
            .toObject(UpdateMonitorRequest.class);
        Assertions.assertEquals("tsthsucocm", model.tags().get("yyazttbt"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateMonitorRequest model = new UpdateMonitorRequest()
            .withTags(mapOf("yyazttbt", "tsthsucocm", "ckzywbiexzfeyue", "wrqpue", "zyoxaepdkzjan", "xibxujwbhqwalm",
                "hdwbavxbniwdjs", "ux"))
            .withIdentity(new UserAssignedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(mapOf("gnxytxhpzxbz", new UserAssignedIdentity(), "abgl",
                    new UserAssignedIdentity(), "xwtctyqiklbbovpl", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(UpdateMonitorRequest.class);
        Assertions.assertEquals("tsthsucocm", model.tags().get("yyazttbt"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
