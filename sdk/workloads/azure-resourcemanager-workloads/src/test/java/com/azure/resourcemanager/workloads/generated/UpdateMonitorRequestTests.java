// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloads.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.workloads.models.UpdateMonitorRequest;
import com.azure.resourcemanager.workloads.models.UserAssignedIdentity;
import com.azure.resourcemanager.workloads.models.UserAssignedServiceIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class UpdateMonitorRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateMonitorRequest model = BinaryData.fromString(
            "{\"tags\":{\"yyazttbt\":\"tsthsucocm\",\"ckzywbiexzfeyue\":\"wrqpue\",\"zyoxaepdkzjan\":\"xibxujwbhqwalm\",\"hdwbavxbniwdjs\":\"ux\"},\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{\"gnxytxhpzxbz\":{\"principalId\":\"ba871519-5572-4f8c-8448-a2f7636b596e\",\"clientId\":\"dde32a97-1156-41cb-8254-02d1702195cf\"},\"abgl\":{\"principalId\":\"ca2b47b2-d8be-436f-88bb-d29623dcb79d\",\"clientId\":\"6a6b22fc-c872-4fe0-b174-3d066074a562\"},\"xwtctyqiklbbovpl\":{\"principalId\":\"f770c563-ce27-4629-9150-ab5b010cfafc\",\"clientId\":\"57bbb2d4-15fe-418f-a69f-0bbddc987c80\"}}}}")
            .toObject(UpdateMonitorRequest.class);
        Assertions.assertEquals("tsthsucocm", model.tags().get("yyazttbt"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateMonitorRequest model = new UpdateMonitorRequest()
            .withTags(mapOf("yyazttbt", "tsthsucocm", "ckzywbiexzfeyue", "wrqpue", "zyoxaepdkzjan", "xibxujwbhqwalm",
                "hdwbavxbniwdjs", "ux"))
            .withIdentity(new UserAssignedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(mapOf("gnxytxhpzxbz", new UserAssignedIdentity(), "abgl",
                    new UserAssignedIdentity(), "xwtctyqiklbbovpl", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(UpdateMonitorRequest.class);
        Assertions.assertEquals("tsthsucocm", model.tags().get("yyazttbt"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
