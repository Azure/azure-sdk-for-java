// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloads.WorkloadsManager;
import com.azure.resourcemanager.workloads.models.SapDatabaseScaleMethod;
import com.azure.resourcemanager.workloads.models.SapDatabaseType;
import com.azure.resourcemanager.workloads.models.SapDeploymentType;
import com.azure.resourcemanager.workloads.models.SapEnvironmentType;
import com.azure.resourcemanager.workloads.models.SapHighAvailabilityType;
import com.azure.resourcemanager.workloads.models.SapProductType;
import com.azure.resourcemanager.workloads.models.SapSizingRecommendationRequest;
import com.azure.resourcemanager.workloads.models.SapSizingRecommendationResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersSapSizingRecommendationsWithResponseMockTests {
    @Test
    public void testSapSizingRecommendationsWithResponse() throws Exception {
        String responseStr = "{\"deploymentType\":\"SapSizingRecommendationResult\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadsManager manager = WorkloadsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SapSizingRecommendationResult response = manager.resourceProviders()
            .sapSizingRecommendationsWithResponse("cy",
                new SapSizingRecommendationRequest().withAppLocation("wzdgirujbzbo")
                    .withEnvironment(SapEnvironmentType.NON_PROD)
                    .withSapProduct(SapProductType.ECC)
                    .withDeploymentType(SapDeploymentType.SINGLE_SERVER)
                    .withSaps(6000224956437244678L)
                    .withDbMemory(6475026819418072250L)
                    .withDatabaseType(SapDatabaseType.HANA)
                    .withDbScaleMethod(SapDatabaseScaleMethod.SCALE_UP)
                    .withHighAvailabilityType(SapHighAvailabilityType.AVAILABILITY_ZONE),
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
