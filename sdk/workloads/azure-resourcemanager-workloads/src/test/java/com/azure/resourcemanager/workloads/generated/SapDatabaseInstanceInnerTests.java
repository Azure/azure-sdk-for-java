// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloads.fluent.models.SapDatabaseInstanceInner;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SapDatabaseInstanceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapDatabaseInstanceInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"subnet\":\"mvxi\",\"databaseSid\":\"uugidyjrrfby\",\"databaseType\":\"svexcsonpclhoco\",\"ipAddress\":\"lkevle\",\"loadBalancerDetails\":{\"id\":\"fbuhfmvfaxkffe\"},\"vmDetails\":[{\"virtualMachineId\":\"lvmezyvshxmzsbbz\",\"status\":\"Stopping\",\"storageDetails\":[]}],\"status\":\"PartiallyRunning\",\"provisioningState\":\"Updating\",\"errors\":{}},\"location\":\"vjxxjnsp\",\"tags\":{\"nkoukn\":\"tko\",\"ngkpocipazy\":\"udwtiukbl\",\"gukgjnpiucgygevq\":\"o\"},\"id\":\"ntypmrbpizcdrqj\",\"name\":\"dpydn\",\"type\":\"yhxdeoejzicwi\"}")
                .toObject(SapDatabaseInstanceInner.class);
        Assertions.assertEquals("vjxxjnsp", model.location());
        Assertions.assertEquals("tko", model.tags().get("nkoukn"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SapDatabaseInstanceInner model =
            new SapDatabaseInstanceInner()
                .withLocation("vjxxjnsp")
                .withTags(mapOf("nkoukn", "tko", "ngkpocipazy", "udwtiukbl", "gukgjnpiucgygevq", "o"));
        model = BinaryData.fromObject(model).toObject(SapDatabaseInstanceInner.class);
        Assertions.assertEquals("vjxxjnsp", model.location());
        Assertions.assertEquals("tko", model.tags().get("nkoukn"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
