// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** File share profile. */
@Fluent
public final class FileshareProfile {
    /*
     * Share type
     */
    @JsonProperty(value = "shareType", required = true)
    private FileShareType shareType;

    /*
     * File share backing storage type
     */
    @JsonProperty(value = "storageType", required = true)
    private FileShareStorageType storageType;

    /*
     * File share size in GB
     */
    @JsonProperty(value = "shareSizeInGB")
    private Long shareSizeInGB;

    /*
     * File share storage resource id
     */
    @JsonProperty(value = "storageResourceId", access = JsonProperty.Access.WRITE_ONLY)
    private String storageResourceId;

    /*
     * File share name
     */
    @JsonProperty(value = "shareName", access = JsonProperty.Access.WRITE_ONLY)
    private String shareName;

    /**
     * Get the shareType property: Share type.
     *
     * @return the shareType value.
     */
    public FileShareType shareType() {
        return this.shareType;
    }

    /**
     * Set the shareType property: Share type.
     *
     * @param shareType the shareType value to set.
     * @return the FileshareProfile object itself.
     */
    public FileshareProfile withShareType(FileShareType shareType) {
        this.shareType = shareType;
        return this;
    }

    /**
     * Get the storageType property: File share backing storage type.
     *
     * @return the storageType value.
     */
    public FileShareStorageType storageType() {
        return this.storageType;
    }

    /**
     * Set the storageType property: File share backing storage type.
     *
     * @param storageType the storageType value to set.
     * @return the FileshareProfile object itself.
     */
    public FileshareProfile withStorageType(FileShareStorageType storageType) {
        this.storageType = storageType;
        return this;
    }

    /**
     * Get the shareSizeInGB property: File share size in GB.
     *
     * @return the shareSizeInGB value.
     */
    public Long shareSizeInGB() {
        return this.shareSizeInGB;
    }

    /**
     * Set the shareSizeInGB property: File share size in GB.
     *
     * @param shareSizeInGB the shareSizeInGB value to set.
     * @return the FileshareProfile object itself.
     */
    public FileshareProfile withShareSizeInGB(Long shareSizeInGB) {
        this.shareSizeInGB = shareSizeInGB;
        return this;
    }

    /**
     * Get the storageResourceId property: File share storage resource id.
     *
     * @return the storageResourceId value.
     */
    public String storageResourceId() {
        return this.storageResourceId;
    }

    /**
     * Get the shareName property: File share name.
     *
     * @return the shareName value.
     */
    public String shareName() {
        return this.shareName;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (shareType() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property shareType in model FileshareProfile"));
        }
        if (storageType() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property storageType in model FileshareProfile"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(FileshareProfile.class);
}
