// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.workloads.models.SapAvailabilityZonePair;
import java.io.IOException;
import java.util.List;

/**
 * The list of supported availability zone pairs which are part of SAP HA deployment.
 */
@Fluent
public final class SapAvailabilityZoneDetailsResultInner
    implements JsonSerializable<SapAvailabilityZoneDetailsResultInner> {
    /*
     * Gets the list of availability zone pairs.
     */
    private List<SapAvailabilityZonePair> availabilityZonePairs;

    /**
     * Creates an instance of SapAvailabilityZoneDetailsResultInner class.
     */
    public SapAvailabilityZoneDetailsResultInner() {
    }

    /**
     * Get the availabilityZonePairs property: Gets the list of availability zone pairs.
     * 
     * @return the availabilityZonePairs value.
     */
    public List<SapAvailabilityZonePair> availabilityZonePairs() {
        return this.availabilityZonePairs;
    }

    /**
     * Set the availabilityZonePairs property: Gets the list of availability zone pairs.
     * 
     * @param availabilityZonePairs the availabilityZonePairs value to set.
     * @return the SapAvailabilityZoneDetailsResultInner object itself.
     */
    public SapAvailabilityZoneDetailsResultInner
        withAvailabilityZonePairs(List<SapAvailabilityZonePair> availabilityZonePairs) {
        this.availabilityZonePairs = availabilityZonePairs;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (availabilityZonePairs() != null) {
            availabilityZonePairs().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("availabilityZonePairs", this.availabilityZonePairs,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SapAvailabilityZoneDetailsResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SapAvailabilityZoneDetailsResultInner if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SapAvailabilityZoneDetailsResultInner.
     */
    public static SapAvailabilityZoneDetailsResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SapAvailabilityZoneDetailsResultInner deserializedSapAvailabilityZoneDetailsResultInner
                = new SapAvailabilityZoneDetailsResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("availabilityZonePairs".equals(fieldName)) {
                    List<SapAvailabilityZonePair> availabilityZonePairs
                        = reader.readArray(reader1 -> SapAvailabilityZonePair.fromJson(reader1));
                    deserializedSapAvailabilityZoneDetailsResultInner.availabilityZonePairs = availabilityZonePairs;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSapAvailabilityZoneDetailsResultInner;
        });
    }
}
