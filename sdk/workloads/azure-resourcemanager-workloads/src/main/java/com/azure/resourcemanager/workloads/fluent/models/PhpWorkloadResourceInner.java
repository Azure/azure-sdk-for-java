// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.workloads.models.BackupProfile;
import com.azure.resourcemanager.workloads.models.CacheProfile;
import com.azure.resourcemanager.workloads.models.DatabaseProfile;
import com.azure.resourcemanager.workloads.models.FileshareProfile;
import com.azure.resourcemanager.workloads.models.ManagedRGConfiguration;
import com.azure.resourcemanager.workloads.models.NetworkProfile;
import com.azure.resourcemanager.workloads.models.NodeProfile;
import com.azure.resourcemanager.workloads.models.PhpProfile;
import com.azure.resourcemanager.workloads.models.PhpWorkloadProvisioningState;
import com.azure.resourcemanager.workloads.models.PhpWorkloadResourceIdentity;
import com.azure.resourcemanager.workloads.models.SearchProfile;
import com.azure.resourcemanager.workloads.models.SiteProfile;
import com.azure.resourcemanager.workloads.models.Sku;
import com.azure.resourcemanager.workloads.models.UserProfile;
import com.azure.resourcemanager.workloads.models.VmssNodesProfile;
import com.azure.resourcemanager.workloads.models.WorkloadKind;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Php workload resource. */
@Fluent
public final class PhpWorkloadResourceInner extends Resource {
    /*
     * Resource properties
     */
    @JsonProperty(value = "properties")
    private PhpWorkloadResourceProperties innerProperties;

    /*
     * Indicates which kind of php workload this resource represent e.g
     * WordPress
     */
    @JsonProperty(value = "kind", required = true)
    private WorkloadKind kind;

    /*
     * Php workloads SKU
     */
    @JsonProperty(value = "sku")
    private Sku sku;

    /*
     * Identity for the resource. Currently not supported
     */
    @JsonProperty(value = "identity")
    private PhpWorkloadResourceIdentity identity;

    /**
     * Get the innerProperties property: Resource properties.
     *
     * @return the innerProperties value.
     */
    private PhpWorkloadResourceProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the kind property: Indicates which kind of php workload this resource represent e.g WordPress.
     *
     * @return the kind value.
     */
    public WorkloadKind kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Indicates which kind of php workload this resource represent e.g WordPress.
     *
     * @param kind the kind value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withKind(WorkloadKind kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the sku property: Php workloads SKU.
     *
     * @return the sku value.
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: Php workloads SKU.
     *
     * @param sku the sku value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the identity property: Identity for the resource. Currently not supported.
     *
     * @return the identity value.
     */
    public PhpWorkloadResourceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: Identity for the resource. Currently not supported.
     *
     * @param identity the identity value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withIdentity(PhpWorkloadResourceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PhpWorkloadResourceInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PhpWorkloadResourceInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the appLocation property: The infra resources for PHP workload will be created in this location.
     *
     * @return the appLocation value.
     */
    public String appLocation() {
        return this.innerProperties() == null ? null : this.innerProperties().appLocation();
    }

    /**
     * Set the appLocation property: The infra resources for PHP workload will be created in this location.
     *
     * @param appLocation the appLocation value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withAppLocation(String appLocation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withAppLocation(appLocation);
        return this;
    }

    /**
     * Get the managedResourceGroupConfiguration property: Managed resource group configuration of the workload.
     *
     * @return the managedResourceGroupConfiguration value.
     */
    public ManagedRGConfiguration managedResourceGroupConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().managedResourceGroupConfiguration();
    }

    /**
     * Set the managedResourceGroupConfiguration property: Managed resource group configuration of the workload.
     *
     * @param managedResourceGroupConfiguration the managedResourceGroupConfiguration value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withManagedResourceGroupConfiguration(
        ManagedRGConfiguration managedResourceGroupConfiguration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withManagedResourceGroupConfiguration(managedResourceGroupConfiguration);
        return this;
    }

    /**
     * Get the adminUserProfile property: Admin user profile used for VM and VMSS.
     *
     * @return the adminUserProfile value.
     */
    public UserProfile adminUserProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().adminUserProfile();
    }

    /**
     * Set the adminUserProfile property: Admin user profile used for VM and VMSS.
     *
     * @param adminUserProfile the adminUserProfile value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withAdminUserProfile(UserProfile adminUserProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withAdminUserProfile(adminUserProfile);
        return this;
    }

    /**
     * Get the webNodesProfile property: VMSS web nodes profile.
     *
     * @return the webNodesProfile value.
     */
    public VmssNodesProfile webNodesProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().webNodesProfile();
    }

    /**
     * Set the webNodesProfile property: VMSS web nodes profile.
     *
     * @param webNodesProfile the webNodesProfile value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withWebNodesProfile(VmssNodesProfile webNodesProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withWebNodesProfile(webNodesProfile);
        return this;
    }

    /**
     * Get the controllerProfile property: Controller VM profile.
     *
     * @return the controllerProfile value.
     */
    public NodeProfile controllerProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().controllerProfile();
    }

    /**
     * Set the controllerProfile property: Controller VM profile.
     *
     * @param controllerProfile the controllerProfile value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withControllerProfile(NodeProfile controllerProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withControllerProfile(controllerProfile);
        return this;
    }

    /**
     * Get the networkProfile property: Network profile.
     *
     * @return the networkProfile value.
     */
    public NetworkProfile networkProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().networkProfile();
    }

    /**
     * Set the networkProfile property: Network profile.
     *
     * @param networkProfile the networkProfile value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withNetworkProfile(NetworkProfile networkProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withNetworkProfile(networkProfile);
        return this;
    }

    /**
     * Get the databaseProfile property: Database profile.
     *
     * @return the databaseProfile value.
     */
    public DatabaseProfile databaseProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().databaseProfile();
    }

    /**
     * Set the databaseProfile property: Database profile.
     *
     * @param databaseProfile the databaseProfile value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withDatabaseProfile(DatabaseProfile databaseProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withDatabaseProfile(databaseProfile);
        return this;
    }

    /**
     * Get the siteProfile property: Site profile.
     *
     * @return the siteProfile value.
     */
    public SiteProfile siteProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().siteProfile();
    }

    /**
     * Set the siteProfile property: Site profile.
     *
     * @param siteProfile the siteProfile value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withSiteProfile(SiteProfile siteProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withSiteProfile(siteProfile);
        return this;
    }

    /**
     * Get the fileshareProfile property: File share profile.
     *
     * @return the fileshareProfile value.
     */
    public FileshareProfile fileshareProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().fileshareProfile();
    }

    /**
     * Set the fileshareProfile property: File share profile.
     *
     * @param fileshareProfile the fileshareProfile value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withFileshareProfile(FileshareProfile fileshareProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withFileshareProfile(fileshareProfile);
        return this;
    }

    /**
     * Get the phpProfile property: PHP profile.
     *
     * @return the phpProfile value.
     */
    public PhpProfile phpProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().phpProfile();
    }

    /**
     * Set the phpProfile property: PHP profile.
     *
     * @param phpProfile the phpProfile value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withPhpProfile(PhpProfile phpProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withPhpProfile(phpProfile);
        return this;
    }

    /**
     * Get the searchProfile property: Search profile.
     *
     * @return the searchProfile value.
     */
    public SearchProfile searchProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().searchProfile();
    }

    /**
     * Set the searchProfile property: Search profile.
     *
     * @param searchProfile the searchProfile value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withSearchProfile(SearchProfile searchProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withSearchProfile(searchProfile);
        return this;
    }

    /**
     * Get the cacheProfile property: Cache profile.
     *
     * @return the cacheProfile value.
     */
    public CacheProfile cacheProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().cacheProfile();
    }

    /**
     * Set the cacheProfile property: Cache profile.
     *
     * @param cacheProfile the cacheProfile value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withCacheProfile(CacheProfile cacheProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withCacheProfile(cacheProfile);
        return this;
    }

    /**
     * Get the backupProfile property: Backup profile.
     *
     * @return the backupProfile value.
     */
    public BackupProfile backupProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().backupProfile();
    }

    /**
     * Set the backupProfile property: Backup profile.
     *
     * @param backupProfile the backupProfile value to set.
     * @return the PhpWorkloadResourceInner object itself.
     */
    public PhpWorkloadResourceInner withBackupProfile(BackupProfile backupProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PhpWorkloadResourceProperties();
        }
        this.innerProperties().withBackupProfile(backupProfile);
        return this;
    }

    /**
     * Get the provisioningState property: Php workload resource provisioning state.
     *
     * @return the provisioningState value.
     */
    public PhpWorkloadProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
        if (kind() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property kind in model PhpWorkloadResourceInner"));
        }
        if (sku() != null) {
            sku().validate();
        }
        if (identity() != null) {
            identity().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(PhpWorkloadResourceInner.class);
}
