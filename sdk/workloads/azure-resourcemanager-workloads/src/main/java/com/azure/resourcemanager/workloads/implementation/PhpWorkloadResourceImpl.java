// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.workloads.fluent.models.PhpWorkloadResourceInner;
import com.azure.resourcemanager.workloads.models.BackupProfile;
import com.azure.resourcemanager.workloads.models.CacheProfile;
import com.azure.resourcemanager.workloads.models.DatabaseProfile;
import com.azure.resourcemanager.workloads.models.FileshareProfile;
import com.azure.resourcemanager.workloads.models.ManagedRGConfiguration;
import com.azure.resourcemanager.workloads.models.NetworkProfile;
import com.azure.resourcemanager.workloads.models.NodeProfile;
import com.azure.resourcemanager.workloads.models.PatchResourceRequestBody;
import com.azure.resourcemanager.workloads.models.PatchResourceRequestBodyIdentity;
import com.azure.resourcemanager.workloads.models.PhpProfile;
import com.azure.resourcemanager.workloads.models.PhpWorkloadProvisioningState;
import com.azure.resourcemanager.workloads.models.PhpWorkloadResource;
import com.azure.resourcemanager.workloads.models.PhpWorkloadResourceIdentity;
import com.azure.resourcemanager.workloads.models.SearchProfile;
import com.azure.resourcemanager.workloads.models.SiteProfile;
import com.azure.resourcemanager.workloads.models.Sku;
import com.azure.resourcemanager.workloads.models.UserProfile;
import com.azure.resourcemanager.workloads.models.VmssNodesProfile;
import com.azure.resourcemanager.workloads.models.WorkloadKind;
import java.util.Collections;
import java.util.Map;

public final class PhpWorkloadResourceImpl
    implements PhpWorkloadResource, PhpWorkloadResource.Definition, PhpWorkloadResource.Update {
    private PhpWorkloadResourceInner innerObject;

    private final com.azure.resourcemanager.workloads.WorkloadsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public WorkloadKind kind() {
        return this.innerModel().kind();
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public PhpWorkloadResourceIdentity identity() {
        return this.innerModel().identity();
    }

    public String appLocation() {
        return this.innerModel().appLocation();
    }

    public ManagedRGConfiguration managedResourceGroupConfiguration() {
        return this.innerModel().managedResourceGroupConfiguration();
    }

    public UserProfile adminUserProfile() {
        return this.innerModel().adminUserProfile();
    }

    public VmssNodesProfile webNodesProfile() {
        return this.innerModel().webNodesProfile();
    }

    public NodeProfile controllerProfile() {
        return this.innerModel().controllerProfile();
    }

    public NetworkProfile networkProfile() {
        return this.innerModel().networkProfile();
    }

    public DatabaseProfile databaseProfile() {
        return this.innerModel().databaseProfile();
    }

    public SiteProfile siteProfile() {
        return this.innerModel().siteProfile();
    }

    public FileshareProfile fileshareProfile() {
        return this.innerModel().fileshareProfile();
    }

    public PhpProfile phpProfile() {
        return this.innerModel().phpProfile();
    }

    public SearchProfile searchProfile() {
        return this.innerModel().searchProfile();
    }

    public CacheProfile cacheProfile() {
        return this.innerModel().cacheProfile();
    }

    public BackupProfile backupProfile() {
        return this.innerModel().backupProfile();
    }

    public PhpWorkloadProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public PhpWorkloadResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.workloads.WorkloadsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String phpWorkloadName;

    private PatchResourceRequestBody updateResourcePatchRequestBody;

    public PhpWorkloadResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public PhpWorkloadResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPhpWorkloads()
                .createOrUpdate(resourceGroupName, phpWorkloadName, this.innerModel(), Context.NONE);
        return this;
    }

    public PhpWorkloadResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPhpWorkloads()
                .createOrUpdate(resourceGroupName, phpWorkloadName, this.innerModel(), context);
        return this;
    }

    PhpWorkloadResourceImpl(String name, com.azure.resourcemanager.workloads.WorkloadsManager serviceManager) {
        this.innerObject = new PhpWorkloadResourceInner();
        this.serviceManager = serviceManager;
        this.phpWorkloadName = name;
    }

    public PhpWorkloadResourceImpl update() {
        this.updateResourcePatchRequestBody = new PatchResourceRequestBody();
        return this;
    }

    public PhpWorkloadResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPhpWorkloads()
                .updateWithResponse(resourceGroupName, phpWorkloadName, updateResourcePatchRequestBody, Context.NONE)
                .getValue();
        return this;
    }

    public PhpWorkloadResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPhpWorkloads()
                .updateWithResponse(resourceGroupName, phpWorkloadName, updateResourcePatchRequestBody, context)
                .getValue();
        return this;
    }

    PhpWorkloadResourceImpl(
        PhpWorkloadResourceInner innerObject, com.azure.resourcemanager.workloads.WorkloadsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.phpWorkloadName = Utils.getValueFromIdByName(innerObject.id(), "phpWorkloads");
    }

    public PhpWorkloadResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPhpWorkloads()
                .getByResourceGroupWithResponse(resourceGroupName, phpWorkloadName, Context.NONE)
                .getValue();
        return this;
    }

    public PhpWorkloadResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPhpWorkloads()
                .getByResourceGroupWithResponse(resourceGroupName, phpWorkloadName, context)
                .getValue();
        return this;
    }

    public PhpWorkloadResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public PhpWorkloadResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public PhpWorkloadResourceImpl withKind(WorkloadKind kind) {
        this.innerModel().withKind(kind);
        return this;
    }

    public PhpWorkloadResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateResourcePatchRequestBody.withTags(tags);
            return this;
        }
    }

    public PhpWorkloadResourceImpl withSku(Sku sku) {
        this.innerModel().withSku(sku);
        return this;
    }

    public PhpWorkloadResourceImpl withIdentity(PhpWorkloadResourceIdentity identity) {
        this.innerModel().withIdentity(identity);
        return this;
    }

    public PhpWorkloadResourceImpl withAppLocation(String appLocation) {
        this.innerModel().withAppLocation(appLocation);
        return this;
    }

    public PhpWorkloadResourceImpl withManagedResourceGroupConfiguration(
        ManagedRGConfiguration managedResourceGroupConfiguration) {
        this.innerModel().withManagedResourceGroupConfiguration(managedResourceGroupConfiguration);
        return this;
    }

    public PhpWorkloadResourceImpl withAdminUserProfile(UserProfile adminUserProfile) {
        this.innerModel().withAdminUserProfile(adminUserProfile);
        return this;
    }

    public PhpWorkloadResourceImpl withWebNodesProfile(VmssNodesProfile webNodesProfile) {
        this.innerModel().withWebNodesProfile(webNodesProfile);
        return this;
    }

    public PhpWorkloadResourceImpl withControllerProfile(NodeProfile controllerProfile) {
        this.innerModel().withControllerProfile(controllerProfile);
        return this;
    }

    public PhpWorkloadResourceImpl withNetworkProfile(NetworkProfile networkProfile) {
        this.innerModel().withNetworkProfile(networkProfile);
        return this;
    }

    public PhpWorkloadResourceImpl withDatabaseProfile(DatabaseProfile databaseProfile) {
        this.innerModel().withDatabaseProfile(databaseProfile);
        return this;
    }

    public PhpWorkloadResourceImpl withSiteProfile(SiteProfile siteProfile) {
        this.innerModel().withSiteProfile(siteProfile);
        return this;
    }

    public PhpWorkloadResourceImpl withFileshareProfile(FileshareProfile fileshareProfile) {
        this.innerModel().withFileshareProfile(fileshareProfile);
        return this;
    }

    public PhpWorkloadResourceImpl withPhpProfile(PhpProfile phpProfile) {
        this.innerModel().withPhpProfile(phpProfile);
        return this;
    }

    public PhpWorkloadResourceImpl withSearchProfile(SearchProfile searchProfile) {
        this.innerModel().withSearchProfile(searchProfile);
        return this;
    }

    public PhpWorkloadResourceImpl withCacheProfile(CacheProfile cacheProfile) {
        this.innerModel().withCacheProfile(cacheProfile);
        return this;
    }

    public PhpWorkloadResourceImpl withBackupProfile(BackupProfile backupProfile) {
        this.innerModel().withBackupProfile(backupProfile);
        return this;
    }

    public PhpWorkloadResourceImpl withIdentity(PatchResourceRequestBodyIdentity identity) {
        this.updateResourcePatchRequestBody.withIdentity(identity);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
