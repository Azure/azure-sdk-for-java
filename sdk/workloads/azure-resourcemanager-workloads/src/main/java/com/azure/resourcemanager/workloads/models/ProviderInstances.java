// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ProviderInstances. */
public interface ProviderInstances {
    /**
     * Gets a list of provider instances in the specified SAP monitor.
     *
     * <p>Gets a list of provider instances in the specified SAP monitor. The operations returns various properties of
     * each provider instances.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of provider instances in the specified SAP monitor as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<ProviderInstance> list(String resourceGroupName, String monitorName);

    /**
     * Gets a list of provider instances in the specified SAP monitor.
     *
     * <p>Gets a list of provider instances in the specified SAP monitor. The operations returns various properties of
     * each provider instances.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of provider instances in the specified SAP monitor as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<ProviderInstance> list(String resourceGroupName, String monitorName, Context context);

    /**
     * Gets properties of a provider instance.
     *
     * <p>Gets properties of a provider instance for the specified subscription, resource group, SAP monitor name, and
     * resource name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @param providerInstanceName Name of the provider instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of a provider instance for the specified subscription, resource group, SAP monitor name, and
     *     resource name along with {@link Response}.
     */
    Response<ProviderInstance> getWithResponse(
        String resourceGroupName, String monitorName, String providerInstanceName, Context context);

    /**
     * Gets properties of a provider instance.
     *
     * <p>Gets properties of a provider instance for the specified subscription, resource group, SAP monitor name, and
     * resource name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @param providerInstanceName Name of the provider instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of a provider instance for the specified subscription, resource group, SAP monitor name, and
     *     resource name.
     */
    ProviderInstance get(String resourceGroupName, String monitorName, String providerInstanceName);

    /**
     * Deletes a provider instance.
     *
     * <p>Deletes a provider instance for the specified subscription, resource group, SAP monitor name, and resource
     * name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @param providerInstanceName Name of the provider instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult delete(String resourceGroupName, String monitorName, String providerInstanceName);

    /**
     * Deletes a provider instance.
     *
     * <p>Deletes a provider instance for the specified subscription, resource group, SAP monitor name, and resource
     * name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @param providerInstanceName Name of the provider instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult delete(
        String resourceGroupName, String monitorName, String providerInstanceName, Context context);

    /**
     * Gets properties of a provider instance.
     *
     * <p>Gets properties of a provider instance for the specified subscription, resource group, SAP monitor name, and
     * resource name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of a provider instance for the specified subscription, resource group, SAP monitor name, and
     *     resource name along with {@link Response}.
     */
    ProviderInstance getById(String id);

    /**
     * Gets properties of a provider instance.
     *
     * <p>Gets properties of a provider instance for the specified subscription, resource group, SAP monitor name, and
     * resource name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of a provider instance for the specified subscription, resource group, SAP monitor name, and
     *     resource name along with {@link Response}.
     */
    Response<ProviderInstance> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a provider instance.
     *
     * <p>Deletes a provider instance for the specified subscription, resource group, SAP monitor name, and resource
     * name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult deleteById(String id);

    /**
     * Deletes a provider instance.
     *
     * <p>Deletes a provider instance for the specified subscription, resource group, SAP monitor name, and resource
     * name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ProviderInstance resource.
     *
     * @param name resource name.
     * @return the first stage of the new ProviderInstance definition.
     */
    ProviderInstance.DefinitionStages.Blank define(String name);
}
