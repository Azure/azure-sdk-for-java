// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloads.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of SapApplicationServerInstances. */
public interface SapApplicationServerInstances {
    /**
     * Gets the SAP Application Server Instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sapVirtualInstanceName The name of the Virtual Instances for SAP.
     * @param applicationInstanceName The name of SAP Application Server instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the SAP Application Server Instance.
     */
    SapApplicationServerInstance get(
        String resourceGroupName, String sapVirtualInstanceName, String applicationInstanceName);

    /**
     * Gets the SAP Application Server Instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sapVirtualInstanceName The name of the Virtual Instances for SAP.
     * @param applicationInstanceName The name of SAP Application Server instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the SAP Application Server Instance along with {@link Response}.
     */
    Response<SapApplicationServerInstance> getWithResponse(
        String resourceGroupName, String sapVirtualInstanceName, String applicationInstanceName, Context context);

    /**
     * Deletes the SAP Application Server Instance. &lt;br&gt;&lt;br&gt;This operation will be used by service only.
     * Delete by end user will return a Bad Request error.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sapVirtualInstanceName The name of the Virtual Instances for SAP.
     * @param applicationInstanceName The name of SAP Application Server instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult delete(
        String resourceGroupName, String sapVirtualInstanceName, String applicationInstanceName);

    /**
     * Deletes the SAP Application Server Instance. &lt;br&gt;&lt;br&gt;This operation will be used by service only.
     * Delete by end user will return a Bad Request error.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sapVirtualInstanceName The name of the Virtual Instances for SAP.
     * @param applicationInstanceName The name of SAP Application Server instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult delete(
        String resourceGroupName, String sapVirtualInstanceName, String applicationInstanceName, Context context);

    /**
     * Lists the SAP Application server Instances in an SVI.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sapVirtualInstanceName The name of the Virtual Instances for SAP.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return defines the collection of SAP Application Server Instances as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<SapApplicationServerInstance> list(String resourceGroupName, String sapVirtualInstanceName);

    /**
     * Lists the SAP Application server Instances in an SVI.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sapVirtualInstanceName The name of the Virtual Instances for SAP.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return defines the collection of SAP Application Server Instances as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<SapApplicationServerInstance> list(
        String resourceGroupName, String sapVirtualInstanceName, Context context);

    /**
     * Gets the SAP Application Server Instance.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the SAP Application Server Instance along with {@link Response}.
     */
    SapApplicationServerInstance getById(String id);

    /**
     * Gets the SAP Application Server Instance.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the SAP Application Server Instance along with {@link Response}.
     */
    Response<SapApplicationServerInstance> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the SAP Application Server Instance. &lt;br&gt;&lt;br&gt;This operation will be used by service only.
     * Delete by end user will return a Bad Request error.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult deleteById(String id);

    /**
     * Deletes the SAP Application Server Instance. &lt;br&gt;&lt;br&gt;This operation will be used by service only.
     * Delete by end user will return a Bad Request error.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new SapApplicationServerInstance resource.
     *
     * @param name resource name.
     * @return the first stage of the new SapApplicationServerInstance definition.
     */
    SapApplicationServerInstance.DefinitionStages.Blank define(String name);
}
