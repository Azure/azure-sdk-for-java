// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.saas.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of SaasSubscriptionLevels. */
public interface SaasSubscriptionLevels {
    /**
     * Gets information about all the Subscription Level SaaS in a certain Azure subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all the Subscription Level SaaS in a certain Azure subscription.
     */
    PagedIterable<SaasResource> list();

    /**
     * Gets information about all the Subscription Level SaaS in a certain Azure subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all the Subscription Level SaaS in a certain Azure subscription.
     */
    PagedIterable<SaasResource> list(Context context);

    /**
     * Gets information about all the Subscription Level SaaS in a certain resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all the Subscription Level SaaS in a certain resource group.
     */
    PagedIterable<SaasResource> listByResourceGroup(String resourceGroupName);

    /**
     * Gets information about all the Subscription Level SaaS in a certain resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all the Subscription Level SaaS in a certain resource group.
     */
    PagedIterable<SaasResource> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets information about the specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified Subscription Level SaaS.
     */
    SaasResource getByResourceGroup(String resourceGroupName, String resourceName);

    /**
     * Gets information about the specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified Subscription Level SaaS.
     */
    Response<SaasResource> getByResourceGroupWithResponse(
        String resourceGroupName, String resourceName, Context context);

    /**
     * Deletes the specified SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String resourceName);

    /**
     * Deletes the specified SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String resourceName, Context context);

    /**
     * Unsubscribe from a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to unsubscribe saas operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void updateToUnsubscribed(String resourceGroupName, String resourceName, DeleteOptions parameters);

    /**
     * Unsubscribe from a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to unsubscribe saas operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void updateToUnsubscribed(String resourceGroupName, String resourceName, DeleteOptions parameters, Context context);

    /**
     * Gets the ISV access token for a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ISV access token for a specified Subscription Level SaaS.
     */
    AccessTokenResult listAccessToken(String resourceGroupName, String resourceName);

    /**
     * Gets the ISV access token for a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ISV access token for a specified Subscription Level SaaS.
     */
    Response<AccessTokenResult> listAccessTokenWithResponse(
        String resourceGroupName, String resourceName, Context context);

    /**
     * Validate whether a specified Subscription Level SaaS can be moved.
     *
     * @param resourceGroupName The name of the resource group.
     * @param moveResourceParameter Object that represents the resources to move.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void validateMoveResources(String resourceGroupName, MoveResource moveResourceParameter);

    /**
     * Validate whether a specified Subscription Level SaaS can be moved.
     *
     * @param resourceGroupName The name of the resource group.
     * @param moveResourceParameter Object that represents the resources to move.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> validateMoveResourcesWithResponse(
        String resourceGroupName, MoveResource moveResourceParameter, Context context);

    /**
     * Move a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param moveResourceParameter Object that represents the resources to move.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void moveResources(String resourceGroupName, MoveResource moveResourceParameter);

    /**
     * Move a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param moveResourceParameter Object that represents the resources to move.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void moveResources(String resourceGroupName, MoveResource moveResourceParameter, Context context);

    /**
     * Gets information about the specified Subscription Level SaaS.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified Subscription Level SaaS.
     */
    SaasResource getById(String id);

    /**
     * Gets information about the specified Subscription Level SaaS.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified Subscription Level SaaS.
     */
    Response<SaasResource> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the specified SaaS.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the specified SaaS.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new SaasResource resource.
     *
     * @param name resource name.
     * @return the first stage of the new SaasResource definition.
     */
    SaasResource.DefinitionStages.Blank define(String name);
}
