// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.saas.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.saas.fluent.models.AccessTokenResultInner;
import com.azure.resourcemanager.saas.fluent.models.SaasResourceInner;
import com.azure.resourcemanager.saas.models.DeleteOptions;
import com.azure.resourcemanager.saas.models.MoveResource;
import com.azure.resourcemanager.saas.models.SaasResourceCreation;

/** An instance of this class provides access to all the operations defined in SaasSubscriptionLevelsClient. */
public interface SaasSubscriptionLevelsClient {
    /**
     * Gets information about all the Subscription Level SaaS in a certain Azure subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all the Subscription Level SaaS in a certain Azure subscription.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SaasResourceInner> list();

    /**
     * Gets information about all the Subscription Level SaaS in a certain Azure subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all the Subscription Level SaaS in a certain Azure subscription.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SaasResourceInner> list(Context context);

    /**
     * Gets information about all the Subscription Level SaaS in a certain resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all the Subscription Level SaaS in a certain resource group.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SaasResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * Gets information about all the Subscription Level SaaS in a certain resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all the Subscription Level SaaS in a certain resource group.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SaasResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets information about the specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified Subscription Level SaaS.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SaasResourceInner getByResourceGroup(String resourceGroupName, String resourceName);

    /**
     * Gets information about the specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified Subscription Level SaaS.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SaasResourceInner> getByResourceGroupWithResponse(
        String resourceGroupName, String resourceName, Context context);

    /**
     * Creates or updates a SaaS resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to the create or update subscription level saas operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return saaS REST API resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<SaasResourceInner>, SaasResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String resourceName, SaasResourceCreation parameters);

    /**
     * Creates or updates a SaaS resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to the create or update subscription level saas operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return saaS REST API resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<SaasResourceInner>, SaasResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String resourceName, SaasResourceCreation parameters, Context context);

    /**
     * Creates or updates a SaaS resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to the create or update subscription level saas operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return saaS REST API resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SaasResourceInner createOrUpdate(String resourceGroupName, String resourceName, SaasResourceCreation parameters);

    /**
     * Creates or updates a SaaS resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to the create or update subscription level saas operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return saaS REST API resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SaasResourceInner createOrUpdate(
        String resourceGroupName, String resourceName, SaasResourceCreation parameters, Context context);

    /**
     * Updates a SaaS Subscription Level resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to the update saas operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return saaS REST API resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<SaasResourceInner>, SaasResourceInner> beginUpdate(
        String resourceGroupName, String resourceName, SaasResourceCreation parameters);

    /**
     * Updates a SaaS Subscription Level resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to the update saas operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return saaS REST API resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<SaasResourceInner>, SaasResourceInner> beginUpdate(
        String resourceGroupName, String resourceName, SaasResourceCreation parameters, Context context);

    /**
     * Updates a SaaS Subscription Level resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to the update saas operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return saaS REST API resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SaasResourceInner update(String resourceGroupName, String resourceName, SaasResourceCreation parameters);

    /**
     * Updates a SaaS Subscription Level resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to the update saas operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return saaS REST API resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SaasResourceInner update(
        String resourceGroupName, String resourceName, SaasResourceCreation parameters, Context context);

    /**
     * Deletes the specified SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String resourceName);

    /**
     * Deletes the specified SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String resourceName, Context context);

    /**
     * Deletes the specified SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String resourceName);

    /**
     * Deletes the specified SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String resourceName, Context context);

    /**
     * Unsubscribe from a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to unsubscribe saas operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginUpdateToUnsubscribed(
        String resourceGroupName, String resourceName, DeleteOptions parameters);

    /**
     * Unsubscribe from a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to unsubscribe saas operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginUpdateToUnsubscribed(
        String resourceGroupName, String resourceName, DeleteOptions parameters, Context context);

    /**
     * Unsubscribe from a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to unsubscribe saas operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void updateToUnsubscribed(String resourceGroupName, String resourceName, DeleteOptions parameters);

    /**
     * Unsubscribe from a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param parameters Parameters supplied to unsubscribe saas operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void updateToUnsubscribed(String resourceGroupName, String resourceName, DeleteOptions parameters, Context context);

    /**
     * Gets the ISV access token for a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ISV access token for a specified Subscription Level SaaS.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AccessTokenResultInner listAccessToken(String resourceGroupName, String resourceName);

    /**
     * Gets the ISV access token for a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ISV access token for a specified Subscription Level SaaS.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AccessTokenResultInner> listAccessTokenWithResponse(
        String resourceGroupName, String resourceName, Context context);

    /**
     * Validate whether a specified Subscription Level SaaS can be moved.
     *
     * @param resourceGroupName The name of the resource group.
     * @param moveResourceParameter Object that represents the resources to move.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void validateMoveResources(String resourceGroupName, MoveResource moveResourceParameter);

    /**
     * Validate whether a specified Subscription Level SaaS can be moved.
     *
     * @param resourceGroupName The name of the resource group.
     * @param moveResourceParameter Object that represents the resources to move.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> validateMoveResourcesWithResponse(
        String resourceGroupName, MoveResource moveResourceParameter, Context context);

    /**
     * Move a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param moveResourceParameter Object that represents the resources to move.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginMoveResources(String resourceGroupName, MoveResource moveResourceParameter);

    /**
     * Move a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param moveResourceParameter Object that represents the resources to move.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginMoveResources(
        String resourceGroupName, MoveResource moveResourceParameter, Context context);

    /**
     * Move a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param moveResourceParameter Object that represents the resources to move.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void moveResources(String resourceGroupName, MoveResource moveResourceParameter);

    /**
     * Move a specified Subscription Level SaaS.
     *
     * @param resourceGroupName The name of the resource group.
     * @param moveResourceParameter Object that represents the resources to move.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void moveResources(String resourceGroupName, MoveResource moveResourceParameter, Context context);
}
