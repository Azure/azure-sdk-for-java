// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.saas.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.saas.SaaSManager;
import com.azure.resourcemanager.saas.fluent.models.SaasResourceInner;
import com.azure.resourcemanager.saas.models.SaasCreationProperties;
import com.azure.resourcemanager.saas.models.SaasResource;
import com.azure.resourcemanager.saas.models.SaasResourceCreation;
import com.azure.resourcemanager.saas.models.SaasResourceProperties;
import java.util.Collections;
import java.util.Map;

public final class SaasResourceImpl implements SaasResource, SaasResource.Definition, SaasResource.Update {
    private SaasResourceInner innerObject;

    private final SaaSManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SaasResourceProperties properties() {
        return this.innerModel().properties();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SaasResourceInner innerModel() {
        return this.innerObject;
    }

    private SaaSManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String resourceName;

    private SaasResourceCreation createParameters;

    private SaasResourceCreation updateParameters;

    public SaasResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public SaasResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSaasSubscriptionLevels()
                .createOrUpdate(resourceGroupName, resourceName, createParameters, Context.NONE);
        return this;
    }

    public SaasResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSaasSubscriptionLevels()
                .createOrUpdate(resourceGroupName, resourceName, createParameters, context);
        return this;
    }

    SaasResourceImpl(String name, SaaSManager serviceManager) {
        this.innerObject = new SaasResourceInner();
        this.serviceManager = serviceManager;
        this.resourceName = name;
        this.createParameters = new SaasResourceCreation();
    }

    public SaasResourceImpl update() {
        this.updateParameters = new SaasResourceCreation();
        return this;
    }

    public SaasResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSaasSubscriptionLevels()
                .update(resourceGroupName, resourceName, updateParameters, Context.NONE);
        return this;
    }

    public SaasResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSaasSubscriptionLevels()
                .update(resourceGroupName, resourceName, updateParameters, context);
        return this;
    }

    SaasResourceImpl(SaasResourceInner innerObject, SaaSManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.resourceName = Utils.getValueFromIdByName(innerObject.id(), "resources");
    }

    public SaasResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSaasSubscriptionLevels()
                .getByResourceGroupWithResponse(resourceGroupName, resourceName, Context.NONE)
                .getValue();
        return this;
    }

    public SaasResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSaasSubscriptionLevels()
                .getByResourceGroupWithResponse(resourceGroupName, resourceName, context)
                .getValue();
        return this;
    }

    public SaasResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.createParameters.withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public SaasResourceImpl withName(String name) {
        if (isInCreateMode()) {
            this.createParameters.withName(name);
            return this;
        } else {
            this.updateParameters.withName(name);
            return this;
        }
    }

    public SaasResourceImpl withProperties(SaasCreationProperties properties) {
        if (isInCreateMode()) {
            this.createParameters.withProperties(properties);
            return this;
        } else {
            this.updateParameters.withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
