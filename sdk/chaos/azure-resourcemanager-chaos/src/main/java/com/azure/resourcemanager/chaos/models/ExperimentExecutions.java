// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.chaos.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ExperimentExecutions.
 */
public interface ExperimentExecutions {
    /**
     * Get an execution of an Experiment resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param experimentName String that represents a Experiment resource name.
     * @param executionId GUID that represents a Experiment execution detail.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an execution of an Experiment resource along with {@link Response}.
     */
    Response<ExperimentExecution> getExecutionWithResponse(String resourceGroupName, String experimentName,
        String executionId, Context context);

    /**
     * Get an execution of an Experiment resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param experimentName String that represents a Experiment resource name.
     * @param executionId GUID that represents a Experiment execution detail.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an execution of an Experiment resource.
     */
    ExperimentExecution getExecution(String resourceGroupName, String experimentName, String executionId);

    /**
     * Get a list of executions of an Experiment resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param experimentName String that represents a Experiment resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of executions of an Experiment resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ExperimentExecution> listAllExecutions(String resourceGroupName, String experimentName);

    /**
     * Get a list of executions of an Experiment resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param experimentName String that represents a Experiment resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of executions of an Experiment resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ExperimentExecution> listAllExecutions(String resourceGroupName, String experimentName,
        Context context);

    /**
     * Execution details of an experiment resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param experimentName String that represents a Experiment resource name.
     * @param executionId GUID that represents a Experiment execution detail.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model that represents the execution details of an Experiment along with {@link Response}.
     */
    Response<ExperimentExecutionDetails> getExecutionDetailsWithResponse(String resourceGroupName,
        String experimentName, String executionId, Context context);

    /**
     * Execution details of an experiment resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param experimentName String that represents a Experiment resource name.
     * @param executionId GUID that represents a Experiment execution detail.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model that represents the execution details of an Experiment.
     */
    ExperimentExecutionDetails getExecutionDetails(String resourceGroupName, String experimentName, String executionId);
}
