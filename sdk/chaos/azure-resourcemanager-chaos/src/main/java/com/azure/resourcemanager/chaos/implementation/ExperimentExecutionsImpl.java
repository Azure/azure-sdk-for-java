// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.chaos.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.chaos.fluent.ExperimentExecutionsClient;
import com.azure.resourcemanager.chaos.fluent.models.ExperimentExecutionDetailsInner;
import com.azure.resourcemanager.chaos.fluent.models.ExperimentExecutionInner;
import com.azure.resourcemanager.chaos.models.ExperimentExecution;
import com.azure.resourcemanager.chaos.models.ExperimentExecutionDetails;
import com.azure.resourcemanager.chaos.models.ExperimentExecutions;

public final class ExperimentExecutionsImpl implements ExperimentExecutions {
    private static final ClientLogger LOGGER = new ClientLogger(ExperimentExecutionsImpl.class);

    private final ExperimentExecutionsClient innerClient;

    private final com.azure.resourcemanager.chaos.ChaosManager serviceManager;

    public ExperimentExecutionsImpl(ExperimentExecutionsClient innerClient,
        com.azure.resourcemanager.chaos.ChaosManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ExperimentExecution> getExecutionWithResponse(String resourceGroupName, String experimentName,
        String executionId, Context context) {
        Response<ExperimentExecutionInner> inner
            = this.serviceClient().getExecutionWithResponse(resourceGroupName, experimentName, executionId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ExperimentExecutionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ExperimentExecution getExecution(String resourceGroupName, String experimentName, String executionId) {
        ExperimentExecutionInner inner
            = this.serviceClient().getExecution(resourceGroupName, experimentName, executionId);
        if (inner != null) {
            return new ExperimentExecutionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<ExperimentExecution> listAllExecutions(String resourceGroupName, String experimentName) {
        PagedIterable<ExperimentExecutionInner> inner
            = this.serviceClient().listAllExecutions(resourceGroupName, experimentName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ExperimentExecutionImpl(inner1, this.manager()));
    }

    public PagedIterable<ExperimentExecution> listAllExecutions(String resourceGroupName, String experimentName,
        Context context) {
        PagedIterable<ExperimentExecutionInner> inner
            = this.serviceClient().listAllExecutions(resourceGroupName, experimentName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ExperimentExecutionImpl(inner1, this.manager()));
    }

    public Response<ExperimentExecutionDetails> getExecutionDetailsWithResponse(String resourceGroupName,
        String experimentName, String executionId, Context context) {
        Response<ExperimentExecutionDetailsInner> inner = this.serviceClient()
            .getExecutionDetailsWithResponse(resourceGroupName, experimentName, executionId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ExperimentExecutionDetailsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ExperimentExecutionDetails getExecutionDetails(String resourceGroupName, String experimentName,
        String executionId) {
        ExperimentExecutionDetailsInner inner
            = this.serviceClient().getExecutionDetails(resourceGroupName, experimentName, executionId);
        if (inner != null) {
            return new ExperimentExecutionDetailsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ExperimentExecutionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.chaos.ChaosManager manager() {
        return this.serviceManager;
    }
}
