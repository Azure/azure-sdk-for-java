// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.chaos.fluent.models.ExperimentInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of Experiment. */
public interface Experiment {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: The system metadata of the experiment resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the identity property: The identity of the experiment resource.
     *
     * @return the identity value.
     */
    ResourceIdentity identity();

    /**
     * Gets the steps property: List of steps.
     *
     * @return the steps value.
     */
    List<Step> steps();

    /**
     * Gets the selectors property: List of selectors.
     *
     * @return the selectors value.
     */
    List<Selector> selectors();

    /**
     * Gets the startOnCreation property: A boolean value that indicates if experiment should be started on creation or
     * not.
     *
     * @return the startOnCreation value.
     */
    Boolean startOnCreation();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.chaos.fluent.models.ExperimentInner object.
     *
     * @return the inner object.
     */
    ExperimentInner innerModel();

    /** The entirety of the Experiment definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithSteps,
            DefinitionStages.WithSelectors,
            DefinitionStages.WithCreate {
    }
    /** The Experiment definition stages. */
    interface DefinitionStages {
        /** The first stage of the Experiment definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the Experiment definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the Experiment definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName String that represents an Azure resource group.
             * @return the next definition stage.
             */
            WithSteps withExistingResourceGroup(String resourceGroupName);
        }
        /** The stage of the Experiment definition allowing to specify steps. */
        interface WithSteps {
            /**
             * Specifies the steps property: List of steps..
             *
             * @param steps List of steps.
             * @return the next definition stage.
             */
            WithSelectors withSteps(List<Step> steps);
        }
        /** The stage of the Experiment definition allowing to specify selectors. */
        interface WithSelectors {
            /**
             * Specifies the selectors property: List of selectors..
             *
             * @param selectors List of selectors.
             * @return the next definition stage.
             */
            WithCreate withSelectors(List<Selector> selectors);
        }
        /**
         * The stage of the Experiment definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags, DefinitionStages.WithIdentity, DefinitionStages.WithStartOnCreation {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Experiment create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Experiment create(Context context);
        }
        /** The stage of the Experiment definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the Experiment definition allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: The identity of the experiment resource..
             *
             * @param identity The identity of the experiment resource.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ResourceIdentity identity);
        }
        /** The stage of the Experiment definition allowing to specify startOnCreation. */
        interface WithStartOnCreation {
            /**
             * Specifies the startOnCreation property: A boolean value that indicates if experiment should be started on
             * creation or not..
             *
             * @param startOnCreation A boolean value that indicates if experiment should be started on creation or not.
             * @return the next definition stage.
             */
            WithCreate withStartOnCreation(Boolean startOnCreation);
        }
    }
    /**
     * Begins update for the Experiment resource.
     *
     * @return the stage of resource update.
     */
    Experiment.Update update();

    /** The template for Experiment update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithIdentity,
            UpdateStages.WithSteps,
            UpdateStages.WithSelectors,
            UpdateStages.WithStartOnCreation {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Experiment apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Experiment apply(Context context);
    }
    /** The Experiment update stages. */
    interface UpdateStages {
        /** The stage of the Experiment update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the Experiment update allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: The identity of the experiment resource..
             *
             * @param identity The identity of the experiment resource.
             * @return the next definition stage.
             */
            Update withIdentity(ResourceIdentity identity);
        }
        /** The stage of the Experiment update allowing to specify steps. */
        interface WithSteps {
            /**
             * Specifies the steps property: List of steps..
             *
             * @param steps List of steps.
             * @return the next definition stage.
             */
            Update withSteps(List<Step> steps);
        }
        /** The stage of the Experiment update allowing to specify selectors. */
        interface WithSelectors {
            /**
             * Specifies the selectors property: List of selectors..
             *
             * @param selectors List of selectors.
             * @return the next definition stage.
             */
            Update withSelectors(List<Selector> selectors);
        }
        /** The stage of the Experiment update allowing to specify startOnCreation. */
        interface WithStartOnCreation {
            /**
             * Specifies the startOnCreation property: A boolean value that indicates if experiment should be started on
             * creation or not..
             *
             * @param startOnCreation A boolean value that indicates if experiment should be started on creation or not.
             * @return the next definition stage.
             */
            Update withStartOnCreation(Boolean startOnCreation);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Experiment refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Experiment refresh(Context context);

    /**
     * Cancel a running Experiment resource.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model that represents the result of a cancel Experiment operation.
     */
    ExperimentCancelOperationResult cancel();

    /**
     * Cancel a running Experiment resource.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model that represents the result of a cancel Experiment operation.
     */
    ExperimentCancelOperationResult cancel(Context context);

    /**
     * Start a Experiment resource.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model that represents the result of a start Experiment operation.
     */
    ExperimentStartOperationResult start();

    /**
     * Start a Experiment resource.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model that represents the result of a start Experiment operation along with {@link Response}.
     */
    Response<ExperimentStartOperationResult> startWithResponse(Context context);
}
