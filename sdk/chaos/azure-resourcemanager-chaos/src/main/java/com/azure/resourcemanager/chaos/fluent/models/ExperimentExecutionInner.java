// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.fluent.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Model that represents the execution of a Experiment.
 */
@Immutable
public final class ExperimentExecutionInner {
    /*
     * String of the resource type.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /*
     * String of the fully qualified resource ID.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * String of the resource name.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * The properties of experiment execution status.
     */
    @JsonProperty(value = "properties")
    private ExperimentExecutionProperties innerProperties;

    /**
     * Creates an instance of ExperimentExecutionInner class.
     */
    public ExperimentExecutionInner() {
    }

    /**
     * Get the type property: String of the resource type.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the id property: String of the fully qualified resource ID.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: String of the resource name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the innerProperties property: The properties of experiment execution status.
     * 
     * @return the innerProperties value.
     */
    private ExperimentExecutionProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the status property: The status of the execution.
     * 
     * @return the status value.
     */
    public String status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Get the startedAt property: String that represents the start date time.
     * 
     * @return the startedAt value.
     */
    public OffsetDateTime startedAt() {
        return this.innerProperties() == null ? null : this.innerProperties().startedAt();
    }

    /**
     * Get the stoppedAt property: String that represents the stop date time.
     * 
     * @return the stoppedAt value.
     */
    public OffsetDateTime stoppedAt() {
        return this.innerProperties() == null ? null : this.innerProperties().stoppedAt();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
