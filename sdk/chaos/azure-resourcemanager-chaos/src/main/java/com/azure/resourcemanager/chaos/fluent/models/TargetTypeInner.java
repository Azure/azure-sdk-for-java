// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Model that represents a Target Type resource. */
@Fluent
public final class TargetTypeInner extends ProxyResource {
    /*
     * The system metadata properties of the target type resource.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * Location of the Target Type resource.
     */
    @JsonProperty(value = "location")
    private String location;

    /*
     * The properties of the target type resource.
     */
    @JsonProperty(value = "properties", required = true)
    private TargetTypeProperties innerProperties = new TargetTypeProperties();

    /**
     * Get the systemData property: The system metadata properties of the target type resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the location property: Location of the Target Type resource.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: Location of the Target Type resource.
     *
     * @param location the location value to set.
     * @return the TargetTypeInner object itself.
     */
    public TargetTypeInner withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the innerProperties property: The properties of the target type resource.
     *
     * @return the innerProperties value.
     */
    private TargetTypeProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the displayName property: Localized string of the display name.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Get the description property: Localized string of the description.
     *
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Get the propertiesSchema property: URL to retrieve JSON schema of the Target Type properties.
     *
     * @return the propertiesSchema value.
     */
    public String propertiesSchema() {
        return this.innerProperties() == null ? null : this.innerProperties().propertiesSchema();
    }

    /**
     * Get the resourceTypes property: List of resource types this Target Type can extend.
     *
     * @return the resourceTypes value.
     */
    public List<String> resourceTypes() {
        return this.innerProperties() == null ? null : this.innerProperties().resourceTypes();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property innerProperties in model TargetTypeInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(TargetTypeInner.class);
}
