// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Experiments.
 */
public interface Experiments {
    /**
     * Get a list of Experiment resources in a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Experiment resources in a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Experiment> list();

    /**
     * Get a list of Experiment resources in a subscription.
     * 
     * @param running Optional value that indicates whether to filter results based on if the Experiment is currently
     * running. If null, then the results will not be filtered.
     * @param continuationToken String that sets the continuation token.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Experiment resources in a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Experiment> list(Boolean running, String continuationToken, Context context);

    /**
     * Get a list of Experiment resources in a resource group.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Experiment resources in a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Experiment> listByResourceGroup(String resourceGroupName);

    /**
     * Get a list of Experiment resources in a resource group.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param running Optional value that indicates whether to filter results based on if the Experiment is currently
     * running. If null, then the results will not be filtered.
     * @param continuationToken String that sets the continuation token.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Experiment resources in a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Experiment> listByResourceGroup(String resourceGroupName, Boolean running, String continuationToken,
        Context context);

    /**
     * Delete a Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String experimentName);

    /**
     * Delete a Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String experimentName, Context context);

    /**
     * Get a Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Experiment resource along with {@link Response}.
     */
    Response<Experiment> getByResourceGroupWithResponse(String resourceGroupName, String experimentName,
        Context context);

    /**
     * Get a Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Experiment resource.
     */
    Experiment getByResourceGroup(String resourceGroupName, String experimentName);

    /**
     * Cancel a running Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void cancel(String resourceGroupName, String experimentName);

    /**
     * Cancel a running Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void cancel(String resourceGroupName, String experimentName, Context context);

    /**
     * Start a Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void start(String resourceGroupName, String experimentName);

    /**
     * Start a Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void start(String resourceGroupName, String experimentName, Context context);

    /**
     * Get a list of executions of an Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of executions of an Experiment resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ExperimentExecution> listAllExecutions(String resourceGroupName, String experimentName);

    /**
     * Get a list of executions of an Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of executions of an Experiment resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ExperimentExecution> listAllExecutions(String resourceGroupName, String experimentName,
        Context context);

    /**
     * Get an execution of an Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param executionId GUID that represents a Experiment execution detail.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an execution of an Experiment resource along with {@link Response}.
     */
    Response<ExperimentExecution> getExecutionWithResponse(String resourceGroupName, String experimentName,
        String executionId, Context context);

    /**
     * Get an execution of an Experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param executionId GUID that represents a Experiment execution detail.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an execution of an Experiment resource.
     */
    ExperimentExecution getExecution(String resourceGroupName, String experimentName, String executionId);

    /**
     * Execution details of an experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param executionId GUID that represents a Experiment execution detail.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model that represents the execution details of an Experiment along with {@link Response}.
     */
    Response<ExperimentExecutionDetails> executionDetailsWithResponse(String resourceGroupName, String experimentName,
        String executionId, Context context);

    /**
     * Execution details of an experiment resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param executionId GUID that represents a Experiment execution detail.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model that represents the execution details of an Experiment.
     */
    ExperimentExecutionDetails executionDetails(String resourceGroupName, String experimentName, String executionId);

    /**
     * Get a Experiment resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Experiment resource along with {@link Response}.
     */
    Experiment getById(String id);

    /**
     * Get a Experiment resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Experiment resource along with {@link Response}.
     */
    Response<Experiment> getByIdWithResponse(String id, Context context);

    /**
     * Delete a Experiment resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a Experiment resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Experiment resource.
     * 
     * @param name resource name.
     * @return the first stage of the new Experiment definition.
     */
    Experiment.DefinitionStages.Blank define(String name);
}
