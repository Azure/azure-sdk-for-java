// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Model that represents the status of a Experiment. */
@Fluent
public final class ExperimentStatusInner {
    /*
     * String of the resource type.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /*
     * String of the fully qualified resource ID.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * String of the resource name.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * The properties of experiment execution status.
     */
    @JsonProperty(value = "properties")
    private ExperimentStatusProperties innerProperties;

    /**
     * Get the type property: String of the resource type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the id property: String of the fully qualified resource ID.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: String of the resource name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the innerProperties property: The properties of experiment execution status.
     *
     * @return the innerProperties value.
     */
    private ExperimentStatusProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the status property: String that represents the status of a Experiment.
     *
     * @return the status value.
     */
    public String status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Get the createdDateUtc property: String that represents the created date time of a Experiment.
     *
     * @return the createdDateUtc value.
     */
    public OffsetDateTime createdDateUtc() {
        return this.innerProperties() == null ? null : this.innerProperties().createdDateUtc();
    }

    /**
     * Get the endDateUtc property: String that represents the end date time of a Experiment.
     *
     * @return the endDateUtc value.
     */
    public OffsetDateTime endDateUtc() {
        return this.innerProperties() == null ? null : this.innerProperties().endDateUtc();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
