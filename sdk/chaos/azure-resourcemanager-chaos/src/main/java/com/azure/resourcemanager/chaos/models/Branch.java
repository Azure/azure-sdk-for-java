// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Model that represents a branch in the step. */
@Fluent
public final class Branch {
    /*
     * String of the branch name.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * List of actions.
     */
    @JsonProperty(value = "actions", required = true)
    private List<Action> actions;

    /**
     * Get the name property: String of the branch name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: String of the branch name.
     *
     * @param name the name value to set.
     * @return the Branch object itself.
     */
    public Branch withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the actions property: List of actions.
     *
     * @return the actions value.
     */
    public List<Action> actions() {
        return this.actions;
    }

    /**
     * Set the actions property: List of actions.
     *
     * @param actions the actions value to set.
     * @return the Branch object itself.
     */
    public Branch withActions(List<Action> actions) {
        this.actions = actions;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw LOGGER
                .logExceptionAsError(new IllegalArgumentException("Missing required property name in model Branch"));
        }
        if (actions() == null) {
            throw LOGGER
                .logExceptionAsError(new IllegalArgumentException("Missing required property actions in model Branch"));
        } else {
            actions().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(Branch.class);
}
