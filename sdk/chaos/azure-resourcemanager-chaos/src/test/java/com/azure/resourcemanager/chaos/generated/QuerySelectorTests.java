// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.chaos.models.Filter;
import com.azure.resourcemanager.chaos.models.QuerySelector;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class QuerySelectorTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuerySelector model =
            BinaryData
                .fromString(
                    "{\"type\":\"Query\",\"queryString\":\"blylsyxkqjnsj\",\"subscriptionIds\":[\"vti\"],\"id\":\"gxsds\",\"filter\":{\"type\":\"Filter\"},\"\":{\"icvi\":\"datapsbzkfzbeyvpn\",\"jjxd\":\"datav\",\"ztzp\":\"datarbuukzclewyhmlwp\"}}")
                .toObject(QuerySelector.class);
        Assertions.assertEquals("gxsds", model.id());
        Assertions.assertEquals("blylsyxkqjnsj", model.queryString());
        Assertions.assertEquals("vti", model.subscriptionIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuerySelector model =
            new QuerySelector()
                .withId("gxsds")
                .withFilter(new Filter())
                .withQueryString("blylsyxkqjnsj")
                .withSubscriptionIds(Arrays.asList("vti"));
        model = BinaryData.fromObject(model).toObject(QuerySelector.class);
        Assertions.assertEquals("gxsds", model.id());
        Assertions.assertEquals("blylsyxkqjnsj", model.queryString());
        Assertions.assertEquals("vti", model.subscriptionIds().get(0));
    }
}
