// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.chaos.models.ChaosTargetFilter;
import com.azure.resourcemanager.chaos.models.ChaosTargetQuerySelector;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ChaosTargetQuerySelectorTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ChaosTargetQuerySelector model =
            BinaryData
                .fromString(
                    "{\"type\":\"Query\",\"queryString\":\"c\",\"subscriptionIds\":[\"df\"],\"id\":\"wwa\",\"filter\":{\"type\":\"ChaosTargetFilter\"},\"\":{\"bxarzgszufoxci\":\"datajvdcpzfoqouic\",\"haz\":\"dataopidoamciodh\",\"toego\":\"datakhnzbonlw\"}}")
                .toObject(ChaosTargetQuerySelector.class);
        Assertions.assertEquals("wwa", model.id());
        Assertions.assertEquals("c", model.queryString());
        Assertions.assertEquals("df", model.subscriptionIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ChaosTargetQuerySelector model =
            new ChaosTargetQuerySelector()
                .withId("wwa")
                .withFilter(new ChaosTargetFilter())
                .withQueryString("c")
                .withSubscriptionIds(Arrays.asList("df"));
        model = BinaryData.fromObject(model).toObject(ChaosTargetQuerySelector.class);
        Assertions.assertEquals("wwa", model.id());
        Assertions.assertEquals("c", model.queryString());
        Assertions.assertEquals("df", model.subscriptionIds().get(0));
    }
}
