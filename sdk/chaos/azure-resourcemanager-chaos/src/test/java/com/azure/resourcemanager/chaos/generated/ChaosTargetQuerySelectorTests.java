// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.chaos.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.chaos.models.ChaosTargetFilter;
import com.azure.resourcemanager.chaos.models.ChaosTargetQuerySelector;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ChaosTargetQuerySelectorTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ChaosTargetQuerySelector model = BinaryData.fromString(
            "{\"type\":\"Query\",\"queryString\":\"gvcl\",\"subscriptionIds\":[\"gsncghkjeszz\",\"bijhtxfvgxbf\",\"mxnehmp\",\"ec\"],\"id\":\"godebfqkkrbmpu\",\"filter\":{\"type\":\"ChaosTargetFilter\"}}")
            .toObject(ChaosTargetQuerySelector.class);
        Assertions.assertEquals("godebfqkkrbmpu", model.id());
        Assertions.assertEquals("gvcl", model.queryString());
        Assertions.assertEquals("gsncghkjeszz", model.subscriptionIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ChaosTargetQuerySelector model = new ChaosTargetQuerySelector().withId("godebfqkkrbmpu")
            .withFilter(new ChaosTargetFilter())
            .withQueryString("gvcl")
            .withSubscriptionIds(Arrays.asList("gsncghkjeszz", "bijhtxfvgxbf", "mxnehmp", "ec"));
        model = BinaryData.fromObject(model).toObject(ChaosTargetQuerySelector.class);
        Assertions.assertEquals("godebfqkkrbmpu", model.id());
        Assertions.assertEquals("gvcl", model.queryString());
        Assertions.assertEquals("gsncghkjeszz", model.subscriptionIds().get(0));
    }
}
