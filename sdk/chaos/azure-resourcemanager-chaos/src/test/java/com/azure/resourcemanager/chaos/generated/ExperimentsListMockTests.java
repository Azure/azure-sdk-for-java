// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.chaos.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.chaos.ChaosManager;
import com.azure.resourcemanager.chaos.models.Experiment;
import com.azure.resourcemanager.chaos.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExperimentsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"twaenuuzko\",\"tenantId\":\"minrfdw\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"zqhof\":{\"principalId\":\"ziuiefozbhdm\",\"clientId\":\"l\"},\"iyylhalnswhccsp\":{\"principalId\":\"maequiahxicslfa\",\"clientId\":\"z\"}}},\"properties\":{\"provisioningState\":\"Canceled\",\"steps\":[{\"name\":\"vwitqscyw\",\"branches\":[{\"name\":\"gwol\",\"actions\":[]},{\"name\":\"h\",\"actions\":[]},{\"name\":\"zbwemh\",\"actions\":[]}]},{\"name\":\"i\",\"branches\":[{\"name\":\"brgz\",\"actions\":[]},{\"name\":\"wmsweypqwd\",\"actions\":[]}]},{\"name\":\"ggicccnxqhue\",\"branches\":[{\"name\":\"ktt\",\"actions\":[]},{\"name\":\"stvlzywemhzrnc\",\"actions\":[]},{\"name\":\"dtclusiypb\",\"actions\":[]},{\"name\":\"fgytguslfeadcyg\",\"actions\":[]}]},{\"name\":\"ukyhejhzis\",\"branches\":[{\"name\":\"fpel\",\"actions\":[]},{\"name\":\"lppvksrpq\",\"actions\":[]},{\"name\":\"ujzra\",\"actions\":[]},{\"name\":\"htwdwrftswibyrcd\",\"actions\":[]}]}],\"selectors\":[{\"type\":\"ChaosTargetSelector\",\"id\":\"h\",\"filter\":{\"type\":\"ChaosTargetFilter\"}},{\"type\":\"ChaosTargetSelector\",\"id\":\"fwpracstwi\",\"filter\":{\"type\":\"ChaosTargetFilter\"}},{\"type\":\"ChaosTargetSelector\",\"id\":\"khevxccedc\",\"filter\":{\"type\":\"ChaosTargetFilter\"}},{\"type\":\"ChaosTargetSelector\",\"id\":\"md\",\"filter\":{\"type\":\"ChaosTargetFilter\"}}]},\"location\":\"nwzxltjcv\",\"tags\":{\"wxqibyq\":\"tiugcxnav\",\"vfvpdbodaciz\":\"nyowxwlmdjrkvfg\",\"lhkrribdeibqipqk\":\"j\"},\"id\":\"hvxndzwmkrefajpj\",\"name\":\"rwkq\",\"type\":\"yhgbijtjivfx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ChaosManager manager = ChaosManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Experiment> response = manager.experiments().list(false, "rwr", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("nwzxltjcv", response.iterator().next().location());
        Assertions.assertEquals("tiugcxnav", response.iterator().next().tags().get("wxqibyq"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("vwitqscyw", response.iterator().next().steps().get(0).name());
        Assertions.assertEquals("gwol", response.iterator().next().steps().get(0).branches().get(0).name());
        Assertions.assertEquals("h", response.iterator().next().selectors().get(0).id());
    }
}
