// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.chaos.ChaosManager;
import com.azure.resourcemanager.chaos.models.Experiment;
import com.azure.resourcemanager.chaos.models.ResourceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExperimentsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{\"wmyijejveg\":{\"principalId\":\"9e54ea8c-5cec-47ae-8024-3b0f05f1d411\",\"clientId\":\"458a26f5-d64a-4aa6-b0ba-13071327b158\"},\"pna\":{\"principalId\":\"73e1f3c9-3dbc-4e1c-bb06-45839ad00a31\",\"clientId\":\"45f1624b-2901-49fa-89a6-8f1396458ca9\"},\"xccbdreaxhcex\":{\"principalId\":\"b5c3a3f7-fdd6-4720-90ad-066968b4fc18\",\"clientId\":\"c808ff56-4a42-4549-9347-ea63f08b8aae\"},\"vqahqkghtpwi\":{\"principalId\":\"1b806910-c911-456c-a239-ac8eeda2c4f2\",\"clientId\":\"57779487-e8d4-4cff-9b28-1f0d552ce7a8\"}},\"principalId\":\"hyjsvfycx\",\"tenantId\":\"fvoow\"},\"properties\":{\"provisioningState\":\"Creating\",\"steps\":[{\"name\":\"t\",\"branches\":[{\"name\":\"qp\",\"actions\":[]},{\"name\":\"y\",\"actions\":[]},{\"name\":\"s\",\"actions\":[]},{\"name\":\"ronzmyhgfip\",\"actions\":[]}]}],\"selectors\":[{\"type\":\"ChaosTargetSelector\",\"id\":\"xkmcwaekrrjre\",\"filter\":{\"type\":\"ChaosTargetFilter\"},\"\":{\"lbqpvuzlmvfelf\":\"datasgumhjglikkxwsl\",\"crpw\":\"datatgp\"}}]},\"location\":\"xeznoi\",\"tags\":{\"qkagfhsxt\":\"njwmwkpnbsazejj\",\"dm\":\"augzxnfaazpxdtn\"},\"id\":\"qjjlwuen\",\"name\":\"rkpyouaibrebqaay\",\"type\":\"j\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ChaosManager manager = ChaosManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Experiment> response
            = manager.experiments().list(false, "mctlpdngitv", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xeznoi", response.iterator().next().location());
        Assertions.assertEquals("njwmwkpnbsazejj", response.iterator().next().tags().get("qkagfhsxt"));
        Assertions.assertEquals(ResourceIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals("t", response.iterator().next().steps().get(0).name());
        Assertions.assertEquals("qp", response.iterator().next().steps().get(0).branches().get(0).name());
        Assertions.assertEquals("xkmcwaekrrjre", response.iterator().next().selectors().get(0).id());
    }
}
