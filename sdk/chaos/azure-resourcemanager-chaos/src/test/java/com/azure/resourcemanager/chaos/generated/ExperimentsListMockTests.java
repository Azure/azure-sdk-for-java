// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.chaos.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.chaos.ChaosManager;
import com.azure.resourcemanager.chaos.models.Experiment;
import com.azure.resourcemanager.chaos.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExperimentsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"ozphvwauyqncygu\",\"tenantId\":\"vipmdscwxqupevzh\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"n\":{\"principalId\":\"xhojuj\",\"clientId\":\"pelmcuvhixbjxyf\"},\"sttp\":{\"principalId\":\"r\",\"clientId\":\"o\"},\"ncu\":{\"principalId\":\"w\",\"clientId\":\"bnujrywvtylbf\"}}},\"properties\":{\"provisioningState\":\"Deleting\",\"steps\":[{\"name\":\"wiithtywub\",\"branches\":[{\"name\":\"bihwqknfdnt\",\"actions\":[]},{\"name\":\"jchrdgoihxumw\",\"actions\":[]}]}],\"selectors\":[{\"type\":\"ChaosTargetSelector\",\"id\":\"ond\",\"filter\":{\"type\":\"ChaosTargetFilter\"}}]},\"location\":\"uu\",\"tags\":{\"ytsbwtovv\":\"lwg\",\"iufxqknpir\":\"gseinq\",\"fcdmqnrojlpijn\":\"nepttwqmsni\",\"atiz\":\"rxfrddhc\"},\"id\":\"ronasxift\",\"name\":\"zq\",\"type\":\"zh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ChaosManager manager = ChaosManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Experiment> response
            = manager.experiments().list(false, "qqmtedltmmji", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("uu", response.iterator().next().location());
        Assertions.assertEquals("lwg", response.iterator().next().tags().get("ytsbwtovv"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("wiithtywub", response.iterator().next().steps().get(0).name());
        Assertions.assertEquals("bihwqknfdnt", response.iterator().next().steps().get(0).branches().get(0).name());
        Assertions.assertEquals("ond", response.iterator().next().selectors().get(0).id());
    }
}
