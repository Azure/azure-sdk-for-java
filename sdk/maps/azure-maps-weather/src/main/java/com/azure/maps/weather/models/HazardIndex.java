// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.maps.weather.models;

import com.azure.core.util.ExpandableEnum;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.ConcurrentHashMap;

/**
 * A severity/hazard index.
 * * `0` - No hazard.
 * * `1` - Be informed, be aware.
 * * `2` - Pay attention, be prepared.
 * * `3` - Take action.
 * * `4` - Life threatening, emergency.
 */
public final class HazardIndex implements ExpandableEnum<Integer> {

    private static final Map<Integer, HazardIndex> VALUES = new ConcurrentHashMap<>();

    /**
     * No hazard.
     */
    public static final HazardIndex NO_HAZARD = fromValue(0);

    /**
     * Be informed.
     */
    public static final HazardIndex INFORMED = fromValue(1);

    /**
     * Pay attention.
     */
    public static final HazardIndex PAY_ATTENTION = fromValue(2);

    /**
     * Take action.
     */
    public static final HazardIndex TAKE_ACTION = fromValue(3);

    /**
     * Emergency.
     */
    public static final HazardIndex EMERGENCY = fromValue(4);

    private final Integer value;

    private HazardIndex(Integer value) {
        this.value = value;
    }

    /**
     * Creates or finds a HazardIndex.
     *
     * @param value a value to look for.
     * @return the corresponding HazardIndex.
     */
    public static HazardIndex fromValue(Integer value) {
        Objects.requireNonNull(value, "'value' cannot be null.");
        HazardIndex member = VALUES.get(value);
        if (member != null) {
            return member;
        }
        return VALUES.computeIfAbsent(value, key -> new HazardIndex(key));
    }

    /**
     * Gets known HazardIndex values.
     *
     * @return Known HazardIndex values.
     */
    public static Collection<HazardIndex> values() {
        return new ArrayList<>(VALUES.values());
    }

    /**
     * Gets the value of the HazardIndex instance.
     *
     * @return the value of the HazardIndex instance.
     */
    @Override
    public Integer getValue() {
        return this.value;
    }

    @Override
    public String toString() {
        return Objects.toString(this.value);
    }

    @Override
    public boolean equals(Object obj) {
        return Objects.equals(this.value, obj);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(this.value);
    }

    int toInt() {
        return Integer.parseInt(toString());
    }
}
