// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.maps.weather.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The latest status on the alert in the current area.
 */
@Fluent
public final class LatestStatus implements JsonSerializable<LatestStatus> {

    /*
     * The latest status keyword for the alert, in the specified language. By default, returned in English (en-US).
     */
    private String localized;

    /*
     * Latest status keyword for the alert, in English (en-US).
     */
    private LatestStatusKeyword english;

    /**
     * Set default LatestStatus constructor to private
     */
    private LatestStatus() {
    }

    /**
     * Get the localized property: The latest status keyword for the alert, in the specified language. By default,
     * returned in English (en-US).
     *
     * @return the localized value.
     */
    public String getLocalized() {
        return this.localized;
    }

    /**
     * Get the english property: Latest status keyword for the alert, in English (en-US).
     *
     * @return the english value.
     */
    public LatestStatusKeyword getEnglish() {
        return this.english;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("localized", this.localized);
        jsonWriter.writeStringField("english", this.english == null ? null : this.english.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LatestStatus from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of LatestStatus if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the LatestStatus.
     */
    public static LatestStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LatestStatus deserializedLatestStatus = new LatestStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("localized".equals(fieldName)) {
                    deserializedLatestStatus.localized = reader.getString();
                } else if ("english".equals(fieldName)) {
                    deserializedLatestStatus.english = LatestStatusKeyword.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedLatestStatus;
        });
    }
}
