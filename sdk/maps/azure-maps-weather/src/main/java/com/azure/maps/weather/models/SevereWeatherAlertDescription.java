// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.maps.weather.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Description of a severe weather alert.
 */
@Fluent
public final class SevereWeatherAlertDescription implements JsonSerializable<SevereWeatherAlertDescription> {

    /*
     * Description of the alert in the specified language. By default English (en-US) is returned if the language parameter is not specified in the request.
     */
    private String description;

    /*
     * Description of the alert in English (en-US).
     */
    private String status;

    /**
     * Set default SevereWeatherAlertDescription constructor to private
     */
    private SevereWeatherAlertDescription() {
    }

    /**
     * Get the description property: Description of the alert in the specified language. By default English (en-US) is
     * returned if the language parameter is not specified in the request.
     *
     * @return the description value.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Get the status property: Description of the alert in English (en-US).
     *
     * @return the status value.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("localized", this.description);
        jsonWriter.writeStringField("english", this.status);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SevereWeatherAlertDescription from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of SevereWeatherAlertDescription if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SevereWeatherAlertDescription.
     */
    public static SevereWeatherAlertDescription fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SevereWeatherAlertDescription deserializedSevereWeatherAlertDescription
                = new SevereWeatherAlertDescription();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("localized".equals(fieldName)) {
                    deserializedSevereWeatherAlertDescription.description = reader.getString();
                } else if ("english".equals(fieldName)) {
                    deserializedSevereWeatherAlertDescription.status = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedSevereWeatherAlertDescription;
        });
    }
}
