// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.weather.models;

import com.azure.core.util.ExpandableEnum;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.ConcurrentHashMap;

/**
 * Defines values for DailyDuration.
 */
public final class DailyDuration implements ExpandableEnum<Integer> {
    private static final Map<Integer, DailyDuration> VALUES = new ConcurrentHashMap<>();

    /**
     * 1 day.
     */
    public static final DailyDuration ONE_DAY = fromValue(1);

    /**
     * 2 days.
     */
    public static final DailyDuration TWO_DAYS = fromValue(2);

    /**
     * 3 days.
     */
    public static final DailyDuration THREE_DAYS = fromValue(3);

    /**
     * 4 days.
     */
    public static final DailyDuration FOUR_DAYS = fromValue(4);

    /**
     * 5 days.
     */
    public static final DailyDuration FIVE_DAYS = fromValue(5);

    /**
     * 6 days.
     */
    public static final DailyDuration SIX_DAYS = fromValue(6);

    /**
     * 7 days.
     */
    public static final DailyDuration SEVEN_DAYS = fromValue(7);

    private final Integer value;

    private DailyDuration(Integer value) {
        this.value = value;
    }

    /**
     * Creates or finds a DailyDuration.
     *
     * @param value a value to look for.
     * @return the corresponding DailyDuration.
     */
    public static DailyDuration fromValue(Integer value) {
        return VALUES.computeIfAbsent(value, DailyDuration::new);
    }

    /**
     * Gets known DailyDuration values.
     *
     * @return known DailyDuration values.
     */
    public static Collection<DailyDuration> values() {
        return new ArrayList<>(VALUES.values());
    }

    /**
     * Gets the value of the DailyDuration instance.
     *
     * @return the value of the DailyDuration instance.
     */
    @Override
    public Integer getValue() {
        return this.value;
    }

    @Override
    @JsonValue
    public String toString() {
        return Objects.toString(this.value);
    }

    @Override
    public boolean equals(Object obj) {
        return this == obj;
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(this.value);
    }
}
