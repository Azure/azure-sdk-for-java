// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.weather.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The MinuteForecastResult model. */
@Immutable
public final class MinuteForecastResult {
    /*
     * Phrase summaries for the entire forecast period.
     */
    @JsonProperty(value = "summary", access = JsonProperty.Access.WRITE_ONLY)
    private MinuteForecastSummary summary;

    /*
     * Summary information for each interval in the forecast. The Summaries breaks down each potential interval where
     * precipitation starts and stops.
     */
    @JsonProperty(value = "intervalSummaries", access = JsonProperty.Access.WRITE_ONLY)
    private List<IntervalSummary> intervalSummaries;

    /*
     * Forecast data for each interval in the forecast.
     */
    @JsonProperty(value = "intervals", access = JsonProperty.Access.WRITE_ONLY)
    private List<ForecastInterval> intervals;

    /** Set default MinuteForecastResult constructor to private */
    private MinuteForecastResult() {}

    /**
     * Get the summary property: Phrase summaries for the entire forecast period.
     *
     * @return the summary value.
     */
    public MinuteForecastSummary getSummary() {
        return this.summary;
    }

    /**
     * Get the intervalSummaries property: Summary information for each interval in the forecast. The Summaries breaks
     * down each potential interval where precipitation starts and stops.
     *
     * @return the intervalSummaries value.
     */
    public List<IntervalSummary> getIntervalSummaries() {
        return this.intervalSummaries;
    }

    /**
     * Get the intervals property: Forecast data for each interval in the forecast.
     *
     * @return the intervals value.
     */
    public List<ForecastInterval> getIntervals() {
        return this.intervals;
    }
}
