// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.maps.weather.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Numeric value representing an image that displays the `iconPhrase`. Please refer to [Weather services in Azure
 * Maps](/azure/azure-maps/weather-services-concepts#weather-icons) for details.
 */
public final class IconCode extends ExpandableStringEnum<IconCode> {

    /**
     * Sunny.
     */
    public static final IconCode SUNNY = fromInt(1);

    /**
     * Mostly Sunny.
     */
    public static final IconCode MOSTLY_SUNNY = fromInt(2);

    /**
     * Partly Sunny.
     */
    public static final IconCode PARTLY_SUNNY = fromInt(3);

    /**
     * Intermittent Clouds.
     */
    public static final IconCode INTERMITTENT_CLOUDS = fromInt(4);

    /**
     * Hazy Sunshine.
     */
    public static final IconCode HAZY_SUNSHINE = fromInt(5);

    /**
     * Mostly Cloudy.
     */
    public static final IconCode MOSTLY_CLOUDY = fromInt(6);

    /**
     * Cloudy.
     */
    public static final IconCode CLOUDY = fromInt(7);

    /**
     * Dreary (Overcast).
     */
    public static final IconCode DREARY = fromInt(8);

    /**
     * Fog.
     */
    public static final IconCode FOG = fromInt(11);

    /**
     * Showers.
     */
    public static final IconCode SHOWERS = fromInt(12);

    /**
     * Mostly Cloudy with Showers.
     */
    public static final IconCode MOSTLY_CLOUDY_WITH_SHOWERS = fromInt(13);

    /**
     * Partly Sunny with Showers.
     */
    public static final IconCode PARTLY_SUNNY_WITH_SHOWERS = fromInt(14);

    /**
     * Thunderstorms.
     */
    public static final IconCode THUNDERSTORMS = fromInt(15);

    /**
     * Mostly Cloudy with Thunderstorms.
     */
    public static final IconCode MOSTLY_CLOUDY_WITH_THUNDERSTORMS = fromInt(16);

    /**
     * Partly Sunny with Thunderstorms.
     */
    public static final IconCode PARTLY_SUNNY_WITH_THUNDERSTORMS = fromInt(17);

    /**
     * Rain.
     */
    public static final IconCode RAIN = fromInt(18);

    /**
     * Flurries.
     */
    public static final IconCode FLURRIES = fromInt(19);

    /**
     * Mostly Cloudy with Flurries.
     */
    public static final IconCode MOSTLY_CLOUDY_WITH_FLURRIES = fromInt(20);

    /**
     * Partly Sunny with Flurries.
     */
    public static final IconCode PARTLY_SUNNY_WITH_FLURRIES = fromInt(21);

    /**
     * Snow.
     */
    public static final IconCode SNOW = fromInt(22);

    /**
     * Mostly Cloudy with Snow.
     */
    public static final IconCode MOSTLY_CLOUDY_WITH_SNOW = fromInt(23);

    /**
     * Ice.
     */
    public static final IconCode ICE = fromInt(24);

    /**
     * Sleet.
     */
    public static final IconCode SLEET = fromInt(25);

    /**
     * Freezing Rain.
     */
    public static final IconCode FREEZING_RAIN = fromInt(26);

    /**
     * Rain and Snow.
     */
    public static final IconCode RAIN_AND_SNOW = fromInt(29);

    /**
     * Hot.
     */
    public static final IconCode HOT = fromInt(30);

    /**
     * Cold.
     */
    public static final IconCode COLD = fromInt(31);

    /**
     * Windy.
     */
    public static final IconCode WINDY = fromInt(32);

    /**
     * Clear.
     */
    public static final IconCode CLEAR = fromInt(33);

    /**
     * Mostly Clear.
     */
    public static final IconCode MOSTLY_CLEAR = fromInt(34);

    /**
     * Partly Cloudy.
     */
    public static final IconCode PARTLY_CLOUDY = fromInt(35);

    /**
     * Intermittent Clouds (Night).
     */
    public static final IconCode INTERMITTENT_CLOUDS_NIGHT = fromInt(36);

    /**
     * Hazy Moonlight.
     */
    public static final IconCode HAZY_MOONLIGHT = fromInt(37);

    /**
     * Mostly Cloudy (Night).
     */
    public static final IconCode MOSTLY_CLOUDY_NIGHT = fromInt(38);

    /**
     * Partly Cloudy with Showers.
     */
    public static final IconCode PARTLY_CLOUDY_WITH_SHOWERS = fromInt(39);

    /**
     * Mostly Cloudy with Showers (Night).
     */
    public static final IconCode MOSTLY_CLOUDY_WITH_SHOWERS_NIGHT = fromInt(40);

    /**
     * Partly Cloudy with Thunderstorms.
     */
    public static final IconCode PARTLY_CLOUDY_WITH_THUNDERSTORMS = fromInt(41);

    /**
     * Mostly Cloudy with Thunderstorms (Night).
     */
    public static final IconCode MOSTLY_CLOUDY_WITH_THUNDERSTORMS_NIGHT = fromInt(42);

    /**
     * Mostly Cloudy with Flurries (Night).
     */
    public static final IconCode MOSTLY_CLOUDY_WITH_FLURRIES_NIGHT = fromInt(43);

    /**
     * Mostly Cloudy with Snow (Night).
     */
    public static final IconCode MOSTLY_CLOUDY_WITH_SNOW_NIGHT = fromInt(44);

    /**
     * Creates a new instance of IconCode value.
     *
     * @deprecated Use the {@link #fromInt(int)} factory method.
     */
    @Deprecated
    public IconCode() {
    }

    /**
     * Creates or finds a IconCode from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding IconCode.
     */
    public static IconCode fromInt(int name) {
        return fromString(String.valueOf(name), IconCode.class);
    }

    /**
     * Gets known IconCode values.
     *
     * @return known IconCode values.
     */
    public static Collection<IconCode> values() {
        return values(IconCode.class);
    }

    int toInt() {
        return Integer.parseInt(toString());
    }
}
