// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.geolocation;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.maps.geolocation.implementation.GeolocationsImpl;

/** Initializes a new instance of the synchronous AzureMapsGeolocationServiceClient type. */
@ServiceClient(builder = AzureMapsGeolocationServiceClientBuilder.class)
public final class AzureMapsGeolocationServiceClient {
    @Generated private final GeolocationsImpl serviceClient;

    /**
     * Initializes an instance of Geolocations client.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    AzureMapsGeolocationServiceClient(GeolocationsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This service will return the ISO country code for the provided IP address. Developers can use this information
     * to block or alter certain content based on geographical locations where the application is being viewed from.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>ip</td><td>String</td><td>Yes</td><td>The IP address. Both IPv4 and IPv6 are allowed.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     countryRegion: {
     *         isoCode: String
     *     }
     *     ipAddress: String
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Only `json` format is supported.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful call to IP Address to country/region API along with {@link
     *     Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getLocationWithResponse(String format, RequestOptions requestOptions) {
        return this.serviceClient.getLocationWithResponse(format, requestOptions);
    }
}
