// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.maps.traffic.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * This object is returned from a successful Traffic Incident Viewport call.
 */
@Immutable
public final class TrafficIncidentViewport implements JsonSerializable<TrafficIncidentViewport> {

    /*
     * Viewport Response object
     */
    private TrafficIncidentViewportResponse viewpResp;

    /**
     * Set default constructor to private
     */
    private TrafficIncidentViewport() {
    }

    /**
     * Get the viewpResp property: Viewport Response object.
     *
     * @return the viewpResp value.
     */
    public TrafficIncidentViewportResponse getViewportResponse() {
        return this.viewpResp;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TrafficIncidentViewport from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of TrafficIncidentViewport if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TrafficIncidentViewport.
     */
    public static TrafficIncidentViewport fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TrafficIncidentViewport deserializedTrafficIncidentViewport = new TrafficIncidentViewport();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("viewpResp".equals(fieldName)) {
                    deserializedTrafficIncidentViewport.viewpResp = TrafficIncidentViewportResponse.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedTrafficIncidentViewport;
        });
    }
}
