// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.traffic.implementation;

import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.PathParam;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import reactor.core.publisher.Mono;

/** An instance of this class provides access to all the operations defined in Traffics. */
public final class TrafficsImpl {
    /** The proxy service used to perform REST calls. */
    private final TrafficsService service;

    /** The service client containing this operation class. */
    private final AzureMapsTrafficServiceClientImpl client;

    /**
     * Initializes an instance of TrafficsImpl.
     *
     * @param client the instance of the service client containing this operation class.
     */
    TrafficsImpl(AzureMapsTrafficServiceClientImpl client) {
        this.service = RestProxy.create(TrafficsService.class, client.getHttpPipeline(), client.getSerializerAdapter());
        this.client = client;
    }

    /**
     * The interface defining all the services for AzureMapsTrafficServiceTraffics to be used by the proxy service to
     * perform REST calls.
     */
    @Host("{$host}")
    @ServiceInterface(name = "AzureMapsTrafficServ")
    private interface TrafficsService {
        @Get("/traffic/flow/tile/{format}")
        @ExpectedResponses({200})
        Mono<Response<Void>> getTrafficFlowTile(
                @HostParam("$host") String host,
                @QueryParam("api-version") String apiVersion,
                @PathParam("format") String format,
                RequestOptions requestOptions,
                Context context);

        @Get("/traffic/flow/segment/{format}")
        @ExpectedResponses({200})
        Mono<Response<BinaryData>> getTrafficFlowSegment(
                @HostParam("$host") String host,
                @QueryParam("api-version") String apiVersion,
                @PathParam("format") String format,
                RequestOptions requestOptions,
                Context context);

        @Get("/traffic/incident/tile/{format}")
        @ExpectedResponses({200})
        Mono<Response<Void>> getTrafficIncidentTile(
                @HostParam("$host") String host,
                @QueryParam("api-version") String apiVersion,
                @PathParam("format") String format,
                RequestOptions requestOptions,
                Context context);

        @Get("/traffic/incident/detail/{format}")
        @ExpectedResponses({200})
        Mono<Response<BinaryData>> getTrafficIncidentDetail(
                @HostParam("$host") String host,
                @QueryParam("api-version") String apiVersion,
                @PathParam("format") String format,
                RequestOptions requestOptions,
                Context context);

        @Get("/traffic/incident/viewport/{format}")
        @ExpectedResponses({200})
        Mono<Response<BinaryData>> getTrafficIncidentViewport(
                @HostParam("$host") String host,
                @QueryParam("api-version") String apiVersion,
                @PathParam("format") String format,
                RequestOptions requestOptions,
                Context context);
    }

    /**
     * __Traffic Flow Tile__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>The Azure Flow Tile API serves 256 x 256 pixel tiles showing traffic flow. All tiles use the same grid system.
     * Because the traffic tiles use transparent images, they can be layered on top of map tiles to create a compound
     * display. The Flow tiles use colors to indicate either the speed of traffic on different road segments, or the
     * difference between that speed and the free-flow speed on the road segment in question.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>&lt;p&gt;The style to be used to render the tile.&lt;/p&gt;</td></tr>
     *     <tr><td>zoom</td><td>int</td><td>Yes</td><td>Zoom level for the desired tile. For _raster_ tiles, value must be in the range: 0-22 (inclusive). For _vector_ tiles, value must be in the range: 0-22 (inclusive).
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>x</td><td>int</td><td>Yes</td><td>X coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>y</td><td>int</td><td>Yes</td><td>Y coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>thickness</td><td>String</td><td>No</td><td>The value of the width of the line representing traffic. This value is a multiplier and the accepted values range from 1 - 20. The default value is 10. This parameter is not valid when format is pbf.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * @param format Desired format of the response. Possible values are png &amp;amp; pbf.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> getTrafficFlowTileWithResponseAsync(String format, RequestOptions requestOptions) {
        return FluxUtil.withContext(
                context ->
                        service.getTrafficFlowTile(
                                this.client.getHost(),
                                this.client.getServiceVersion().getVersion(),
                                format,
                                requestOptions,
                                context));
    }

    /**
     * __Traffic Flow Tile__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>The Azure Flow Tile API serves 256 x 256 pixel tiles showing traffic flow. All tiles use the same grid system.
     * Because the traffic tiles use transparent images, they can be layered on top of map tiles to create a compound
     * display. The Flow tiles use colors to indicate either the speed of traffic on different road segments, or the
     * difference between that speed and the free-flow speed on the road segment in question.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>&lt;p&gt;The style to be used to render the tile.&lt;/p&gt;</td></tr>
     *     <tr><td>zoom</td><td>int</td><td>Yes</td><td>Zoom level for the desired tile. For _raster_ tiles, value must be in the range: 0-22 (inclusive). For _vector_ tiles, value must be in the range: 0-22 (inclusive).
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>x</td><td>int</td><td>Yes</td><td>X coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>y</td><td>int</td><td>Yes</td><td>Y coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>thickness</td><td>String</td><td>No</td><td>The value of the width of the line representing traffic. This value is a multiplier and the accepted values range from 1 - 20. The default value is 10. This parameter is not valid when format is pbf.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * @param format Desired format of the response. Possible values are png &amp;amp; pbf.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @param context The context to associate with this operation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> getTrafficFlowTileWithResponseAsync(
            String format, RequestOptions requestOptions, Context context) {
        return service.getTrafficFlowTile(
                this.client.getHost(), this.client.getServiceVersion().getVersion(), format, requestOptions, context);
    }

    /**
     * __Traffic Flow Tile__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>The Azure Flow Tile API serves 256 x 256 pixel tiles showing traffic flow. All tiles use the same grid system.
     * Because the traffic tiles use transparent images, they can be layered on top of map tiles to create a compound
     * display. The Flow tiles use colors to indicate either the speed of traffic on different road segments, or the
     * difference between that speed and the free-flow speed on the road segment in question.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>&lt;p&gt;The style to be used to render the tile.&lt;/p&gt;</td></tr>
     *     <tr><td>zoom</td><td>int</td><td>Yes</td><td>Zoom level for the desired tile. For _raster_ tiles, value must be in the range: 0-22 (inclusive). For _vector_ tiles, value must be in the range: 0-22 (inclusive).
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>x</td><td>int</td><td>Yes</td><td>X coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>y</td><td>int</td><td>Yes</td><td>Y coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>thickness</td><td>String</td><td>No</td><td>The value of the width of the line representing traffic. This value is a multiplier and the accepted values range from 1 - 20. The default value is 10. This parameter is not valid when format is pbf.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * @param format Desired format of the response. Possible values are png &amp;amp; pbf.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> getTrafficFlowTileWithResponse(String format, RequestOptions requestOptions) {
        return getTrafficFlowTileWithResponseAsync(format, requestOptions).block();
    }

    /**
     * __Traffic Flow Segment__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This service provides information about the speeds and travel times of the road fragment closest to the given
     * coordinates. It is designed to work alongside the Flow layer of the Render Service to support clickable flow data
     * visualizations. With this API, the client side can connect any place in the map with flow data on the closest
     * road and present it to the user.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>The style to be used to render the tile. Valid values are absolute which returns colors reflecting the absolute speed measured, relative which returns the speed relative to free-flow, Relative-delay which displays relative speeds only where they are different from the freeflow speeds</td></tr>
     *     <tr><td>zoom</td><td>int</td><td>Yes</td><td>Zoom level for the desired tile. Zoom value must be in the range: 0-22 (inclusive).
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>query</td><td>String</td><td>Yes</td><td>Coordinates of the point close to the road segment. This parameter is a list of four coordinates, containing two coordinate pairs (lat, long, lat, long), and calculated using EPSG4326 projection. When this endpoint is called directly, coordinates are passed in as a single string containing four coordinates, separated by commas.</td></tr>
     *     <tr><td>unit</td><td>String</td><td>No</td><td>Unit of speed in KMPH or MPH</td></tr>
     *     <tr><td>thickness</td><td>String</td><td>No</td><td>The value of the width of the line representing traffic. This value is a multiplier and the accepted values range from 1 - 20. The default value is 10.</td></tr>
     *     <tr><td>openLr</td><td>String</td><td>No</td><td>Boolean on whether the response should include OpenLR code</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     flowSegmentData: {
     *         functionalRoadClass: String
     *         currentSpeed: Integer
     *         freeFlowSpeed: Integer
     *         currentTravelTime: Integer
     *         freeFlowTravelTime: Integer
     *         confidence: Float
     *         coordinates: {
     *             coordinates: [
     *                 {
     *                     latitude: Double
     *                     longitude: Double
     *                 }
     *             ]
     *         }
     *         version: String
     *         openLrCode: String
     *     }
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Value can be either _json_ or _xml_.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Traffic Flow Segment call along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getTrafficFlowSegmentWithResponseAsync(
            String format, RequestOptions requestOptions) {
        return FluxUtil.withContext(
                context ->
                        service.getTrafficFlowSegment(
                                this.client.getHost(),
                                this.client.getServiceVersion().getVersion(),
                                format,
                                requestOptions,
                                context));
    }

    /**
     * __Traffic Flow Segment__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This service provides information about the speeds and travel times of the road fragment closest to the given
     * coordinates. It is designed to work alongside the Flow layer of the Render Service to support clickable flow data
     * visualizations. With this API, the client side can connect any place in the map with flow data on the closest
     * road and present it to the user.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>The style to be used to render the tile. Valid values are absolute which returns colors reflecting the absolute speed measured, relative which returns the speed relative to free-flow, Relative-delay which displays relative speeds only where they are different from the freeflow speeds</td></tr>
     *     <tr><td>zoom</td><td>int</td><td>Yes</td><td>Zoom level for the desired tile. Zoom value must be in the range: 0-22 (inclusive).
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>query</td><td>String</td><td>Yes</td><td>Coordinates of the point close to the road segment. This parameter is a list of four coordinates, containing two coordinate pairs (lat, long, lat, long), and calculated using EPSG4326 projection. When this endpoint is called directly, coordinates are passed in as a single string containing four coordinates, separated by commas.</td></tr>
     *     <tr><td>unit</td><td>String</td><td>No</td><td>Unit of speed in KMPH or MPH</td></tr>
     *     <tr><td>thickness</td><td>String</td><td>No</td><td>The value of the width of the line representing traffic. This value is a multiplier and the accepted values range from 1 - 20. The default value is 10.</td></tr>
     *     <tr><td>openLr</td><td>String</td><td>No</td><td>Boolean on whether the response should include OpenLR code</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     flowSegmentData: {
     *         functionalRoadClass: String
     *         currentSpeed: Integer
     *         freeFlowSpeed: Integer
     *         currentTravelTime: Integer
     *         freeFlowTravelTime: Integer
     *         confidence: Float
     *         coordinates: {
     *             coordinates: [
     *                 {
     *                     latitude: Double
     *                     longitude: Double
     *                 }
     *             ]
     *         }
     *         version: String
     *         openLrCode: String
     *     }
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Value can be either _json_ or _xml_.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @param context The context to associate with this operation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Traffic Flow Segment call along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getTrafficFlowSegmentWithResponseAsync(
            String format, RequestOptions requestOptions, Context context) {
        return service.getTrafficFlowSegment(
                this.client.getHost(), this.client.getServiceVersion().getVersion(), format, requestOptions, context);
    }

    /**
     * __Traffic Flow Segment__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This service provides information about the speeds and travel times of the road fragment closest to the given
     * coordinates. It is designed to work alongside the Flow layer of the Render Service to support clickable flow data
     * visualizations. With this API, the client side can connect any place in the map with flow data on the closest
     * road and present it to the user.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>The style to be used to render the tile. Valid values are absolute which returns colors reflecting the absolute speed measured, relative which returns the speed relative to free-flow, Relative-delay which displays relative speeds only where they are different from the freeflow speeds</td></tr>
     *     <tr><td>zoom</td><td>int</td><td>Yes</td><td>Zoom level for the desired tile. Zoom value must be in the range: 0-22 (inclusive).
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>query</td><td>String</td><td>Yes</td><td>Coordinates of the point close to the road segment. This parameter is a list of four coordinates, containing two coordinate pairs (lat, long, lat, long), and calculated using EPSG4326 projection. When this endpoint is called directly, coordinates are passed in as a single string containing four coordinates, separated by commas.</td></tr>
     *     <tr><td>unit</td><td>String</td><td>No</td><td>Unit of speed in KMPH or MPH</td></tr>
     *     <tr><td>thickness</td><td>String</td><td>No</td><td>The value of the width of the line representing traffic. This value is a multiplier and the accepted values range from 1 - 20. The default value is 10.</td></tr>
     *     <tr><td>openLr</td><td>String</td><td>No</td><td>Boolean on whether the response should include OpenLR code</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     flowSegmentData: {
     *         functionalRoadClass: String
     *         currentSpeed: Integer
     *         freeFlowSpeed: Integer
     *         currentTravelTime: Integer
     *         freeFlowTravelTime: Integer
     *         confidence: Float
     *         coordinates: {
     *             coordinates: [
     *                 {
     *                     latitude: Double
     *                     longitude: Double
     *                 }
     *             ]
     *         }
     *         version: String
     *         openLrCode: String
     *     }
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Value can be either _json_ or _xml_.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Traffic Flow Segment call along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getTrafficFlowSegmentWithResponse(String format, RequestOptions requestOptions) {
        return getTrafficFlowSegmentWithResponseAsync(format, requestOptions).block();
    }

    /**
     * __Traffic Incident Tile__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This service serves 256 x 256 pixel tiles showing traffic incidents. All tiles use the same grid system.
     * Because the traffic tiles use transparent images, they can be layered on top of map tiles to create a compound
     * display. Traffic tiles render graphics to indicate traffic on the roads in the specified area.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>The style to be used to render the tile. This parameter is not valid when format is pbf.</td></tr>
     *     <tr><td>zoom</td><td>int</td><td>Yes</td><td>Zoom level for the desired tile. For _raster_ tiles, value must be in the range: 0-22 (inclusive). For _vector_ tiles, value must be in the range: 0-22 (inclusive).
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>x</td><td>int</td><td>Yes</td><td>X coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>y</td><td>int</td><td>Yes</td><td>Y coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>t</td><td>String</td><td>No</td><td>Reference value for the state of traffic at a particular time, obtained from the Viewport API call, trafficModelId attribute in trafficState field. It is updated every minute, and is valid for two minutes before it times out. Use -1 to  get the most recent traffic information. Default: most recent traffic information.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * @param format Desired format of the response. Possible values are png &amp;amp; pbf.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> getTrafficIncidentTileWithResponseAsync(String format, RequestOptions requestOptions) {
        return FluxUtil.withContext(
                context ->
                        service.getTrafficIncidentTile(
                                this.client.getHost(),
                                this.client.getServiceVersion().getVersion(),
                                format,
                                requestOptions,
                                context));
    }

    /**
     * __Traffic Incident Tile__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This service serves 256 x 256 pixel tiles showing traffic incidents. All tiles use the same grid system.
     * Because the traffic tiles use transparent images, they can be layered on top of map tiles to create a compound
     * display. Traffic tiles render graphics to indicate traffic on the roads in the specified area.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>The style to be used to render the tile. This parameter is not valid when format is pbf.</td></tr>
     *     <tr><td>zoom</td><td>int</td><td>Yes</td><td>Zoom level for the desired tile. For _raster_ tiles, value must be in the range: 0-22 (inclusive). For _vector_ tiles, value must be in the range: 0-22 (inclusive).
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>x</td><td>int</td><td>Yes</td><td>X coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>y</td><td>int</td><td>Yes</td><td>Y coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>t</td><td>String</td><td>No</td><td>Reference value for the state of traffic at a particular time, obtained from the Viewport API call, trafficModelId attribute in trafficState field. It is updated every minute, and is valid for two minutes before it times out. Use -1 to  get the most recent traffic information. Default: most recent traffic information.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * @param format Desired format of the response. Possible values are png &amp;amp; pbf.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @param context The context to associate with this operation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> getTrafficIncidentTileWithResponseAsync(
            String format, RequestOptions requestOptions, Context context) {
        return service.getTrafficIncidentTile(
                this.client.getHost(), this.client.getServiceVersion().getVersion(), format, requestOptions, context);
    }

    /**
     * __Traffic Incident Tile__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This service serves 256 x 256 pixel tiles showing traffic incidents. All tiles use the same grid system.
     * Because the traffic tiles use transparent images, they can be layered on top of map tiles to create a compound
     * display. Traffic tiles render graphics to indicate traffic on the roads in the specified area.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>The style to be used to render the tile. This parameter is not valid when format is pbf.</td></tr>
     *     <tr><td>zoom</td><td>int</td><td>Yes</td><td>Zoom level for the desired tile. For _raster_ tiles, value must be in the range: 0-22 (inclusive). For _vector_ tiles, value must be in the range: 0-22 (inclusive).
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>x</td><td>int</td><td>Yes</td><td>X coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>y</td><td>int</td><td>Yes</td><td>Y coordinate of the tile on zoom grid. Value must be in the range [0, 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
     *
     * Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.</td></tr>
     *     <tr><td>t</td><td>String</td><td>No</td><td>Reference value for the state of traffic at a particular time, obtained from the Viewport API call, trafficModelId attribute in trafficState field. It is updated every minute, and is valid for two minutes before it times out. Use -1 to  get the most recent traffic information. Default: most recent traffic information.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * @param format Desired format of the response. Possible values are png &amp;amp; pbf.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> getTrafficIncidentTileWithResponse(String format, RequestOptions requestOptions) {
        return getTrafficIncidentTileWithResponseAsync(format, requestOptions).block();
    }

    /**
     * __Traffic Incident Detail__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API provides information on traffic incidents inside a given bounding box, based on the current Traffic
     * Model ID. The Traffic Model ID is available to grant synchronization of data between calls and API's. The Traffic
     * Model ID is a key value for determining the currency of traffic incidents. It is updated every minute, and is
     * valid for two minutes before it times out. It is used in rendering [incident
     * tiles](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidenttile). It can be obtained from
     * the [Viewport API](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidentviewport).
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>The style that will be used to render the tile in Traffic [Incident Tile API](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidenttile).  This will have an effect on the coordinates of traffic incidents in the reply.</td></tr>
     *     <tr><td>boundingbox</td><td>String</td><td>Yes</td><td>The `boundingbox` is represented by two value pairs describing it's corners (first pair for lower left corner and second for upper right). The pairs can either be specified using any of the `projection`'s specified below (e.g., _minY,minX,maxY,maxX_) or by two latitude-longitude pairs (e.g., _minLat,minLon,maxLat,maxLon_).&lt;br&gt;&lt;br&gt;NOTE: If latitude/longitude pairs are used, then the `projection` parameter must be set to "EPSG4326".</td></tr>
     *     <tr><td>boundingZoom</td><td>int</td><td>Yes</td><td>Zoom level for desired tile. 0 to 22 for raster tiles, 0 through 22 for vector tiles</td></tr>
     *     <tr><td>trafficmodelid</td><td>String</td><td>Yes</td><td>Number referencing traffic model. This can be obtained from the [Viewport API](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidentviewport). It is updated every minute, and is valid for two minutes before it times out. If the wrong Traffic Model ID is specified, the correct one will be returned by the interface. A value of -1 will always invoke the most recent traffic model</td></tr>
     *     <tr><td>language</td><td>String</td><td>No</td><td>[ISO 639-1 code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) for the output language. Supported languages are ar, ca, cs, da, de, el, en, en-GB, en-US, es, et, fi, fr, he, hu, id, in*, it, lt, lv, nb, nl, no, pl, pt, ro, ru, sk, sv, th, tr, zh.
     *
     * Please refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details. When invalid language code is provided response is returned in English. When incident cause or description does not have translation, English description is returned.</td></tr>
     *     <tr><td>projection</td><td>String</td><td>No</td><td>The projection used to specify the coordinates in the request and response. [EPSG900913](http://docs.openlayers.org/library/spherical_mercator.html) (default) or [EPSG4326](http://spatialreference.org/ref/epsg/4326/)</td></tr>
     *     <tr><td>geometries</td><td>String</td><td>No</td><td>The type of vector geometry added to incidents (returned in the &lt;v&gt; element of the response).</td></tr>
     *     <tr><td>expandCluster</td><td>String</td><td>No</td><td>Boolean to indicate whether to list all traffic incidents in a cluster separately</td></tr>
     *     <tr><td>originalPosition</td><td>String</td><td>No</td><td>Boolean on whether to return the original position of the incident (&lt;op&gt;) as well as the one shifted to the beginning of the traffic tube (&lt;op&gt;)</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     tm: {
     *         id: String
     *         pointsOfInterest: [
     *             {
     *                 id: String
     *                 point: {
     *                     x: Float
     *                     y: Float
     *                 }
     *                 iconCategory: String(0/1/2/3/4/5/6/7/8/9/10/11/12/13/14)
     *                 magnitudeOfDelay: String(0/1/2/3/4)
     *                 bottomLeftCoordinate: (recursive schema, see bottomLeftCoordinate above)
     *                 topLeftCoordinate: (recursive schema, see topLeftCoordinate above)
     *                 clusterSize: Integer
     *                 lengthInMeters: Integer
     *                 roadNumbers: String
     *                 startDate: String
     *                 endDate: String
     *                 delayInSeconds: Integer
     *                 trafficEndLocation: String
     *                 trafficStartLocation: String
     *                 description: String
     *                 cause: String
     *             }
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Value can be either _json_ or _xml_.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Traffic incident Detail call along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getTrafficIncidentDetailWithResponseAsync(
            String format, RequestOptions requestOptions) {
        return FluxUtil.withContext(
                context ->
                        service.getTrafficIncidentDetail(
                                this.client.getHost(),
                                this.client.getServiceVersion().getVersion(),
                                format,
                                requestOptions,
                                context));
    }

    /**
     * __Traffic Incident Detail__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API provides information on traffic incidents inside a given bounding box, based on the current Traffic
     * Model ID. The Traffic Model ID is available to grant synchronization of data between calls and API's. The Traffic
     * Model ID is a key value for determining the currency of traffic incidents. It is updated every minute, and is
     * valid for two minutes before it times out. It is used in rendering [incident
     * tiles](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidenttile). It can be obtained from
     * the [Viewport API](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidentviewport).
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>The style that will be used to render the tile in Traffic [Incident Tile API](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidenttile).  This will have an effect on the coordinates of traffic incidents in the reply.</td></tr>
     *     <tr><td>boundingbox</td><td>String</td><td>Yes</td><td>The `boundingbox` is represented by two value pairs describing it's corners (first pair for lower left corner and second for upper right). The pairs can either be specified using any of the `projection`'s specified below (e.g., _minY,minX,maxY,maxX_) or by two latitude-longitude pairs (e.g., _minLat,minLon,maxLat,maxLon_).&lt;br&gt;&lt;br&gt;NOTE: If latitude/longitude pairs are used, then the `projection` parameter must be set to "EPSG4326".</td></tr>
     *     <tr><td>boundingZoom</td><td>int</td><td>Yes</td><td>Zoom level for desired tile. 0 to 22 for raster tiles, 0 through 22 for vector tiles</td></tr>
     *     <tr><td>trafficmodelid</td><td>String</td><td>Yes</td><td>Number referencing traffic model. This can be obtained from the [Viewport API](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidentviewport). It is updated every minute, and is valid for two minutes before it times out. If the wrong Traffic Model ID is specified, the correct one will be returned by the interface. A value of -1 will always invoke the most recent traffic model</td></tr>
     *     <tr><td>language</td><td>String</td><td>No</td><td>[ISO 639-1 code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) for the output language. Supported languages are ar, ca, cs, da, de, el, en, en-GB, en-US, es, et, fi, fr, he, hu, id, in*, it, lt, lv, nb, nl, no, pl, pt, ro, ru, sk, sv, th, tr, zh.
     *
     * Please refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details. When invalid language code is provided response is returned in English. When incident cause or description does not have translation, English description is returned.</td></tr>
     *     <tr><td>projection</td><td>String</td><td>No</td><td>The projection used to specify the coordinates in the request and response. [EPSG900913](http://docs.openlayers.org/library/spherical_mercator.html) (default) or [EPSG4326](http://spatialreference.org/ref/epsg/4326/)</td></tr>
     *     <tr><td>geometries</td><td>String</td><td>No</td><td>The type of vector geometry added to incidents (returned in the &lt;v&gt; element of the response).</td></tr>
     *     <tr><td>expandCluster</td><td>String</td><td>No</td><td>Boolean to indicate whether to list all traffic incidents in a cluster separately</td></tr>
     *     <tr><td>originalPosition</td><td>String</td><td>No</td><td>Boolean on whether to return the original position of the incident (&lt;op&gt;) as well as the one shifted to the beginning of the traffic tube (&lt;op&gt;)</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     tm: {
     *         id: String
     *         pointsOfInterest: [
     *             {
     *                 id: String
     *                 point: {
     *                     x: Float
     *                     y: Float
     *                 }
     *                 iconCategory: String(0/1/2/3/4/5/6/7/8/9/10/11/12/13/14)
     *                 magnitudeOfDelay: String(0/1/2/3/4)
     *                 bottomLeftCoordinate: (recursive schema, see bottomLeftCoordinate above)
     *                 topLeftCoordinate: (recursive schema, see topLeftCoordinate above)
     *                 clusterSize: Integer
     *                 lengthInMeters: Integer
     *                 roadNumbers: String
     *                 startDate: String
     *                 endDate: String
     *                 delayInSeconds: Integer
     *                 trafficEndLocation: String
     *                 trafficStartLocation: String
     *                 description: String
     *                 cause: String
     *             }
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Value can be either _json_ or _xml_.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @param context The context to associate with this operation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Traffic incident Detail call along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getTrafficIncidentDetailWithResponseAsync(
            String format, RequestOptions requestOptions, Context context) {
        return service.getTrafficIncidentDetail(
                this.client.getHost(), this.client.getServiceVersion().getVersion(), format, requestOptions, context);
    }

    /**
     * __Traffic Incident Detail__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API provides information on traffic incidents inside a given bounding box, based on the current Traffic
     * Model ID. The Traffic Model ID is available to grant synchronization of data between calls and API's. The Traffic
     * Model ID is a key value for determining the currency of traffic incidents. It is updated every minute, and is
     * valid for two minutes before it times out. It is used in rendering [incident
     * tiles](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidenttile). It can be obtained from
     * the [Viewport API](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidentviewport).
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>style</td><td>String</td><td>Yes</td><td>The style that will be used to render the tile in Traffic [Incident Tile API](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidenttile).  This will have an effect on the coordinates of traffic incidents in the reply.</td></tr>
     *     <tr><td>boundingbox</td><td>String</td><td>Yes</td><td>The `boundingbox` is represented by two value pairs describing it's corners (first pair for lower left corner and second for upper right). The pairs can either be specified using any of the `projection`'s specified below (e.g., _minY,minX,maxY,maxX_) or by two latitude-longitude pairs (e.g., _minLat,minLon,maxLat,maxLon_).&lt;br&gt;&lt;br&gt;NOTE: If latitude/longitude pairs are used, then the `projection` parameter must be set to "EPSG4326".</td></tr>
     *     <tr><td>boundingZoom</td><td>int</td><td>Yes</td><td>Zoom level for desired tile. 0 to 22 for raster tiles, 0 through 22 for vector tiles</td></tr>
     *     <tr><td>trafficmodelid</td><td>String</td><td>Yes</td><td>Number referencing traffic model. This can be obtained from the [Viewport API](https://docs.microsoft.com/en-us/rest/api/maps/traffic/gettrafficincidentviewport). It is updated every minute, and is valid for two minutes before it times out. If the wrong Traffic Model ID is specified, the correct one will be returned by the interface. A value of -1 will always invoke the most recent traffic model</td></tr>
     *     <tr><td>language</td><td>String</td><td>No</td><td>[ISO 639-1 code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) for the output language. Supported languages are ar, ca, cs, da, de, el, en, en-GB, en-US, es, et, fi, fr, he, hu, id, in*, it, lt, lv, nb, nl, no, pl, pt, ro, ru, sk, sv, th, tr, zh.
     *
     * Please refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details. When invalid language code is provided response is returned in English. When incident cause or description does not have translation, English description is returned.</td></tr>
     *     <tr><td>projection</td><td>String</td><td>No</td><td>The projection used to specify the coordinates in the request and response. [EPSG900913](http://docs.openlayers.org/library/spherical_mercator.html) (default) or [EPSG4326](http://spatialreference.org/ref/epsg/4326/)</td></tr>
     *     <tr><td>geometries</td><td>String</td><td>No</td><td>The type of vector geometry added to incidents (returned in the &lt;v&gt; element of the response).</td></tr>
     *     <tr><td>expandCluster</td><td>String</td><td>No</td><td>Boolean to indicate whether to list all traffic incidents in a cluster separately</td></tr>
     *     <tr><td>originalPosition</td><td>String</td><td>No</td><td>Boolean on whether to return the original position of the incident (&lt;op&gt;) as well as the one shifted to the beginning of the traffic tube (&lt;op&gt;)</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     tm: {
     *         id: String
     *         pointsOfInterest: [
     *             {
     *                 id: String
     *                 point: {
     *                     x: Float
     *                     y: Float
     *                 }
     *                 iconCategory: String(0/1/2/3/4/5/6/7/8/9/10/11/12/13/14)
     *                 magnitudeOfDelay: String(0/1/2/3/4)
     *                 bottomLeftCoordinate: (recursive schema, see bottomLeftCoordinate above)
     *                 topLeftCoordinate: (recursive schema, see topLeftCoordinate above)
     *                 clusterSize: Integer
     *                 lengthInMeters: Integer
     *                 roadNumbers: String
     *                 startDate: String
     *                 endDate: String
     *                 delayInSeconds: Integer
     *                 trafficEndLocation: String
     *                 trafficStartLocation: String
     *                 description: String
     *                 cause: String
     *             }
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Value can be either _json_ or _xml_.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Traffic incident Detail call along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getTrafficIncidentDetailWithResponse(String format, RequestOptions requestOptions) {
        return getTrafficIncidentDetailWithResponseAsync(format, requestOptions).block();
    }

    /**
     * __Traffic Incident Viewport__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API returns legal and technical information for the viewport described in the request. It should be
     * called by client applications whenever the viewport changes (for instance, through zooming, panning, going to a
     * location, or displaying a route). The request should contain the bounding box and zoom level of the viewport
     * whose information is needed. The return will contain map version information, as well as the current Traffic
     * Model ID and copyright IDs. The Traffic Model ID returned by the Viewport Description is used by other APIs to
     * retrieve last traffic information for further processing.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>boundingbox</td><td>String</td><td>Yes</td><td>Bounding box of the map viewport in [EPSG900913](http://docs.openlayers.org/library/spherical_mercator.html) projection. The `boundingbox` is represented by two value pairs describing it's corners (first pair for lower left corner and second for upper right). When this endpoint is called directly, all values should be separated by commas (e.g., _minY,minX,maxY,maxX_). The maximum size of the bounding box that can be passed is dependent on the requested zoom level. The width and height cannot exceed 4092 pixels when rendered on the given zoom level.&lt;br&gt;&lt;br&gt;NOTE: Bounding boxes that cross the 180° meridian require special treatment. For such boxes, the eastern _maxX_ value will be negative, and thus less than the _minX_ value west of the 180° meridian. To address that, the value 40075016.6855874 should be added to the true _maxX_ value before it is passed in the request.</td></tr>
     *     <tr><td>boundingzoom</td><td>int</td><td>Yes</td><td>Zoom level of the map viewport. Used to determine whether the view can be zoomed in.</td></tr>
     *     <tr><td>overviewbox</td><td>String</td><td>Yes</td><td>Bounding box of the overview map in [EPSG900913](http://docs.openlayers.org/library/spherical_mercator.html) projection.&lt;br&gt;&lt;br&gt;Used in case the overview box/mini map has different copyright data than the main map. If there is no mini map, the same coordinates as `boundingBox` is used. When this endpoint is called directly, coordinates are passed in as a single string containing four coordinates, separated by commas.</td></tr>
     *     <tr><td>overviewzoom</td><td>int</td><td>Yes</td><td>Zoom level of the overview map. If there is no mini map, use the same zoom level as boundingZoom.</td></tr>
     *     <tr><td>copyright</td><td>String</td><td>No</td><td>Determines what copyright information to return. When true the copyright text is returned; when false only the copyright index is returned.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     viewpResp: {
     *         trafficState: {
     *             trafficAge: Integer
     *             trafficModelId: String
     *         }
     *         copyrightInformation: String
     *         version: String
     *         maps: String
     *     }
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Value can be either _json_ or _xml_.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Traffic Incident Viewport call along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getTrafficIncidentViewportWithResponseAsync(
            String format, RequestOptions requestOptions) {
        return FluxUtil.withContext(
                context ->
                        service.getTrafficIncidentViewport(
                                this.client.getHost(),
                                this.client.getServiceVersion().getVersion(),
                                format,
                                requestOptions,
                                context));
    }

    /**
     * __Traffic Incident Viewport__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API returns legal and technical information for the viewport described in the request. It should be
     * called by client applications whenever the viewport changes (for instance, through zooming, panning, going to a
     * location, or displaying a route). The request should contain the bounding box and zoom level of the viewport
     * whose information is needed. The return will contain map version information, as well as the current Traffic
     * Model ID and copyright IDs. The Traffic Model ID returned by the Viewport Description is used by other APIs to
     * retrieve last traffic information for further processing.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>boundingbox</td><td>String</td><td>Yes</td><td>Bounding box of the map viewport in [EPSG900913](http://docs.openlayers.org/library/spherical_mercator.html) projection. The `boundingbox` is represented by two value pairs describing it's corners (first pair for lower left corner and second for upper right). When this endpoint is called directly, all values should be separated by commas (e.g., _minY,minX,maxY,maxX_). The maximum size of the bounding box that can be passed is dependent on the requested zoom level. The width and height cannot exceed 4092 pixels when rendered on the given zoom level.&lt;br&gt;&lt;br&gt;NOTE: Bounding boxes that cross the 180° meridian require special treatment. For such boxes, the eastern _maxX_ value will be negative, and thus less than the _minX_ value west of the 180° meridian. To address that, the value 40075016.6855874 should be added to the true _maxX_ value before it is passed in the request.</td></tr>
     *     <tr><td>boundingzoom</td><td>int</td><td>Yes</td><td>Zoom level of the map viewport. Used to determine whether the view can be zoomed in.</td></tr>
     *     <tr><td>overviewbox</td><td>String</td><td>Yes</td><td>Bounding box of the overview map in [EPSG900913](http://docs.openlayers.org/library/spherical_mercator.html) projection.&lt;br&gt;&lt;br&gt;Used in case the overview box/mini map has different copyright data than the main map. If there is no mini map, the same coordinates as `boundingBox` is used. When this endpoint is called directly, coordinates are passed in as a single string containing four coordinates, separated by commas.</td></tr>
     *     <tr><td>overviewzoom</td><td>int</td><td>Yes</td><td>Zoom level of the overview map. If there is no mini map, use the same zoom level as boundingZoom.</td></tr>
     *     <tr><td>copyright</td><td>String</td><td>No</td><td>Determines what copyright information to return. When true the copyright text is returned; when false only the copyright index is returned.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     viewpResp: {
     *         trafficState: {
     *             trafficAge: Integer
     *             trafficModelId: String
     *         }
     *         copyrightInformation: String
     *         version: String
     *         maps: String
     *     }
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Value can be either _json_ or _xml_.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @param context The context to associate with this operation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Traffic Incident Viewport call along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getTrafficIncidentViewportWithResponseAsync(
            String format, RequestOptions requestOptions, Context context) {
        return service.getTrafficIncidentViewport(
                this.client.getHost(), this.client.getServiceVersion().getVersion(), format, requestOptions, context);
    }

    /**
     * __Traffic Incident Viewport__
     *
     * <p>**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API returns legal and technical information for the viewport described in the request. It should be
     * called by client applications whenever the viewport changes (for instance, through zooming, panning, going to a
     * location, or displaying a route). The request should contain the bounding box and zoom level of the viewport
     * whose information is needed. The return will contain map version information, as well as the current Traffic
     * Model ID and copyright IDs. The Traffic Model ID returned by the Viewport Description is used by other APIs to
     * retrieve last traffic information for further processing.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>boundingbox</td><td>String</td><td>Yes</td><td>Bounding box of the map viewport in [EPSG900913](http://docs.openlayers.org/library/spherical_mercator.html) projection. The `boundingbox` is represented by two value pairs describing it's corners (first pair for lower left corner and second for upper right). When this endpoint is called directly, all values should be separated by commas (e.g., _minY,minX,maxY,maxX_). The maximum size of the bounding box that can be passed is dependent on the requested zoom level. The width and height cannot exceed 4092 pixels when rendered on the given zoom level.&lt;br&gt;&lt;br&gt;NOTE: Bounding boxes that cross the 180° meridian require special treatment. For such boxes, the eastern _maxX_ value will be negative, and thus less than the _minX_ value west of the 180° meridian. To address that, the value 40075016.6855874 should be added to the true _maxX_ value before it is passed in the request.</td></tr>
     *     <tr><td>boundingzoom</td><td>int</td><td>Yes</td><td>Zoom level of the map viewport. Used to determine whether the view can be zoomed in.</td></tr>
     *     <tr><td>overviewbox</td><td>String</td><td>Yes</td><td>Bounding box of the overview map in [EPSG900913](http://docs.openlayers.org/library/spherical_mercator.html) projection.&lt;br&gt;&lt;br&gt;Used in case the overview box/mini map has different copyright data than the main map. If there is no mini map, the same coordinates as `boundingBox` is used. When this endpoint is called directly, coordinates are passed in as a single string containing four coordinates, separated by commas.</td></tr>
     *     <tr><td>overviewzoom</td><td>int</td><td>Yes</td><td>Zoom level of the overview map. If there is no mini map, use the same zoom level as boundingZoom.</td></tr>
     *     <tr><td>copyright</td><td>String</td><td>No</td><td>Determines what copyright information to return. When true the copyright text is returned; when false only the copyright index is returned.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     viewpResp: {
     *         trafficState: {
     *             trafficAge: Integer
     *             trafficModelId: String
     *         }
     *         copyrightInformation: String
     *         version: String
     *         maps: String
     *     }
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Value can be either _json_ or _xml_.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Traffic Incident Viewport call along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getTrafficIncidentViewportWithResponse(String format, RequestOptions requestOptions) {
        return getTrafficIncidentViewportWithResponseAsync(format, requestOptions).block();
    }
}
