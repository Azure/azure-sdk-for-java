// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.timezone;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.maps.timezone.implementation.TimezonesImpl;

/** Initializes a new instance of the synchronous AzureMapsTimeZoneServiceClient type. */
@ServiceClient(builder = AzureMapsTimeZoneServiceClientBuilder.class)
public final class AzureMapsTimeZoneServiceClient {
    @Generated private final TimezonesImpl serviceClient;

    /**
     * Initializes an instance of Timezones client.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    AzureMapsTimeZoneServiceClient(TimezonesImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * __Time Zone by Id__
     *
     * <p>**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API returns current, historical, and future time zone information for the specified IANA time zone ID.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>options</td><td>String</td><td>No</td><td>Alternatively, use alias "o". Options available for types of information returned in the result.</td></tr>
     *     <tr><td>timeStamp</td><td>String</td><td>No</td><td>Alternatively, use alias "stamp", or "s". Reference time, if omitted, the API will use the machine time serving the request.</td></tr>
     *     <tr><td>transitionsFrom</td><td>String</td><td>No</td><td>Alternatively, use alias "tf". The start date from which daylight savings time (DST) transitions are requested, only applies when "options" = all or "options" = transitions.</td></tr>
     *     <tr><td>transitionsYears</td><td>String</td><td>No</td><td>Alternatively, use alias "ty". The number of years from "transitionsFrom" for which DST transitions are requested, only applies when "options" = all or "options" = transitions.</td></tr>
     *     <tr><td>query</td><td>String</td><td>Yes</td><td>The IANA time zone ID.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     *     <tr><td>Accept-Language</td><td>String</td><td>No</td><td>Specifies the language code in which the timezone names should be returned. If no language code is provided, the response will be in "EN". Please refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     version: String
     *     referenceUtcTimestamp: String
     *     timeZones: [
     *         {
     *             id: String
     *             aliases: [
     *                 String
     *             ]
     *             countries: [
     *                 {
     *                     name: String
     *                     code: String
     *                 }
     *             ]
     *             names: {
     *                 iso6391LanguageCode: String
     *                 generic: String
     *                 standard: String
     *                 daylight: String
     *             }
     *             referenceTime: {
     *                 tag: String
     *                 standardOffset: String
     *                 daylightSavings: String
     *                 wallTime: String
     *                 posixTzValidYear: Integer
     *                 posixTz: String
     *                 sunrise: String
     *                 sunset: String
     *             }
     *             representativePoint: {
     *                 latitude: Float
     *                 longitude: Float
     *             }
     *             timeTransitions: [
     *                 {
     *                     tag: String
     *                     standardOffset: String
     *                     daylightSavings: String
     *                     utcStart: String
     *                     utcEnd: String
     *                 }
     *             ]
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Only `json` format is supported.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Timezone By ID call or By Coordinates call along with {@link
     *     Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getTimezoneByIdWithResponse(String format, RequestOptions requestOptions) {
        return this.serviceClient.getTimezoneByIdWithResponse(format, requestOptions);
    }

    /**
     * __Time Zone by Coordinates__
     *
     * <p>**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API returns current, historical, and future time zone information for a specified latitude-longitude
     * pair. In addition, the API provides sunset and sunrise times for a given location.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>options</td><td>String</td><td>No</td><td>Alternatively, use alias "o". Options available for types of information returned in the result.</td></tr>
     *     <tr><td>timeStamp</td><td>String</td><td>No</td><td>Alternatively, use alias "stamp", or "s". Reference time, if omitted, the API will use the machine time serving the request.</td></tr>
     *     <tr><td>transitionsFrom</td><td>String</td><td>No</td><td>Alternatively, use alias "tf". The start date from which daylight savings time (DST) transitions are requested, only applies when "options" = all or "options" = transitions.</td></tr>
     *     <tr><td>transitionsYears</td><td>String</td><td>No</td><td>Alternatively, use alias "ty". The number of years from "transitionsFrom" for which DST transitions are requested, only applies when "options" = all or "options" = transitions.</td></tr>
     *     <tr><td>query</td><td>String</td><td>Yes</td><td>Coordinates of the point for which time zone information is requested. This parameter is a list of coordinates, containing a pair of coordinate(lat, long). When this endpoint is called directly, coordinates are passed in as a single string containing coordinates, separated by commas.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     *     <tr><td>Accept-Language</td><td>String</td><td>No</td><td>Specifies the language code in which the timezone names should be returned. If no language code is provided, the response will be in "EN". Please refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     version: String
     *     referenceUtcTimestamp: String
     *     timeZones: [
     *         {
     *             id: String
     *             aliases: [
     *                 String
     *             ]
     *             countries: [
     *                 {
     *                     name: String
     *                     code: String
     *                 }
     *             ]
     *             names: {
     *                 iso6391LanguageCode: String
     *                 generic: String
     *                 standard: String
     *                 daylight: String
     *             }
     *             referenceTime: {
     *                 tag: String
     *                 standardOffset: String
     *                 daylightSavings: String
     *                 wallTime: String
     *                 posixTzValidYear: Integer
     *                 posixTz: String
     *                 sunrise: String
     *                 sunset: String
     *             }
     *             representativePoint: {
     *                 latitude: Float
     *                 longitude: Float
     *             }
     *             timeTransitions: [
     *                 {
     *                     tag: String
     *                     standardOffset: String
     *                     daylightSavings: String
     *                     utcStart: String
     *                     utcEnd: String
     *                 }
     *             ]
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Only `json` format is supported.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Timezone By ID call or By Coordinates call along with {@link
     *     Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getTimezoneByCoordinatesWithResponse(String format, RequestOptions requestOptions) {
        return this.serviceClient.getTimezoneByCoordinatesWithResponse(format, requestOptions);
    }

    /**
     * __Windows Time Zones__
     *
     * <p>**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API returns a full list of Windows Time Zone IDs.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * [
     *     {
     *         windowsId: String
     *         territory: String
     *         ianaIds: [
     *             String
     *         ]
     *     }
     * ]
     * }</pre>
     *
     * @param format Desired format of the response. Only `json` format is supported.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Timezone Enum Windows call along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getWindowsTimezoneIdsWithResponse(String format, RequestOptions requestOptions) {
        return this.serviceClient.getWindowsTimezoneIdsWithResponse(format, requestOptions);
    }

    /**
     * __IANA Time Zones__
     *
     * <p>**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API returns a full list of IANA time zone IDs. Updates to the IANA service will be reflected in the
     * system within one day.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * [
     *     {
     *         id: String
     *         isAlias: Boolean
     *         aliasOf: String
     *         hasZone1970Location: Boolean
     *     }
     * ]
     * }</pre>
     *
     * @param format Desired format of the response. Only `json` format is supported.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Timezone Enum IANA call along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getIanaTimezoneIdsWithResponse(String format, RequestOptions requestOptions) {
        return this.serviceClient.getIanaTimezoneIdsWithResponse(format, requestOptions);
    }

    /**
     * __Time Zone IANA Version__
     *
     * <p>**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API returns the current IANA version number as Metadata.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     version: String
     * }
     * }</pre>
     *
     * @param format Desired format of the response. Only `json` format is supported.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Timezone IANA Version call along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getIanaVersionWithResponse(String format, RequestOptions requestOptions) {
        return this.serviceClient.getIanaVersionWithResponse(format, requestOptions);
    }

    /**
     * __Windows to IANA Time Zone__
     *
     * <p>**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
     *
     * <p>This API returns a corresponding IANA ID, given a valid Windows Time Zone ID. Multiple IANA IDs may be
     * returned for a single Windows ID. It is possible to narrow these results by adding an optional territory
     * parameter.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     *     <tr><td>query</td><td>String</td><td>Yes</td><td>The Windows time zone ID.</td></tr>
     *     <tr><td>territory</td><td>String</td><td>No</td><td>Windows Time Zone territory code.</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>x-ms-client-id</td><td>String</td><td>No</td><td>Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * [
     *     {
     *         id: String
     *         isAlias: Boolean
     *         aliasOf: String
     *         hasZone1970Location: Boolean
     *     }
     * ]
     * }</pre>
     *
     * @param format Desired format of the response. Only `json` format is supported.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return this object is returned from a successful Timezone Windows To IANA call along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> convertWindowsTimezoneToIanaWithResponse(String format, RequestOptions requestOptions) {
        return this.serviceClient.convertWindowsTimezoneToIanaWithResponse(format, requestOptions);
    }
}
