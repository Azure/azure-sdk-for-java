// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.timezone.implementation;

import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.maps.timezone.AzureMapsTimeZoneServiceVersion;

/** Initializes a new instance of the AzureMapsTimeZoneServiceClient type. */
public final class AzureMapsTimeZoneServiceClientImpl {
    /**
     * Specifies which account is intended for usage in conjunction with the Azure AD security model. It represents a
     * unique ID for the Azure Maps account and can be retrieved from the Azure Maps management plane Account API. To
     * use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
     */
    private final String clientId;

    /**
     * Gets Specifies which account is intended for usage in conjunction with the Azure AD security model. It represents
     * a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management plane Account API. To
     * use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
     *
     * @return the clientId value.
     */
    public String getClientId() {
        return this.clientId;
    }

    /** server parameter. */
    private final String host;

    /**
     * Gets server parameter.
     *
     * @return the host value.
     */
    public String getHost() {
        return this.host;
    }

    /** Service version. */
    private final AzureMapsTimeZoneServiceVersion serviceVersion;

    /**
     * Gets Service version.
     *
     * @return the serviceVersion value.
     */
    public AzureMapsTimeZoneServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /** The HTTP pipeline to send requests through. */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     *
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /** The serializer to serialize an object into a string. */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     *
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /** The TimezonesImpl object to access its operations. */
    private final TimezonesImpl timezones;

    /**
     * Gets the TimezonesImpl object to access its operations.
     *
     * @return the TimezonesImpl object.
     */
    public TimezonesImpl getTimezones() {
        return this.timezones;
    }

    /**
     * Initializes an instance of AzureMapsTimeZoneServiceClient client.
     *
     * @param clientId Specifies which account is intended for usage in conjunction with the Azure AD security model. It
     *     represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management plane
     *     Account API. To use Azure AD security in Azure Maps see the following
     *     [articles](https://aka.ms/amauthdetails) for guidance.
     * @param host server parameter.
     * @param serviceVersion Service version.
     */
    public AzureMapsTimeZoneServiceClientImpl(
            String clientId, String host, AzureMapsTimeZoneServiceVersion serviceVersion) {
        this(
                new HttpPipelineBuilder()
                        .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())
                        .build(),
                JacksonAdapter.createDefaultSerializerAdapter(),
                clientId,
                host,
                serviceVersion);
    }

    /**
     * Initializes an instance of AzureMapsTimeZoneServiceClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param clientId Specifies which account is intended for usage in conjunction with the Azure AD security model. It
     *     represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management plane
     *     Account API. To use Azure AD security in Azure Maps see the following
     *     [articles](https://aka.ms/amauthdetails) for guidance.
     * @param host server parameter.
     * @param serviceVersion Service version.
     */
    public AzureMapsTimeZoneServiceClientImpl(
            HttpPipeline httpPipeline, String clientId, String host, AzureMapsTimeZoneServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), clientId, host, serviceVersion);
    }

    /**
     * Initializes an instance of AzureMapsTimeZoneServiceClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param clientId Specifies which account is intended for usage in conjunction with the Azure AD security model. It
     *     represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management plane
     *     Account API. To use Azure AD security in Azure Maps see the following
     *     [articles](https://aka.ms/amauthdetails) for guidance.
     * @param host server parameter.
     * @param serviceVersion Service version.
     */
    public AzureMapsTimeZoneServiceClientImpl(
            HttpPipeline httpPipeline,
            SerializerAdapter serializerAdapter,
            String clientId,
            String host,
            AzureMapsTimeZoneServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.clientId = clientId;
        this.host = host;
        this.serviceVersion = serviceVersion;
        this.timezones = new TimezonesImpl(this);
    }
}
