// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maps.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maps.AzureMapsManager;
import com.azure.resourcemanager.maps.models.Creator;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CreatorsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"mnpkukghimdblxg\",\"storageUnits\":261614569},\"location\":\"fnjhfjxwmszkkfo\",\"tags\":{\"jawneaiv\":\"yfkzik\",\"elsfeaen\":\"wczelpci\",\"dxbjhwuaanozj\":\"abfatkl\"},\"id\":\"sphyoulpjrvxa\",\"name\":\"l\",\"type\":\"vimjwos\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureMapsManager manager = AzureMapsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Creator response = manager.creators()
            .getWithResponse("gdv", "vgpiohgwxrt", "udxepxgyqagv", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("fnjhfjxwmszkkfo", response.location());
        Assertions.assertEquals("yfkzik", response.tags().get("jawneaiv"));
        Assertions.assertEquals(261614569, response.properties().storageUnits());
    }
}
