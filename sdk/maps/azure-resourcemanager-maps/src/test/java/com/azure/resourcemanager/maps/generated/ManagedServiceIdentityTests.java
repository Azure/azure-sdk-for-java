// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maps.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.maps.models.ManagedServiceIdentity;
import com.azure.resourcemanager.maps.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.maps.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedServiceIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedServiceIdentity model = BinaryData.fromString(
            "{\"principalId\":\"3b6287d3-4ebb-479e-af44-af26f6abffb2\",\"tenantId\":\"17ee488b-52fd-43d5-8938-79eb21d138c8\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"mofcq\":{\"principalId\":\"c8f0179e-fdae-4056-b9be-e037ddeccccb\",\"clientId\":\"eb25c9a4-9168-4207-bc20-6598563073b9\"},\"yurkdtmlxhekuksj\":{\"principalId\":\"145c1af3-df87-4e20-90d6-170ba66bd515\",\"clientId\":\"6a1cff1f-cd11-4102-89c5-c71f6424cc75\"},\"kc\":{\"principalId\":\"bc284bd3-3177-4178-8474-f92b04f05079\",\"clientId\":\"7fa4cb59-ff69-4190-9c7c-6d77dad4b6e0\"}}}")
            .toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedServiceIdentity model = new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
            .withUserAssignedIdentities(mapOf("mofcq", new UserAssignedIdentity(), "yurkdtmlxhekuksj",
                new UserAssignedIdentity(), "kc", new UserAssignedIdentity()));
        model = BinaryData.fromObject(model).toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
