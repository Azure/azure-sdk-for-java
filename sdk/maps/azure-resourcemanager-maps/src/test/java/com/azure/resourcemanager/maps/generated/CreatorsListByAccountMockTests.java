// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maps.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maps.AzureMapsManager;
import com.azure.resourcemanager.maps.models.Creator;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CreatorsListByAccountMockTests {
    @Test
    public void testListByAccount() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"y\",\"storageUnits\":427983093},\"location\":\"gjltdtbnnhado\",\"tags\":{\"hnvpamqgxq\":\"kvci\",\"zikywgg\":\"u\",\"uipiccjzk\":\"kallatmel\"},\"id\":\"ivgvvcna\",\"name\":\"rhyrnxxmueed\",\"type\":\"drd\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureMapsManager manager = AzureMapsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Creator> response = manager.creators().listByAccount("d", "h", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("gjltdtbnnhado", response.iterator().next().location());
        Assertions.assertEquals("kvci", response.iterator().next().tags().get("hnvpamqgxq"));
        Assertions.assertEquals(427983093, response.iterator().next().properties().storageUnits());
    }
}
