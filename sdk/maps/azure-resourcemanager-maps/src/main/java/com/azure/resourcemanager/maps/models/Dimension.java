// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maps.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Dimension of map account, for example API Category, Api Name, Result Type, and Response Code. */
@Fluent
public final class Dimension {
    /*
     * Display name of dimension.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Display name of dimension.
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /*
     * Internal name of the dimension.
     */
    @JsonProperty(value = "internalName")
    private String internalName;

    /*
     * Internal metric name of the dimension.
     */
    @JsonProperty(value = "internalMetricName")
    private String internalMetricName;

    /*
     * Source Mdm Namespace of the dimension.
     */
    @JsonProperty(value = "sourceMdmNamespace")
    private String sourceMdmNamespace;

    /*
     * Flag to indicate exporting to Azure Monitor.
     */
    @JsonProperty(value = "toBeExportedToShoebox")
    private Boolean toBeExportedToShoebox;

    /** Creates an instance of Dimension class. */
    public Dimension() {
    }

    /**
     * Get the name property: Display name of dimension.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Display name of dimension.
     *
     * @param name the name value to set.
     * @return the Dimension object itself.
     */
    public Dimension withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the displayName property: Display name of dimension.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Display name of dimension.
     *
     * @param displayName the displayName value to set.
     * @return the Dimension object itself.
     */
    public Dimension withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the internalName property: Internal name of the dimension.
     *
     * @return the internalName value.
     */
    public String internalName() {
        return this.internalName;
    }

    /**
     * Set the internalName property: Internal name of the dimension.
     *
     * @param internalName the internalName value to set.
     * @return the Dimension object itself.
     */
    public Dimension withInternalName(String internalName) {
        this.internalName = internalName;
        return this;
    }

    /**
     * Get the internalMetricName property: Internal metric name of the dimension.
     *
     * @return the internalMetricName value.
     */
    public String internalMetricName() {
        return this.internalMetricName;
    }

    /**
     * Set the internalMetricName property: Internal metric name of the dimension.
     *
     * @param internalMetricName the internalMetricName value to set.
     * @return the Dimension object itself.
     */
    public Dimension withInternalMetricName(String internalMetricName) {
        this.internalMetricName = internalMetricName;
        return this;
    }

    /**
     * Get the sourceMdmNamespace property: Source Mdm Namespace of the dimension.
     *
     * @return the sourceMdmNamespace value.
     */
    public String sourceMdmNamespace() {
        return this.sourceMdmNamespace;
    }

    /**
     * Set the sourceMdmNamespace property: Source Mdm Namespace of the dimension.
     *
     * @param sourceMdmNamespace the sourceMdmNamespace value to set.
     * @return the Dimension object itself.
     */
    public Dimension withSourceMdmNamespace(String sourceMdmNamespace) {
        this.sourceMdmNamespace = sourceMdmNamespace;
        return this;
    }

    /**
     * Get the toBeExportedToShoebox property: Flag to indicate exporting to Azure Monitor.
     *
     * @return the toBeExportedToShoebox value.
     */
    public Boolean toBeExportedToShoebox() {
        return this.toBeExportedToShoebox;
    }

    /**
     * Set the toBeExportedToShoebox property: Flag to indicate exporting to Azure Monitor.
     *
     * @param toBeExportedToShoebox the toBeExportedToShoebox value to set.
     * @return the Dimension object itself.
     */
    public Dimension withToBeExportedToShoebox(Boolean toBeExportedToShoebox) {
        this.toBeExportedToShoebox = toBeExportedToShoebox;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
