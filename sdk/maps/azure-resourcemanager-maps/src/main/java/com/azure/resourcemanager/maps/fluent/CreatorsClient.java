// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maps.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.maps.fluent.models.CreatorInner;
import com.azure.resourcemanager.maps.models.CreatorUpdateParameters;

/** An instance of this class provides access to all the operations defined in CreatorsClient. */
public interface CreatorsClient {
    /**
     * Get all Creator instances for an Azure Maps Account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Maps Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all Creator instances for an Azure Maps Account.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CreatorInner> listByAccount(String resourceGroupName, String accountName);

    /**
     * Get all Creator instances for an Azure Maps Account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Maps Account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all Creator instances for an Azure Maps Account.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CreatorInner> listByAccount(String resourceGroupName, String accountName, Context context);

    /**
     * Create or update a Maps Creator resource. Creator resource will manage Azure resources required to populate a
     * custom set of mapping data. It requires an account to exist before it can be created.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Maps Account.
     * @param creatorName The name of the Maps Creator instance.
     * @param creatorResource The new or updated parameters for the Creator resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure resource which represents Maps Creator product and provides ability to manage private location
     *     data.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CreatorInner createOrUpdate(
        String resourceGroupName, String accountName, String creatorName, CreatorInner creatorResource);

    /**
     * Create or update a Maps Creator resource. Creator resource will manage Azure resources required to populate a
     * custom set of mapping data. It requires an account to exist before it can be created.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Maps Account.
     * @param creatorName The name of the Maps Creator instance.
     * @param creatorResource The new or updated parameters for the Creator resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure resource which represents Maps Creator product and provides ability to manage private location
     *     data.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CreatorInner> createOrUpdateWithResponse(
        String resourceGroupName,
        String accountName,
        String creatorName,
        CreatorInner creatorResource,
        Context context);

    /**
     * Updates the Maps Creator resource. Only a subset of the parameters may be updated after creation, such as Tags.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Maps Account.
     * @param creatorName The name of the Maps Creator instance.
     * @param creatorUpdateParameters The update parameters for Maps Creator.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure resource which represents Maps Creator product and provides ability to manage private location
     *     data.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CreatorInner update(
        String resourceGroupName,
        String accountName,
        String creatorName,
        CreatorUpdateParameters creatorUpdateParameters);

    /**
     * Updates the Maps Creator resource. Only a subset of the parameters may be updated after creation, such as Tags.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Maps Account.
     * @param creatorName The name of the Maps Creator instance.
     * @param creatorUpdateParameters The update parameters for Maps Creator.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure resource which represents Maps Creator product and provides ability to manage private location
     *     data.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CreatorInner> updateWithResponse(
        String resourceGroupName,
        String accountName,
        String creatorName,
        CreatorUpdateParameters creatorUpdateParameters,
        Context context);

    /**
     * Delete a Maps Creator resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Maps Account.
     * @param creatorName The name of the Maps Creator instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String creatorName);

    /**
     * Delete a Maps Creator resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Maps Account.
     * @param creatorName The name of the Maps Creator instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String accountName, String creatorName, Context context);

    /**
     * Get a Maps Creator resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Maps Account.
     * @param creatorName The name of the Maps Creator instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Maps Creator resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CreatorInner get(String resourceGroupName, String accountName, String creatorName);

    /**
     * Get a Maps Creator resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Maps Account.
     * @param creatorName The name of the Maps Creator instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Maps Creator resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CreatorInner> getWithResponse(
        String resourceGroupName, String accountName, String creatorName, Context context);
}
