// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.service.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The TransitObjectResult model. */
@Fluent
public final class TransitObjectResult {
    /*
     * The unique identifier (stopID) for the returned public transit stop.
     * When referring to public transit stops over time, it is recommended to
     * use `stopId` since it will not change, as long as the physical stop
     * exists.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * The type of object found as a result of the query.
     */
    @JsonProperty(value = "type")
    private String type;

    /*
     * The object specific details.
     */
    @JsonProperty(value = "objectDetails")
    private Object objectDetails;

    /*
     * The transit object's position.
     */
    @JsonProperty(value = "position")
    private CoordinatesPair position;

    /*
     * The viewport that covers the result represented by the top-left and
     * bottom-right coordinates of the  viewport.
     */
    @JsonProperty(value = "viewport")
    private ResultViewport viewport;

    /**
     * Get the id property: The unique identifier (stopID) for the returned public transit stop. When referring to
     * public transit stops over time, it is recommended to use `stopId` since it will not change, as long as the
     * physical stop exists.
     *
     * @return the id value.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Set the id property: The unique identifier (stopID) for the returned public transit stop. When referring to
     * public transit stops over time, it is recommended to use `stopId` since it will not change, as long as the
     * physical stop exists.
     *
     * @param id the id value to set.
     * @return the TransitObjectResult object itself.
     */
    public TransitObjectResult setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the type property: The type of object found as a result of the query.
     *
     * @return the type value.
     */
    public String getType() {
        return this.type;
    }

    /**
     * Set the type property: The type of object found as a result of the query.
     *
     * @param type the type value to set.
     * @return the TransitObjectResult object itself.
     */
    public TransitObjectResult setType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the objectDetails property: The object specific details.
     *
     * @return the objectDetails value.
     */
    public Object getObjectDetails() {
        return this.objectDetails;
    }

    /**
     * Set the objectDetails property: The object specific details.
     *
     * @param objectDetails the objectDetails value to set.
     * @return the TransitObjectResult object itself.
     */
    public TransitObjectResult setObjectDetails(Object objectDetails) {
        this.objectDetails = objectDetails;
        return this;
    }

    /**
     * Get the position property: The transit object's position.
     *
     * @return the position value.
     */
    public CoordinatesPair getPosition() {
        return this.position;
    }

    /**
     * Set the position property: The transit object's position.
     *
     * @param position the position value to set.
     * @return the TransitObjectResult object itself.
     */
    public TransitObjectResult setPosition(CoordinatesPair position) {
        this.position = position;
        return this;
    }

    /**
     * Get the viewport property: The viewport that covers the result represented by the top-left and bottom-right
     * coordinates of the viewport.
     *
     * @return the viewport value.
     */
    public ResultViewport getViewport() {
        return this.viewport;
    }

    /**
     * Set the viewport property: The viewport that covers the result represented by the top-left and bottom-right
     * coordinates of the viewport.
     *
     * @param viewport the viewport value to set.
     * @return the TransitObjectResult object itself.
     */
    public TransitObjectResult setViewport(ResultViewport viewport) {
        this.viewport = viewport;
        return this;
    }
}
