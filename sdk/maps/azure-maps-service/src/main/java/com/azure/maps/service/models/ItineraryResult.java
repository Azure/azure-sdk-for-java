// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.service.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** The ItineraryResult model. */
@Fluent
public final class ItineraryResult {
    /*
     * A unique identifier of the returned itinerary.
     */
    @JsonProperty(value = "itineraryId")
    private String itineraryId;

    /*
     * The date and time of departure from the origin point in ISO 8601 format,
     * e.g. 1996-12-19T16:39:57-08:00.
     */
    @JsonProperty(value = "departureTime")
    private OffsetDateTime departureTime;

    /*
     * The date and time of arrival at the destination point in ISO 8601
     * format, e.g. 1996-12-19T19:39:57-08:00.
     */
    @JsonProperty(value = "arrivalTime")
    private OffsetDateTime arrivalTime;

    /*
     * Estimated travel time in seconds.
     */
    @JsonProperty(value = "travelTimeInSeconds")
    private Integer travelTimeInSeconds;

    /*
     * Number of legs.
     */
    @JsonProperty(value = "numberOfLegs")
    private Integer numberOfLegs;

    /*
     * An array summarizing the legs of this itinerary.
     */
    @JsonProperty(value = "legs")
    private List<RouteItineraryLeg> legs;

    /*
     * Itinerary level transit fare information. Returned only if fare
     * information is available for the entire itinerary. [Get Metro Area Info
     * API](https://aka.ms/AzureMapsMobilityMetroAreaInfo) can be requested to
     * confirm if fare information is available in the metro area.
     */
    @JsonProperty(value = "itineraryFare")
    private ItineraryFare itineraryFare;

    /**
     * Get the itineraryId property: A unique identifier of the returned itinerary.
     *
     * @return the itineraryId value.
     */
    public String getItineraryId() {
        return this.itineraryId;
    }

    /**
     * Set the itineraryId property: A unique identifier of the returned itinerary.
     *
     * @param itineraryId the itineraryId value to set.
     * @return the ItineraryResult object itself.
     */
    public ItineraryResult setItineraryId(String itineraryId) {
        this.itineraryId = itineraryId;
        return this;
    }

    /**
     * Get the departureTime property: The date and time of departure from the origin point in ISO 8601 format, e.g.
     * 1996-12-19T16:39:57-08:00.
     *
     * @return the departureTime value.
     */
    public OffsetDateTime getDepartureTime() {
        return this.departureTime;
    }

    /**
     * Set the departureTime property: The date and time of departure from the origin point in ISO 8601 format, e.g.
     * 1996-12-19T16:39:57-08:00.
     *
     * @param departureTime the departureTime value to set.
     * @return the ItineraryResult object itself.
     */
    public ItineraryResult setDepartureTime(OffsetDateTime departureTime) {
        this.departureTime = departureTime;
        return this;
    }

    /**
     * Get the arrivalTime property: The date and time of arrival at the destination point in ISO 8601 format, e.g.
     * 1996-12-19T19:39:57-08:00.
     *
     * @return the arrivalTime value.
     */
    public OffsetDateTime getArrivalTime() {
        return this.arrivalTime;
    }

    /**
     * Set the arrivalTime property: The date and time of arrival at the destination point in ISO 8601 format, e.g.
     * 1996-12-19T19:39:57-08:00.
     *
     * @param arrivalTime the arrivalTime value to set.
     * @return the ItineraryResult object itself.
     */
    public ItineraryResult setArrivalTime(OffsetDateTime arrivalTime) {
        this.arrivalTime = arrivalTime;
        return this;
    }

    /**
     * Get the travelTimeInSeconds property: Estimated travel time in seconds.
     *
     * @return the travelTimeInSeconds value.
     */
    public Integer getTravelTimeInSeconds() {
        return this.travelTimeInSeconds;
    }

    /**
     * Set the travelTimeInSeconds property: Estimated travel time in seconds.
     *
     * @param travelTimeInSeconds the travelTimeInSeconds value to set.
     * @return the ItineraryResult object itself.
     */
    public ItineraryResult setTravelTimeInSeconds(Integer travelTimeInSeconds) {
        this.travelTimeInSeconds = travelTimeInSeconds;
        return this;
    }

    /**
     * Get the numberOfLegs property: Number of legs.
     *
     * @return the numberOfLegs value.
     */
    public Integer getNumberOfLegs() {
        return this.numberOfLegs;
    }

    /**
     * Set the numberOfLegs property: Number of legs.
     *
     * @param numberOfLegs the numberOfLegs value to set.
     * @return the ItineraryResult object itself.
     */
    public ItineraryResult setNumberOfLegs(Integer numberOfLegs) {
        this.numberOfLegs = numberOfLegs;
        return this;
    }

    /**
     * Get the legs property: An array summarizing the legs of this itinerary.
     *
     * @return the legs value.
     */
    public List<RouteItineraryLeg> getLegs() {
        return this.legs;
    }

    /**
     * Set the legs property: An array summarizing the legs of this itinerary.
     *
     * @param legs the legs value to set.
     * @return the ItineraryResult object itself.
     */
    public ItineraryResult setLegs(List<RouteItineraryLeg> legs) {
        this.legs = legs;
        return this;
    }

    /**
     * Get the itineraryFare property: Itinerary level transit fare information. Returned only if fare information is
     * available for the entire itinerary. [Get Metro Area Info API](https://aka.ms/AzureMapsMobilityMetroAreaInfo) can
     * be requested to confirm if fare information is available in the metro area.
     *
     * @return the itineraryFare value.
     */
    public ItineraryFare getItineraryFare() {
        return this.itineraryFare;
    }

    /**
     * Set the itineraryFare property: Itinerary level transit fare information. Returned only if fare information is
     * available for the entire itinerary. [Get Metro Area Info API](https://aka.ms/AzureMapsMobilityMetroAreaInfo) can
     * be requested to confirm if fare information is available in the metro area.
     *
     * @param itineraryFare the itineraryFare value to set.
     * @return the ItineraryResult object itself.
     */
    public ItineraryResult setItineraryFare(ItineraryFare itineraryFare) {
        this.itineraryFare = itineraryFare;
        return this;
    }
}
