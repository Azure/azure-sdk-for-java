// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.service.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/** Defines values for GeoJsonGeometryType. */
public final class GeoJsonGeometryType extends ExpandableStringEnum<GeoJsonGeometryType> {
    /** Static value Point for GeoJsonGeometryType. */
    public static final GeoJsonGeometryType GEO_JSON_POINT = fromString("Point");

    /** Static value MultiPoint for GeoJsonGeometryType. */
    public static final GeoJsonGeometryType GEO_JSON_MULTI_POINT = fromString("MultiPoint");

    /** Static value LineString for GeoJsonGeometryType. */
    public static final GeoJsonGeometryType GEO_JSON_LINE_STRING = fromString("LineString");

    /** Static value MultiLineString for GeoJsonGeometryType. */
    public static final GeoJsonGeometryType GEO_JSON_MULTI_LINE_STRING = fromString("MultiLineString");

    /** Static value Polygon for GeoJsonGeometryType. */
    public static final GeoJsonGeometryType GEO_JSON_POLYGON = fromString("Polygon");

    /** Static value MultiPolygon for GeoJsonGeometryType. */
    public static final GeoJsonGeometryType GEO_JSON_MULTI_POLYGON = fromString("MultiPolygon");

    /** Static value GeometryCollection for GeoJsonGeometryType. */
    public static final GeoJsonGeometryType GEO_JSON_GEOMETRY_COLLECTION = fromString("GeometryCollection");

    /**
     * Creates or finds a GeoJsonGeometryType from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding GeoJsonGeometryType.
     */
    @JsonCreator
    public static GeoJsonGeometryType fromString(String name) {
        return fromString(name, GeoJsonGeometryType.class);
    }

    /** @return known GeoJsonGeometryType values. */
    public static Collection<GeoJsonGeometryType> values() {
        return values(GeoJsonGeometryType.class);
    }
}
