// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.service.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The MinuteForecastResponse model. */
@Fluent
public final class MinuteForecastResponse {
    /*
     * Phrase summaries for the entire forecast period.
     */
    @JsonProperty(value = "summary")
    private MinuteForecastSummary summary;

    /*
     * Summary information for each interval in the forecast. The Summaries
     * breaks down each potential interval where precipitation starts and
     * stops.
     */
    @JsonProperty(value = "intervalSummaries")
    private List<IntervalSummary> intervalSummaries;

    /*
     * Forecast data for each interval in the forecast.
     */
    @JsonProperty(value = "intervals")
    private List<ForecastInterval> intervals;

    /**
     * Get the summary property: Phrase summaries for the entire forecast period.
     *
     * @return the summary value.
     */
    public MinuteForecastSummary getSummary() {
        return this.summary;
    }

    /**
     * Set the summary property: Phrase summaries for the entire forecast period.
     *
     * @param summary the summary value to set.
     * @return the MinuteForecastResponse object itself.
     */
    public MinuteForecastResponse setSummary(MinuteForecastSummary summary) {
        this.summary = summary;
        return this;
    }

    /**
     * Get the intervalSummaries property: Summary information for each interval in the forecast. The Summaries breaks
     * down each potential interval where precipitation starts and stops.
     *
     * @return the intervalSummaries value.
     */
    public List<IntervalSummary> getIntervalSummaries() {
        return this.intervalSummaries;
    }

    /**
     * Set the intervalSummaries property: Summary information for each interval in the forecast. The Summaries breaks
     * down each potential interval where precipitation starts and stops.
     *
     * @param intervalSummaries the intervalSummaries value to set.
     * @return the MinuteForecastResponse object itself.
     */
    public MinuteForecastResponse setIntervalSummaries(List<IntervalSummary> intervalSummaries) {
        this.intervalSummaries = intervalSummaries;
        return this;
    }

    /**
     * Get the intervals property: Forecast data for each interval in the forecast.
     *
     * @return the intervals value.
     */
    public List<ForecastInterval> getIntervals() {
        return this.intervals;
    }

    /**
     * Set the intervals property: Forecast data for each interval in the forecast.
     *
     * @param intervals the intervals value to set.
     * @return the MinuteForecastResponse object itself.
     */
    public MinuteForecastResponse setIntervals(List<ForecastInterval> intervals) {
        this.intervals = intervals;
        return this;
    }
}
