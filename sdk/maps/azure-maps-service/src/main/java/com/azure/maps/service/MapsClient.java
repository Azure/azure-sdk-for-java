// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.service;

import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.maps.service.models.Geography;

/** Initializes a new instance of the MapsClient type. */
public final class MapsClient {
    /**
     * Specifies which account is intended for usage in conjunction with the Azure AD security model. It represents a
     * unique ID for the Azure Maps account and can be retrieved from the Azure Maps management plane Account API. To
     * use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
     */
    private final String xMsClientId;

    /**
     * Gets Specifies which account is intended for usage in conjunction with the Azure AD security model. It represents
     * a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management plane Account API. To
     * use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
     *
     * @return the xMsClientId value.
     */
    public String getXMsClientId() {
        return this.xMsClientId;
    }

    /** This parameter specifies where the Azure Maps Creator resource is located. Valid values are us and eu. */
    private final Geography geography;

    /**
     * Gets This parameter specifies where the Azure Maps Creator resource is located. Valid values are us and eu.
     *
     * @return the geography value.
     */
    public Geography getGeography() {
        return this.geography;
    }

    /** The HTTP pipeline to send requests through. */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     *
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /** The serializer to serialize an object into a string. */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     *
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /** The Alias object to access its operations. */
    private final Alias alias;

    /**
     * Gets the Alias object to access its operations.
     *
     * @return the Alias object.
     */
    public Alias getAlias() {
        return this.alias;
    }

    /** The Datas object to access its operations. */
    private final Datas datas;

    /**
     * Gets the Datas object to access its operations.
     *
     * @return the Datas object.
     */
    public Datas getDatas() {
        return this.datas;
    }

    /** The Datasets object to access its operations. */
    private final Datasets datasets;

    /**
     * Gets the Datasets object to access its operations.
     *
     * @return the Datasets object.
     */
    public Datasets getDatasets() {
        return this.datasets;
    }

    /** The Elevations object to access its operations. */
    private final Elevations elevations;

    /**
     * Gets the Elevations object to access its operations.
     *
     * @return the Elevations object.
     */
    public Elevations getElevations() {
        return this.elevations;
    }

    /** The Conversions object to access its operations. */
    private final Conversions conversions;

    /**
     * Gets the Conversions object to access its operations.
     *
     * @return the Conversions object.
     */
    public Conversions getConversions() {
        return this.conversions;
    }

    /** The FeatureStates object to access its operations. */
    private final FeatureStates featureStates;

    /**
     * Gets the FeatureStates object to access its operations.
     *
     * @return the FeatureStates object.
     */
    public FeatureStates getFeatureStates() {
        return this.featureStates;
    }

    /** The Geolocations object to access its operations. */
    private final Geolocations geolocations;

    /**
     * Gets the Geolocations object to access its operations.
     *
     * @return the Geolocations object.
     */
    public Geolocations getGeolocations() {
        return this.geolocations;
    }

    /** The Mobilities object to access its operations. */
    private final Mobilities mobilities;

    /**
     * Gets the Mobilities object to access its operations.
     *
     * @return the Mobilities object.
     */
    public Mobilities getMobilities() {
        return this.mobilities;
    }

    /** The Renders object to access its operations. */
    private final Renders renders;

    /**
     * Gets the Renders object to access its operations.
     *
     * @return the Renders object.
     */
    public Renders getRenders() {
        return this.renders;
    }

    /** The RenderV2s object to access its operations. */
    private final RenderV2s renderV2s;

    /**
     * Gets the RenderV2s object to access its operations.
     *
     * @return the RenderV2s object.
     */
    public RenderV2s getRenderV2s() {
        return this.renderV2s;
    }

    /** The Routes object to access its operations. */
    private final Routes routes;

    /**
     * Gets the Routes object to access its operations.
     *
     * @return the Routes object.
     */
    public Routes getRoutes() {
        return this.routes;
    }

    /** The Searches object to access its operations. */
    private final Searches searches;

    /**
     * Gets the Searches object to access its operations.
     *
     * @return the Searches object.
     */
    public Searches getSearches() {
        return this.searches;
    }

    /** The Spatials object to access its operations. */
    private final Spatials spatials;

    /**
     * Gets the Spatials object to access its operations.
     *
     * @return the Spatials object.
     */
    public Spatials getSpatials() {
        return this.spatials;
    }

    /** The Tilesets object to access its operations. */
    private final Tilesets tilesets;

    /**
     * Gets the Tilesets object to access its operations.
     *
     * @return the Tilesets object.
     */
    public Tilesets getTilesets() {
        return this.tilesets;
    }

    /** The Timezones object to access its operations. */
    private final Timezones timezones;

    /**
     * Gets the Timezones object to access its operations.
     *
     * @return the Timezones object.
     */
    public Timezones getTimezones() {
        return this.timezones;
    }

    /** The Traffics object to access its operations. */
    private final Traffics traffics;

    /**
     * Gets the Traffics object to access its operations.
     *
     * @return the Traffics object.
     */
    public Traffics getTraffics() {
        return this.traffics;
    }

    /** The Weathers object to access its operations. */
    private final Weathers weathers;

    /**
     * Gets the Weathers object to access its operations.
     *
     * @return the Weathers object.
     */
    public Weathers getWeathers() {
        return this.weathers;
    }

    /** The WFS object to access its operations. */
    private final WFS wFS;

    /**
     * Gets the WFS object to access its operations.
     *
     * @return the WFS object.
     */
    public WFS getWFS() {
        return this.wFS;
    }

    /**
     * Initializes an instance of MapsClient client.
     *
     * @param xMsClientId Specifies which account is intended for usage in conjunction with the Azure AD security model.
     *     It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management
     *     plane Account API. To use Azure AD security in Azure Maps see the following
     *     [articles](https://aka.ms/amauthdetails) for guidance.
     * @param geography This parameter specifies where the Azure Maps Creator resource is located. Valid values are us
     *     and eu.
     */
    MapsClient(String xMsClientId, Geography geography) {
        this(
                new HttpPipelineBuilder()
                        .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())
                        .build(),
                JacksonAdapter.createDefaultSerializerAdapter(),
                xMsClientId,
                geography);
    }

    /**
     * Initializes an instance of MapsClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param xMsClientId Specifies which account is intended for usage in conjunction with the Azure AD security model.
     *     It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management
     *     plane Account API. To use Azure AD security in Azure Maps see the following
     *     [articles](https://aka.ms/amauthdetails) for guidance.
     * @param geography This parameter specifies where the Azure Maps Creator resource is located. Valid values are us
     *     and eu.
     */
    MapsClient(HttpPipeline httpPipeline, String xMsClientId, Geography geography) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), xMsClientId, geography);
    }

    /**
     * Initializes an instance of MapsClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param xMsClientId Specifies which account is intended for usage in conjunction with the Azure AD security model.
     *     It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management
     *     plane Account API. To use Azure AD security in Azure Maps see the following
     *     [articles](https://aka.ms/amauthdetails) for guidance.
     * @param geography This parameter specifies where the Azure Maps Creator resource is located. Valid values are us
     *     and eu.
     */
    MapsClient(
            HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String xMsClientId, Geography geography) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.xMsClientId = xMsClientId;
        this.geography = geography;
        this.alias = new Alias(this);
        this.datas = new Datas(this);
        this.datasets = new Datasets(this);
        this.elevations = new Elevations(this);
        this.conversions = new Conversions(this);
        this.featureStates = new FeatureStates(this);
        this.geolocations = new Geolocations(this);
        this.mobilities = new Mobilities(this);
        this.renders = new Renders(this);
        this.renderV2s = new RenderV2s(this);
        this.routes = new Routes(this);
        this.searches = new Searches(this);
        this.spatials = new Spatials(this);
        this.tilesets = new Tilesets(this);
        this.timezones = new Timezones(this);
        this.traffics = new Traffics(this);
        this.weathers = new Weathers(this);
        this.wFS = new WFS(this);
    }
}
