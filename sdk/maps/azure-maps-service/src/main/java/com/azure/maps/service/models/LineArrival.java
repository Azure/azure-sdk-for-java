// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.service.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The LineArrival model. */
@Fluent
public final class LineArrival {
    /*
     * Line Id.
     */
    @JsonProperty(value = "lineId")
    private String lineId;

    /*
     * The unique Azure Maps identifier for the respective public transit stop.
     * When referring to public transit stops over time, it is recommended to
     * use `stopId` since it will not change, as long as the physical stop
     * exists.
     */
    @JsonProperty(value = "stopId")
    private String stopId;

    /*
     * The date and time of departure from the stop in ISO 8601 format, e.g.
     * 1996-12-19T19:39:57-08:00.
     */
    @JsonProperty(value = "scheduleTime")
    private OffsetDateTime scheduleTime;

    /*
     * Whether the result is based on real-time or static data.
     */
    @JsonProperty(value = "scheduleType")
    private ScheduleType scheduleType;

    /**
     * Get the lineId property: Line Id.
     *
     * @return the lineId value.
     */
    public String getLineId() {
        return this.lineId;
    }

    /**
     * Set the lineId property: Line Id.
     *
     * @param lineId the lineId value to set.
     * @return the LineArrival object itself.
     */
    public LineArrival setLineId(String lineId) {
        this.lineId = lineId;
        return this;
    }

    /**
     * Get the stopId property: The unique Azure Maps identifier for the respective public transit stop. When referring
     * to public transit stops over time, it is recommended to use `stopId` since it will not change, as long as the
     * physical stop exists.
     *
     * @return the stopId value.
     */
    public String getStopId() {
        return this.stopId;
    }

    /**
     * Set the stopId property: The unique Azure Maps identifier for the respective public transit stop. When referring
     * to public transit stops over time, it is recommended to use `stopId` since it will not change, as long as the
     * physical stop exists.
     *
     * @param stopId the stopId value to set.
     * @return the LineArrival object itself.
     */
    public LineArrival setStopId(String stopId) {
        this.stopId = stopId;
        return this;
    }

    /**
     * Get the scheduleTime property: The date and time of departure from the stop in ISO 8601 format, e.g.
     * 1996-12-19T19:39:57-08:00.
     *
     * @return the scheduleTime value.
     */
    public OffsetDateTime getScheduleTime() {
        return this.scheduleTime;
    }

    /**
     * Set the scheduleTime property: The date and time of departure from the stop in ISO 8601 format, e.g.
     * 1996-12-19T19:39:57-08:00.
     *
     * @param scheduleTime the scheduleTime value to set.
     * @return the LineArrival object itself.
     */
    public LineArrival setScheduleTime(OffsetDateTime scheduleTime) {
        this.scheduleTime = scheduleTime;
        return this;
    }

    /**
     * Get the scheduleType property: Whether the result is based on real-time or static data.
     *
     * @return the scheduleType value.
     */
    public ScheduleType getScheduleType() {
        return this.scheduleType;
    }

    /**
     * Set the scheduleType property: Whether the result is based on real-time or static data.
     *
     * @param scheduleType the scheduleType value to set.
     * @return the LineArrival object itself.
     */
    public LineArrival setScheduleType(ScheduleType scheduleType) {
        this.scheduleType = scheduleType;
        return this;
    }
}
