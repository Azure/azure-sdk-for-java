// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.service.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Wind direction. */
@Fluent
public final class WindDirection {
    /*
     * Wind direction in Azimuth degrees,  starting at true North and
     * continuing in clockwise direction. North is 0 degrees, east is 90
     * degrees, south is 180 degrees, west is 270 degrees. Possible values
     * 0-359.
     */
    @JsonProperty(value = "degrees")
    private Integer degrees;

    /*
     * Direction abbreviation in the specified language.
     */
    @JsonProperty(value = "localizedDescription")
    private String localizedDescription;

    /**
     * Get the degrees property: Wind direction in Azimuth degrees, starting at true North and continuing in clockwise
     * direction. North is 0 degrees, east is 90 degrees, south is 180 degrees, west is 270 degrees. Possible values
     * 0-359.
     *
     * @return the degrees value.
     */
    public Integer getDegrees() {
        return this.degrees;
    }

    /**
     * Set the degrees property: Wind direction in Azimuth degrees, starting at true North and continuing in clockwise
     * direction. North is 0 degrees, east is 90 degrees, south is 180 degrees, west is 270 degrees. Possible values
     * 0-359.
     *
     * @param degrees the degrees value to set.
     * @return the WindDirection object itself.
     */
    public WindDirection setDegrees(Integer degrees) {
        this.degrees = degrees;
        return this;
    }

    /**
     * Get the localizedDescription property: Direction abbreviation in the specified language.
     *
     * @return the localizedDescription value.
     */
    public String getLocalizedDescription() {
        return this.localizedDescription;
    }

    /**
     * Set the localizedDescription property: Direction abbreviation in the specified language.
     *
     * @param localizedDescription the localizedDescription value to set.
     * @return the WindDirection object itself.
     */
    public WindDirection setLocalizedDescription(String localizedDescription) {
        this.localizedDescription = localizedDescription;
        return this;
    }
}
