// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.microsoft.azure.maps.service;

import com.azure.core.annotation.Delete;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.PathParam;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.microsoft.azure.maps.service.models.CollectionDefinition;
import com.microsoft.azure.maps.service.models.CollectionInfo;
import com.microsoft.azure.maps.service.models.Content;
import com.microsoft.azure.maps.service.models.ErrorResponseException;
import com.microsoft.azure.maps.service.models.Feature;
import com.microsoft.azure.maps.service.models.FeatureCollectionGeoJson;
import com.microsoft.azure.maps.service.models.ReqClasses;
import com.microsoft.azure.maps.service.models.Root;
import reactor.core.publisher.Mono;

/** An instance of this class provides access to all the operations defined in WFS. */
public final class WFS {
    /** The proxy service used to perform REST calls. */
    private final WFSService service;

    /** The service client containing this operation class. */
    private final MapsClient client;

    /**
     * Initializes an instance of WFS.
     *
     * @param client the instance of the service client containing this operation class.
     */
    WFS(MapsClient client) {
        this.service = RestProxy.create(WFSService.class, client.getHttpPipeline(), client.getSerializerAdapter());
        this.client = client;
    }

    /**
     * The interface defining all the services for MapsClientWFS to be used by the proxy service to perform REST calls.
     */
    @Host("{$host}")
    @ServiceInterface(name = "MapsClientWFS")
    private interface WFSService {
        @Get("/wfs/datasets/{datasetid}/")
        @ExpectedResponses({200, 200})
        @UnexpectedResponseExceptionType(
                value = ErrorResponseException.class,
                code = {400, 400, 401, 401, 403, 403, 404, 404, 500, 500})
        @UnexpectedResponseExceptionType(ErrorResponseException.class)
        Mono<Response<Root>> getLandingPagePreview(
                @HostParam("$host") String host,
                @HeaderParam("x-ms-client-id") String xMsClientId,
                @QueryParam("subscription-key") String subscriptionKey,
                @QueryParam("api-version") String apiVersion,
                @PathParam("datasetid") String datasetid,
                @HeaderParam("Accept") String accept);

        @Get("/wfs/datasets/{datasetid}/conformance")
        @ExpectedResponses({200, 200})
        @UnexpectedResponseExceptionType(
                value = ErrorResponseException.class,
                code = {400, 400, 401, 401, 403, 403, 404, 404, 500, 500})
        @UnexpectedResponseExceptionType(ErrorResponseException.class)
        Mono<Response<ReqClasses>> getRequirementsClassesPreview(
                @HostParam("$host") String host,
                @HeaderParam("x-ms-client-id") String xMsClientId,
                @QueryParam("subscription-key") String subscriptionKey,
                @QueryParam("api-version") String apiVersion,
                @PathParam("datasetid") String datasetid,
                @HeaderParam("Accept") String accept);

        @Get("/wfs/datasets/{datasetid}/collections")
        @ExpectedResponses({200, 200})
        @UnexpectedResponseExceptionType(
                value = ErrorResponseException.class,
                code = {400, 400, 401, 401, 403, 403, 404, 404, 500, 500})
        @UnexpectedResponseExceptionType(ErrorResponseException.class)
        Mono<Response<Content>> collectionsDescriptionPreview(
                @HostParam("$host") String host,
                @HeaderParam("x-ms-client-id") String xMsClientId,
                @QueryParam("subscription-key") String subscriptionKey,
                @QueryParam("api-version") String apiVersion,
                @PathParam("datasetid") String datasetid,
                @HeaderParam("Accept") String accept);

        @Get("/wfs/datasets/{datasetid}/collections/{collectionId}")
        @ExpectedResponses({200, 200})
        @UnexpectedResponseExceptionType(
                value = ErrorResponseException.class,
                code = {400, 400, 401, 401, 403, 403, 404, 404, 500, 500})
        @UnexpectedResponseExceptionType(ErrorResponseException.class)
        Mono<Response<CollectionInfo>> collectionDescriptionPreview(
                @HostParam("$host") String host,
                @HeaderParam("x-ms-client-id") String xMsClientId,
                @QueryParam("subscription-key") String subscriptionKey,
                @QueryParam("api-version") String apiVersion,
                @PathParam("datasetid") String datasetid,
                @PathParam("collectionId") String collectionId,
                @HeaderParam("Accept") String accept);

        @Get("/wfs/datasets/{datasetid}/collections/{collectionId}/definition")
        @ExpectedResponses({200, 200})
        @UnexpectedResponseExceptionType(
                value = ErrorResponseException.class,
                code = {400, 400, 401, 401, 403, 403, 404, 404, 500, 500})
        @UnexpectedResponseExceptionType(ErrorResponseException.class)
        Mono<Response<CollectionDefinition>> collectionDefinitionPreview(
                @HostParam("$host") String host,
                @HeaderParam("x-ms-client-id") String xMsClientId,
                @QueryParam("subscription-key") String subscriptionKey,
                @QueryParam("api-version") String apiVersion,
                @PathParam("datasetid") String datasetid,
                @PathParam("collectionId") String collectionId,
                @HeaderParam("Accept") String accept);

        @Get("/wfs/datasets/{datasetid}/collections/{collectionId}/items")
        @ExpectedResponses({200, 200})
        @UnexpectedResponseExceptionType(
                value = ErrorResponseException.class,
                code = {400, 400, 401, 401, 403, 403, 404, 404, 500, 500})
        @UnexpectedResponseExceptionType(ErrorResponseException.class)
        Mono<Response<FeatureCollectionGeoJson>> getFeaturesPreview(
                @HostParam("$host") String host,
                @HeaderParam("x-ms-client-id") String xMsClientId,
                @QueryParam("subscription-key") String subscriptionKey,
                @QueryParam("api-version") String apiVersion,
                @PathParam("datasetid") String datasetid,
                @PathParam("collectionId") String collectionId,
                @QueryParam("limit") Float limit,
                @QueryParam("bbox") String bbox,
                @QueryParam("filter") String filter,
                @HeaderParam("Accept") String accept);

        @Get("/wfs/datasets/{datasetid}/collections/{collectionId}/items/{featureId}")
        @ExpectedResponses({200, 200})
        @UnexpectedResponseExceptionType(
                value = ErrorResponseException.class,
                code = {400, 400, 401, 401, 403, 403, 404, 404, 500, 500})
        @UnexpectedResponseExceptionType(ErrorResponseException.class)
        Mono<Response<Feature>> getFeaturePreview(
                @HostParam("$host") String host,
                @QueryParam("subscription-key") String subscriptionKey,
                @QueryParam("api-version") String apiVersion,
                @PathParam("datasetid") String datasetid,
                @PathParam("collectionId") String collectionId,
                @PathParam("featureId") String featureId,
                @HeaderParam("Accept") String accept);

        @Delete("/wfs/datasets/{datasetid}/collections/{collectionId}/items/{featureId}")
        @ExpectedResponses({204})
        @UnexpectedResponseExceptionType(
                value = ErrorResponseException.class,
                code = {400, 400, 401, 401, 403, 403, 404, 404, 500, 500})
        @UnexpectedResponseExceptionType(ErrorResponseException.class)
        Mono<Response<Void>> deleteFeaturePreview(
                @HostParam("$host") String host,
                @QueryParam("subscription-key") String subscriptionKey,
                @QueryParam("api-version") String apiVersion,
                @PathParam("datasetid") String datasetid,
                @PathParam("collectionId") String collectionId,
                @PathParam("featureId") String featureId,
                @HeaderParam("Accept") String accept);
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Get Landing Page API provides links to the API definition, the Conformance statements and the
     * metadata about the feature data in this dataset.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Root>> getLandingPagePreviewWithResponseAsync(String datasetid) {
        final String apiVersion = "1.0";
        final String accept = "application/json, application/xml";
        return service.getLandingPagePreview(
                this.client.getHost(),
                this.client.getXMsClientId(),
                this.client.getSubscriptionKey(),
                apiVersion,
                datasetid,
                accept);
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Get Landing Page API provides links to the API definition, the Conformance statements and the
     * metadata about the feature data in this dataset.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Root> getLandingPagePreviewAsync(String datasetid) {
        return getLandingPagePreviewWithResponseAsync(datasetid)
                .flatMap(
                        (Response<Root> res) -> {
                            if (res.getValue() != null) {
                                return Mono.just(res.getValue());
                            } else {
                                return Mono.empty();
                            }
                        });
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Get Requirements Classes lists all requirements classes specified in the standard that the server
     * conforms to.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<ReqClasses>> getRequirementsClassesPreviewWithResponseAsync(String datasetid) {
        final String apiVersion = "1.0";
        final String accept = "application/json, application/xml";
        return service.getRequirementsClassesPreview(
                this.client.getHost(),
                this.client.getXMsClientId(),
                this.client.getSubscriptionKey(),
                apiVersion,
                datasetid,
                accept);
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Get Requirements Classes lists all requirements classes specified in the standard that the server
     * conforms to.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<ReqClasses> getRequirementsClassesPreviewAsync(String datasetid) {
        return getRequirementsClassesPreviewWithResponseAsync(datasetid)
                .flatMap(
                        (Response<ReqClasses> res) -> {
                            if (res.getValue() != null) {
                                return Mono.just(res.getValue());
                            } else {
                                return Mono.empty();
                            }
                        });
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Collections Description API provides descriptions of all the collections in a given dataset.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Content>> collectionsDescriptionPreviewWithResponseAsync(String datasetid) {
        final String apiVersion = "1.0";
        final String accept = "application/json, application/xml";
        return service.collectionsDescriptionPreview(
                this.client.getHost(),
                this.client.getXMsClientId(),
                this.client.getSubscriptionKey(),
                apiVersion,
                datasetid,
                accept);
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Collections Description API provides descriptions of all the collections in a given dataset.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Content> collectionsDescriptionPreviewAsync(String datasetid) {
        return collectionsDescriptionPreviewWithResponseAsync(datasetid)
                .flatMap(
                        (Response<Content> res) -> {
                            if (res.getValue() != null) {
                                return Mono.just(res.getValue());
                            } else {
                                return Mono.empty();
                            }
                        });
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema.
     *
     * <p>The Collection Description API provides the description of a given collection. It includes the links to the
     * operations that can be performed on the collection.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @param collectionId Identifier (name) of a specific collection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<CollectionInfo>> collectionDescriptionPreviewWithResponseAsync(
            String datasetid, String collectionId) {
        final String apiVersion = "1.0";
        final String accept = "application/json, application/xml";
        return service.collectionDescriptionPreview(
                this.client.getHost(),
                this.client.getXMsClientId(),
                this.client.getSubscriptionKey(),
                apiVersion,
                datasetid,
                collectionId,
                accept);
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema.
     *
     * <p>The Collection Description API provides the description of a given collection. It includes the links to the
     * operations that can be performed on the collection.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @param collectionId Identifier (name) of a specific collection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<CollectionInfo> collectionDescriptionPreviewAsync(String datasetid, String collectionId) {
        return collectionDescriptionPreviewWithResponseAsync(datasetid, collectionId)
                .flatMap(
                        (Response<CollectionInfo> res) -> {
                            if (res.getValue() != null) {
                                return Mono.just(res.getValue());
                            } else {
                                return Mono.empty();
                            }
                        });
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema.
     *
     * <p>The Collection Definition API provides the detailed data model of a given collection.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @param collectionId Identifier (name) of a specific collection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of GeoJSON features.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<CollectionDefinition>> collectionDefinitionPreviewWithResponseAsync(
            String datasetid, String collectionId) {
        final String apiVersion = "1.0";
        final String accept = "application/json, application/xml";
        return service.collectionDefinitionPreview(
                this.client.getHost(),
                this.client.getXMsClientId(),
                this.client.getSubscriptionKey(),
                apiVersion,
                datasetid,
                collectionId,
                accept);
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema.
     *
     * <p>The Collection Definition API provides the detailed data model of a given collection.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @param collectionId Identifier (name) of a specific collection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of GeoJSON features.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<CollectionDefinition> collectionDefinitionPreviewAsync(String datasetid, String collectionId) {
        return collectionDefinitionPreviewWithResponseAsync(datasetid, collectionId)
                .flatMap(
                        (Response<CollectionDefinition> res) -> {
                            if (res.getValue() != null) {
                                return Mono.just(res.getValue());
                            } else {
                                return Mono.empty();
                            }
                        });
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Get Features API returns the list of features in the given collection.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @param collectionId Identifier (name) of a specific collection.
     * @param limit The optional limit parameter limits the number of features that are presented in the response
     *     document. Only features that are on the first level of the collection in the response document are counted.
     *     Nested objects contained within the explicitly requested features shall not be counted. * Minimum = 1 *
     *     Maximum = 50 * Default = 10.
     * @param bbox Only features that have a geometry that intersects the supplied bounding box are selected. * Lower
     *     left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Upper right corner, coordinate axis 1
     *     * Upper right corner, coordinate axis 2 The coordinate reference system of the values is WGS84
     *     longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference
     *     system is specified in the parameter `bbox-crs`. For WGS84 longitude/latitude the values are in most cases
     *     the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in
     *     cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third
     *     value (east-most box edge).
     * @param filter Filter expression to search for features with specific property values in a given collection. Only
     *     feature properties of scalar type and equals operator are supported. This is a special parameter where the
     *     parameter name is the property name. The scheme for this parameter is {property name}={property value}.
     *     Unless "filter" is one of the property names in the collection, "filter" should not be used as a parameter
     *     name. To search for features with "name" property value "21N13", use "name=21N13". Multiple filters are
     *     supported and should be represented as multiple query parameters. E.g.,
     *     &lt;property1&gt;=&lt;value1&gt;&amp;&lt;property2&gt;=&lt;value2&gt; String values are case sensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<FeatureCollectionGeoJson>> getFeaturesPreviewWithResponseAsync(
            String datasetid, String collectionId, Float limit, String bbox, String filter) {
        final String apiVersion = "1.0";
        final String accept = "application/json, application/xml";
        return service.getFeaturesPreview(
                this.client.getHost(),
                this.client.getXMsClientId(),
                this.client.getSubscriptionKey(),
                apiVersion,
                datasetid,
                collectionId,
                limit,
                bbox,
                filter,
                accept);
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Get Features API returns the list of features in the given collection.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @param collectionId Identifier (name) of a specific collection.
     * @param limit The optional limit parameter limits the number of features that are presented in the response
     *     document. Only features that are on the first level of the collection in the response document are counted.
     *     Nested objects contained within the explicitly requested features shall not be counted. * Minimum = 1 *
     *     Maximum = 50 * Default = 10.
     * @param bbox Only features that have a geometry that intersects the supplied bounding box are selected. * Lower
     *     left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Upper right corner, coordinate axis 1
     *     * Upper right corner, coordinate axis 2 The coordinate reference system of the values is WGS84
     *     longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference
     *     system is specified in the parameter `bbox-crs`. For WGS84 longitude/latitude the values are in most cases
     *     the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in
     *     cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third
     *     value (east-most box edge).
     * @param filter Filter expression to search for features with specific property values in a given collection. Only
     *     feature properties of scalar type and equals operator are supported. This is a special parameter where the
     *     parameter name is the property name. The scheme for this parameter is {property name}={property value}.
     *     Unless "filter" is one of the property names in the collection, "filter" should not be used as a parameter
     *     name. To search for features with "name" property value "21N13", use "name=21N13". Multiple filters are
     *     supported and should be represented as multiple query parameters. E.g.,
     *     &lt;property1&gt;=&lt;value1&gt;&amp;&lt;property2&gt;=&lt;value2&gt; String values are case sensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<FeatureCollectionGeoJson> getFeaturesPreviewAsync(
            String datasetid, String collectionId, Float limit, String bbox, String filter) {
        return getFeaturesPreviewWithResponseAsync(datasetid, collectionId, limit, bbox, filter)
                .flatMap(
                        (Response<FeatureCollectionGeoJson> res) -> {
                            if (res.getValue() != null) {
                                return Mono.just(res.getValue());
                            } else {
                                return Mono.empty();
                            }
                        });
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Get Feature API returns the feature identified by the provided id in the given collection.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @param collectionId Identifier (name) of a specific collection.
     * @param featureId Local identifier of a specific feature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Feature>> getFeaturePreviewWithResponseAsync(
            String datasetid, String collectionId, String featureId) {
        final String apiVersion = "1.0";
        final String accept = "application/json, application/xml";
        return service.getFeaturePreview(
                this.client.getHost(),
                this.client.getSubscriptionKey(),
                apiVersion,
                datasetid,
                collectionId,
                featureId,
                accept);
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Get Feature API returns the feature identified by the provided id in the given collection.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @param collectionId Identifier (name) of a specific collection.
     * @param featureId Local identifier of a specific feature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Feature> getFeaturePreviewAsync(String datasetid, String collectionId, String featureId) {
        return getFeaturePreviewWithResponseAsync(datasetid, collectionId, featureId)
                .flatMap(
                        (Response<Feature> res) -> {
                            if (res.getValue() != null) {
                                return Mono.just(res.getValue());
                            } else {
                                return Mono.empty();
                            }
                        });
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Delete Feature API deletes the feature identified by the provided id in the given collection. At this
     * point this API supports only facility features. Deleting a facility feature deletes all the child features of
     * that facility recursively.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @param collectionId Identifier (name) of a specific collection.
     * @param featureId Local identifier of a specific feature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> deleteFeaturePreviewWithResponseAsync(
            String datasetid, String collectionId, String featureId) {
        final String apiVersion = "1.0";
        final String accept = "application/json, application/xml";
        return service.deleteFeaturePreview(
                this.client.getHost(),
                this.client.getSubscriptionKey(),
                apiVersion,
                datasetid,
                collectionId,
                featureId,
                accept);
    }

    /**
     * Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and
     * SDK. The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API
     * standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query
     * [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). A dataset consists of multiple
     * feature collections. A feature collection is a collection of features of a similar type, based on a common
     * schema. The Delete Feature API deletes the feature identified by the provided id in the given collection. At this
     * point this API supports only facility features. Deleting a facility feature deletes all the child features of
     * that facility recursively.
     *
     * @param datasetid The identifier for the dataset to query from.
     * @param collectionId Identifier (name) of a specific collection.
     * @param featureId Local identifier of a specific feature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws ErrorResponseException thrown if the request is rejected by server on status code 400, 400, 401, 401,
     *     403, 403, 404, 404, 500, 500.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> deleteFeaturePreviewAsync(String datasetid, String collectionId, String featureId) {
        return deleteFeaturePreviewWithResponseAsync(datasetid, collectionId, featureId)
                .flatMap((Response<Void> res) -> Mono.empty());
    }
}
