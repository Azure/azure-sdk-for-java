// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.microsoft.azure.maps.service.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** This object is returned from a successful Transit Line Info call. */
@Fluent
public final class TransitLineInfoResponse {
    /*
     * Groups together all lines that are logically part of the same group.
     * Typically contains 2 lines having the same agency and line, one going
     * from A to B, and the other from B to A.
     */
    @JsonProperty(value = "lineGroup")
    private LineGroup lineGroup;

    /*
     * The line group’s basic info and list of the lines.
     */
    @JsonProperty(value = "lines")
    private List<Line> lines;

    /*
     * List of stops the line group goes through.
     */
    @JsonProperty(value = "stops")
    private List<Stop> stops;

    /*
     * List of patterns this group is comprised of. A pattern consists of a
     * stop sequence and shape per a line in GeoJSON format.
     */
    @JsonProperty(value = "patterns")
    private List<Pattern> patterns;

    /*
     * Line schedule for the current 24h. May be null in case no schedule
     * exists for the current time.
     */
    @JsonProperty(value = "schedule")
    private LineArrival schedule;

    /**
     * Get the lineGroup property: Groups together all lines that are logically part of the same group. Typically
     * contains 2 lines having the same agency and line, one going from A to B, and the other from B to A.
     *
     * @return the lineGroup value.
     */
    public LineGroup getLineGroup() {
        return this.lineGroup;
    }

    /**
     * Set the lineGroup property: Groups together all lines that are logically part of the same group. Typically
     * contains 2 lines having the same agency and line, one going from A to B, and the other from B to A.
     *
     * @param lineGroup the lineGroup value to set.
     * @return the TransitLineInfoResponse object itself.
     */
    public TransitLineInfoResponse setLineGroup(LineGroup lineGroup) {
        this.lineGroup = lineGroup;
        return this;
    }

    /**
     * Get the lines property: The line group’s basic info and list of the lines.
     *
     * @return the lines value.
     */
    public List<Line> getLines() {
        return this.lines;
    }

    /**
     * Set the lines property: The line group’s basic info and list of the lines.
     *
     * @param lines the lines value to set.
     * @return the TransitLineInfoResponse object itself.
     */
    public TransitLineInfoResponse setLines(List<Line> lines) {
        this.lines = lines;
        return this;
    }

    /**
     * Get the stops property: List of stops the line group goes through.
     *
     * @return the stops value.
     */
    public List<Stop> getStops() {
        return this.stops;
    }

    /**
     * Set the stops property: List of stops the line group goes through.
     *
     * @param stops the stops value to set.
     * @return the TransitLineInfoResponse object itself.
     */
    public TransitLineInfoResponse setStops(List<Stop> stops) {
        this.stops = stops;
        return this;
    }

    /**
     * Get the patterns property: List of patterns this group is comprised of. A pattern consists of a stop sequence and
     * shape per a line in GeoJSON format.
     *
     * @return the patterns value.
     */
    public List<Pattern> getPatterns() {
        return this.patterns;
    }

    /**
     * Set the patterns property: List of patterns this group is comprised of. A pattern consists of a stop sequence and
     * shape per a line in GeoJSON format.
     *
     * @param patterns the patterns value to set.
     * @return the TransitLineInfoResponse object itself.
     */
    public TransitLineInfoResponse setPatterns(List<Pattern> patterns) {
        this.patterns = patterns;
        return this;
    }

    /**
     * Get the schedule property: Line schedule for the current 24h. May be null in case no schedule exists for the
     * current time.
     *
     * @return the schedule value.
     */
    public LineArrival getSchedule() {
        return this.schedule;
    }

    /**
     * Set the schedule property: Line schedule for the current 24h. May be null in case no schedule exists for the
     * current time.
     *
     * @param schedule the schedule value to set.
     * @return the TransitLineInfoResponse object itself.
     */
    public TransitLineInfoResponse setSchedule(LineArrival schedule) {
        this.schedule = schedule;
        return this;
    }
}
