// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.maps.search.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import com.azure.maps.search.implementation.helpers.SearchAddressResultPropertiesHelper;

/**
 * This object is returned from a successful Search calls.
 */
@Immutable
public class SearchAddressResult implements JsonSerializable<SearchAddressResult> {

    /*
     * Summary object for a Search API response
     */
    private SearchSummary summary;

    /*
     * A list of Search API results.
     */
    private List<SearchAddressResultItem> results;

    /**
     * Creates an instance of SearchAddressResult class.
     */
    public SearchAddressResult() {
    }

    /**
     * Get the summary property: Summary object for a Search API response.
     *
     * @return the summary value.
     */
    public SearchSummary getSummary() {
        return this.summary;
    }

    /**
     * Set the summary property: Summary object for a Search API response.
     *
     * @param summary the summary value to set.
     * @return the SearchAddressResult object itself.
     */
    SearchAddressResult setSummary(SearchSummary summary) {
        this.summary = summary;
        return this;
    }

    /**
     * Get the results property: A list of Search API results.
     *
     * @return the results value.
     */
    public List<SearchAddressResultItem> getResults() {
        return this.results;
    }

    /**
     * Set the results property: A list of Search API results.
     *
     * @param results the results value to set.
     * @return the SearchAddressResult object itself.
     */
    SearchAddressResult setResults(List<SearchAddressResultItem> results) {
        this.results = results;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SearchAddressResult from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of SearchAddressResult if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the SearchAddressResult.
     */
    public static SearchAddressResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SearchAddressResult deserializedSearchAddressResult = new SearchAddressResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("summary".equals(fieldName)) {
                    deserializedSearchAddressResult.summary = SearchSummary.fromJson(reader);
                } else if ("results".equals(fieldName)) {
                    List<SearchAddressResultItem> results
                        = reader.readArray(reader1 -> SearchAddressResultItem.fromJson(reader1));
                    deserializedSearchAddressResult.results = results;
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedSearchAddressResult;
        });
    }

    static {
        SearchAddressResultPropertiesHelper
            .setAccessor(new SearchAddressResultPropertiesHelper.SearchAddressResultAccessor() {

                @Override
                public void setSummary(SearchAddressResult searchAddressResult, SearchSummary summary) {
                    searchAddressResult.setSummary(summary);
                }

                @Override
                public void setResults(SearchAddressResult searchAddressResult, List<SearchAddressResultItem> results) {
                    searchAddressResult.setResults(results);
                }
            });
    }
}
