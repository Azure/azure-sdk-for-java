// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.search.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The MapsSearchAddressAdminDistrictsItem model.
 */
@Fluent
public final class MapsSearchAddressAdminDistrictsItem
    implements JsonSerializable<MapsSearchAddressAdminDistrictsItem> {
    /*
     * The name for the corresponding adminDistrict field, 
     * For adminDistrict[0], this could be full name of state such as Washington, 
     * For adminDistrict[1], this could be the full name of the county
     */
    private String name;

    /*
     * The short name for the corresponding adminDistrict field, 
     * For adminDistrict[0], this could be short name of state such as WA, 
     * For adminDistrict[1], this could be the short name of the county
     */
    private String shortName;

    /**
     * Creates an instance of MapsSearchAddressAdminDistrictsItem class.
     */
    public MapsSearchAddressAdminDistrictsItem() {
    }

    /**
     * Get the name property: The name for the corresponding adminDistrict field,
     * For adminDistrict[0], this could be full name of state such as Washington,
     * For adminDistrict[1], this could be the full name of the county.
     * 
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Set the name property: The name for the corresponding adminDistrict field,
     * For adminDistrict[0], this could be full name of state such as Washington,
     * For adminDistrict[1], this could be the full name of the county.
     * 
     * @param name the name value to set.
     * @return the MapsSearchAddressAdminDistrictsItem object itself.
     */
    public MapsSearchAddressAdminDistrictsItem setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the shortName property: The short name for the corresponding adminDistrict field,
     * For adminDistrict[0], this could be short name of state such as WA,
     * For adminDistrict[1], this could be the short name of the county.
     * 
     * @return the shortName value.
     */
    public String getShortName() {
        return this.shortName;
    }

    /**
     * Set the shortName property: The short name for the corresponding adminDistrict field,
     * For adminDistrict[0], this could be short name of state such as WA,
     * For adminDistrict[1], this could be the short name of the county.
     * 
     * @param shortName the shortName value to set.
     * @return the MapsSearchAddressAdminDistrictsItem object itself.
     */
    public MapsSearchAddressAdminDistrictsItem setShortName(String shortName) {
        this.shortName = shortName;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("shortName", this.shortName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MapsSearchAddressAdminDistrictsItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MapsSearchAddressAdminDistrictsItem if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MapsSearchAddressAdminDistrictsItem.
     */
    public static MapsSearchAddressAdminDistrictsItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MapsSearchAddressAdminDistrictsItem deserializedMapsSearchAddressAdminDistrictsItem
                = new MapsSearchAddressAdminDistrictsItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedMapsSearchAddressAdminDistrictsItem.name = reader.getString();
                } else if ("shortName".equals(fieldName)) {
                    deserializedMapsSearchAddressAdminDistrictsItem.shortName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMapsSearchAddressAdminDistrictsItem;
        });
    }
}
