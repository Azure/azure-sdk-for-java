// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.maps.search.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.models.ResponseError;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.maps.search.models.ReverseSearchAddressResult;
import com.azure.maps.search.models.ReverseSearchAddressResultItem;
import com.azure.maps.search.models.SearchSummary;
import java.io.IOException;
import java.util.List;

/**
 * The result of the query. SearchAddressReverseResponse if the query completed successfully, ErrorResponse otherwise.
 */
@Fluent
public final class ReverseSearchAddressBatchItemPrivateResponse extends ReverseSearchAddressResult {

    /*
     * The error object.
     */
    private ErrorDetail error;

    /*
     * Addresses array
     */
    private List<ReverseSearchAddressResultItem> addresses;

    /*
     * Summary object for a Search Address Reverse response
     */
    private SearchSummary summary;

    /**
     * Creates an instance of ReverseSearchAddressBatchItemPrivateResponse class.
     */
    public ReverseSearchAddressBatchItemPrivateResponse() {
    }

    /**
     * Get the error property: The error object.
     *
     * @return the error value.
     */
    public ResponseError getError() {
        if (this.error == null) {
            return new ResponseError("", "");
        }
        return new ResponseError(this.error.getCode(), this.error.getMessage());
    }

    /**
     * Set the error property: The error object.
     *
     * @param error the error value to set.
     * @return the ReverseSearchAddressBatchItemPrivateResponse object itself.
     */
    public ReverseSearchAddressBatchItemPrivateResponse setError(ResponseError error) {
        this.error = new ErrorDetail().setCode(error.getCode()).setMessage(error.getMessage());
        return this;
    }

    /**
     * Get the addresses property: Addresses array.
     *
     * @return the addresses value.
     */
    @Override
    public List<ReverseSearchAddressResultItem> getAddresses() {
        return this.addresses;
    }

    /**
     * Get the summary property: Summary object for a Search Address Reverse response.
     *
     * @return the summary value.
     */
    @Override
    public SearchSummary getSummary() {
        return this.summary;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("error", this.error);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReverseSearchAddressBatchItemPrivateResponse from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReverseSearchAddressBatchItemPrivateResponse if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ReverseSearchAddressBatchItemPrivateResponse.
     */
    public static ReverseSearchAddressBatchItemPrivateResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReverseSearchAddressBatchItemPrivateResponse deserializedReverseSearchAddressBatchItemPrivateResponse
                = new ReverseSearchAddressBatchItemPrivateResponse();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("summary".equals(fieldName)) {
                    deserializedReverseSearchAddressBatchItemPrivateResponse.summary = SearchSummary.fromJson(reader);
                } else if ("addresses".equals(fieldName)) {
                    List<ReverseSearchAddressResultItem> addresses
                        = reader.readArray(reader1 -> ReverseSearchAddressResultItem.fromJson(reader1));
                    deserializedReverseSearchAddressBatchItemPrivateResponse.addresses = addresses;
                } else if ("error".equals(fieldName)) {
                    deserializedReverseSearchAddressBatchItemPrivateResponse.error = ErrorDetail.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedReverseSearchAddressBatchItemPrivateResponse;
        });
    }
}
