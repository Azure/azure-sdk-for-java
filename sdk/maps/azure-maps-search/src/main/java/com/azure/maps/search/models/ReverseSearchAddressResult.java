// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.maps.search.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import com.azure.maps.search.implementation.helpers.ReverseSearchAddressResultPropertiesHelper;

/**
 * This object is returned from a successful Search Address Reverse call.
 */
@Immutable
public class ReverseSearchAddressResult implements JsonSerializable<ReverseSearchAddressResult> {

    /*
     * Summary object for a Search Address Reverse response
     */
    private SearchSummary summary;

    /*
     * Addresses array
     */
    private List<ReverseSearchAddressResultItem> addresses;

    /**
     * Creates an instance of ReverseSearchAddressResult class.
     */
    public ReverseSearchAddressResult() {
    }

    /**
     * Get the summary property: Summary object for a Search Address Reverse response.
     *
     * @return the summary value.
     */
    public SearchSummary getSummary() {
        return this.summary;
    }

    /**
     * Set the summary property: Summary object for a Search Address Reverse response.
     *
     * @param summary the summary value to set.
     * @return the ReverseSearchAddressResult object itself.
     */
    ReverseSearchAddressResult setSummary(SearchSummary summary) {
        this.summary = summary;
        return this;
    }

    /**
     * Get the addresses property: Addresses array.
     *
     * @return the addresses value.
     */
    public List<ReverseSearchAddressResultItem> getAddresses() {
        return this.addresses;
    }

    /**
     * Set the addresses property: Addresses array.
     *
     * @param addresses the addresses value to set.
     * @return the ReverseSearchAddressResult object itself.
     */
    ReverseSearchAddressResult setAddresses(List<ReverseSearchAddressResultItem> addresses) {
        this.addresses = addresses;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReverseSearchAddressResult from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReverseSearchAddressResult if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ReverseSearchAddressResult.
     */
    public static ReverseSearchAddressResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReverseSearchAddressResult deserializedReverseSearchAddressResult = new ReverseSearchAddressResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("summary".equals(fieldName)) {
                    deserializedReverseSearchAddressResult.summary = SearchSummary.fromJson(reader);
                } else if ("addresses".equals(fieldName)) {
                    List<ReverseSearchAddressResultItem> addresses
                        = reader.readArray(reader1 -> ReverseSearchAddressResultItem.fromJson(reader1));
                    deserializedReverseSearchAddressResult.addresses = addresses;
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedReverseSearchAddressResult;
        });
    }

    static {
        ReverseSearchAddressResultPropertiesHelper
            .setAccessor(new ReverseSearchAddressResultPropertiesHelper.ReverseSearchAddressResultAccessor() {

                @Override
                public void setSummary(ReverseSearchAddressResult reverseSearchAddressResult, SearchSummary summary) {
                    reverseSearchAddressResult.setSummary(summary);
                }

                @Override
                public void setAddresses(ReverseSearchAddressResult reverseSearchAddressResult,
                    List<ReverseSearchAddressResultItem> results) {
                    reverseSearchAddressResult.setAddresses(results);
                }
            });
    }
}
