// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.search.implementation.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * An item returned from Search Address Batch service call.
 */
@Immutable
public final class SearchAddressBatchItemPrivate extends BatchResultItem {
    /*
     * The result of the query. SearchAddressResult if the query completed successfully, ErrorResponse otherwise.
     */
    private SearchAddressBatchItemPrivateResponse response;

    /**
     * Creates an instance of SearchAddressBatchItemPrivate class.
     */
    public SearchAddressBatchItemPrivate() {
    }

    /**
     * Get the response property: The result of the query. SearchAddressResult if the query completed successfully,
     * ErrorResponse otherwise.
     * 
     * @return the response value.
     */
    public SearchAddressBatchItemPrivateResponse getResponse() {
        return this.response;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SearchAddressBatchItemPrivate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SearchAddressBatchItemPrivate if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SearchAddressBatchItemPrivate.
     */
    public static SearchAddressBatchItemPrivate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SearchAddressBatchItemPrivate deserializedSearchAddressBatchItemPrivate
                = new SearchAddressBatchItemPrivate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("statusCode".equals(fieldName)) {
                    deserializedSearchAddressBatchItemPrivate.setStatusCode(reader.getNullable(JsonReader::getInt));
                } else if ("response".equals(fieldName)) {
                    deserializedSearchAddressBatchItemPrivate.response
                        = SearchAddressBatchItemPrivateResponse.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSearchAddressBatchItemPrivate;
        });
    }
}
