// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.search.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * This object is returned from a successful POI Category Tree call.
 */
@Immutable
public final class PointOfInterestCategoryTreeResult implements JsonSerializable<PointOfInterestCategoryTreeResult> {
    /*
     * Categories array
     */
    private List<PointOfInterestCategory> categories;

    /**
     * Creates an instance of PointOfInterestCategoryTreeResult class.
     */
    public PointOfInterestCategoryTreeResult() {
    }

    /**
     * Get the categories property: Categories array.
     * 
     * @return the categories value.
     */
    public List<PointOfInterestCategory> getCategories() {
        return this.categories;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PointOfInterestCategoryTreeResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PointOfInterestCategoryTreeResult if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PointOfInterestCategoryTreeResult.
     */
    public static PointOfInterestCategoryTreeResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PointOfInterestCategoryTreeResult deserializedPointOfInterestCategoryTreeResult
                = new PointOfInterestCategoryTreeResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("poiCategories".equals(fieldName)) {
                    List<PointOfInterestCategory> categories
                        = reader.readArray(reader1 -> PointOfInterestCategory.fromJson(reader1));
                    deserializedPointOfInterestCategoryTreeResult.categories = categories;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPointOfInterestCategoryTreeResult;
        });
    }
}
