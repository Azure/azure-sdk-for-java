// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.route.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Summary object.
 */
@Immutable
public final class RouteMatrixSummary implements JsonSerializable<RouteMatrixSummary> {
    /*
     * Number of successful routes in the response.
     */
    private Integer successfulRoutes;

    /*
     * Total number of routes requested. Number of cells in the input matrix.
     */
    private Integer totalRoutes;

    /**
     * Creates an instance of RouteMatrixSummary class.
     */
    public RouteMatrixSummary() {
    }

    /**
     * Get the successfulRoutes property: Number of successful routes in the response.
     * 
     * @return the successfulRoutes value.
     */
    public Integer getSuccessfulRoutes() {
        return this.successfulRoutes;
    }

    /**
     * Get the totalRoutes property: Total number of routes requested. Number of cells in the input matrix.
     * 
     * @return the totalRoutes value.
     */
    public Integer getTotalRoutes() {
        return this.totalRoutes;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RouteMatrixSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RouteMatrixSummary if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the RouteMatrixSummary.
     */
    public static RouteMatrixSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RouteMatrixSummary deserializedRouteMatrixSummary = new RouteMatrixSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("successfulRoutes".equals(fieldName)) {
                    deserializedRouteMatrixSummary.successfulRoutes = reader.getNullable(JsonReader::getInt);
                } else if ("totalRoutes".equals(fieldName)) {
                    deserializedRouteMatrixSummary.totalRoutes = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRouteMatrixSummary;
        });
    }
}
