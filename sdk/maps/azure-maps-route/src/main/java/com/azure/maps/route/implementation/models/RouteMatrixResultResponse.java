// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.route.implementation.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.maps.route.models.RouteLegSummary;
import java.io.IOException;

/**
 * Response object of the current cell in the input matrix.
 */
@Immutable
public final class RouteMatrixResultResponse implements JsonSerializable<RouteMatrixResultResponse> {
    /*
     * Summary object for route section.
     */
    private RouteLegSummary summary;

    /**
     * Creates an instance of RouteMatrixResultResponse class.
     */
    public RouteMatrixResultResponse() {
    }

    /**
     * Get the summary property: Summary object for route section.
     * 
     * @return the summary value.
     */
    public RouteLegSummary getSummary() {
        return this.summary;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RouteMatrixResultResponse from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RouteMatrixResultResponse if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RouteMatrixResultResponse.
     */
    public static RouteMatrixResultResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RouteMatrixResultResponse deserializedRouteMatrixResultResponse = new RouteMatrixResultResponse();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("routeSummary".equals(fieldName)) {
                    deserializedRouteMatrixResultResponse.summary = RouteLegSummary.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRouteMatrixResultResponse;
        });
    }
}
