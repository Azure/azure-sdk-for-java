// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.playwrighttesting.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.playwrighttesting.fluent.models.AccountInner;
import java.util.Map;

/** An immutable client-side representation of Account. */
public interface Account {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the dashboardUri property: The Playwright testing dashboard URI for the account resource.
     *
     * @return the dashboardUri value.
     */
    String dashboardUri();

    /**
     * Gets the regionalAffinity property: This property sets the connection region for Playwright client workers to
     * cloud-hosted browsers. If enabled, workers connect to browsers in the closest Azure region, ensuring lower
     * latency. If disabled, workers connect to browsers in the Azure region in which the workspace was initially
     * created.
     *
     * @return the regionalAffinity value.
     */
    EnablementStatus regionalAffinity();

    /**
     * Gets the scalableExecution property: When enabled, Playwright client workers can connect to cloud-hosted
     * browsers. This can increase the number of parallel workers for a test run, significantly minimizing test
     * completion durations.
     *
     * @return the scalableExecution value.
     */
    EnablementStatus scalableExecution();

    /**
     * Gets the reporting property: When enabled, this feature allows the workspace to upload and display test results,
     * including artifacts like traces and screenshots, in the Playwright portal. This enables faster and more efficient
     * troubleshooting.
     *
     * @return the reporting value.
     */
    EnablementStatus reporting();

    /**
     * Gets the provisioningState property: The status of the last operation.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.playwrighttesting.fluent.models.AccountInner object.
     *
     * @return the inner object.
     */
    AccountInner innerModel();

    /** The entirety of the Account definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }

    /** The Account definition stages. */
    interface DefinitionStages {
        /** The first stage of the Account definition. */
        interface Blank extends WithLocation {
        }

        /** The stage of the Account definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /** The stage of the Account definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the Account definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithRegionalAffinity,
                DefinitionStages.WithScalableExecution,
                DefinitionStages.WithReporting {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Account create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Account create(Context context);
        }

        /** The stage of the Account definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /** The stage of the Account definition allowing to specify regionalAffinity. */
        interface WithRegionalAffinity {
            /**
             * Specifies the regionalAffinity property: This property sets the connection region for Playwright client
             * workers to cloud-hosted browsers. If enabled, workers connect to browsers in the closest Azure region,
             * ensuring lower latency. If disabled, workers connect to browsers in the Azure region in which the
             * workspace was initially created..
             *
             * @param regionalAffinity This property sets the connection region for Playwright client workers to
             *     cloud-hosted browsers. If enabled, workers connect to browsers in the closest Azure region, ensuring
             *     lower latency. If disabled, workers connect to browsers in the Azure region in which the workspace
             *     was initially created.
             * @return the next definition stage.
             */
            WithCreate withRegionalAffinity(EnablementStatus regionalAffinity);
        }

        /** The stage of the Account definition allowing to specify scalableExecution. */
        interface WithScalableExecution {
            /**
             * Specifies the scalableExecution property: When enabled, Playwright client workers can connect to
             * cloud-hosted browsers. This can increase the number of parallel workers for a test run, significantly
             * minimizing test completion durations..
             *
             * @param scalableExecution When enabled, Playwright client workers can connect to cloud-hosted browsers.
             *     This can increase the number of parallel workers for a test run, significantly minimizing test
             *     completion durations.
             * @return the next definition stage.
             */
            WithCreate withScalableExecution(EnablementStatus scalableExecution);
        }

        /** The stage of the Account definition allowing to specify reporting. */
        interface WithReporting {
            /**
             * Specifies the reporting property: When enabled, this feature allows the workspace to upload and display
             * test results, including artifacts like traces and screenshots, in the Playwright portal. This enables
             * faster and more efficient troubleshooting..
             *
             * @param reporting When enabled, this feature allows the workspace to upload and display test results,
             *     including artifacts like traces and screenshots, in the Playwright portal. This enables faster and
             *     more efficient troubleshooting.
             * @return the next definition stage.
             */
            WithCreate withReporting(EnablementStatus reporting);
        }
    }

    /**
     * Begins update for the Account resource.
     *
     * @return the stage of resource update.
     */
    Account.Update update();

    /** The template for Account update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithRegionalAffinity,
            UpdateStages.WithScalableExecution,
            UpdateStages.WithReporting {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Account apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Account apply(Context context);
    }

    /** The Account update stages. */
    interface UpdateStages {
        /** The stage of the Account update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /** The stage of the Account update allowing to specify regionalAffinity. */
        interface WithRegionalAffinity {
            /**
             * Specifies the regionalAffinity property: This property sets the connection region for Playwright client
             * workers to cloud-hosted browsers. If enabled, workers connect to browsers in the closest Azure region,
             * ensuring lower latency. If disabled, workers connect to browsers in the Azure region in which the
             * workspace was initially created..
             *
             * @param regionalAffinity This property sets the connection region for Playwright client workers to
             *     cloud-hosted browsers. If enabled, workers connect to browsers in the closest Azure region, ensuring
             *     lower latency. If disabled, workers connect to browsers in the Azure region in which the workspace
             *     was initially created.
             * @return the next definition stage.
             */
            Update withRegionalAffinity(EnablementStatus regionalAffinity);
        }

        /** The stage of the Account update allowing to specify scalableExecution. */
        interface WithScalableExecution {
            /**
             * Specifies the scalableExecution property: When enabled, Playwright client workers can connect to
             * cloud-hosted browsers. This can increase the number of parallel workers for a test run, significantly
             * minimizing test completion durations..
             *
             * @param scalableExecution When enabled, Playwright client workers can connect to cloud-hosted browsers.
             *     This can increase the number of parallel workers for a test run, significantly minimizing test
             *     completion durations.
             * @return the next definition stage.
             */
            Update withScalableExecution(EnablementStatus scalableExecution);
        }

        /** The stage of the Account update allowing to specify reporting. */
        interface WithReporting {
            /**
             * Specifies the reporting property: When enabled, this feature allows the workspace to upload and display
             * test results, including artifacts like traces and screenshots, in the Playwright portal. This enables
             * faster and more efficient troubleshooting..
             *
             * @param reporting When enabled, this feature allows the workspace to upload and display test results,
             *     including artifacts like traces and screenshots, in the Playwright portal. This enables faster and
             *     more efficient troubleshooting.
             * @return the next definition stage.
             */
            Update withReporting(EnablementStatus reporting);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Account refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Account refresh(Context context);
}
