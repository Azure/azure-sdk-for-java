// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Model to capture detailed information for farmBeatsExtensions.
 */
@Fluent
public final class DetailedInformation implements JsonSerializable<DetailedInformation> {
    /*
     * ApiName available for the farmBeatsExtension.
     */
    private String apiName;

    /*
     * List of customParameters.
     */
    private List<String> customParameters;

    /*
     * List of platformParameters.
     */
    private List<String> platformParameters;

    /*
     * Unit systems info for the data provider.
     */
    private UnitSystemsInfo unitsSupported;

    /*
     * List of apiInputParameters.
     */
    private List<String> apiInputParameters;

    /**
     * Creates an instance of DetailedInformation class.
     */
    public DetailedInformation() {
    }

    /**
     * Get the apiName property: ApiName available for the farmBeatsExtension.
     * 
     * @return the apiName value.
     */
    public String apiName() {
        return this.apiName;
    }

    /**
     * Set the apiName property: ApiName available for the farmBeatsExtension.
     * 
     * @param apiName the apiName value to set.
     * @return the DetailedInformation object itself.
     */
    public DetailedInformation withApiName(String apiName) {
        this.apiName = apiName;
        return this;
    }

    /**
     * Get the customParameters property: List of customParameters.
     * 
     * @return the customParameters value.
     */
    public List<String> customParameters() {
        return this.customParameters;
    }

    /**
     * Set the customParameters property: List of customParameters.
     * 
     * @param customParameters the customParameters value to set.
     * @return the DetailedInformation object itself.
     */
    public DetailedInformation withCustomParameters(List<String> customParameters) {
        this.customParameters = customParameters;
        return this;
    }

    /**
     * Get the platformParameters property: List of platformParameters.
     * 
     * @return the platformParameters value.
     */
    public List<String> platformParameters() {
        return this.platformParameters;
    }

    /**
     * Set the platformParameters property: List of platformParameters.
     * 
     * @param platformParameters the platformParameters value to set.
     * @return the DetailedInformation object itself.
     */
    public DetailedInformation withPlatformParameters(List<String> platformParameters) {
        this.platformParameters = platformParameters;
        return this;
    }

    /**
     * Get the unitsSupported property: Unit systems info for the data provider.
     * 
     * @return the unitsSupported value.
     */
    public UnitSystemsInfo unitsSupported() {
        return this.unitsSupported;
    }

    /**
     * Set the unitsSupported property: Unit systems info for the data provider.
     * 
     * @param unitsSupported the unitsSupported value to set.
     * @return the DetailedInformation object itself.
     */
    public DetailedInformation withUnitsSupported(UnitSystemsInfo unitsSupported) {
        this.unitsSupported = unitsSupported;
        return this;
    }

    /**
     * Get the apiInputParameters property: List of apiInputParameters.
     * 
     * @return the apiInputParameters value.
     */
    public List<String> apiInputParameters() {
        return this.apiInputParameters;
    }

    /**
     * Set the apiInputParameters property: List of apiInputParameters.
     * 
     * @param apiInputParameters the apiInputParameters value to set.
     * @return the DetailedInformation object itself.
     */
    public DetailedInformation withApiInputParameters(List<String> apiInputParameters) {
        this.apiInputParameters = apiInputParameters;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (unitsSupported() != null) {
            unitsSupported().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("apiName", this.apiName);
        jsonWriter.writeArrayField("customParameters", this.customParameters,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("platformParameters", this.platformParameters,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("unitsSupported", this.unitsSupported);
        jsonWriter.writeArrayField("apiInputParameters", this.apiInputParameters,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DetailedInformation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DetailedInformation if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the DetailedInformation.
     */
    public static DetailedInformation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DetailedInformation deserializedDetailedInformation = new DetailedInformation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("apiName".equals(fieldName)) {
                    deserializedDetailedInformation.apiName = reader.getString();
                } else if ("customParameters".equals(fieldName)) {
                    List<String> customParameters = reader.readArray(reader1 -> reader1.getString());
                    deserializedDetailedInformation.customParameters = customParameters;
                } else if ("platformParameters".equals(fieldName)) {
                    List<String> platformParameters = reader.readArray(reader1 -> reader1.getString());
                    deserializedDetailedInformation.platformParameters = platformParameters;
                } else if ("unitsSupported".equals(fieldName)) {
                    deserializedDetailedInformation.unitsSupported = UnitSystemsInfo.fromJson(reader);
                } else if ("apiInputParameters".equals(fieldName)) {
                    List<String> apiInputParameters = reader.readArray(reader1 -> reader1.getString());
                    deserializedDetailedInformation.apiInputParameters = apiInputParameters;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDetailedInformation;
        });
    }
}
