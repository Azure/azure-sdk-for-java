// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The SolutionEvaluatedOutput model.
 */
@Fluent
public final class SolutionEvaluatedOutput implements JsonSerializable<SolutionEvaluatedOutput> {
    /*
     * The insightResponse property.
     */
    private Insight insightResponse;

    /*
     * The insightAttachmentResponse property.
     */
    private InsightAttachment insightAttachmentResponse;

    /**
     * Creates an instance of SolutionEvaluatedOutput class.
     */
    public SolutionEvaluatedOutput() {
    }

    /**
     * Get the insightResponse property: The insightResponse property.
     * 
     * @return the insightResponse value.
     */
    public Insight insightResponse() {
        return this.insightResponse;
    }

    /**
     * Set the insightResponse property: The insightResponse property.
     * 
     * @param insightResponse the insightResponse value to set.
     * @return the SolutionEvaluatedOutput object itself.
     */
    public SolutionEvaluatedOutput withInsightResponse(Insight insightResponse) {
        this.insightResponse = insightResponse;
        return this;
    }

    /**
     * Get the insightAttachmentResponse property: The insightAttachmentResponse property.
     * 
     * @return the insightAttachmentResponse value.
     */
    public InsightAttachment insightAttachmentResponse() {
        return this.insightAttachmentResponse;
    }

    /**
     * Set the insightAttachmentResponse property: The insightAttachmentResponse property.
     * 
     * @param insightAttachmentResponse the insightAttachmentResponse value to set.
     * @return the SolutionEvaluatedOutput object itself.
     */
    public SolutionEvaluatedOutput withInsightAttachmentResponse(InsightAttachment insightAttachmentResponse) {
        this.insightAttachmentResponse = insightAttachmentResponse;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (insightResponse() != null) {
            insightResponse().validate();
        }
        if (insightAttachmentResponse() != null) {
            insightAttachmentResponse().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("insightResponse", this.insightResponse);
        jsonWriter.writeJsonField("insightAttachmentResponse", this.insightAttachmentResponse);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SolutionEvaluatedOutput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SolutionEvaluatedOutput if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SolutionEvaluatedOutput.
     */
    public static SolutionEvaluatedOutput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SolutionEvaluatedOutput deserializedSolutionEvaluatedOutput = new SolutionEvaluatedOutput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("insightResponse".equals(fieldName)) {
                    deserializedSolutionEvaluatedOutput.insightResponse = Insight.fromJson(reader);
                } else if ("insightAttachmentResponse".equals(fieldName)) {
                    deserializedSolutionEvaluatedOutput.insightAttachmentResponse = InsightAttachment.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSolutionEvaluatedOutput;
        });
    }
}
