// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Extension Installation Request Body.
 */
@Fluent
public final class ExtensionInstallationRequest implements JsonSerializable<ExtensionInstallationRequest> {
    /*
     * Extension Version.
     */
    private String extensionVersion;

    /*
     * Additional Api Properties.
     */
    private Map<String, ApiProperties> additionalApiProperties;

    /**
     * Creates an instance of ExtensionInstallationRequest class.
     */
    public ExtensionInstallationRequest() {
    }

    /**
     * Get the extensionVersion property: Extension Version.
     * 
     * @return the extensionVersion value.
     */
    public String extensionVersion() {
        return this.extensionVersion;
    }

    /**
     * Set the extensionVersion property: Extension Version.
     * 
     * @param extensionVersion the extensionVersion value to set.
     * @return the ExtensionInstallationRequest object itself.
     */
    public ExtensionInstallationRequest withExtensionVersion(String extensionVersion) {
        this.extensionVersion = extensionVersion;
        return this;
    }

    /**
     * Get the additionalApiProperties property: Additional Api Properties.
     * 
     * @return the additionalApiProperties value.
     */
    public Map<String, ApiProperties> additionalApiProperties() {
        return this.additionalApiProperties;
    }

    /**
     * Set the additionalApiProperties property: Additional Api Properties.
     * 
     * @param additionalApiProperties the additionalApiProperties value to set.
     * @return the ExtensionInstallationRequest object itself.
     */
    public ExtensionInstallationRequest
        withAdditionalApiProperties(Map<String, ApiProperties> additionalApiProperties) {
        this.additionalApiProperties = additionalApiProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (additionalApiProperties() != null) {
            additionalApiProperties().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("extensionVersion", this.extensionVersion);
        jsonWriter.writeMapField("additionalApiProperties", this.additionalApiProperties,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExtensionInstallationRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExtensionInstallationRequest if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExtensionInstallationRequest.
     */
    public static ExtensionInstallationRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExtensionInstallationRequest deserializedExtensionInstallationRequest = new ExtensionInstallationRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("extensionVersion".equals(fieldName)) {
                    deserializedExtensionInstallationRequest.extensionVersion = reader.getString();
                } else if ("additionalApiProperties".equals(fieldName)) {
                    Map<String, ApiProperties> additionalApiProperties
                        = reader.readMap(reader1 -> ApiProperties.fromJson(reader1));
                    deserializedExtensionInstallationRequest.additionalApiProperties = additionalApiProperties;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExtensionInstallationRequest;
        });
    }
}
