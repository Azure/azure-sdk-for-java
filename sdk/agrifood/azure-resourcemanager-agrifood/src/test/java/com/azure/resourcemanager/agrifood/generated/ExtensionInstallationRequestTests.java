// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.agrifood.models.ApiProperties;
import com.azure.resourcemanager.agrifood.models.ExtensionInstallationRequest;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ExtensionInstallationRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExtensionInstallationRequest model = BinaryData.fromString(
            "{\"extensionVersion\":\"mhquvgjxp\",\"additionalApiProperties\":{\"ehmtzop\":{\"apiFreshnessTimeInMinutes\":128065962},\"h\":{\"apiFreshnessTimeInMinutes\":2143816909},\"idgsybbe\":{\"apiFreshnessTimeInMinutes\":2050900245},\"hoycm\":{\"apiFreshnessTimeInMinutes\":318397575}}}")
            .toObject(ExtensionInstallationRequest.class);
        Assertions.assertEquals("mhquvgjxp", model.extensionVersion());
        Assertions.assertEquals(128065962, model.additionalApiProperties().get("ehmtzop").apiFreshnessTimeInMinutes());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExtensionInstallationRequest model = new ExtensionInstallationRequest().withExtensionVersion("mhquvgjxp")
            .withAdditionalApiProperties(mapOf("ehmtzop", new ApiProperties().withApiFreshnessTimeInMinutes(128065962),
                "h", new ApiProperties().withApiFreshnessTimeInMinutes(2143816909), "idgsybbe",
                new ApiProperties().withApiFreshnessTimeInMinutes(2050900245), "hoycm",
                new ApiProperties().withApiFreshnessTimeInMinutes(318397575)));
        model = BinaryData.fromObject(model).toObject(ExtensionInstallationRequest.class);
        Assertions.assertEquals("mhquvgjxp", model.extensionVersion());
        Assertions.assertEquals(128065962, model.additionalApiProperties().get("ehmtzop").apiFreshnessTimeInMinutes());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
