// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.agrifood.models.Insight;
import com.azure.resourcemanager.agrifood.models.Measure;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class InsightTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Insight model = BinaryData.fromString(
            "{\"farmerId\":\"rqf\",\"modelId\":\"wyznkbyku\",\"resourceType\":\"pfhpagmhrskdsnfd\",\"resourceId\":\"oakgtdlmkkzev\",\"modelVersion\":\"hewpusdsttwv\",\"insightStartDateTime\":\"2021-06-20T15:11:08Z\",\"insightEndDateTime\":\"2021-04-23T12:39:39Z\",\"measures\":{\"grtwae\":{\"unit\":\"cngqqmoakufgmjz\",\"value\":34.07437496986774},\"hhziuief\":{\"unit\":\"uzkopbminrfd\",\"value\":42.966341818508845}},\"id\":\"bhdmsmlmzqhof\",\"status\":\"maequiahxicslfa\",\"createdDateTime\":\"2021-11-28T10:16:40Z\",\"modifiedDateTime\":\"2021-01-04T13:19:25Z\",\"eTag\":\"ylhalnswhcc\",\"name\":\"hka\",\"description\":\"witqscywuggwoluh\",\"properties\":{\"ai\":\"datawem\",\"wmsweypqwd\":\"datasbrgz\",\"mkttlstvlzywem\":\"dataggicccnxqhue\"}}")
            .toObject(Insight.class);
        Assertions.assertEquals("rqf", model.farmerId());
        Assertions.assertEquals("wyznkbyku", model.modelId());
        Assertions.assertEquals("pfhpagmhrskdsnfd", model.resourceType());
        Assertions.assertEquals("oakgtdlmkkzev", model.resourceId());
        Assertions.assertEquals("hewpusdsttwv", model.modelVersion());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-20T15:11:08Z"), model.insightStartDateTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-23T12:39:39Z"), model.insightEndDateTime());
        Assertions.assertEquals("cngqqmoakufgmjz", model.measures().get("grtwae").unit());
        Assertions.assertEquals(34.07437496986774D, model.measures().get("grtwae").value());
        Assertions.assertEquals("bhdmsmlmzqhof", model.id());
        Assertions.assertEquals("maequiahxicslfa", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-28T10:16:40Z"), model.createdDateTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-04T13:19:25Z"), model.modifiedDateTime());
        Assertions.assertEquals("ylhalnswhcc", model.etag());
        Assertions.assertEquals("hka", model.name());
        Assertions.assertEquals("witqscywuggwoluh", model.description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Insight model = new Insight().withFarmerId("rqf")
            .withModelId("wyznkbyku")
            .withResourceType("pfhpagmhrskdsnfd")
            .withResourceId("oakgtdlmkkzev")
            .withModelVersion("hewpusdsttwv")
            .withInsightStartDateTime(OffsetDateTime.parse("2021-06-20T15:11:08Z"))
            .withInsightEndDateTime(OffsetDateTime.parse("2021-04-23T12:39:39Z"))
            .withMeasures(mapOf("grtwae", new Measure().withUnit("cngqqmoakufgmjz").withValue(34.07437496986774D),
                "hhziuief", new Measure().withUnit("uzkopbminrfd").withValue(42.966341818508845D)))
            .withId("bhdmsmlmzqhof")
            .withStatus("maequiahxicslfa")
            .withCreatedDateTime(OffsetDateTime.parse("2021-11-28T10:16:40Z"))
            .withModifiedDateTime(OffsetDateTime.parse("2021-01-04T13:19:25Z"))
            .withEtag("ylhalnswhcc")
            .withName("hka")
            .withDescription("witqscywuggwoluh")
            .withProperties(mapOf("ai", "datawem", "wmsweypqwd", "datasbrgz", "mkttlstvlzywem", "dataggicccnxqhue"));
        model = BinaryData.fromObject(model).toObject(Insight.class);
        Assertions.assertEquals("rqf", model.farmerId());
        Assertions.assertEquals("wyznkbyku", model.modelId());
        Assertions.assertEquals("pfhpagmhrskdsnfd", model.resourceType());
        Assertions.assertEquals("oakgtdlmkkzev", model.resourceId());
        Assertions.assertEquals("hewpusdsttwv", model.modelVersion());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-20T15:11:08Z"), model.insightStartDateTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-23T12:39:39Z"), model.insightEndDateTime());
        Assertions.assertEquals("cngqqmoakufgmjz", model.measures().get("grtwae").unit());
        Assertions.assertEquals(34.07437496986774D, model.measures().get("grtwae").value());
        Assertions.assertEquals("bhdmsmlmzqhof", model.id());
        Assertions.assertEquals("maequiahxicslfa", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-28T10:16:40Z"), model.createdDateTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-04T13:19:25Z"), model.modifiedDateTime());
        Assertions.assertEquals("ylhalnswhcc", model.etag());
        Assertions.assertEquals("hka", model.name());
        Assertions.assertEquals("witqscywuggwoluh", model.description());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
