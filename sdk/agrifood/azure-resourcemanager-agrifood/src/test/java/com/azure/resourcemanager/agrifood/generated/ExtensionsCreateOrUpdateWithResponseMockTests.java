// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.agrifood.AgriFoodManager;
import com.azure.resourcemanager.agrifood.models.ApiProperties;
import com.azure.resourcemanager.agrifood.models.Extension;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExtensionsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"extensionId\":\"kzwpcnpw\",\"extensionCategory\":\"jaesgvvsccya\",\"installedExtensionVersion\":\"uq\",\"extensionAuthLink\":\"wygzlvdnkfxusem\",\"extensionApiDocsLink\":\"zrmuhapfcqdps\",\"additionalApiProperties\":{\"svuo\":{\"apiFreshnessTimeInMinutes\":124988622},\"ccelve\":{\"apiFreshnessTimeInMinutes\":434335068},\"pqlmfe\":{\"apiFreshnessTimeInMinutes\":808786975}}},\"eTag\":\"erqwkyhkobopg\",\"id\":\"dkow\",\"name\":\"pbqpcrfkbwccsn\",\"type\":\"vcdwxlpqekftn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AgriFoodManager manager = AgriFoodManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Extension response = manager.extensions()
            .define("yqtfihwh")
            .withExistingFarmBeat("ukndxdigrjgu", "fzdm")
            .withExtensionVersion("tzingamvpph")
            .withAdditionalApiProperties(
                mapOf("udphqamvdkfwyn", new ApiProperties().withApiFreshnessTimeInMinutes(1174017685), "tbvkayhmtnvyq",
                    new ApiProperties().withApiFreshnessTimeInMinutes(1976240660)))
            .create();

    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
