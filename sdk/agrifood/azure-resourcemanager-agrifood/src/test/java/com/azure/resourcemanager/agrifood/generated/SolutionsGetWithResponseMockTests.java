// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.agrifood.AgriFoodManager;
import com.azure.resourcemanager.agrifood.models.Solution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SolutionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"solutionId\":\"bar\",\"partnerId\":\"uayjkqa\",\"saasSubscriptionId\":\"qgzsles\",\"saasSubscriptionName\":\"cbhernntiewdj\",\"marketplacePublisherId\":\"vbquwr\",\"planId\":\"ehwagoh\",\"offerId\":\"uffkmrqemvvh\",\"termId\":\"xtdr\",\"\":{\"ebjvewzcjzn\":\"datatac\",\"kahzo\":\"datawcpmguaadraufac\"}},\"eTag\":\"jjziuxxpsh\",\"id\":\"e\",\"name\":\"ulfgslqu\",\"type\":\"kwdlenrdsutujba\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AgriFoodManager manager = AgriFoodManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Solution response = manager.solutions()
            .getWithResponse("ookk", "fqjbvleo", "fmluiqtqzfavyvn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("qgzsles", response.properties().saasSubscriptionId());
        Assertions.assertEquals("cbhernntiewdj", response.properties().saasSubscriptionName());
        Assertions.assertEquals("vbquwr", response.properties().marketplacePublisherId());
        Assertions.assertEquals("ehwagoh", response.properties().planId());
        Assertions.assertEquals("uffkmrqemvvh", response.properties().offerId());
        Assertions.assertEquals("xtdr", response.properties().termId());
    }
}
