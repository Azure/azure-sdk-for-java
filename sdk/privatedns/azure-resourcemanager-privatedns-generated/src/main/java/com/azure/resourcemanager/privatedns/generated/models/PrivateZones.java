// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.privatedns.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of PrivateZones. */
public interface PrivateZones {
    /**
     * Deletes a Private DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be
     * undone. Private DNS zone cannot be deleted unless all virtual network links to it are removed.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param ifMatch The ETag of the Private DNS zone. Omit this value to always delete the current zone. Specify the
     *     last-seen ETag value to prevent accidentally deleting any concurrent changes.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String privateZoneName, String ifMatch);

    /**
     * Deletes a Private DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be
     * undone. Private DNS zone cannot be deleted unless all virtual network links to it are removed.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String privateZoneName);

    /**
     * Deletes a Private DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be
     * undone. Private DNS zone cannot be deleted unless all virtual network links to it are removed.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param ifMatch The ETag of the Private DNS zone. Omit this value to always delete the current zone. Specify the
     *     last-seen ETag value to prevent accidentally deleting any concurrent changes.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String privateZoneName, String ifMatch, Context context);

    /**
     * Gets a Private DNS zone. Retrieves the zone properties, but not the virtual networks links or the record sets
     * within the zone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Private DNS zone.
     */
    PrivateZone getByResourceGroup(String resourceGroupName, String privateZoneName);

    /**
     * Gets a Private DNS zone. Retrieves the zone properties, but not the virtual networks links or the record sets
     * within the zone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Private DNS zone.
     */
    Response<PrivateZone> getByResourceGroupWithResponse(
        String resourceGroupName, String privateZoneName, Context context);

    /**
     * Lists the Private DNS zones in all resource groups in a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response to a Private DNS zone list operation.
     */
    PagedIterable<PrivateZone> list();

    /**
     * Lists the Private DNS zones in all resource groups in a subscription.
     *
     * @param top The maximum number of Private DNS zones to return. If not specified, returns up to 100 zones.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response to a Private DNS zone list operation.
     */
    PagedIterable<PrivateZone> list(Integer top, Context context);

    /**
     * Lists the Private DNS zones within a resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response to a Private DNS zone list operation.
     */
    PagedIterable<PrivateZone> listByResourceGroup(String resourceGroupName);

    /**
     * Lists the Private DNS zones within a resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @param top The maximum number of record sets to return. If not specified, returns up to 100 record sets.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response to a Private DNS zone list operation.
     */
    PagedIterable<PrivateZone> listByResourceGroup(String resourceGroupName, Integer top, Context context);

    /**
     * Gets a Private DNS zone. Retrieves the zone properties, but not the virtual networks links or the record sets
     * within the zone.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Private DNS zone.
     */
    PrivateZone getById(String id);

    /**
     * Gets a Private DNS zone. Retrieves the zone properties, but not the virtual networks links or the record sets
     * within the zone.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Private DNS zone.
     */
    Response<PrivateZone> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a Private DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be
     * undone. Private DNS zone cannot be deleted unless all virtual network links to it are removed.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a Private DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be
     * undone. Private DNS zone cannot be deleted unless all virtual network links to it are removed.
     *
     * @param id the resource ID.
     * @param ifMatch The ETag of the Private DNS zone. Omit this value to always delete the current zone. Specify the
     *     last-seen ETag value to prevent accidentally deleting any concurrent changes.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, String ifMatch, Context context);

    /**
     * Begins definition for a new PrivateZone resource.
     *
     * @param name resource name.
     * @return the first stage of the new PrivateZone definition.
     */
    PrivateZone.DefinitionStages.Blank define(String name);
}
