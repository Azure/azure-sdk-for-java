// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.privatedns.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of VirtualNetworkLinks. */
public interface VirtualNetworkLinks {
    /**
     * Deletes a virtual network link to the specified Private DNS zone. WARNING: In case of a registration virtual
     * network, all auto-registered DNS records in the zone for the virtual network will also be deleted. This operation
     * cannot be undone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param virtualNetworkLinkName The name of the virtual network link.
     * @param ifMatch The ETag of the virtual network link to the Private DNS zone. Omit this value to always delete the
     *     current zone. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String privateZoneName, String virtualNetworkLinkName, String ifMatch);

    /**
     * Deletes a virtual network link to the specified Private DNS zone. WARNING: In case of a registration virtual
     * network, all auto-registered DNS records in the zone for the virtual network will also be deleted. This operation
     * cannot be undone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param virtualNetworkLinkName The name of the virtual network link.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String privateZoneName, String virtualNetworkLinkName);

    /**
     * Deletes a virtual network link to the specified Private DNS zone. WARNING: In case of a registration virtual
     * network, all auto-registered DNS records in the zone for the virtual network will also be deleted. This operation
     * cannot be undone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param virtualNetworkLinkName The name of the virtual network link.
     * @param ifMatch The ETag of the virtual network link to the Private DNS zone. Omit this value to always delete the
     *     current zone. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(
        String resourceGroupName,
        String privateZoneName,
        String virtualNetworkLinkName,
        String ifMatch,
        Context context);

    /**
     * Gets a virtual network link to the specified Private DNS zone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param virtualNetworkLinkName The name of the virtual network link.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a virtual network link to the specified Private DNS zone.
     */
    VirtualNetworkLink get(String resourceGroupName, String privateZoneName, String virtualNetworkLinkName);

    /**
     * Gets a virtual network link to the specified Private DNS zone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param virtualNetworkLinkName The name of the virtual network link.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a virtual network link to the specified Private DNS zone.
     */
    Response<VirtualNetworkLink> getWithResponse(
        String resourceGroupName, String privateZoneName, String virtualNetworkLinkName, Context context);

    /**
     * Lists the virtual network links to the specified Private DNS zone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response to a list virtual network link to Private DNS zone operation.
     */
    PagedIterable<VirtualNetworkLink> list(String resourceGroupName, String privateZoneName);

    /**
     * Lists the virtual network links to the specified Private DNS zone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param top The maximum number of virtual network links to return. If not specified, returns up to 100 virtual
     *     network links.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response to a list virtual network link to Private DNS zone operation.
     */
    PagedIterable<VirtualNetworkLink> list(
        String resourceGroupName, String privateZoneName, Integer top, Context context);

    /**
     * Gets a virtual network link to the specified Private DNS zone.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a virtual network link to the specified Private DNS zone.
     */
    VirtualNetworkLink getById(String id);

    /**
     * Gets a virtual network link to the specified Private DNS zone.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a virtual network link to the specified Private DNS zone.
     */
    Response<VirtualNetworkLink> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a virtual network link to the specified Private DNS zone. WARNING: In case of a registration virtual
     * network, all auto-registered DNS records in the zone for the virtual network will also be deleted. This operation
     * cannot be undone.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a virtual network link to the specified Private DNS zone. WARNING: In case of a registration virtual
     * network, all auto-registered DNS records in the zone for the virtual network will also be deleted. This operation
     * cannot be undone.
     *
     * @param id the resource ID.
     * @param ifMatch The ETag of the virtual network link to the Private DNS zone. Omit this value to always delete the
     *     current zone. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, String ifMatch, Context context);

    /**
     * Begins definition for a new VirtualNetworkLink resource.
     *
     * @param name resource name.
     * @return the first stage of the new VirtualNetworkLink definition.
     */
    VirtualNetworkLink.DefinitionStages.Blank define(String name);
}
