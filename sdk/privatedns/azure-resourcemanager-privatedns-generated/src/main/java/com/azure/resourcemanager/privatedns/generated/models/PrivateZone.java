// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.privatedns.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.privatedns.generated.fluent.models.PrivateZoneInner;
import java.util.Map;

/** An immutable client-side representation of PrivateZone. */
public interface PrivateZone {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the etag property: The ETag of the zone.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the maxNumberOfRecordSets property: The maximum number of record sets that can be created in this Private
     * DNS zone. This is a read-only property and any attempt to set this value will be ignored.
     *
     * @return the maxNumberOfRecordSets value.
     */
    Long maxNumberOfRecordSets();

    /**
     * Gets the numberOfRecordSets property: The current number of record sets in this Private DNS zone. This is a
     * read-only property and any attempt to set this value will be ignored.
     *
     * @return the numberOfRecordSets value.
     */
    Long numberOfRecordSets();

    /**
     * Gets the maxNumberOfVirtualNetworkLinks property: The maximum number of virtual networks that can be linked to
     * this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.
     *
     * @return the maxNumberOfVirtualNetworkLinks value.
     */
    Long maxNumberOfVirtualNetworkLinks();

    /**
     * Gets the numberOfVirtualNetworkLinks property: The current number of virtual networks that are linked to this
     * Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.
     *
     * @return the numberOfVirtualNetworkLinks value.
     */
    Long numberOfVirtualNetworkLinks();

    /**
     * Gets the maxNumberOfVirtualNetworkLinksWithRegistration property: The maximum number of virtual networks that can
     * be linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set
     * this value will be ignored.
     *
     * @return the maxNumberOfVirtualNetworkLinksWithRegistration value.
     */
    Long maxNumberOfVirtualNetworkLinksWithRegistration();

    /**
     * Gets the numberOfVirtualNetworkLinksWithRegistration property: The current number of virtual networks that are
     * linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set
     * this value will be ignored.
     *
     * @return the numberOfVirtualNetworkLinksWithRegistration value.
     */
    Long numberOfVirtualNetworkLinksWithRegistration();

    /**
     * Gets the provisioningState property: The provisioning state of the resource. This is a read-only property and any
     * attempt to set this value will be ignored.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.privatedns.generated.fluent.models.PrivateZoneInner object.
     *
     * @return the inner object.
     */
    PrivateZoneInner innerModel();

    /** The entirety of the PrivateZone definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The PrivateZone definition stages. */
    interface DefinitionStages {
        /** The first stage of the PrivateZone definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the PrivateZone definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the PrivateZone definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the PrivateZone definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithEtag,
                DefinitionStages.WithIfMatch,
                DefinitionStages.WithIfNoneMatch {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            PrivateZone create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            PrivateZone create(Context context);
        }
        /** The stage of the PrivateZone definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the PrivateZone definition allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: The ETag of the zone..
             *
             * @param etag The ETag of the zone.
             * @return the next definition stage.
             */
            WithCreate withEtag(String etag);
        }
        /** The stage of the PrivateZone definition allowing to specify ifMatch. */
        interface WithIfMatch {
            /**
             * Specifies the ifMatch property: The ETag of the Private DNS zone. Omit this value to always overwrite the
             * current zone. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent
             * changes..
             *
             * @param ifMatch The ETag of the Private DNS zone. Omit this value to always overwrite the current zone.
             *     Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.
             * @return the next definition stage.
             */
            WithCreate withIfMatch(String ifMatch);
        }
        /** The stage of the PrivateZone definition allowing to specify ifNoneMatch. */
        interface WithIfNoneMatch {
            /**
             * Specifies the ifNoneMatch property: Set to '*' to allow a new Private DNS zone to be created, but to
             * prevent updating an existing zone. Other values will be ignored..
             *
             * @param ifNoneMatch Set to '*' to allow a new Private DNS zone to be created, but to prevent updating an
             *     existing zone. Other values will be ignored.
             * @return the next definition stage.
             */
            WithCreate withIfNoneMatch(String ifNoneMatch);
        }
    }
    /**
     * Begins update for the PrivateZone resource.
     *
     * @return the stage of resource update.
     */
    PrivateZone.Update update();

    /** The template for PrivateZone update. */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithEtag, UpdateStages.WithIfMatch {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        PrivateZone apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        PrivateZone apply(Context context);
    }
    /** The PrivateZone update stages. */
    interface UpdateStages {
        /** The stage of the PrivateZone update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the PrivateZone update allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: The ETag of the zone..
             *
             * @param etag The ETag of the zone.
             * @return the next definition stage.
             */
            Update withEtag(String etag);
        }
        /** The stage of the PrivateZone update allowing to specify ifMatch. */
        interface WithIfMatch {
            /**
             * Specifies the ifMatch property: The ETag of the Private DNS zone. Omit this value to always overwrite the
             * current zone. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent
             * changes..
             *
             * @param ifMatch The ETag of the Private DNS zone. Omit this value to always overwrite the current zone.
             *     Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.
             * @return the next definition stage.
             */
            Update withIfMatch(String ifMatch);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    PrivateZone refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    PrivateZone refresh(Context context);
}
