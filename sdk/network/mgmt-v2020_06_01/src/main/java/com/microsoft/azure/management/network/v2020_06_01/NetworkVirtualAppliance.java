/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.network.v2020_06_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.network.v2020_06_01.implementation.NetworkManager;
import java.util.List;
import com.microsoft.azure.SubResource;
import com.microsoft.azure.management.network.v2020_06_01.implementation.NetworkVirtualApplianceInner;

/**
 * Type representing NetworkVirtualAppliance.
 */
public interface NetworkVirtualAppliance extends HasInner<NetworkVirtualApplianceInner>, Resource, GroupableResourceCore<NetworkManager, NetworkVirtualApplianceInner>, HasResourceGroup, Refreshable<NetworkVirtualAppliance>, Updatable<NetworkVirtualAppliance.Update>, HasManager<NetworkManager> {
    /**
     * @return the addressPrefix value.
     */
    String addressPrefix();

    /**
     * @return the bootStrapConfigurationBlobs value.
     */
    List<String> bootStrapConfigurationBlobs();

    /**
     * @return the cloudInitConfiguration value.
     */
    String cloudInitConfiguration();

    /**
     * @return the cloudInitConfigurationBlobs value.
     */
    List<String> cloudInitConfigurationBlobs();

    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * @return the inboundSecurityRules value.
     */
    List<SubResource> inboundSecurityRules();

    /**
     * @return the nvaSku value.
     */
    VirtualApplianceSkuProperties nvaSku();

    /**
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * @return the virtualApplianceAsn value.
     */
    Long virtualApplianceAsn();

    /**
     * @return the virtualApplianceNics value.
     */
    List<VirtualApplianceNicProperties> virtualApplianceNics();

    /**
     * @return the virtualApplianceSites value.
     */
    List<SubResource> virtualApplianceSites();

    /**
     * @return the virtualHub value.
     */
    SubResource virtualHub();

    /**
     * The entirety of the NetworkVirtualAppliance definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of NetworkVirtualAppliance definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a NetworkVirtualAppliance definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the NetworkVirtualAppliance definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the networkvirtualappliance definition allowing to specify BootStrapConfigurationBlobs.
         */
        interface WithBootStrapConfigurationBlobs {
            /**
             * Specifies bootStrapConfigurationBlobs.
             * @param bootStrapConfigurationBlobs BootStrapConfigurationBlobs storage URLs
             * @return the next definition stage
             */
            WithCreate withBootStrapConfigurationBlobs(List<String> bootStrapConfigurationBlobs);
        }

        /**
         * The stage of the networkvirtualappliance definition allowing to specify CloudInitConfiguration.
         */
        interface WithCloudInitConfiguration {
            /**
             * Specifies cloudInitConfiguration.
             * @param cloudInitConfiguration CloudInitConfiguration string in plain text
             * @return the next definition stage
             */
            WithCreate withCloudInitConfiguration(String cloudInitConfiguration);
        }

        /**
         * The stage of the networkvirtualappliance definition allowing to specify CloudInitConfigurationBlobs.
         */
        interface WithCloudInitConfigurationBlobs {
            /**
             * Specifies cloudInitConfigurationBlobs.
             * @param cloudInitConfigurationBlobs CloudInitConfigurationBlob storage URLs
             * @return the next definition stage
             */
            WithCreate withCloudInitConfigurationBlobs(List<String> cloudInitConfigurationBlobs);
        }

        /**
         * The stage of the networkvirtualappliance definition allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity The service principal that has read access to cloud-init and config blob
             * @return the next definition stage
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the networkvirtualappliance definition allowing to specify NvaSku.
         */
        interface WithNvaSku {
            /**
             * Specifies nvaSku.
             * @param nvaSku Network Virtual Appliance SKU
             * @return the next definition stage
             */
            WithCreate withNvaSku(VirtualApplianceSkuProperties nvaSku);
        }

        /**
         * The stage of the networkvirtualappliance definition allowing to specify VirtualApplianceAsn.
         */
        interface WithVirtualApplianceAsn {
            /**
             * Specifies virtualApplianceAsn.
             * @param virtualApplianceAsn VirtualAppliance ASN
             * @return the next definition stage
             */
            WithCreate withVirtualApplianceAsn(Long virtualApplianceAsn);
        }

        /**
         * The stage of the networkvirtualappliance definition allowing to specify VirtualHub.
         */
        interface WithVirtualHub {
            /**
             * Specifies virtualHub.
             * @param virtualHub The Virtual Hub where Network Virtual Appliance is being deployed
             * @return the next definition stage
             */
            WithCreate withVirtualHub(SubResource virtualHub);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<NetworkVirtualAppliance>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithBootStrapConfigurationBlobs, DefinitionStages.WithCloudInitConfiguration, DefinitionStages.WithCloudInitConfigurationBlobs, DefinitionStages.WithIdentity, DefinitionStages.WithNvaSku, DefinitionStages.WithVirtualApplianceAsn, DefinitionStages.WithVirtualHub {
        }
    }
    /**
     * The template for a NetworkVirtualAppliance update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<NetworkVirtualAppliance>, Resource.UpdateWithTags<Update>, UpdateStages.WithBootStrapConfigurationBlobs, UpdateStages.WithCloudInitConfiguration, UpdateStages.WithCloudInitConfigurationBlobs, UpdateStages.WithIdentity, UpdateStages.WithNvaSku, UpdateStages.WithVirtualApplianceAsn, UpdateStages.WithVirtualHub {
    }

    /**
     * Grouping of NetworkVirtualAppliance update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the networkvirtualappliance update allowing to specify BootStrapConfigurationBlobs.
         */
        interface WithBootStrapConfigurationBlobs {
            /**
             * Specifies bootStrapConfigurationBlobs.
             * @param bootStrapConfigurationBlobs BootStrapConfigurationBlobs storage URLs
             * @return the next update stage
             */
            Update withBootStrapConfigurationBlobs(List<String> bootStrapConfigurationBlobs);
        }

        /**
         * The stage of the networkvirtualappliance update allowing to specify CloudInitConfiguration.
         */
        interface WithCloudInitConfiguration {
            /**
             * Specifies cloudInitConfiguration.
             * @param cloudInitConfiguration CloudInitConfiguration string in plain text
             * @return the next update stage
             */
            Update withCloudInitConfiguration(String cloudInitConfiguration);
        }

        /**
         * The stage of the networkvirtualappliance update allowing to specify CloudInitConfigurationBlobs.
         */
        interface WithCloudInitConfigurationBlobs {
            /**
             * Specifies cloudInitConfigurationBlobs.
             * @param cloudInitConfigurationBlobs CloudInitConfigurationBlob storage URLs
             * @return the next update stage
             */
            Update withCloudInitConfigurationBlobs(List<String> cloudInitConfigurationBlobs);
        }

        /**
         * The stage of the networkvirtualappliance update allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity The service principal that has read access to cloud-init and config blob
             * @return the next update stage
             */
            Update withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the networkvirtualappliance update allowing to specify NvaSku.
         */
        interface WithNvaSku {
            /**
             * Specifies nvaSku.
             * @param nvaSku Network Virtual Appliance SKU
             * @return the next update stage
             */
            Update withNvaSku(VirtualApplianceSkuProperties nvaSku);
        }

        /**
         * The stage of the networkvirtualappliance update allowing to specify VirtualApplianceAsn.
         */
        interface WithVirtualApplianceAsn {
            /**
             * Specifies virtualApplianceAsn.
             * @param virtualApplianceAsn VirtualAppliance ASN
             * @return the next update stage
             */
            Update withVirtualApplianceAsn(Long virtualApplianceAsn);
        }

        /**
         * The stage of the networkvirtualappliance update allowing to specify VirtualHub.
         */
        interface WithVirtualHub {
            /**
             * Specifies virtualHub.
             * @param virtualHub The Virtual Hub where Network Virtual Appliance is being deployed
             * @return the next update stage
             */
            Update withVirtualHub(SubResource virtualHub);
        }

    }
}
