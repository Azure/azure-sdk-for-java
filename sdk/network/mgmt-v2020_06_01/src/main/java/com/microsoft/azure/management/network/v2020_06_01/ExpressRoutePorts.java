/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.network.v2020_06_01;

import com.microsoft.azure.arm.collection.SupportsCreating;
import com.microsoft.azure.arm.resources.collection.SupportsDeletingByResourceGroup;
import com.microsoft.azure.arm.resources.collection.SupportsBatchDeletion;
import com.microsoft.azure.arm.resources.collection.SupportsGettingByResourceGroup;
import rx.Observable;
import com.microsoft.azure.arm.resources.collection.SupportsListingByResourceGroup;
import com.microsoft.azure.arm.collection.SupportsListing;
import com.microsoft.azure.management.network.v2020_06_01.implementation.ExpressRoutePortsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing ExpressRoutePorts.
 */
public interface ExpressRoutePorts extends SupportsCreating<ExpressRoutePort.DefinitionStages.Blank>, SupportsDeletingByResourceGroup, SupportsBatchDeletion, SupportsGettingByResourceGroup<ExpressRoutePort>, SupportsListingByResourceGroup<ExpressRoutePort>, SupportsListing<ExpressRoutePort>, HasInner<ExpressRoutePortsInner> {
    /**
     * Generate a letter of authorization for the requested ExpressRoutePort resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param expressRoutePortName The name of ExpressRoutePort.
     * @param customerName The customer name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<GenerateExpressRoutePortsLOAResult> generateLOAAsync(String resourceGroupName, String expressRoutePortName, String customerName);

}
