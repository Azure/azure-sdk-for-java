/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.network.v2020_07_01.implementation;

import com.microsoft.azure.management.network.v2020_07_01.VirtualApplianceSite;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.network.v2020_07_01.Office365PolicyProperties;
import com.microsoft.azure.management.network.v2020_07_01.ProvisioningState;

class VirtualApplianceSiteImpl extends CreatableUpdatableImpl<VirtualApplianceSite, VirtualApplianceSiteInner, VirtualApplianceSiteImpl> implements VirtualApplianceSite, VirtualApplianceSite.Definition, VirtualApplianceSite.Update {
    private final NetworkManager manager;
    private String resourceGroupName;
    private String networkVirtualApplianceName;
    private String siteName;

    VirtualApplianceSiteImpl(String name, NetworkManager manager) {
        super(name, new VirtualApplianceSiteInner());
        this.manager = manager;
        // Set resource name
        this.siteName = name;
        //
    }

    VirtualApplianceSiteImpl(VirtualApplianceSiteInner inner, NetworkManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.siteName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.networkVirtualApplianceName = IdParsingUtils.getValueFromIdByName(inner.id(), "networkVirtualAppliances");
        this.siteName = IdParsingUtils.getValueFromIdByName(inner.id(), "virtualApplianceSites");
        //
    }

    @Override
    public NetworkManager manager() {
        return this.manager;
    }

    @Override
    public Observable<VirtualApplianceSite> createResourceAsync() {
        VirtualApplianceSitesInner client = this.manager().inner().virtualApplianceSites();
        return client.createOrUpdateAsync(this.resourceGroupName, this.networkVirtualApplianceName, this.siteName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<VirtualApplianceSite> updateResourceAsync() {
        VirtualApplianceSitesInner client = this.manager().inner().virtualApplianceSites();
        return client.createOrUpdateAsync(this.resourceGroupName, this.networkVirtualApplianceName, this.siteName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<VirtualApplianceSiteInner> getInnerAsync() {
        VirtualApplianceSitesInner client = this.manager().inner().virtualApplianceSites();
        return client.getAsync(this.resourceGroupName, this.networkVirtualApplianceName, this.siteName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String addressPrefix() {
        return this.inner().addressPrefix();
    }

    @Override
    public String etag() {
        return this.inner().etag();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Office365PolicyProperties o365Policy() {
        return this.inner().o365Policy();
    }

    @Override
    public ProvisioningState provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public VirtualApplianceSiteImpl withExistingNetworkVirtualAppliance(String resourceGroupName, String networkVirtualApplianceName) {
        this.resourceGroupName = resourceGroupName;
        this.networkVirtualApplianceName = networkVirtualApplianceName;
        return this;
    }

    @Override
    public VirtualApplianceSiteImpl withAddressPrefix(String addressPrefix) {
        this.inner().withAddressPrefix(addressPrefix);
        return this;
    }

    @Override
    public VirtualApplianceSiteImpl withId(String id) {
        this.inner().withId(id);
        return this;
    }

    @Override
    public VirtualApplianceSiteImpl withName(String name) {
        this.inner().withName(name);
        return this;
    }

    @Override
    public VirtualApplianceSiteImpl withO365Policy(Office365PolicyProperties o365Policy) {
        this.inner().withO365Policy(o365Policy);
        return this;
    }

}
