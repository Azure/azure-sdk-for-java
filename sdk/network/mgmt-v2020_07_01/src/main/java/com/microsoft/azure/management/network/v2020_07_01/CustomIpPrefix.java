/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.network.v2020_07_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.network.v2020_07_01.implementation.NetworkManager;
import java.util.List;
import com.microsoft.azure.SubResource;
import com.microsoft.azure.management.network.v2020_07_01.implementation.CustomIpPrefixInner;

/**
 * Type representing CustomIpPrefix.
 */
public interface CustomIpPrefix extends HasInner<CustomIpPrefixInner>, Resource, GroupableResourceCore<NetworkManager, CustomIpPrefixInner>, HasResourceGroup, Refreshable<CustomIpPrefix>, Updatable<CustomIpPrefix.Update>, HasManager<NetworkManager> {
    /**
     * @return the cidr value.
     */
    String cidr();

    /**
     * @return the commissionedState value.
     */
    CommissionedState commissionedState();

    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * @return the publicIpPrefixes value.
     */
    List<SubResource> publicIpPrefixes();

    /**
     * @return the resourceGuid value.
     */
    String resourceGuid();

    /**
     * @return the zones value.
     */
    List<String> zones();

    /**
     * The entirety of the CustomIpPrefix definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of CustomIpPrefix definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a CustomIpPrefix definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the CustomIpPrefix definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the customipprefix definition allowing to specify Cidr.
         */
        interface WithCidr {
            /**
             * Specifies cidr.
             * @param cidr The prefix range in CIDR notation. Should include the start address and the prefix length
             * @return the next definition stage
             */
            WithCreate withCidr(String cidr);
        }

        /**
         * The stage of the customipprefix definition allowing to specify CommissionedState.
         */
        interface WithCommissionedState {
            /**
             * Specifies commissionedState.
             * @param commissionedState The commissioned state of the Custom IP Prefix. Possible values include: 'Provisioning', 'Provisioned', 'Commissioning', 'Commissioned', 'Decommissioning', 'Deprovisioning'
             * @return the next definition stage
             */
            WithCreate withCommissionedState(CommissionedState commissionedState);
        }

        /**
         * The stage of the customipprefix definition allowing to specify Zones.
         */
        interface WithZones {
            /**
             * Specifies zones.
             * @param zones A list of availability zones denoting the IP allocated for the resource needs to come from
             * @return the next definition stage
             */
            WithCreate withZones(List<String> zones);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<CustomIpPrefix>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithCidr, DefinitionStages.WithCommissionedState, DefinitionStages.WithZones {
        }
    }
    /**
     * The template for a CustomIpPrefix update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<CustomIpPrefix>, Resource.UpdateWithTags<Update>, UpdateStages.WithCidr, UpdateStages.WithCommissionedState, UpdateStages.WithZones {
    }

    /**
     * Grouping of CustomIpPrefix update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the customipprefix update allowing to specify Cidr.
         */
        interface WithCidr {
            /**
             * Specifies cidr.
             * @param cidr The prefix range in CIDR notation. Should include the start address and the prefix length
             * @return the next update stage
             */
            Update withCidr(String cidr);
        }

        /**
         * The stage of the customipprefix update allowing to specify CommissionedState.
         */
        interface WithCommissionedState {
            /**
             * Specifies commissionedState.
             * @param commissionedState The commissioned state of the Custom IP Prefix. Possible values include: 'Provisioning', 'Provisioned', 'Commissioning', 'Commissioned', 'Decommissioning', 'Deprovisioning'
             * @return the next update stage
             */
            Update withCommissionedState(CommissionedState commissionedState);
        }

        /**
         * The stage of the customipprefix update allowing to specify Zones.
         */
        interface WithZones {
            /**
             * Specifies zones.
             * @param zones A list of availability zones denoting the IP allocated for the resource needs to come from
             * @return the next update stage
             */
            Update withZones(List<String> zones);
        }

    }
}
