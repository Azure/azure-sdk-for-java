/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.network.v2020_05_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.network.v2020_05_01.implementation.HubVirtualNetworkConnectionInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.network.v2020_05_01.implementation.NetworkManager;
import com.microsoft.azure.SubResource;

/**
 * Type representing HubVirtualNetworkConnection.
 */
public interface HubVirtualNetworkConnection extends HasInner<HubVirtualNetworkConnectionInner>, Indexable, Refreshable<HubVirtualNetworkConnection>, Updatable<HubVirtualNetworkConnection.Update>, HasManager<NetworkManager> {
    /**
     * @return the allowHubToRemoteVnetTransit value.
     */
    Boolean allowHubToRemoteVnetTransit();

    /**
     * @return the allowRemoteVnetToUseHubVnetGateways value.
     */
    Boolean allowRemoteVnetToUseHubVnetGateways();

    /**
     * @return the enableInternetSecurity value.
     */
    Boolean enableInternetSecurity();

    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * @return the remoteVirtualNetwork value.
     */
    SubResource remoteVirtualNetwork();

    /**
     * @return the routingConfiguration value.
     */
    RoutingConfiguration routingConfiguration();

    /**
     * The entirety of the HubVirtualNetworkConnection definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithVirtualHub, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of HubVirtualNetworkConnection definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a HubVirtualNetworkConnection definition.
         */
        interface Blank extends WithVirtualHub {
        }

        /**
         * The stage of the hubvirtualnetworkconnection definition allowing to specify VirtualHub.
         */
        interface WithVirtualHub {
           /**
            * Specifies resourceGroupName, virtualHubName.
            * @param resourceGroupName The resource group name of the HubVirtualNetworkConnection
            * @param virtualHubName The name of the VirtualHub
            * @return the next definition stage
            */
            WithCreate withExistingVirtualHub(String resourceGroupName, String virtualHubName);
        }

        /**
         * The stage of the hubvirtualnetworkconnection definition allowing to specify AllowHubToRemoteVnetTransit.
         */
        interface WithAllowHubToRemoteVnetTransit {
            /**
             * Specifies allowHubToRemoteVnetTransit.
             * @param allowHubToRemoteVnetTransit Deprecated: VirtualHub to RemoteVnet transit to enabled or not
             * @return the next definition stage
             */
            WithCreate withAllowHubToRemoteVnetTransit(Boolean allowHubToRemoteVnetTransit);
        }

        /**
         * The stage of the hubvirtualnetworkconnection definition allowing to specify AllowRemoteVnetToUseHubVnetGateways.
         */
        interface WithAllowRemoteVnetToUseHubVnetGateways {
            /**
             * Specifies allowRemoteVnetToUseHubVnetGateways.
             * @param allowRemoteVnetToUseHubVnetGateways Deprecated: Allow RemoteVnet to use Virtual Hub's gateways
             * @return the next definition stage
             */
            WithCreate withAllowRemoteVnetToUseHubVnetGateways(Boolean allowRemoteVnetToUseHubVnetGateways);
        }

        /**
         * The stage of the hubvirtualnetworkconnection definition allowing to specify EnableInternetSecurity.
         */
        interface WithEnableInternetSecurity {
            /**
             * Specifies enableInternetSecurity.
             * @param enableInternetSecurity Enable internet security
             * @return the next definition stage
             */
            WithCreate withEnableInternetSecurity(Boolean enableInternetSecurity);
        }

        /**
         * The stage of the hubvirtualnetworkconnection definition allowing to specify Id.
         */
        interface WithId {
            /**
             * Specifies id.
             * @param id Resource ID
             * @return the next definition stage
             */
            WithCreate withId(String id);
        }

        /**
         * The stage of the hubvirtualnetworkconnection definition allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             * @param name The name of the resource that is unique within a resource group. This name can be used to access the resource
             * @return the next definition stage
             */
            WithCreate withName(String name);
        }

        /**
         * The stage of the hubvirtualnetworkconnection definition allowing to specify RemoteVirtualNetwork.
         */
        interface WithRemoteVirtualNetwork {
            /**
             * Specifies remoteVirtualNetwork.
             * @param remoteVirtualNetwork Reference to the remote virtual network
             * @return the next definition stage
             */
            WithCreate withRemoteVirtualNetwork(SubResource remoteVirtualNetwork);
        }

        /**
         * The stage of the hubvirtualnetworkconnection definition allowing to specify RoutingConfiguration.
         */
        interface WithRoutingConfiguration {
            /**
             * Specifies routingConfiguration.
             * @param routingConfiguration The Routing Configuration indicating the associated and propagated route tables on this connection
             * @return the next definition stage
             */
            WithCreate withRoutingConfiguration(RoutingConfiguration routingConfiguration);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<HubVirtualNetworkConnection>, DefinitionStages.WithAllowHubToRemoteVnetTransit, DefinitionStages.WithAllowRemoteVnetToUseHubVnetGateways, DefinitionStages.WithEnableInternetSecurity, DefinitionStages.WithId, DefinitionStages.WithName, DefinitionStages.WithRemoteVirtualNetwork, DefinitionStages.WithRoutingConfiguration {
        }
    }
    /**
     * The template for a HubVirtualNetworkConnection update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<HubVirtualNetworkConnection>, UpdateStages.WithAllowHubToRemoteVnetTransit, UpdateStages.WithAllowRemoteVnetToUseHubVnetGateways, UpdateStages.WithEnableInternetSecurity, UpdateStages.WithId, UpdateStages.WithName, UpdateStages.WithRemoteVirtualNetwork, UpdateStages.WithRoutingConfiguration {
    }

    /**
     * Grouping of HubVirtualNetworkConnection update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the hubvirtualnetworkconnection update allowing to specify AllowHubToRemoteVnetTransit.
         */
        interface WithAllowHubToRemoteVnetTransit {
            /**
             * Specifies allowHubToRemoteVnetTransit.
             * @param allowHubToRemoteVnetTransit Deprecated: VirtualHub to RemoteVnet transit to enabled or not
             * @return the next update stage
             */
            Update withAllowHubToRemoteVnetTransit(Boolean allowHubToRemoteVnetTransit);
        }

        /**
         * The stage of the hubvirtualnetworkconnection update allowing to specify AllowRemoteVnetToUseHubVnetGateways.
         */
        interface WithAllowRemoteVnetToUseHubVnetGateways {
            /**
             * Specifies allowRemoteVnetToUseHubVnetGateways.
             * @param allowRemoteVnetToUseHubVnetGateways Deprecated: Allow RemoteVnet to use Virtual Hub's gateways
             * @return the next update stage
             */
            Update withAllowRemoteVnetToUseHubVnetGateways(Boolean allowRemoteVnetToUseHubVnetGateways);
        }

        /**
         * The stage of the hubvirtualnetworkconnection update allowing to specify EnableInternetSecurity.
         */
        interface WithEnableInternetSecurity {
            /**
             * Specifies enableInternetSecurity.
             * @param enableInternetSecurity Enable internet security
             * @return the next update stage
             */
            Update withEnableInternetSecurity(Boolean enableInternetSecurity);
        }

        /**
         * The stage of the hubvirtualnetworkconnection update allowing to specify Id.
         */
        interface WithId {
            /**
             * Specifies id.
             * @param id Resource ID
             * @return the next update stage
             */
            Update withId(String id);
        }

        /**
         * The stage of the hubvirtualnetworkconnection update allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             * @param name The name of the resource that is unique within a resource group. This name can be used to access the resource
             * @return the next update stage
             */
            Update withName(String name);
        }

        /**
         * The stage of the hubvirtualnetworkconnection update allowing to specify RemoteVirtualNetwork.
         */
        interface WithRemoteVirtualNetwork {
            /**
             * Specifies remoteVirtualNetwork.
             * @param remoteVirtualNetwork Reference to the remote virtual network
             * @return the next update stage
             */
            Update withRemoteVirtualNetwork(SubResource remoteVirtualNetwork);
        }

        /**
         * The stage of the hubvirtualnetworkconnection update allowing to specify RoutingConfiguration.
         */
        interface WithRoutingConfiguration {
            /**
             * Specifies routingConfiguration.
             * @param routingConfiguration The Routing Configuration indicating the associated and propagated route tables on this connection
             * @return the next update stage
             */
            Update withRoutingConfiguration(RoutingConfiguration routingConfiguration);
        }

    }
}
