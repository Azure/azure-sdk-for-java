/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.network.v2020_05_01;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.network.v2020_05_01.implementation.VirtualHubIpConfigurationsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing VirtualHubIpConfigurations.
 */
public interface VirtualHubIpConfigurations extends SupportsCreating<HubIpConfiguration.DefinitionStages.Blank>, HasInner<VirtualHubIpConfigurationsInner> {
    /**
     * Retrieves the details of a Virtual Hub Ip configuration.
     *
     * @param resourceGroupName The resource group name of the VirtualHub.
     * @param virtualHubName The name of the VirtualHub.
     * @param ipConfigName The name of the ipconfig.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<HubIpConfiguration> getAsync(String resourceGroupName, String virtualHubName, String ipConfigName);

    /**
     * Retrieves the details of all VirtualHubIpConfigurations.
     *
     * @param resourceGroupName The resource group name of the VirtualHub.
     * @param virtualHubName The name of the VirtualHub.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<HubIpConfiguration> listAsync(final String resourceGroupName, final String virtualHubName);

    /**
     * Deletes a VirtualHubIpConfiguration.
     *
     * @param resourceGroupName The resource group name of the VirtualHubBgpConnection.
     * @param virtualHubName The name of the VirtualHub.
     * @param ipConfigName The name of the ipconfig.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String virtualHubName, String ipConfigName);

}
