/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.network.v2018_11_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.network.v2018_11_01.implementation.P2SVpnServerConfigurationInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.network.v2018_11_01.implementation.NetworkManager;
import java.util.List;
import com.microsoft.azure.SubResource;

/**
 * Type representing P2SVpnServerConfiguration.
 */
public interface P2SVpnServerConfiguration extends HasInner<P2SVpnServerConfigurationInner>, Indexable, Refreshable<P2SVpnServerConfiguration>, Updatable<P2SVpnServerConfiguration.Update>, HasManager<NetworkManager> {
    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the p2SVpnGateways value.
     */
    List<SubResource> p2SVpnGateways();

    /**
     * @return the p2SVpnServerConfigRadiusClientRootCertificates value.
     */
    List<P2SVpnServerConfigRadiusClientRootCertificate> p2SVpnServerConfigRadiusClientRootCertificates();

    /**
     * @return the p2SVpnServerConfigRadiusServerRootCertificates value.
     */
    List<P2SVpnServerConfigRadiusServerRootCertificate> p2SVpnServerConfigRadiusServerRootCertificates();

    /**
     * @return the p2SVpnServerConfigurationPropertiesEtag value.
     */
    String p2SVpnServerConfigurationPropertiesEtag();

    /**
     * @return the p2SVpnServerConfigurationPropertiesName value.
     */
    String p2SVpnServerConfigurationPropertiesName();

    /**
     * @return the p2SVpnServerConfigVpnClientRevokedCertificates value.
     */
    List<P2SVpnServerConfigVpnClientRevokedCertificate> p2SVpnServerConfigVpnClientRevokedCertificates();

    /**
     * @return the p2SVpnServerConfigVpnClientRootCertificates value.
     */
    List<P2SVpnServerConfigVpnClientRootCertificate> p2SVpnServerConfigVpnClientRootCertificates();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the radiusServerAddress value.
     */
    String radiusServerAddress();

    /**
     * @return the radiusServerSecret value.
     */
    String radiusServerSecret();

    /**
     * @return the vpnClientIpsecPolicies value.
     */
    List<IpsecPolicy> vpnClientIpsecPolicies();

    /**
     * @return the vpnProtocols value.
     */
    List<VpnGatewayTunnelingProtocol> vpnProtocols();

    /**
     * The entirety of the P2SVpnServerConfiguration definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithVirtualWan, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of P2SVpnServerConfiguration definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a P2SVpnServerConfiguration definition.
         */
        interface Blank extends WithVirtualWan {
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify VirtualWan.
         */
        interface WithVirtualWan {
           /**
            * Specifies resourceGroupName, virtualWanName.
            * @param resourceGroupName The resource group name of the VirtualWan
            * @param virtualWanName The name of the VirtualWan
            * @return the next definition stage
            */
            WithCreate withExistingVirtualWan(String resourceGroupName, String virtualWanName);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify Id.
         */
        interface WithId {
            /**
             * Specifies id.
             * @param id Resource ID
             * @return the next definition stage
             */
            WithCreate withId(String id);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             * @param name The name of the resource that is unique within a resource group. This name can be used to access the resource
             * @return the next definition stage
             */
            WithCreate withName(String name);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify P2SVpnServerConfigRadiusClientRootCertificates.
         */
        interface WithP2SVpnServerConfigRadiusClientRootCertificates {
            /**
             * Specifies p2SVpnServerConfigRadiusClientRootCertificates.
             * @param p2SVpnServerConfigRadiusClientRootCertificates Radius client root certificate of P2SVpnServerConfiguration
             * @return the next definition stage
             */
            WithCreate withP2SVpnServerConfigRadiusClientRootCertificates(List<P2SVpnServerConfigRadiusClientRootCertificate> p2SVpnServerConfigRadiusClientRootCertificates);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify P2SVpnServerConfigRadiusServerRootCertificates.
         */
        interface WithP2SVpnServerConfigRadiusServerRootCertificates {
            /**
             * Specifies p2SVpnServerConfigRadiusServerRootCertificates.
             * @param p2SVpnServerConfigRadiusServerRootCertificates Radius Server root certificate of P2SVpnServerConfiguration
             * @return the next definition stage
             */
            WithCreate withP2SVpnServerConfigRadiusServerRootCertificates(List<P2SVpnServerConfigRadiusServerRootCertificate> p2SVpnServerConfigRadiusServerRootCertificates);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify P2SVpnServerConfigurationPropertiesEtag.
         */
        interface WithP2SVpnServerConfigurationPropertiesEtag {
            /**
             * Specifies p2SVpnServerConfigurationPropertiesEtag.
             * @param p2SVpnServerConfigurationPropertiesEtag A unique read-only string that changes whenever the resource is updated
             * @return the next definition stage
             */
            WithCreate withP2SVpnServerConfigurationPropertiesEtag(String p2SVpnServerConfigurationPropertiesEtag);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify P2SVpnServerConfigurationPropertiesName.
         */
        interface WithP2SVpnServerConfigurationPropertiesName {
            /**
             * Specifies p2SVpnServerConfigurationPropertiesName.
             * @param p2SVpnServerConfigurationPropertiesName The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name
             * @return the next definition stage
             */
            WithCreate withP2SVpnServerConfigurationPropertiesName(String p2SVpnServerConfigurationPropertiesName);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify P2SVpnServerConfigVpnClientRevokedCertificates.
         */
        interface WithP2SVpnServerConfigVpnClientRevokedCertificates {
            /**
             * Specifies p2SVpnServerConfigVpnClientRevokedCertificates.
             * @param p2SVpnServerConfigVpnClientRevokedCertificates VPN client revoked certificate of P2SVpnServerConfiguration
             * @return the next definition stage
             */
            WithCreate withP2SVpnServerConfigVpnClientRevokedCertificates(List<P2SVpnServerConfigVpnClientRevokedCertificate> p2SVpnServerConfigVpnClientRevokedCertificates);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify P2SVpnServerConfigVpnClientRootCertificates.
         */
        interface WithP2SVpnServerConfigVpnClientRootCertificates {
            /**
             * Specifies p2SVpnServerConfigVpnClientRootCertificates.
             * @param p2SVpnServerConfigVpnClientRootCertificates VPN client root certificate of P2SVpnServerConfiguration
             * @return the next definition stage
             */
            WithCreate withP2SVpnServerConfigVpnClientRootCertificates(List<P2SVpnServerConfigVpnClientRootCertificate> p2SVpnServerConfigVpnClientRootCertificates);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify RadiusServerAddress.
         */
        interface WithRadiusServerAddress {
            /**
             * Specifies radiusServerAddress.
             * @param radiusServerAddress The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection
             * @return the next definition stage
             */
            WithCreate withRadiusServerAddress(String radiusServerAddress);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify RadiusServerSecret.
         */
        interface WithRadiusServerSecret {
            /**
             * Specifies radiusServerSecret.
             * @param radiusServerSecret The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection
             * @return the next definition stage
             */
            WithCreate withRadiusServerSecret(String radiusServerSecret);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify VpnClientIpsecPolicies.
         */
        interface WithVpnClientIpsecPolicies {
            /**
             * Specifies vpnClientIpsecPolicies.
             * @param vpnClientIpsecPolicies VpnClientIpsecPolicies for P2SVpnServerConfiguration
             * @return the next definition stage
             */
            WithCreate withVpnClientIpsecPolicies(List<IpsecPolicy> vpnClientIpsecPolicies);
        }

        /**
         * The stage of the p2svpnserverconfiguration definition allowing to specify VpnProtocols.
         */
        interface WithVpnProtocols {
            /**
             * Specifies vpnProtocols.
             * @param vpnProtocols vpnProtocols for the P2SVpnServerConfiguration
             * @return the next definition stage
             */
            WithCreate withVpnProtocols(List<VpnGatewayTunnelingProtocol> vpnProtocols);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<P2SVpnServerConfiguration>, DefinitionStages.WithId, DefinitionStages.WithName, DefinitionStages.WithP2SVpnServerConfigRadiusClientRootCertificates, DefinitionStages.WithP2SVpnServerConfigRadiusServerRootCertificates, DefinitionStages.WithP2SVpnServerConfigurationPropertiesEtag, DefinitionStages.WithP2SVpnServerConfigurationPropertiesName, DefinitionStages.WithP2SVpnServerConfigVpnClientRevokedCertificates, DefinitionStages.WithP2SVpnServerConfigVpnClientRootCertificates, DefinitionStages.WithRadiusServerAddress, DefinitionStages.WithRadiusServerSecret, DefinitionStages.WithVpnClientIpsecPolicies, DefinitionStages.WithVpnProtocols {
        }
    }
    /**
     * The template for a P2SVpnServerConfiguration update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<P2SVpnServerConfiguration>, UpdateStages.WithId, UpdateStages.WithName, UpdateStages.WithP2SVpnServerConfigRadiusClientRootCertificates, UpdateStages.WithP2SVpnServerConfigRadiusServerRootCertificates, UpdateStages.WithP2SVpnServerConfigurationPropertiesEtag, UpdateStages.WithP2SVpnServerConfigurationPropertiesName, UpdateStages.WithP2SVpnServerConfigVpnClientRevokedCertificates, UpdateStages.WithP2SVpnServerConfigVpnClientRootCertificates, UpdateStages.WithRadiusServerAddress, UpdateStages.WithRadiusServerSecret, UpdateStages.WithVpnClientIpsecPolicies, UpdateStages.WithVpnProtocols {
    }

    /**
     * Grouping of P2SVpnServerConfiguration update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify Id.
         */
        interface WithId {
            /**
             * Specifies id.
             * @param id Resource ID
             * @return the next update stage
             */
            Update withId(String id);
        }

        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             * @param name The name of the resource that is unique within a resource group. This name can be used to access the resource
             * @return the next update stage
             */
            Update withName(String name);
        }

        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify P2SVpnServerConfigRadiusClientRootCertificates.
         */
        interface WithP2SVpnServerConfigRadiusClientRootCertificates {
            /**
             * Specifies p2SVpnServerConfigRadiusClientRootCertificates.
             * @param p2SVpnServerConfigRadiusClientRootCertificates Radius client root certificate of P2SVpnServerConfiguration
             * @return the next update stage
             */
            Update withP2SVpnServerConfigRadiusClientRootCertificates(List<P2SVpnServerConfigRadiusClientRootCertificate> p2SVpnServerConfigRadiusClientRootCertificates);
        }

        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify P2SVpnServerConfigRadiusServerRootCertificates.
         */
        interface WithP2SVpnServerConfigRadiusServerRootCertificates {
            /**
             * Specifies p2SVpnServerConfigRadiusServerRootCertificates.
             * @param p2SVpnServerConfigRadiusServerRootCertificates Radius Server root certificate of P2SVpnServerConfiguration
             * @return the next update stage
             */
            Update withP2SVpnServerConfigRadiusServerRootCertificates(List<P2SVpnServerConfigRadiusServerRootCertificate> p2SVpnServerConfigRadiusServerRootCertificates);
        }

        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify P2SVpnServerConfigurationPropertiesEtag.
         */
        interface WithP2SVpnServerConfigurationPropertiesEtag {
            /**
             * Specifies p2SVpnServerConfigurationPropertiesEtag.
             * @param p2SVpnServerConfigurationPropertiesEtag A unique read-only string that changes whenever the resource is updated
             * @return the next update stage
             */
            Update withP2SVpnServerConfigurationPropertiesEtag(String p2SVpnServerConfigurationPropertiesEtag);
        }

        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify P2SVpnServerConfigurationPropertiesName.
         */
        interface WithP2SVpnServerConfigurationPropertiesName {
            /**
             * Specifies p2SVpnServerConfigurationPropertiesName.
             * @param p2SVpnServerConfigurationPropertiesName The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name
             * @return the next update stage
             */
            Update withP2SVpnServerConfigurationPropertiesName(String p2SVpnServerConfigurationPropertiesName);
        }

        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify P2SVpnServerConfigVpnClientRevokedCertificates.
         */
        interface WithP2SVpnServerConfigVpnClientRevokedCertificates {
            /**
             * Specifies p2SVpnServerConfigVpnClientRevokedCertificates.
             * @param p2SVpnServerConfigVpnClientRevokedCertificates VPN client revoked certificate of P2SVpnServerConfiguration
             * @return the next update stage
             */
            Update withP2SVpnServerConfigVpnClientRevokedCertificates(List<P2SVpnServerConfigVpnClientRevokedCertificate> p2SVpnServerConfigVpnClientRevokedCertificates);
        }

        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify P2SVpnServerConfigVpnClientRootCertificates.
         */
        interface WithP2SVpnServerConfigVpnClientRootCertificates {
            /**
             * Specifies p2SVpnServerConfigVpnClientRootCertificates.
             * @param p2SVpnServerConfigVpnClientRootCertificates VPN client root certificate of P2SVpnServerConfiguration
             * @return the next update stage
             */
            Update withP2SVpnServerConfigVpnClientRootCertificates(List<P2SVpnServerConfigVpnClientRootCertificate> p2SVpnServerConfigVpnClientRootCertificates);
        }

        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify RadiusServerAddress.
         */
        interface WithRadiusServerAddress {
            /**
             * Specifies radiusServerAddress.
             * @param radiusServerAddress The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection
             * @return the next update stage
             */
            Update withRadiusServerAddress(String radiusServerAddress);
        }

        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify RadiusServerSecret.
         */
        interface WithRadiusServerSecret {
            /**
             * Specifies radiusServerSecret.
             * @param radiusServerSecret The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection
             * @return the next update stage
             */
            Update withRadiusServerSecret(String radiusServerSecret);
        }

        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify VpnClientIpsecPolicies.
         */
        interface WithVpnClientIpsecPolicies {
            /**
             * Specifies vpnClientIpsecPolicies.
             * @param vpnClientIpsecPolicies VpnClientIpsecPolicies for P2SVpnServerConfiguration
             * @return the next update stage
             */
            Update withVpnClientIpsecPolicies(List<IpsecPolicy> vpnClientIpsecPolicies);
        }

        /**
         * The stage of the p2svpnserverconfiguration update allowing to specify VpnProtocols.
         */
        interface WithVpnProtocols {
            /**
             * Specifies vpnProtocols.
             * @param vpnProtocols vpnProtocols for the P2SVpnServerConfiguration
             * @return the next update stage
             */
            Update withVpnProtocols(List<VpnGatewayTunnelingProtocol> vpnProtocols);
        }

    }
}
