/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.network.v2020_03_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.network.v2020_03_01.VpnServerConfigurationsAssociatedWithVirtualWans;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.network.v2020_03_01.VpnServerConfigurationsResponse;

class VpnServerConfigurationsAssociatedWithVirtualWansImpl extends WrapperImpl<VpnServerConfigurationsAssociatedWithVirtualWansInner> implements VpnServerConfigurationsAssociatedWithVirtualWans {
    private final NetworkManager manager;

    VpnServerConfigurationsAssociatedWithVirtualWansImpl(NetworkManager manager) {
        super(manager.inner().vpnServerConfigurationsAssociatedWithVirtualWans());
        this.manager = manager;
    }

    public NetworkManager manager() {
        return this.manager;
    }

    @Override
    public Observable<VpnServerConfigurationsResponse> listAsync(String resourceGroupName, String virtualWANName) {
        VpnServerConfigurationsAssociatedWithVirtualWansInner client = this.inner();
        return client.listAsync(resourceGroupName, virtualWANName)
        .map(new Func1<VpnServerConfigurationsResponseInner, VpnServerConfigurationsResponse>() {
            @Override
            public VpnServerConfigurationsResponse call(VpnServerConfigurationsResponseInner inner) {
                return new VpnServerConfigurationsResponseImpl(inner, manager());
            }
        });
    }

}
