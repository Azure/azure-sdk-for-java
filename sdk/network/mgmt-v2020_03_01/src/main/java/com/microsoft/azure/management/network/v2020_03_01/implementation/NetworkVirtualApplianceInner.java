/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.network.v2020_03_01.implementation;

import java.util.List;
import com.microsoft.azure.SubResource;
import com.microsoft.azure.management.network.v2020_03_01.VirtualApplianceNicProperties;
import com.microsoft.azure.management.network.v2020_03_01.ProvisioningState;
import com.microsoft.azure.management.network.v2020_03_01.ManagedServiceIdentity;
import com.microsoft.azure.management.network.v2020_03_01.VirtualApplianceSkuProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.rest.SkipParentValidation;
import com.microsoft.azure.Resource;

/**
 * NetworkVirtualAppliance Resource.
 */
@JsonFlatten
@SkipParentValidation
public class NetworkVirtualApplianceInner extends Resource {
    /**
     * BootStrapConfigurationBlob storage URLs.
     */
    @JsonProperty(value = "properties.bootStrapConfigurationBlob")
    private List<String> bootStrapConfigurationBlob;

    /**
     * The Virtual Hub where Network Virtual Appliance is being deployed.
     */
    @JsonProperty(value = "properties.virtualHub")
    private SubResource virtualHub;

    /**
     * CloudInitConfigurationBlob storage URLs.
     */
    @JsonProperty(value = "properties.cloudInitConfigurationBlob")
    private List<String> cloudInitConfigurationBlob;

    /**
     * VirtualAppliance ASN.
     */
    @JsonProperty(value = "properties.virtualApplianceAsn")
    private Long virtualApplianceAsn;

    /**
     * List of Virtual Appliance Network Interfaces.
     */
    @JsonProperty(value = "properties.virtualApplianceNics", access = JsonProperty.Access.WRITE_ONLY)
    private List<VirtualApplianceNicProperties> virtualApplianceNics;

    /**
     * The provisioning state of the resource. Possible values include:
     * 'Succeeded', 'Updating', 'Deleting', 'Failed'.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * The service principal that has read access to cloud-init and config
     * blob.
     */
    @JsonProperty(value = "identity")
    private ManagedServiceIdentity identity;

    /**
     * Network Virtual Appliance SKU.
     */
    @JsonProperty(value = "sku")
    private VirtualApplianceSkuProperties sku;

    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    @JsonProperty(value = "etag", access = JsonProperty.Access.WRITE_ONLY)
    private String etag;

    /**
     * Resource ID.
     */
    @JsonProperty(value = "id")
    private String id;

    /**
     * Get bootStrapConfigurationBlob storage URLs.
     *
     * @return the bootStrapConfigurationBlob value
     */
    public List<String> bootStrapConfigurationBlob() {
        return this.bootStrapConfigurationBlob;
    }

    /**
     * Set bootStrapConfigurationBlob storage URLs.
     *
     * @param bootStrapConfigurationBlob the bootStrapConfigurationBlob value to set
     * @return the NetworkVirtualApplianceInner object itself.
     */
    public NetworkVirtualApplianceInner withBootStrapConfigurationBlob(List<String> bootStrapConfigurationBlob) {
        this.bootStrapConfigurationBlob = bootStrapConfigurationBlob;
        return this;
    }

    /**
     * Get the Virtual Hub where Network Virtual Appliance is being deployed.
     *
     * @return the virtualHub value
     */
    public SubResource virtualHub() {
        return this.virtualHub;
    }

    /**
     * Set the Virtual Hub where Network Virtual Appliance is being deployed.
     *
     * @param virtualHub the virtualHub value to set
     * @return the NetworkVirtualApplianceInner object itself.
     */
    public NetworkVirtualApplianceInner withVirtualHub(SubResource virtualHub) {
        this.virtualHub = virtualHub;
        return this;
    }

    /**
     * Get cloudInitConfigurationBlob storage URLs.
     *
     * @return the cloudInitConfigurationBlob value
     */
    public List<String> cloudInitConfigurationBlob() {
        return this.cloudInitConfigurationBlob;
    }

    /**
     * Set cloudInitConfigurationBlob storage URLs.
     *
     * @param cloudInitConfigurationBlob the cloudInitConfigurationBlob value to set
     * @return the NetworkVirtualApplianceInner object itself.
     */
    public NetworkVirtualApplianceInner withCloudInitConfigurationBlob(List<String> cloudInitConfigurationBlob) {
        this.cloudInitConfigurationBlob = cloudInitConfigurationBlob;
        return this;
    }

    /**
     * Get virtualAppliance ASN.
     *
     * @return the virtualApplianceAsn value
     */
    public Long virtualApplianceAsn() {
        return this.virtualApplianceAsn;
    }

    /**
     * Set virtualAppliance ASN.
     *
     * @param virtualApplianceAsn the virtualApplianceAsn value to set
     * @return the NetworkVirtualApplianceInner object itself.
     */
    public NetworkVirtualApplianceInner withVirtualApplianceAsn(Long virtualApplianceAsn) {
        this.virtualApplianceAsn = virtualApplianceAsn;
        return this;
    }

    /**
     * Get list of Virtual Appliance Network Interfaces.
     *
     * @return the virtualApplianceNics value
     */
    public List<VirtualApplianceNicProperties> virtualApplianceNics() {
        return this.virtualApplianceNics;
    }

    /**
     * Get the provisioning state of the resource. Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'.
     *
     * @return the provisioningState value
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the service principal that has read access to cloud-init and config blob.
     *
     * @return the identity value
     */
    public ManagedServiceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the service principal that has read access to cloud-init and config blob.
     *
     * @param identity the identity value to set
     * @return the NetworkVirtualApplianceInner object itself.
     */
    public NetworkVirtualApplianceInner withIdentity(ManagedServiceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get network Virtual Appliance SKU.
     *
     * @return the sku value
     */
    public VirtualApplianceSkuProperties sku() {
        return this.sku;
    }

    /**
     * Set network Virtual Appliance SKU.
     *
     * @param sku the sku value to set
     * @return the NetworkVirtualApplianceInner object itself.
     */
    public NetworkVirtualApplianceInner withSku(VirtualApplianceSkuProperties sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get a unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Get resource ID.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set resource ID.
     *
     * @param id the id value to set
     * @return the NetworkVirtualApplianceInner object itself.
     */
    public NetworkVirtualApplianceInner withId(String id) {
        this.id = id;
        return this;
    }

}
