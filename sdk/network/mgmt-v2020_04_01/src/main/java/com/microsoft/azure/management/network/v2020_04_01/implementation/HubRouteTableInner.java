/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.network.v2020_04_01.implementation;

import java.util.List;
import com.microsoft.azure.management.network.v2020_04_01.HubRoute;
import com.microsoft.azure.SubResource;
import com.microsoft.azure.management.network.v2020_04_01.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * RouteTable resource in a virtual hub.
 */
@JsonFlatten
public class HubRouteTableInner extends SubResource {
    /**
     * List of all routes.
     */
    @JsonProperty(value = "properties.routes")
    private List<HubRoute> routes;

    /**
     * List of labels associated with this route table.
     */
    @JsonProperty(value = "properties.labels")
    private List<String> labels;

    /**
     * List of all connections associated with this route table.
     */
    @JsonProperty(value = "properties.associatedConnections", access = JsonProperty.Access.WRITE_ONLY)
    private List<SubResource> associatedConnections;

    /**
     * List of all connections that advertise to this route table.
     */
    @JsonProperty(value = "properties.propagatingConnections", access = JsonProperty.Access.WRITE_ONLY)
    private List<SubResource> propagatingConnections;

    /**
     * The provisioning state of the RouteTable resource. Possible values
     * include: 'Succeeded', 'Updating', 'Deleting', 'Failed'.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * The name of the resource that is unique within a resource group. This
     * name can be used to access the resource.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    @JsonProperty(value = "etag", access = JsonProperty.Access.WRITE_ONLY)
    private String etag;

    /**
     * Resource type.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /**
     * Get list of all routes.
     *
     * @return the routes value
     */
    public List<HubRoute> routes() {
        return this.routes;
    }

    /**
     * Set list of all routes.
     *
     * @param routes the routes value to set
     * @return the HubRouteTableInner object itself.
     */
    public HubRouteTableInner withRoutes(List<HubRoute> routes) {
        this.routes = routes;
        return this;
    }

    /**
     * Get list of labels associated with this route table.
     *
     * @return the labels value
     */
    public List<String> labels() {
        return this.labels;
    }

    /**
     * Set list of labels associated with this route table.
     *
     * @param labels the labels value to set
     * @return the HubRouteTableInner object itself.
     */
    public HubRouteTableInner withLabels(List<String> labels) {
        this.labels = labels;
        return this;
    }

    /**
     * Get list of all connections associated with this route table.
     *
     * @return the associatedConnections value
     */
    public List<SubResource> associatedConnections() {
        return this.associatedConnections;
    }

    /**
     * Get list of all connections that advertise to this route table.
     *
     * @return the propagatingConnections value
     */
    public List<SubResource> propagatingConnections() {
        return this.propagatingConnections;
    }

    /**
     * Get the provisioning state of the RouteTable resource. Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'.
     *
     * @return the provisioningState value
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the name of the resource that is unique within a resource group. This name can be used to access the resource.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the resource that is unique within a resource group. This name can be used to access the resource.
     *
     * @param name the name value to set
     * @return the HubRouteTableInner object itself.
     */
    public HubRouteTableInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get a unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Get resource type.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

}
