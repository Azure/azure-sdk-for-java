// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.generated;

import com.azure.core.management.SubResource;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.models.BackendAddressPool;
import com.azure.resourcemanager.network.generated.models.LoadBalancerBackendAddress;
import java.util.Arrays;

/** Samples for LoadBalancerBackendAddressPools CreateOrUpdate. */
public final class LoadBalancerBackendAddressPoolsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/examples/LBBackendAddressPoolWithBackendAddressesPut.json
     */
    /**
     * Sample code: Update load balancer backend pool with backend addresses containing virtual network and IP address.
     *
     * @param manager Entry point to NetworkManager.
     */
    public static void updateLoadBalancerBackendPoolWithBackendAddressesContainingVirtualNetworkAndIPAddress(
        com.azure.resourcemanager.network.generated.NetworkManager manager) {
        BackendAddressPool resource =
            manager
                .loadBalancerBackendAddressPools()
                .getWithResponse("testrg", "lb", "backend", Context.NONE)
                .getValue();
        resource
            .update()
            .withLoadBalancerBackendAddresses(
                Arrays
                    .asList(
                        new LoadBalancerBackendAddress()
                            .withName("address1")
                            .withVirtualNetwork(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb"))
                            .withIpAddress("10.0.0.4"),
                        new LoadBalancerBackendAddress()
                            .withName("address2")
                            .withVirtualNetwork(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb"))
                            .withIpAddress("10.0.0.5")))
            .apply();
    }
}
