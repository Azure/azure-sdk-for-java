// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.generated;

import com.azure.resourcemanager.network.generated.fluent.models.FrontendIpConfigurationInner;
import com.azure.resourcemanager.network.generated.fluent.models.PrivateLinkServiceIpConfigurationInner;
import com.azure.resourcemanager.network.generated.fluent.models.SubnetInner;
import com.azure.resourcemanager.network.generated.models.IpAllocationMethod;
import com.azure.resourcemanager.network.generated.models.IpVersion;
import com.azure.resourcemanager.network.generated.models.PrivateLinkServicePropertiesAutoApproval;
import com.azure.resourcemanager.network.generated.models.PrivateLinkServicePropertiesVisibility;
import java.util.Arrays;

/** Samples for PrivateLinkServices CreateOrUpdate. */
public final class PrivateLinkServicesCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/examples/PrivateLinkServiceCreate.json
     */
    /**
     * Sample code: Create private link service.
     *
     * @param manager Entry point to NetworkManager.
     */
    public static void createPrivateLinkService(com.azure.resourcemanager.network.generated.NetworkManager manager) {
        manager
            .privateLinkServices()
            .define("testPls")
            .withRegion("eastus")
            .withExistingResourceGroup("rg1")
            .withLoadBalancerFrontendIpConfigurations(
                Arrays
                    .asList(
                        new FrontendIpConfigurationInner()
                            .withId(
                                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb")))
            .withIpConfigurations(
                Arrays
                    .asList(
                        new PrivateLinkServiceIpConfigurationInner()
                            .withName("fe-lb")
                            .withPrivateIpAddress("10.0.1.4")
                            .withPrivateIpAllocationMethod(IpAllocationMethod.STATIC)
                            .withSubnet(
                                new SubnetInner()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb/subnets/subnetlb"))
                            .withPrivateIpAddressVersion(IpVersion.IPV4)))
            .withVisibility(
                new PrivateLinkServicePropertiesVisibility()
                    .withSubscriptions(Arrays.asList("subscription1", "subscription2", "subscription3")))
            .withAutoApproval(
                new PrivateLinkServicePropertiesAutoApproval()
                    .withSubscriptions(Arrays.asList("subscription1", "subscription2")))
            .withFqdns(Arrays.asList("fqdn1", "fqdn2", "fqdn3"))
            .create();
    }
}
