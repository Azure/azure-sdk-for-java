// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.generated;

import com.azure.core.management.SubResource;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayBackendAddress;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayBackendAddressPool;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayBackendHttpSettings;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayClientAuthConfiguration;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayCookieBasedAffinity;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayFrontendIpConfiguration;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayFrontendPort;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayGlobalConfiguration;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayHeaderConfiguration;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayHttpListener;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayIpConfiguration;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayLoadDistributionAlgorithm;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayLoadDistributionPolicy;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayLoadDistributionTarget;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayPathRule;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayProtocol;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayRequestRoutingRule;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayRequestRoutingRuleType;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayRewriteRule;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayRewriteRuleActionSet;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayRewriteRuleCondition;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayRewriteRuleSet;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewaySku;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewaySkuName;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewaySslCertificate;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewaySslCipherSuite;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewaySslPolicy;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewaySslPolicyType;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewaySslProfile;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewaySslProtocol;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayTier;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayTrustedClientCertificate;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayTrustedRootCertificate;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayUrlConfiguration;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayUrlPathMap;
import com.azure.resourcemanager.network.generated.models.ManagedServiceIdentity;
import com.azure.resourcemanager.network.generated.models.ManagedServiceIdentityUserAssignedIdentities;
import com.azure.resourcemanager.network.generated.models.ResourceIdentityType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/** Samples for ApplicationGateways CreateOrUpdate. */
public final class ApplicationGatewaysCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/examples/ApplicationGatewayCreate.json
     */
    /**
     * Sample code: Create Application Gateway.
     *
     * @param manager Entry point to NetworkManager.
     */
    public static void createApplicationGateway(com.azure.resourcemanager.network.generated.NetworkManager manager) {
        manager
            .applicationGateways()
            .define("appgw")
            .withRegion("eastus")
            .withExistingResourceGroup("rg1")
            .withIdentity(
                new ManagedServiceIdentity()
                    .withType(ResourceIdentityType.USER_ASSIGNED)
                    .withUserAssignedIdentities(
                        mapOf(
                            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1",
                            new ManagedServiceIdentityUserAssignedIdentities())))
            .withSku(
                new ApplicationGatewaySku()
                    .withName(ApplicationGatewaySkuName.STANDARD_V2)
                    .withTier(ApplicationGatewayTier.STANDARD_V2)
                    .withCapacity(3))
            .withGatewayIpConfigurations(
                Arrays
                    .asList(
                        new ApplicationGatewayIpConfiguration()
                            .withName("appgwipc")
                            .withSubnet(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet/subnets/appgwsubnet"))))
            .withTrustedRootCertificates(
                Arrays
                    .asList(
                        new ApplicationGatewayTrustedRootCertificate().withName("rootcert").withData("****"),
                        new ApplicationGatewayTrustedRootCertificate()
                            .withName("rootcert1")
                            .withKeyVaultSecretId("https://kv/secret")))
            .withTrustedClientCertificates(
                Arrays.asList(new ApplicationGatewayTrustedClientCertificate().withName("clientcert").withData("****")))
            .withSslCertificates(
                Arrays
                    .asList(
                        new ApplicationGatewaySslCertificate()
                            .withName("sslcert")
                            .withData("****")
                            .withPassword("****"),
                        new ApplicationGatewaySslCertificate()
                            .withName("sslcert2")
                            .withKeyVaultSecretId("https://kv/secret")))
            .withFrontendIpConfigurations(
                Arrays
                    .asList(
                        new ApplicationGatewayFrontendIpConfiguration()
                            .withName("appgwfip")
                            .withPublicIpAddress(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/appgwpip"))))
            .withFrontendPorts(
                Arrays
                    .asList(
                        new ApplicationGatewayFrontendPort().withName("appgwfp").withPort(443),
                        new ApplicationGatewayFrontendPort().withName("appgwfp80").withPort(80)))
            .withBackendAddressPools(
                Arrays
                    .asList(
                        new ApplicationGatewayBackendAddressPool()
                            .withName("appgwpool")
                            .withBackendAddresses(
                                Arrays
                                    .asList(
                                        new ApplicationGatewayBackendAddress().withIpAddress("10.0.1.1"),
                                        new ApplicationGatewayBackendAddress().withIpAddress("10.0.1.2"))),
                        new ApplicationGatewayBackendAddressPool()
                            .withId(
                                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool1")
                            .withName("appgwpool1")
                            .withBackendAddresses(
                                Arrays
                                    .asList(
                                        new ApplicationGatewayBackendAddress(),
                                        new ApplicationGatewayBackendAddress()))))
            .withBackendHttpSettingsCollection(
                Arrays
                    .asList(
                        new ApplicationGatewayBackendHttpSettings()
                            .withName("appgwbhs")
                            .withPort(80)
                            .withProtocol(ApplicationGatewayProtocol.HTTP)
                            .withCookieBasedAffinity(ApplicationGatewayCookieBasedAffinity.DISABLED)
                            .withRequestTimeout(30)))
            .withHttpListeners(
                Arrays
                    .asList(
                        new ApplicationGatewayHttpListener()
                            .withName("appgwhl")
                            .withFrontendIpConfiguration(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"))
                            .withFrontendPort(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp"))
                            .withProtocol(ApplicationGatewayProtocol.HTTPS)
                            .withSslCertificate(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert"))
                            .withSslProfile(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslProfiles/sslProfile1"))
                            .withRequireServerNameIndication(false),
                        new ApplicationGatewayHttpListener()
                            .withName("appgwhttplistener")
                            .withFrontendIpConfiguration(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"))
                            .withFrontendPort(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp80"))
                            .withProtocol(ApplicationGatewayProtocol.HTTP)))
            .withSslProfiles(
                Arrays
                    .asList(
                        new ApplicationGatewaySslProfile()
                            .withName("sslProfile1")
                            .withTrustedClientCertificates(
                                Arrays
                                    .asList(
                                        new SubResource()
                                            .withId(
                                                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/trustedClientCertificates/clientcert")))
                            .withSslPolicy(
                                new ApplicationGatewaySslPolicy()
                                    .withPolicyType(ApplicationGatewaySslPolicyType.CUSTOM)
                                    .withCipherSuites(
                                        Arrays
                                            .asList(
                                                ApplicationGatewaySslCipherSuite.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256))
                                    .withMinProtocolVersion(ApplicationGatewaySslProtocol.TLSV1_1))
                            .withClientAuthConfiguration(
                                new ApplicationGatewayClientAuthConfiguration().withVerifyClientCertIssuerDN(true))))
            .withUrlPathMaps(
                Arrays
                    .asList(
                        new ApplicationGatewayUrlPathMap()
                            .withName("pathMap1")
                            .withDefaultBackendAddressPool(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"))
                            .withDefaultBackendHttpSettings(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"))
                            .withDefaultRewriteRuleSet(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"))
                            .withDefaultLoadDistributionPolicy(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/loadDistributionPolicies/ldp1"))
                            .withPathRules(
                                Arrays
                                    .asList(
                                        new ApplicationGatewayPathRule()
                                            .withName("apiPaths")
                                            .withPaths(Arrays.asList("/api", "/v1/api"))
                                            .withBackendAddressPool(
                                                new SubResource()
                                                    .withId(
                                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"))
                                            .withBackendHttpSettings(
                                                new SubResource()
                                                    .withId(
                                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"))
                                            .withRewriteRuleSet(
                                                new SubResource()
                                                    .withId(
                                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"))
                                            .withLoadDistributionPolicy(
                                                new SubResource()
                                                    .withId(
                                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/loadDistributionPolicies/ldp1"))))))
            .withRequestRoutingRules(
                Arrays
                    .asList(
                        new ApplicationGatewayRequestRoutingRule()
                            .withName("appgwrule")
                            .withRuleType(ApplicationGatewayRequestRoutingRuleType.BASIC)
                            .withPriority(10)
                            .withBackendAddressPool(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"))
                            .withBackendHttpSettings(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"))
                            .withHttpListener(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl"))
                            .withRewriteRuleSet(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"))
                            .withLoadDistributionPolicy(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/loadDistributionPolicies/ldp1")),
                        new ApplicationGatewayRequestRoutingRule()
                            .withName("appgwPathBasedRule")
                            .withRuleType(ApplicationGatewayRequestRoutingRuleType.PATH_BASED_ROUTING)
                            .withPriority(20)
                            .withHttpListener(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhttplistener"))
                            .withUrlPathMap(
                                new SubResource()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1"))))
            .withRewriteRuleSets(
                Arrays
                    .asList(
                        new ApplicationGatewayRewriteRuleSet()
                            .withName("rewriteRuleSet1")
                            .withRewriteRules(
                                Arrays
                                    .asList(
                                        new ApplicationGatewayRewriteRule()
                                            .withName("Set X-Forwarded-For")
                                            .withRuleSequence(102)
                                            .withConditions(
                                                Arrays
                                                    .asList(
                                                        new ApplicationGatewayRewriteRuleCondition()
                                                            .withVariable("http_req_Authorization")
                                                            .withPattern("^Bearer")
                                                            .withIgnoreCase(true)
                                                            .withNegate(false)))
                                            .withActionSet(
                                                new ApplicationGatewayRewriteRuleActionSet()
                                                    .withRequestHeaderConfigurations(
                                                        Arrays
                                                            .asList(
                                                                new ApplicationGatewayHeaderConfiguration()
                                                                    .withHeaderName("X-Forwarded-For")
                                                                    .withHeaderValue(
                                                                        "{var_add_x_forwarded_for_proxy}")))
                                                    .withResponseHeaderConfigurations(
                                                        Arrays
                                                            .asList(
                                                                new ApplicationGatewayHeaderConfiguration()
                                                                    .withHeaderName("Strict-Transport-Security")
                                                                    .withHeaderValue("max-age=31536000")))
                                                    .withUrlConfiguration(
                                                        new ApplicationGatewayUrlConfiguration()
                                                            .withModifiedPath("/abc")))))))
            .withLoadDistributionPolicies(
                Arrays
                    .asList(
                        new ApplicationGatewayLoadDistributionPolicy()
                            .withName("ldp1")
                            .withLoadDistributionTargets(
                                Arrays
                                    .asList(
                                        new ApplicationGatewayLoadDistributionTarget()
                                            .withName("ld11")
                                            .withWeightPerServer(40)
                                            .withBackendAddressPool(
                                                new SubResource()
                                                    .withId(
                                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool")),
                                        new ApplicationGatewayLoadDistributionTarget()
                                            .withName("ld11")
                                            .withWeightPerServer(60)
                                            .withBackendAddressPool(
                                                new SubResource()
                                                    .withId(
                                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool1"))))
                            .withLoadDistributionAlgorithm(ApplicationGatewayLoadDistributionAlgorithm.ROUND_ROBIN)))
            .withGlobalConfiguration(
                new ApplicationGatewayGlobalConfiguration()
                    .withEnableRequestBuffering(true)
                    .withEnableResponseBuffering(true))
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
