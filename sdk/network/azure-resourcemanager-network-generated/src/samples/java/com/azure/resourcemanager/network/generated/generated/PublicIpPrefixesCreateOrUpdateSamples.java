// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.generated;

import com.azure.resourcemanager.network.generated.models.IpVersion;
import com.azure.resourcemanager.network.generated.models.PublicIpPrefixSku;
import com.azure.resourcemanager.network.generated.models.PublicIpPrefixSkuName;
import com.azure.resourcemanager.network.generated.models.PublicIpPrefixSkuTier;

/** Samples for PublicIpPrefixes CreateOrUpdate. */
public final class PublicIpPrefixesCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/examples/PublicIpPrefixCreateDefaults.json
     */
    /**
     * Sample code: Create public IP prefix defaults.
     *
     * @param manager Entry point to NetworkManager.
     */
    public static void createPublicIPPrefixDefaults(
        com.azure.resourcemanager.network.generated.NetworkManager manager) {
        manager
            .publicIpPrefixes()
            .define("test-ipprefix")
            .withRegion("westus")
            .withExistingResourceGroup("rg1")
            .withSku(new PublicIpPrefixSku().withName(PublicIpPrefixSkuName.STANDARD))
            .withPrefixLength(30)
            .create();
    }

    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/examples/PublicIpPrefixCreateCustomizedValues.json
     */
    /**
     * Sample code: Create public IP prefix allocation method.
     *
     * @param manager Entry point to NetworkManager.
     */
    public static void createPublicIPPrefixAllocationMethod(
        com.azure.resourcemanager.network.generated.NetworkManager manager) {
        manager
            .publicIpPrefixes()
            .define("test-ipprefix")
            .withRegion("westus")
            .withExistingResourceGroup("rg1")
            .withSku(
                new PublicIpPrefixSku()
                    .withName(PublicIpPrefixSkuName.STANDARD)
                    .withTier(PublicIpPrefixSkuTier.REGIONAL))
            .withPublicIpAddressVersion(IpVersion.IPV4)
            .withPrefixLength(30)
            .create();
    }
}
