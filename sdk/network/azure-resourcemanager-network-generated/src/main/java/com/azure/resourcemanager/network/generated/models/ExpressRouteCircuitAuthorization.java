// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitAuthorizationInner;

/** An immutable client-side representation of ExpressRouteCircuitAuthorization. */
public interface ExpressRouteCircuitAuthorization {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource that is unique within a resource group. This name can be used to
     * access the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the etag property: A unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the type property: Type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the authorizationKey property: The authorization key.
     *
     * @return the authorizationKey value.
     */
    String authorizationKey();

    /**
     * Gets the authorizationUseStatus property: The authorization use status.
     *
     * @return the authorizationUseStatus value.
     */
    AuthorizationUseStatus authorizationUseStatus();

    /**
     * Gets the provisioningState property: The provisioning state of the authorization resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitAuthorizationInner
     * object.
     *
     * @return the inner object.
     */
    ExpressRouteCircuitAuthorizationInner innerModel();

    /** The entirety of the ExpressRouteCircuitAuthorization definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ExpressRouteCircuitAuthorization definition stages. */
    interface DefinitionStages {
        /** The first stage of the ExpressRouteCircuitAuthorization definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ExpressRouteCircuitAuthorization definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, circuitName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param circuitName The name of the express route circuit.
             * @return the next definition stage.
             */
            WithCreate withExistingExpressRouteCircuit(String resourceGroupName, String circuitName);
        }
        /**
         * The stage of the ExpressRouteCircuitAuthorization definition which contains all the minimum required
         * properties for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithName,
                DefinitionStages.WithAuthorizationKey,
                DefinitionStages.WithAuthorizationUseStatus {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ExpressRouteCircuitAuthorization create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ExpressRouteCircuitAuthorization create(Context context);
        }
        /** The stage of the ExpressRouteCircuitAuthorization definition allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: The name of the resource that is unique within a resource group. This name
             * can be used to access the resource..
             *
             * @param name The name of the resource that is unique within a resource group. This name can be used to
             *     access the resource.
             * @return the next definition stage.
             */
            WithCreate withName(String name);
        }
        /** The stage of the ExpressRouteCircuitAuthorization definition allowing to specify authorizationKey. */
        interface WithAuthorizationKey {
            /**
             * Specifies the authorizationKey property: The authorization key..
             *
             * @param authorizationKey The authorization key.
             * @return the next definition stage.
             */
            WithCreate withAuthorizationKey(String authorizationKey);
        }
        /** The stage of the ExpressRouteCircuitAuthorization definition allowing to specify authorizationUseStatus. */
        interface WithAuthorizationUseStatus {
            /**
             * Specifies the authorizationUseStatus property: The authorization use status..
             *
             * @param authorizationUseStatus The authorization use status.
             * @return the next definition stage.
             */
            WithCreate withAuthorizationUseStatus(AuthorizationUseStatus authorizationUseStatus);
        }
    }
    /**
     * Begins update for the ExpressRouteCircuitAuthorization resource.
     *
     * @return the stage of resource update.
     */
    ExpressRouteCircuitAuthorization.Update update();

    /** The template for ExpressRouteCircuitAuthorization update. */
    interface Update
        extends UpdateStages.WithName, UpdateStages.WithAuthorizationKey, UpdateStages.WithAuthorizationUseStatus {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ExpressRouteCircuitAuthorization apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ExpressRouteCircuitAuthorization apply(Context context);
    }
    /** The ExpressRouteCircuitAuthorization update stages. */
    interface UpdateStages {
        /** The stage of the ExpressRouteCircuitAuthorization update allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: The name of the resource that is unique within a resource group. This name
             * can be used to access the resource..
             *
             * @param name The name of the resource that is unique within a resource group. This name can be used to
             *     access the resource.
             * @return the next definition stage.
             */
            Update withName(String name);
        }
        /** The stage of the ExpressRouteCircuitAuthorization update allowing to specify authorizationKey. */
        interface WithAuthorizationKey {
            /**
             * Specifies the authorizationKey property: The authorization key..
             *
             * @param authorizationKey The authorization key.
             * @return the next definition stage.
             */
            Update withAuthorizationKey(String authorizationKey);
        }
        /** The stage of the ExpressRouteCircuitAuthorization update allowing to specify authorizationUseStatus. */
        interface WithAuthorizationUseStatus {
            /**
             * Specifies the authorizationUseStatus property: The authorization use status..
             *
             * @param authorizationUseStatus The authorization use status.
             * @return the next definition stage.
             */
            Update withAuthorizationUseStatus(AuthorizationUseStatus authorizationUseStatus);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ExpressRouteCircuitAuthorization refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ExpressRouteCircuitAuthorization refresh(Context context);
}
