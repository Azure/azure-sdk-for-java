// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.ServiceTagsClient;
import com.azure.resourcemanager.network.generated.fluent.models.ServiceTagsListResultInner;
import com.azure.resourcemanager.network.generated.models.ServiceTags;
import com.azure.resourcemanager.network.generated.models.ServiceTagsListResult;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ServiceTagsImpl implements ServiceTags {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ServiceTagsImpl.class);

    private final ServiceTagsClient innerClient;

    private final NetworkManager serviceManager;

    public ServiceTagsImpl(ServiceTagsClient innerClient, NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ServiceTagsListResult list(String location) {
        ServiceTagsListResultInner inner = this.serviceClient().list(location);
        if (inner != null) {
            return new ServiceTagsListResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ServiceTagsListResult> listWithResponse(String location, Context context) {
        Response<ServiceTagsListResultInner> inner = this.serviceClient().listWithResponse(location, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ServiceTagsListResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ServiceTagsClient serviceClient() {
        return this.innerClient;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }
}
