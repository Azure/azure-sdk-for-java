// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.management.Region;
import com.azure.core.management.SubResource;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.VirtualNetworkGatewayInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of VirtualNetworkGateway. */
public interface VirtualNetworkGateway {
    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the etag property: A unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the ipConfigurations property: IP configurations for virtual network gateway.
     *
     * @return the ipConfigurations value.
     */
    List<VirtualNetworkGatewayIpConfiguration> ipConfigurations();

    /**
     * Gets the gatewayType property: The type of this virtual network gateway.
     *
     * @return the gatewayType value.
     */
    VirtualNetworkGatewayType gatewayType();

    /**
     * Gets the vpnType property: The type of this virtual network gateway.
     *
     * @return the vpnType value.
     */
    VpnType vpnType();

    /**
     * Gets the vpnGatewayGeneration property: The generation for this VirtualNetworkGateway. Must be None if
     * gatewayType is not VPN.
     *
     * @return the vpnGatewayGeneration value.
     */
    VpnGatewayGeneration vpnGatewayGeneration();

    /**
     * Gets the enableBgp property: Whether BGP is enabled for this virtual network gateway or not.
     *
     * @return the enableBgp value.
     */
    Boolean enableBgp();

    /**
     * Gets the enablePrivateIpAddress property: Whether private IP needs to be enabled on this gateway for connections
     * or not.
     *
     * @return the enablePrivateIpAddress value.
     */
    Boolean enablePrivateIpAddress();

    /**
     * Gets the active property: ActiveActive flag.
     *
     * @return the active value.
     */
    Boolean active();

    /**
     * Gets the gatewayDefaultSite property: The reference to the LocalNetworkGateway resource which represents local
     * network site having default routes. Assign Null value in case of removing existing default site setting.
     *
     * @return the gatewayDefaultSite value.
     */
    SubResource gatewayDefaultSite();

    /**
     * Gets the sku property: The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected
     * for Virtual network gateway.
     *
     * @return the sku value.
     */
    VirtualNetworkGatewaySku sku();

    /**
     * Gets the vpnClientConfiguration property: The reference to the VpnClientConfiguration resource which represents
     * the P2S VpnClient configurations.
     *
     * @return the vpnClientConfiguration value.
     */
    VpnClientConfiguration vpnClientConfiguration();

    /**
     * Gets the bgpSettings property: Virtual network gateway's BGP speaker settings.
     *
     * @return the bgpSettings value.
     */
    BgpSettings bgpSettings();

    /**
     * Gets the customRoutes property: The reference to the address space resource which represents the custom routes
     * address space specified by the customer for virtual network gateway and VpnClient.
     *
     * @return the customRoutes value.
     */
    AddressSpace customRoutes();

    /**
     * Gets the resourceGuid property: The resource GUID property of the virtual network gateway resource.
     *
     * @return the resourceGuid value.
     */
    String resourceGuid();

    /**
     * Gets the provisioningState property: The provisioning state of the virtual network gateway resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the enableDnsForwarding property: Whether dns forwarding is enabled or not.
     *
     * @return the enableDnsForwarding value.
     */
    Boolean enableDnsForwarding();

    /**
     * Gets the inboundDnsForwardingEndpoint property: The IP address allocated by the gateway to which dns requests can
     * be sent.
     *
     * @return the inboundDnsForwardingEndpoint value.
     */
    String inboundDnsForwardingEndpoint();

    /**
     * Gets the virtualNetworkExtendedLocationResourceId property: MAS FIJI customer vnet resource id.
     * VirtualNetworkGateway of type local gateway is associated with the customer vnet.
     *
     * @return the virtualNetworkExtendedLocationResourceId value.
     */
    String virtualNetworkExtendedLocationResourceId();

    /**
     * Gets the extendedLocation property: The extended location of type local virtual network gateway.
     *
     * @return the extendedLocation value.
     */
    ExtendedLocation extendedLocation();

    /**
     * Gets the id property: Resource ID.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.VirtualNetworkGatewayInner object.
     *
     * @return the inner object.
     */
    VirtualNetworkGatewayInner innerModel();

    /** The entirety of the VirtualNetworkGateway definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The VirtualNetworkGateway definition stages. */
    interface DefinitionStages {
        /** The first stage of the VirtualNetworkGateway definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the VirtualNetworkGateway definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithIpConfigurations,
                DefinitionStages.WithGatewayType,
                DefinitionStages.WithVpnType,
                DefinitionStages.WithVpnGatewayGeneration,
                DefinitionStages.WithEnableBgp,
                DefinitionStages.WithEnablePrivateIpAddress,
                DefinitionStages.WithActive,
                DefinitionStages.WithGatewayDefaultSite,
                DefinitionStages.WithSku,
                DefinitionStages.WithVpnClientConfiguration,
                DefinitionStages.WithBgpSettings,
                DefinitionStages.WithCustomRoutes,
                DefinitionStages.WithEnableDnsForwarding,
                DefinitionStages.WithVirtualNetworkExtendedLocationResourceId,
                DefinitionStages.WithExtendedLocation {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            VirtualNetworkGateway create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            VirtualNetworkGateway create(Context context);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify ipConfigurations. */
        interface WithIpConfigurations {
            /**
             * Specifies the ipConfigurations property: IP configurations for virtual network gateway..
             *
             * @param ipConfigurations IP configurations for virtual network gateway.
             * @return the next definition stage.
             */
            WithCreate withIpConfigurations(List<VirtualNetworkGatewayIpConfiguration> ipConfigurations);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify gatewayType. */
        interface WithGatewayType {
            /**
             * Specifies the gatewayType property: The type of this virtual network gateway..
             *
             * @param gatewayType The type of this virtual network gateway.
             * @return the next definition stage.
             */
            WithCreate withGatewayType(VirtualNetworkGatewayType gatewayType);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify vpnType. */
        interface WithVpnType {
            /**
             * Specifies the vpnType property: The type of this virtual network gateway..
             *
             * @param vpnType The type of this virtual network gateway.
             * @return the next definition stage.
             */
            WithCreate withVpnType(VpnType vpnType);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify vpnGatewayGeneration. */
        interface WithVpnGatewayGeneration {
            /**
             * Specifies the vpnGatewayGeneration property: The generation for this VirtualNetworkGateway. Must be None
             * if gatewayType is not VPN..
             *
             * @param vpnGatewayGeneration The generation for this VirtualNetworkGateway. Must be None if gatewayType is
             *     not VPN.
             * @return the next definition stage.
             */
            WithCreate withVpnGatewayGeneration(VpnGatewayGeneration vpnGatewayGeneration);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify enableBgp. */
        interface WithEnableBgp {
            /**
             * Specifies the enableBgp property: Whether BGP is enabled for this virtual network gateway or not..
             *
             * @param enableBgp Whether BGP is enabled for this virtual network gateway or not.
             * @return the next definition stage.
             */
            WithCreate withEnableBgp(Boolean enableBgp);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify enablePrivateIpAddress. */
        interface WithEnablePrivateIpAddress {
            /**
             * Specifies the enablePrivateIpAddress property: Whether private IP needs to be enabled on this gateway for
             * connections or not..
             *
             * @param enablePrivateIpAddress Whether private IP needs to be enabled on this gateway for connections or
             *     not.
             * @return the next definition stage.
             */
            WithCreate withEnablePrivateIpAddress(Boolean enablePrivateIpAddress);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify active. */
        interface WithActive {
            /**
             * Specifies the active property: ActiveActive flag..
             *
             * @param active ActiveActive flag.
             * @return the next definition stage.
             */
            WithCreate withActive(Boolean active);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify gatewayDefaultSite. */
        interface WithGatewayDefaultSite {
            /**
             * Specifies the gatewayDefaultSite property: The reference to the LocalNetworkGateway resource which
             * represents local network site having default routes. Assign Null value in case of removing existing
             * default site setting..
             *
             * @param gatewayDefaultSite The reference to the LocalNetworkGateway resource which represents local
             *     network site having default routes. Assign Null value in case of removing existing default site
             *     setting.
             * @return the next definition stage.
             */
            WithCreate withGatewayDefaultSite(SubResource gatewayDefaultSite);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: The reference to the VirtualNetworkGatewaySku resource which represents the
             * SKU selected for Virtual network gateway..
             *
             * @param sku The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for
             *     Virtual network gateway.
             * @return the next definition stage.
             */
            WithCreate withSku(VirtualNetworkGatewaySku sku);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify vpnClientConfiguration. */
        interface WithVpnClientConfiguration {
            /**
             * Specifies the vpnClientConfiguration property: The reference to the VpnClientConfiguration resource which
             * represents the P2S VpnClient configurations..
             *
             * @param vpnClientConfiguration The reference to the VpnClientConfiguration resource which represents the
             *     P2S VpnClient configurations.
             * @return the next definition stage.
             */
            WithCreate withVpnClientConfiguration(VpnClientConfiguration vpnClientConfiguration);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify bgpSettings. */
        interface WithBgpSettings {
            /**
             * Specifies the bgpSettings property: Virtual network gateway's BGP speaker settings..
             *
             * @param bgpSettings Virtual network gateway's BGP speaker settings.
             * @return the next definition stage.
             */
            WithCreate withBgpSettings(BgpSettings bgpSettings);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify customRoutes. */
        interface WithCustomRoutes {
            /**
             * Specifies the customRoutes property: The reference to the address space resource which represents the
             * custom routes address space specified by the customer for virtual network gateway and VpnClient..
             *
             * @param customRoutes The reference to the address space resource which represents the custom routes
             *     address space specified by the customer for virtual network gateway and VpnClient.
             * @return the next definition stage.
             */
            WithCreate withCustomRoutes(AddressSpace customRoutes);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify enableDnsForwarding. */
        interface WithEnableDnsForwarding {
            /**
             * Specifies the enableDnsForwarding property: Whether dns forwarding is enabled or not..
             *
             * @param enableDnsForwarding Whether dns forwarding is enabled or not.
             * @return the next definition stage.
             */
            WithCreate withEnableDnsForwarding(Boolean enableDnsForwarding);
        }
        /**
         * The stage of the VirtualNetworkGateway definition allowing to specify
         * virtualNetworkExtendedLocationResourceId.
         */
        interface WithVirtualNetworkExtendedLocationResourceId {
            /**
             * Specifies the virtualNetworkExtendedLocationResourceId property: MAS FIJI customer vnet resource id.
             * VirtualNetworkGateway of type local gateway is associated with the customer vnet..
             *
             * @param virtualNetworkExtendedLocationResourceId MAS FIJI customer vnet resource id. VirtualNetworkGateway
             *     of type local gateway is associated with the customer vnet.
             * @return the next definition stage.
             */
            WithCreate withVirtualNetworkExtendedLocationResourceId(String virtualNetworkExtendedLocationResourceId);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify extendedLocation. */
        interface WithExtendedLocation {
            /**
             * Specifies the extendedLocation property: The extended location of type local virtual network gateway..
             *
             * @param extendedLocation The extended location of type local virtual network gateway.
             * @return the next definition stage.
             */
            WithCreate withExtendedLocation(ExtendedLocation extendedLocation);
        }
    }
    /**
     * Begins update for the VirtualNetworkGateway resource.
     *
     * @return the stage of resource update.
     */
    VirtualNetworkGateway.Update update();

    /** The template for VirtualNetworkGateway update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        VirtualNetworkGateway apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        VirtualNetworkGateway apply(Context context);
    }
    /** The VirtualNetworkGateway update stages. */
    interface UpdateStages {
        /** The stage of the VirtualNetworkGateway update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    VirtualNetworkGateway refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    VirtualNetworkGateway refresh(Context context);
}
