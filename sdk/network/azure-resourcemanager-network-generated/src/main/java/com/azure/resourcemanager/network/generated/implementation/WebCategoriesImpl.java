// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.WebCategoriesClient;
import com.azure.resourcemanager.network.generated.fluent.models.AzureWebCategoryInner;
import com.azure.resourcemanager.network.generated.models.AzureWebCategory;
import com.azure.resourcemanager.network.generated.models.WebCategories;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class WebCategoriesImpl implements WebCategories {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WebCategoriesImpl.class);

    private final WebCategoriesClient innerClient;

    private final NetworkManager serviceManager;

    public WebCategoriesImpl(WebCategoriesClient innerClient, NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public AzureWebCategory get(String name) {
        AzureWebCategoryInner inner = this.serviceClient().get(name);
        if (inner != null) {
            return new AzureWebCategoryImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<AzureWebCategory> getWithResponse(String name, String expand, Context context) {
        Response<AzureWebCategoryInner> inner = this.serviceClient().getWithResponse(name, expand, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new AzureWebCategoryImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<AzureWebCategory> list() {
        PagedIterable<AzureWebCategoryInner> inner = this.serviceClient().list();
        return inner.mapPage(inner1 -> new AzureWebCategoryImpl(inner1, this.manager()));
    }

    public PagedIterable<AzureWebCategory> list(Context context) {
        PagedIterable<AzureWebCategoryInner> inner = this.serviceClient().list(context);
        return inner.mapPage(inner1 -> new AzureWebCategoryImpl(inner1, this.manager()));
    }

    private WebCategoriesClient serviceClient() {
        return this.innerClient;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }
}
