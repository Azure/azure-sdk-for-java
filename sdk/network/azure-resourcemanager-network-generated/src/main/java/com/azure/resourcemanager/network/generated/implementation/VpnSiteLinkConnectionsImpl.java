// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.VpnSiteLinkConnectionsClient;
import com.azure.resourcemanager.network.generated.fluent.models.VpnSiteLinkConnectionInner;
import com.azure.resourcemanager.network.generated.models.VpnSiteLinkConnection;
import com.azure.resourcemanager.network.generated.models.VpnSiteLinkConnections;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class VpnSiteLinkConnectionsImpl implements VpnSiteLinkConnections {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VpnSiteLinkConnectionsImpl.class);

    private final VpnSiteLinkConnectionsClient innerClient;

    private final NetworkManager serviceManager;

    public VpnSiteLinkConnectionsImpl(VpnSiteLinkConnectionsClient innerClient, NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public VpnSiteLinkConnection get(
        String resourceGroupName, String gatewayName, String connectionName, String linkConnectionName) {
        VpnSiteLinkConnectionInner inner =
            this.serviceClient().get(resourceGroupName, gatewayName, connectionName, linkConnectionName);
        if (inner != null) {
            return new VpnSiteLinkConnectionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<VpnSiteLinkConnection> getWithResponse(
        String resourceGroupName,
        String gatewayName,
        String connectionName,
        String linkConnectionName,
        Context context) {
        Response<VpnSiteLinkConnectionInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, gatewayName, connectionName, linkConnectionName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new VpnSiteLinkConnectionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private VpnSiteLinkConnectionsClient serviceClient() {
        return this.innerClient;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }
}
