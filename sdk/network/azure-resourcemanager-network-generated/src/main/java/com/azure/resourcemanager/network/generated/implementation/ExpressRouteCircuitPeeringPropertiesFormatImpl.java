// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.SubResource;
import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitConnectionInner;
import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitPeeringPropertiesFormatInner;
import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitStatsInner;
import com.azure.resourcemanager.network.generated.fluent.models.PeerExpressRouteCircuitConnectionInner;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitConnection;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitPeeringConfig;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitPeeringPropertiesFormat;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitStats;
import com.azure.resourcemanager.network.generated.models.ExpressRouteConnectionId;
import com.azure.resourcemanager.network.generated.models.ExpressRoutePeeringState;
import com.azure.resourcemanager.network.generated.models.ExpressRoutePeeringType;
import com.azure.resourcemanager.network.generated.models.Ipv6ExpressRouteCircuitPeeringConfig;
import com.azure.resourcemanager.network.generated.models.PeerExpressRouteCircuitConnection;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public final class ExpressRouteCircuitPeeringPropertiesFormatImpl
    implements ExpressRouteCircuitPeeringPropertiesFormat {
    private ExpressRouteCircuitPeeringPropertiesFormatInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    ExpressRouteCircuitPeeringPropertiesFormatImpl(
        ExpressRouteCircuitPeeringPropertiesFormatInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public ExpressRoutePeeringType peeringType() {
        return this.innerModel().peeringType();
    }

    public ExpressRoutePeeringState state() {
        return this.innerModel().state();
    }

    public Integer azureAsn() {
        return this.innerModel().azureAsn();
    }

    public Long peerAsn() {
        return this.innerModel().peerAsn();
    }

    public String primaryPeerAddressPrefix() {
        return this.innerModel().primaryPeerAddressPrefix();
    }

    public String secondaryPeerAddressPrefix() {
        return this.innerModel().secondaryPeerAddressPrefix();
    }

    public String primaryAzurePort() {
        return this.innerModel().primaryAzurePort();
    }

    public String secondaryAzurePort() {
        return this.innerModel().secondaryAzurePort();
    }

    public String sharedKey() {
        return this.innerModel().sharedKey();
    }

    public Integer vlanId() {
        return this.innerModel().vlanId();
    }

    public ExpressRouteCircuitPeeringConfig microsoftPeeringConfig() {
        return this.innerModel().microsoftPeeringConfig();
    }

    public ExpressRouteCircuitStats stats() {
        ExpressRouteCircuitStatsInner inner = this.innerModel().stats();
        if (inner != null) {
            return new ExpressRouteCircuitStatsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String gatewayManagerEtag() {
        return this.innerModel().gatewayManagerEtag();
    }

    public String lastModifiedBy() {
        return this.innerModel().lastModifiedBy();
    }

    public SubResource routeFilter() {
        return this.innerModel().routeFilter();
    }

    public Ipv6ExpressRouteCircuitPeeringConfig ipv6PeeringConfig() {
        return this.innerModel().ipv6PeeringConfig();
    }

    public ExpressRouteConnectionId expressRouteConnection() {
        return this.innerModel().expressRouteConnection();
    }

    public List<ExpressRouteCircuitConnection> connections() {
        List<ExpressRouteCircuitConnectionInner> inner = this.innerModel().connections();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new ExpressRouteCircuitConnectionImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public List<PeerExpressRouteCircuitConnection> peeredConnections() {
        List<PeerExpressRouteCircuitConnectionInner> inner = this.innerModel().peeredConnections();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new PeerExpressRouteCircuitConnectionImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public ExpressRouteCircuitPeeringPropertiesFormatInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}
