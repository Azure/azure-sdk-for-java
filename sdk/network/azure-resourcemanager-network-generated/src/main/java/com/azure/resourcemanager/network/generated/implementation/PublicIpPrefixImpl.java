// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SubResource;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.models.PublicIpPrefixInner;
import com.azure.resourcemanager.network.generated.models.ExtendedLocation;
import com.azure.resourcemanager.network.generated.models.IpTag;
import com.azure.resourcemanager.network.generated.models.IpVersion;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;
import com.azure.resourcemanager.network.generated.models.PublicIpPrefix;
import com.azure.resourcemanager.network.generated.models.PublicIpPrefixSku;
import com.azure.resourcemanager.network.generated.models.ReferencedPublicIpAddress;
import com.azure.resourcemanager.network.generated.models.TagsObject;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class PublicIpPrefixImpl implements PublicIpPrefix, PublicIpPrefix.Definition, PublicIpPrefix.Update {
    private PublicIpPrefixInner innerObject;

    private final NetworkManager serviceManager;

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ExtendedLocation extendedLocation() {
        return this.innerModel().extendedLocation();
    }

    public PublicIpPrefixSku sku() {
        return this.innerModel().sku();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public List<String> zones() {
        List<String> inner = this.innerModel().zones();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public IpVersion publicIpAddressVersion() {
        return this.innerModel().publicIpAddressVersion();
    }

    public List<IpTag> ipTags() {
        List<IpTag> inner = this.innerModel().ipTags();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Integer prefixLength() {
        return this.innerModel().prefixLength();
    }

    public String ipPrefix() {
        return this.innerModel().ipPrefix();
    }

    public List<ReferencedPublicIpAddress> publicIpAddresses() {
        List<ReferencedPublicIpAddress> inner = this.innerModel().publicIpAddresses();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public SubResource loadBalancerFrontendIpConfiguration() {
        return this.innerModel().loadBalancerFrontendIpConfiguration();
    }

    public SubResource customIpPrefix() {
        return this.innerModel().customIpPrefix();
    }

    public String resourceGuid() {
        return this.innerModel().resourceGuid();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String id() {
        return this.innerModel().id();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public PublicIpPrefixInner innerModel() {
        return this.innerObject;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String publicIpPrefixName;

    private TagsObject updateParameters;

    public PublicIpPrefixImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public PublicIpPrefix create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPublicIpPrefixes()
                .createOrUpdate(resourceGroupName, publicIpPrefixName, this.innerModel(), Context.NONE);
        return this;
    }

    public PublicIpPrefix create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPublicIpPrefixes()
                .createOrUpdate(resourceGroupName, publicIpPrefixName, this.innerModel(), context);
        return this;
    }

    PublicIpPrefixImpl(String name, NetworkManager serviceManager) {
        this.innerObject = new PublicIpPrefixInner();
        this.serviceManager = serviceManager;
        this.publicIpPrefixName = name;
    }

    public PublicIpPrefixImpl update() {
        this.updateParameters = new TagsObject();
        return this;
    }

    public PublicIpPrefix apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPublicIpPrefixes()
                .updateTagsWithResponse(resourceGroupName, publicIpPrefixName, updateParameters, Context.NONE)
                .getValue();
        return this;
    }

    public PublicIpPrefix apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPublicIpPrefixes()
                .updateTagsWithResponse(resourceGroupName, publicIpPrefixName, updateParameters, context)
                .getValue();
        return this;
    }

    PublicIpPrefixImpl(PublicIpPrefixInner innerObject, NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.publicIpPrefixName = Utils.getValueFromIdByName(innerObject.id(), "publicIPPrefixes");
    }

    public PublicIpPrefix refresh() {
        String localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPublicIpPrefixes()
                .getByResourceGroupWithResponse(resourceGroupName, publicIpPrefixName, localExpand, Context.NONE)
                .getValue();
        return this;
    }

    public PublicIpPrefix refresh(Context context) {
        String localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPublicIpPrefixes()
                .getByResourceGroupWithResponse(resourceGroupName, publicIpPrefixName, localExpand, context)
                .getValue();
        return this;
    }

    public PublicIpPrefixImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public PublicIpPrefixImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public PublicIpPrefixImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public PublicIpPrefixImpl withExtendedLocation(ExtendedLocation extendedLocation) {
        this.innerModel().withExtendedLocation(extendedLocation);
        return this;
    }

    public PublicIpPrefixImpl withSku(PublicIpPrefixSku sku) {
        this.innerModel().withSku(sku);
        return this;
    }

    public PublicIpPrefixImpl withZones(List<String> zones) {
        this.innerModel().withZones(zones);
        return this;
    }

    public PublicIpPrefixImpl withPublicIpAddressVersion(IpVersion publicIpAddressVersion) {
        this.innerModel().withPublicIpAddressVersion(publicIpAddressVersion);
        return this;
    }

    public PublicIpPrefixImpl withIpTags(List<IpTag> ipTags) {
        this.innerModel().withIpTags(ipTags);
        return this;
    }

    public PublicIpPrefixImpl withPrefixLength(Integer prefixLength) {
        this.innerModel().withPrefixLength(prefixLength);
        return this;
    }

    public PublicIpPrefixImpl withCustomIpPrefix(SubResource customIpPrefix) {
        this.innerModel().withCustomIpPrefix(customIpPrefix);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
