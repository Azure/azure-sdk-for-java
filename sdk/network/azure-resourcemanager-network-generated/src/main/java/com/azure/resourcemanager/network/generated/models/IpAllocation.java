// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.management.Region;
import com.azure.core.management.SubResource;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.IpAllocationInner;
import java.util.Map;

/** An immutable client-side representation of IpAllocation. */
public interface IpAllocation {
    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the etag property: A unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the subnet property: The Subnet that using the prefix of this IpAllocation resource.
     *
     * @return the subnet value.
     */
    SubResource subnet();

    /**
     * Gets the virtualNetwork property: The VirtualNetwork that using the prefix of this IpAllocation resource.
     *
     * @return the virtualNetwork value.
     */
    SubResource virtualNetwork();

    /**
     * Gets the typePropertiesType property: The type for the IpAllocation.
     *
     * @return the typePropertiesType value.
     */
    IpAllocationType typePropertiesType();

    /**
     * Gets the prefix property: The address prefix for the IpAllocation.
     *
     * @return the prefix value.
     */
    String prefix();

    /**
     * Gets the prefixLength property: The address prefix length for the IpAllocation.
     *
     * @return the prefixLength value.
     */
    Integer prefixLength();

    /**
     * Gets the prefixType property: The address prefix Type for the IpAllocation.
     *
     * @return the prefixType value.
     */
    IpVersion prefixType();

    /**
     * Gets the ipamAllocationId property: The IPAM allocation ID.
     *
     * @return the ipamAllocationId value.
     */
    String ipamAllocationId();

    /**
     * Gets the allocationTags property: IpAllocation tags.
     *
     * @return the allocationTags value.
     */
    Map<String, String> allocationTags();

    /**
     * Gets the id property: Resource ID.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.IpAllocationInner object.
     *
     * @return the inner object.
     */
    IpAllocationInner innerModel();

    /** The entirety of the IpAllocation definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The IpAllocation definition stages. */
    interface DefinitionStages {
        /** The first stage of the IpAllocation definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the IpAllocation definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the IpAllocation definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the IpAllocation definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithTypePropertiesType,
                DefinitionStages.WithPrefix,
                DefinitionStages.WithPrefixLength,
                DefinitionStages.WithPrefixType,
                DefinitionStages.WithIpamAllocationId,
                DefinitionStages.WithAllocationTags {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            IpAllocation create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            IpAllocation create(Context context);
        }
        /** The stage of the IpAllocation definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the IpAllocation definition allowing to specify typePropertiesType. */
        interface WithTypePropertiesType {
            /**
             * Specifies the typePropertiesType property: The type for the IpAllocation..
             *
             * @param typePropertiesType The type for the IpAllocation.
             * @return the next definition stage.
             */
            WithCreate withTypePropertiesType(IpAllocationType typePropertiesType);
        }
        /** The stage of the IpAllocation definition allowing to specify prefix. */
        interface WithPrefix {
            /**
             * Specifies the prefix property: The address prefix for the IpAllocation..
             *
             * @param prefix The address prefix for the IpAllocation.
             * @return the next definition stage.
             */
            WithCreate withPrefix(String prefix);
        }
        /** The stage of the IpAllocation definition allowing to specify prefixLength. */
        interface WithPrefixLength {
            /**
             * Specifies the prefixLength property: The address prefix length for the IpAllocation..
             *
             * @param prefixLength The address prefix length for the IpAllocation.
             * @return the next definition stage.
             */
            WithCreate withPrefixLength(Integer prefixLength);
        }
        /** The stage of the IpAllocation definition allowing to specify prefixType. */
        interface WithPrefixType {
            /**
             * Specifies the prefixType property: The address prefix Type for the IpAllocation..
             *
             * @param prefixType The address prefix Type for the IpAllocation.
             * @return the next definition stage.
             */
            WithCreate withPrefixType(IpVersion prefixType);
        }
        /** The stage of the IpAllocation definition allowing to specify ipamAllocationId. */
        interface WithIpamAllocationId {
            /**
             * Specifies the ipamAllocationId property: The IPAM allocation ID..
             *
             * @param ipamAllocationId The IPAM allocation ID.
             * @return the next definition stage.
             */
            WithCreate withIpamAllocationId(String ipamAllocationId);
        }
        /** The stage of the IpAllocation definition allowing to specify allocationTags. */
        interface WithAllocationTags {
            /**
             * Specifies the allocationTags property: IpAllocation tags..
             *
             * @param allocationTags IpAllocation tags.
             * @return the next definition stage.
             */
            WithCreate withAllocationTags(Map<String, String> allocationTags);
        }
    }
    /**
     * Begins update for the IpAllocation resource.
     *
     * @return the stage of resource update.
     */
    IpAllocation.Update update();

    /** The template for IpAllocation update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        IpAllocation apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        IpAllocation apply(Context context);
    }
    /** The IpAllocation update stages. */
    interface UpdateStages {
        /** The stage of the IpAllocation update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    IpAllocation refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    IpAllocation refresh(Context context);
}
