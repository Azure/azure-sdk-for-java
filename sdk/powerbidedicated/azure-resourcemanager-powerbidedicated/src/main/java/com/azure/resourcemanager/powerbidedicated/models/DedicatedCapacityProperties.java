// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbidedicated.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Properties of Dedicated Capacity resource. */
@Immutable
public final class DedicatedCapacityProperties extends DedicatedCapacityMutableProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DedicatedCapacityProperties.class);

    /*
     * The current state of PowerBI Dedicated resource. The state is to
     * indicate more states outside of resource provisioning.
     */
    @JsonProperty(value = "state", access = JsonProperty.Access.WRITE_ONLY)
    private State state;

    /*
     * The current deployment state of PowerBI Dedicated resource. The
     * provisioningState is to indicate states for resource provisioning.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private CapacityProvisioningState provisioningState;

    /**
     * Get the state property: The current state of PowerBI Dedicated resource. The state is to indicate more states
     * outside of resource provisioning.
     *
     * @return the state value.
     */
    public State state() {
        return this.state;
    }

    /**
     * Get the provisioningState property: The current deployment state of PowerBI Dedicated resource. The
     * provisioningState is to indicate states for resource provisioning.
     *
     * @return the provisioningState value.
     */
    public CapacityProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /** {@inheritDoc} */
    @Override
    public DedicatedCapacityProperties withAdministration(DedicatedCapacityAdministrators administration) {
        super.withAdministration(administration);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public DedicatedCapacityProperties withMode(Mode mode) {
        super.withMode(mode);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
