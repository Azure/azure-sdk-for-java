// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbidedicated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.powerbidedicated.models.CapacityProvisioningState;
import com.azure.resourcemanager.powerbidedicated.models.CapacitySku;
import com.azure.resourcemanager.powerbidedicated.models.DedicatedCapacityAdministrators;
import com.azure.resourcemanager.powerbidedicated.models.Mode;
import com.azure.resourcemanager.powerbidedicated.models.State;
import java.io.IOException;
import java.util.Map;

/**
 * Represents an instance of a Dedicated Capacity resource.
 */
@Fluent
public final class DedicatedCapacityInner extends Resource {
    /*
     * The SKU of the PowerBI Dedicated capacity resource.
     */
    private CapacitySku sku;

    /*
     * Properties of the provision operation request.
     */
    private DedicatedCapacityProperties innerProperties;

    /*
     * Metadata pertaining to creation and last modification of the resource.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of DedicatedCapacityInner class.
     */
    public DedicatedCapacityInner() {
    }

    /**
     * Get the sku property: The SKU of the PowerBI Dedicated capacity resource.
     * 
     * @return the sku value.
     */
    public CapacitySku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: The SKU of the PowerBI Dedicated capacity resource.
     * 
     * @param sku the sku value to set.
     * @return the DedicatedCapacityInner object itself.
     */
    public DedicatedCapacityInner withSku(CapacitySku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the innerProperties property: Properties of the provision operation request.
     * 
     * @return the innerProperties value.
     */
    private DedicatedCapacityProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of the resource.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Set the systemData property: Metadata pertaining to creation and last modification of the resource.
     * 
     * @param systemData the systemData value to set.
     * @return the DedicatedCapacityInner object itself.
     */
    public DedicatedCapacityInner withSystemData(SystemData systemData) {
        this.systemData = systemData;
        return this;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DedicatedCapacityInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DedicatedCapacityInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the state property: The current state of PowerBI Dedicated resource. The state is to indicate more states
     * outside of resource provisioning.
     * 
     * @return the state value.
     */
    public State state() {
        return this.innerProperties() == null ? null : this.innerProperties().state();
    }

    /**
     * Get the provisioningState property: The current deployment state of PowerBI Dedicated resource. The
     * provisioningState is to indicate states for resource provisioning.
     * 
     * @return the provisioningState value.
     */
    public CapacityProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the administration property: A collection of Dedicated capacity administrators.
     * 
     * @return the administration value.
     */
    public DedicatedCapacityAdministrators administration() {
        return this.innerProperties() == null ? null : this.innerProperties().administration();
    }

    /**
     * Set the administration property: A collection of Dedicated capacity administrators.
     * 
     * @param administration the administration value to set.
     * @return the DedicatedCapacityInner object itself.
     */
    public DedicatedCapacityInner withAdministration(DedicatedCapacityAdministrators administration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DedicatedCapacityProperties();
        }
        this.innerProperties().withAdministration(administration);
        return this;
    }

    /**
     * Get the mode property: Specifies the generation of the Power BI Embedded capacity. If no value is specified, the
     * default value 'Gen2' is used. [Learn
     * More](https://docs.microsoft.com/power-bi/developer/embedded/power-bi-embedded-generation-2).
     * 
     * @return the mode value.
     */
    public Mode mode() {
        return this.innerProperties() == null ? null : this.innerProperties().mode();
    }

    /**
     * Set the mode property: Specifies the generation of the Power BI Embedded capacity. If no value is specified, the
     * default value 'Gen2' is used. [Learn
     * More](https://docs.microsoft.com/power-bi/developer/embedded/power-bi-embedded-generation-2).
     * 
     * @param mode the mode value to set.
     * @return the DedicatedCapacityInner object itself.
     */
    public DedicatedCapacityInner withMode(Mode mode) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DedicatedCapacityProperties();
        }
        this.innerProperties().withMode(mode);
        return this;
    }

    /**
     * Get the tenantId property: Tenant ID for the capacity. Used for creating Pro Plus capacity.
     * 
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.innerProperties() == null ? null : this.innerProperties().tenantId();
    }

    /**
     * Get the friendlyName property: Capacity name.
     * 
     * @return the friendlyName value.
     */
    public String friendlyName() {
        return this.innerProperties() == null ? null : this.innerProperties().friendlyName();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sku() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property sku in model DedicatedCapacityInner"));
        } else {
            sku().validate();
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DedicatedCapacityInner.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("location", location());
        jsonWriter.writeMapField("tags", tags(), (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("sku", this.sku);
        jsonWriter.writeJsonField("properties", this.innerProperties);
        jsonWriter.writeJsonField("systemData", this.systemData);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DedicatedCapacityInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DedicatedCapacityInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DedicatedCapacityInner.
     */
    public static DedicatedCapacityInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DedicatedCapacityInner deserializedDedicatedCapacityInner = new DedicatedCapacityInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedDedicatedCapacityInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedDedicatedCapacityInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedDedicatedCapacityInner.type = reader.getString();
                } else if ("location".equals(fieldName)) {
                    deserializedDedicatedCapacityInner.withLocation(reader.getString());
                } else if ("tags".equals(fieldName)) {
                    Map<String, String> tags = reader.readMap(reader1 -> reader1.getString());
                    deserializedDedicatedCapacityInner.withTags(tags);
                } else if ("sku".equals(fieldName)) {
                    deserializedDedicatedCapacityInner.sku = CapacitySku.fromJson(reader);
                } else if ("properties".equals(fieldName)) {
                    deserializedDedicatedCapacityInner.innerProperties = DedicatedCapacityProperties.fromJson(reader);
                } else if ("systemData".equals(fieldName)) {
                    deserializedDedicatedCapacityInner.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDedicatedCapacityInner;
        });
    }
}
