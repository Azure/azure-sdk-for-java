// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbidedicated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.powerbidedicated.PowerBIDedicatedManager;
import com.azure.resourcemanager.powerbidedicated.models.CapacitySkuTier;
import com.azure.resourcemanager.powerbidedicated.models.SkuEnumerationForNewResourceResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CapacitiesListSkusWithResponseMockTests {
    @Test
    public void testListSkusWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"hseyvju\",\"tier\":\"AutoPremiumHost\",\"capacity\":2138659261},{\"name\":\"hspkdeemao\",\"tier\":\"Premium\",\"capacity\":1437529213}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PowerBIDedicatedManager manager = PowerBIDedicatedManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SkuEnumerationForNewResourceResult response
            = manager.capacities().listSkusWithResponse(com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("hseyvju", response.value().get(0).name());
        Assertions.assertEquals(CapacitySkuTier.AUTO_PREMIUM_HOST, response.value().get(0).tier());
        Assertions.assertEquals(2138659261, response.value().get(0).capacity());
    }
}
