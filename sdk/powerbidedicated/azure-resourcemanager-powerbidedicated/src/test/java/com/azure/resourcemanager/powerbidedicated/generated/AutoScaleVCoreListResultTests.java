// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbidedicated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.powerbidedicated.fluent.models.AutoScaleVCoreInner;
import com.azure.resourcemanager.powerbidedicated.models.AutoScaleVCoreListResult;
import com.azure.resourcemanager.powerbidedicated.models.AutoScaleVCoreSku;
import com.azure.resourcemanager.powerbidedicated.models.VCoreSkuTier;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AutoScaleVCoreListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutoScaleVCoreListResult model = BinaryData.fromString(
            "{\"value\":[{\"sku\":{\"name\":\"rnkcqvyxlw\",\"tier\":\"AutoScale\",\"capacity\":658066876},\"properties\":{\"capacityObjectId\":\"hoqqnwvlr\",\"provisioningState\":\"Succeeded\",\"capacityLimit\":866198392},\"location\":\"eun\",\"tags\":{\"koklya\":\"hgyxzkonoc\",\"ewrmjmwvvjektc\":\"uconuqszfkbey\",\"frzpwvlqdqgb\":\"senhwlrs\",\"fcivfsnkym\":\"qylihkaetckt\"},\"id\":\"ctq\",\"name\":\"jf\",\"type\":\"ebrjcxe\"},{\"sku\":{\"name\":\"fuwutttxf\",\"tier\":\"AutoScale\",\"capacity\":218350030},\"properties\":{\"capacityObjectId\":\"hxepcyvahfnlj\",\"provisioningState\":\"Succeeded\",\"capacityLimit\":197436298},\"location\":\"uujqgidokgjljyo\",\"tags\":{\"hbijhtxfvgxb\":\"cltbgsncghkjesz\",\"eh\":\"smx\",\"qkkrb\":\"pvecxgodeb\"},\"id\":\"pukgriwflzlfb\",\"name\":\"zpuzycisp\",\"type\":\"qzahmgkbrp\"},{\"sku\":{\"name\":\"y\",\"tier\":\"AutoScale\",\"capacity\":1421404379},\"properties\":{\"capacityObjectId\":\"qkpikadrgvtqagnb\",\"provisioningState\":\"Succeeded\",\"capacityLimit\":850338934},\"location\":\"gg\",\"tags\":{\"vpnazzm\":\"fsiarbutr\"},\"id\":\"jrunmpxtt\",\"name\":\"bh\",\"type\":\"bnlankxmyskpb\"}]}")
            .toObject(AutoScaleVCoreListResult.class);
        Assertions.assertEquals("eun", model.value().get(0).location());
        Assertions.assertEquals("hgyxzkonoc", model.value().get(0).tags().get("koklya"));
        Assertions.assertEquals("rnkcqvyxlw", model.value().get(0).sku().name());
        Assertions.assertEquals(VCoreSkuTier.AUTO_SCALE, model.value().get(0).sku().tier());
        Assertions.assertEquals(658066876, model.value().get(0).sku().capacity());
        Assertions.assertEquals("hoqqnwvlr", model.value().get(0).capacityObjectId());
        Assertions.assertEquals(866198392, model.value().get(0).capacityLimit());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AutoScaleVCoreListResult model = new AutoScaleVCoreListResult().withValue(Arrays.asList(
            new AutoScaleVCoreInner().withLocation("eun")
                .withTags(mapOf("koklya", "hgyxzkonoc", "ewrmjmwvvjektc", "uconuqszfkbey", "frzpwvlqdqgb", "senhwlrs",
                    "fcivfsnkym", "qylihkaetckt"))
                .withSku(new AutoScaleVCoreSku().withName("rnkcqvyxlw")
                    .withTier(VCoreSkuTier.AUTO_SCALE)
                    .withCapacity(658066876))
                .withCapacityObjectId("hoqqnwvlr")
                .withCapacityLimit(866198392),
            new AutoScaleVCoreInner().withLocation("uujqgidokgjljyo")
                .withTags(mapOf("hbijhtxfvgxb", "cltbgsncghkjesz", "eh", "smx", "qkkrb", "pvecxgodeb"))
                .withSku(new AutoScaleVCoreSku().withName("fuwutttxf")
                    .withTier(VCoreSkuTier.AUTO_SCALE)
                    .withCapacity(218350030))
                .withCapacityObjectId("hxepcyvahfnlj")
                .withCapacityLimit(197436298),
            new AutoScaleVCoreInner().withLocation("gg")
                .withTags(mapOf("vpnazzm", "fsiarbutr"))
                .withSku(
                    new AutoScaleVCoreSku().withName("y").withTier(VCoreSkuTier.AUTO_SCALE).withCapacity(1421404379))
                .withCapacityObjectId("qkpikadrgvtqagnb")
                .withCapacityLimit(850338934)));
        model = BinaryData.fromObject(model).toObject(AutoScaleVCoreListResult.class);
        Assertions.assertEquals("eun", model.value().get(0).location());
        Assertions.assertEquals("hgyxzkonoc", model.value().get(0).tags().get("koklya"));
        Assertions.assertEquals("rnkcqvyxlw", model.value().get(0).sku().name());
        Assertions.assertEquals(VCoreSkuTier.AUTO_SCALE, model.value().get(0).sku().tier());
        Assertions.assertEquals(658066876, model.value().get(0).sku().capacity());
        Assertions.assertEquals("hoqqnwvlr", model.value().get(0).capacityObjectId());
        Assertions.assertEquals(866198392, model.value().get(0).capacityLimit());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
