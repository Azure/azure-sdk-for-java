/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.powerbidedicated.v2017_10_01.implementation;

import com.microsoft.azure.management.powerbidedicated.v2017_10_01.DedicatedCapacityAdministrators;
import com.microsoft.azure.management.powerbidedicated.v2017_10_01.State;
import com.microsoft.azure.management.powerbidedicated.v2017_10_01.ProvisioningState;
import com.microsoft.azure.management.powerbidedicated.v2017_10_01.ResourceSku;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.Resource;

/**
 * Represents an instance of a Dedicated Capacity resource.
 */
@JsonFlatten
public class DedicatedCapacityInner extends Resource {
    /**
     * A collection of Dedicated capacity administrators.
     */
    @JsonProperty(value = "properties.administration")
    private DedicatedCapacityAdministrators administration;

    /**
     * The current state of PowerBI Dedicated resource. The state is to
     * indicate more states outside of resource provisioning. Possible values
     * include: 'Deleting', 'Succeeded', 'Failed', 'Paused', 'Suspended',
     * 'Provisioning', 'Updating', 'Suspending', 'Pausing', 'Resuming',
     * 'Preparing', 'Scaling'.
     */
    @JsonProperty(value = "properties.state", access = JsonProperty.Access.WRITE_ONLY)
    private State state;

    /**
     * The current deployment state of PowerBI Dedicated resource. The
     * provisioningState is to indicate states for resource provisioning.
     * Possible values include: 'Deleting', 'Succeeded', 'Failed', 'Paused',
     * 'Suspended', 'Provisioning', 'Updating', 'Suspending', 'Pausing',
     * 'Resuming', 'Preparing', 'Scaling'.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * The SKU of the PowerBI Dedicated resource.
     */
    @JsonProperty(value = "sku", required = true)
    private ResourceSku sku;

    /**
     * Get a collection of Dedicated capacity administrators.
     *
     * @return the administration value
     */
    public DedicatedCapacityAdministrators administration() {
        return this.administration;
    }

    /**
     * Set a collection of Dedicated capacity administrators.
     *
     * @param administration the administration value to set
     * @return the DedicatedCapacityInner object itself.
     */
    public DedicatedCapacityInner withAdministration(DedicatedCapacityAdministrators administration) {
        this.administration = administration;
        return this;
    }

    /**
     * Get the current state of PowerBI Dedicated resource. The state is to indicate more states outside of resource provisioning. Possible values include: 'Deleting', 'Succeeded', 'Failed', 'Paused', 'Suspended', 'Provisioning', 'Updating', 'Suspending', 'Pausing', 'Resuming', 'Preparing', 'Scaling'.
     *
     * @return the state value
     */
    public State state() {
        return this.state;
    }

    /**
     * Get the current deployment state of PowerBI Dedicated resource. The provisioningState is to indicate states for resource provisioning. Possible values include: 'Deleting', 'Succeeded', 'Failed', 'Paused', 'Suspended', 'Provisioning', 'Updating', 'Suspending', 'Pausing', 'Resuming', 'Preparing', 'Scaling'.
     *
     * @return the provisioningState value
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the SKU of the PowerBI Dedicated resource.
     *
     * @return the sku value
     */
    public ResourceSku sku() {
        return this.sku;
    }

    /**
     * Set the SKU of the PowerBI Dedicated resource.
     *
     * @param sku the sku value to set
     * @return the DedicatedCapacityInner object itself.
     */
    public DedicatedCapacityInner withSku(ResourceSku sku) {
        this.sku = sku;
        return this;
    }

}
