/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.confluent.v2020_03_01_preview.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.confluent.v2020_03_01_preview.OrganizationResource;
import rx.Observable;
import org.joda.time.DateTime;
import com.microsoft.azure.management.confluent.v2020_03_01_preview.ProvisionState;
import com.microsoft.azure.management.confluent.v2020_03_01_preview.OrganizationResourcePropertiesOfferDetail;
import com.microsoft.azure.management.confluent.v2020_03_01_preview.OrganizationResourcePropertiesUserDetail;

class OrganizationResourceImpl extends GroupableResourceCoreImpl<OrganizationResource, OrganizationResourceInner, OrganizationResourceImpl, ConfluentManager> implements OrganizationResource, OrganizationResource.Definition, OrganizationResource.Update {
    OrganizationResourceImpl(String name, OrganizationResourceInner inner, ConfluentManager manager) {
        super(name, inner, manager);
    }

    @Override
    public Observable<OrganizationResource> createResourceAsync() {
        OrganizationsInner client = this.manager().inner().organizations();
        return client.createAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<OrganizationResource> updateResourceAsync() {
        OrganizationsInner client = this.manager().inner().organizations();
        return client.createAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<OrganizationResourceInner> getInnerAsync() {
        OrganizationsInner client = this.manager().inner().organizations();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public DateTime createdTime() {
        return this.inner().createdTime();
    }

    @Override
    public OrganizationResourcePropertiesOfferDetail offerDetail() {
        return this.inner().offerDetail();
    }

    @Override
    public String organizationId() {
        return this.inner().organizationId();
    }

    @Override
    public ProvisionState provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public String ssoUrl() {
        return this.inner().ssoUrl();
    }

    @Override
    public OrganizationResourcePropertiesUserDetail userDetail() {
        return this.inner().userDetail();
    }

    @Override
    public OrganizationResourceImpl withOfferDetail(OrganizationResourcePropertiesOfferDetail offerDetail) {
        this.inner().withOfferDetail(offerDetail);
        return this;
    }

    @Override
    public OrganizationResourceImpl withProvisioningState(ProvisionState provisioningState) {
        this.inner().withProvisioningState(provisioningState);
        return this;
    }

    @Override
    public OrganizationResourceImpl withUserDetail(OrganizationResourcePropertiesUserDetail userDetail) {
        this.inner().withUserDetail(userDetail);
        return this;
    }

}
