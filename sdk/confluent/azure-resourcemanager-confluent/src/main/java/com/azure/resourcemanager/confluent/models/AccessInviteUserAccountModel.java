// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Invite User Account model.
 */
@Fluent
public final class AccessInviteUserAccountModel {
    /*
     * Id of the organization
     */
    @JsonProperty(value = "organizationId")
    private String organizationId;

    /*
     * Email of the logged in user
     */
    @JsonProperty(value = "email")
    private String email;

    /*
     * Upn of the logged in user
     */
    @JsonProperty(value = "upn")
    private String upn;

    /*
     * Details of the user who is being invited
     */
    @JsonProperty(value = "invitedUserDetails")
    private AccessInvitedUserDetails invitedUserDetails;

    /**
     * Creates an instance of AccessInviteUserAccountModel class.
     */
    public AccessInviteUserAccountModel() {
    }

    /**
     * Get the organizationId property: Id of the organization.
     * 
     * @return the organizationId value.
     */
    public String organizationId() {
        return this.organizationId;
    }

    /**
     * Set the organizationId property: Id of the organization.
     * 
     * @param organizationId the organizationId value to set.
     * @return the AccessInviteUserAccountModel object itself.
     */
    public AccessInviteUserAccountModel withOrganizationId(String organizationId) {
        this.organizationId = organizationId;
        return this;
    }

    /**
     * Get the email property: Email of the logged in user.
     * 
     * @return the email value.
     */
    public String email() {
        return this.email;
    }

    /**
     * Set the email property: Email of the logged in user.
     * 
     * @param email the email value to set.
     * @return the AccessInviteUserAccountModel object itself.
     */
    public AccessInviteUserAccountModel withEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Get the upn property: Upn of the logged in user.
     * 
     * @return the upn value.
     */
    public String upn() {
        return this.upn;
    }

    /**
     * Set the upn property: Upn of the logged in user.
     * 
     * @param upn the upn value to set.
     * @return the AccessInviteUserAccountModel object itself.
     */
    public AccessInviteUserAccountModel withUpn(String upn) {
        this.upn = upn;
        return this;
    }

    /**
     * Get the invitedUserDetails property: Details of the user who is being invited.
     * 
     * @return the invitedUserDetails value.
     */
    public AccessInvitedUserDetails invitedUserDetails() {
        return this.invitedUserDetails;
    }

    /**
     * Set the invitedUserDetails property: Details of the user who is being invited.
     * 
     * @param invitedUserDetails the invitedUserDetails value to set.
     * @return the AccessInviteUserAccountModel object itself.
     */
    public AccessInviteUserAccountModel withInvitedUserDetails(AccessInvitedUserDetails invitedUserDetails) {
        this.invitedUserDetails = invitedUserDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (invitedUserDetails() != null) {
            invitedUserDetails().validate();
        }
    }
}
