// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.confluent.models.SCMetadataEntity;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Details about environment name, metadata and environment id of an environment.
 */
@Fluent
public final class SCEnvironmentRecordInner {
    /*
     * Type of environment
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Id of the environment
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Environment properties
     */
    @JsonProperty(value = "properties")
    private EnvironmentProperties innerProperties;

    /*
     * Display name of the environment
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Creates an instance of SCEnvironmentRecordInner class.
     */
    public SCEnvironmentRecordInner() {
    }

    /**
     * Get the kind property: Type of environment.
     * 
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Type of environment.
     * 
     * @param kind the kind value to set.
     * @return the SCEnvironmentRecordInner object itself.
     */
    public SCEnvironmentRecordInner withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Id of the environment.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Id of the environment.
     * 
     * @param id the id value to set.
     * @return the SCEnvironmentRecordInner object itself.
     */
    public SCEnvironmentRecordInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the innerProperties property: Environment properties.
     * 
     * @return the innerProperties value.
     */
    private EnvironmentProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the name property: Display name of the environment.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Display name of the environment.
     * 
     * @param name the name value to set.
     * @return the SCEnvironmentRecordInner object itself.
     */
    public SCEnvironmentRecordInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the metadata property: Metadata of the record.
     * 
     * @return the metadata value.
     */
    public SCMetadataEntity metadata() {
        return this.innerProperties() == null ? null : this.innerProperties().metadata();
    }

    /**
     * Set the metadata property: Metadata of the record.
     * 
     * @param metadata the metadata value to set.
     * @return the SCEnvironmentRecordInner object itself.
     */
    public SCEnvironmentRecordInner withMetadata(SCMetadataEntity metadata) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EnvironmentProperties();
        }
        this.innerProperties().withMetadata(metadata);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
