// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Metadata of the list.
 */
@Fluent
public final class ConfluentListMetadata implements JsonSerializable<ConfluentListMetadata> {
    /*
     * First page of the list
     */
    private String first;

    /*
     * Last page of the list
     */
    private String last;

    /*
     * Previous page of the list
     */
    private String prev;

    /*
     * Next page of the list
     */
    private String next;

    /*
     * Total size of the list
     */
    private Integer totalSize;

    /**
     * Creates an instance of ConfluentListMetadata class.
     */
    public ConfluentListMetadata() {
    }

    /**
     * Get the first property: First page of the list.
     * 
     * @return the first value.
     */
    public String first() {
        return this.first;
    }

    /**
     * Set the first property: First page of the list.
     * 
     * @param first the first value to set.
     * @return the ConfluentListMetadata object itself.
     */
    public ConfluentListMetadata withFirst(String first) {
        this.first = first;
        return this;
    }

    /**
     * Get the last property: Last page of the list.
     * 
     * @return the last value.
     */
    public String last() {
        return this.last;
    }

    /**
     * Set the last property: Last page of the list.
     * 
     * @param last the last value to set.
     * @return the ConfluentListMetadata object itself.
     */
    public ConfluentListMetadata withLast(String last) {
        this.last = last;
        return this;
    }

    /**
     * Get the prev property: Previous page of the list.
     * 
     * @return the prev value.
     */
    public String prev() {
        return this.prev;
    }

    /**
     * Set the prev property: Previous page of the list.
     * 
     * @param prev the prev value to set.
     * @return the ConfluentListMetadata object itself.
     */
    public ConfluentListMetadata withPrev(String prev) {
        this.prev = prev;
        return this;
    }

    /**
     * Get the next property: Next page of the list.
     * 
     * @return the next value.
     */
    public String next() {
        return this.next;
    }

    /**
     * Set the next property: Next page of the list.
     * 
     * @param next the next value to set.
     * @return the ConfluentListMetadata object itself.
     */
    public ConfluentListMetadata withNext(String next) {
        this.next = next;
        return this;
    }

    /**
     * Get the totalSize property: Total size of the list.
     * 
     * @return the totalSize value.
     */
    public Integer totalSize() {
        return this.totalSize;
    }

    /**
     * Set the totalSize property: Total size of the list.
     * 
     * @param totalSize the totalSize value to set.
     * @return the ConfluentListMetadata object itself.
     */
    public ConfluentListMetadata withTotalSize(Integer totalSize) {
        this.totalSize = totalSize;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("first", this.first);
        jsonWriter.writeStringField("last", this.last);
        jsonWriter.writeStringField("prev", this.prev);
        jsonWriter.writeStringField("next", this.next);
        jsonWriter.writeNumberField("total_size", this.totalSize);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ConfluentListMetadata from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ConfluentListMetadata if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ConfluentListMetadata.
     */
    public static ConfluentListMetadata fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ConfluentListMetadata deserializedConfluentListMetadata = new ConfluentListMetadata();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("first".equals(fieldName)) {
                    deserializedConfluentListMetadata.first = reader.getString();
                } else if ("last".equals(fieldName)) {
                    deserializedConfluentListMetadata.last = reader.getString();
                } else if ("prev".equals(fieldName)) {
                    deserializedConfluentListMetadata.prev = reader.getString();
                } else if ("next".equals(fieldName)) {
                    deserializedConfluentListMetadata.next = reader.getString();
                } else if ("total_size".equals(fieldName)) {
                    deserializedConfluentListMetadata.totalSize = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedConfluentListMetadata;
        });
    }
}
