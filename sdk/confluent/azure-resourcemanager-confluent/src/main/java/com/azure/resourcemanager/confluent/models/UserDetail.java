// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Subscriber detail.
 */
@Fluent
public final class UserDetail {
    /*
     * First name
     */
    @JsonProperty(value = "firstName")
    private String firstName;

    /*
     * Last name
     */
    @JsonProperty(value = "lastName")
    private String lastName;

    /*
     * Email address
     */
    @JsonProperty(value = "emailAddress", required = true)
    private String emailAddress;

    /*
     * User principal name
     */
    @JsonProperty(value = "userPrincipalName")
    private String userPrincipalName;

    /*
     * AAD email address
     */
    @JsonProperty(value = "aadEmail")
    private String aadEmail;

    /**
     * Creates an instance of UserDetail class.
     */
    public UserDetail() {
    }

    /**
     * Get the firstName property: First name.
     * 
     * @return the firstName value.
     */
    public String firstName() {
        return this.firstName;
    }

    /**
     * Set the firstName property: First name.
     * 
     * @param firstName the firstName value to set.
     * @return the UserDetail object itself.
     */
    public UserDetail withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    /**
     * Get the lastName property: Last name.
     * 
     * @return the lastName value.
     */
    public String lastName() {
        return this.lastName;
    }

    /**
     * Set the lastName property: Last name.
     * 
     * @param lastName the lastName value to set.
     * @return the UserDetail object itself.
     */
    public UserDetail withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    /**
     * Get the emailAddress property: Email address.
     * 
     * @return the emailAddress value.
     */
    public String emailAddress() {
        return this.emailAddress;
    }

    /**
     * Set the emailAddress property: Email address.
     * 
     * @param emailAddress the emailAddress value to set.
     * @return the UserDetail object itself.
     */
    public UserDetail withEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
        return this;
    }

    /**
     * Get the userPrincipalName property: User principal name.
     * 
     * @return the userPrincipalName value.
     */
    public String userPrincipalName() {
        return this.userPrincipalName;
    }

    /**
     * Set the userPrincipalName property: User principal name.
     * 
     * @param userPrincipalName the userPrincipalName value to set.
     * @return the UserDetail object itself.
     */
    public UserDetail withUserPrincipalName(String userPrincipalName) {
        this.userPrincipalName = userPrincipalName;
        return this;
    }

    /**
     * Get the aadEmail property: AAD email address.
     * 
     * @return the aadEmail value.
     */
    public String aadEmail() {
        return this.aadEmail;
    }

    /**
     * Set the aadEmail property: AAD email address.
     * 
     * @param aadEmail the aadEmail value to set.
     * @return the UserDetail object itself.
     */
    public UserDetail withAadEmail(String aadEmail) {
        this.aadEmail = aadEmail;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (emailAddress() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property emailAddress in model UserDetail"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(UserDetail.class);
}
