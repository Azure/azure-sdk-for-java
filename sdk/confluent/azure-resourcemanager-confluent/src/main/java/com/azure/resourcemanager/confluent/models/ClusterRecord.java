// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Details of cluster record.
 */
@Fluent
public final class ClusterRecord {
    /*
     * Type of cluster
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Id of the cluster
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Metadata of the record
     */
    @JsonProperty(value = "metadata")
    private MetadataEntity metadata;

    /*
     * Display name of the cluster
     */
    @JsonProperty(value = "display_name")
    private String displayName;

    /*
     * Specification of the cluster
     */
    @JsonProperty(value = "spec")
    private ClusterSpecEntity spec;

    /*
     * Specification of the cluster
     */
    @JsonProperty(value = "status")
    private ClusterStatusEntity status;

    /**
     * Creates an instance of ClusterRecord class.
     */
    public ClusterRecord() {
    }

    /**
     * Get the kind property: Type of cluster.
     * 
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Type of cluster.
     * 
     * @param kind the kind value to set.
     * @return the ClusterRecord object itself.
     */
    public ClusterRecord withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Id of the cluster.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Id of the cluster.
     * 
     * @param id the id value to set.
     * @return the ClusterRecord object itself.
     */
    public ClusterRecord withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the metadata property: Metadata of the record.
     * 
     * @return the metadata value.
     */
    public MetadataEntity metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: Metadata of the record.
     * 
     * @param metadata the metadata value to set.
     * @return the ClusterRecord object itself.
     */
    public ClusterRecord withMetadata(MetadataEntity metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get the displayName property: Display name of the cluster.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Display name of the cluster.
     * 
     * @param displayName the displayName value to set.
     * @return the ClusterRecord object itself.
     */
    public ClusterRecord withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the spec property: Specification of the cluster.
     * 
     * @return the spec value.
     */
    public ClusterSpecEntity spec() {
        return this.spec;
    }

    /**
     * Set the spec property: Specification of the cluster.
     * 
     * @param spec the spec value to set.
     * @return the ClusterRecord object itself.
     */
    public ClusterRecord withSpec(ClusterSpecEntity spec) {
        this.spec = spec;
        return this;
    }

    /**
     * Get the status property: Specification of the cluster.
     * 
     * @return the status value.
     */
    public ClusterStatusEntity status() {
        return this.status;
    }

    /**
     * Set the status property: Specification of the cluster.
     * 
     * @param status the status value to set.
     * @return the ClusterRecord object itself.
     */
    public ClusterRecord withStatus(ClusterStatusEntity status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (metadata() != null) {
            metadata().validate();
        }
        if (spec() != null) {
            spec().validate();
        }
        if (status() != null) {
            status().validate();
        }
    }
}
