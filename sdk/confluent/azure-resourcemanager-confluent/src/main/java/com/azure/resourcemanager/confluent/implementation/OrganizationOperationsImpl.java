// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.confluent.ConfluentManager;
import com.azure.resourcemanager.confluent.fluent.OrganizationOperationsClient;
import com.azure.resourcemanager.confluent.fluent.models.OperationResultInner;
import com.azure.resourcemanager.confluent.models.OperationResult;
import com.azure.resourcemanager.confluent.models.OrganizationOperations;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class OrganizationOperationsImpl implements OrganizationOperations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(OrganizationOperationsImpl.class);

    private final OrganizationOperationsClient innerClient;

    private final ConfluentManager serviceManager;

    public OrganizationOperationsImpl(OrganizationOperationsClient innerClient, ConfluentManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<OperationResult> list() {
        PagedIterable<OperationResultInner> inner = this.serviceClient().list();
        return inner.mapPage(inner1 -> new OperationResultImpl(inner1, this.manager()));
    }

    public PagedIterable<OperationResult> list(Context context) {
        PagedIterable<OperationResultInner> inner = this.serviceClient().list(context);
        return inner.mapPage(inner1 -> new OperationResultImpl(inner1, this.manager()));
    }

    private OrganizationOperationsClient serviceClient() {
        return this.innerClient;
    }

    private ConfluentManager manager() {
        return this.serviceManager;
    }
}
