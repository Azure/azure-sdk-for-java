// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * API Key Resource details which can be kafka cluster or schema registry cluster.
 */
@Fluent
public final class ApiKeyResourceEntity implements JsonSerializable<ApiKeyResourceEntity> {
    /*
     * Id of the resource
     */
    private String id;

    /*
     * The environment of the api key
     */
    private String environment;

    /*
     * API URL for accessing or modifying the api key resource object
     */
    private String related;

    /*
     * CRN reference to the referred resource
     */
    private String resourceName;

    /*
     * Type of the owner which can be service or user account
     */
    private String kind;

    /**
     * Creates an instance of ApiKeyResourceEntity class.
     */
    public ApiKeyResourceEntity() {
    }

    /**
     * Get the id property: Id of the resource.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Id of the resource.
     * 
     * @param id the id value to set.
     * @return the ApiKeyResourceEntity object itself.
     */
    public ApiKeyResourceEntity withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the environment property: The environment of the api key.
     * 
     * @return the environment value.
     */
    public String environment() {
        return this.environment;
    }

    /**
     * Set the environment property: The environment of the api key.
     * 
     * @param environment the environment value to set.
     * @return the ApiKeyResourceEntity object itself.
     */
    public ApiKeyResourceEntity withEnvironment(String environment) {
        this.environment = environment;
        return this;
    }

    /**
     * Get the related property: API URL for accessing or modifying the api key resource object.
     * 
     * @return the related value.
     */
    public String related() {
        return this.related;
    }

    /**
     * Set the related property: API URL for accessing or modifying the api key resource object.
     * 
     * @param related the related value to set.
     * @return the ApiKeyResourceEntity object itself.
     */
    public ApiKeyResourceEntity withRelated(String related) {
        this.related = related;
        return this;
    }

    /**
     * Get the resourceName property: CRN reference to the referred resource.
     * 
     * @return the resourceName value.
     */
    public String resourceName() {
        return this.resourceName;
    }

    /**
     * Set the resourceName property: CRN reference to the referred resource.
     * 
     * @param resourceName the resourceName value to set.
     * @return the ApiKeyResourceEntity object itself.
     */
    public ApiKeyResourceEntity withResourceName(String resourceName) {
        this.resourceName = resourceName;
        return this;
    }

    /**
     * Get the kind property: Type of the owner which can be service or user account.
     * 
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Type of the owner which can be service or user account.
     * 
     * @param kind the kind value to set.
     * @return the ApiKeyResourceEntity object itself.
     */
    public ApiKeyResourceEntity withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeStringField("environment", this.environment);
        jsonWriter.writeStringField("related", this.related);
        jsonWriter.writeStringField("resourceName", this.resourceName);
        jsonWriter.writeStringField("kind", this.kind);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApiKeyResourceEntity from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApiKeyResourceEntity if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApiKeyResourceEntity.
     */
    public static ApiKeyResourceEntity fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApiKeyResourceEntity deserializedApiKeyResourceEntity = new ApiKeyResourceEntity();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedApiKeyResourceEntity.id = reader.getString();
                } else if ("environment".equals(fieldName)) {
                    deserializedApiKeyResourceEntity.environment = reader.getString();
                } else if ("related".equals(fieldName)) {
                    deserializedApiKeyResourceEntity.related = reader.getString();
                } else if ("resourceName".equals(fieldName)) {
                    deserializedApiKeyResourceEntity.resourceName = reader.getString();
                } else if ("kind".equals(fieldName)) {
                    deserializedApiKeyResourceEntity.kind = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApiKeyResourceEntity;
        });
    }
}
