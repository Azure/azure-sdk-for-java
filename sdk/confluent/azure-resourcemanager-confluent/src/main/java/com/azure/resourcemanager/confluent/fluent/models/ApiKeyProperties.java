// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.confluent.models.ApiKeySpecEntity;
import com.azure.resourcemanager.confluent.models.SCMetadataEntity;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * API Key Properties.
 */
@Fluent
public final class ApiKeyProperties {
    /*
     * Metadata of the record
     */
    @JsonProperty(value = "metadata")
    private SCMetadataEntity metadata;

    /*
     * Specification of the API Key
     */
    @JsonProperty(value = "spec")
    private ApiKeySpecEntity spec;

    /**
     * Creates an instance of ApiKeyProperties class.
     */
    public ApiKeyProperties() {
    }

    /**
     * Get the metadata property: Metadata of the record.
     * 
     * @return the metadata value.
     */
    public SCMetadataEntity metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: Metadata of the record.
     * 
     * @param metadata the metadata value to set.
     * @return the ApiKeyProperties object itself.
     */
    public ApiKeyProperties withMetadata(SCMetadataEntity metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get the spec property: Specification of the API Key.
     * 
     * @return the spec value.
     */
    public ApiKeySpecEntity spec() {
        return this.spec;
    }

    /**
     * Set the spec property: Specification of the API Key.
     * 
     * @param spec the spec value to set.
     * @return the ApiKeyProperties object itself.
     */
    public ApiKeyProperties withSpec(ApiKeySpecEntity spec) {
        this.spec = spec;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (metadata() != null) {
            metadata().validate();
        }
        if (spec() != null) {
            spec().validate();
        }
    }
}
