// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Record of the user.
 */
@Fluent
public final class UserRecord {
    /*
     * Type of account
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Id of the user
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Metadata of the record
     */
    @JsonProperty(value = "metadata")
    private MetadataEntity metadata;

    /*
     * Email of the user
     */
    @JsonProperty(value = "email")
    private String email;

    /*
     * Name of the user
     */
    @JsonProperty(value = "full_name")
    private String fullName;

    /*
     * Auth type of the user
     */
    @JsonProperty(value = "auth_type")
    private String authType;

    /**
     * Creates an instance of UserRecord class.
     */
    public UserRecord() {
    }

    /**
     * Get the kind property: Type of account.
     * 
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Type of account.
     * 
     * @param kind the kind value to set.
     * @return the UserRecord object itself.
     */
    public UserRecord withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Id of the user.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Id of the user.
     * 
     * @param id the id value to set.
     * @return the UserRecord object itself.
     */
    public UserRecord withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the metadata property: Metadata of the record.
     * 
     * @return the metadata value.
     */
    public MetadataEntity metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: Metadata of the record.
     * 
     * @param metadata the metadata value to set.
     * @return the UserRecord object itself.
     */
    public UserRecord withMetadata(MetadataEntity metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get the email property: Email of the user.
     * 
     * @return the email value.
     */
    public String email() {
        return this.email;
    }

    /**
     * Set the email property: Email of the user.
     * 
     * @param email the email value to set.
     * @return the UserRecord object itself.
     */
    public UserRecord withEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Get the fullName property: Name of the user.
     * 
     * @return the fullName value.
     */
    public String fullName() {
        return this.fullName;
    }

    /**
     * Set the fullName property: Name of the user.
     * 
     * @param fullName the fullName value to set.
     * @return the UserRecord object itself.
     */
    public UserRecord withFullName(String fullName) {
        this.fullName = fullName;
        return this;
    }

    /**
     * Get the authType property: Auth type of the user.
     * 
     * @return the authType value.
     */
    public String authType() {
        return this.authType;
    }

    /**
     * Set the authType property: Auth type of the user.
     * 
     * @param authType the authType value to set.
     * @return the UserRecord object itself.
     */
    public UserRecord withAuthType(String authType) {
        this.authType = authType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (metadata() != null) {
            metadata().validate();
        }
    }
}
