// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.confluent.models.SCMetadataEntity;
import com.azure.resourcemanager.confluent.models.SchemaRegistryClusterSpecEntity;
import com.azure.resourcemanager.confluent.models.SchemaRegistryClusterStatusEntity;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Details of schema registry cluster record.
 */
@Fluent
public final class SchemaRegistryClusterRecordInner {
    /*
     * Kind of the cluster
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Id of the cluster
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Schema Registry Cluster Properties
     */
    @JsonProperty(value = "properties")
    private SchemaRegistryClusterProperties innerProperties;

    /**
     * Creates an instance of SchemaRegistryClusterRecordInner class.
     */
    public SchemaRegistryClusterRecordInner() {
    }

    /**
     * Get the kind property: Kind of the cluster.
     * 
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Kind of the cluster.
     * 
     * @param kind the kind value to set.
     * @return the SchemaRegistryClusterRecordInner object itself.
     */
    public SchemaRegistryClusterRecordInner withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Id of the cluster.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Id of the cluster.
     * 
     * @param id the id value to set.
     * @return the SchemaRegistryClusterRecordInner object itself.
     */
    public SchemaRegistryClusterRecordInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the innerProperties property: Schema Registry Cluster Properties.
     * 
     * @return the innerProperties value.
     */
    private SchemaRegistryClusterProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the metadata property: Metadata of the record.
     * 
     * @return the metadata value.
     */
    public SCMetadataEntity metadata() {
        return this.innerProperties() == null ? null : this.innerProperties().metadata();
    }

    /**
     * Set the metadata property: Metadata of the record.
     * 
     * @param metadata the metadata value to set.
     * @return the SchemaRegistryClusterRecordInner object itself.
     */
    public SchemaRegistryClusterRecordInner withMetadata(SCMetadataEntity metadata) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SchemaRegistryClusterProperties();
        }
        this.innerProperties().withMetadata(metadata);
        return this;
    }

    /**
     * Get the spec property: Specification of the schema registry cluster.
     * 
     * @return the spec value.
     */
    public SchemaRegistryClusterSpecEntity spec() {
        return this.innerProperties() == null ? null : this.innerProperties().spec();
    }

    /**
     * Set the spec property: Specification of the schema registry cluster.
     * 
     * @param spec the spec value to set.
     * @return the SchemaRegistryClusterRecordInner object itself.
     */
    public SchemaRegistryClusterRecordInner withSpec(SchemaRegistryClusterSpecEntity spec) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SchemaRegistryClusterProperties();
        }
        this.innerProperties().withSpec(spec);
        return this;
    }

    /**
     * Get the status property: Specification of the cluster status.
     * 
     * @return the status value.
     */
    public SchemaRegistryClusterStatusEntity status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Set the status property: Specification of the cluster status.
     * 
     * @param status the status value to set.
     * @return the SchemaRegistryClusterRecordInner object itself.
     */
    public SchemaRegistryClusterRecordInner withStatus(SchemaRegistryClusterStatusEntity status) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SchemaRegistryClusterProperties();
        }
        this.innerProperties().withStatus(status);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
