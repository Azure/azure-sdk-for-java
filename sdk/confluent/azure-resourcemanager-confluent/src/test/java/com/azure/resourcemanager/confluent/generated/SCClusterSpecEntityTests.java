// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.confluent.models.ClusterConfigEntity;
import com.azure.resourcemanager.confluent.models.SCClusterByokEntity;
import com.azure.resourcemanager.confluent.models.SCClusterNetworkEnvironmentEntity;
import com.azure.resourcemanager.confluent.models.SCClusterSpecEntity;
import org.junit.jupiter.api.Assertions;

public final class SCClusterSpecEntityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SCClusterSpecEntity model = BinaryData.fromString(
            "{\"name\":\"ytisibir\",\"availability\":\"pikpz\",\"cloud\":\"ejzanlfz\",\"zone\":\"av\",\"region\":\"bzonok\",\"kafkaBootstrapEndpoint\":\"rjqc\",\"httpEndpoint\":\"gzpfrla\",\"apiEndpoint\":\"zrnw\",\"config\":{\"kind\":\"ndfpwpj\"},\"environment\":{\"id\":\"bt\",\"environment\":\"flsjc\",\"related\":\"szfjvfbgofelja\",\"resourceName\":\"qmqhldvriii\"},\"network\":{\"id\":\"al\",\"environment\":\"fk\",\"related\":\"vsexsowuelu\",\"resourceName\":\"hahhxvrhmzkwpj\"},\"byok\":{\"id\":\"spughftqsxhq\",\"related\":\"j\",\"resourceName\":\"kndxdigrjgu\"}}")
            .toObject(SCClusterSpecEntity.class);
        Assertions.assertEquals("ytisibir", model.name());
        Assertions.assertEquals("pikpz", model.availability());
        Assertions.assertEquals("ejzanlfz", model.cloud());
        Assertions.assertEquals("av", model.zone());
        Assertions.assertEquals("bzonok", model.region());
        Assertions.assertEquals("rjqc", model.kafkaBootstrapEndpoint());
        Assertions.assertEquals("gzpfrla", model.httpEndpoint());
        Assertions.assertEquals("zrnw", model.apiEndpoint());
        Assertions.assertEquals("ndfpwpj", model.config().kind());
        Assertions.assertEquals("bt", model.environment().id());
        Assertions.assertEquals("flsjc", model.environment().environment());
        Assertions.assertEquals("szfjvfbgofelja", model.environment().related());
        Assertions.assertEquals("qmqhldvriii", model.environment().resourceName());
        Assertions.assertEquals("al", model.network().id());
        Assertions.assertEquals("fk", model.network().environment());
        Assertions.assertEquals("vsexsowuelu", model.network().related());
        Assertions.assertEquals("hahhxvrhmzkwpj", model.network().resourceName());
        Assertions.assertEquals("spughftqsxhq", model.byok().id());
        Assertions.assertEquals("j", model.byok().related());
        Assertions.assertEquals("kndxdigrjgu", model.byok().resourceName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SCClusterSpecEntity model = new SCClusterSpecEntity().withName("ytisibir").withAvailability("pikpz")
            .withCloud("ejzanlfz").withZone("av").withRegion("bzonok").withKafkaBootstrapEndpoint("rjqc")
            .withHttpEndpoint("gzpfrla").withApiEndpoint("zrnw")
            .withConfig(new ClusterConfigEntity().withKind("ndfpwpj"))
            .withEnvironment(new SCClusterNetworkEnvironmentEntity().withId("bt").withEnvironment("flsjc")
                .withRelated("szfjvfbgofelja").withResourceName("qmqhldvriii"))
            .withNetwork(new SCClusterNetworkEnvironmentEntity().withId("al").withEnvironment("fk")
                .withRelated("vsexsowuelu").withResourceName("hahhxvrhmzkwpj"))
            .withByok(
                new SCClusterByokEntity().withId("spughftqsxhq").withRelated("j").withResourceName("kndxdigrjgu"));
        model = BinaryData.fromObject(model).toObject(SCClusterSpecEntity.class);
        Assertions.assertEquals("ytisibir", model.name());
        Assertions.assertEquals("pikpz", model.availability());
        Assertions.assertEquals("ejzanlfz", model.cloud());
        Assertions.assertEquals("av", model.zone());
        Assertions.assertEquals("bzonok", model.region());
        Assertions.assertEquals("rjqc", model.kafkaBootstrapEndpoint());
        Assertions.assertEquals("gzpfrla", model.httpEndpoint());
        Assertions.assertEquals("zrnw", model.apiEndpoint());
        Assertions.assertEquals("ndfpwpj", model.config().kind());
        Assertions.assertEquals("bt", model.environment().id());
        Assertions.assertEquals("flsjc", model.environment().environment());
        Assertions.assertEquals("szfjvfbgofelja", model.environment().related());
        Assertions.assertEquals("qmqhldvriii", model.environment().resourceName());
        Assertions.assertEquals("al", model.network().id());
        Assertions.assertEquals("fk", model.network().environment());
        Assertions.assertEquals("vsexsowuelu", model.network().related());
        Assertions.assertEquals("hahhxvrhmzkwpj", model.network().resourceName());
        Assertions.assertEquals("spughftqsxhq", model.byok().id());
        Assertions.assertEquals("j", model.byok().related());
        Assertions.assertEquals("kndxdigrjgu", model.byok().resourceName());
    }
}
