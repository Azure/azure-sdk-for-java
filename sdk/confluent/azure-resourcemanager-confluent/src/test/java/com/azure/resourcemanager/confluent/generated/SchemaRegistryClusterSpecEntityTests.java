// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.confluent.models.SchemaRegistryClusterEnvironmentRegionEntity;
import com.azure.resourcemanager.confluent.models.SchemaRegistryClusterSpecEntity;
import org.junit.jupiter.api.Assertions;

public final class SchemaRegistryClusterSpecEntityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SchemaRegistryClusterSpecEntity model = BinaryData.fromString(
            "{\"name\":\"vipmdscwxqupevzh\",\"httpEndpoint\":\"totxhojujb\",\"package\":\"elmcuvhixbjxyfw\",\"region\":{\"id\":\"r\",\"related\":\"o\",\"resourceName\":\"ttpkiwkkbnujrywv\"},\"environment\":{\"id\":\"bfpncurdo\",\"related\":\"iithtywu\",\"resourceName\":\"cbihwqk\"},\"cloud\":\"dntwjchrdgo\"}")
            .toObject(SchemaRegistryClusterSpecEntity.class);
        Assertions.assertEquals("vipmdscwxqupevzh", model.name());
        Assertions.assertEquals("totxhojujb", model.httpEndpoint());
        Assertions.assertEquals("elmcuvhixbjxyfw", model.packageProperty());
        Assertions.assertEquals("r", model.region().id());
        Assertions.assertEquals("o", model.region().related());
        Assertions.assertEquals("ttpkiwkkbnujrywv", model.region().resourceName());
        Assertions.assertEquals("bfpncurdo", model.environment().id());
        Assertions.assertEquals("iithtywu", model.environment().related());
        Assertions.assertEquals("cbihwqk", model.environment().resourceName());
        Assertions.assertEquals("dntwjchrdgo", model.cloud());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SchemaRegistryClusterSpecEntity model = new SchemaRegistryClusterSpecEntity().withName("vipmdscwxqupevzh")
            .withHttpEndpoint("totxhojujb").withPackageProperty("elmcuvhixbjxyfw")
            .withRegion(new SchemaRegistryClusterEnvironmentRegionEntity().withId("r").withRelated("o")
                .withResourceName("ttpkiwkkbnujrywv"))
            .withEnvironment(new SchemaRegistryClusterEnvironmentRegionEntity().withId("bfpncurdo")
                .withRelated("iithtywu").withResourceName("cbihwqk"))
            .withCloud("dntwjchrdgo");
        model = BinaryData.fromObject(model).toObject(SchemaRegistryClusterSpecEntity.class);
        Assertions.assertEquals("vipmdscwxqupevzh", model.name());
        Assertions.assertEquals("totxhojujb", model.httpEndpoint());
        Assertions.assertEquals("elmcuvhixbjxyfw", model.packageProperty());
        Assertions.assertEquals("r", model.region().id());
        Assertions.assertEquals("o", model.region().related());
        Assertions.assertEquals("ttpkiwkkbnujrywv", model.region().resourceName());
        Assertions.assertEquals("bfpncurdo", model.environment().id());
        Assertions.assertEquals("iithtywu", model.environment().related());
        Assertions.assertEquals("cbihwqk", model.environment().resourceName());
        Assertions.assertEquals("dntwjchrdgo", model.cloud());
    }
}
