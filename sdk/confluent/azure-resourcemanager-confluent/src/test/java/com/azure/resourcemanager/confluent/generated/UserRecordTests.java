// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.confluent.models.MetadataEntity;
import com.azure.resourcemanager.confluent.models.UserRecord;
import org.junit.jupiter.api.Assertions;

public final class UserRecordTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UserRecord model = BinaryData.fromString(
            "{\"kind\":\"rvqdra\",\"id\":\"jybige\",\"metadata\":{\"self\":\"fbowskanyk\",\"resource_name\":\"lcuiywgqywgndr\",\"created_at\":\"nhzgpphrcgyn\",\"updated_at\":\"cpecfvmmcoofs\",\"deleted_at\":\"zevgb\"},\"email\":\"jqabcypmivkwlzuv\",\"full_name\":\"fwnfnb\",\"auth_type\":\"fionl\"}")
            .toObject(UserRecord.class);
        Assertions.assertEquals("rvqdra", model.kind());
        Assertions.assertEquals("jybige", model.id());
        Assertions.assertEquals("fbowskanyk", model.metadata().self());
        Assertions.assertEquals("lcuiywgqywgndr", model.metadata().resourceName());
        Assertions.assertEquals("nhzgpphrcgyn", model.metadata().createdAt());
        Assertions.assertEquals("cpecfvmmcoofs", model.metadata().updatedAt());
        Assertions.assertEquals("zevgb", model.metadata().deletedAt());
        Assertions.assertEquals("jqabcypmivkwlzuv", model.email());
        Assertions.assertEquals("fwnfnb", model.fullName());
        Assertions.assertEquals("fionl", model.authType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UserRecord model = new UserRecord().withKind("rvqdra").withId("jybige")
            .withMetadata(new MetadataEntity().withSelf("fbowskanyk").withResourceName("lcuiywgqywgndr")
                .withCreatedAt("nhzgpphrcgyn").withUpdatedAt("cpecfvmmcoofs").withDeletedAt("zevgb"))
            .withEmail("jqabcypmivkwlzuv").withFullName("fwnfnb").withAuthType("fionl");
        model = BinaryData.fromObject(model).toObject(UserRecord.class);
        Assertions.assertEquals("rvqdra", model.kind());
        Assertions.assertEquals("jybige", model.id());
        Assertions.assertEquals("fbowskanyk", model.metadata().self());
        Assertions.assertEquals("lcuiywgqywgndr", model.metadata().resourceName());
        Assertions.assertEquals("nhzgpphrcgyn", model.metadata().createdAt());
        Assertions.assertEquals("cpecfvmmcoofs", model.metadata().updatedAt());
        Assertions.assertEquals("zevgb", model.metadata().deletedAt());
        Assertions.assertEquals("jqabcypmivkwlzuv", model.email());
        Assertions.assertEquals("fwnfnb", model.fullName());
        Assertions.assertEquals("fionl", model.authType());
    }
}
