// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.confluent.fluent.models.AccessListUsersSuccessResponseInner;
import com.azure.resourcemanager.confluent.models.ConfluentListMetadata;
import com.azure.resourcemanager.confluent.models.MetadataEntity;
import com.azure.resourcemanager.confluent.models.UserRecord;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AccessListUsersSuccessResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AccessListUsersSuccessResponseInner model = BinaryData.fromString(
            "{\"kind\":\"rjb\",\"metadata\":{\"first\":\"rcjxvsnbyxqabn\",\"last\":\"cpc\",\"prev\":\"hurzafblj\",\"next\":\"pbtoqcjmkl\",\"total_size\":1217713745},\"data\":[{\"kind\":\"dtqajzyulpkudj\",\"id\":\"lkhbz\",\"metadata\":{\"self\":\"pgzgq\",\"resource_name\":\"zloc\",\"created_at\":\"c\",\"updated_at\":\"ierhhbcsglummaj\",\"deleted_at\":\"aodxo\"},\"email\":\"bdxkqpxokaj\",\"full_name\":\"npime\",\"auth_type\":\"stxgc\"},{\"kind\":\"dg\",\"id\":\"ajrmvdjwzrlovmc\",\"metadata\":{\"self\":\"ijcoejctb\",\"resource_name\":\"qsqsy\",\"created_at\":\"kbfkg\",\"updated_at\":\"dkexxppofm\",\"deleted_at\":\"x\"},\"email\":\"jpgd\",\"full_name\":\"ocjjxhvpmouexh\",\"auth_type\":\"xibqeojnx\"},{\"kind\":\"zvddntwndeicbtwn\",\"id\":\"aoqvuh\",\"metadata\":{\"self\":\"f\",\"resource_name\":\"yd\",\"created_at\":\"lmjthjq\",\"updated_at\":\"pyeicxm\",\"deleted_at\":\"iwqvhkh\"},\"email\":\"uigdtopbobjog\",\"full_name\":\"e\",\"auth_type\":\"a\"}]}")
            .toObject(AccessListUsersSuccessResponseInner.class);
        Assertions.assertEquals("rjb", model.kind());
        Assertions.assertEquals("rcjxvsnbyxqabn", model.metadata().first());
        Assertions.assertEquals("cpc", model.metadata().last());
        Assertions.assertEquals("hurzafblj", model.metadata().prev());
        Assertions.assertEquals("pbtoqcjmkl", model.metadata().next());
        Assertions.assertEquals(1217713745, model.metadata().totalSize());
        Assertions.assertEquals("dtqajzyulpkudj", model.data().get(0).kind());
        Assertions.assertEquals("lkhbz", model.data().get(0).id());
        Assertions.assertEquals("pgzgq", model.data().get(0).metadata().self());
        Assertions.assertEquals("zloc", model.data().get(0).metadata().resourceName());
        Assertions.assertEquals("c", model.data().get(0).metadata().createdAt());
        Assertions.assertEquals("ierhhbcsglummaj", model.data().get(0).metadata().updatedAt());
        Assertions.assertEquals("aodxo", model.data().get(0).metadata().deletedAt());
        Assertions.assertEquals("bdxkqpxokaj", model.data().get(0).email());
        Assertions.assertEquals("npime", model.data().get(0).fullName());
        Assertions.assertEquals("stxgc", model.data().get(0).authType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AccessListUsersSuccessResponseInner model = new AccessListUsersSuccessResponseInner().withKind("rjb")
            .withMetadata(new ConfluentListMetadata().withFirst("rcjxvsnbyxqabn").withLast("cpc").withPrev("hurzafblj")
                .withNext("pbtoqcjmkl").withTotalSize(1217713745))
            .withData(Arrays.asList(
                new UserRecord().withKind("dtqajzyulpkudj").withId("lkhbz")
                    .withMetadata(new MetadataEntity().withSelf("pgzgq").withResourceName("zloc").withCreatedAt("c")
                        .withUpdatedAt("ierhhbcsglummaj").withDeletedAt("aodxo"))
                    .withEmail("bdxkqpxokaj").withFullName("npime").withAuthType("stxgc"),
                new UserRecord().withKind("dg").withId("ajrmvdjwzrlovmc")
                    .withMetadata(new MetadataEntity().withSelf("ijcoejctb").withResourceName("qsqsy")
                        .withCreatedAt("kbfkg").withUpdatedAt("dkexxppofm").withDeletedAt("x"))
                    .withEmail("jpgd").withFullName("ocjjxhvpmouexh").withAuthType("xibqeojnx"),
                new UserRecord().withKind("zvddntwndeicbtwn").withId("aoqvuh")
                    .withMetadata(new MetadataEntity().withSelf("f").withResourceName("yd").withCreatedAt("lmjthjq")
                        .withUpdatedAt("pyeicxm").withDeletedAt("iwqvhkh"))
                    .withEmail("uigdtopbobjog").withFullName("e").withAuthType("a")));
        model = BinaryData.fromObject(model).toObject(AccessListUsersSuccessResponseInner.class);
        Assertions.assertEquals("rjb", model.kind());
        Assertions.assertEquals("rcjxvsnbyxqabn", model.metadata().first());
        Assertions.assertEquals("cpc", model.metadata().last());
        Assertions.assertEquals("hurzafblj", model.metadata().prev());
        Assertions.assertEquals("pbtoqcjmkl", model.metadata().next());
        Assertions.assertEquals(1217713745, model.metadata().totalSize());
        Assertions.assertEquals("dtqajzyulpkudj", model.data().get(0).kind());
        Assertions.assertEquals("lkhbz", model.data().get(0).id());
        Assertions.assertEquals("pgzgq", model.data().get(0).metadata().self());
        Assertions.assertEquals("zloc", model.data().get(0).metadata().resourceName());
        Assertions.assertEquals("c", model.data().get(0).metadata().createdAt());
        Assertions.assertEquals("ierhhbcsglummaj", model.data().get(0).metadata().updatedAt());
        Assertions.assertEquals("aodxo", model.data().get(0).metadata().deletedAt());
        Assertions.assertEquals("bdxkqpxokaj", model.data().get(0).email());
        Assertions.assertEquals("npime", model.data().get(0).fullName());
        Assertions.assertEquals("stxgc", model.data().get(0).authType());
    }
}
