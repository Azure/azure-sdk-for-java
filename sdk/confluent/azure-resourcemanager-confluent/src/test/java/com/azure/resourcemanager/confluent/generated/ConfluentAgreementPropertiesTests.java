// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.confluent.fluent.models.ConfluentAgreementProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ConfluentAgreementPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConfluentAgreementProperties model = BinaryData.fromString(
            "{\"publisher\":\"fwvuk\",\"product\":\"audccsnhs\",\"plan\":\"nyejhkryhtnap\",\"licenseTextLink\":\"wlokjyem\",\"privacyPolicyLink\":\"vnipjox\",\"retrieveDatetime\":\"2020-12-27T04:20:57Z\",\"signature\":\"hgejspodma\",\"accepted\":false}")
            .toObject(ConfluentAgreementProperties.class);
        Assertions.assertEquals("fwvuk", model.publisher());
        Assertions.assertEquals("audccsnhs", model.product());
        Assertions.assertEquals("nyejhkryhtnap", model.plan());
        Assertions.assertEquals("wlokjyem", model.licenseTextLink());
        Assertions.assertEquals("vnipjox", model.privacyPolicyLink());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-27T04:20:57Z"), model.retrieveDatetime());
        Assertions.assertEquals("hgejspodma", model.signature());
        Assertions.assertEquals(false, model.accepted());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConfluentAgreementProperties model = new ConfluentAgreementProperties().withPublisher("fwvuk")
            .withProduct("audccsnhs").withPlan("nyejhkryhtnap").withLicenseTextLink("wlokjyem")
            .withPrivacyPolicyLink("vnipjox").withRetrieveDatetime(OffsetDateTime.parse("2020-12-27T04:20:57Z"))
            .withSignature("hgejspodma").withAccepted(false);
        model = BinaryData.fromObject(model).toObject(ConfluentAgreementProperties.class);
        Assertions.assertEquals("fwvuk", model.publisher());
        Assertions.assertEquals("audccsnhs", model.product());
        Assertions.assertEquals("nyejhkryhtnap", model.plan());
        Assertions.assertEquals("wlokjyem", model.licenseTextLink());
        Assertions.assertEquals("vnipjox", model.privacyPolicyLink());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-27T04:20:57Z"), model.retrieveDatetime());
        Assertions.assertEquals("hgejspodma", model.signature());
        Assertions.assertEquals(false, model.accepted());
    }
}
