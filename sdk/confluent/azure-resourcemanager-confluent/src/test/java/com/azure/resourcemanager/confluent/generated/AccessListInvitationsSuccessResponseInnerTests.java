// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.confluent.fluent.models.AccessListInvitationsSuccessResponseInner;
import com.azure.resourcemanager.confluent.fluent.models.InvitationRecordInner;
import com.azure.resourcemanager.confluent.models.ConfluentListMetadata;
import com.azure.resourcemanager.confluent.models.MetadataEntity;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AccessListInvitationsSuccessResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AccessListInvitationsSuccessResponseInner model = BinaryData.fromString(
            "{\"kind\":\"okacspk\",\"metadata\":{\"first\":\"zdobpxjmflbvvnch\",\"last\":\"cciw\",\"prev\":\"juqk\",\"next\":\"sa\",\"total_size\":1410521625},\"data\":[{\"kind\":\"foskghsauuimj\",\"id\":\"xieduugidyjrr\",\"metadata\":{\"self\":\"aos\",\"resource_name\":\"xc\",\"created_at\":\"npc\",\"updated_at\":\"ocohslkevleg\",\"deleted_at\":\"fbuhfmvfaxkffe\"},\"email\":\"th\",\"auth_type\":\"m\",\"status\":\"yvshxmz\",\"accepted_at\":\"bzoggigrx\",\"expires_at\":\"ur\"}]}")
            .toObject(AccessListInvitationsSuccessResponseInner.class);
        Assertions.assertEquals("okacspk", model.kind());
        Assertions.assertEquals("zdobpxjmflbvvnch", model.metadata().first());
        Assertions.assertEquals("cciw", model.metadata().last());
        Assertions.assertEquals("juqk", model.metadata().prev());
        Assertions.assertEquals("sa", model.metadata().next());
        Assertions.assertEquals(1410521625, model.metadata().totalSize());
        Assertions.assertEquals("foskghsauuimj", model.data().get(0).kind());
        Assertions.assertEquals("xieduugidyjrr", model.data().get(0).id());
        Assertions.assertEquals("aos", model.data().get(0).metadata().self());
        Assertions.assertEquals("xc", model.data().get(0).metadata().resourceName());
        Assertions.assertEquals("npc", model.data().get(0).metadata().createdAt());
        Assertions.assertEquals("ocohslkevleg", model.data().get(0).metadata().updatedAt());
        Assertions.assertEquals("fbuhfmvfaxkffe", model.data().get(0).metadata().deletedAt());
        Assertions.assertEquals("th", model.data().get(0).email());
        Assertions.assertEquals("m", model.data().get(0).authType());
        Assertions.assertEquals("yvshxmz", model.data().get(0).status());
        Assertions.assertEquals("bzoggigrx", model.data().get(0).acceptedAt());
        Assertions.assertEquals("ur", model.data().get(0).expiresAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AccessListInvitationsSuccessResponseInner model
            = new AccessListInvitationsSuccessResponseInner().withKind("okacspk")
                .withMetadata(new ConfluentListMetadata().withFirst("zdobpxjmflbvvnch").withLast("cciw")
                    .withPrev("juqk").withNext("sa").withTotalSize(1410521625))
                .withData(Arrays.asList(new InvitationRecordInner().withKind("foskghsauuimj").withId("xieduugidyjrr")
                    .withMetadata(new MetadataEntity().withSelf("aos").withResourceName("xc").withCreatedAt("npc")
                        .withUpdatedAt("ocohslkevleg").withDeletedAt("fbuhfmvfaxkffe"))
                    .withEmail("th").withAuthType("m").withStatus("yvshxmz").withAcceptedAt("bzoggigrx")
                    .withExpiresAt("ur")));
        model = BinaryData.fromObject(model).toObject(AccessListInvitationsSuccessResponseInner.class);
        Assertions.assertEquals("okacspk", model.kind());
        Assertions.assertEquals("zdobpxjmflbvvnch", model.metadata().first());
        Assertions.assertEquals("cciw", model.metadata().last());
        Assertions.assertEquals("juqk", model.metadata().prev());
        Assertions.assertEquals("sa", model.metadata().next());
        Assertions.assertEquals(1410521625, model.metadata().totalSize());
        Assertions.assertEquals("foskghsauuimj", model.data().get(0).kind());
        Assertions.assertEquals("xieduugidyjrr", model.data().get(0).id());
        Assertions.assertEquals("aos", model.data().get(0).metadata().self());
        Assertions.assertEquals("xc", model.data().get(0).metadata().resourceName());
        Assertions.assertEquals("npc", model.data().get(0).metadata().createdAt());
        Assertions.assertEquals("ocohslkevleg", model.data().get(0).metadata().updatedAt());
        Assertions.assertEquals("fbuhfmvfaxkffe", model.data().get(0).metadata().deletedAt());
        Assertions.assertEquals("th", model.data().get(0).email());
        Assertions.assertEquals("m", model.data().get(0).authType());
        Assertions.assertEquals("yvshxmz", model.data().get(0).status());
        Assertions.assertEquals("bzoggigrx", model.data().get(0).acceptedAt());
        Assertions.assertEquals("ur", model.data().get(0).expiresAt());
    }
}
