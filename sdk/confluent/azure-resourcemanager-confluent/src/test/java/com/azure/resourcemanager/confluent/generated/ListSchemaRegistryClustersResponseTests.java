// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.confluent.fluent.models.SchemaRegistryClusterRecordInner;
import com.azure.resourcemanager.confluent.models.ListSchemaRegistryClustersResponse;
import com.azure.resourcemanager.confluent.models.SCMetadataEntity;
import com.azure.resourcemanager.confluent.models.SchemaRegistryClusterEnvironmentRegionEntity;
import com.azure.resourcemanager.confluent.models.SchemaRegistryClusterSpecEntity;
import com.azure.resourcemanager.confluent.models.SchemaRegistryClusterStatusEntity;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ListSchemaRegistryClustersResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ListSchemaRegistryClustersResponse model = BinaryData.fromString(
            "{\"value\":[{\"kind\":\"fhwygzlvdnkfxus\",\"id\":\"dwzrmuh\",\"properties\":{\"metadata\":{\"self\":\"qdpsqxqvpsvu\",\"resourceName\":\"mgccelvezrypq\",\"createdTimestamp\":\"feo\",\"updatedTimestamp\":\"rqwky\",\"deletedTimestamp\":\"ob\"},\"spec\":{\"name\":\"xedk\",\"httpEndpoint\":\"epbqpcrfkbw\",\"package\":\"snjvcdwxlpqekftn\",\"region\":{\"id\":\"jsyingwfqatm\",\"related\":\"htmdvy\",\"resourceName\":\"ikdgszywkbir\"},\"environment\":{\"id\":\"zh\",\"related\":\"kj\",\"resourceName\":\"rvqqaatj\"},\"cloud\":\"rv\"},\"status\":{\"phase\":\"pmfi\"}}}],\"nextLink\":\"fggjioolvr\"}")
            .toObject(ListSchemaRegistryClustersResponse.class);
        Assertions.assertEquals("fhwygzlvdnkfxus", model.value().get(0).kind());
        Assertions.assertEquals("dwzrmuh", model.value().get(0).id());
        Assertions.assertEquals("qdpsqxqvpsvu", model.value().get(0).metadata().self());
        Assertions.assertEquals("mgccelvezrypq", model.value().get(0).metadata().resourceName());
        Assertions.assertEquals("feo", model.value().get(0).metadata().createdTimestamp());
        Assertions.assertEquals("rqwky", model.value().get(0).metadata().updatedTimestamp());
        Assertions.assertEquals("ob", model.value().get(0).metadata().deletedTimestamp());
        Assertions.assertEquals("xedk", model.value().get(0).spec().name());
        Assertions.assertEquals("epbqpcrfkbw", model.value().get(0).spec().httpEndpoint());
        Assertions.assertEquals("snjvcdwxlpqekftn", model.value().get(0).spec().packageProperty());
        Assertions.assertEquals("jsyingwfqatm", model.value().get(0).spec().region().id());
        Assertions.assertEquals("htmdvy", model.value().get(0).spec().region().related());
        Assertions.assertEquals("ikdgszywkbir", model.value().get(0).spec().region().resourceName());
        Assertions.assertEquals("zh", model.value().get(0).spec().environment().id());
        Assertions.assertEquals("kj", model.value().get(0).spec().environment().related());
        Assertions.assertEquals("rvqqaatj", model.value().get(0).spec().environment().resourceName());
        Assertions.assertEquals("rv", model.value().get(0).spec().cloud());
        Assertions.assertEquals("pmfi", model.value().get(0).status().phase());
        Assertions.assertEquals("fggjioolvr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ListSchemaRegistryClustersResponse model = new ListSchemaRegistryClustersResponse().withValue(
            Arrays.asList(new SchemaRegistryClusterRecordInner().withKind("fhwygzlvdnkfxus").withId("dwzrmuh")
                .withMetadata(new SCMetadataEntity().withSelf("qdpsqxqvpsvu").withResourceName("mgccelvezrypq")
                    .withCreatedTimestamp("feo").withUpdatedTimestamp("rqwky").withDeletedTimestamp("ob"))
                .withSpec(new SchemaRegistryClusterSpecEntity().withName("xedk").withHttpEndpoint("epbqpcrfkbw")
                    .withPackageProperty("snjvcdwxlpqekftn")
                    .withRegion(new SchemaRegistryClusterEnvironmentRegionEntity().withId("jsyingwfqatm")
                        .withRelated("htmdvy").withResourceName("ikdgszywkbir"))
                    .withEnvironment(new SchemaRegistryClusterEnvironmentRegionEntity().withId("zh").withRelated("kj")
                        .withResourceName("rvqqaatj"))
                    .withCloud("rv"))
                .withStatus(new SchemaRegistryClusterStatusEntity().withPhase("pmfi"))))
            .withNextLink("fggjioolvr");
        model = BinaryData.fromObject(model).toObject(ListSchemaRegistryClustersResponse.class);
        Assertions.assertEquals("fhwygzlvdnkfxus", model.value().get(0).kind());
        Assertions.assertEquals("dwzrmuh", model.value().get(0).id());
        Assertions.assertEquals("qdpsqxqvpsvu", model.value().get(0).metadata().self());
        Assertions.assertEquals("mgccelvezrypq", model.value().get(0).metadata().resourceName());
        Assertions.assertEquals("feo", model.value().get(0).metadata().createdTimestamp());
        Assertions.assertEquals("rqwky", model.value().get(0).metadata().updatedTimestamp());
        Assertions.assertEquals("ob", model.value().get(0).metadata().deletedTimestamp());
        Assertions.assertEquals("xedk", model.value().get(0).spec().name());
        Assertions.assertEquals("epbqpcrfkbw", model.value().get(0).spec().httpEndpoint());
        Assertions.assertEquals("snjvcdwxlpqekftn", model.value().get(0).spec().packageProperty());
        Assertions.assertEquals("jsyingwfqatm", model.value().get(0).spec().region().id());
        Assertions.assertEquals("htmdvy", model.value().get(0).spec().region().related());
        Assertions.assertEquals("ikdgszywkbir", model.value().get(0).spec().region().resourceName());
        Assertions.assertEquals("zh", model.value().get(0).spec().environment().id());
        Assertions.assertEquals("kj", model.value().get(0).spec().environment().related());
        Assertions.assertEquals("rvqqaatj", model.value().get(0).spec().environment().resourceName());
        Assertions.assertEquals("rv", model.value().get(0).spec().cloud());
        Assertions.assertEquals("pmfi", model.value().get(0).status().phase());
        Assertions.assertEquals("fggjioolvr", model.nextLink());
    }
}
