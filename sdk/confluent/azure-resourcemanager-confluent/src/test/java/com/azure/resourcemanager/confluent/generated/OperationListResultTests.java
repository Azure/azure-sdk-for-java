// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.confluent.fluent.models.OperationResultInner;
import com.azure.resourcemanager.confluent.models.OperationDisplay;
import com.azure.resourcemanager.confluent.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"h\",\"display\":{\"provider\":\"yahux\",\"resource\":\"pmqnja\",\"operation\":\"ixjsprozvcputeg\",\"description\":\"wmfdatscmdvpjhul\"},\"isDataAction\":false}],\"nextLink\":\"mkjozkrwf\"}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("h", model.value().get(0).name());
        Assertions.assertEquals("yahux", model.value().get(0).display().provider());
        Assertions.assertEquals("pmqnja", model.value().get(0).display().resource());
        Assertions.assertEquals("ixjsprozvcputeg", model.value().get(0).display().operation());
        Assertions.assertEquals("wmfdatscmdvpjhul", model.value().get(0).display().description());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("mkjozkrwf", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model = new OperationListResult()
            .withValue(Arrays.asList(new OperationResultInner().withName("h")
                .withDisplay(new OperationDisplay().withProvider("yahux").withResource("pmqnja")
                    .withOperation("ixjsprozvcputeg").withDescription("wmfdatscmdvpjhul"))
                .withIsDataAction(false)))
            .withNextLink("mkjozkrwf");
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("h", model.value().get(0).name());
        Assertions.assertEquals("yahux", model.value().get(0).display().provider());
        Assertions.assertEquals("pmqnja", model.value().get(0).display().resource());
        Assertions.assertEquals("ixjsprozvcputeg", model.value().get(0).display().operation());
        Assertions.assertEquals("wmfdatscmdvpjhul", model.value().get(0).display().description());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("mkjozkrwf", model.nextLink());
    }
}
