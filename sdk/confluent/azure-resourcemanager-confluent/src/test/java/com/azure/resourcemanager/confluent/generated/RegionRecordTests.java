// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.confluent.models.RegionRecord;
import com.azure.resourcemanager.confluent.models.RegionSpecEntity;
import com.azure.resourcemanager.confluent.models.SCMetadataEntity;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RegionRecordTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RegionRecord model = BinaryData.fromString(
            "{\"kind\":\"qxvcxgfrpdsofb\",\"id\":\"rnsvbuswd\",\"properties\":{\"metadata\":{\"self\":\"bycnunvjsrtkf\",\"resourceName\":\"nopqgikyzirtx\",\"createdTimestamp\":\"uxzejntpsew\",\"updatedTimestamp\":\"oi\",\"deletedTimestamp\":\"ukry\"},\"spec\":{\"name\":\"qmi\",\"cloud\":\"xorgg\",\"regionName\":\"hyaomtbghhavgr\",\"packages\":[\"fo\",\"jzhpjbibgjmfx\",\"mv\"]}}}")
            .toObject(RegionRecord.class);
        Assertions.assertEquals("qxvcxgfrpdsofb", model.kind());
        Assertions.assertEquals("rnsvbuswd", model.id());
        Assertions.assertEquals("bycnunvjsrtkf", model.metadata().self());
        Assertions.assertEquals("nopqgikyzirtx", model.metadata().resourceName());
        Assertions.assertEquals("uxzejntpsew", model.metadata().createdTimestamp());
        Assertions.assertEquals("oi", model.metadata().updatedTimestamp());
        Assertions.assertEquals("ukry", model.metadata().deletedTimestamp());
        Assertions.assertEquals("qmi", model.spec().name());
        Assertions.assertEquals("xorgg", model.spec().cloud());
        Assertions.assertEquals("hyaomtbghhavgr", model.spec().regionName());
        Assertions.assertEquals("fo", model.spec().packages().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RegionRecord model = new RegionRecord().withKind("qxvcxgfrpdsofb").withId("rnsvbuswd")
            .withMetadata(new SCMetadataEntity().withSelf("bycnunvjsrtkf").withResourceName("nopqgikyzirtx")
                .withCreatedTimestamp("uxzejntpsew").withUpdatedTimestamp("oi").withDeletedTimestamp("ukry"))
            .withSpec(new RegionSpecEntity().withName("qmi").withCloud("xorgg").withRegionName("hyaomtbghhavgr")
                .withPackages(Arrays.asList("fo", "jzhpjbibgjmfx", "mv")));
        model = BinaryData.fromObject(model).toObject(RegionRecord.class);
        Assertions.assertEquals("qxvcxgfrpdsofb", model.kind());
        Assertions.assertEquals("rnsvbuswd", model.id());
        Assertions.assertEquals("bycnunvjsrtkf", model.metadata().self());
        Assertions.assertEquals("nopqgikyzirtx", model.metadata().resourceName());
        Assertions.assertEquals("uxzejntpsew", model.metadata().createdTimestamp());
        Assertions.assertEquals("oi", model.metadata().updatedTimestamp());
        Assertions.assertEquals("ukry", model.metadata().deletedTimestamp());
        Assertions.assertEquals("qmi", model.spec().name());
        Assertions.assertEquals("xorgg", model.spec().cloud());
        Assertions.assertEquals("hyaomtbghhavgr", model.spec().regionName());
        Assertions.assertEquals("fo", model.spec().packages().get(0));
    }
}
