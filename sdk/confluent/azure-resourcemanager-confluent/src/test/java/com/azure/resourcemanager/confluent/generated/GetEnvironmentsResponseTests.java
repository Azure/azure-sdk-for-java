// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.confluent.fluent.models.SCEnvironmentRecordInner;
import com.azure.resourcemanager.confluent.models.GetEnvironmentsResponse;
import com.azure.resourcemanager.confluent.models.SCMetadataEntity;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GetEnvironmentsResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GetEnvironmentsResponse model = BinaryData.fromString(
            "{\"value\":[{\"kind\":\"dsytgadgvr\",\"id\":\"aeneqnzarrwl\",\"properties\":{\"metadata\":{\"self\":\"jfqka\",\"resourceName\":\"wiipfpub\",\"createdTimestamp\":\"bwwift\",\"updatedTimestamp\":\"qkvpuvksgplsakn\",\"deletedTimestamp\":\"fsynljphuop\"}},\"name\":\"dlqiyntorzih\"}],\"nextLink\":\"osjswsr\"}")
            .toObject(GetEnvironmentsResponse.class);
        Assertions.assertEquals("dsytgadgvr", model.value().get(0).kind());
        Assertions.assertEquals("aeneqnzarrwl", model.value().get(0).id());
        Assertions.assertEquals("dlqiyntorzih", model.value().get(0).name());
        Assertions.assertEquals("jfqka", model.value().get(0).metadata().self());
        Assertions.assertEquals("wiipfpub", model.value().get(0).metadata().resourceName());
        Assertions.assertEquals("bwwift", model.value().get(0).metadata().createdTimestamp());
        Assertions.assertEquals("qkvpuvksgplsakn", model.value().get(0).metadata().updatedTimestamp());
        Assertions.assertEquals("fsynljphuop", model.value().get(0).metadata().deletedTimestamp());
        Assertions.assertEquals("osjswsr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GetEnvironmentsResponse model
            = new GetEnvironmentsResponse().withValue(Arrays.asList(
                new SCEnvironmentRecordInner().withKind("dsytgadgvr").withId("aeneqnzarrwl").withName("dlqiyntorzih")
                    .withMetadata(new SCMetadataEntity().withSelf("jfqka").withResourceName("wiipfpub")
                        .withCreatedTimestamp("bwwift").withUpdatedTimestamp("qkvpuvksgplsakn")
                        .withDeletedTimestamp("fsynljphuop"))))
                .withNextLink("osjswsr");
        model = BinaryData.fromObject(model).toObject(GetEnvironmentsResponse.class);
        Assertions.assertEquals("dsytgadgvr", model.value().get(0).kind());
        Assertions.assertEquals("aeneqnzarrwl", model.value().get(0).id());
        Assertions.assertEquals("dlqiyntorzih", model.value().get(0).name());
        Assertions.assertEquals("jfqka", model.value().get(0).metadata().self());
        Assertions.assertEquals("wiipfpub", model.value().get(0).metadata().resourceName());
        Assertions.assertEquals("bwwift", model.value().get(0).metadata().createdTimestamp());
        Assertions.assertEquals("qkvpuvksgplsakn", model.value().get(0).metadata().updatedTimestamp());
        Assertions.assertEquals("fsynljphuop", model.value().get(0).metadata().deletedTimestamp());
        Assertions.assertEquals("osjswsr", model.nextLink());
    }
}
