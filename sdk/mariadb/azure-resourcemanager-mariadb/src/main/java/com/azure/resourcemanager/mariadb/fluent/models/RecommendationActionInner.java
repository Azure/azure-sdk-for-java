// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mariadb.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Map;

/**
 * Represents a Recommendation Action.
 */
@Fluent
public final class RecommendationActionInner extends ProxyResource {
    /*
     * The properties of a recommendation action.
     */
    private RecommendationActionProperties innerProperties;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of RecommendationActionInner class.
     */
    public RecommendationActionInner() {
    }

    /**
     * Get the innerProperties property: The properties of a recommendation action.
     * 
     * @return the innerProperties value.
     */
    private RecommendationActionProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the advisorName property: Advisor name.
     * 
     * @return the advisorName value.
     */
    public String advisorName() {
        return this.innerProperties() == null ? null : this.innerProperties().advisorName();
    }

    /**
     * Set the advisorName property: Advisor name.
     * 
     * @param advisorName the advisorName value to set.
     * @return the RecommendationActionInner object itself.
     */
    public RecommendationActionInner withAdvisorName(String advisorName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationActionProperties();
        }
        this.innerProperties().withAdvisorName(advisorName);
        return this;
    }

    /**
     * Get the sessionId property: Recommendation action session identifier.
     * 
     * @return the sessionId value.
     */
    public String sessionId() {
        return this.innerProperties() == null ? null : this.innerProperties().sessionId();
    }

    /**
     * Set the sessionId property: Recommendation action session identifier.
     * 
     * @param sessionId the sessionId value to set.
     * @return the RecommendationActionInner object itself.
     */
    public RecommendationActionInner withSessionId(String sessionId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationActionProperties();
        }
        this.innerProperties().withSessionId(sessionId);
        return this;
    }

    /**
     * Get the actionId property: Recommendation action identifier.
     * 
     * @return the actionId value.
     */
    public Integer actionId() {
        return this.innerProperties() == null ? null : this.innerProperties().actionId();
    }

    /**
     * Set the actionId property: Recommendation action identifier.
     * 
     * @param actionId the actionId value to set.
     * @return the RecommendationActionInner object itself.
     */
    public RecommendationActionInner withActionId(Integer actionId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationActionProperties();
        }
        this.innerProperties().withActionId(actionId);
        return this;
    }

    /**
     * Get the createdTime property: Recommendation action creation time.
     * 
     * @return the createdTime value.
     */
    public OffsetDateTime createdTime() {
        return this.innerProperties() == null ? null : this.innerProperties().createdTime();
    }

    /**
     * Set the createdTime property: Recommendation action creation time.
     * 
     * @param createdTime the createdTime value to set.
     * @return the RecommendationActionInner object itself.
     */
    public RecommendationActionInner withCreatedTime(OffsetDateTime createdTime) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationActionProperties();
        }
        this.innerProperties().withCreatedTime(createdTime);
        return this;
    }

    /**
     * Get the expirationTime property: Recommendation action expiration time.
     * 
     * @return the expirationTime value.
     */
    public OffsetDateTime expirationTime() {
        return this.innerProperties() == null ? null : this.innerProperties().expirationTime();
    }

    /**
     * Set the expirationTime property: Recommendation action expiration time.
     * 
     * @param expirationTime the expirationTime value to set.
     * @return the RecommendationActionInner object itself.
     */
    public RecommendationActionInner withExpirationTime(OffsetDateTime expirationTime) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationActionProperties();
        }
        this.innerProperties().withExpirationTime(expirationTime);
        return this;
    }

    /**
     * Get the reason property: Recommendation action reason.
     * 
     * @return the reason value.
     */
    public String reason() {
        return this.innerProperties() == null ? null : this.innerProperties().reason();
    }

    /**
     * Set the reason property: Recommendation action reason.
     * 
     * @param reason the reason value to set.
     * @return the RecommendationActionInner object itself.
     */
    public RecommendationActionInner withReason(String reason) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationActionProperties();
        }
        this.innerProperties().withReason(reason);
        return this;
    }

    /**
     * Get the recommendationType property: Recommendation action type.
     * 
     * @return the recommendationType value.
     */
    public String recommendationType() {
        return this.innerProperties() == null ? null : this.innerProperties().recommendationType();
    }

    /**
     * Set the recommendationType property: Recommendation action type.
     * 
     * @param recommendationType the recommendationType value to set.
     * @return the RecommendationActionInner object itself.
     */
    public RecommendationActionInner withRecommendationType(String recommendationType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationActionProperties();
        }
        this.innerProperties().withRecommendationType(recommendationType);
        return this;
    }

    /**
     * Get the details property: Recommendation action details.
     * 
     * @return the details value.
     */
    public Map<String, String> details() {
        return this.innerProperties() == null ? null : this.innerProperties().details();
    }

    /**
     * Set the details property: Recommendation action details.
     * 
     * @param details the details value to set.
     * @return the RecommendationActionInner object itself.
     */
    public RecommendationActionInner withDetails(Map<String, String> details) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationActionProperties();
        }
        this.innerProperties().withDetails(details);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RecommendationActionInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RecommendationActionInner if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RecommendationActionInner.
     */
    public static RecommendationActionInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RecommendationActionInner deserializedRecommendationActionInner = new RecommendationActionInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedRecommendationActionInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedRecommendationActionInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedRecommendationActionInner.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedRecommendationActionInner.innerProperties
                        = RecommendationActionProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRecommendationActionInner;
        });
    }
}
