// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mariadb.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mariadb.fluent.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.mariadb.models.PrivateEndpointProperty;
import com.azure.resourcemanager.mariadb.models.PrivateLinkServiceConnectionStateProperty;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionProperties model = BinaryData.fromString(
            "{\"privateEndpoint\":{\"id\":\"jflcxog\"},\"privateLinkServiceConnectionState\":{\"status\":\"konzmnsik\",\"description\":\"mkqzeqqkdltfzxmh\",\"actionsRequired\":\"hgure\"},\"provisioningState\":\"kwobdagxtibq\"}")
            .toObject(PrivateEndpointConnectionProperties.class);
        Assertions.assertEquals("jflcxog", model.privateEndpoint().id());
        Assertions.assertEquals("konzmnsik", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("mkqzeqqkdltfzxmh", model.privateLinkServiceConnectionState().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionProperties model = new PrivateEndpointConnectionProperties()
            .withPrivateEndpoint(new PrivateEndpointProperty().withId("jflcxog"))
            .withPrivateLinkServiceConnectionState(
                new PrivateLinkServiceConnectionStateProperty().withStatus("konzmnsik")
                    .withDescription("mkqzeqqkdltfzxmh"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionProperties.class);
        Assertions.assertEquals("jflcxog", model.privateEndpoint().id());
        Assertions.assertEquals("konzmnsik", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("mkqzeqqkdltfzxmh", model.privateLinkServiceConnectionState().description());
    }
}
