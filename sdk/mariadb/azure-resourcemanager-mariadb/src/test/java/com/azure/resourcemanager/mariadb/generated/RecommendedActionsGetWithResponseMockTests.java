// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mariadb.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mariadb.MariaDBManager;
import com.azure.resourcemanager.mariadb.models.RecommendationAction;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RecommendedActionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"advisorName\":\"faxvxil\",\"sessionId\":\"tg\",\"actionId\":259452846,\"createdTime\":\"2021-09-14T23:20:53Z\",\"expirationTime\":\"2021-09-18T20:37:44Z\",\"reason\":\"tjj\",\"recommendationType\":\"qlqhycavodg\",\"details\":{\"iaa\":\"beesmieknlra\",\"agt\":\"iuagydwqfbylyrfg\"}},\"id\":\"ojocqwogf\",\"name\":\"zjvusfzldmo\",\"type\":\"uxylfsbtkadpy\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MariaDBManager manager = MariaDBManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        RecommendationAction response = manager.recommendedActions()
            .getWithResponse("cdyuibhmfdnbzyd", "f", "fcjnaeoisrvhmgor", "fukiscvwmzhw",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("faxvxil", response.advisorName());
        Assertions.assertEquals("tg", response.sessionId());
        Assertions.assertEquals(259452846, response.actionId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-14T23:20:53Z"), response.createdTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-18T20:37:44Z"), response.expirationTime());
        Assertions.assertEquals("tjj", response.reason());
        Assertions.assertEquals("qlqhycavodg", response.recommendationType());
        Assertions.assertEquals("beesmieknlra", response.details().get("iaa"));
    }
}
