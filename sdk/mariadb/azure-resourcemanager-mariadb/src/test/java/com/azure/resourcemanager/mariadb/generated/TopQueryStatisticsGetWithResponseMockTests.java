// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mariadb.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mariadb.MariaDBManager;
import com.azure.resourcemanager.mariadb.models.QueryStatistic;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TopQueryStatisticsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"queryId\":\"gsj\",\"startTime\":\"2021-04-30T17:49:14Z\",\"endTime\":\"2021-11-19T04:56:42Z\",\"aggregationFunction\":\"nobaiyhddviacegf\",\"databaseNames\":[\"tfpmvmemfnczdw\",\"vbalxlllc\",\"podbzevwrdnh\"],\"queryExecutionCount\":1806238966762624477,\"metricName\":\"sjcswsmystuluqyp\",\"metricDisplayName\":\"vlerchpqbmfpjba\",\"metricValue\":96.84135785849544,\"metricValueUnit\":\"cxsspuunnoxyh\"},\"id\":\"xgqddrih\",\"name\":\"fhoqca\",\"type\":\"ewda\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MariaDBManager manager = MariaDBManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        QueryStatistic response = manager.topQueryStatistics()
            .getWithResponse("px", "wjplma", "stcyohpfkyrkdbd", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("gsj", response.queryId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-30T17:49:14Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-19T04:56:42Z"), response.endTime());
        Assertions.assertEquals("nobaiyhddviacegf", response.aggregationFunction());
        Assertions.assertEquals("tfpmvmemfnczdw", response.databaseNames().get(0));
        Assertions.assertEquals(1806238966762624477L, response.queryExecutionCount());
        Assertions.assertEquals("sjcswsmystuluqyp", response.metricName());
        Assertions.assertEquals("vlerchpqbmfpjba", response.metricDisplayName());
        Assertions.assertEquals(96.84135785849544D, response.metricValue());
        Assertions.assertEquals("cxsspuunnoxyh", response.metricValueUnit());
    }
}
