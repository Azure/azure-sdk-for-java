// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mariadb.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mariadb.MariaDBManager;
import com.azure.resourcemanager.mariadb.models.WaitStatistic;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WaitStatisticsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"startTime\":\"2021-01-16T07:41:18Z\",\"endTime\":\"2021-07-21T11:43:29Z\",\"eventName\":\"zrrjvpgly\",\"eventTypeName\":\"gkrvqeevto\",\"queryId\":1091393206697441407,\"databaseName\":\"t\",\"userId\":2510251875801272544,\"count\":7661539638900058482,\"totalTimeInMs\":2.5969741077197406},\"id\":\"zvfvaawz\",\"name\":\"adflgzu\",\"type\":\"iglaecx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MariaDBManager manager = MariaDBManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WaitStatistic response = manager.waitStatistics()
            .getWithResponse("wk", "ziycslevufuztck", "yhjtqedcgzu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(OffsetDateTime.parse("2021-01-16T07:41:18Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-21T11:43:29Z"), response.endTime());
        Assertions.assertEquals("zrrjvpgly", response.eventName());
        Assertions.assertEquals("gkrvqeevto", response.eventTypeName());
        Assertions.assertEquals(1091393206697441407L, response.queryId());
        Assertions.assertEquals("t", response.databaseName());
        Assertions.assertEquals(2510251875801272544L, response.userId());
        Assertions.assertEquals(7661539638900058482L, response.count());
        Assertions.assertEquals(2.5969741077197406D, response.totalTimeInMs());
    }
}
