// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mariadb.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mariadb.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.mariadb.models.PrivateEndpointProperty;
import com.azure.resourcemanager.mariadb.models.PrivateLinkServiceConnectionStateProperty;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"privateEndpoint\":{\"id\":\"sotftpvj\"},\"privateLinkServiceConnectionState\":{\"status\":\"exilzznfqqnvwpmq\",\"description\":\"aruoujmkcjhwqyt\",\"actionsRequired\":\"ybn\"},\"provisioningState\":\"ewgdrjervn\"},\"id\":\"enq\",\"name\":\"eh\",\"type\":\"ndoygmifthnzdnd\"}")
                .toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("sotftpvj", model.privateEndpoint().id());
        Assertions.assertEquals("exilzznfqqnvwpmq", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("aruoujmkcjhwqyt", model.privateLinkServiceConnectionState().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionInner model =
            new PrivateEndpointConnectionInner()
                .withPrivateEndpoint(new PrivateEndpointProperty().withId("sotftpvj"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionStateProperty()
                        .withStatus("exilzznfqqnvwpmq")
                        .withDescription("aruoujmkcjhwqyt"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("sotftpvj", model.privateEndpoint().id());
        Assertions.assertEquals("exilzznfqqnvwpmq", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("aruoujmkcjhwqyt", model.privateLinkServiceConnectionState().description());
    }
}
