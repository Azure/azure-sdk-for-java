// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mariadb.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mariadb.fluent.models.TopQueryStatisticsInputProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class TopQueryStatisticsInputPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TopQueryStatisticsInputProperties model = BinaryData.fromString(
            "{\"numberOfTopQueries\":1400002261,\"aggregationFunction\":\"avxbniwdjswztsdb\",\"observedMetric\":\"gnxytxhpzxbz\",\"observationStartTime\":\"2021-05-14T01:35:17Z\",\"observationEndTime\":\"2021-01-14T15:07:39Z\",\"aggregationWindow\":\"abgl\"}")
            .toObject(TopQueryStatisticsInputProperties.class);
        Assertions.assertEquals(1400002261, model.numberOfTopQueries());
        Assertions.assertEquals("avxbniwdjswztsdb", model.aggregationFunction());
        Assertions.assertEquals("gnxytxhpzxbz", model.observedMetric());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-14T01:35:17Z"), model.observationStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-14T15:07:39Z"), model.observationEndTime());
        Assertions.assertEquals("abgl", model.aggregationWindow());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TopQueryStatisticsInputProperties model
            = new TopQueryStatisticsInputProperties().withNumberOfTopQueries(1400002261)
                .withAggregationFunction("avxbniwdjswztsdb")
                .withObservedMetric("gnxytxhpzxbz")
                .withObservationStartTime(OffsetDateTime.parse("2021-05-14T01:35:17Z"))
                .withObservationEndTime(OffsetDateTime.parse("2021-01-14T15:07:39Z"))
                .withAggregationWindow("abgl");
        model = BinaryData.fromObject(model).toObject(TopQueryStatisticsInputProperties.class);
        Assertions.assertEquals(1400002261, model.numberOfTopQueries());
        Assertions.assertEquals("avxbniwdjswztsdb", model.aggregationFunction());
        Assertions.assertEquals("gnxytxhpzxbz", model.observedMetric());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-14T01:35:17Z"), model.observationStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-14T15:07:39Z"), model.observationEndTime());
        Assertions.assertEquals("abgl", model.aggregationWindow());
    }
}
