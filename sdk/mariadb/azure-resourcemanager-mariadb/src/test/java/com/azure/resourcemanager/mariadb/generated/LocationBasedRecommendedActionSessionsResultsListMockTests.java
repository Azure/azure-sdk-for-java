// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mariadb.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mariadb.MariaDBManager;
import com.azure.resourcemanager.mariadb.models.RecommendationAction;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LocationBasedRecommendedActionSessionsResultsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"advisorName\":\"xjjs\",\"sessionId\":\"qbeitpkxztmoob\",\"actionId\":358908286,\"createdTime\":\"2021-05-25T12:15:23Z\",\"expirationTime\":\"2021-09-03T03:39:31Z\",\"reason\":\"cwq\",\"recommendationType\":\"imaq\",\"details\":{\"yhohujswtwkozzwc\":\"em\",\"wpfaj\":\"lkb\"}},\"id\":\"jwltlwtjjgu\",\"name\":\"talhsnvkcdmxzr\",\"type\":\"oaimlnw\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MariaDBManager manager = MariaDBManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<RecommendationAction> response = manager.locationBasedRecommendedActionSessionsResults()
            .list("kkzjcjbtrga", "hvv", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xjjs", response.iterator().next().advisorName());
        Assertions.assertEquals("qbeitpkxztmoob", response.iterator().next().sessionId());
        Assertions.assertEquals(358908286, response.iterator().next().actionId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-25T12:15:23Z"), response.iterator().next().createdTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-03T03:39:31Z"),
            response.iterator().next().expirationTime());
        Assertions.assertEquals("cwq", response.iterator().next().reason());
        Assertions.assertEquals("imaq", response.iterator().next().recommendationType());
        Assertions.assertEquals("em", response.iterator().next().details().get("yhohujswtwkozzwc"));
    }
}
