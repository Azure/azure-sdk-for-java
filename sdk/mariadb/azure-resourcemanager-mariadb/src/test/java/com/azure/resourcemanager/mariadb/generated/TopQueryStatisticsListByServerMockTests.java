// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mariadb.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mariadb.MariaDBManager;
import com.azure.resourcemanager.mariadb.models.QueryStatistic;
import com.azure.resourcemanager.mariadb.models.TopQueryStatisticsInput;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TopQueryStatisticsListByServerMockTests {
    @Test
    public void testListByServer() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"queryId\":\"ogtqxepnylbf\",\"startTime\":\"2021-07-07T20:12:10Z\",\"endTime\":\"2021-08-25T02:45:25Z\",\"aggregationFunction\":\"tlvofq\",\"databaseNames\":[\"fcibyfmowuxrkj\",\"vdwxfzwi\",\"vwzjbhyz\"],\"queryExecutionCount\":7980088587869256386,\"metricName\":\"ambtrnegvm\",\"metricDisplayName\":\"uqeqv\",\"metricValue\":74.03409193111484,\"metricValueUnit\":\"stjbkkdmfl\"},\"id\":\"est\",\"name\":\"jlxr\",\"type\":\"ilozapeewchpxlk\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MariaDBManager manager = MariaDBManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<QueryStatistic> response = manager.topQueryStatistics()
            .listByServer("mdjvlpj", "xkzb",
                new TopQueryStatisticsInput().withNumberOfTopQueries(979350903)
                    .withAggregationFunction("sgeivsiy")
                    .withObservedMetric("zkdnc")
                    .withObservationStartTime(OffsetDateTime.parse("2021-11-26T19:10:35Z"))
                    .withObservationEndTime(OffsetDateTime.parse("2021-11-18T13:01:59Z"))
                    .withAggregationWindow("onbzoggculapzwy"),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ogtqxepnylbf", response.iterator().next().queryId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-07T20:12:10Z"), response.iterator().next().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-25T02:45:25Z"), response.iterator().next().endTime());
        Assertions.assertEquals("tlvofq", response.iterator().next().aggregationFunction());
        Assertions.assertEquals("fcibyfmowuxrkj", response.iterator().next().databaseNames().get(0));
        Assertions.assertEquals(7980088587869256386L, response.iterator().next().queryExecutionCount());
        Assertions.assertEquals("ambtrnegvm", response.iterator().next().metricName());
        Assertions.assertEquals("uqeqv", response.iterator().next().metricDisplayName());
        Assertions.assertEquals(74.03409193111484D, response.iterator().next().metricValue());
        Assertions.assertEquals("stjbkkdmfl", response.iterator().next().metricValueUnit());
    }
}
