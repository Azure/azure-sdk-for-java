// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mariadb.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mariadb.MariaDBManager;
import com.azure.resourcemanager.mariadb.fluent.models.ConfigurationInner;
import com.azure.resourcemanager.mariadb.fluent.models.ConfigurationListResultInner;
import com.azure.resourcemanager.mariadb.models.ConfigurationListResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ServerParametersListUpdateConfigurationsMockTests {
    @Test
    public void testListUpdateConfigurations() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"value\":\"maehvbbxurip\",\"description\":\"fnhtbaxkgxyw\",\"defaultValue\":\"kpyklyhp\",\"dataType\":\"odpvruudlgzib\",\"allowedValues\":\"ostgkts\",\"source\":\"dxeclzedqbcvh\"},\"id\":\"lhpl\",\"name\":\"dqkdlwwqfbu\",\"type\":\"lkxt\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MariaDBManager manager = MariaDBManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ConfigurationListResult response = manager.serverParameters()
            .listUpdateConfigurations("zvxurisjnhny", "xifqjzgxm",
                new ConfigurationListResultInner()
                    .withValue(Arrays.asList(new ConfigurationInner().withValue("wp").withSource("slirciz"),
                        new ConfigurationInner().withValue("z").withSource("ejd"),
                        new ConfigurationInner().withValue("v").withSource("sx"))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("maehvbbxurip", response.value().get(0).value());
        Assertions.assertEquals("dxeclzedqbcvh", response.value().get(0).source());
    }
}
