// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.voicelive.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Azure standard voice configuration.
 */
@Fluent
public final class AzureStandardVoice extends AzureVoice {
    /*
     * The type of the Azure voice.
     */
    @Generated
    private AzureVoiceType type = AzureVoiceType.AZURE_STANDARD;

    /*
     * Voice name cannot be empty.
     */
    @Generated
    private final String name;

    /*
     * Temperature must be between 0.0 and 1.0.
     */
    @Generated
    private Double temperature;

    /*
     * The custom_lexicon_url property.
     */
    @Generated
    private String customLexiconUrl;

    /*
     * The prefer_locales property.
     */
    @Generated
    private List<String> preferLocales;

    /*
     * The locale property.
     */
    @Generated
    private String locale;

    /*
     * The style property.
     */
    @Generated
    private String style;

    /*
     * The pitch property.
     */
    @Generated
    private String pitch;

    /*
     * The rate property.
     */
    @Generated
    private String rate;

    /*
     * The volume property.
     */
    @Generated
    private String volume;

    /**
     * Creates an instance of AzureStandardVoice class.
     * 
     * @param name the name value to set.
     */
    @Generated
    public AzureStandardVoice(String name) {
        this.name = name;
    }

    /**
     * Get the type property: The type of the Azure voice.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public AzureVoiceType getType() {
        return this.type;
    }

    /**
     * Get the name property: Voice name cannot be empty.
     * 
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Get the temperature property: Temperature must be between 0.0 and 1.0.
     * 
     * @return the temperature value.
     */
    @Generated
    public Double getTemperature() {
        return this.temperature;
    }

    /**
     * Set the temperature property: Temperature must be between 0.0 and 1.0.
     * 
     * @param temperature the temperature value to set.
     * @return the AzureStandardVoice object itself.
     */
    @Generated
    public AzureStandardVoice setTemperature(Double temperature) {
        this.temperature = temperature;
        return this;
    }

    /**
     * Get the customLexiconUrl property: The custom_lexicon_url property.
     * 
     * @return the customLexiconUrl value.
     */
    @Generated
    public String getCustomLexiconUrl() {
        return this.customLexiconUrl;
    }

    /**
     * Set the customLexiconUrl property: The custom_lexicon_url property.
     * 
     * @param customLexiconUrl the customLexiconUrl value to set.
     * @return the AzureStandardVoice object itself.
     */
    @Generated
    public AzureStandardVoice setCustomLexiconUrl(String customLexiconUrl) {
        this.customLexiconUrl = customLexiconUrl;
        return this;
    }

    /**
     * Get the preferLocales property: The prefer_locales property.
     * 
     * @return the preferLocales value.
     */
    @Generated
    public List<String> getPreferLocales() {
        return this.preferLocales;
    }

    /**
     * Set the preferLocales property: The prefer_locales property.
     * 
     * @param preferLocales the preferLocales value to set.
     * @return the AzureStandardVoice object itself.
     */
    @Generated
    public AzureStandardVoice setPreferLocales(List<String> preferLocales) {
        this.preferLocales = preferLocales;
        return this;
    }

    /**
     * Get the locale property: The locale property.
     * 
     * @return the locale value.
     */
    @Generated
    public String getLocale() {
        return this.locale;
    }

    /**
     * Set the locale property: The locale property.
     * 
     * @param locale the locale value to set.
     * @return the AzureStandardVoice object itself.
     */
    @Generated
    public AzureStandardVoice setLocale(String locale) {
        this.locale = locale;
        return this;
    }

    /**
     * Get the style property: The style property.
     * 
     * @return the style value.
     */
    @Generated
    public String getStyle() {
        return this.style;
    }

    /**
     * Set the style property: The style property.
     * 
     * @param style the style value to set.
     * @return the AzureStandardVoice object itself.
     */
    @Generated
    public AzureStandardVoice setStyle(String style) {
        this.style = style;
        return this;
    }

    /**
     * Get the pitch property: The pitch property.
     * 
     * @return the pitch value.
     */
    @Generated
    public String getPitch() {
        return this.pitch;
    }

    /**
     * Set the pitch property: The pitch property.
     * 
     * @param pitch the pitch value to set.
     * @return the AzureStandardVoice object itself.
     */
    @Generated
    public AzureStandardVoice setPitch(String pitch) {
        this.pitch = pitch;
        return this;
    }

    /**
     * Get the rate property: The rate property.
     * 
     * @return the rate value.
     */
    @Generated
    public String getRate() {
        return this.rate;
    }

    /**
     * Set the rate property: The rate property.
     * 
     * @param rate the rate value to set.
     * @return the AzureStandardVoice object itself.
     */
    @Generated
    public AzureStandardVoice setRate(String rate) {
        this.rate = rate;
        return this;
    }

    /**
     * Get the volume property: The volume property.
     * 
     * @return the volume value.
     */
    @Generated
    public String getVolume() {
        return this.volume;
    }

    /**
     * Set the volume property: The volume property.
     * 
     * @param volume the volume value to set.
     * @return the AzureStandardVoice object itself.
     */
    @Generated
    public AzureStandardVoice setVolume(String volume) {
        this.volume = volume;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeNumberField("temperature", this.temperature);
        jsonWriter.writeStringField("custom_lexicon_url", this.customLexiconUrl);
        jsonWriter.writeArrayField("prefer_locales", this.preferLocales,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("locale", this.locale);
        jsonWriter.writeStringField("style", this.style);
        jsonWriter.writeStringField("pitch", this.pitch);
        jsonWriter.writeStringField("rate", this.rate);
        jsonWriter.writeStringField("volume", this.volume);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureStandardVoice from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureStandardVoice if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureStandardVoice.
     */
    @Generated
    public static AzureStandardVoice fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String name = null;
            AzureVoiceType type = AzureVoiceType.AZURE_STANDARD;
            Double temperature = null;
            String customLexiconUrl = null;
            List<String> preferLocales = null;
            String locale = null;
            String style = null;
            String pitch = null;
            String rate = null;
            String volume = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    type = AzureVoiceType.fromString(reader.getString());
                } else if ("temperature".equals(fieldName)) {
                    temperature = reader.getNullable(JsonReader::getDouble);
                } else if ("custom_lexicon_url".equals(fieldName)) {
                    customLexiconUrl = reader.getString();
                } else if ("prefer_locales".equals(fieldName)) {
                    preferLocales = reader.readArray(reader1 -> reader1.getString());
                } else if ("locale".equals(fieldName)) {
                    locale = reader.getString();
                } else if ("style".equals(fieldName)) {
                    style = reader.getString();
                } else if ("pitch".equals(fieldName)) {
                    pitch = reader.getString();
                } else if ("rate".equals(fieldName)) {
                    rate = reader.getString();
                } else if ("volume".equals(fieldName)) {
                    volume = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            AzureStandardVoice deserializedAzureStandardVoice = new AzureStandardVoice(name);
            deserializedAzureStandardVoice.type = type;
            deserializedAzureStandardVoice.temperature = temperature;
            deserializedAzureStandardVoice.customLexiconUrl = customLexiconUrl;
            deserializedAzureStandardVoice.preferLocales = preferLocales;
            deserializedAzureStandardVoice.locale = locale;
            deserializedAzureStandardVoice.style = style;
            deserializedAzureStandardVoice.pitch = pitch;
            deserializedAzureStandardVoice.rate = rate;
            deserializedAzureStandardVoice.volume = volume;

            return deserializedAzureStandardVoice;
        });
    }
}
