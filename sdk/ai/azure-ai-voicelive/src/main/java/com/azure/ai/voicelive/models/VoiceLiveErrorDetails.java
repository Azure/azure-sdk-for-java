// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.voicelive.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Error object returned in case of API failure.
 */
@Immutable
public final class VoiceLiveErrorDetails implements JsonSerializable<VoiceLiveErrorDetails> {
    /*
     * Error code, or null if unspecified.
     */
    @Generated
    private String code;

    /*
     * Human-readable error message.
     */
    @Generated
    private final String message;

    /*
     * Parameter name related to the error, if applicable.
     */
    @Generated
    private String param;

    /*
     * Type or category of the error.
     */
    @Generated
    private String type;

    /*
     * Event id of the error.
     */
    @Generated
    private String eventId;

    /**
     * Creates an instance of VoiceLiveErrorDetails class.
     * 
     * @param message the message value to set.
     */
    @Generated
    private VoiceLiveErrorDetails(String message) {
        this.message = message;
    }

    /**
     * Get the code property: Error code, or null if unspecified.
     * 
     * @return the code value.
     */
    @Generated
    public String getCode() {
        return this.code;
    }

    /**
     * Get the message property: Human-readable error message.
     * 
     * @return the message value.
     */
    @Generated
    public String getMessage() {
        return this.message;
    }

    /**
     * Get the param property: Parameter name related to the error, if applicable.
     * 
     * @return the param value.
     */
    @Generated
    public String getParam() {
        return this.param;
    }

    /**
     * Get the type property: Type or category of the error.
     * 
     * @return the type value.
     */
    @Generated
    public String getType() {
        return this.type;
    }

    /**
     * Get the eventId property: Event id of the error.
     * 
     * @return the eventId value.
     */
    @Generated
    public String getEventId() {
        return this.eventId;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("message", this.message);
        jsonWriter.writeStringField("code", this.code);
        jsonWriter.writeStringField("param", this.param);
        jsonWriter.writeStringField("type", this.type);
        jsonWriter.writeStringField("event_id", this.eventId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VoiceLiveErrorDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VoiceLiveErrorDetails if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the VoiceLiveErrorDetails.
     */
    @Generated
    public static VoiceLiveErrorDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String message = null;
            String code = null;
            String param = null;
            String type = null;
            String eventId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("message".equals(fieldName)) {
                    message = reader.getString();
                } else if ("code".equals(fieldName)) {
                    code = reader.getString();
                } else if ("param".equals(fieldName)) {
                    param = reader.getString();
                } else if ("type".equals(fieldName)) {
                    type = reader.getString();
                } else if ("event_id".equals(fieldName)) {
                    eventId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            VoiceLiveErrorDetails deserializedVoiceLiveErrorDetails = new VoiceLiveErrorDetails(message);
            deserializedVoiceLiveErrorDetails.code = code;
            deserializedVoiceLiveErrorDetails.param = param;
            deserializedVoiceLiveErrorDetails.type = type;
            deserializedVoiceLiveErrorDetails.eventId = eventId;

            return deserializedVoiceLiveErrorDetails;
        });
    }
}
