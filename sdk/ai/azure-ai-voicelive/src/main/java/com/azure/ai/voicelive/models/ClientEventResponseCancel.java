// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.voicelive.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Send this event to cancel an in-progress response. The server will respond
 * with a `response.cancelled` event or an error if there is no response to
 * cancel.
 */
@Fluent
public final class ClientEventResponseCancel extends ClientEvent {
    /*
     * The type of event.
     */
    @Generated
    private ClientEventType type = ClientEventType.RESPONSE_CANCEL;

    /*
     * A specific response ID to cancel - if not provided, will cancel an
     * in-progress response in the default conversation.
     */
    @Generated
    private String responseId;

    /**
     * Creates an instance of ClientEventResponseCancel class.
     */
    @Generated
    public ClientEventResponseCancel() {
    }

    /**
     * Get the type property: The type of event.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public ClientEventType getType() {
        return this.type;
    }

    /**
     * Get the responseId property: A specific response ID to cancel - if not provided, will cancel an
     * in-progress response in the default conversation.
     * 
     * @return the responseId value.
     */
    @Generated
    public String getResponseId() {
        return this.responseId;
    }

    /**
     * Set the responseId property: A specific response ID to cancel - if not provided, will cancel an
     * in-progress response in the default conversation.
     * 
     * @param responseId the responseId value to set.
     * @return the ClientEventResponseCancel object itself.
     */
    @Generated
    public ClientEventResponseCancel setResponseId(String responseId) {
        this.responseId = responseId;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public ClientEventResponseCancel setEventId(String eventId) {
        super.setEventId(eventId);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("event_id", getEventId());
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeStringField("response_id", this.responseId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClientEventResponseCancel from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClientEventResponseCancel if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClientEventResponseCancel.
     */
    @Generated
    public static ClientEventResponseCancel fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClientEventResponseCancel deserializedClientEventResponseCancel = new ClientEventResponseCancel();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("event_id".equals(fieldName)) {
                    deserializedClientEventResponseCancel.setEventId(reader.getString());
                } else if ("type".equals(fieldName)) {
                    deserializedClientEventResponseCancel.type = ClientEventType.fromString(reader.getString());
                } else if ("response_id".equals(fieldName)) {
                    deserializedClientEventResponseCancel.responseId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClientEventResponseCancel;
        });
    }
}
