// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.voicelive.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Configuration for animation outputs including blendshapes and visemes metadata.
 */
@Fluent
public final class Animation implements JsonSerializable<Animation> {
    /*
     * The name of the animation model to use.
     */
    @Generated
    private String modelName;

    /*
     * Set of output data types requested from the animation system.
     */
    @Generated
    private List<AnimationOutputType> outputs;

    /**
     * Creates an instance of Animation class.
     */
    @Generated
    public Animation() {
    }

    /**
     * Get the modelName property: The name of the animation model to use.
     * 
     * @return the modelName value.
     */
    @Generated
    public String getModelName() {
        return this.modelName;
    }

    /**
     * Set the modelName property: The name of the animation model to use.
     * 
     * @param modelName the modelName value to set.
     * @return the Animation object itself.
     */
    @Generated
    public Animation setModelName(String modelName) {
        this.modelName = modelName;
        return this;
    }

    /**
     * Get the outputs property: Set of output data types requested from the animation system.
     * 
     * @return the outputs value.
     */
    @Generated
    public List<AnimationOutputType> getOutputs() {
        return this.outputs;
    }

    /**
     * Set the outputs property: Set of output data types requested from the animation system.
     * 
     * @param outputs the outputs value to set.
     * @return the Animation object itself.
     */
    @Generated
    public Animation setOutputs(List<AnimationOutputType> outputs) {
        this.outputs = outputs;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("model_name", this.modelName);
        jsonWriter.writeArrayField("outputs", this.outputs,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Animation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Animation if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the Animation.
     */
    @Generated
    public static Animation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Animation deserializedAnimation = new Animation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("model_name".equals(fieldName)) {
                    deserializedAnimation.modelName = reader.getString();
                } else if ("outputs".equals(fieldName)) {
                    List<AnimationOutputType> outputs
                        = reader.readArray(reader1 -> AnimationOutputType.fromString(reader1.getString()));
                    deserializedAnimation.outputs = outputs;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAnimation;
        });
    }
}
