// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.agents.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Default memory store implementation.
 */
@Fluent
public final class MemoryStoreDefaultDefinition extends MemoryStoreDefinition {

    /*
     * The kind of the memory store.
     */
    @Generated
    private MemoryStoreKind kind = MemoryStoreKind.DEFAULT;

    /*
     * The name or identifier of the chat completion model deployment used for memory processing.
     */
    @Generated
    private final String chatModel;

    /*
     * The name or identifier of the embedding model deployment used for memory processing.
     */
    @Generated
    private final String embeddingModel;

    /*
     * Default memory store options.
     */
    @Generated
    private MemoryStoreDefaultOptions options;

    /**
     * Creates an instance of MemoryStoreDefaultDefinition class.
     *
     * @param chatModel the chatModel value to set.
     * @param embeddingModel the embeddingModel value to set.
     */
    @Generated
    public MemoryStoreDefaultDefinition(String chatModel, String embeddingModel) {
        this.chatModel = chatModel;
        this.embeddingModel = embeddingModel;
    }

    /**
     * Get the kind property: The kind of the memory store.
     *
     * @return the kind value.
     */
    @Generated
    @Override
    public MemoryStoreKind getKind() {
        return this.kind;
    }

    /**
     * Get the chatModel property: The name or identifier of the chat completion model deployment used for memory
     * processing.
     *
     * @return the chatModel value.
     */
    @Generated
    public String getChatModel() {
        return this.chatModel;
    }

    /**
     * Get the embeddingModel property: The name or identifier of the embedding model deployment used for memory
     * processing.
     *
     * @return the embeddingModel value.
     */
    @Generated
    public String getEmbeddingModel() {
        return this.embeddingModel;
    }

    /**
     * Get the options property: Default memory store options.
     *
     * @return the options value.
     */
    @Generated
    public MemoryStoreDefaultOptions getOptions() {
        return this.options;
    }

    /**
     * Set the options property: Default memory store options.
     *
     * @param options the options value to set.
     * @return the MemoryStoreDefaultDefinition object itself.
     */
    @Generated
    public MemoryStoreDefaultDefinition setOptions(MemoryStoreDefaultOptions options) {
        this.options = options;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("chat_model", this.chatModel);
        jsonWriter.writeStringField("embedding_model", this.embeddingModel);
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        jsonWriter.writeJsonField("options", this.options);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MemoryStoreDefaultDefinition from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of MemoryStoreDefaultDefinition if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MemoryStoreDefaultDefinition.
     */
    @Generated
    public static MemoryStoreDefaultDefinition fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String chatModel = null;
            String embeddingModel = null;
            MemoryStoreKind kind = MemoryStoreKind.DEFAULT;
            MemoryStoreDefaultOptions options = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("chat_model".equals(fieldName)) {
                    chatModel = reader.getString();
                } else if ("embedding_model".equals(fieldName)) {
                    embeddingModel = reader.getString();
                } else if ("kind".equals(fieldName)) {
                    kind = MemoryStoreKind.fromString(reader.getString());
                } else if ("options".equals(fieldName)) {
                    options = MemoryStoreDefaultOptions.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            MemoryStoreDefaultDefinition deserializedMemoryStoreDefaultDefinition
                = new MemoryStoreDefaultDefinition(chatModel, embeddingModel);
            deserializedMemoryStoreDefaultDefinition.kind = kind;
            deserializedMemoryStoreDefaultDefinition.options = options;
            return deserializedMemoryStoreDefaultDefinition;
        });
    }
}
