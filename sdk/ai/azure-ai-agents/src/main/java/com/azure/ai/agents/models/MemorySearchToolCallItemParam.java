// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.agents.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The MemorySearchToolCallItemParam model.
 */
@Fluent
public final class MemorySearchToolCallItemParam extends ItemParam {

    /*
     * The type property.
     */
    @Generated
    private ItemType type = ItemType.MEMORY_SEARCH_CALL;

    /*
     * The results returned from the memory search.
     */
    @Generated
    private List<MemorySearchItem> results;

    /**
     * Creates an instance of MemorySearchToolCallItemParam class.
     */
    @Generated
    public MemorySearchToolCallItemParam() {
    }

    /**
     * Get the type property: The type property.
     *
     * @return the type value.
     */
    @Generated
    @Override
    public ItemType getType() {
        return this.type;
    }

    /**
     * Get the results property: The results returned from the memory search.
     *
     * @return the results value.
     */
    @Generated
    public List<MemorySearchItem> getResults() {
        return this.results;
    }

    /**
     * Set the results property: The results returned from the memory search.
     *
     * @param results the results value to set.
     * @return the MemorySearchToolCallItemParam object itself.
     */
    @Generated
    public MemorySearchToolCallItemParam setResults(List<MemorySearchItem> results) {
        this.results = results;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeArrayField("results", this.results, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MemorySearchToolCallItemParam from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of MemorySearchToolCallItemParam if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MemorySearchToolCallItemParam.
     */
    @Generated
    public static MemorySearchToolCallItemParam fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MemorySearchToolCallItemParam deserializedMemorySearchToolCallItemParam
                = new MemorySearchToolCallItemParam();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("type".equals(fieldName)) {
                    deserializedMemorySearchToolCallItemParam.type = ItemType.fromString(reader.getString());
                } else if ("results".equals(fieldName)) {
                    List<MemorySearchItem> results = reader.readArray(reader1 -> MemorySearchItem.fromJson(reader1));
                    deserializedMemorySearchToolCallItemParam.results = results;
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedMemorySearchToolCallItemParam;
        });
    }
}
