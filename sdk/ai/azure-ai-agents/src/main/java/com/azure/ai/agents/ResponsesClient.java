// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.agents;

import com.azure.ai.agents.implementation.OpenAIJsonHelper;
import com.azure.ai.agents.models.AgentReference;
import com.azure.core.annotation.ServiceClient;
import com.openai.client.OpenAIClient;
import com.openai.core.JsonValue;
import com.openai.models.responses.Response;
import com.openai.models.responses.ResponseCreateParams;
import com.openai.services.blocking.ResponseService;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * Initializes a new instance of the synchronous AgentsClient type.
 */
@ServiceClient(builder = AgentsClientBuilder.class)
public final class ResponsesClient {
    private final ResponseService openAIResponsesClient;

    /**
     * Initializes an instance of ResponsesClient class using the official OpenAI client library.
     *
     * @param openAIClient the OpenAI client.
     */
    ResponsesClient(OpenAIClient openAIClient) {
        this.openAIResponsesClient = openAIClient.responses();
    }

    /**
     * Get the OpenAI client for responses.
     *
     * @return the OpenAI response service client.
     */
    public ResponseService getOpenAIClient() {
        return openAIResponsesClient;
    }

    /**
     * Creates a response with an agent conversation.
     *
     * @param agentReference The agent reference.
     * @param conversationId The conversation ID.
     * @return The created Response.
     */
    public Response createWithAgentConversation(AgentReference agentReference, String conversationId) {
        return createWithAgentConversation(agentReference, conversationId, new ResponseCreateParams.Builder());
    }

    /**
     * Creates a response with an agent conversation.
     *
     * @param agentReference The agent reference.
     * @param conversationId The conversation ID.
     * @param params The parameters to create the response.
     * @return The created Response.
     */
    public Response createWithAgentConversation(AgentReference agentReference, String conversationId,
        ResponseCreateParams.Builder params) {
        Objects.requireNonNull(agentReference, "agentReference cannot be null");
        Objects.requireNonNull(conversationId, "conversationId cannot be null");
        Objects.requireNonNull(params, "params cannot be null");

        JsonValue agentRefJsonValue = OpenAIJsonHelper.toJsonValue(agentReference);

        Map<String, JsonValue> additionalBodyProperties = new HashMap<>();
        params.conversation(conversationId);
        additionalBodyProperties.put("agent", agentRefJsonValue);

        params.additionalBodyProperties(additionalBodyProperties);
        return this.openAIResponsesClient.create(params.build());
    }

}
