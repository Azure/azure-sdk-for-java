// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.agents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A scroll action.
 */
@Immutable
public final class ComputerActionScroll extends ComputerAction {

    /*
     * The type property.
     */
    @Generated
    private ComputerActionType type = ComputerActionType.SCROLL;

    /*
     * The x-coordinate where the scroll occurred.
     */
    @Generated
    private final int x;

    /*
     * The y-coordinate where the scroll occurred.
     */
    @Generated
    private final int y;

    /*
     * The horizontal scroll distance.
     */
    @Generated
    private final int scrollX;

    /*
     * The vertical scroll distance.
     */
    @Generated
    private final int scrollY;

    /**
     * Creates an instance of ComputerActionScroll class.
     *
     * @param x the x value to set.
     * @param y the y value to set.
     * @param scrollX the scrollX value to set.
     * @param scrollY the scrollY value to set.
     */
    @Generated
    public ComputerActionScroll(int x, int y, int scrollX, int scrollY) {
        this.x = x;
        this.y = y;
        this.scrollX = scrollX;
        this.scrollY = scrollY;
    }

    /**
     * Get the type property: The type property.
     *
     * @return the type value.
     */
    @Generated
    @Override
    public ComputerActionType getType() {
        return this.type;
    }

    /**
     * Get the x property: The x-coordinate where the scroll occurred.
     *
     * @return the x value.
     */
    @Generated
    public int getX() {
        return this.x;
    }

    /**
     * Get the y property: The y-coordinate where the scroll occurred.
     *
     * @return the y value.
     */
    @Generated
    public int getY() {
        return this.y;
    }

    /**
     * Get the scrollX property: The horizontal scroll distance.
     *
     * @return the scrollX value.
     */
    @Generated
    public int getScrollX() {
        return this.scrollX;
    }

    /**
     * Get the scrollY property: The vertical scroll distance.
     *
     * @return the scrollY value.
     */
    @Generated
    public int getScrollY() {
        return this.scrollY;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("x", this.x);
        jsonWriter.writeIntField("y", this.y);
        jsonWriter.writeIntField("scroll_x", this.scrollX);
        jsonWriter.writeIntField("scroll_y", this.scrollY);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComputerActionScroll from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComputerActionScroll if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ComputerActionScroll.
     */
    @Generated
    public static ComputerActionScroll fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            int x = 0;
            int y = 0;
            int scrollX = 0;
            int scrollY = 0;
            ComputerActionType type = ComputerActionType.SCROLL;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("x".equals(fieldName)) {
                    x = reader.getInt();
                } else if ("y".equals(fieldName)) {
                    y = reader.getInt();
                } else if ("scroll_x".equals(fieldName)) {
                    scrollX = reader.getInt();
                } else if ("scroll_y".equals(fieldName)) {
                    scrollY = reader.getInt();
                } else if ("type".equals(fieldName)) {
                    type = ComputerActionType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            ComputerActionScroll deserializedComputerActionScroll = new ComputerActionScroll(x, y, scrollX, scrollY);
            deserializedComputerActionScroll.type = type;
            return deserializedComputerActionScroll;
        });
    }
}
