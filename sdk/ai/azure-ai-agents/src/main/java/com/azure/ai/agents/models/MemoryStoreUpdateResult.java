// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.agents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Memory update result.
 */
@Immutable
public final class MemoryStoreUpdateResult implements JsonSerializable<MemoryStoreUpdateResult> {

    /*
     * A list of individual memory operations that were performed during the update.
     */
    @Generated
    private final List<MemoryOperation> memoryOperations;

    /*
     * Usage statistics associated with the memory update operation.
     */
    @Generated
    private final MemoryStoreOperationUsage usage;

    /**
     * Creates an instance of MemoryStoreUpdateResult class.
     *
     * @param memoryOperations the memoryOperations value to set.
     * @param usage the usage value to set.
     */
    @Generated
    private MemoryStoreUpdateResult(List<MemoryOperation> memoryOperations, MemoryStoreOperationUsage usage) {
        this.memoryOperations = memoryOperations;
        this.usage = usage;
    }

    /**
     * Get the memoryOperations property: A list of individual memory operations that were performed during the update.
     *
     * @return the memoryOperations value.
     */
    @Generated
    public List<MemoryOperation> getMemoryOperations() {
        return this.memoryOperations;
    }

    /**
     * Get the usage property: Usage statistics associated with the memory update operation.
     *
     * @return the usage value.
     */
    @Generated
    public MemoryStoreOperationUsage getUsage() {
        return this.usage;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("memory_operations", this.memoryOperations,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("usage", this.usage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MemoryStoreUpdateResult from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of MemoryStoreUpdateResult if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MemoryStoreUpdateResult.
     */
    @Generated
    public static MemoryStoreUpdateResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            List<MemoryOperation> memoryOperations = null;
            MemoryStoreOperationUsage usage = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("memory_operations".equals(fieldName)) {
                    memoryOperations = reader.readArray(reader1 -> MemoryOperation.fromJson(reader1));
                } else if ("usage".equals(fieldName)) {
                    usage = MemoryStoreOperationUsage.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return new MemoryStoreUpdateResult(memoryOperations, usage);
        });
    }
}
