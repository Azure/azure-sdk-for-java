// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.agents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.core.util.BinaryData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A message parameter item with the `assistant` role.
 */
@Immutable
public final class ResponsesAssistantMessageItemParam extends ResponsesMessageItemParam {

    /*
     * The type property.
     */
    @Generated
    private ItemType type = ItemType.MESSAGE;

    /*
     * The role associated with the message.
     */
    @Generated
    private ResponsesMessageRole role = ResponsesMessageRole.ASSISTANT;

    /*
     * The content associated with the message.
     */
    @Generated
    private final BinaryData content;

    /**
     * Creates an instance of ResponsesAssistantMessageItemParam class.
     *
     * @param content the content value to set.
     */
    @Generated
    public ResponsesAssistantMessageItemParam(BinaryData content) {
        this.content = content;
    }

    /**
     * Get the type property: The type property.
     *
     * @return the type value.
     */
    @Generated
    @Override
    public ItemType getType() {
        return this.type;
    }

    /**
     * Get the role property: The role associated with the message.
     *
     * @return the role value.
     */
    @Generated
    @Override
    public ResponsesMessageRole getRole() {
        return this.role;
    }

    /**
     * Get the content property: The content associated with the message.
     *
     * @return the content value.
     */
    @Generated
    public BinaryData getContent() {
        return this.content;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeFieldName("content");
        this.content.writeTo(jsonWriter);
        jsonWriter.writeStringField("role", this.role == null ? null : this.role.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResponsesAssistantMessageItemParam from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResponsesAssistantMessageItemParam if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ResponsesAssistantMessageItemParam.
     */
    @Generated
    public static ResponsesAssistantMessageItemParam fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BinaryData content = null;
            ResponsesMessageRole role = ResponsesMessageRole.ASSISTANT;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("content".equals(fieldName)) {
                    content = reader.getNullable(nonNullReader -> BinaryData.fromObject(nonNullReader.readUntyped()));
                } else if ("role".equals(fieldName)) {
                    role = ResponsesMessageRole.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            ResponsesAssistantMessageItemParam deserializedResponsesAssistantMessageItemParam
                = new ResponsesAssistantMessageItemParam(content);
            deserializedResponsesAssistantMessageItemParam.role = role;
            return deserializedResponsesAssistantMessageItemParam;
        });
    }
}
