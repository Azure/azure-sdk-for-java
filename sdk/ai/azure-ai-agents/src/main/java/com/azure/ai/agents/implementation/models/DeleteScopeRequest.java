// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.agents.implementation.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The DeleteScopeRequest model.
 */
@Immutable
public final class DeleteScopeRequest implements JsonSerializable<DeleteScopeRequest> {

    /*
     * The namespace that logically groups and isolates memories to delete, such as a user ID.
     */
    @Generated
    private final String scope;

    /**
     * Creates an instance of DeleteScopeRequest class.
     *
     * @param scope the scope value to set.
     */
    @Generated
    public DeleteScopeRequest(String scope) {
        this.scope = scope;
    }

    /**
     * Get the scope property: The namespace that logically groups and isolates memories to delete, such as a user ID.
     *
     * @return the scope value.
     */
    @Generated
    public String getScope() {
        return this.scope;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("scope", this.scope);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DeleteScopeRequest from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of DeleteScopeRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DeleteScopeRequest.
     */
    @Generated
    public static DeleteScopeRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String scope = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("scope".equals(fieldName)) {
                    scope = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new DeleteScopeRequest(scope);
        });
    }
}
