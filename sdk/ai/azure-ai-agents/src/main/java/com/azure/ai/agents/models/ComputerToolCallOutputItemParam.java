// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.agents.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The output of a computer tool call.
 */
@Fluent
public final class ComputerToolCallOutputItemParam extends ItemParam {

    /*
     * The type property.
     */
    @Generated
    private ItemType type = ItemType.COMPUTER_CALL_OUTPUT;

    /*
     * The ID of the computer tool call that produced the output.
     */
    @Generated
    private final String callId;

    /*
     * The safety checks reported by the API that have been acknowledged by the
     * developer.
     */
    @Generated
    private List<ComputerToolCallSafetyCheck> acknowledgedSafetyChecks;

    /*
     * The output property.
     */
    @Generated
    private final ComputerToolCallOutputItemOutput output;

    /**
     * Creates an instance of ComputerToolCallOutputItemParam class.
     *
     * @param callId the callId value to set.
     * @param output the output value to set.
     */
    @Generated
    public ComputerToolCallOutputItemParam(String callId, ComputerToolCallOutputItemOutput output) {
        this.callId = callId;
        this.output = output;
    }

    /**
     * Get the type property: The type property.
     *
     * @return the type value.
     */
    @Generated
    @Override
    public ItemType getType() {
        return this.type;
    }

    /**
     * Get the callId property: The ID of the computer tool call that produced the output.
     *
     * @return the callId value.
     */
    @Generated
    public String getCallId() {
        return this.callId;
    }

    /**
     * Get the acknowledgedSafetyChecks property: The safety checks reported by the API that have been acknowledged by
     * the
     * developer.
     *
     * @return the acknowledgedSafetyChecks value.
     */
    @Generated
    public List<ComputerToolCallSafetyCheck> getAcknowledgedSafetyChecks() {
        return this.acknowledgedSafetyChecks;
    }

    /**
     * Set the acknowledgedSafetyChecks property: The safety checks reported by the API that have been acknowledged by
     * the
     * developer.
     *
     * @param acknowledgedSafetyChecks the acknowledgedSafetyChecks value to set.
     * @return the ComputerToolCallOutputItemParam object itself.
     */
    @Generated
    public ComputerToolCallOutputItemParam
        setAcknowledgedSafetyChecks(List<ComputerToolCallSafetyCheck> acknowledgedSafetyChecks) {
        this.acknowledgedSafetyChecks = acknowledgedSafetyChecks;
        return this;
    }

    /**
     * Get the output property: The output property.
     *
     * @return the output value.
     */
    @Generated
    public ComputerToolCallOutputItemOutput getOutput() {
        return this.output;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("call_id", this.callId);
        jsonWriter.writeJsonField("output", this.output);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeArrayField("acknowledged_safety_checks", this.acknowledgedSafetyChecks,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComputerToolCallOutputItemParam from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComputerToolCallOutputItemParam if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ComputerToolCallOutputItemParam.
     */
    @Generated
    public static ComputerToolCallOutputItemParam fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String callId = null;
            ComputerToolCallOutputItemOutput output = null;
            ItemType type = ItemType.COMPUTER_CALL_OUTPUT;
            List<ComputerToolCallSafetyCheck> acknowledgedSafetyChecks = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("call_id".equals(fieldName)) {
                    callId = reader.getString();
                } else if ("output".equals(fieldName)) {
                    output = ComputerToolCallOutputItemOutput.fromJson(reader);
                } else if ("type".equals(fieldName)) {
                    type = ItemType.fromString(reader.getString());
                } else if ("acknowledged_safety_checks".equals(fieldName)) {
                    acknowledgedSafetyChecks
                        = reader.readArray(reader1 -> ComputerToolCallSafetyCheck.fromJson(reader1));
                } else {
                    reader.skipChildren();
                }
            }
            ComputerToolCallOutputItemParam deserializedComputerToolCallOutputItemParam
                = new ComputerToolCallOutputItemParam(callId, output);
            deserializedComputerToolCallOutputItemParam.type = type;
            deserializedComputerToolCallOutputItemParam.acknowledgedSafetyChecks = acknowledgedSafetyChecks;
            return deserializedComputerToolCallOutputItemParam;
        });
    }
}
