// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.agents.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.core.util.BinaryData;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * A structured output that can be produced by the agent.
 */
@Fluent
public final class StructuredOutputDefinition implements JsonSerializable<StructuredOutputDefinition> {

    /*
     * A description of the output to emit. Used by the model to determine when to emit the output.
     */
    @Generated
    private String description;

    /*
     * The JSON schema for the structured output.
     */
    @Generated
    private final Map<String, BinaryData> schema;

    /**
     * Creates an instance of StructuredOutputDefinition class.
     *
     * @param schema the schema value to set.
     */
    @Generated
    public StructuredOutputDefinition(Map<String, BinaryData> schema) {
        this.schema = schema;
    }

    /**
     * Get the description property: A description of the output to emit. Used by the model to determine when to emit
     * the output.
     *
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Set the description property: A description of the output to emit. Used by the model to determine when to emit
     * the output.
     *
     * @param description the description value to set.
     * @return the StructuredOutputDefinition object itself.
     */
    @Generated
    public StructuredOutputDefinition setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the schema property: The JSON schema for the structured output.
     *
     * @return the schema value.
     */
    @Generated
    public Map<String, BinaryData> getSchema() {
        return this.schema;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("schema", this.schema,
            (writer, element) -> writer.writeUntyped(element == null ? null : element.toObject(Object.class)));
        jsonWriter.writeStringField("description", this.description);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StructuredOutputDefinition from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of StructuredOutputDefinition if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the StructuredOutputDefinition.
     */
    @Generated
    public static StructuredOutputDefinition fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Map<String, BinaryData> schema = null;
            String description = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("schema".equals(fieldName)) {
                    schema = reader.readMap(reader1 -> reader1
                        .getNullable(nonNullReader -> BinaryData.fromObject(nonNullReader.readUntyped())));
                } else if ("description".equals(fieldName)) {
                    description = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            StructuredOutputDefinition deserializedStructuredOutputDefinition = new StructuredOutputDefinition(schema);
            deserializedStructuredOutputDefinition.description = description;
            return deserializedStructuredOutputDefinition;
        });
    }
}
