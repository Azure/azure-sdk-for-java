// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.agents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The input definition information for a bing grounding search tool as used to configure an agent.
 */
@Immutable
public final class BingGroundingAgentTool extends Tool {

    /*
     * The type property.
     */
    @Generated
    private ToolType type = ToolType.BING_GROUNDING;

    /*
     * The bing grounding search tool parameters.
     */
    @Generated
    private final BingGroundingSearchToolParameters bingGrounding;

    /**
     * Creates an instance of BingGroundingAgentTool class.
     *
     * @param bingGrounding the bingGrounding value to set.
     */
    @Generated
    public BingGroundingAgentTool(BingGroundingSearchToolParameters bingGrounding) {
        this.bingGrounding = bingGrounding;
    }

    /**
     * Get the type property: The type property.
     *
     * @return the type value.
     */
    @Generated
    @Override
    public ToolType getType() {
        return this.type;
    }

    /**
     * Get the bingGrounding property: The bing grounding search tool parameters.
     *
     * @return the bingGrounding value.
     */
    @Generated
    public BingGroundingSearchToolParameters getBingGrounding() {
        return this.bingGrounding;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("bing_grounding", this.bingGrounding);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BingGroundingAgentTool from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of BingGroundingAgentTool if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the BingGroundingAgentTool.
     */
    @Generated
    public static BingGroundingAgentTool fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BingGroundingSearchToolParameters bingGrounding = null;
            ToolType type = ToolType.BING_GROUNDING;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("bing_grounding".equals(fieldName)) {
                    bingGrounding = BingGroundingSearchToolParameters.fromJson(reader);
                } else if ("type".equals(fieldName)) {
                    type = ToolType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            BingGroundingAgentTool deserializedBingGroundingAgentTool = new BingGroundingAgentTool(bingGrounding);
            deserializedBingGroundingAgentTool.type = type;
            return deserializedBingGroundingAgentTool;
        });
    }
}
