// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.projects.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A Index resource.
 */
@Immutable
public final class IndexResource implements JsonSerializable<IndexResource> {

    /*
     * An index connection id in an IndexResource attached to this agent.
     */
    @Generated
    private final String indexConnectionId;

    /*
     * The name of an index in an IndexResource attached to this agent.
     */
    @Generated
    private final String indexName;

    /**
     * Creates an instance of IndexResource class.
     *
     * @param indexConnectionId the indexConnectionId value to set.
     * @param indexName the indexName value to set.
     */
    @Generated
    public IndexResource(String indexConnectionId, String indexName) {
        this.indexConnectionId = indexConnectionId;
        this.indexName = indexName;
    }

    /**
     * Get the indexConnectionId property: An index connection id in an IndexResource attached to this agent.
     *
     * @return the indexConnectionId value.
     */
    @Generated
    public String getIndexConnectionId() {
        return this.indexConnectionId;
    }

    /**
     * Get the indexName property: The name of an index in an IndexResource attached to this agent.
     *
     * @return the indexName value.
     */
    @Generated
    public String getIndexName() {
        return this.indexName;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("index_connection_id", this.indexConnectionId);
        jsonWriter.writeStringField("index_name", this.indexName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IndexResource from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of IndexResource if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the IndexResource.
     */
    @Generated
    public static IndexResource fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String indexConnectionId = null;
            String indexName = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("index_connection_id".equals(fieldName)) {
                    indexConnectionId = reader.getString();
                } else if ("index_name".equals(fieldName)) {
                    indexName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new IndexResource(indexConnectionId, indexName);
        });
    }
}
