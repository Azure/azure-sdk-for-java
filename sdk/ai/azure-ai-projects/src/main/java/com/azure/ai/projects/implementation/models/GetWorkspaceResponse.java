// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.projects.implementation.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Response from the Workspace - Get operation.
 */
@Immutable
public final class GetWorkspaceResponse implements JsonSerializable<GetWorkspaceResponse> {

    /*
     * A unique identifier for the resource
     */
    @Generated
    private final String id;

    /*
     * The name of the resource
     */
    @Generated
    private final String name;

    /*
     * The properties of the resource
     */
    @Generated
    private final WorkspaceProperties properties;

    /**
     * Creates an instance of GetWorkspaceResponse class.
     *
     * @param id the id value to set.
     * @param name the name value to set.
     * @param properties the properties value to set.
     */
    @Generated
    private GetWorkspaceResponse(String id, String name, WorkspaceProperties properties) {
        this.id = id;
        this.name = name;
        this.properties = properties;
    }

    /**
     * Get the id property: A unique identifier for the resource.
     *
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the name property: The name of the resource.
     *
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Get the properties property: The properties of the resource.
     *
     * @return the properties value.
     */
    @Generated
    public WorkspaceProperties getProperties() {
        return this.properties;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeJsonField("properties", this.properties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GetWorkspaceResponse from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of GetWorkspaceResponse if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the GetWorkspaceResponse.
     */
    @Generated
    public static GetWorkspaceResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            String name = null;
            WorkspaceProperties properties = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    name = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    properties = WorkspaceProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return new GetWorkspaceResponse(id, name, properties);
        });
    }
}
