// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.projects.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
@Immutable
public final class SystemData implements JsonSerializable<SystemData> {

    /*
     * The timestamp the resource was created at.
     */
    @Generated
    private OffsetDateTime createdAt;

    /*
     * The identity that created the resource.
     */
    @Generated
    private String createdBy;

    /*
     * The identity type that created the resource.
     */
    @Generated
    private String createdByType;

    /*
     * The timestamp of resource last modification (UTC)
     */
    @Generated
    private OffsetDateTime lastModifiedAt;

    /**
     * Creates an instance of SystemData class.
     */
    @Generated
    private SystemData() {
    }

    /**
     * Get the createdAt property: The timestamp the resource was created at.
     *
     * @return the createdAt value.
     */
    @Generated
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Get the createdBy property: The identity that created the resource.
     *
     * @return the createdBy value.
     */
    @Generated
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Get the createdByType property: The identity type that created the resource.
     *
     * @return the createdByType value.
     */
    @Generated
    public String getCreatedByType() {
        return this.createdByType;
    }

    /**
     * Get the lastModifiedAt property: The timestamp of resource last modification (UTC).
     *
     * @return the lastModifiedAt value.
     */
    @Generated
    public OffsetDateTime getLastModifiedAt() {
        return this.lastModifiedAt;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SystemData from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of SystemData if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the SystemData.
     */
    @Generated
    public static SystemData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SystemData deserializedSystemData = new SystemData();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("createdAt".equals(fieldName)) {
                    deserializedSystemData.createdAt = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("createdBy".equals(fieldName)) {
                    deserializedSystemData.createdBy = reader.getString();
                } else if ("createdByType".equals(fieldName)) {
                    deserializedSystemData.createdByType = reader.getString();
                } else if ("lastModifiedAt".equals(fieldName)) {
                    deserializedSystemData.lastModifiedAt = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedSystemData;
        });
    }
}
