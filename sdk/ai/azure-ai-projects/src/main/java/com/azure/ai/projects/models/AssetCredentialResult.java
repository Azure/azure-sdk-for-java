// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.projects.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents a reference to a blob for consumption.
 */
@Immutable
public final class AssetCredentialResult implements JsonSerializable<AssetCredentialResult> {

    /*
     * Credential info to access the storage account.
     */
    @Generated
    private final BlobReference blobReference;

    /**
     * Creates an instance of AssetCredentialResult class.
     *
     * @param blobReference the blobReference value to set.
     */
    @Generated
    private AssetCredentialResult(BlobReference blobReference) {
        this.blobReference = blobReference;
    }

    /**
     * Get the blobReference property: Credential info to access the storage account.
     *
     * @return the blobReference value.
     */
    @Generated
    public BlobReference getBlobReference() {
        return this.blobReference;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("blobReference", this.blobReference);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AssetCredentialResult from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AssetCredentialResult if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AssetCredentialResult.
     */
    @Generated
    public static AssetCredentialResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BlobReference blobReference = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("blobReference".equals(fieldName)) {
                    blobReference = BlobReference.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return new AssetCredentialResult(blobReference);
        });
    }
}
