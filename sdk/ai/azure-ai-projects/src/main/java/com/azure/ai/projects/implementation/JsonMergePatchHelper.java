// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.projects.implementation;

import com.azure.ai.projects.models.DatasetVersion;
import com.azure.ai.projects.models.EmbeddingConfiguration;
import com.azure.ai.projects.models.FieldMapping;
import com.azure.ai.projects.models.Index;
import java.util.Map;

/**
 * This is the Helper class to enable json merge patch serialization for a model.
 */
public class JsonMergePatchHelper {
    private static DatasetVersionAccessor datasetVersionAccessor;

    public interface DatasetVersionAccessor {
        DatasetVersion prepareModelForJsonMergePatch(DatasetVersion datasetVersion, boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(DatasetVersion datasetVersion);

        void setDataUri(DatasetVersion datasetVersion, String dataUri);

        void setIsReference(DatasetVersion datasetVersion, Boolean isReference);

        void setConnectionName(DatasetVersion datasetVersion, String connectionName);

        void setId(DatasetVersion datasetVersion, String id);

        void setName(DatasetVersion datasetVersion, String name);

        void setVersion(DatasetVersion datasetVersion, String version);

        void setDescription(DatasetVersion datasetVersion, String description);

        void setTags(DatasetVersion datasetVersion, Map<String, String> tags);
    }

    public static void setDatasetVersionAccessor(DatasetVersionAccessor accessor) {
        datasetVersionAccessor = accessor;
    }

    public static DatasetVersionAccessor getDatasetVersionAccessor() {
        return datasetVersionAccessor;
    }

    private static IndexAccessor indexAccessor;

    public interface IndexAccessor {
        Index prepareModelForJsonMergePatch(Index index, boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(Index index);

        void setId(Index index, String id);

        void setName(Index index, String name);

        void setVersion(Index index, String version);

        void setDescription(Index index, String description);

        void setTags(Index index, Map<String, String> tags);
    }

    public static void setIndexAccessor(IndexAccessor accessor) {
        indexAccessor = accessor;
    }

    public static IndexAccessor getIndexAccessor() {
        return indexAccessor;
    }

    private static FieldMappingAccessor fieldMappingAccessor;

    public interface FieldMappingAccessor {
        FieldMapping prepareModelForJsonMergePatch(FieldMapping fieldMapping, boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(FieldMapping fieldMapping);
    }

    public static void setFieldMappingAccessor(FieldMappingAccessor accessor) {
        fieldMappingAccessor = accessor;
    }

    public static FieldMappingAccessor getFieldMappingAccessor() {
        return fieldMappingAccessor;
    }

    private static EmbeddingConfigurationAccessor embeddingConfigurationAccessor;

    public interface EmbeddingConfigurationAccessor {
        EmbeddingConfiguration prepareModelForJsonMergePatch(EmbeddingConfiguration embeddingConfiguration,
            boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(EmbeddingConfiguration embeddingConfiguration);
    }

    public static void setEmbeddingConfigurationAccessor(EmbeddingConfigurationAccessor accessor) {
        embeddingConfigurationAccessor = accessor;
    }

    public static EmbeddingConfigurationAccessor getEmbeddingConfigurationAccessor() {
        return embeddingConfigurationAccessor;
    }
}
