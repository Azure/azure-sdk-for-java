// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.projects.implementation;

import com.azure.ai.projects.models.Evaluation;
import com.azure.ai.projects.models.EvaluationTarget;
import com.azure.ai.projects.models.EvaluatorConfiguration;
import com.azure.ai.projects.models.InputData;
import com.azure.ai.projects.models.TargetModelConfig;

/**
 * This is the Helper class to enable json merge patch serialization for a model.
 */
public class JsonMergePatchHelper {
    private static EvaluationAccessor evaluationAccessor;

    public interface EvaluationAccessor {
        Evaluation prepareModelForJsonMergePatch(Evaluation evaluation, boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(Evaluation evaluation);
    }

    public static void setEvaluationAccessor(EvaluationAccessor accessor) {
        evaluationAccessor = accessor;
    }

    public static EvaluationAccessor getEvaluationAccessor() {
        return evaluationAccessor;
    }

    private static InputDataAccessor inputDataAccessor;

    public interface InputDataAccessor {
        InputData prepareModelForJsonMergePatch(InputData inputData, boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(InputData inputData);
    }

    public static void setInputDataAccessor(InputDataAccessor accessor) {
        inputDataAccessor = accessor;
    }

    public static InputDataAccessor getInputDataAccessor() {
        return inputDataAccessor;
    }

    private static EvaluationTargetAccessor evaluationTargetAccessor;

    public interface EvaluationTargetAccessor {
        EvaluationTarget prepareModelForJsonMergePatch(EvaluationTarget evaluationTarget,
            boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(EvaluationTarget evaluationTarget);
    }

    public static void setEvaluationTargetAccessor(EvaluationTargetAccessor accessor) {
        evaluationTargetAccessor = accessor;
    }

    public static EvaluationTargetAccessor getEvaluationTargetAccessor() {
        return evaluationTargetAccessor;
    }

    private static TargetModelConfigAccessor targetModelConfigAccessor;

    public interface TargetModelConfigAccessor {
        TargetModelConfig prepareModelForJsonMergePatch(TargetModelConfig targetModelConfig,
            boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(TargetModelConfig targetModelConfig);
    }

    public static void setTargetModelConfigAccessor(TargetModelConfigAccessor accessor) {
        targetModelConfigAccessor = accessor;
    }

    public static TargetModelConfigAccessor getTargetModelConfigAccessor() {
        return targetModelConfigAccessor;
    }

    private static EvaluatorConfigurationAccessor evaluatorConfigurationAccessor;

    public interface EvaluatorConfigurationAccessor {
        EvaluatorConfiguration prepareModelForJsonMergePatch(EvaluatorConfiguration evaluatorConfiguration,
            boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(EvaluatorConfiguration evaluatorConfiguration);
    }

    public static void setEvaluatorConfigurationAccessor(EvaluatorConfigurationAccessor accessor) {
        evaluatorConfigurationAccessor = accessor;
    }

    public static EvaluatorConfigurationAccessor getEvaluatorConfigurationAccessor() {
        return evaluatorConfigurationAccessor;
    }
}
