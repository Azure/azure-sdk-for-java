// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.projects;

import com.azure.ai.projects.implementation.TelemetriesImpl;
import com.azure.ai.projects.implementation.models.GetAppInsightsResponse;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;

/**
 * Initializes a new instance of the synchronous AIProjectClient type.
 */
@ServiceClient(builder = AIProjectClientBuilder.class)
public final class TelemetryClient {

    @Generated
    private final TelemetriesImpl serviceClient;

    /**
     * Initializes an instance of TelemetryClient class.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    TelemetryClient(TelemetriesImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Gets the properties of the specified Application Insights resource.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     id: String (Required)
     *     name: String (Required)
     *     properties (Required): {
     *         ConnectionString: String (Required)
     *     }
     * }
     * }
     * </pre>
     *
     * @param appInsightsResourceUrl The AppInsights Azure resource Url. It should have the format:
     * '/subscriptions/{subscription_id}/resourceGroups/{resource_group_name}/providers/microsoft.insights/components/{resourcename}'.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the properties of the specified Application Insights resource along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<BinaryData> getAppInsightsWithResponse(String appInsightsResourceUrl, RequestOptions requestOptions) {
        return this.serviceClient.getAppInsightsWithResponse(appInsightsResourceUrl, requestOptions);
    }

    /**
     * Gets the properties of the specified Application Insights resource.
     *
     * @param appInsightsResourceUrl The AppInsights Azure resource Url. It should have the format:
     * '/subscriptions/{subscription_id}/resourceGroups/{resource_group_name}/providers/microsoft.insights/components/{resourcename}'.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the specified Application Insights resource.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    GetAppInsightsResponse getAppInsights(String appInsightsResourceUrl) {
        // Generated convenience method for getAppInsightsWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getAppInsightsWithResponse(appInsightsResourceUrl, requestOptions).getValue()
            .toObject(GetAppInsightsResponse.class);
    }
}
