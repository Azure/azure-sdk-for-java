// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.projects.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * SAS Credential definition.
 */
@Immutable
public final class BlobReferenceSasCredential implements JsonSerializable<BlobReferenceSasCredential> {
    /*
     * SAS uri
     */
    @Generated
    private String sasUri;

    /*
     * Type of credential
     */
    @Generated
    private final String type = "SAS";

    /**
     * Creates an instance of BlobReferenceSasCredential class.
     */
    @Generated
    private BlobReferenceSasCredential() {
    }

    /**
     * Get the sasUri property: SAS uri.
     * 
     * @return the sasUri value.
     */
    @Generated
    public String getSasUri() {
        return this.sasUri;
    }

    /**
     * Get the type property: Type of credential.
     * 
     * @return the type value.
     */
    @Generated
    public String getType() {
        return this.type;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BlobReferenceSasCredential from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BlobReferenceSasCredential if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the BlobReferenceSasCredential.
     */
    @Generated
    public static BlobReferenceSasCredential fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BlobReferenceSasCredential deserializedBlobReferenceSasCredential = new BlobReferenceSasCredential();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sasUri".equals(fieldName)) {
                    deserializedBlobReferenceSasCredential.sasUri = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBlobReferenceSasCredential;
        });
    }
}
