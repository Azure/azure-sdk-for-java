// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.projects.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure OpenAI model configuration. The API version would be selected by the service for querying the model.
 */
@Immutable
public final class AzureOpenAIModelConfiguration extends TargetConfig {

    /*
     * Type of the model configuration.
     */
    @Generated
    private String type = "AzureOpenAIModel";

    /*
     * Deployment name for AOAI model. Example: gpt-4o if in AIServices or connection based
     * `connection_name/deployment_name` (i.e. `my-aoai-connection/gpt-4o`.
     */
    @Generated
    private final String modelDeploymentName;

    /**
     * Creates an instance of AzureOpenAIModelConfiguration class.
     *
     * @param modelDeploymentName the modelDeploymentName value to set.
     */
    @Generated
    public AzureOpenAIModelConfiguration(String modelDeploymentName) {
        this.modelDeploymentName = modelDeploymentName;
    }

    /**
     * Get the type property: Type of the model configuration.
     *
     * @return the type value.
     */
    @Generated
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the modelDeploymentName property: Deployment name for AOAI model. Example: gpt-4o if in AIServices or
     * connection based `connection_name/deployment_name` (i.e. `my-aoai-connection/gpt-4o`.
     *
     * @return the modelDeploymentName value.
     */
    @Generated
    public String getModelDeploymentName() {
        return this.modelDeploymentName;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("modelDeploymentName", this.modelDeploymentName);
        jsonWriter.writeStringField("type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureOpenAIModelConfiguration from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureOpenAIModelConfiguration if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureOpenAIModelConfiguration.
     */
    @Generated
    public static AzureOpenAIModelConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String modelDeploymentName = null;
            String type = "AzureOpenAIModel";
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("modelDeploymentName".equals(fieldName)) {
                    modelDeploymentName = reader.getString();
                } else if ("type".equals(fieldName)) {
                    type = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            AzureOpenAIModelConfiguration deserializedAzureOpenAIModelConfiguration
                = new AzureOpenAIModelConfiguration(modelDeploymentName);
            deserializedAzureOpenAIModelConfiguration.type = type;
            return deserializedAzureOpenAIModelConfiguration;
        });
    }
}
