// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.projects.models;

import com.azure.ai.projects.implementation.JsonMergePatchHelper;
import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

/**
 * Azure OpenAI model configuration. The API version would be selected by the service for querying the model.
 */
@Fluent
public final class AOAIModelConfig extends TargetModelConfig {

    /*
     * Type of the model configuration.
     */
    @Generated
    private String type = "AOAI";

    /*
     * Endpoint URL for AOAI model.
     */
    @Generated
    private String azureEndpoint;

    /*
     * API Key for AOAI model.
     */
    @Generated
    private String apiKey;

    /*
     * Deployment name for AOAI model.
     */
    @Generated
    private String azureDeployment;

    /**
     * Stores updated model property, the value is property name, not serialized name.
     */
    @Generated
    private final Set<String> updatedProperties = new HashSet<>();

    /**
     * Creates an instance of AOAIModelConfig class.
     */
    @Generated
    public AOAIModelConfig() {
    }

    /**
     * Get the type property: Type of the model configuration.
     *
     * @return the type value.
     */
    @Generated
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the azureEndpoint property: Endpoint URL for AOAI model.
     *
     * @return the azureEndpoint value.
     */
    @Generated
    public String getAzureEndpoint() {
        return this.azureEndpoint;
    }

    /**
     * Set the azureEndpoint property: Endpoint URL for AOAI model.
     * <p>Required when create the resource.</p>
     *
     * @param azureEndpoint the azureEndpoint value to set.
     * @return the AOAIModelConfig object itself.
     */
    @Generated
    public AOAIModelConfig setAzureEndpoint(String azureEndpoint) {
        this.azureEndpoint = azureEndpoint;
        this.updatedProperties.add("azureEndpoint");
        return this;
    }

    /**
     * Get the apiKey property: API Key for AOAI model.
     *
     * @return the apiKey value.
     */
    @Generated
    public String getApiKey() {
        return this.apiKey;
    }

    /**
     * Set the apiKey property: API Key for AOAI model.
     * <p>Required when create the resource.</p>
     *
     * @param apiKey the apiKey value to set.
     * @return the AOAIModelConfig object itself.
     */
    @Generated
    public AOAIModelConfig setApiKey(String apiKey) {
        this.apiKey = apiKey;
        this.updatedProperties.add("apiKey");
        return this;
    }

    /**
     * Get the azureDeployment property: Deployment name for AOAI model.
     *
     * @return the azureDeployment value.
     */
    @Generated
    public String getAzureDeployment() {
        return this.azureDeployment;
    }

    /**
     * Set the azureDeployment property: Deployment name for AOAI model.
     * <p>Required when create the resource.</p>
     *
     * @param azureDeployment the azureDeployment value to set.
     * @return the AOAIModelConfig object itself.
     */
    @Generated
    public AOAIModelConfig setAzureDeployment(String azureDeployment) {
        this.azureDeployment = azureDeployment;
        this.updatedProperties.add("azureDeployment");
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        if (JsonMergePatchHelper.getTargetModelConfigAccessor().isJsonMergePatch(this)) {
            return toJsonMergePatch(jsonWriter);
        } else {
            jsonWriter.writeStartObject();
            jsonWriter.writeStringField("type", this.type);
            jsonWriter.writeStringField("azureEndpoint", this.azureEndpoint);
            jsonWriter.writeStringField("apiKey", this.apiKey);
            jsonWriter.writeStringField("azureDeployment", this.azureDeployment);
            return jsonWriter.writeEndObject();
        }
    }

    @Generated
    private JsonWriter toJsonMergePatch(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type);
        if (updatedProperties.contains("azureEndpoint")) {
            if (this.azureEndpoint == null) {
                jsonWriter.writeNullField("azureEndpoint");
            } else {
                jsonWriter.writeStringField("azureEndpoint", this.azureEndpoint);
            }
        }
        if (updatedProperties.contains("apiKey")) {
            if (this.apiKey == null) {
                jsonWriter.writeNullField("apiKey");
            } else {
                jsonWriter.writeStringField("apiKey", this.apiKey);
            }
        }
        if (updatedProperties.contains("azureDeployment")) {
            if (this.azureDeployment == null) {
                jsonWriter.writeNullField("azureDeployment");
            } else {
                jsonWriter.writeStringField("azureDeployment", this.azureDeployment);
            }
        }
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AOAIModelConfig from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AOAIModelConfig if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AOAIModelConfig.
     */
    @Generated
    public static AOAIModelConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AOAIModelConfig deserializedAOAIModelConfig = new AOAIModelConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("type".equals(fieldName)) {
                    deserializedAOAIModelConfig.type = reader.getString();
                } else if ("azureEndpoint".equals(fieldName)) {
                    deserializedAOAIModelConfig.azureEndpoint = reader.getString();
                } else if ("apiKey".equals(fieldName)) {
                    deserializedAOAIModelConfig.apiKey = reader.getString();
                } else if ("azureDeployment".equals(fieldName)) {
                    deserializedAOAIModelConfig.azureDeployment = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedAOAIModelConfig;
        });
    }
}
