{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "sku": {
            "type": "string"
        },
        "tagValues": {
            "type": "object"
        },
        "virtualNetworkType": {
            "type": "string"
        },
        "vnet": {
            "type": "object"
        },
        "ipRules": {
            "type": "array"
        },
        "privateEndpoints": {
            "type": "array"
        },
        "privateDnsZone": {
            "type": "string"
        },
        "resourceGroupName": {
            "type": "string"
        },
        "resourceGroupId": {
            "type": "string"
        },
        "uniqueId": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "name": "deployVnet",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2020-04-01",
                            "name": "[if(equals(parameters('virtualNetworkType'), 'External'), parameters('vnet').name, variables('defaultVNetName'))]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": "[if(equals(parameters('virtualNetworkType'), 'External'), parameters('vnet').addressPrefixes, json(concat('[{\"', variables('defaultAddressPrefix'),'\"}]')))]"
                                },
                                "subnets": [
                                    {
                                        "name": "[if(equals(parameters('virtualNetworkType'), 'External'), parameters('vnet').subnets.subnet.name, variables('defaultSubnetName'))]",
                                        "properties": {
                                            "serviceEndpoints": [
                                                {
                                                    "service": "Microsoft.CognitiveServices",
                                                    "locations": [
                                                        "[parameters('location')]"
                                                    ]
                                                }
                                            ],
                                            "addressPrefix": "[if(equals(parameters('virtualNetworkType'), 'External'), parameters('vnet').subnets.subnet.addressPrefix, variables('defaultAddressPrefix'))]"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                "parameters": {}
            },
            "condition": "[and(and(not(empty(parameters('vnet'))), equals(parameters('vnet').newOrExisting, 'new')), equals(parameters('virtualNetworkType'), 'External'))]"
        },
        {
            "apiVersion": "2022-03-01",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.CognitiveServices/accounts",
            "kind": "OpenAI",
            "tags": "[if(contains(parameters('tagValues'), 'Microsoft.CognitiveServices/accounts'), parameters('tagValues')['Microsoft.CognitiveServices/accounts'], json('{}'))]",
            "sku": {
                "name": "[parameters('sku')]"
            },
            "properties": {
                "customSubDomainName": "[toLower(parameters('name'))]",
                "publicNetworkAccess": "[if(equals(parameters('virtualNetworkType'), 'Internal'), 'Disabled', 'Enabled')]",
                "networkAcls": {
                    "defaultAction": "[if(equals(parameters('virtualNetworkType'), 'External'), 'Deny', 'Allow')]",
                    "virtualNetworkRules": "[if(equals(parameters('virtualNetworkType'), 'External'), json(concat('[{\"id\": \"', concat(subscription().id, '/resourceGroups/', parameters('vnet').resourceGroup, '/providers/Microsoft.Network/virtualNetworks/', parameters('vnet').name, '/subnets/', parameters('vnet').subnets.subnet.name), '\"}]')), json('[]'))]",
                    "ipRules": "[if(or(empty(parameters('ipRules')), empty(parameters('ipRules')[0].value)), json('[]'), parameters('ipRules'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'deployVnet')]"
            ]
        },
        {
            "apiVersion": "2018-05-01",
            "name": "[concat('deployPrivateEndpoint-', parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.name)]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.resourceGroup.value.name]",
            "subscriptionId": "[parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.subscription.subscriptionId]",
            "dependsOn": [
                "[concat('Microsoft.CognitiveServices/accounts/', parameters('name'))]"
            ],
            "condition": "[equals(parameters('virtualNetworkType'), 'Internal')]",
            "copy": {
                "name": "privateendpointscopy",
                "count": "[length(parameters('privateEndpoints'))]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "location": "[parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.location]",
                            "name": "[parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.name]",
                            "type": "Microsoft.Network/privateEndpoints",
                            "apiVersion": "2021-05-01",
                            "properties": {
                                "subnet": {
                                    "id": "[parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.properties.subnet.id]"
                                },
                                "privateLinkServiceConnections": [
                                    {
                                        "name": "[parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.name]",
                                        "properties": {
                                            "privateLinkServiceId": "[concat(parameters('resourceGroupId'), '/providers/Microsoft.CognitiveServices/accounts/', parameters('name'))]",
                                            "groupIds": "[parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.properties.privateLinkServiceConnections[0].properties.groupIds]"
                                        }
                                    }
                                ],
                                "customNetworkInterfaceName": "[concat(parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.name, '-nic')]"
                            },
                            "tags": {}
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2018-05-01",
            "name": "[concat('deployDnsZoneGroup-', parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.name)]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.resourceGroup.value.name]",
            "subscriptionId": "[parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.subscription.subscriptionId]",
            "dependsOn": [
                "[concat('deployPrivateEndpoint-', parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.name)]"
            ],
            "condition": "[and(equals(parameters('virtualNetworkType'), 'Internal'), parameters('privateEndpoints')[copyIndex()].privateDnsZoneConfiguration.integrateWithPrivateDnsZone)]",
            "copy": {
                "name": "privateendpointdnscopy",
                "count": "[length(parameters('privateEndpoints'))]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateDnsZones",
                            "apiVersion": "2018-09-01",
                            "name": "[parameters('privateDnsZone')]",
                            "location": "global",
                            "tags": {},
                            "properties": {}
                        },
                        {
                            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                            "apiVersion": "2018-09-01",
                            "name": "[concat(parameters('privateDnsZone'), '/', replace(uniqueString(parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.properties.subnet.id), '/subnets/default', ''))]",
                            "location": "global",
                            "dependsOn": [
                                "[parameters('privateDnsZone')]"
                            ],
                            "properties": {
                                "virtualNetwork": {
                                    "id": "[split(parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.properties.subnet.id, '/subnets/')[0]]"
                                },
                                "registrationEnabled": false
                            }
                        },
                        {
                            "apiVersion": "2017-05-10",
                            "name": "[concat('EndpointDnsRecords-', parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.name)]",
                            "type": "Microsoft.Resources/deployments",
                            "dependsOn": [
                                "[parameters('privateDnsZone')]"
                            ],
                            "properties": {
                                "mode": "Incremental",
                                "templatelink": {
                                    "uri": "https://go.microsoft.com/fwlink/?linkid=2264916"
                                },
                                "parameters": {
                                    "privateDnsName": {
                                        "value": "[parameters('privateDnsZone')]"
                                    },
                                    "privateEndpointNicResourceId": {
                                        "value": "[concat('/subscriptions/', parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.subscription.subscriptionId, '/resourceGroups/', parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.resourceGroup.value.name, '/providers/Microsoft.Network/networkInterfaces/', parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.name, '-nic')]"
                                    },
                                    "nicRecordsTemplateUri": {
                                        "value": "https://go.microsoft.com/fwlink/?linkid=2264719"
                                    },
                                    "ipConfigRecordsTemplateUri": {
                                        "value": "https://go.microsoft.com/fwlink/?linkid=2265018"
                                    },
                                    "uniqueId": {
                                        "value": "[parameters('uniqueId')]"
                                    },
                                    "existingRecords": {
                                        "value": {}
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                            "apiVersion": "2020-03-01",
                            "name": "[concat(parameters('privateEndpoints')[copyIndex()].privateEndpointConfiguration.privateEndpoint.name, '/', 'default')]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                                "[parameters('privateDnsZone')]"
                            ],
                            "properties": {
                                "privateDnsZoneConfigs": [
                                    {
                                        "name": "privatelink-cognitiveservices",
                                        "properties": {
                                            "privateDnsZoneId": "[concat(parameters('resourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/', parameters('privateDnsZone'))]"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "AZURE_CLIENT_SECRET": {
            "type": "string",
            "value": "['foo']"
        },
        "MODEL_ENDPOINT": {
          "type": "string",
          "value": "['https://java-glharper-aoai.openai.azure.com/openai/deployments/gpt-4o/']"
        }
    }
}