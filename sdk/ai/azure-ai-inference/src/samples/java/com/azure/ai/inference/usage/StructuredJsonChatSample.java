// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.inference.usage;

import com.azure.ai.inference.ChatCompletionsClient;
import com.azure.ai.inference.ChatCompletionsClientBuilder;
import com.azure.ai.inference.models.ChatCompletions;
import com.azure.ai.inference.models.ChatCompletionsOptions;
import com.azure.ai.inference.models.ChatRequestMessage;
import com.azure.ai.inference.models.ChatRequestSystemMessage;
import com.azure.ai.inference.models.ChatRequestUserMessage;
import com.azure.core.credential.AzureKeyCredential;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Configuration;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

public final class StructuredJsonChatSample {
    /**
    * @param args Unused. Arguments to the program.
    */
    public static void main(String[] args) {
        String jsonSchema = "{ \"ingredients\": {"
            + "\"type\": \"array\","
            + "\"items\": { \"type\": \"string\" } },"
            + "\"steps\": { \"type\": \"array\", \"items\": {"
            + "\"type\": \"object\", \"properties\": {"
            +            "\"ingredients\": {"
            +                "\"type\": \"array\","
            +                "\"items\": {"
            +                    "\"type\": \"string\""
            +               "}"
            +            "},"
            +            "\"directions\": {"
            +                "\"type\": \"string\""
            +            "}"
            +        "}"
            +    "}"
            + "},"
            + "\"prep_time\": {"
            +    "\"type\": \"string\""
            + "},"
            + "\"bake_time\": {"
            +    "\"type\": \"string\""
            + "} }";

        Map<String, BinaryData> recipeSchema = new HashMap<String, BinaryData>() {{
                put("type", BinaryData.fromString("\"object\""));
                put("properties", BinaryData.fromString(jsonSchema));
                put("required", BinaryData.fromString("[\"ingredients\", \"steps\", \"bake_time\"]"));
                put("additionalProperties", BinaryData.fromString("false"));
            }};

        String key = Configuration.getGlobalConfiguration().get("AZURE_API_KEY");
        String endpoint = Configuration.getGlobalConfiguration().get("MODEL_ENDPOINT");

        ChatCompletionsClient client = new ChatCompletionsClientBuilder()
            .credential(new AzureKeyCredential(key))
            .endpoint(endpoint)
            .buildClient();

        List<ChatRequestMessage> chatMessages = new ArrayList<>();
        chatMessages.add(new ChatRequestSystemMessage("You are a helpful assistant."));
        chatMessages.add(new ChatRequestUserMessage("Please give me directions and ingredients to bake a chocolate cake."));

        ChatCompletionsOptions chatCompletionsOptions = new ChatCompletionsOptions(chatMessages).setJsonFormat("cakeBakingDirections", recipeSchema);

        ChatCompletions completions = client.complete(chatCompletionsOptions);

        System.out.printf("%s.%n", completions.getChoice().getMessage().getContent());
    }
}
