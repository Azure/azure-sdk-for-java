// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.inference.usage;

import com.azure.ai.inference.ChatCompletionsClient;
import com.azure.ai.inference.ChatCompletionsClientBuilder;
import com.azure.ai.inference.models.ChatChoice;
import com.azure.ai.inference.models.ChatCompletions;
import com.azure.core.credential.TokenCredential;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;

public final class BasicChatAADSample {
     /**
     * @param args Unused. Arguments to the program.
     */
    public static void main(String[] args) {
        TokenCredential defaultCredential = new DefaultAzureCredentialBuilder().build();
        // Currently the auth scope needs to be set as below for Azure OpenAI resources using EntraID.
        // For non-Azure OpenAI models (such as Cohere, Mistral, Llama, or Phi), comment out the line below.
        String[] scopes = new String[] { "https://cognitiveservices.azure.com/.default" };
        String endpoint = Configuration.getGlobalConfiguration().get("MODEL_ENDPOINT");
        ChatCompletionsClient client = new ChatCompletionsClientBuilder()
            .scopes(scopes) // remove for non-Azure OpenAI models
            .credential(defaultCredential)
            .endpoint(endpoint)
            .buildClient();

        String prompt = "Tell me 3 jokes about trains";

        ChatCompletions completions = client.complete(prompt);

        ChatChoice choice = completions.getChoice();
        System.out.printf("%s.%n", choice.getMessage().getContent());
    }
}
