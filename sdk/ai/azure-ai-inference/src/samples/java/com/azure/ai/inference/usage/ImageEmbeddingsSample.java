// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.inference.usage;

import com.azure.ai.inference.ImageEmbeddingsClient;
import com.azure.ai.inference.ImageEmbeddingsClientBuilder;
import com.azure.ai.inference.models.EmbeddingsResult;
import com.azure.ai.inference.models.ImageEmbeddingInput;
import com.azure.ai.inference.models.EmbeddingItem;
import com.azure.core.credential.AzureKeyCredential;
import com.azure.core.util.Configuration;

import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

public final class ImageEmbeddingsSample {
    private static final String TEST_IMAGE_PATH = "./src/samples/resources/sample-images/sample.png";
    private static final String TEST_IMAGE_FORMAT = "png";
     /**
     * @param args Unused. Arguments to the program.
     */
    public static void main(String[] args) {
        String key = Configuration.getGlobalConfiguration().get("AZURE_IMAGE_EMBEDDINGS_KEY");
        String endpoint = Configuration.getGlobalConfiguration().get("IMAGE_EMBEDDINGS_MODEL_ENDPOINT");
        ImageEmbeddingsClient client = new ImageEmbeddingsClientBuilder()
            .credential(new AzureKeyCredential(key))
            .endpoint(endpoint)
            .buildClient();

        List<ImageEmbeddingInput> inputList = new ArrayList<>();
        Path testFilePath = Paths.get(TEST_IMAGE_PATH);
        inputList.add(new ImageEmbeddingInput(testFilePath, TEST_IMAGE_FORMAT));

        EmbeddingsResult embeddings = client.embed(inputList);

        for (EmbeddingItem item : embeddings.getData()) {
            System.out.printf("Index: %d.%n", item.getIndex());
            for (Float embedding : item.getEmbeddingList()) {
                System.out.printf("%f;", embedding);
            }
        }
    }
}
