// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.agents.persistent.implementation;

import com.azure.ai.agents.persistent.AgentsServiceVersion;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;

/**
 * Initializes a new instance of the PersistentAgentsClient type.
 */
public final class PersistentAgentsClientImpl {
    /**
     * Project endpoint in the form of:
     * https://&lt;aiservices-id&gt;.services.ai.azure.com/api/projects/&lt;project-name&gt;.
     */
    private final String endpoint;

    /**
     * Gets Project endpoint in the form of:
     * https://&lt;aiservices-id&gt;.services.ai.azure.com/api/projects/&lt;project-name&gt;.
     * 
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /**
     * Service version.
     */
    private final AgentsServiceVersion serviceVersion;

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public AgentsServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The serializer to serialize an object into a string.
     */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     * 
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * The PersistentAgentsAdministrationsImpl object to access its operations.
     */
    private final PersistentAgentsAdministrationsImpl persistentAgentsAdministrations;

    /**
     * Gets the PersistentAgentsAdministrationsImpl object to access its operations.
     * 
     * @return the PersistentAgentsAdministrationsImpl object.
     */
    public PersistentAgentsAdministrationsImpl getPersistentAgentsAdministrations() {
        return this.persistentAgentsAdministrations;
    }

    /**
     * The FilesImpl object to access its operations.
     */
    private final FilesImpl files;

    /**
     * Gets the FilesImpl object to access its operations.
     * 
     * @return the FilesImpl object.
     */
    public FilesImpl getFiles() {
        return this.files;
    }

    /**
     * The MessagesImpl object to access its operations.
     */
    private final MessagesImpl messages;

    /**
     * Gets the MessagesImpl object to access its operations.
     * 
     * @return the MessagesImpl object.
     */
    public MessagesImpl getMessages() {
        return this.messages;
    }

    /**
     * The RunsImpl object to access its operations.
     */
    private final RunsImpl runs;

    /**
     * Gets the RunsImpl object to access its operations.
     * 
     * @return the RunsImpl object.
     */
    public RunsImpl getRuns() {
        return this.runs;
    }

    /**
     * The ThreadsImpl object to access its operations.
     */
    private final ThreadsImpl threads;

    /**
     * Gets the ThreadsImpl object to access its operations.
     * 
     * @return the ThreadsImpl object.
     */
    public ThreadsImpl getThreads() {
        return this.threads;
    }

    /**
     * The VectorStoresImpl object to access its operations.
     */
    private final VectorStoresImpl vectorStores;

    /**
     * Gets the VectorStoresImpl object to access its operations.
     * 
     * @return the VectorStoresImpl object.
     */
    public VectorStoresImpl getVectorStores() {
        return this.vectorStores;
    }

    /**
     * Initializes an instance of PersistentAgentsClient client.
     * 
     * @param endpoint Project endpoint in the form of:
     * https://&lt;aiservices-id&gt;.services.ai.azure.com/api/projects/&lt;project-name&gt;.
     * @param serviceVersion Service version.
     */
    public PersistentAgentsClientImpl(String endpoint, AgentsServiceVersion serviceVersion) {
        this(new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy()).build(),
            JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of PersistentAgentsClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint Project endpoint in the form of:
     * https://&lt;aiservices-id&gt;.services.ai.azure.com/api/projects/&lt;project-name&gt;.
     * @param serviceVersion Service version.
     */
    public PersistentAgentsClientImpl(HttpPipeline httpPipeline, String endpoint, AgentsServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of PersistentAgentsClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param endpoint Project endpoint in the form of:
     * https://&lt;aiservices-id&gt;.services.ai.azure.com/api/projects/&lt;project-name&gt;.
     * @param serviceVersion Service version.
     */
    public PersistentAgentsClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint,
        AgentsServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.endpoint = endpoint;
        this.serviceVersion = serviceVersion;
        this.persistentAgentsAdministrations = new PersistentAgentsAdministrationsImpl(this);
        this.files = new FilesImpl(this);
        this.messages = new MessagesImpl(this);
        this.runs = new RunsImpl(this);
        this.threads = new ThreadsImpl(this);
        this.vectorStores = new VectorStoresImpl(this);
    }
}
