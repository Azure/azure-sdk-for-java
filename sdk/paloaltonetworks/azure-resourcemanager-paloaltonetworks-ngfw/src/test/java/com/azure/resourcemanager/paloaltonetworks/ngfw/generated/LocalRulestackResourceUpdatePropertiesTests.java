// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.DefaultMode;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.LocalRulestackResourceUpdateProperties;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.ScopeType;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.SecurityServices;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LocalRulestackResourceUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LocalRulestackResourceUpdateProperties model = BinaryData.fromString(
            "{\"panEtag\":\"juwasqvdaeyyguxa\",\"panLocation\":\"sqzhzbezkg\",\"scope\":\"GLOBAL\",\"associatedSubscriptions\":[\"xasicddyvvjskg\",\"mocwa\",\"pqg\"],\"description\":\"jeaahhvjhh\",\"defaultMode\":\"FIREWALL\",\"minAppIdVersion\":\"ybbjjidjksyx\",\"securityServices\":{\"vulnerabilityProfile\":\"vxevblb\",\"antiSpywareProfile\":\"dnlj\",\"antiVirusProfile\":\"geuaulx\",\"urlFilteringProfile\":\"smjbnkppxyn\",\"fileBlockingProfile\":\"lsvxeizz\",\"dnsSubscription\":\"klnsrmffey\",\"outboundUnTrustCertificate\":\"ckt\",\"outboundTrustCertificate\":\"ymerteeammxq\"}}")
            .toObject(LocalRulestackResourceUpdateProperties.class);
        Assertions.assertEquals("juwasqvdaeyyguxa", model.panEtag());
        Assertions.assertEquals("sqzhzbezkg", model.panLocation());
        Assertions.assertEquals(ScopeType.GLOBAL, model.scope());
        Assertions.assertEquals("xasicddyvvjskg", model.associatedSubscriptions().get(0));
        Assertions.assertEquals("jeaahhvjhh", model.description());
        Assertions.assertEquals(DefaultMode.FIREWALL, model.defaultMode());
        Assertions.assertEquals("ybbjjidjksyx", model.minAppIdVersion());
        Assertions.assertEquals("vxevblb", model.securityServices().vulnerabilityProfile());
        Assertions.assertEquals("dnlj", model.securityServices().antiSpywareProfile());
        Assertions.assertEquals("geuaulx", model.securityServices().antiVirusProfile());
        Assertions.assertEquals("smjbnkppxyn", model.securityServices().urlFilteringProfile());
        Assertions.assertEquals("lsvxeizz", model.securityServices().fileBlockingProfile());
        Assertions.assertEquals("klnsrmffey", model.securityServices().dnsSubscription());
        Assertions.assertEquals("ckt", model.securityServices().outboundUnTrustCertificate());
        Assertions.assertEquals("ymerteeammxq", model.securityServices().outboundTrustCertificate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LocalRulestackResourceUpdateProperties model = new LocalRulestackResourceUpdateProperties()
            .withPanEtag("juwasqvdaeyyguxa").withPanLocation("sqzhzbezkg").withScope(ScopeType.GLOBAL)
            .withAssociatedSubscriptions(Arrays.asList("xasicddyvvjskg", "mocwa", "pqg")).withDescription("jeaahhvjhh")
            .withDefaultMode(DefaultMode.FIREWALL).withMinAppIdVersion("ybbjjidjksyx")
            .withSecurityServices(new SecurityServices().withVulnerabilityProfile("vxevblb")
                .withAntiSpywareProfile("dnlj").withAntiVirusProfile("geuaulx").withUrlFilteringProfile("smjbnkppxyn")
                .withFileBlockingProfile("lsvxeizz").withDnsSubscription("klnsrmffey")
                .withOutboundUnTrustCertificate("ckt").withOutboundTrustCertificate("ymerteeammxq"));
        model = BinaryData.fromObject(model).toObject(LocalRulestackResourceUpdateProperties.class);
        Assertions.assertEquals("juwasqvdaeyyguxa", model.panEtag());
        Assertions.assertEquals("sqzhzbezkg", model.panLocation());
        Assertions.assertEquals(ScopeType.GLOBAL, model.scope());
        Assertions.assertEquals("xasicddyvvjskg", model.associatedSubscriptions().get(0));
        Assertions.assertEquals("jeaahhvjhh", model.description());
        Assertions.assertEquals(DefaultMode.FIREWALL, model.defaultMode());
        Assertions.assertEquals("ybbjjidjksyx", model.minAppIdVersion());
        Assertions.assertEquals("vxevblb", model.securityServices().vulnerabilityProfile());
        Assertions.assertEquals("dnlj", model.securityServices().antiSpywareProfile());
        Assertions.assertEquals("geuaulx", model.securityServices().antiVirusProfile());
        Assertions.assertEquals("smjbnkppxyn", model.securityServices().urlFilteringProfile());
        Assertions.assertEquals("lsvxeizz", model.securityServices().fileBlockingProfile());
        Assertions.assertEquals("klnsrmffey", model.securityServices().dnsSubscription());
        Assertions.assertEquals("ckt", model.securityServices().outboundUnTrustCertificate());
        Assertions.assertEquals("ymerteeammxq", model.securityServices().outboundTrustCertificate());
    }
}
