// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.AppSeenData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.AppSeenInfo;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AppSeenDataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AppSeenData model = BinaryData.fromString(
            "{\"count\":90744470,\"appSeenList\":[{\"title\":\"gxhuriplbp\",\"category\":\"dxunkbebxmubyyn\",\"subCategory\":\"wlrbqtkoievseo\",\"risk\":\"gqrlltmuwla\",\"tag\":\"wzizxbmpgcjefuzm\",\"technology\":\"vpbttd\",\"standardPorts\":\"morppxebmnzbtbh\"}]}")
            .toObject(AppSeenData.class);
        Assertions.assertEquals(90744470, model.count());
        Assertions.assertEquals("gxhuriplbp", model.appSeenList().get(0).title());
        Assertions.assertEquals("dxunkbebxmubyyn", model.appSeenList().get(0).category());
        Assertions.assertEquals("wlrbqtkoievseo", model.appSeenList().get(0).subCategory());
        Assertions.assertEquals("gqrlltmuwla", model.appSeenList().get(0).risk());
        Assertions.assertEquals("wzizxbmpgcjefuzm", model.appSeenList().get(0).tag());
        Assertions.assertEquals("vpbttd", model.appSeenList().get(0).technology());
        Assertions.assertEquals("morppxebmnzbtbh", model.appSeenList().get(0).standardPorts());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AppSeenData model = new AppSeenData().withCount(90744470)
            .withAppSeenList(Arrays.asList(new AppSeenInfo().withTitle("gxhuriplbp").withCategory("dxunkbebxmubyyn")
                .withSubCategory("wlrbqtkoievseo").withRisk("gqrlltmuwla").withTag("wzizxbmpgcjefuzm")
                .withTechnology("vpbttd").withStandardPorts("morppxebmnzbtbh")));
        model = BinaryData.fromObject(model).toObject(AppSeenData.class);
        Assertions.assertEquals(90744470, model.count());
        Assertions.assertEquals("gxhuriplbp", model.appSeenList().get(0).title());
        Assertions.assertEquals("dxunkbebxmubyyn", model.appSeenList().get(0).category());
        Assertions.assertEquals("wlrbqtkoievseo", model.appSeenList().get(0).subCategory());
        Assertions.assertEquals("gqrlltmuwla", model.appSeenList().get(0).risk());
        Assertions.assertEquals("wzizxbmpgcjefuzm", model.appSeenList().get(0).tag());
        Assertions.assertEquals("vpbttd", model.appSeenList().get(0).technology());
        Assertions.assertEquals("morppxebmnzbtbh", model.appSeenList().get(0).standardPorts());
    }
}
