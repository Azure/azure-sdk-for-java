// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.paloaltonetworks.ngfw.PaloAltoNetworksNgfwManager;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.DefaultMode;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.LocalRulestackResource;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.ManagedIdentityType;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.ScopeType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LocalRulestacksListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"panEtag\":\"agdrcls\",\"panLocation\":\"ljomevt\",\"scope\":\"LOCAL\",\"associatedSubscriptions\":[\"bvgjcodkkgj\",\"iytssikizbc\"],\"description\":\"q\",\"defaultMode\":\"IPS\",\"minAppIdVersion\":\"nrgmqsorhce\",\"provisioningState\":\"Updating\",\"securityServices\":{\"vulnerabilityProfile\":\"ykmxcpwzvm\",\"antiSpywareProfile\":\"ksqd\",\"antiVirusProfile\":\"wlwxlboncqbazqic\",\"urlFilteringProfile\":\"hygtv\",\"fileBlockingProfile\":\"yjanepubdp\",\"dnsSubscription\":\"yqvgxia\",\"outboundUnTrustCertificate\":\"etvohkxdxuwsaifm\",\"outboundTrustCertificate\":\"nosbz\"}},\"identity\":{\"tenantId\":\"gcv\",\"principalId\":\"cknjolgj\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"vxoqe\":{\"clientId\":\"els\",\"principalId\":\"rqz\"},\"yqbhd\":{\"clientId\":\"txwaljglzo\",\"principalId\":\"qwaafrqulhm\"},\"bnrzorpdltbqctq\":{\"clientId\":\"fjrqpjiyr\",\"principalId\":\"crgaxwmzwdf\"}}},\"location\":\"gxx\",\"tags\":{\"yig\":\"tgzdgv\",\"ngucaifpaurww\":\"aqqilzdcduwjoed\",\"wxdcvjwcyz\":\"ilfjqqacdmk\"},\"id\":\"akeciqchx\",\"name\":\"tuicds\",\"type\":\"wdfmmpzhzzwvywr\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PaloAltoNetworksNgfwManager manager = PaloAltoNetworksNgfwManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<LocalRulestackResource> response
            = manager.localRulestacks().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("gxx", response.iterator().next().location());
        Assertions.assertEquals("tgzdgv", response.iterator().next().tags().get("yig"));
        Assertions.assertEquals(ManagedIdentityType.SYSTEM_AND_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("els",
            response.iterator().next().identity().userAssignedIdentities().get("vxoqe").clientId());
        Assertions.assertEquals("rqz",
            response.iterator().next().identity().userAssignedIdentities().get("vxoqe").principalId());
        Assertions.assertEquals("agdrcls", response.iterator().next().panEtag());
        Assertions.assertEquals("ljomevt", response.iterator().next().panLocation());
        Assertions.assertEquals(ScopeType.LOCAL, response.iterator().next().scope());
        Assertions.assertEquals("bvgjcodkkgj", response.iterator().next().associatedSubscriptions().get(0));
        Assertions.assertEquals("q", response.iterator().next().description());
        Assertions.assertEquals(DefaultMode.IPS, response.iterator().next().defaultMode());
        Assertions.assertEquals("nrgmqsorhce", response.iterator().next().minAppIdVersion());
        Assertions.assertEquals("ykmxcpwzvm", response.iterator().next().securityServices().vulnerabilityProfile());
        Assertions.assertEquals("ksqd", response.iterator().next().securityServices().antiSpywareProfile());
        Assertions.assertEquals("wlwxlboncqbazqic", response.iterator().next().securityServices().antiVirusProfile());
        Assertions.assertEquals("hygtv", response.iterator().next().securityServices().urlFilteringProfile());
        Assertions.assertEquals("yjanepubdp", response.iterator().next().securityServices().fileBlockingProfile());
        Assertions.assertEquals("yqvgxia", response.iterator().next().securityServices().dnsSubscription());
        Assertions.assertEquals("etvohkxdxuwsaifm",
            response.iterator().next().securityServices().outboundUnTrustCertificate());
        Assertions.assertEquals("nosbz", response.iterator().next().securityServices().outboundTrustCertificate());
    }
}
