// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.paloaltonetworks.ngfw.PaloAltoNetworksNgfwManager;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.SecurityServicesResponse;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.SecurityServicesTypeEnum;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GlobalRulestacksListSecurityServicesWithResponseMockTests {
    @Test
    public void testListSecurityServicesWithResponse() throws Exception {
        String responseStr
            = "{\"value\":{\"type\":\"ecjxe\",\"entry\":[{\"name\":\"tuhxuicb\",\"description\":\"wmrswnjlxuzrh\"},{\"name\":\"pusxjb\",\"description\":\"ehgpdohzjqatu\"},{\"name\":\"o\",\"description\":\"e\"}]},\"nextLink\":\"ncnwfepbnwgf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PaloAltoNetworksNgfwManager manager = PaloAltoNetworksNgfwManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SecurityServicesResponse response = manager.globalRulestacks()
            .listSecurityServicesWithResponse("uslvyjtcvuwkasi", SecurityServicesTypeEnum.ANTI_VIRUS, "esfuught",
                1326845225, com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ecjxe", response.value().type());
        Assertions.assertEquals("tuhxuicb", response.value().entry().get(0).name());
        Assertions.assertEquals("wmrswnjlxuzrh", response.value().entry().get(0).description());
        Assertions.assertEquals("ncnwfepbnwgf", response.nextLink());
    }
}
