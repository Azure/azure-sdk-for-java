// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.paloaltonetworks.ngfw.PaloAltoNetworksNgfwManager;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.BooleanEnum;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.SupportInfo;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LocalRulestacksGetSupportInfoWithResponseMockTests {
    @Test
    public void testGetSupportInfoWithResponse() throws Exception {
        String responseStr
            = "{\"productSku\":\"ijjj\",\"productSerial\":\"va\",\"accountRegistered\":\"TRUE\",\"accountId\":\"zknxkv\",\"userDomainSupported\":\"TRUE\",\"userRegistered\":\"FALSE\",\"freeTrial\":\"TRUE\",\"freeTrialDaysLeft\":570636581,\"freeTrialCreditLeft\":335381854,\"helpURL\":\"gno\",\"supportURL\":\"k\",\"registerURL\":\"qo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PaloAltoNetworksNgfwManager manager = PaloAltoNetworksNgfwManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SupportInfo response = manager.localRulestacks()
            .getSupportInfoWithResponse("tygxhqfgq", "ayejsxtlgflwfgz", "iucijjcea", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ijjj", response.productSku());
        Assertions.assertEquals("va", response.productSerial());
        Assertions.assertEquals(BooleanEnum.TRUE, response.accountRegistered());
        Assertions.assertEquals("zknxkv", response.accountId());
        Assertions.assertEquals(BooleanEnum.TRUE, response.userDomainSupported());
        Assertions.assertEquals(BooleanEnum.FALSE, response.userRegistered());
        Assertions.assertEquals(BooleanEnum.TRUE, response.freeTrial());
        Assertions.assertEquals(570636581, response.freeTrialDaysLeft());
        Assertions.assertEquals(335381854, response.freeTrialCreditLeft());
        Assertions.assertEquals("gno", response.helpUrl());
        Assertions.assertEquals("k", response.supportUrl());
        Assertions.assertEquals("qo", response.registerUrl());
    }
}
