// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.SecurityServices;
import org.junit.jupiter.api.Assertions;

public final class SecurityServicesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecurityServices model = BinaryData.fromString(
            "{\"vulnerabilityProfile\":\"fxqeof\",\"antiSpywareProfile\":\"e\",\"antiVirusProfile\":\"hqjbasvmsmj\",\"urlFilteringProfile\":\"lngsntnbybkzgcwr\",\"fileBlockingProfile\":\"lxxwrljdouskc\",\"dnsSubscription\":\"kocrcjdkwtnhx\",\"outboundUnTrustCertificate\":\"jbiksqrglssai\",\"outboundTrustCertificate\":\"p\"}")
            .toObject(SecurityServices.class);
        Assertions.assertEquals("fxqeof", model.vulnerabilityProfile());
        Assertions.assertEquals("e", model.antiSpywareProfile());
        Assertions.assertEquals("hqjbasvmsmj", model.antiVirusProfile());
        Assertions.assertEquals("lngsntnbybkzgcwr", model.urlFilteringProfile());
        Assertions.assertEquals("lxxwrljdouskc", model.fileBlockingProfile());
        Assertions.assertEquals("kocrcjdkwtnhx", model.dnsSubscription());
        Assertions.assertEquals("jbiksqrglssai", model.outboundUnTrustCertificate());
        Assertions.assertEquals("p", model.outboundTrustCertificate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecurityServices model = new SecurityServices().withVulnerabilityProfile("fxqeof")
            .withAntiSpywareProfile("e")
            .withAntiVirusProfile("hqjbasvmsmj")
            .withUrlFilteringProfile("lngsntnbybkzgcwr")
            .withFileBlockingProfile("lxxwrljdouskc")
            .withDnsSubscription("kocrcjdkwtnhx")
            .withOutboundUnTrustCertificate("jbiksqrglssai")
            .withOutboundTrustCertificate("p");
        model = BinaryData.fromObject(model).toObject(SecurityServices.class);
        Assertions.assertEquals("fxqeof", model.vulnerabilityProfile());
        Assertions.assertEquals("e", model.antiSpywareProfile());
        Assertions.assertEquals("hqjbasvmsmj", model.antiVirusProfile());
        Assertions.assertEquals("lngsntnbybkzgcwr", model.urlFilteringProfile());
        Assertions.assertEquals("lxxwrljdouskc", model.fileBlockingProfile());
        Assertions.assertEquals("kocrcjdkwtnhx", model.dnsSubscription());
        Assertions.assertEquals("jbiksqrglssai", model.outboundUnTrustCertificate());
        Assertions.assertEquals("p", model.outboundTrustCertificate());
    }
}
