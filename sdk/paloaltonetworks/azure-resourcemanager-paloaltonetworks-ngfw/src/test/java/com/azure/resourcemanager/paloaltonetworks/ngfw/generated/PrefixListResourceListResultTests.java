// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.fluent.models.PrefixListResourceInner;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.PrefixListResourceListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrefixListResourceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrefixListResourceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"description\":\"bzpcpiljhahzvec\",\"prefixList\":[\"dbn\",\"ieholewjwi\"],\"etag\":\"bwefqsfapaqtfer\",\"auditComment\":\"wexjkmfxapjwogq\",\"provisioningState\":\"Failed\"},\"id\":\"pud\",\"name\":\"dabtqwp\",\"type\":\"yawbzasqbu\"}],\"nextLink\":\"jg\"}")
            .toObject(PrefixListResourceListResult.class);
        Assertions.assertEquals("bzpcpiljhahzvec", model.value().get(0).description());
        Assertions.assertEquals("dbn", model.value().get(0).prefixList().get(0));
        Assertions.assertEquals("bwefqsfapaqtfer", model.value().get(0).etag());
        Assertions.assertEquals("wexjkmfxapjwogq", model.value().get(0).auditComment());
        Assertions.assertEquals("jg", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrefixListResourceListResult model
            = new PrefixListResourceListResult().withValue(Arrays.asList(new PrefixListResourceInner()
                .withDescription("bzpcpiljhahzvec").withPrefixList(Arrays.asList("dbn", "ieholewjwi"))
                .withEtag("bwefqsfapaqtfer").withAuditComment("wexjkmfxapjwogq"))).withNextLink("jg");
        model = BinaryData.fromObject(model).toObject(PrefixListResourceListResult.class);
        Assertions.assertEquals("bzpcpiljhahzvec", model.value().get(0).description());
        Assertions.assertEquals("dbn", model.value().get(0).prefixList().get(0));
        Assertions.assertEquals("bwefqsfapaqtfer", model.value().get(0).etag());
        Assertions.assertEquals("wexjkmfxapjwogq", model.value().get(0).auditComment());
        Assertions.assertEquals("jg", model.nextLink());
    }
}
