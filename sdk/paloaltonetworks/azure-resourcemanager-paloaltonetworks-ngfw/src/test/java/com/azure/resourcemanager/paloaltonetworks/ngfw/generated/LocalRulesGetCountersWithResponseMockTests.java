// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.paloaltonetworks.ngfw.PaloAltoNetworksNgfwManager;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.RuleCounter;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LocalRulesGetCountersWithResponseMockTests {
    @Test
    public void testGetCountersWithResponse() throws Exception {
        String responseStr
            = "{\"priority\":\"atxjtiel\",\"ruleStackName\":\"qgxxgfbb\",\"ruleListName\":\"lpqagyn\",\"firewallName\":\"prnzc\",\"ruleName\":\"lin\",\"hitCount\":1482263286,\"appSeen\":{\"count\":1694276229,\"appSeenList\":[{\"title\":\"xaq\",\"category\":\"ibmq\",\"subCategory\":\"miymqruqguhfupet\",\"risk\":\"svvoqsbpkflanfk\",\"tag\":\"xsyaowuzowpuoh\",\"technology\":\"kc\",\"standardPorts\":\"rgukxrztio\"},{\"title\":\"hlutixmqrudjizc\",\"category\":\"f\",\"subCategory\":\"mcrunfhiucn\",\"risk\":\"fbcpaqktkrumzu\",\"tag\":\"dkyzbfvxov\",\"technology\":\"kxiuxqggvqr\",\"standardPorts\":\"hyhlwcjsqg\"}]},\"timestamp\":\"2021-09-27T19:32:09Z\",\"requestTimestamp\":\"2021-04-30T16:57:01Z\",\"lastUpdatedTimestamp\":\"2021-12-07T15:49:07Z\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PaloAltoNetworksNgfwManager manager = PaloAltoNetworksNgfwManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        RuleCounter response = manager.localRules()
            .getCountersWithResponse("sqxtltclkrdpq", "fhyrfrakk", "d", "rcwfcmfcnrjajq",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("atxjtiel", response.priority());
        Assertions.assertEquals("qgxxgfbb", response.ruleStackName());
        Assertions.assertEquals("lpqagyn", response.ruleListName());
        Assertions.assertEquals("prnzc", response.firewallName());
        Assertions.assertEquals("lin", response.ruleName());
        Assertions.assertEquals(1482263286, response.hitCount());
        Assertions.assertEquals(1694276229, response.appSeen().count());
        Assertions.assertEquals("xaq", response.appSeen().appSeenList().get(0).title());
        Assertions.assertEquals("ibmq", response.appSeen().appSeenList().get(0).category());
        Assertions.assertEquals("miymqruqguhfupet", response.appSeen().appSeenList().get(0).subCategory());
        Assertions.assertEquals("svvoqsbpkflanfk", response.appSeen().appSeenList().get(0).risk());
        Assertions.assertEquals("xsyaowuzowpuoh", response.appSeen().appSeenList().get(0).tag());
        Assertions.assertEquals("kc", response.appSeen().appSeenList().get(0).technology());
        Assertions.assertEquals("rgukxrztio", response.appSeen().appSeenList().get(0).standardPorts());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-27T19:32:09Z"), response.timestamp());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-30T16:57:01Z"), response.requestTimestamp());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-07T15:49:07Z"), response.lastUpdatedTimestamp());
    }
}
