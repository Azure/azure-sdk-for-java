// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.paloaltonetworks.ngfw.PaloAltoNetworksNgfwManager;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.RuleCounter;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LocalRulesGetCountersWithResponseMockTests {
    @Test
    public void testGetCountersWithResponse() throws Exception {
        String responseStr
            = "{\"priority\":\"vlzw\",\"ruleStackName\":\"gmfalkzazmgoked\",\"ruleListName\":\"qafkmkrokzrth\",\"firewallName\":\"twpqrtva\",\"ruleName\":\"znq\",\"hitCount\":873197720,\"appSeen\":{\"count\":1482907808,\"appSeenList\":[{\"title\":\"eagmceituug\",\"category\":\"dhfpjstlzmbl\",\"subCategory\":\"yjdeolctaebfs\",\"risk\":\"rledjcu\",\"tag\":\"tb\",\"technology\":\"tqi\",\"standardPorts\":\"d\"},{\"title\":\"zvsgeafgfosehxlz\",\"category\":\"xezppk\",\"subCategory\":\"waaeskyfjl\",\"risk\":\"zeqtoyrplixlajml\",\"tag\":\"pq\",\"technology\":\"evhamfowg\",\"standardPorts\":\"btmkekxpkzwaq\"},{\"title\":\"ofqovchiqbplv\",\"category\":\"idu\",\"subCategory\":\"ztekxbyjgmsfep\",\"risk\":\"yihpqadagrh\",\"tag\":\"dicxdw\",\"technology\":\"jfowxwy\",\"standardPorts\":\"vcxjsgbipcukdvek\"},{\"title\":\"buhoduchv\",\"category\":\"scrdp\",\"subCategory\":\"bfdyjduss\",\"risk\":\"yszekbhwlka\",\"tag\":\"ggkrehbf\",\"technology\":\"n\",\"standardPorts\":\"ybff\"}]},\"timestamp\":\"2020-12-23T02:51:33Z\",\"requestTimestamp\":\"2021-06-08T15:40:26Z\",\"lastUpdatedTimestamp\":\"2021-06-15T23:31:14Z\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PaloAltoNetworksNgfwManager manager = PaloAltoNetworksNgfwManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        RuleCounter response = manager.localRules()
            .getCountersWithResponse("akw", "eivmak", "hysowljuxlkbect", "tfjmskdchmaiub",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("vlzw", response.priority());
        Assertions.assertEquals("gmfalkzazmgoked", response.ruleStackName());
        Assertions.assertEquals("qafkmkrokzrth", response.ruleListName());
        Assertions.assertEquals("twpqrtva", response.firewallName());
        Assertions.assertEquals("znq", response.ruleName());
        Assertions.assertEquals(873197720, response.hitCount());
        Assertions.assertEquals(1482907808, response.appSeen().count());
        Assertions.assertEquals("eagmceituug", response.appSeen().appSeenList().get(0).title());
        Assertions.assertEquals("dhfpjstlzmbl", response.appSeen().appSeenList().get(0).category());
        Assertions.assertEquals("yjdeolctaebfs", response.appSeen().appSeenList().get(0).subCategory());
        Assertions.assertEquals("rledjcu", response.appSeen().appSeenList().get(0).risk());
        Assertions.assertEquals("tb", response.appSeen().appSeenList().get(0).tag());
        Assertions.assertEquals("tqi", response.appSeen().appSeenList().get(0).technology());
        Assertions.assertEquals("d", response.appSeen().appSeenList().get(0).standardPorts());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-23T02:51:33Z"), response.timestamp());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-08T15:40:26Z"), response.requestTimestamp());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-15T23:31:14Z"), response.lastUpdatedTimestamp());
    }
}
