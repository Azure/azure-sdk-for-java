// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.fluent.models.RulestackProperties;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.DefaultMode;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.ScopeType;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.SecurityServices;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RulestackPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RulestackProperties model = BinaryData.fromString(
            "{\"panEtag\":\"crzevdphlx\",\"panLocation\":\"lthqtrgqjbp\",\"scope\":\"GLOBAL\",\"associatedSubscriptions\":[\"n\",\"gvfcj\"],\"description\":\"zoxxjtf\",\"defaultMode\":\"NONE\",\"minAppIdVersion\":\"wfzitonpeqfpjk\",\"provisioningState\":\"Updating\",\"securityServices\":{\"vulnerabilityProfile\":\"pdvhpfxxypin\",\"antiSpywareProfile\":\"mayhuybbkpodepoo\",\"antiVirusProfile\":\"nuvamiheogna\",\"urlFilteringProfile\":\"zxtheotusivyevcc\",\"fileBlockingProfile\":\"ihnhun\",\"dnsSubscription\":\"wjzrnfygxgisp\",\"outboundUnTrustCertificate\":\"vtz\",\"outboundTrustCertificate\":\"ufubl\"}}")
            .toObject(RulestackProperties.class);
        Assertions.assertEquals("crzevdphlx", model.panEtag());
        Assertions.assertEquals("lthqtrgqjbp", model.panLocation());
        Assertions.assertEquals(ScopeType.GLOBAL, model.scope());
        Assertions.assertEquals("n", model.associatedSubscriptions().get(0));
        Assertions.assertEquals("zoxxjtf", model.description());
        Assertions.assertEquals(DefaultMode.NONE, model.defaultMode());
        Assertions.assertEquals("wfzitonpeqfpjk", model.minAppIdVersion());
        Assertions.assertEquals("pdvhpfxxypin", model.securityServices().vulnerabilityProfile());
        Assertions.assertEquals("mayhuybbkpodepoo", model.securityServices().antiSpywareProfile());
        Assertions.assertEquals("nuvamiheogna", model.securityServices().antiVirusProfile());
        Assertions.assertEquals("zxtheotusivyevcc", model.securityServices().urlFilteringProfile());
        Assertions.assertEquals("ihnhun", model.securityServices().fileBlockingProfile());
        Assertions.assertEquals("wjzrnfygxgisp", model.securityServices().dnsSubscription());
        Assertions.assertEquals("vtz", model.securityServices().outboundUnTrustCertificate());
        Assertions.assertEquals("ufubl", model.securityServices().outboundTrustCertificate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RulestackProperties model = new RulestackProperties().withPanEtag("crzevdphlx")
            .withPanLocation("lthqtrgqjbp")
            .withScope(ScopeType.GLOBAL)
            .withAssociatedSubscriptions(Arrays.asList("n", "gvfcj"))
            .withDescription("zoxxjtf")
            .withDefaultMode(DefaultMode.NONE)
            .withMinAppIdVersion("wfzitonpeqfpjk")
            .withSecurityServices(new SecurityServices().withVulnerabilityProfile("pdvhpfxxypin")
                .withAntiSpywareProfile("mayhuybbkpodepoo")
                .withAntiVirusProfile("nuvamiheogna")
                .withUrlFilteringProfile("zxtheotusivyevcc")
                .withFileBlockingProfile("ihnhun")
                .withDnsSubscription("wjzrnfygxgisp")
                .withOutboundUnTrustCertificate("vtz")
                .withOutboundTrustCertificate("ufubl"));
        model = BinaryData.fromObject(model).toObject(RulestackProperties.class);
        Assertions.assertEquals("crzevdphlx", model.panEtag());
        Assertions.assertEquals("lthqtrgqjbp", model.panLocation());
        Assertions.assertEquals(ScopeType.GLOBAL, model.scope());
        Assertions.assertEquals("n", model.associatedSubscriptions().get(0));
        Assertions.assertEquals("zoxxjtf", model.description());
        Assertions.assertEquals(DefaultMode.NONE, model.defaultMode());
        Assertions.assertEquals("wfzitonpeqfpjk", model.minAppIdVersion());
        Assertions.assertEquals("pdvhpfxxypin", model.securityServices().vulnerabilityProfile());
        Assertions.assertEquals("mayhuybbkpodepoo", model.securityServices().antiSpywareProfile());
        Assertions.assertEquals("nuvamiheogna", model.securityServices().antiVirusProfile());
        Assertions.assertEquals("zxtheotusivyevcc", model.securityServices().urlFilteringProfile());
        Assertions.assertEquals("ihnhun", model.securityServices().fileBlockingProfile());
        Assertions.assertEquals("wjzrnfygxgisp", model.securityServices().dnsSubscription());
        Assertions.assertEquals("vtz", model.securityServices().outboundUnTrustCertificate());
        Assertions.assertEquals("ufubl", model.securityServices().outboundTrustCertificate());
    }
}
