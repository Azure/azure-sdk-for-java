// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.fluent.models.AdvSecurityObjectListResponseInner;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.AdvSecurityObjectModel;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.NameDescriptionObject;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AdvSecurityObjectListResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AdvSecurityObjectListResponseInner model = BinaryData.fromString(
            "{\"value\":{\"type\":\"sbbzo\",\"entry\":[{\"name\":\"igrxwburvjxxjn\",\"description\":\"ydptkoen\"}]},\"nextLink\":\"uknvudwti\"}")
            .toObject(AdvSecurityObjectListResponseInner.class);
        Assertions.assertEquals("sbbzo", model.value().type());
        Assertions.assertEquals("igrxwburvjxxjn", model.value().entry().get(0).name());
        Assertions.assertEquals("ydptkoen", model.value().entry().get(0).description());
        Assertions.assertEquals("uknvudwti", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AdvSecurityObjectListResponseInner model = new AdvSecurityObjectListResponseInner()
            .withValue(new AdvSecurityObjectModel().withType("sbbzo").withEntry(
                Arrays.asList(new NameDescriptionObject().withName("igrxwburvjxxjn").withDescription("ydptkoen"))))
            .withNextLink("uknvudwti");
        model = BinaryData.fromObject(model).toObject(AdvSecurityObjectListResponseInner.class);
        Assertions.assertEquals("sbbzo", model.value().type());
        Assertions.assertEquals("igrxwburvjxxjn", model.value().entry().get(0).name());
        Assertions.assertEquals("ydptkoen", model.value().entry().get(0).description());
        Assertions.assertEquals("uknvudwti", model.nextLink());
    }
}
