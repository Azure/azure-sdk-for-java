// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.paloaltonetworks.ngfw.PaloAltoNetworksNgfwManager;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.RuleCounter;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PreRulesGetCountersWithResponseMockTests {
    @Test
    public void testGetCountersWithResponse() throws Exception {
        String responseStr
            = "{\"priority\":\"req\",\"ruleStackName\":\"kceysfaqegplw\",\"ruleListName\":\"shwddkvbxgk\",\"firewallName\":\"sybwptdaca\",\"ruleName\":\"vvlfntymtp\",\"hitCount\":1309536765,\"appSeen\":{\"count\":662572464,\"appSeenList\":[{\"title\":\"zerohzrsqalsxk\",\"category\":\"nwqapfgsdpcvess\",\"subCategory\":\"zhhkuuipldqqc\",\"risk\":\"ekvalblhtjq\",\"tag\":\"qyv\",\"technology\":\"eh\",\"standardPorts\":\"a\"},{\"title\":\"mxhzzysevus\",\"category\":\"ivzrrryveimipsk\",\"subCategory\":\"yzatvfuzkaft\",\"risk\":\"vvruxwi\",\"tag\":\"syeipqd\",\"technology\":\"mjtgrqg\",\"standardPorts\":\"gkkileplkcsmkn\"},{\"title\":\"wtbbaedorvvmqf\",\"category\":\"oygbdgwumgxd\",\"subCategory\":\"dhp\",\"risk\":\"bgd\",\"tag\":\"xjd\",\"technology\":\"vjsaqwotm\",\"standardPorts\":\"wllcolsr\"}]},\"timestamp\":\"2021-09-17T20:00:17Z\",\"requestTimestamp\":\"2021-04-26T14:25:13Z\",\"lastUpdatedTimestamp\":\"2021-05-30T01:29:06Z\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PaloAltoNetworksNgfwManager manager = PaloAltoNetworksNgfwManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        RuleCounter response = manager.preRules()
            .getCountersWithResponse("puvjmvqmtd", "ckygroejnndljdju", "kb", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("req", response.priority());
        Assertions.assertEquals("kceysfaqegplw", response.ruleStackName());
        Assertions.assertEquals("shwddkvbxgk", response.ruleListName());
        Assertions.assertEquals("sybwptdaca", response.firewallName());
        Assertions.assertEquals("vvlfntymtp", response.ruleName());
        Assertions.assertEquals(1309536765, response.hitCount());
        Assertions.assertEquals(662572464, response.appSeen().count());
        Assertions.assertEquals("zerohzrsqalsxk", response.appSeen().appSeenList().get(0).title());
        Assertions.assertEquals("nwqapfgsdpcvess", response.appSeen().appSeenList().get(0).category());
        Assertions.assertEquals("zhhkuuipldqqc", response.appSeen().appSeenList().get(0).subCategory());
        Assertions.assertEquals("ekvalblhtjq", response.appSeen().appSeenList().get(0).risk());
        Assertions.assertEquals("qyv", response.appSeen().appSeenList().get(0).tag());
        Assertions.assertEquals("eh", response.appSeen().appSeenList().get(0).technology());
        Assertions.assertEquals("a", response.appSeen().appSeenList().get(0).standardPorts());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-17T20:00:17Z"), response.timestamp());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-26T14:25:13Z"), response.requestTimestamp());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-30T01:29:06Z"), response.lastUpdatedTimestamp());
    }
}
