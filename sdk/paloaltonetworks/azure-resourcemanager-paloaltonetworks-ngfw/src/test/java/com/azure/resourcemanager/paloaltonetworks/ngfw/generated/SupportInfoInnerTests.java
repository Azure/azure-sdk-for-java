// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.fluent.models.SupportInfoInner;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.BooleanEnum;
import org.junit.jupiter.api.Assertions;

public final class SupportInfoInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SupportInfoInner model = BinaryData.fromString(
            "{\"productSku\":\"h\",\"productSerial\":\"uj\",\"accountRegistered\":\"TRUE\",\"accountId\":\"kozzwculkb\",\"userDomainSupported\":\"FALSE\",\"userRegistered\":\"FALSE\",\"freeTrial\":\"FALSE\",\"freeTrialDaysLeft\":1824615307,\"freeTrialCreditLeft\":1819890486,\"helpURL\":\"wtjjguktalhsnv\",\"supportURL\":\"dmxzr\",\"registerURL\":\"aimlnwiaaom\"}")
            .toObject(SupportInfoInner.class);
        Assertions.assertEquals("h", model.productSku());
        Assertions.assertEquals("uj", model.productSerial());
        Assertions.assertEquals(BooleanEnum.TRUE, model.accountRegistered());
        Assertions.assertEquals("kozzwculkb", model.accountId());
        Assertions.assertEquals(BooleanEnum.FALSE, model.userDomainSupported());
        Assertions.assertEquals(BooleanEnum.FALSE, model.userRegistered());
        Assertions.assertEquals(BooleanEnum.FALSE, model.freeTrial());
        Assertions.assertEquals(1824615307, model.freeTrialDaysLeft());
        Assertions.assertEquals(1819890486, model.freeTrialCreditLeft());
        Assertions.assertEquals("wtjjguktalhsnv", model.helpUrl());
        Assertions.assertEquals("dmxzr", model.supportUrl());
        Assertions.assertEquals("aimlnwiaaom", model.registerUrl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SupportInfoInner model = new SupportInfoInner().withProductSku("h").withProductSerial("uj")
            .withAccountRegistered(BooleanEnum.TRUE).withAccountId("kozzwculkb")
            .withUserDomainSupported(BooleanEnum.FALSE).withUserRegistered(BooleanEnum.FALSE)
            .withFreeTrial(BooleanEnum.FALSE).withFreeTrialDaysLeft(1824615307).withFreeTrialCreditLeft(1819890486)
            .withHelpUrl("wtjjguktalhsnv").withSupportUrl("dmxzr").withRegisterUrl("aimlnwiaaom");
        model = BinaryData.fromObject(model).toObject(SupportInfoInner.class);
        Assertions.assertEquals("h", model.productSku());
        Assertions.assertEquals("uj", model.productSerial());
        Assertions.assertEquals(BooleanEnum.TRUE, model.accountRegistered());
        Assertions.assertEquals("kozzwculkb", model.accountId());
        Assertions.assertEquals(BooleanEnum.FALSE, model.userDomainSupported());
        Assertions.assertEquals(BooleanEnum.FALSE, model.userRegistered());
        Assertions.assertEquals(BooleanEnum.FALSE, model.freeTrial());
        Assertions.assertEquals(1824615307, model.freeTrialDaysLeft());
        Assertions.assertEquals(1819890486, model.freeTrialCreditLeft());
        Assertions.assertEquals("wtjjguktalhsnv", model.helpUrl());
        Assertions.assertEquals("dmxzr", model.supportUrl());
        Assertions.assertEquals("aimlnwiaaom", model.registerUrl());
    }
}
