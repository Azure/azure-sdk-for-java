// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.DnsProxy;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.DnsSettings;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.EnabledDnsType;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.IpAddress;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DnsSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DnsSettings model = BinaryData.fromString(
            "{\"enableDnsProxy\":\"DISABLED\",\"enabledDnsType\":\"CUSTOM\",\"dnsServers\":[{\"resourceId\":\"huwrykqgaifm\",\"address\":\"klbydv\"}]}")
            .toObject(DnsSettings.class);
        Assertions.assertEquals(DnsProxy.DISABLED, model.enableDnsProxy());
        Assertions.assertEquals(EnabledDnsType.CUSTOM, model.enabledDnsType());
        Assertions.assertEquals("huwrykqgaifm", model.dnsServers().get(0).resourceId());
        Assertions.assertEquals("klbydv", model.dnsServers().get(0).address());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DnsSettings model = new DnsSettings().withEnableDnsProxy(DnsProxy.DISABLED)
            .withEnabledDnsType(EnabledDnsType.CUSTOM)
            .withDnsServers(Arrays.asList(new IpAddress().withResourceId("huwrykqgaifm").withAddress("klbydv")));
        model = BinaryData.fromObject(model).toObject(DnsSettings.class);
        Assertions.assertEquals(DnsProxy.DISABLED, model.enableDnsProxy());
        Assertions.assertEquals(EnabledDnsType.CUSTOM, model.enabledDnsType());
        Assertions.assertEquals("huwrykqgaifm", model.dnsServers().get(0).resourceId());
        Assertions.assertEquals("klbydv", model.dnsServers().get(0).address());
    }
}
