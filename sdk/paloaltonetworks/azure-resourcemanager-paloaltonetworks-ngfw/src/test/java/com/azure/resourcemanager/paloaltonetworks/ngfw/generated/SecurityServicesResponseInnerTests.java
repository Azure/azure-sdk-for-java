// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.fluent.models.SecurityServicesResponseInner;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.NameDescriptionObject;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.SecurityServicesTypeList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SecurityServicesResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecurityServicesResponseInner model = BinaryData.fromString(
            "{\"value\":{\"type\":\"civfsnkymuctq\",\"entry\":[{\"name\":\"fbebrjcxer\",\"description\":\"wutttxfvjrbi\"}]},\"nextLink\":\"hxepcyvahfnlj\"}")
            .toObject(SecurityServicesResponseInner.class);
        Assertions.assertEquals("civfsnkymuctq", model.value().type());
        Assertions.assertEquals("fbebrjcxer", model.value().entry().get(0).name());
        Assertions.assertEquals("wutttxfvjrbi", model.value().entry().get(0).description());
        Assertions.assertEquals("hxepcyvahfnlj", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecurityServicesResponseInner model = new SecurityServicesResponseInner()
            .withValue(new SecurityServicesTypeList().withType("civfsnkymuctq").withEntry(
                Arrays.asList(new NameDescriptionObject().withName("fbebrjcxer").withDescription("wutttxfvjrbi"))))
            .withNextLink("hxepcyvahfnlj");
        model = BinaryData.fromObject(model).toObject(SecurityServicesResponseInner.class);
        Assertions.assertEquals("civfsnkymuctq", model.value().type());
        Assertions.assertEquals("fbebrjcxer", model.value().entry().get(0).name());
        Assertions.assertEquals("wutttxfvjrbi", model.value().entry().get(0).description());
        Assertions.assertEquals("hxepcyvahfnlj", model.nextLink());
    }
}
