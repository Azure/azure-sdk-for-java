// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.fluent.models.CertificateObjectLocalRulestackResourceInner;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.BooleanEnum;
import org.junit.jupiter.api.Assertions;

public final class CertificateObjectLocalRulestackResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CertificateObjectLocalRulestackResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"certificateSignerResourceId\":\"aaeranokqgukk\",\"certificateSelfSigned\":\"TRUE\",\"auditComment\":\"vbroylaxxu\",\"description\":\"disdosfjbjsvgj\",\"etag\":\"hryvy\",\"provisioningState\":\"NotSpecified\"},\"id\":\"c\",\"name\":\"xgccknfnw\",\"type\":\"btmvpdvjdhttza\"}")
            .toObject(CertificateObjectLocalRulestackResourceInner.class);
        Assertions.assertEquals("aaeranokqgukk", model.certificateSignerResourceId());
        Assertions.assertEquals(BooleanEnum.TRUE, model.certificateSelfSigned());
        Assertions.assertEquals("vbroylaxxu", model.auditComment());
        Assertions.assertEquals("disdosfjbjsvgj", model.description());
        Assertions.assertEquals("hryvy", model.etag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CertificateObjectLocalRulestackResourceInner model = new CertificateObjectLocalRulestackResourceInner()
            .withCertificateSignerResourceId("aaeranokqgukk").withCertificateSelfSigned(BooleanEnum.TRUE)
            .withAuditComment("vbroylaxxu").withDescription("disdosfjbjsvgj").withEtag("hryvy");
        model = BinaryData.fromObject(model).toObject(CertificateObjectLocalRulestackResourceInner.class);
        Assertions.assertEquals("aaeranokqgukk", model.certificateSignerResourceId());
        Assertions.assertEquals(BooleanEnum.TRUE, model.certificateSelfSigned());
        Assertions.assertEquals("vbroylaxxu", model.auditComment());
        Assertions.assertEquals("disdosfjbjsvgj", model.description());
        Assertions.assertEquals("hryvy", model.etag());
    }
}
