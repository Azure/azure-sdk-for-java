// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.paloaltonetworks.ngfw.PaloAltoNetworksNgfwManager;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.BooleanEnum;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.CertificateObjectLocalRulestackResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CertificateObjectLocalRulestacksGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"certificateSignerResourceId\":\"xlqfh\",\"certificateSelfSigned\":\"TRUE\",\"auditComment\":\"wabs\",\"description\":\"ron\",\"etag\":\"lmgnlqxsjx\",\"provisioningState\":\"NotSpecified\"},\"id\":\"xhvuqbozool\",\"name\":\"qocarkuzlbc\",\"type\":\"ndtsnxawqytll\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PaloAltoNetworksNgfwManager manager = PaloAltoNetworksNgfwManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CertificateObjectLocalRulestackResource response = manager.certificateObjectLocalRulestacks()
            .getWithResponse("svkskmqoz", "kivy", "jrliiz", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("xlqfh", response.certificateSignerResourceId());
        Assertions.assertEquals(BooleanEnum.TRUE, response.certificateSelfSigned());
        Assertions.assertEquals("wabs", response.auditComment());
        Assertions.assertEquals("ron", response.description());
        Assertions.assertEquals("lmgnlqxsjx", response.etag());
    }
}
