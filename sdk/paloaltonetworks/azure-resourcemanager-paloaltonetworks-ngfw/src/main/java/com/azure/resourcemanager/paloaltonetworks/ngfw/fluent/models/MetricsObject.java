// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.ProvisioningState;
import java.io.IOException;

/**
 * Config for Metrics for firewall metrics.
 */
@Fluent
public final class MetricsObject implements JsonSerializable<MetricsObject> {
    /*
     * Resource Id of application insights resource
     */
    private String applicationInsightsResourceId;

    /*
     * Connection string of application insights resource
     */
    private String applicationInsightsConnectionString;

    /*
     * read only string representing last create or update
     */
    private String panEtag;

    /*
     * Provisioning state of the resource.
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of MetricsObject class.
     */
    public MetricsObject() {
    }

    /**
     * Get the applicationInsightsResourceId property: Resource Id of application insights resource.
     * 
     * @return the applicationInsightsResourceId value.
     */
    public String applicationInsightsResourceId() {
        return this.applicationInsightsResourceId;
    }

    /**
     * Set the applicationInsightsResourceId property: Resource Id of application insights resource.
     * 
     * @param applicationInsightsResourceId the applicationInsightsResourceId value to set.
     * @return the MetricsObject object itself.
     */
    public MetricsObject withApplicationInsightsResourceId(String applicationInsightsResourceId) {
        this.applicationInsightsResourceId = applicationInsightsResourceId;
        return this;
    }

    /**
     * Get the applicationInsightsConnectionString property: Connection string of application insights resource.
     * 
     * @return the applicationInsightsConnectionString value.
     */
    public String applicationInsightsConnectionString() {
        return this.applicationInsightsConnectionString;
    }

    /**
     * Set the applicationInsightsConnectionString property: Connection string of application insights resource.
     * 
     * @param applicationInsightsConnectionString the applicationInsightsConnectionString value to set.
     * @return the MetricsObject object itself.
     */
    public MetricsObject withApplicationInsightsConnectionString(String applicationInsightsConnectionString) {
        this.applicationInsightsConnectionString = applicationInsightsConnectionString;
        return this;
    }

    /**
     * Get the panEtag property: read only string representing last create or update.
     * 
     * @return the panEtag value.
     */
    public String panEtag() {
        return this.panEtag;
    }

    /**
     * Set the panEtag property: read only string representing last create or update.
     * 
     * @param panEtag the panEtag value to set.
     * @return the MetricsObject object itself.
     */
    public MetricsObject withPanEtag(String panEtag) {
        this.panEtag = panEtag;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("applicationInsightsResourceId", this.applicationInsightsResourceId);
        jsonWriter.writeStringField("applicationInsightsConnectionString", this.applicationInsightsConnectionString);
        jsonWriter.writeStringField("panEtag", this.panEtag);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MetricsObject from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MetricsObject if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MetricsObject.
     */
    public static MetricsObject fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MetricsObject deserializedMetricsObject = new MetricsObject();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("applicationInsightsResourceId".equals(fieldName)) {
                    deserializedMetricsObject.applicationInsightsResourceId = reader.getString();
                } else if ("applicationInsightsConnectionString".equals(fieldName)) {
                    deserializedMetricsObject.applicationInsightsConnectionString = reader.getString();
                } else if ("panEtag".equals(fieldName)) {
                    deserializedMetricsObject.panEtag = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedMetricsObject.provisioningState = ProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMetricsObject;
        });
    }
}
