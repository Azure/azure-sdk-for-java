// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Security services type list. */
@Fluent
public final class SecurityServicesTypeList {
    /*
     * security services type
     */
    @JsonProperty(value = "type")
    private String type;

    /*
     * list
     */
    @JsonProperty(value = "entry", required = true)
    private List<NameDescriptionObject> entry;

    /** Creates an instance of SecurityServicesTypeList class. */
    public SecurityServicesTypeList() {
    }

    /**
     * Get the type property: security services type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: security services type.
     *
     * @param type the type value to set.
     * @return the SecurityServicesTypeList object itself.
     */
    public SecurityServicesTypeList withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the entry property: list.
     *
     * @return the entry value.
     */
    public List<NameDescriptionObject> entry() {
        return this.entry;
    }

    /**
     * Set the entry property: list.
     *
     * @param entry the entry value to set.
     * @return the SecurityServicesTypeList object itself.
     */
    public SecurityServicesTypeList withEntry(List<NameDescriptionObject> entry) {
        this.entry = entry;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (entry() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property entry in model SecurityServicesTypeList"));
        } else {
            entry().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SecurityServicesTypeList.class);
}
