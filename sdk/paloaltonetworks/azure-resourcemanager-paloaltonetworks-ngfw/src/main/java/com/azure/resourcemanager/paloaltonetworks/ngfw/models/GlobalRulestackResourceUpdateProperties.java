// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The updatable properties of the GlobalRulestackResource.
 */
@Fluent
public final class GlobalRulestackResourceUpdateProperties
    implements JsonSerializable<GlobalRulestackResourceUpdateProperties> {
    /*
     * PanEtag info
     */
    private String panEtag;

    /*
     * Rulestack Location, Required for GlobalRulestacks, Not for LocalRulestacks
     */
    private String panLocation;

    /*
     * Rulestack Type
     */
    private ScopeType scope;

    /*
     * subscription scope of global rulestack
     */
    private List<String> associatedSubscriptions;

    /*
     * rulestack description
     */
    private String description;

    /*
     * Mode for default rules creation
     */
    private DefaultMode defaultMode;

    /*
     * minimum version
     */
    private String minAppIdVersion;

    /*
     * Security Profile
     */
    private SecurityServices securityServices;

    /**
     * Creates an instance of GlobalRulestackResourceUpdateProperties class.
     */
    public GlobalRulestackResourceUpdateProperties() {
    }

    /**
     * Get the panEtag property: PanEtag info.
     * 
     * @return the panEtag value.
     */
    public String panEtag() {
        return this.panEtag;
    }

    /**
     * Set the panEtag property: PanEtag info.
     * 
     * @param panEtag the panEtag value to set.
     * @return the GlobalRulestackResourceUpdateProperties object itself.
     */
    public GlobalRulestackResourceUpdateProperties withPanEtag(String panEtag) {
        this.panEtag = panEtag;
        return this;
    }

    /**
     * Get the panLocation property: Rulestack Location, Required for GlobalRulestacks, Not for LocalRulestacks.
     * 
     * @return the panLocation value.
     */
    public String panLocation() {
        return this.panLocation;
    }

    /**
     * Set the panLocation property: Rulestack Location, Required for GlobalRulestacks, Not for LocalRulestacks.
     * 
     * @param panLocation the panLocation value to set.
     * @return the GlobalRulestackResourceUpdateProperties object itself.
     */
    public GlobalRulestackResourceUpdateProperties withPanLocation(String panLocation) {
        this.panLocation = panLocation;
        return this;
    }

    /**
     * Get the scope property: Rulestack Type.
     * 
     * @return the scope value.
     */
    public ScopeType scope() {
        return this.scope;
    }

    /**
     * Set the scope property: Rulestack Type.
     * 
     * @param scope the scope value to set.
     * @return the GlobalRulestackResourceUpdateProperties object itself.
     */
    public GlobalRulestackResourceUpdateProperties withScope(ScopeType scope) {
        this.scope = scope;
        return this;
    }

    /**
     * Get the associatedSubscriptions property: subscription scope of global rulestack.
     * 
     * @return the associatedSubscriptions value.
     */
    public List<String> associatedSubscriptions() {
        return this.associatedSubscriptions;
    }

    /**
     * Set the associatedSubscriptions property: subscription scope of global rulestack.
     * 
     * @param associatedSubscriptions the associatedSubscriptions value to set.
     * @return the GlobalRulestackResourceUpdateProperties object itself.
     */
    public GlobalRulestackResourceUpdateProperties withAssociatedSubscriptions(List<String> associatedSubscriptions) {
        this.associatedSubscriptions = associatedSubscriptions;
        return this;
    }

    /**
     * Get the description property: rulestack description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: rulestack description.
     * 
     * @param description the description value to set.
     * @return the GlobalRulestackResourceUpdateProperties object itself.
     */
    public GlobalRulestackResourceUpdateProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the defaultMode property: Mode for default rules creation.
     * 
     * @return the defaultMode value.
     */
    public DefaultMode defaultMode() {
        return this.defaultMode;
    }

    /**
     * Set the defaultMode property: Mode for default rules creation.
     * 
     * @param defaultMode the defaultMode value to set.
     * @return the GlobalRulestackResourceUpdateProperties object itself.
     */
    public GlobalRulestackResourceUpdateProperties withDefaultMode(DefaultMode defaultMode) {
        this.defaultMode = defaultMode;
        return this;
    }

    /**
     * Get the minAppIdVersion property: minimum version.
     * 
     * @return the minAppIdVersion value.
     */
    public String minAppIdVersion() {
        return this.minAppIdVersion;
    }

    /**
     * Set the minAppIdVersion property: minimum version.
     * 
     * @param minAppIdVersion the minAppIdVersion value to set.
     * @return the GlobalRulestackResourceUpdateProperties object itself.
     */
    public GlobalRulestackResourceUpdateProperties withMinAppIdVersion(String minAppIdVersion) {
        this.minAppIdVersion = minAppIdVersion;
        return this;
    }

    /**
     * Get the securityServices property: Security Profile.
     * 
     * @return the securityServices value.
     */
    public SecurityServices securityServices() {
        return this.securityServices;
    }

    /**
     * Set the securityServices property: Security Profile.
     * 
     * @param securityServices the securityServices value to set.
     * @return the GlobalRulestackResourceUpdateProperties object itself.
     */
    public GlobalRulestackResourceUpdateProperties withSecurityServices(SecurityServices securityServices) {
        this.securityServices = securityServices;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (securityServices() != null) {
            securityServices().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("panEtag", this.panEtag);
        jsonWriter.writeStringField("panLocation", this.panLocation);
        jsonWriter.writeStringField("scope", this.scope == null ? null : this.scope.toString());
        jsonWriter.writeArrayField("associatedSubscriptions", this.associatedSubscriptions,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("defaultMode", this.defaultMode == null ? null : this.defaultMode.toString());
        jsonWriter.writeStringField("minAppIdVersion", this.minAppIdVersion);
        jsonWriter.writeJsonField("securityServices", this.securityServices);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GlobalRulestackResourceUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GlobalRulestackResourceUpdateProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GlobalRulestackResourceUpdateProperties.
     */
    public static GlobalRulestackResourceUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GlobalRulestackResourceUpdateProperties deserializedGlobalRulestackResourceUpdateProperties
                = new GlobalRulestackResourceUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("panEtag".equals(fieldName)) {
                    deserializedGlobalRulestackResourceUpdateProperties.panEtag = reader.getString();
                } else if ("panLocation".equals(fieldName)) {
                    deserializedGlobalRulestackResourceUpdateProperties.panLocation = reader.getString();
                } else if ("scope".equals(fieldName)) {
                    deserializedGlobalRulestackResourceUpdateProperties.scope
                        = ScopeType.fromString(reader.getString());
                } else if ("associatedSubscriptions".equals(fieldName)) {
                    List<String> associatedSubscriptions = reader.readArray(reader1 -> reader1.getString());
                    deserializedGlobalRulestackResourceUpdateProperties.associatedSubscriptions
                        = associatedSubscriptions;
                } else if ("description".equals(fieldName)) {
                    deserializedGlobalRulestackResourceUpdateProperties.description = reader.getString();
                } else if ("defaultMode".equals(fieldName)) {
                    deserializedGlobalRulestackResourceUpdateProperties.defaultMode
                        = DefaultMode.fromString(reader.getString());
                } else if ("minAppIdVersion".equals(fieldName)) {
                    deserializedGlobalRulestackResourceUpdateProperties.minAppIdVersion = reader.getString();
                } else if ("securityServices".equals(fieldName)) {
                    deserializedGlobalRulestackResourceUpdateProperties.securityServices
                        = SecurityServices.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGlobalRulestackResourceUpdateProperties;
        });
    }
}
