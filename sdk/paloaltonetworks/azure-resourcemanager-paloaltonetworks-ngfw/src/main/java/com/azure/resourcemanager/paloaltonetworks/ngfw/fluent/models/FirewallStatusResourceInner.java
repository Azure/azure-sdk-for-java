// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.BooleanEnum;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.HealthStatus;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.PanoramaStatus;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.ReadOnlyProvisioningState;
import java.io.IOException;

/**
 * Firewall Status.
 */
@Immutable
public final class FirewallStatusResourceInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    private FirewallStatusProperty innerProperties = new FirewallStatusProperty();

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of FirewallStatusResourceInner class.
     */
    public FirewallStatusResourceInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private FirewallStatusProperty innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the isPanoramaManaged property: Panorama Managed: Default is False. Default will be CloudSec managed.
     * 
     * @return the isPanoramaManaged value.
     */
    public BooleanEnum isPanoramaManaged() {
        return this.innerProperties() == null ? null : this.innerProperties().isPanoramaManaged();
    }

    /**
     * Get the healthStatus property: Current status of the Firewall.
     * 
     * @return the healthStatus value.
     */
    public HealthStatus healthStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().healthStatus();
    }

    /**
     * Get the healthReason property: Detail description of current health of the Firewall.
     * 
     * @return the healthReason value.
     */
    public String healthReason() {
        return this.innerProperties() == null ? null : this.innerProperties().healthReason();
    }

    /**
     * Get the panoramaStatus property: Panorama Status.
     * 
     * @return the panoramaStatus value.
     */
    public PanoramaStatus panoramaStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().panoramaStatus();
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    public ReadOnlyProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property innerProperties in model FirewallStatusResourceInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(FirewallStatusResourceInner.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FirewallStatusResourceInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FirewallStatusResourceInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the FirewallStatusResourceInner.
     */
    public static FirewallStatusResourceInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FirewallStatusResourceInner deserializedFirewallStatusResourceInner = new FirewallStatusResourceInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedFirewallStatusResourceInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedFirewallStatusResourceInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedFirewallStatusResourceInner.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedFirewallStatusResourceInner.innerProperties = FirewallStatusProperty.fromJson(reader);
                } else if ("systemData".equals(fieldName)) {
                    deserializedFirewallStatusResourceInner.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFirewallStatusResourceInner;
        });
    }
}
