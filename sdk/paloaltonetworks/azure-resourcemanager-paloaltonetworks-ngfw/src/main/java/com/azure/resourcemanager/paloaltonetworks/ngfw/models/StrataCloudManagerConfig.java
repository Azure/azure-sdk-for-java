// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * This field is only present if Strata Cloud Manager is managing the policy for this firewall.
 */
@Fluent
public final class StrataCloudManagerConfig implements JsonSerializable<StrataCloudManagerConfig> {
    /*
     * Strata Cloud Manager name which is intended to manage the policy for this firewall.
     */
    private String cloudManagerName;

    /**
     * Creates an instance of StrataCloudManagerConfig class.
     */
    public StrataCloudManagerConfig() {
    }

    /**
     * Get the cloudManagerName property: Strata Cloud Manager name which is intended to manage the policy for this
     * firewall.
     * 
     * @return the cloudManagerName value.
     */
    public String cloudManagerName() {
        return this.cloudManagerName;
    }

    /**
     * Set the cloudManagerName property: Strata Cloud Manager name which is intended to manage the policy for this
     * firewall.
     * 
     * @param cloudManagerName the cloudManagerName value to set.
     * @return the StrataCloudManagerConfig object itself.
     */
    public StrataCloudManagerConfig withCloudManagerName(String cloudManagerName) {
        this.cloudManagerName = cloudManagerName;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("cloudManagerName", this.cloudManagerName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StrataCloudManagerConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StrataCloudManagerConfig if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the StrataCloudManagerConfig.
     */
    public static StrataCloudManagerConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StrataCloudManagerConfig deserializedStrataCloudManagerConfig = new StrataCloudManagerConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("cloudManagerName".equals(fieldName)) {
                    deserializedStrataCloudManagerConfig.cloudManagerName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStrataCloudManagerConfig;
        });
    }
}
