// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.implementation;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.paloaltonetworks.ngfw.fluent.models.MetricsObjectFirewallResourceInner;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.MetricsObjectFirewallResource;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.ProvisioningState;

public final class MetricsObjectFirewallResourceImpl implements MetricsObjectFirewallResource {
    private MetricsObjectFirewallResourceInner innerObject;

    private final com.azure.resourcemanager.paloaltonetworks.ngfw.PaloAltoNetworksNgfwManager serviceManager;

    MetricsObjectFirewallResourceImpl(MetricsObjectFirewallResourceInner innerObject,
        com.azure.resourcemanager.paloaltonetworks.ngfw.PaloAltoNetworksNgfwManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String applicationInsightsResourceId() {
        return this.innerModel().applicationInsightsResourceId();
    }

    public String applicationInsightsConnectionString() {
        return this.innerModel().applicationInsightsConnectionString();
    }

    public String panEtag() {
        return this.innerModel().panEtag();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public MetricsObjectFirewallResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.paloaltonetworks.ngfw.PaloAltoNetworksNgfwManager manager() {
        return this.serviceManager;
    }
}
