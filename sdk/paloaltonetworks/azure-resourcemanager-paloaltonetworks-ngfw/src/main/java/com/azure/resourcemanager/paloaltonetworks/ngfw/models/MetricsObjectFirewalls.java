// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.paloaltonetworks.ngfw.fluent.models.MetricsObjectFirewallResourceInner;

/**
 * Resource collection API of MetricsObjectFirewalls.
 */
public interface MetricsObjectFirewalls {
    /**
     * Get a MetricsObjectFirewallResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param firewallName Firewall resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MetricsObjectFirewallResource along with {@link Response}.
     */
    Response<MetricsObjectFirewallResource> getWithResponse(String resourceGroupName, String firewallName,
        Context context);

    /**
     * Get a MetricsObjectFirewallResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param firewallName Firewall resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MetricsObjectFirewallResource.
     */
    MetricsObjectFirewallResource get(String resourceGroupName, String firewallName);

    /**
     * Create a MetricsObjectFirewallResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param firewallName Firewall resource name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return firewall Metrics Object.
     */
    MetricsObjectFirewallResource createOrUpdate(String resourceGroupName, String firewallName,
        MetricsObjectFirewallResourceInner resource);

    /**
     * Create a MetricsObjectFirewallResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param firewallName Firewall resource name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return firewall Metrics Object.
     */
    MetricsObjectFirewallResource createOrUpdate(String resourceGroupName, String firewallName,
        MetricsObjectFirewallResourceInner resource, Context context);

    /**
     * Delete a MetricsObjectFirewallResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param firewallName Firewall resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String firewallName);

    /**
     * Delete a MetricsObjectFirewallResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param firewallName Firewall resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String firewallName, Context context);

    /**
     * List MetricsObjectFirewallResource resources by Firewalls.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param firewallName Firewall resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MetricsObjectFirewallResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<MetricsObjectFirewallResource> listByFirewalls(String resourceGroupName, String firewallName);

    /**
     * List MetricsObjectFirewallResource resources by Firewalls.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param firewallName Firewall resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MetricsObjectFirewallResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<MetricsObjectFirewallResource> listByFirewalls(String resourceGroupName, String firewallName,
        Context context);
}
