// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of PaloAltoNetworksCloudngfwOperations.
 */
public interface PaloAltoNetworksCloudngfwOperations {
    /**
     * The createProductSerialNumber operation.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return create Product Serial Number Request status along with {@link Response}.
     */
    Response<ProductSerialNumberRequestStatus> createProductSerialNumberWithResponse(Context context);

    /**
     * The createProductSerialNumber operation.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return create Product Serial Number Request status.
     */
    ProductSerialNumberRequestStatus createProductSerialNumber();

    /**
     * The listCloudManagerTenants operation.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cloud Manager Tenant along with {@link Response}.
     */
    Response<CloudManagerTenantList> listCloudManagerTenantsWithResponse(Context context);

    /**
     * The listCloudManagerTenants operation.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cloud Manager Tenant.
     */
    CloudManagerTenantList listCloudManagerTenants();

    /**
     * The listProductSerialNumberStatus operation.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return product serial and status for the service along with {@link Response}.
     */
    Response<ProductSerialNumberStatus> listProductSerialNumberStatusWithResponse(Context context);

    /**
     * The listProductSerialNumberStatus operation.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return product serial and status for the service.
     */
    ProductSerialNumberStatus listProductSerialNumberStatus();

    /**
     * The listSupportInfo operation.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return support information for the service along with {@link Response}.
     */
    Response<SupportInfoModel> listSupportInfoWithResponse(Context context);

    /**
     * The listSupportInfo operation.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return support information for the service.
     */
    SupportInfoModel listSupportInfo();
}
