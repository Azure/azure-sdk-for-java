// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Panorama connectivity information.
 */
@Immutable
public final class PanoramaStatus implements JsonSerializable<PanoramaStatus> {
    /*
     * Primary Panorama connection status
     */
    private ServerStatus panoramaServerStatus;

    /*
     * Secondary Panorama connection status
     */
    private ServerStatus panoramaServer2Status;

    /**
     * Creates an instance of PanoramaStatus class.
     */
    public PanoramaStatus() {
    }

    /**
     * Get the panoramaServerStatus property: Primary Panorama connection status.
     * 
     * @return the panoramaServerStatus value.
     */
    public ServerStatus panoramaServerStatus() {
        return this.panoramaServerStatus;
    }

    /**
     * Get the panoramaServer2Status property: Secondary Panorama connection status.
     * 
     * @return the panoramaServer2Status value.
     */
    public ServerStatus panoramaServer2Status() {
        return this.panoramaServer2Status;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PanoramaStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PanoramaStatus if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the PanoramaStatus.
     */
    public static PanoramaStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PanoramaStatus deserializedPanoramaStatus = new PanoramaStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("panoramaServerStatus".equals(fieldName)) {
                    deserializedPanoramaStatus.panoramaServerStatus = ServerStatus.fromString(reader.getString());
                } else if ("panoramaServer2Status".equals(fieldName)) {
                    deserializedPanoramaStatus.panoramaServer2Status = ServerStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPanoramaStatus;
        });
    }
}
