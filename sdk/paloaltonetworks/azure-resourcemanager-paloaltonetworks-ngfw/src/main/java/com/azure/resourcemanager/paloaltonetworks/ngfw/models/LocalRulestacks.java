// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of LocalRulestacks. */
public interface LocalRulestacks {
    /**
     * List LocalRulestackResource resources by subscription ID.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LocalRulestackResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<LocalRulestackResource> list();

    /**
     * List LocalRulestackResource resources by subscription ID.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LocalRulestackResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<LocalRulestackResource> list(Context context);

    /**
     * List LocalRulestackResource resources by resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LocalRulestackResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<LocalRulestackResource> listByResourceGroup(String resourceGroupName);

    /**
     * List LocalRulestackResource resources by resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LocalRulestackResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<LocalRulestackResource> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a LocalRulestackResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a LocalRulestackResource along with {@link Response}.
     */
    Response<LocalRulestackResource> getByResourceGroupWithResponse(
        String resourceGroupName, String localRulestackName, Context context);

    /**
     * Get a LocalRulestackResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a LocalRulestackResource.
     */
    LocalRulestackResource getByResourceGroup(String resourceGroupName, String localRulestackName);

    /**
     * Delete a LocalRulestackResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String localRulestackName);

    /**
     * Delete a LocalRulestackResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String localRulestackName, Context context);

    /**
     * Commit rulestack configuration.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void commit(String resourceGroupName, String localRulestackName);

    /**
     * Commit rulestack configuration.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void commit(String resourceGroupName, String localRulestackName, Context context);

    /**
     * Get changelog.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return changelog along with {@link Response}.
     */
    Response<Changelog> getChangeLogWithResponse(String resourceGroupName, String localRulestackName, Context context);

    /**
     * Get changelog.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return changelog.
     */
    Changelog getChangeLog(String resourceGroupName, String localRulestackName);

    /**
     * support info for rulestack.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param email email address on behalf of which this API called.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return support information for the resource along with {@link Response}.
     */
    Response<SupportInfo> getSupportInfoWithResponse(
        String resourceGroupName, String localRulestackName, String email, Context context);

    /**
     * support info for rulestack.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return support information for the resource.
     */
    SupportInfo getSupportInfo(String resourceGroupName, String localRulestackName);

    /**
     * Get the list of advanced security objects.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param type The type parameter.
     * @param skip The skip parameter.
     * @param top The top parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of advanced security objects along with {@link Response}.
     */
    Response<AdvSecurityObjectListResponse> listAdvancedSecurityObjectsWithResponse(
        String resourceGroupName,
        String localRulestackName,
        AdvSecurityObjectTypeEnum type,
        String skip,
        Integer top,
        Context context);

    /**
     * Get the list of advanced security objects.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param type The type parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of advanced security objects.
     */
    AdvSecurityObjectListResponse listAdvancedSecurityObjects(
        String resourceGroupName, String localRulestackName, AdvSecurityObjectTypeEnum type);

    /**
     * List of AppIds for LocalRulestack ApiVersion.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param appIdVersion The appIdVersion parameter.
     * @param appPrefix The appPrefix parameter.
     * @param skip The skip parameter.
     * @param top The top parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<ListAppIdResponse> listAppIdsWithResponse(
        String resourceGroupName,
        String localRulestackName,
        String appIdVersion,
        String appPrefix,
        String skip,
        Integer top,
        Context context);

    /**
     * List of AppIds for LocalRulestack ApiVersion.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    ListAppIdResponse listAppIds(String resourceGroupName, String localRulestackName);

    /**
     * List of countries for Rulestack.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param skip The skip parameter.
     * @param top The top parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return countries Response Object along with {@link Response}.
     */
    Response<CountriesResponse> listCountriesWithResponse(
        String resourceGroupName, String localRulestackName, String skip, Integer top, Context context);

    /**
     * List of countries for Rulestack.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return countries Response Object.
     */
    CountriesResponse listCountries(String resourceGroupName, String localRulestackName);

    /**
     * List of Firewalls associated with Rulestack.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list firewalls response along with {@link Response}.
     */
    Response<ListFirewallsResponse> listFirewallsWithResponse(
        String resourceGroupName, String localRulestackName, Context context);

    /**
     * List of Firewalls associated with Rulestack.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list firewalls response.
     */
    ListFirewallsResponse listFirewalls(String resourceGroupName, String localRulestackName);

    /**
     * List predefined URL categories for rulestack.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param skip The skip parameter.
     * @param top The top parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return predefined url categories response along with {@link Response}.
     */
    Response<PredefinedUrlCategoriesResponse> listPredefinedUrlCategoriesWithResponse(
        String resourceGroupName, String localRulestackName, String skip, Integer top, Context context);

    /**
     * List predefined URL categories for rulestack.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return predefined url categories response.
     */
    PredefinedUrlCategoriesResponse listPredefinedUrlCategories(String resourceGroupName, String localRulestackName);

    /**
     * List the security services for rulestack.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param type The type parameter.
     * @param skip The skip parameter.
     * @param top The top parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return security services list response along with {@link Response}.
     */
    Response<SecurityServicesResponse> listSecurityServicesWithResponse(
        String resourceGroupName,
        String localRulestackName,
        SecurityServicesTypeEnum type,
        String skip,
        Integer top,
        Context context);

    /**
     * List the security services for rulestack.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param type The type parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return security services list response.
     */
    SecurityServicesResponse listSecurityServices(
        String resourceGroupName, String localRulestackName, SecurityServicesTypeEnum type);

    /**
     * Revert rulestack configuration.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> revertWithResponse(String resourceGroupName, String localRulestackName, Context context);

    /**
     * Revert rulestack configuration.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param localRulestackName LocalRulestack resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void revert(String resourceGroupName, String localRulestackName);

    /**
     * Get a LocalRulestackResource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a LocalRulestackResource along with {@link Response}.
     */
    LocalRulestackResource getById(String id);

    /**
     * Get a LocalRulestackResource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a LocalRulestackResource along with {@link Response}.
     */
    Response<LocalRulestackResource> getByIdWithResponse(String id, Context context);

    /**
     * Delete a LocalRulestackResource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a LocalRulestackResource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new LocalRulestackResource resource.
     *
     * @param name resource name.
     * @return the first stage of the new LocalRulestackResource definition.
     */
    LocalRulestackResource.DefinitionStages.Blank define(String name);
}
