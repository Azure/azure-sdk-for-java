// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Associated rulestack details.
 */
@Fluent
public final class RulestackDetails implements JsonSerializable<RulestackDetails> {
    /*
     * Resource Id
     */
    private String resourceId;

    /*
     * Associated rulestack Id
     */
    private String rulestackId;

    /*
     * Rulestack location
     */
    private String location;

    /**
     * Creates an instance of RulestackDetails class.
     */
    public RulestackDetails() {
    }

    /**
     * Get the resourceId property: Resource Id.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: Resource Id.
     * 
     * @param resourceId the resourceId value to set.
     * @return the RulestackDetails object itself.
     */
    public RulestackDetails withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the rulestackId property: Associated rulestack Id.
     * 
     * @return the rulestackId value.
     */
    public String rulestackId() {
        return this.rulestackId;
    }

    /**
     * Set the rulestackId property: Associated rulestack Id.
     * 
     * @param rulestackId the rulestackId value to set.
     * @return the RulestackDetails object itself.
     */
    public RulestackDetails withRulestackId(String rulestackId) {
        this.rulestackId = rulestackId;
        return this;
    }

    /**
     * Get the location property: Rulestack location.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: Rulestack location.
     * 
     * @param location the location value to set.
     * @return the RulestackDetails object itself.
     */
    public RulestackDetails withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceId", this.resourceId);
        jsonWriter.writeStringField("rulestackId", this.rulestackId);
        jsonWriter.writeStringField("location", this.location);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RulestackDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RulestackDetails if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the RulestackDetails.
     */
    public static RulestackDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RulestackDetails deserializedRulestackDetails = new RulestackDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceId".equals(fieldName)) {
                    deserializedRulestackDetails.resourceId = reader.getString();
                } else if ("rulestackId".equals(fieldName)) {
                    deserializedRulestackDetails.rulestackId = reader.getString();
                } else if ("location".equals(fieldName)) {
                    deserializedRulestackDetails.location = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRulestackDetails;
        });
    }
}
