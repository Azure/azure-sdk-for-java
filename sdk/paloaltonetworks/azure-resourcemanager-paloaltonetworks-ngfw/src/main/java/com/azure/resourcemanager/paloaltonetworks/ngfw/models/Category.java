// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * URL/EDL to match.
 */
@Fluent
public final class Category implements JsonSerializable<Category> {
    /*
     * custom URL
     */
    private List<String> urlCustom;

    /*
     * feed list
     */
    private List<String> feeds;

    /**
     * Creates an instance of Category class.
     */
    public Category() {
    }

    /**
     * Get the urlCustom property: custom URL.
     * 
     * @return the urlCustom value.
     */
    public List<String> urlCustom() {
        return this.urlCustom;
    }

    /**
     * Set the urlCustom property: custom URL.
     * 
     * @param urlCustom the urlCustom value to set.
     * @return the Category object itself.
     */
    public Category withUrlCustom(List<String> urlCustom) {
        this.urlCustom = urlCustom;
        return this;
    }

    /**
     * Get the feeds property: feed list.
     * 
     * @return the feeds value.
     */
    public List<String> feeds() {
        return this.feeds;
    }

    /**
     * Set the feeds property: feed list.
     * 
     * @param feeds the feeds value to set.
     * @return the Category object itself.
     */
    public Category withFeeds(List<String> feeds) {
        this.feeds = feeds;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (urlCustom() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property urlCustom in model Category"));
        }
        if (feeds() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property feeds in model Category"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(Category.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("urlCustom", this.urlCustom, (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("feeds", this.feeds, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Category from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Category if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the Category.
     */
    public static Category fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Category deserializedCategory = new Category();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("urlCustom".equals(fieldName)) {
                    List<String> urlCustom = reader.readArray(reader1 -> reader1.getString());
                    deserializedCategory.urlCustom = urlCustom;
                } else if ("feeds".equals(fieldName)) {
                    List<String> feeds = reader.readArray(reader1 -> reader1.getString());
                    deserializedCategory.feeds = feeds;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCategory;
        });
    }
}
