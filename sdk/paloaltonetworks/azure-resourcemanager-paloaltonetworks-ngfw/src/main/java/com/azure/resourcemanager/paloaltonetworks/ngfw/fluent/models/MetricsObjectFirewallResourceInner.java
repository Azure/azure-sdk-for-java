// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.paloaltonetworks.ngfw.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.paloaltonetworks.ngfw.models.ProvisioningState;
import java.io.IOException;

/**
 * Firewall Metrics Object.
 */
@Fluent
public final class MetricsObjectFirewallResourceInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    private MetricsObject innerProperties = new MetricsObject();

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of MetricsObjectFirewallResourceInner class.
     */
    public MetricsObjectFirewallResourceInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private MetricsObject innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the applicationInsightsResourceId property: Resource Id of application insights resource.
     * 
     * @return the applicationInsightsResourceId value.
     */
    public String applicationInsightsResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().applicationInsightsResourceId();
    }

    /**
     * Set the applicationInsightsResourceId property: Resource Id of application insights resource.
     * 
     * @param applicationInsightsResourceId the applicationInsightsResourceId value to set.
     * @return the MetricsObjectFirewallResourceInner object itself.
     */
    public MetricsObjectFirewallResourceInner withApplicationInsightsResourceId(String applicationInsightsResourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new MetricsObject();
        }
        this.innerProperties().withApplicationInsightsResourceId(applicationInsightsResourceId);
        return this;
    }

    /**
     * Get the applicationInsightsConnectionString property: Connection string of application insights resource.
     * 
     * @return the applicationInsightsConnectionString value.
     */
    public String applicationInsightsConnectionString() {
        return this.innerProperties() == null ? null : this.innerProperties().applicationInsightsConnectionString();
    }

    /**
     * Set the applicationInsightsConnectionString property: Connection string of application insights resource.
     * 
     * @param applicationInsightsConnectionString the applicationInsightsConnectionString value to set.
     * @return the MetricsObjectFirewallResourceInner object itself.
     */
    public MetricsObjectFirewallResourceInner
        withApplicationInsightsConnectionString(String applicationInsightsConnectionString) {
        if (this.innerProperties() == null) {
            this.innerProperties = new MetricsObject();
        }
        this.innerProperties().withApplicationInsightsConnectionString(applicationInsightsConnectionString);
        return this;
    }

    /**
     * Get the panEtag property: read only string representing last create or update.
     * 
     * @return the panEtag value.
     */
    public String panEtag() {
        return this.innerProperties() == null ? null : this.innerProperties().panEtag();
    }

    /**
     * Set the panEtag property: read only string representing last create or update.
     * 
     * @param panEtag the panEtag value to set.
     * @return the MetricsObjectFirewallResourceInner object itself.
     */
    public MetricsObjectFirewallResourceInner withPanEtag(String panEtag) {
        if (this.innerProperties() == null) {
            this.innerProperties = new MetricsObject();
        }
        this.innerProperties().withPanEtag(panEtag);
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MetricsObjectFirewallResourceInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MetricsObjectFirewallResourceInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MetricsObjectFirewallResourceInner.
     */
    public static MetricsObjectFirewallResourceInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MetricsObjectFirewallResourceInner deserializedMetricsObjectFirewallResourceInner
                = new MetricsObjectFirewallResourceInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedMetricsObjectFirewallResourceInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedMetricsObjectFirewallResourceInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedMetricsObjectFirewallResourceInner.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedMetricsObjectFirewallResourceInner.innerProperties = MetricsObject.fromJson(reader);
                } else if ("systemData".equals(fieldName)) {
                    deserializedMetricsObjectFirewallResourceInner.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMetricsObjectFirewallResourceInner;
        });
    }
}
