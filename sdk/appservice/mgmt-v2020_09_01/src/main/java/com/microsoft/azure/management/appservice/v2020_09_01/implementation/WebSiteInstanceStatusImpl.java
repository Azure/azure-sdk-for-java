/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.appservice.v2020_09_01.implementation;

import com.microsoft.azure.management.appservice.v2020_09_01.WebSiteInstanceStatus;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import java.util.Map;
import com.microsoft.azure.management.appservice.v2020_09_01.ContainerInfo;
import com.microsoft.azure.management.appservice.v2020_09_01.SiteRuntimeState;
import com.microsoft.azure.management.appservice.v2020_09_01.SystemData;

class WebSiteInstanceStatusImpl extends IndexableRefreshableWrapperImpl<WebSiteInstanceStatus, WebSiteInstanceStatusInner> implements WebSiteInstanceStatus {
    private final AppServiceManager manager;
    private String resourceGroupName;
    private String name;
    private String instanceId;

    WebSiteInstanceStatusImpl(WebSiteInstanceStatusInner inner,  AppServiceManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.name = IdParsingUtils.getValueFromIdByName(inner.id(), "sites");
        this.instanceId = IdParsingUtils.getValueFromIdByName(inner.id(), "instances");
    }

    @Override
    public AppServiceManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<WebSiteInstanceStatusInner> getInnerAsync() {
        WebAppsInner client = this.manager().inner().webApps();
        return client.getInstanceInfoAsync(this.resourceGroupName, this.name, this.instanceId);
    }



    @Override
    public String consoleUrl() {
        return this.inner().consoleUrl();
    }

    @Override
    public Map<String, ContainerInfo> containers() {
        return this.inner().containers();
    }

    @Override
    public String detectorUrl() {
        return this.inner().detectorUrl();
    }

    @Override
    public String healthCheckUrl() {
        return this.inner().healthCheckUrl();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String kind() {
        return this.inner().kind();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public SiteRuntimeState state() {
        return this.inner().state();
    }

    @Override
    public String statusUrl() {
        return this.inner().statusUrl();
    }

    @Override
    public SystemData systemData() {
        return this.inner().systemData();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
