/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.appservice.v2020_09_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.appservice.v2020_09_01.implementation.AppServiceManager;
import com.microsoft.azure.management.appservice.v2020_09_01.implementation.DiagnosticAnalysisInner;
import java.util.List;
import org.joda.time.DateTime;
import com.microsoft.azure.management.appservice.v2020_09_01.implementation.DetectorDefinitionInner;

/**
 * Type representing DiagnosticAnalysis.
 */
public interface DiagnosticAnalysis extends HasInner<DiagnosticAnalysisInner>, HasManager<AppServiceManager> {
    /**
     * @return the abnormalTimePeriods value.
     */
    List<AbnormalTimePeriod> abnormalTimePeriods();

    /**
     * @return the endTime value.
     */
    DateTime endTime();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the kind value.
     */
    String kind();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the nonCorrelatedDetectors value.
     */
    List<DetectorDefinitionInner> nonCorrelatedDetectors();

    /**
     * @return the payload value.
     */
    List<AnalysisData> payload();

    /**
     * @return the startTime value.
     */
    DateTime startTime();

    /**
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * @return the type value.
     */
    String type();

}
