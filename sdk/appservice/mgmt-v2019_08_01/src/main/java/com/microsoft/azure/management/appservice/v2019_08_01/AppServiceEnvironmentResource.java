/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.appservice.v2019_08_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.appservice.v2019_08_01.implementation.AppServiceManager;
import java.util.List;

import com.microsoft.azure.management.appservice.v2019_08_01.implementation.AppServiceEnvironmentResourceInner;

/**
 * Type representing AppServiceEnvironmentResource.
 */
public interface AppServiceEnvironmentResource extends HasInner<AppServiceEnvironmentResourceInner>, Resource, GroupableResourceCore<AppServiceManager, AppServiceEnvironmentResourceInner>, HasResourceGroup, Refreshable<AppServiceEnvironmentResource>, Updatable<AppServiceEnvironmentResource.Update>, HasManager<AppServiceManager> {
    /**
     * @return the allowedMultiSizes value.
     */
    String allowedMultiSizes();

    /**
     * @return the allowedWorkerSizes value.
     */
    String allowedWorkerSizes();

    /**
     * @return the apiManagementAccountId value.
     */
    String apiManagementAccountId();

    /**
     * @return the appServiceEnvironmentResourceLocation value.
     */
    String appServiceEnvironmentResourceLocation();

    /**
     * @return the appServiceEnvironmentResourceName value.
     */
    String appServiceEnvironmentResourceName();

    /**
     * @return the clusterSettings value.
     */
    List<NameValuePair> clusterSettings();

    /**
     * @return the databaseEdition value.
     */
    String databaseEdition();

    /**
     * @return the databaseServiceObjective value.
     */
    String databaseServiceObjective();

    /**
     * @return the defaultFrontEndScaleFactor value.
     */
    Integer defaultFrontEndScaleFactor();

    /**
     * @return the dnsSuffix value.
     */
    String dnsSuffix();

    /**
     * @return the dynamicCacheEnabled value.
     */
    Boolean dynamicCacheEnabled();

    /**
     * @return the environmentCapacities value.
     */
    List<StampCapacity> environmentCapacities();

    /**
     * @return the environmentIsHealthy value.
     */
    Boolean environmentIsHealthy();

    /**
     * @return the environmentStatus value.
     */
    String environmentStatus();

    /**
     * @return the frontEndScaleFactor value.
     */
    Integer frontEndScaleFactor();

    /**
     * @return the hasLinuxWorkers value.
     */
    Boolean hasLinuxWorkers();

    /**
     * @return the internalLoadBalancingMode value.
     */
    InternalLoadBalancingMode internalLoadBalancingMode();

    /**
     * @return the ipsslAddressCount value.
     */
    Integer ipsslAddressCount();

    /**
     * @return the kind value.
     */
    String kind();

    /**
     * @return the lastAction value.
     */
    String lastAction();

    /**
     * @return the lastActionResult value.
     */
    String lastActionResult();

    /**
     * @return the maximumNumberOfMachines value.
     */
    Integer maximumNumberOfMachines();

    /**
     * @return the multiRoleCount value.
     */
    Integer multiRoleCount();

    /**
     * @return the multiSize value.
     */
    String multiSize();

    /**
     * @return the networkAccessControlList value.
     */
    List<NetworkAccessControlEntry> networkAccessControlList();

    /**
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * @return the resourceGroup value.
     */
    String resourceGroup();

    /**
     * @return the sslCertKeyVaultId value.
     */
    String sslCertKeyVaultId();

    /**
     * @return the sslCertKeyVaultSecretName value.
     */
    String sslCertKeyVaultSecretName();

    /**
     * @return the status value.
     */
    HostingEnvironmentStatus status();

    /**
     * @return the subscriptionId value.
     */
    String subscriptionId();

    /**
     * @return the suspended value.
     */
    Boolean suspended();

    /**
     * @return the upgradeDomains value.
     */
    Integer upgradeDomains();

    /**
     * @return the userWhitelistedIpRanges value.
     */
    List<String> userWhitelistedIpRanges();

    /**
     * @return the vipMappings value.
     */
    List<VirtualIPMapping> vipMappings();

    /**
     * @return the virtualNetwork value.
     */
    VirtualNetworkProfile virtualNetwork();

    /**
     * @return the vnetName value.
     */
    String vnetName();

    /**
     * @return the vnetResourceGroupName value.
     */
    String vnetResourceGroupName();

    /**
     * @return the vnetSubnetName value.
     */
    String vnetSubnetName();

    /**
     * @return the workerPools value.
     */
    List<WorkerPool> workerPools();

    /**
     * The entirety of the AppServiceEnvironmentResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithAppServiceEnvironmentResourceLocation, DefinitionStages.WithAppServiceEnvironmentResourceName, DefinitionStages.WithVirtualNetwork, DefinitionStages.WithWorkerPools, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of AppServiceEnvironmentResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a AppServiceEnvironmentResource definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the AppServiceEnvironmentResource definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithAppServiceEnvironmentResourceLocation> {
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify AppServiceEnvironmentResourceLocation.
         */
        interface WithAppServiceEnvironmentResourceLocation {
           /**
            * Specifies appServiceEnvironmentResourceLocation.
            * @param appServiceEnvironmentResourceLocation Location of the App Service Environment, e.g. "West US"
            * @return the next definition stage
*/
            WithAppServiceEnvironmentResourceName withAppServiceEnvironmentResourceLocation(String appServiceEnvironmentResourceLocation);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify AppServiceEnvironmentResourceName.
         */
        interface WithAppServiceEnvironmentResourceName {
           /**
            * Specifies appServiceEnvironmentResourceName.
            * @param appServiceEnvironmentResourceName Name of the App Service Environment
            * @return the next definition stage
*/
            WithVirtualNetwork withAppServiceEnvironmentResourceName(String appServiceEnvironmentResourceName);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify VirtualNetwork.
         */
        interface WithVirtualNetwork {
           /**
            * Specifies virtualNetwork.
            * @param virtualNetwork Description of the Virtual Network
            * @return the next definition stage
*/
            WithWorkerPools withVirtualNetwork(VirtualNetworkProfile virtualNetwork);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify WorkerPools.
         */
        interface WithWorkerPools {
           /**
            * Specifies workerPools.
            * @param workerPools Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool
            * @return the next definition stage
*/
            WithCreate withWorkerPools(List<WorkerPool> workerPools);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify ApiManagementAccountId.
         */
        interface WithApiManagementAccountId {
            /**
             * Specifies apiManagementAccountId.
             * @param apiManagementAccountId API Management Account associated with the App Service Environment
             * @return the next definition stage
             */
            WithCreate withApiManagementAccountId(String apiManagementAccountId);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify ClusterSettings.
         */
        interface WithClusterSettings {
            /**
             * Specifies clusterSettings.
             * @param clusterSettings Custom settings for changing the behavior of the App Service Environment
             * @return the next definition stage
             */
            WithCreate withClusterSettings(List<NameValuePair> clusterSettings);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify DnsSuffix.
         */
        interface WithDnsSuffix {
            /**
             * Specifies dnsSuffix.
             * @param dnsSuffix DNS suffix of the App Service Environment
             * @return the next definition stage
             */
            WithCreate withDnsSuffix(String dnsSuffix);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify DynamicCacheEnabled.
         */
        interface WithDynamicCacheEnabled {
            /**
             * Specifies dynamicCacheEnabled.
             * @param dynamicCacheEnabled True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
 (most likely because NSG blocked the incoming traffic)
             * @return the next definition stage
             */
            WithCreate withDynamicCacheEnabled(Boolean dynamicCacheEnabled);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify FrontEndScaleFactor.
         */
        interface WithFrontEndScaleFactor {
            /**
             * Specifies frontEndScaleFactor.
             * @param frontEndScaleFactor Scale factor for front-ends
             * @return the next definition stage
             */
            WithCreate withFrontEndScaleFactor(Integer frontEndScaleFactor);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify HasLinuxWorkers.
         */
        interface WithHasLinuxWorkers {
            /**
             * Specifies hasLinuxWorkers.
             * @param hasLinuxWorkers Flag that displays whether an ASE has linux workers or not
             * @return the next definition stage
             */
            WithCreate withHasLinuxWorkers(Boolean hasLinuxWorkers);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify InternalLoadBalancingMode.
         */
        interface WithInternalLoadBalancingMode {
            /**
             * Specifies internalLoadBalancingMode.
             * @param internalLoadBalancingMode Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values include: 'None', 'Web', 'Publishing'
             * @return the next definition stage
             */
            WithCreate withInternalLoadBalancingMode(InternalLoadBalancingMode internalLoadBalancingMode);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify IpsslAddressCount.
         */
        interface WithIpsslAddressCount {
            /**
             * Specifies ipsslAddressCount.
             * @param ipsslAddressCount Number of IP SSL addresses reserved for the App Service Environment
             * @return the next definition stage
             */
            WithCreate withIpsslAddressCount(Integer ipsslAddressCount);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify Kind.
         */
        interface WithKind {
            /**
             * Specifies kind.
             * @param kind Kind of resource
             * @return the next definition stage
             */
            WithCreate withKind(String kind);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify MultiRoleCount.
         */
        interface WithMultiRoleCount {
            /**
             * Specifies multiRoleCount.
             * @param multiRoleCount Number of front-end instances
             * @return the next definition stage
             */
            WithCreate withMultiRoleCount(Integer multiRoleCount);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify MultiSize.
         */
        interface WithMultiSize {
            /**
             * Specifies multiSize.
             * @param multiSize Front-end VM size, e.g. "Medium", "Large"
             * @return the next definition stage
             */
            WithCreate withMultiSize(String multiSize);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify NetworkAccessControlList.
         */
        interface WithNetworkAccessControlList {
            /**
             * Specifies networkAccessControlList.
             * @param networkAccessControlList Access control list for controlling traffic to the App Service Environment
             * @return the next definition stage
             */
            WithCreate withNetworkAccessControlList(List<NetworkAccessControlEntry> networkAccessControlList);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify SslCertKeyVaultId.
         */
        interface WithSslCertKeyVaultId {
            /**
             * Specifies sslCertKeyVaultId.
             * @param sslCertKeyVaultId Key Vault ID for ILB App Service Environment default SSL certificate
             * @return the next definition stage
             */
            WithCreate withSslCertKeyVaultId(String sslCertKeyVaultId);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify SslCertKeyVaultSecretName.
         */
        interface WithSslCertKeyVaultSecretName {
            /**
             * Specifies sslCertKeyVaultSecretName.
             * @param sslCertKeyVaultSecretName Key Vault Secret Name for ILB App Service Environment default SSL certificate
             * @return the next definition stage
             */
            WithCreate withSslCertKeyVaultSecretName(String sslCertKeyVaultSecretName);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify Suspended.
         */
        interface WithSuspended {
            /**
             * Specifies suspended.
             * @param suspended &lt;code&gt;true&lt;/code&gt; if the App Service Environment is suspended; otherwise, &lt;code&gt;false&lt;/code&gt;. The environment can be suspended, e.g. when the management endpoint is no longer available
  (most likely because NSG blocked the incoming traffic)
             * @return the next definition stage
             */
            WithCreate withSuspended(Boolean suspended);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify UserWhitelistedIpRanges.
         */
        interface WithUserWhitelistedIpRanges {
            /**
             * Specifies userWhitelistedIpRanges.
             * @param userWhitelistedIpRanges User added ip ranges to whitelist on ASE db
             * @return the next definition stage
             */
            WithCreate withUserWhitelistedIpRanges(List<String> userWhitelistedIpRanges);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify VnetName.
         */
        interface WithVnetName {
            /**
             * Specifies vnetName.
             * @param vnetName Name of the Virtual Network for the App Service Environment
             * @return the next definition stage
             */
            WithCreate withVnetName(String vnetName);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify VnetResourceGroupName.
         */
        interface WithVnetResourceGroupName {
            /**
             * Specifies vnetResourceGroupName.
             * @param vnetResourceGroupName Resource group of the Virtual Network
             * @return the next definition stage
             */
            WithCreate withVnetResourceGroupName(String vnetResourceGroupName);
        }

        /**
         * The stage of the appserviceenvironmentresource definition allowing to specify VnetSubnetName.
         */
        interface WithVnetSubnetName {
            /**
             * Specifies vnetSubnetName.
             * @param vnetSubnetName Subnet of the Virtual Network
             * @return the next definition stage
             */
            WithCreate withVnetSubnetName(String vnetSubnetName);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<AppServiceEnvironmentResource>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithApiManagementAccountId, DefinitionStages.WithClusterSettings, DefinitionStages.WithDnsSuffix, DefinitionStages.WithDynamicCacheEnabled, DefinitionStages.WithFrontEndScaleFactor, DefinitionStages.WithHasLinuxWorkers, DefinitionStages.WithInternalLoadBalancingMode, DefinitionStages.WithIpsslAddressCount, DefinitionStages.WithKind, DefinitionStages.WithMultiRoleCount, DefinitionStages.WithMultiSize, DefinitionStages.WithNetworkAccessControlList, DefinitionStages.WithSslCertKeyVaultId, DefinitionStages.WithSslCertKeyVaultSecretName, DefinitionStages.WithSuspended, DefinitionStages.WithUserWhitelistedIpRanges, DefinitionStages.WithVnetName, DefinitionStages.WithVnetResourceGroupName, DefinitionStages.WithVnetSubnetName {
        }
    }
    /**
     * The template for a AppServiceEnvironmentResource update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<AppServiceEnvironmentResource>, Resource.UpdateWithTags<Update>, UpdateStages.WithApiManagementAccountId, UpdateStages.WithClusterSettings, UpdateStages.WithDnsSuffix, UpdateStages.WithDynamicCacheEnabled, UpdateStages.WithFrontEndScaleFactor, UpdateStages.WithHasLinuxWorkers, UpdateStages.WithInternalLoadBalancingMode, UpdateStages.WithIpsslAddressCount, UpdateStages.WithKind, UpdateStages.WithMultiRoleCount, UpdateStages.WithMultiSize, UpdateStages.WithNetworkAccessControlList, UpdateStages.WithSslCertKeyVaultId, UpdateStages.WithSslCertKeyVaultSecretName, UpdateStages.WithSuspended, UpdateStages.WithUserWhitelistedIpRanges, UpdateStages.WithVnetName, UpdateStages.WithVnetResourceGroupName, UpdateStages.WithVnetSubnetName {
    }

    /**
     * Grouping of AppServiceEnvironmentResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the appserviceenvironmentresource update allowing to specify ApiManagementAccountId.
         */
        interface WithApiManagementAccountId {
            /**
             * Specifies apiManagementAccountId.
             * @param apiManagementAccountId API Management Account associated with the App Service Environment
             * @return the next update stage
             */
            Update withApiManagementAccountId(String apiManagementAccountId);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify ClusterSettings.
         */
        interface WithClusterSettings {
            /**
             * Specifies clusterSettings.
             * @param clusterSettings Custom settings for changing the behavior of the App Service Environment
             * @return the next update stage
             */
            Update withClusterSettings(List<NameValuePair> clusterSettings);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify DnsSuffix.
         */
        interface WithDnsSuffix {
            /**
             * Specifies dnsSuffix.
             * @param dnsSuffix DNS suffix of the App Service Environment
             * @return the next update stage
             */
            Update withDnsSuffix(String dnsSuffix);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify DynamicCacheEnabled.
         */
        interface WithDynamicCacheEnabled {
            /**
             * Specifies dynamicCacheEnabled.
             * @param dynamicCacheEnabled True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
 (most likely because NSG blocked the incoming traffic)
             * @return the next update stage
             */
            Update withDynamicCacheEnabled(Boolean dynamicCacheEnabled);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify FrontEndScaleFactor.
         */
        interface WithFrontEndScaleFactor {
            /**
             * Specifies frontEndScaleFactor.
             * @param frontEndScaleFactor Scale factor for front-ends
             * @return the next update stage
             */
            Update withFrontEndScaleFactor(Integer frontEndScaleFactor);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify HasLinuxWorkers.
         */
        interface WithHasLinuxWorkers {
            /**
             * Specifies hasLinuxWorkers.
             * @param hasLinuxWorkers Flag that displays whether an ASE has linux workers or not
             * @return the next update stage
             */
            Update withHasLinuxWorkers(Boolean hasLinuxWorkers);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify InternalLoadBalancingMode.
         */
        interface WithInternalLoadBalancingMode {
            /**
             * Specifies internalLoadBalancingMode.
             * @param internalLoadBalancingMode Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values include: 'None', 'Web', 'Publishing'
             * @return the next update stage
             */
            Update withInternalLoadBalancingMode(InternalLoadBalancingMode internalLoadBalancingMode);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify IpsslAddressCount.
         */
        interface WithIpsslAddressCount {
            /**
             * Specifies ipsslAddressCount.
             * @param ipsslAddressCount Number of IP SSL addresses reserved for the App Service Environment
             * @return the next update stage
             */
            Update withIpsslAddressCount(Integer ipsslAddressCount);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify Kind.
         */
        interface WithKind {
            /**
             * Specifies kind.
             * @param kind Kind of resource
             * @return the next update stage
             */
            Update withKind(String kind);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify MultiRoleCount.
         */
        interface WithMultiRoleCount {
            /**
             * Specifies multiRoleCount.
             * @param multiRoleCount Number of front-end instances
             * @return the next update stage
             */
            Update withMultiRoleCount(Integer multiRoleCount);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify MultiSize.
         */
        interface WithMultiSize {
            /**
             * Specifies multiSize.
             * @param multiSize Front-end VM size, e.g. "Medium", "Large"
             * @return the next update stage
             */
            Update withMultiSize(String multiSize);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify NetworkAccessControlList.
         */
        interface WithNetworkAccessControlList {
            /**
             * Specifies networkAccessControlList.
             * @param networkAccessControlList Access control list for controlling traffic to the App Service Environment
             * @return the next update stage
             */
            Update withNetworkAccessControlList(List<NetworkAccessControlEntry> networkAccessControlList);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify SslCertKeyVaultId.
         */
        interface WithSslCertKeyVaultId {
            /**
             * Specifies sslCertKeyVaultId.
             * @param sslCertKeyVaultId Key Vault ID for ILB App Service Environment default SSL certificate
             * @return the next update stage
             */
            Update withSslCertKeyVaultId(String sslCertKeyVaultId);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify SslCertKeyVaultSecretName.
         */
        interface WithSslCertKeyVaultSecretName {
            /**
             * Specifies sslCertKeyVaultSecretName.
             * @param sslCertKeyVaultSecretName Key Vault Secret Name for ILB App Service Environment default SSL certificate
             * @return the next update stage
             */
            Update withSslCertKeyVaultSecretName(String sslCertKeyVaultSecretName);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify Suspended.
         */
        interface WithSuspended {
            /**
             * Specifies suspended.
             * @param suspended &lt;code&gt;true&lt;/code&gt; if the App Service Environment is suspended; otherwise, &lt;code&gt;false&lt;/code&gt;. The environment can be suspended, e.g. when the management endpoint is no longer available
  (most likely because NSG blocked the incoming traffic)
             * @return the next update stage
             */
            Update withSuspended(Boolean suspended);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify UserWhitelistedIpRanges.
         */
        interface WithUserWhitelistedIpRanges {
            /**
             * Specifies userWhitelistedIpRanges.
             * @param userWhitelistedIpRanges User added ip ranges to whitelist on ASE db
             * @return the next update stage
             */
            Update withUserWhitelistedIpRanges(List<String> userWhitelistedIpRanges);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify VnetName.
         */
        interface WithVnetName {
            /**
             * Specifies vnetName.
             * @param vnetName Name of the Virtual Network for the App Service Environment
             * @return the next update stage
             */
            Update withVnetName(String vnetName);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify VnetResourceGroupName.
         */
        interface WithVnetResourceGroupName {
            /**
             * Specifies vnetResourceGroupName.
             * @param vnetResourceGroupName Resource group of the Virtual Network
             * @return the next update stage
             */
            Update withVnetResourceGroupName(String vnetResourceGroupName);
        }

        /**
         * The stage of the appserviceenvironmentresource update allowing to specify VnetSubnetName.
         */
        interface WithVnetSubnetName {
            /**
             * Specifies vnetSubnetName.
             * @param vnetSubnetName Subnet of the Virtual Network
             * @return the next update stage
             */
            Update withVnetSubnetName(String vnetSubnetName);
        }

    }
}
