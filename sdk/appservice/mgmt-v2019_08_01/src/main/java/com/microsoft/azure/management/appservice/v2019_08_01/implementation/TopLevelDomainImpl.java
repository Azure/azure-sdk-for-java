/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.appservice.v2019_08_01.implementation;

import com.microsoft.azure.management.appservice.v2019_08_01.TopLevelDomain;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;

class TopLevelDomainImpl extends IndexableRefreshableWrapperImpl<TopLevelDomain, TopLevelDomainInner> implements TopLevelDomain {
    private String name;
    private final AppServiceManager manager;

    TopLevelDomainImpl(TopLevelDomainInner inner,  AppServiceManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.name = IdParsingUtils.getValueFromIdByName(inner.id(), "topLevelDomains");
    }

    @Override
    public AppServiceManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<TopLevelDomainInner> getInnerAsync() {
        TopLevelDomainsInner client = this.manager().inner().topLevelDomains();
        return client.getAsync(this.name);
    }



    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String kind() {
        return this.inner().kind();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Boolean privacy() {
        return this.inner().privacy();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
