/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.appservice.v2019_08_01.implementation;

import com.microsoft.azure.management.appservice.v2019_08_01.TriggeredWebJob;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import com.microsoft.azure.management.appservice.v2019_08_01.TriggeredJobRun;
import java.util.Map;
import com.microsoft.azure.management.appservice.v2019_08_01.WebJobType;

class TriggeredWebJobImpl extends IndexableRefreshableWrapperImpl<TriggeredWebJob, TriggeredWebJobInner> implements TriggeredWebJob {
    private final AppServiceManager manager;
    private String resourceGroupName;
    private String name;
    private String webJobName;
    private String slot;

    TriggeredWebJobImpl(TriggeredWebJobInner inner,  AppServiceManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.name = IdParsingUtils.getValueFromIdByName(inner.id(), "sites");
        this.webJobName = IdParsingUtils.getValueFromIdByName(inner.id(), "triggeredwebjobs");
        this.slot = IdParsingUtils.getValueFromIdByName(inner.id(), "slots");
    }

    @Override
    public AppServiceManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<TriggeredWebJobInner> getInnerAsync() {
        WebAppsInner client = this.manager().inner().webApps();
        return client.getTriggeredWebJobSlotAsync(this.resourceGroupName, this.name, this.webJobName, this.slot);
    }



    @Override
    public String error() {
        return this.inner().error();
    }

    @Override
    public String extraInfoUrl() {
        return this.inner().extraInfoUrl();
    }

    @Override
    public String historyUrl() {
        return this.inner().historyUrl();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String kind() {
        return this.inner().kind();
    }

    @Override
    public TriggeredJobRun latestRun() {
        return this.inner().latestRun();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String runCommand() {
        return this.inner().runCommand();
    }

    @Override
    public String schedulerLogsUrl() {
        return this.inner().schedulerLogsUrl();
    }

    @Override
    public Map<String, Object> settings() {
        return this.inner().settings();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public String url() {
        return this.inner().url();
    }

    @Override
    public Boolean usingSdk() {
        return this.inner().usingSdk();
    }

    @Override
    public WebJobType webJobType() {
        return this.inner().webJobType();
    }

}
