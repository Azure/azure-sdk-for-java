// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.DatabaseConnection;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StaticSitesCreateOrUpdateBuildDatabaseConnectionWithResponseMockTests {
    @Test
    public void testCreateOrUpdateBuildDatabaseConnectionWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"resourceId\":\"apghloemqapvn\",\"connectionIdentity\":\"zqk\",\"connectionString\":\"nxuezwrbq\",\"region\":\"dtvpg\",\"configurationFiles\":[{\"fileName\":\"tgkrivc\",\"contents\":\"ejplphkiyiq\",\"type\":\"iodvz\"},{\"fileName\":\"zslv\",\"contents\":\"popubbwpsncxbkw\",\"type\":\"jqakacbc\"}]},\"kind\":\"snnvlmmgfgt\",\"id\":\"qmty\",\"name\":\"qut\",\"type\":\"jkbisjurilqc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DatabaseConnection response = manager.staticSites()
            .defineBuildDatabaseConnection("jqwlvsefvkxxd")
            .withExistingBuild("ablmpntjlz", "ymcgtbpbf", "gf")
            .withKind("ijxml")
            .withResourceId("bnqmhrw")
            .withConnectionIdentity("exwgrflqb")
            .withConnectionString("xudsmdg")
            .withRegion("qrkstj")
            .create();

        Assertions.assertEquals("snnvlmmgfgt", response.kind());
        Assertions.assertEquals("apghloemqapvn", response.resourceId());
        Assertions.assertEquals("zqk", response.connectionIdentity());
        Assertions.assertEquals("nxuezwrbq", response.connectionString());
        Assertions.assertEquals("dtvpg", response.region());
    }
}
