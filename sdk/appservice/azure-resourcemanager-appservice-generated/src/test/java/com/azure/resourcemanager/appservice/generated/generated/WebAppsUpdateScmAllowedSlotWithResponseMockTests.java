// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.CsmPublishingCredentialsPoliciesEntityInner;
import com.azure.resourcemanager.appservice.generated.models.CsmPublishingCredentialsPoliciesEntity;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WebAppsUpdateScmAllowedSlotWithResponseMockTests {
    @Test
    public void testUpdateScmAllowedSlotWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"allow\":false},\"kind\":\"hpntewv\",\"id\":\"vsidmcoxobrvzder\",\"name\":\"nnfi\",\"type\":\"aqbv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CsmPublishingCredentialsPoliciesEntity response = manager.webApps()
            .updateScmAllowedSlotWithResponse("ye", "wfsivg", "elzuvd",
                new CsmPublishingCredentialsPoliciesEntityInner().withKind("sutes").withAllow(true),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("hpntewv", response.kind());
        Assertions.assertEquals(false, response.allow());
    }
}
