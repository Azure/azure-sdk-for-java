// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.StaticSiteZipDeploymentArmResource;
import org.junit.jupiter.api.Assertions;

public final class StaticSiteZipDeploymentArmResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StaticSiteZipDeploymentArmResource model = BinaryData.fromString(
            "{\"properties\":{\"appZipUrl\":\"modxwuuytxnxr\",\"apiZipUrl\":\"rtzea\",\"deploymentTitle\":\"vf\",\"provider\":\"hbjhmvpjxsd\",\"functionLanguage\":\"eignybffqc\"},\"kind\":\"ynepkt\",\"id\":\"mwg\",\"name\":\"conyse\",\"type\":\"jijfhpxni\"}")
            .toObject(StaticSiteZipDeploymentArmResource.class);
        Assertions.assertEquals("ynepkt", model.kind());
        Assertions.assertEquals("modxwuuytxnxr", model.appZipUrl());
        Assertions.assertEquals("rtzea", model.apiZipUrl());
        Assertions.assertEquals("vf", model.deploymentTitle());
        Assertions.assertEquals("hbjhmvpjxsd", model.provider());
        Assertions.assertEquals("eignybffqc", model.functionLanguage());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StaticSiteZipDeploymentArmResource model = new StaticSiteZipDeploymentArmResource().withKind("ynepkt")
            .withAppZipUrl("modxwuuytxnxr")
            .withApiZipUrl("rtzea")
            .withDeploymentTitle("vf")
            .withProvider("hbjhmvpjxsd")
            .withFunctionLanguage("eignybffqc");
        model = BinaryData.fromObject(model).toObject(StaticSiteZipDeploymentArmResource.class);
        Assertions.assertEquals("ynepkt", model.kind());
        Assertions.assertEquals("modxwuuytxnxr", model.appZipUrl());
        Assertions.assertEquals("rtzea", model.apiZipUrl());
        Assertions.assertEquals("vf", model.deploymentTitle());
        Assertions.assertEquals("hbjhmvpjxsd", model.provider());
        Assertions.assertEquals("eignybffqc", model.functionLanguage());
    }
}
