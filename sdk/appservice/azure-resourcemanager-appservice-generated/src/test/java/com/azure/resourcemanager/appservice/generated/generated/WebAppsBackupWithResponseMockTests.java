// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.BackupRequestInner;
import com.azure.resourcemanager.appservice.generated.models.BackupItem;
import com.azure.resourcemanager.appservice.generated.models.BackupSchedule;
import com.azure.resourcemanager.appservice.generated.models.DatabaseBackupSetting;
import com.azure.resourcemanager.appservice.generated.models.DatabaseType;
import com.azure.resourcemanager.appservice.generated.models.FrequencyUnit;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WebAppsBackupWithResponseMockTests {
    @Test
    public void testBackupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"id\":958846757,\"storageAccountUrl\":\"wfeeatvnmm\",\"blobName\":\"owfqr\",\"name\":\"ik\",\"status\":\"Skipped\",\"sizeInBytes\":2750791146687409338,\"created\":\"2021-10-22T11:45:47Z\",\"log\":\"waz\",\"databases\":[{\"databaseType\":\"SqlAzure\",\"name\":\"sm\",\"connectionStringName\":\"yo\",\"connectionString\":\"avfsehbxbqionnq\"},{\"databaseType\":\"SqlAzure\",\"name\":\"fbiboyex\",\"connectionStringName\":\"r\",\"connectionString\":\"dteyvpv\"},{\"databaseType\":\"LocalMySql\",\"name\":\"jg\",\"connectionStringName\":\"iasfbpcmvxxxhbry\",\"connectionString\":\"s\"}],\"scheduled\":true,\"lastRestoreTimeStamp\":\"2021-11-04T22:48:25Z\",\"finishedTimeStamp\":\"2021-10-15T04:07:28Z\",\"correlationId\":\"wbykrn\",\"websiteSizeInBytes\":6542150184846630087},\"kind\":\"zwqgmf\",\"id\":\"ln\",\"name\":\"yed\",\"type\":\"yfncwiyfzu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        BackupItem response = manager.webApps()
            .backupWithResponse("spliwgkoz", "psf",
                new BackupRequestInner().withKind("gfgchlcbtx")
                    .withBackupName("pyuwrgg")
                    .withEnabled(true)
                    .withStorageAccountUrl("llsungzvytbq")
                    .withBackupSchedule(new BackupSchedule().withFrequencyInterval(594477781)
                        .withFrequencyUnit(FrequencyUnit.HOUR)
                        .withKeepAtLeastOneBackup(true)
                        .withRetentionPeriodInDays(564213224)
                        .withStartTime(OffsetDateTime.parse("2021-11-02T13:57:26Z")))
                    .withDatabases(Arrays.asList(
                        new DatabaseBackupSetting().withDatabaseType(DatabaseType.POSTGRE_SQL)
                            .withName("ugjea")
                            .withConnectionStringName("g")
                            .withConnectionString("f"),
                        new DatabaseBackupSetting().withDatabaseType(DatabaseType.LOCAL_MY_SQL)
                            .withName("q")
                            .withConnectionStringName("pwyyeupkpyzaenar")
                            .withConnectionString("rlqiykh"))),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("zwqgmf", response.kind());
    }
}
