// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.AppServicePlanPatchResource;
import com.azure.resourcemanager.appservice.generated.models.HostingEnvironmentProfile;
import com.azure.resourcemanager.appservice.generated.models.KubeEnvironmentProfile;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class AppServicePlanPatchResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AppServicePlanPatchResource model = BinaryData.fromString(
            "{\"properties\":{\"workerTierName\":\"ueayfbpcmsplb\",\"status\":\"Creating\",\"subscription\":\"eqthwmg\",\"hostingEnvironmentProfile\":{\"id\":\"scbbxig\",\"name\":\"xiidloped\",\"type\":\"dpyqyybxubmd\"},\"maximumNumberOfWorkers\":935812516,\"numberOfWorkers\":442484308,\"geoRegion\":\"wremjel\",\"perSiteScaling\":false,\"elasticScaleEnabled\":false,\"maximumElasticWorkerCount\":538354089,\"numberOfSites\":280135126,\"isSpot\":true,\"spotExpirationTime\":\"2021-11-26T05:52:39Z\",\"freeOfferExpirationTime\":\"2021-04-23T10:22:37Z\",\"resourceGroup\":\"wzkjopwbeonrlkw\",\"reserved\":true,\"isXenon\":false,\"hyperV\":false,\"targetWorkerCount\":1893687260,\"targetWorkerSizeId\":1733477665,\"provisioningState\":\"InProgress\",\"kubeEnvironmentProfile\":{\"id\":\"oqfyiaseqch\",\"name\":\"ttzrazisgyki\",\"type\":\"mvanbwzo\"},\"zoneRedundant\":true},\"kind\":\"xxbsojklinhmd\",\"id\":\"tysprqsgnzxojpsl\",\"name\":\"vjgp\",\"type\":\"iufiqwo\"}")
            .toObject(AppServicePlanPatchResource.class);
        Assertions.assertEquals("xxbsojklinhmd", model.kind());
        Assertions.assertEquals("ueayfbpcmsplb", model.workerTierName());
        Assertions.assertEquals("scbbxig", model.hostingEnvironmentProfile().id());
        Assertions.assertEquals(false, model.perSiteScaling());
        Assertions.assertEquals(false, model.elasticScaleEnabled());
        Assertions.assertEquals(538354089, model.maximumElasticWorkerCount());
        Assertions.assertEquals(true, model.isSpot());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-26T05:52:39Z"), model.spotExpirationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-23T10:22:37Z"), model.freeOfferExpirationTime());
        Assertions.assertEquals(true, model.reserved());
        Assertions.assertEquals(false, model.isXenon());
        Assertions.assertEquals(false, model.hyperV());
        Assertions.assertEquals(1893687260, model.targetWorkerCount());
        Assertions.assertEquals(1733477665, model.targetWorkerSizeId());
        Assertions.assertEquals("oqfyiaseqch", model.kubeEnvironmentProfile().id());
        Assertions.assertEquals(true, model.zoneRedundant());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AppServicePlanPatchResource model = new AppServicePlanPatchResource().withKind("xxbsojklinhmd")
            .withWorkerTierName("ueayfbpcmsplb")
            .withHostingEnvironmentProfile(new HostingEnvironmentProfile().withId("scbbxig"))
            .withPerSiteScaling(false)
            .withElasticScaleEnabled(false)
            .withMaximumElasticWorkerCount(538354089)
            .withIsSpot(true)
            .withSpotExpirationTime(OffsetDateTime.parse("2021-11-26T05:52:39Z"))
            .withFreeOfferExpirationTime(OffsetDateTime.parse("2021-04-23T10:22:37Z"))
            .withReserved(true)
            .withIsXenon(false)
            .withHyperV(false)
            .withTargetWorkerCount(1893687260)
            .withTargetWorkerSizeId(1733477665)
            .withKubeEnvironmentProfile(new KubeEnvironmentProfile().withId("oqfyiaseqch"))
            .withZoneRedundant(true);
        model = BinaryData.fromObject(model).toObject(AppServicePlanPatchResource.class);
        Assertions.assertEquals("xxbsojklinhmd", model.kind());
        Assertions.assertEquals("ueayfbpcmsplb", model.workerTierName());
        Assertions.assertEquals("scbbxig", model.hostingEnvironmentProfile().id());
        Assertions.assertEquals(false, model.perSiteScaling());
        Assertions.assertEquals(false, model.elasticScaleEnabled());
        Assertions.assertEquals(538354089, model.maximumElasticWorkerCount());
        Assertions.assertEquals(true, model.isSpot());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-26T05:52:39Z"), model.spotExpirationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-23T10:22:37Z"), model.freeOfferExpirationTime());
        Assertions.assertEquals(true, model.reserved());
        Assertions.assertEquals(false, model.isXenon());
        Assertions.assertEquals(false, model.hyperV());
        Assertions.assertEquals(1893687260, model.targetWorkerCount());
        Assertions.assertEquals(1733477665, model.targetWorkerSizeId());
        Assertions.assertEquals("oqfyiaseqch", model.kubeEnvironmentProfile().id());
        Assertions.assertEquals(true, model.zoneRedundant());
    }
}
