// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.CapabilityInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.WorkerPoolResourceInner;
import com.azure.resourcemanager.appservice.generated.models.ComputeModeOptions;
import com.azure.resourcemanager.appservice.generated.models.SkuCapacity;
import com.azure.resourcemanager.appservice.generated.models.SkuDescription;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkerPoolResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkerPoolResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"workerSizeId\":755872582,\"computeMode\":\"Dedicated\",\"workerSize\":\"qucwyhahnom\",\"workerCount\":673323258,\"instanceNames\":[\"uh\",\"svfuurutlwexxwl\",\"lniexz\"]},\"sku\":{\"name\":\"pgepqtybbwwpgda\",\"tier\":\"hzyvlixqnrkcx\",\"size\":\"ibn\",\"family\":\"ysux\",\"capacity\":1250131057,\"skuCapacity\":{\"minimum\":1550616862,\"maximum\":790882759,\"elasticMaximum\":1670220024,\"default\":2016652942,\"scaleType\":\"ttexoqqpwcyyufmh\"},\"locations\":[\"cuwmqsp\"],\"capabilities\":[{\"name\":\"zhlctddunqndyfpc\",\"value\":\"qbnj\",\"reason\":\"cgegydcwbo\"}]},\"kind\":\"umvq\",\"id\":\"olihrra\",\"name\":\"ouau\",\"type\":\"rjtloq\"}")
            .toObject(WorkerPoolResourceInner.class);
        Assertions.assertEquals("umvq", model.kind());
        Assertions.assertEquals("pgepqtybbwwpgda", model.sku().name());
        Assertions.assertEquals("hzyvlixqnrkcx", model.sku().tier());
        Assertions.assertEquals("ibn", model.sku().size());
        Assertions.assertEquals("ysux", model.sku().family());
        Assertions.assertEquals(1250131057, model.sku().capacity());
        Assertions.assertEquals(1550616862, model.sku().skuCapacity().minimum());
        Assertions.assertEquals(790882759, model.sku().skuCapacity().maximum());
        Assertions.assertEquals(1670220024, model.sku().skuCapacity().elasticMaximum());
        Assertions.assertEquals(2016652942, model.sku().skuCapacity().defaultProperty());
        Assertions.assertEquals("ttexoqqpwcyyufmh", model.sku().skuCapacity().scaleType());
        Assertions.assertEquals("cuwmqsp", model.sku().locations().get(0));
        Assertions.assertEquals("zhlctddunqndyfpc", model.sku().capabilities().get(0).name());
        Assertions.assertEquals("qbnj", model.sku().capabilities().get(0).value());
        Assertions.assertEquals("cgegydcwbo", model.sku().capabilities().get(0).reason());
        Assertions.assertEquals(755872582, model.workerSizeId());
        Assertions.assertEquals(ComputeModeOptions.DEDICATED, model.computeMode());
        Assertions.assertEquals("qucwyhahnom", model.workerSize());
        Assertions.assertEquals(673323258, model.workerCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkerPoolResourceInner model = new WorkerPoolResourceInner().withKind("umvq")
            .withSku(new SkuDescription().withName("pgepqtybbwwpgda")
                .withTier("hzyvlixqnrkcx")
                .withSize("ibn")
                .withFamily("ysux")
                .withCapacity(1250131057)
                .withSkuCapacity(new SkuCapacity().withMinimum(1550616862)
                    .withMaximum(790882759)
                    .withElasticMaximum(1670220024)
                    .withDefaultProperty(2016652942)
                    .withScaleType("ttexoqqpwcyyufmh"))
                .withLocations(Arrays.asList("cuwmqsp"))
                .withCapabilities(Arrays.asList(
                    new CapabilityInner().withName("zhlctddunqndyfpc").withValue("qbnj").withReason("cgegydcwbo"))))
            .withWorkerSizeId(755872582)
            .withComputeMode(ComputeModeOptions.DEDICATED)
            .withWorkerSize("qucwyhahnom")
            .withWorkerCount(673323258);
        model = BinaryData.fromObject(model).toObject(WorkerPoolResourceInner.class);
        Assertions.assertEquals("umvq", model.kind());
        Assertions.assertEquals("pgepqtybbwwpgda", model.sku().name());
        Assertions.assertEquals("hzyvlixqnrkcx", model.sku().tier());
        Assertions.assertEquals("ibn", model.sku().size());
        Assertions.assertEquals("ysux", model.sku().family());
        Assertions.assertEquals(1250131057, model.sku().capacity());
        Assertions.assertEquals(1550616862, model.sku().skuCapacity().minimum());
        Assertions.assertEquals(790882759, model.sku().skuCapacity().maximum());
        Assertions.assertEquals(1670220024, model.sku().skuCapacity().elasticMaximum());
        Assertions.assertEquals(2016652942, model.sku().skuCapacity().defaultProperty());
        Assertions.assertEquals("ttexoqqpwcyyufmh", model.sku().skuCapacity().scaleType());
        Assertions.assertEquals("cuwmqsp", model.sku().locations().get(0));
        Assertions.assertEquals("zhlctddunqndyfpc", model.sku().capabilities().get(0).name());
        Assertions.assertEquals("qbnj", model.sku().capabilities().get(0).value());
        Assertions.assertEquals("cgegydcwbo", model.sku().capabilities().get(0).reason());
        Assertions.assertEquals(755872582, model.workerSizeId());
        Assertions.assertEquals(ComputeModeOptions.DEDICATED, model.computeMode());
        Assertions.assertEquals("qucwyhahnom", model.workerSize());
        Assertions.assertEquals(673323258, model.workerCount());
    }
}
