// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.ProcessThreadInfoInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ProcessThreadInfoInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProcessThreadInfoInner model = BinaryData.fromString(
            "{\"properties\":{\"identifier\":732475573,\"href\":\"qpyfjxkbywsbuq\",\"process\":\"xbdj\",\"start_address\":\"n\",\"current_priority\":1438508928,\"priority_level\":\"nowxhyvdbrdvsv\",\"base_priority\":1460419078,\"start_time\":\"2021-07-27T20:22:25Z\",\"total_processor_time\":\"vlkusgi\",\"user_processor_time\":\"h\",\"state\":\"thypepxshmrd\",\"wait_reason\":\"csdvkymktc\"},\"kind\":\"ivoxgzegnglafnf\",\"id\":\"a\",\"name\":\"aghddcozwxuxorru\",\"type\":\"uhvemgxlss\"}")
            .toObject(ProcessThreadInfoInner.class);
        Assertions.assertEquals("ivoxgzegnglafnf", model.kind());
        Assertions.assertEquals("qpyfjxkbywsbuq", model.href());
        Assertions.assertEquals("xbdj", model.process());
        Assertions.assertEquals("n", model.startAddress());
        Assertions.assertEquals(1438508928, model.currentPriority());
        Assertions.assertEquals("nowxhyvdbrdvsv", model.priorityLevel());
        Assertions.assertEquals(1460419078, model.basePriority());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-27T20:22:25Z"), model.startTime());
        Assertions.assertEquals("vlkusgi", model.totalProcessorTime());
        Assertions.assertEquals("h", model.userProcessorTime());
        Assertions.assertEquals("thypepxshmrd", model.state());
        Assertions.assertEquals("csdvkymktc", model.waitReason());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProcessThreadInfoInner model = new ProcessThreadInfoInner().withKind("ivoxgzegnglafnf")
            .withHref("qpyfjxkbywsbuq")
            .withProcess("xbdj")
            .withStartAddress("n")
            .withCurrentPriority(1438508928)
            .withPriorityLevel("nowxhyvdbrdvsv")
            .withBasePriority(1460419078)
            .withStartTime(OffsetDateTime.parse("2021-07-27T20:22:25Z"))
            .withTotalProcessorTime("vlkusgi")
            .withUserProcessorTime("h")
            .withState("thypepxshmrd")
            .withWaitReason("csdvkymktc");
        model = BinaryData.fromObject(model).toObject(ProcessThreadInfoInner.class);
        Assertions.assertEquals("ivoxgzegnglafnf", model.kind());
        Assertions.assertEquals("qpyfjxkbywsbuq", model.href());
        Assertions.assertEquals("xbdj", model.process());
        Assertions.assertEquals("n", model.startAddress());
        Assertions.assertEquals(1438508928, model.currentPriority());
        Assertions.assertEquals("nowxhyvdbrdvsv", model.priorityLevel());
        Assertions.assertEquals(1460419078, model.basePriority());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-27T20:22:25Z"), model.startTime());
        Assertions.assertEquals("vlkusgi", model.totalProcessorTime());
        Assertions.assertEquals("h", model.userProcessorTime());
        Assertions.assertEquals("thypepxshmrd", model.state());
        Assertions.assertEquals("csdvkymktc", model.waitReason());
    }
}
