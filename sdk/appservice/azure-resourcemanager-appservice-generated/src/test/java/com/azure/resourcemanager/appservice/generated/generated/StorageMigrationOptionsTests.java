// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.StorageMigrationOptions;
import org.junit.jupiter.api.Assertions;

public final class StorageMigrationOptionsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StorageMigrationOptions model = BinaryData.fromString(
            "{\"properties\":{\"azurefilesConnectionString\":\"zxxzndwtomin\",\"azurefilesShare\":\"ufqqauyga\",\"switchSiteAfterMigration\":false,\"blockWriteAccessToSite\":true},\"kind\":\"v\",\"id\":\"wkqnatxvuzcc\",\"name\":\"lirybytcaqp\",\"type\":\"ohlcbnrv\"}")
            .toObject(StorageMigrationOptions.class);
        Assertions.assertEquals("v", model.kind());
        Assertions.assertEquals("zxxzndwtomin", model.azurefilesConnectionString());
        Assertions.assertEquals("ufqqauyga", model.azurefilesShare());
        Assertions.assertEquals(false, model.switchSiteAfterMigration());
        Assertions.assertEquals(true, model.blockWriteAccessToSite());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StorageMigrationOptions model = new StorageMigrationOptions().withKind("v")
            .withAzurefilesConnectionString("zxxzndwtomin")
            .withAzurefilesShare("ufqqauyga")
            .withSwitchSiteAfterMigration(false)
            .withBlockWriteAccessToSite(true);
        model = BinaryData.fromObject(model).toObject(StorageMigrationOptions.class);
        Assertions.assertEquals("v", model.kind());
        Assertions.assertEquals("zxxzndwtomin", model.azurefilesConnectionString());
        Assertions.assertEquals("ufqqauyga", model.azurefilesShare());
        Assertions.assertEquals(false, model.switchSiteAfterMigration());
        Assertions.assertEquals(true, model.blockWriteAccessToSite());
    }
}
