// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.ContainerCpuStatistics;
import com.azure.resourcemanager.appservice.generated.models.ContainerCpuUsage;
import com.azure.resourcemanager.appservice.generated.models.ContainerInfo;
import com.azure.resourcemanager.appservice.generated.models.ContainerMemoryStatistics;
import com.azure.resourcemanager.appservice.generated.models.ContainerNetworkInterfaceStatistics;
import com.azure.resourcemanager.appservice.generated.models.ContainerThrottlingData;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContainerInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContainerInfo model = BinaryData.fromString(
            "{\"currentTimeStamp\":\"2021-03-09T13:56:08Z\",\"previousTimeStamp\":\"2021-03-17T13:58:11Z\",\"currentCpuStats\":{\"cpuUsage\":{\"totalUsage\":8125738564691780265,\"perCpuUsage\":[964212662548125111],\"kernelModeUsage\":5614960417504194919,\"userModeUsage\":8476313511748514456},\"systemCpuUsage\":5772322432983038555,\"onlineCpuCount\":1313966667,\"throttlingData\":{\"periods\":235162347,\"throttledPeriods\":2060940219,\"throttledTime\":1290503765}},\"previousCpuStats\":{\"cpuUsage\":{\"totalUsage\":8069754109444397733,\"perCpuUsage\":[8543465270342549506,1371591425772604123,6501675378389099045],\"kernelModeUsage\":4826924092229639806,\"userModeUsage\":5821267721001699733},\"systemCpuUsage\":7083883902037380379,\"onlineCpuCount\":1538967498,\"throttlingData\":{\"periods\":1568435830,\"throttledPeriods\":616492757,\"throttledTime\":1266765248}},\"memoryStats\":{\"usage\":111472283777903759,\"maxUsage\":2198458194430308229,\"limit\":2532227421267062828},\"name\":\"sgqp\",\"id\":\"sdpfvlsqmmetwtl\",\"eth0\":{\"rxBytes\":8308518742671531249,\"rxPackets\":427736678868941472,\"rxErrors\":2774794692393759662,\"rxDropped\":555866140807312020,\"txBytes\":2195357701607163972,\"txPackets\":4171105444853463150,\"txErrors\":1309463812687963517,\"txDropped\":3261797516920720997}}")
            .toObject(ContainerInfo.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-09T13:56:08Z"), model.currentTimestamp());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-17T13:58:11Z"), model.previousTimestamp());
        Assertions.assertEquals(8125738564691780265L, model.currentCpuStats().cpuUsage().totalUsage());
        Assertions.assertEquals(964212662548125111L, model.currentCpuStats().cpuUsage().perCpuUsage().get(0));
        Assertions.assertEquals(5614960417504194919L, model.currentCpuStats().cpuUsage().kernelModeUsage());
        Assertions.assertEquals(8476313511748514456L, model.currentCpuStats().cpuUsage().userModeUsage());
        Assertions.assertEquals(5772322432983038555L, model.currentCpuStats().systemCpuUsage());
        Assertions.assertEquals(1313966667, model.currentCpuStats().onlineCpuCount());
        Assertions.assertEquals(235162347, model.currentCpuStats().throttlingData().periods());
        Assertions.assertEquals(2060940219, model.currentCpuStats().throttlingData().throttledPeriods());
        Assertions.assertEquals(1290503765, model.currentCpuStats().throttlingData().throttledTime());
        Assertions.assertEquals(8069754109444397733L, model.previousCpuStats().cpuUsage().totalUsage());
        Assertions.assertEquals(8543465270342549506L, model.previousCpuStats().cpuUsage().perCpuUsage().get(0));
        Assertions.assertEquals(4826924092229639806L, model.previousCpuStats().cpuUsage().kernelModeUsage());
        Assertions.assertEquals(5821267721001699733L, model.previousCpuStats().cpuUsage().userModeUsage());
        Assertions.assertEquals(7083883902037380379L, model.previousCpuStats().systemCpuUsage());
        Assertions.assertEquals(1538967498, model.previousCpuStats().onlineCpuCount());
        Assertions.assertEquals(1568435830, model.previousCpuStats().throttlingData().periods());
        Assertions.assertEquals(616492757, model.previousCpuStats().throttlingData().throttledPeriods());
        Assertions.assertEquals(1266765248, model.previousCpuStats().throttlingData().throttledTime());
        Assertions.assertEquals(111472283777903759L, model.memoryStats().usage());
        Assertions.assertEquals(2198458194430308229L, model.memoryStats().maxUsage());
        Assertions.assertEquals(2532227421267062828L, model.memoryStats().limit());
        Assertions.assertEquals("sgqp", model.name());
        Assertions.assertEquals("sdpfvlsqmmetwtl", model.id());
        Assertions.assertEquals(8308518742671531249L, model.eth0().rxBytes());
        Assertions.assertEquals(427736678868941472L, model.eth0().rxPackets());
        Assertions.assertEquals(2774794692393759662L, model.eth0().rxErrors());
        Assertions.assertEquals(555866140807312020L, model.eth0().rxDropped());
        Assertions.assertEquals(2195357701607163972L, model.eth0().txBytes());
        Assertions.assertEquals(4171105444853463150L, model.eth0().txPackets());
        Assertions.assertEquals(1309463812687963517L, model.eth0().txErrors());
        Assertions.assertEquals(3261797516920720997L, model.eth0().txDropped());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContainerInfo model = new ContainerInfo().withCurrentTimestamp(OffsetDateTime.parse("2021-03-09T13:56:08Z"))
            .withPreviousTimestamp(OffsetDateTime.parse("2021-03-17T13:58:11Z"))
            .withCurrentCpuStats(new ContainerCpuStatistics()
                .withCpuUsage(new ContainerCpuUsage().withTotalUsage(8125738564691780265L)
                    .withPerCpuUsage(Arrays.asList(964212662548125111L))
                    .withKernelModeUsage(5614960417504194919L)
                    .withUserModeUsage(8476313511748514456L))
                .withSystemCpuUsage(5772322432983038555L)
                .withOnlineCpuCount(1313966667)
                .withThrottlingData(new ContainerThrottlingData().withPeriods(235162347)
                    .withThrottledPeriods(2060940219)
                    .withThrottledTime(1290503765)))
            .withPreviousCpuStats(
                new ContainerCpuStatistics()
                    .withCpuUsage(new ContainerCpuUsage().withTotalUsage(8069754109444397733L)
                        .withPerCpuUsage(
                            Arrays.asList(8543465270342549506L, 1371591425772604123L, 6501675378389099045L))
                        .withKernelModeUsage(4826924092229639806L)
                        .withUserModeUsage(5821267721001699733L))
                    .withSystemCpuUsage(7083883902037380379L)
                    .withOnlineCpuCount(1538967498)
                    .withThrottlingData(new ContainerThrottlingData().withPeriods(1568435830)
                        .withThrottledPeriods(616492757)
                        .withThrottledTime(1266765248)))
            .withMemoryStats(new ContainerMemoryStatistics().withUsage(111472283777903759L)
                .withMaxUsage(2198458194430308229L)
                .withLimit(2532227421267062828L))
            .withName("sgqp")
            .withId("sdpfvlsqmmetwtl")
            .withEth0(new ContainerNetworkInterfaceStatistics().withRxBytes(8308518742671531249L)
                .withRxPackets(427736678868941472L)
                .withRxErrors(2774794692393759662L)
                .withRxDropped(555866140807312020L)
                .withTxBytes(2195357701607163972L)
                .withTxPackets(4171105444853463150L)
                .withTxErrors(1309463812687963517L)
                .withTxDropped(3261797516920720997L));
        model = BinaryData.fromObject(model).toObject(ContainerInfo.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-09T13:56:08Z"), model.currentTimestamp());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-17T13:58:11Z"), model.previousTimestamp());
        Assertions.assertEquals(8125738564691780265L, model.currentCpuStats().cpuUsage().totalUsage());
        Assertions.assertEquals(964212662548125111L, model.currentCpuStats().cpuUsage().perCpuUsage().get(0));
        Assertions.assertEquals(5614960417504194919L, model.currentCpuStats().cpuUsage().kernelModeUsage());
        Assertions.assertEquals(8476313511748514456L, model.currentCpuStats().cpuUsage().userModeUsage());
        Assertions.assertEquals(5772322432983038555L, model.currentCpuStats().systemCpuUsage());
        Assertions.assertEquals(1313966667, model.currentCpuStats().onlineCpuCount());
        Assertions.assertEquals(235162347, model.currentCpuStats().throttlingData().periods());
        Assertions.assertEquals(2060940219, model.currentCpuStats().throttlingData().throttledPeriods());
        Assertions.assertEquals(1290503765, model.currentCpuStats().throttlingData().throttledTime());
        Assertions.assertEquals(8069754109444397733L, model.previousCpuStats().cpuUsage().totalUsage());
        Assertions.assertEquals(8543465270342549506L, model.previousCpuStats().cpuUsage().perCpuUsage().get(0));
        Assertions.assertEquals(4826924092229639806L, model.previousCpuStats().cpuUsage().kernelModeUsage());
        Assertions.assertEquals(5821267721001699733L, model.previousCpuStats().cpuUsage().userModeUsage());
        Assertions.assertEquals(7083883902037380379L, model.previousCpuStats().systemCpuUsage());
        Assertions.assertEquals(1538967498, model.previousCpuStats().onlineCpuCount());
        Assertions.assertEquals(1568435830, model.previousCpuStats().throttlingData().periods());
        Assertions.assertEquals(616492757, model.previousCpuStats().throttlingData().throttledPeriods());
        Assertions.assertEquals(1266765248, model.previousCpuStats().throttlingData().throttledTime());
        Assertions.assertEquals(111472283777903759L, model.memoryStats().usage());
        Assertions.assertEquals(2198458194430308229L, model.memoryStats().maxUsage());
        Assertions.assertEquals(2532227421267062828L, model.memoryStats().limit());
        Assertions.assertEquals("sgqp", model.name());
        Assertions.assertEquals("sdpfvlsqmmetwtl", model.id());
        Assertions.assertEquals(8308518742671531249L, model.eth0().rxBytes());
        Assertions.assertEquals(427736678868941472L, model.eth0().rxPackets());
        Assertions.assertEquals(2774794692393759662L, model.eth0().rxErrors());
        Assertions.assertEquals(555866140807312020L, model.eth0().rxDropped());
        Assertions.assertEquals(2195357701607163972L, model.eth0().txBytes());
        Assertions.assertEquals(4171105444853463150L, model.eth0().txPackets());
        Assertions.assertEquals(1309463812687963517L, model.eth0().txErrors());
        Assertions.assertEquals(3261797516920720997L, model.eth0().txDropped());
    }
}
