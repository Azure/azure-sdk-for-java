// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.BackupRequestInner;
import com.azure.resourcemanager.appservice.generated.models.BackupItem;
import com.azure.resourcemanager.appservice.generated.models.BackupSchedule;
import com.azure.resourcemanager.appservice.generated.models.DatabaseBackupSetting;
import com.azure.resourcemanager.appservice.generated.models.DatabaseType;
import com.azure.resourcemanager.appservice.generated.models.FrequencyUnit;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WebAppsListBackupStatusSecretsWithResponseMockTests {
    @Test
    public void testListBackupStatusSecretsWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"id\":1436377210,\"storageAccountUrl\":\"zpioo\",\"blobName\":\"jxsofsiritp\",\"name\":\"pynrlnouxevi\",\"status\":\"TimedOut\",\"sizeInBytes\":9112078412276198218,\"created\":\"2021-10-26T18:22:04Z\",\"log\":\"ct\",\"databases\":[{\"databaseType\":\"SqlAzure\",\"name\":\"qnumpna\",\"connectionStringName\":\"pkleieafpvbsllyo\",\"connectionString\":\"adhnbo\"},{\"databaseType\":\"PostgreSql\",\"name\":\"cctppbgzfmuyl\",\"connectionStringName\":\"bvvwdftrq\",\"connectionString\":\"b\"}],\"scheduled\":false,\"lastRestoreTimeStamp\":\"2020-12-20T12:07:43Z\",\"finishedTimeStamp\":\"2021-05-05T08:17:17Z\",\"correlationId\":\"xlbsnskcksfxt\",\"websiteSizeInBytes\":5439068050984875729},\"kind\":\"pmefbnccbvch\",\"id\":\"zk\",\"name\":\"ifyxdnugbisfnbt\",\"type\":\"drkwridroidhbu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        BackupItem response = manager.webApps()
            .listBackupStatusSecretsWithResponse("tpgll", "rrank", "xwtnrroh",
                new BackupRequestInner().withKind("nvnggq")
                    .withBackupName("zczjwizrulrk")
                    .withEnabled(false)
                    .withStorageAccountUrl("dttgg")
                    .withBackupSchedule(new BackupSchedule().withFrequencyInterval(181855834)
                        .withFrequencyUnit(FrequencyUnit.HOUR)
                        .withKeepAtLeastOneBackup(true)
                        .withRetentionPeriodInDays(704441708)
                        .withStartTime(OffsetDateTime.parse("2021-09-29T18:56:36Z")))
                    .withDatabases(Arrays.asList(
                        new DatabaseBackupSetting().withDatabaseType(DatabaseType.SQL_AZURE)
                            .withName("jnmychtvp")
                            .withConnectionStringName("r")
                            .withConnectionString("tw"),
                        new DatabaseBackupSetting().withDatabaseType(DatabaseType.SQL_AZURE)
                            .withName("wu")
                            .withConnectionStringName("pphjim")
                            .withConnectionString("cqpqkpnvsuaizxdl"),
                        new DatabaseBackupSetting().withDatabaseType(DatabaseType.SQL_AZURE)
                            .withName("px")
                            .withConnectionStringName("yjgxugf")
                            .withConnectionString("iurldsftmllcdq"))),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("pmefbnccbvch", response.kind());
    }
}
