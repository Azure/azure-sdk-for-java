// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.BackupRequestProperties;
import com.azure.resourcemanager.appservice.generated.models.BackupSchedule;
import com.azure.resourcemanager.appservice.generated.models.DatabaseBackupSetting;
import com.azure.resourcemanager.appservice.generated.models.DatabaseType;
import com.azure.resourcemanager.appservice.generated.models.FrequencyUnit;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BackupRequestPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupRequestProperties model = BinaryData.fromString(
            "{\"backupName\":\"zmd\",\"enabled\":true,\"storageAccountUrl\":\"bqfufke\",\"backupSchedule\":{\"frequencyInterval\":1794812734,\"frequencyUnit\":\"Day\",\"keepAtLeastOneBackup\":true,\"retentionPeriodInDays\":1774059864,\"startTime\":\"2021-04-29T10:05:03Z\",\"lastExecutionTime\":\"2021-10-02T11:53:10Z\"},\"databases\":[{\"databaseType\":\"SqlAzure\",\"name\":\"gg\",\"connectionStringName\":\"sryjokvl\",\"connectionString\":\"bjsarxsvmfpa\"}]}")
            .toObject(BackupRequestProperties.class);
        Assertions.assertEquals("zmd", model.backupName());
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("bqfufke", model.storageAccountUrl());
        Assertions.assertEquals(1794812734, model.backupSchedule().frequencyInterval());
        Assertions.assertEquals(FrequencyUnit.DAY, model.backupSchedule().frequencyUnit());
        Assertions.assertEquals(true, model.backupSchedule().keepAtLeastOneBackup());
        Assertions.assertEquals(1774059864, model.backupSchedule().retentionPeriodInDays());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-29T10:05:03Z"), model.backupSchedule().startTime());
        Assertions.assertEquals(DatabaseType.SQL_AZURE, model.databases().get(0).databaseType());
        Assertions.assertEquals("gg", model.databases().get(0).name());
        Assertions.assertEquals("sryjokvl", model.databases().get(0).connectionStringName());
        Assertions.assertEquals("bjsarxsvmfpa", model.databases().get(0).connectionString());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupRequestProperties model = new BackupRequestProperties().withBackupName("zmd")
            .withEnabled(true)
            .withStorageAccountUrl("bqfufke")
            .withBackupSchedule(new BackupSchedule().withFrequencyInterval(1794812734)
                .withFrequencyUnit(FrequencyUnit.DAY)
                .withKeepAtLeastOneBackup(true)
                .withRetentionPeriodInDays(1774059864)
                .withStartTime(OffsetDateTime.parse("2021-04-29T10:05:03Z")))
            .withDatabases(Arrays.asList(new DatabaseBackupSetting().withDatabaseType(DatabaseType.SQL_AZURE)
                .withName("gg")
                .withConnectionStringName("sryjokvl")
                .withConnectionString("bjsarxsvmfpa")));
        model = BinaryData.fromObject(model).toObject(BackupRequestProperties.class);
        Assertions.assertEquals("zmd", model.backupName());
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("bqfufke", model.storageAccountUrl());
        Assertions.assertEquals(1794812734, model.backupSchedule().frequencyInterval());
        Assertions.assertEquals(FrequencyUnit.DAY, model.backupSchedule().frequencyUnit());
        Assertions.assertEquals(true, model.backupSchedule().keepAtLeastOneBackup());
        Assertions.assertEquals(1774059864, model.backupSchedule().retentionPeriodInDays());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-29T10:05:03Z"), model.backupSchedule().startTime());
        Assertions.assertEquals(DatabaseType.SQL_AZURE, model.databases().get(0).databaseType());
        Assertions.assertEquals("gg", model.databases().get(0).name());
        Assertions.assertEquals("sryjokvl", model.databases().get(0).connectionStringName());
        Assertions.assertEquals("bjsarxsvmfpa", model.databases().get(0).connectionString());
    }
}
