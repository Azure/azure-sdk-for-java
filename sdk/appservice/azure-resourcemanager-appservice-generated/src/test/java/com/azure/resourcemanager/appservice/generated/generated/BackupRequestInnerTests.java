// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.BackupRequestInner;
import com.azure.resourcemanager.appservice.generated.models.BackupSchedule;
import com.azure.resourcemanager.appservice.generated.models.DatabaseBackupSetting;
import com.azure.resourcemanager.appservice.generated.models.DatabaseType;
import com.azure.resourcemanager.appservice.generated.models.FrequencyUnit;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BackupRequestInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupRequestInner model = BinaryData.fromString(
            "{\"properties\":{\"backupName\":\"cqxmyvkxixy\",\"enabled\":false,\"storageAccountUrl\":\"ifjc\",\"backupSchedule\":{\"frequencyInterval\":1803304164,\"frequencyUnit\":\"Hour\",\"keepAtLeastOneBackup\":false,\"retentionPeriodInDays\":408726803,\"startTime\":\"2021-04-25T03:20:10Z\",\"lastExecutionTime\":\"2021-03-19T21:43:14Z\"},\"databases\":[{\"databaseType\":\"SqlAzure\",\"name\":\"czbyfkocgm\",\"connectionStringName\":\"ctsnlwscrngtw\",\"connectionString\":\"rolwv\"},{\"databaseType\":\"SqlAzure\",\"name\":\"sdksut\",\"connectionStringName\":\"uctihavi\",\"connectionString\":\"bvjh\"},{\"databaseType\":\"LocalMySql\",\"name\":\"mqququ\",\"connectionStringName\":\"phngr\",\"connectionString\":\"exoweorocr\"},{\"databaseType\":\"MySql\",\"name\":\"gy\",\"connectionStringName\":\"gbq\",\"connectionString\":\"yrvhtv\"}]},\"kind\":\"vwmrgcnzhrplc\",\"id\":\"fmbzquuutqmh\",\"name\":\"tqyzyc\",\"type\":\"cmbkygvxjdqo\"}")
            .toObject(BackupRequestInner.class);
        Assertions.assertEquals("vwmrgcnzhrplc", model.kind());
        Assertions.assertEquals("cqxmyvkxixy", model.backupName());
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("ifjc", model.storageAccountUrl());
        Assertions.assertEquals(1803304164, model.backupSchedule().frequencyInterval());
        Assertions.assertEquals(FrequencyUnit.HOUR, model.backupSchedule().frequencyUnit());
        Assertions.assertEquals(false, model.backupSchedule().keepAtLeastOneBackup());
        Assertions.assertEquals(408726803, model.backupSchedule().retentionPeriodInDays());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-25T03:20:10Z"), model.backupSchedule().startTime());
        Assertions.assertEquals(DatabaseType.SQL_AZURE, model.databases().get(0).databaseType());
        Assertions.assertEquals("czbyfkocgm", model.databases().get(0).name());
        Assertions.assertEquals("ctsnlwscrngtw", model.databases().get(0).connectionStringName());
        Assertions.assertEquals("rolwv", model.databases().get(0).connectionString());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupRequestInner model = new BackupRequestInner().withKind("vwmrgcnzhrplc")
            .withBackupName("cqxmyvkxixy")
            .withEnabled(false)
            .withStorageAccountUrl("ifjc")
            .withBackupSchedule(new BackupSchedule().withFrequencyInterval(1803304164)
                .withFrequencyUnit(FrequencyUnit.HOUR)
                .withKeepAtLeastOneBackup(false)
                .withRetentionPeriodInDays(408726803)
                .withStartTime(OffsetDateTime.parse("2021-04-25T03:20:10Z")))
            .withDatabases(Arrays.asList(
                new DatabaseBackupSetting().withDatabaseType(DatabaseType.SQL_AZURE)
                    .withName("czbyfkocgm")
                    .withConnectionStringName("ctsnlwscrngtw")
                    .withConnectionString("rolwv"),
                new DatabaseBackupSetting().withDatabaseType(DatabaseType.SQL_AZURE)
                    .withName("sdksut")
                    .withConnectionStringName("uctihavi")
                    .withConnectionString("bvjh"),
                new DatabaseBackupSetting().withDatabaseType(DatabaseType.LOCAL_MY_SQL)
                    .withName("mqququ")
                    .withConnectionStringName("phngr")
                    .withConnectionString("exoweorocr"),
                new DatabaseBackupSetting().withDatabaseType(DatabaseType.MY_SQL)
                    .withName("gy")
                    .withConnectionStringName("gbq")
                    .withConnectionString("yrvhtv")));
        model = BinaryData.fromObject(model).toObject(BackupRequestInner.class);
        Assertions.assertEquals("vwmrgcnzhrplc", model.kind());
        Assertions.assertEquals("cqxmyvkxixy", model.backupName());
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("ifjc", model.storageAccountUrl());
        Assertions.assertEquals(1803304164, model.backupSchedule().frequencyInterval());
        Assertions.assertEquals(FrequencyUnit.HOUR, model.backupSchedule().frequencyUnit());
        Assertions.assertEquals(false, model.backupSchedule().keepAtLeastOneBackup());
        Assertions.assertEquals(408726803, model.backupSchedule().retentionPeriodInDays());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-25T03:20:10Z"), model.backupSchedule().startTime());
        Assertions.assertEquals(DatabaseType.SQL_AZURE, model.databases().get(0).databaseType());
        Assertions.assertEquals("czbyfkocgm", model.databases().get(0).name());
        Assertions.assertEquals("ctsnlwscrngtw", model.databases().get(0).connectionStringName());
        Assertions.assertEquals("rolwv", model.databases().get(0).connectionString());
    }
}
