// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.PerfMonSample;
import com.azure.resourcemanager.appservice.generated.models.PerfMonSet;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PerfMonSetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PerfMonSet model = BinaryData.fromString(
            "{\"name\":\"dkouz\",\"startTime\":\"2021-11-14T17:37:33Z\",\"endTime\":\"2021-04-15T09:31:05Z\",\"timeGrain\":\"bfvxm\",\"values\":[{\"time\":\"2021-10-18T11:09:16Z\",\"instanceName\":\"etsn\",\"value\":42.594536241944894},{\"time\":\"2021-08-05T09:21:34Z\",\"instanceName\":\"yzzcx\",\"value\":77.47494525631659},{\"time\":\"2020-12-27T12:07:08Z\",\"instanceName\":\"yckd\",\"value\":78.58434154135732}]}")
            .toObject(PerfMonSet.class);
        Assertions.assertEquals("dkouz", model.name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-14T17:37:33Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-15T09:31:05Z"), model.endTime());
        Assertions.assertEquals("bfvxm", model.timeGrain());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-18T11:09:16Z"), model.values().get(0).time());
        Assertions.assertEquals("etsn", model.values().get(0).instanceName());
        Assertions.assertEquals(42.594536241944894D, model.values().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PerfMonSet model = new PerfMonSet().withName("dkouz")
            .withStartTime(OffsetDateTime.parse("2021-11-14T17:37:33Z"))
            .withEndTime(OffsetDateTime.parse("2021-04-15T09:31:05Z"))
            .withTimeGrain("bfvxm")
            .withValues(Arrays.asList(
                new PerfMonSample().withTime(OffsetDateTime.parse("2021-10-18T11:09:16Z"))
                    .withInstanceName("etsn")
                    .withValue(42.594536241944894D),
                new PerfMonSample().withTime(OffsetDateTime.parse("2021-08-05T09:21:34Z"))
                    .withInstanceName("yzzcx")
                    .withValue(77.47494525631659D),
                new PerfMonSample().withTime(OffsetDateTime.parse("2020-12-27T12:07:08Z"))
                    .withInstanceName("yckd")
                    .withValue(78.58434154135732D)));
        model = BinaryData.fromObject(model).toObject(PerfMonSet.class);
        Assertions.assertEquals("dkouz", model.name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-14T17:37:33Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-15T09:31:05Z"), model.endTime());
        Assertions.assertEquals("bfvxm", model.timeGrain());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-18T11:09:16Z"), model.values().get(0).time());
        Assertions.assertEquals("etsn", model.values().get(0).instanceName());
        Assertions.assertEquals(42.594536241944894D, model.values().get(0).value());
    }
}
