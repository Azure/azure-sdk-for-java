// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.CapabilityInner;
import com.azure.resourcemanager.appservice.generated.models.SkuCapacity;
import com.azure.resourcemanager.appservice.generated.models.SkuDescription;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SkuDescriptionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuDescription model = BinaryData.fromString(
            "{\"name\":\"zojhpctfnmd\",\"tier\":\"tngfdgugeyzihgr\",\"size\":\"ui\",\"family\":\"bsnmfpph\",\"capacity\":917571686,\"skuCapacity\":{\"minimum\":782057398,\"maximum\":1109468062,\"elasticMaximum\":1922509434,\"default\":1354580304,\"scaleType\":\"czbgomfgbeg\"},\"locations\":[\"leohibetnluankr\",\"fxeeebtijvacvbm\"],\"capabilities\":[{\"name\":\"q\",\"value\":\"aj\",\"reason\":\"wxacevehj\"},{\"name\":\"yxoaf\",\"value\":\"oqltfae\",\"reason\":\"inmfgvxirp\"}]}")
            .toObject(SkuDescription.class);
        Assertions.assertEquals("zojhpctfnmd", model.name());
        Assertions.assertEquals("tngfdgugeyzihgr", model.tier());
        Assertions.assertEquals("ui", model.size());
        Assertions.assertEquals("bsnmfpph", model.family());
        Assertions.assertEquals(917571686, model.capacity());
        Assertions.assertEquals(782057398, model.skuCapacity().minimum());
        Assertions.assertEquals(1109468062, model.skuCapacity().maximum());
        Assertions.assertEquals(1922509434, model.skuCapacity().elasticMaximum());
        Assertions.assertEquals(1354580304, model.skuCapacity().defaultProperty());
        Assertions.assertEquals("czbgomfgbeg", model.skuCapacity().scaleType());
        Assertions.assertEquals("leohibetnluankr", model.locations().get(0));
        Assertions.assertEquals("q", model.capabilities().get(0).name());
        Assertions.assertEquals("aj", model.capabilities().get(0).value());
        Assertions.assertEquals("wxacevehj", model.capabilities().get(0).reason());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuDescription model = new SkuDescription().withName("zojhpctfnmd")
            .withTier("tngfdgugeyzihgr")
            .withSize("ui")
            .withFamily("bsnmfpph")
            .withCapacity(917571686)
            .withSkuCapacity(new SkuCapacity().withMinimum(782057398)
                .withMaximum(1109468062)
                .withElasticMaximum(1922509434)
                .withDefaultProperty(1354580304)
                .withScaleType("czbgomfgbeg"))
            .withLocations(Arrays.asList("leohibetnluankr", "fxeeebtijvacvbm"))
            .withCapabilities(Arrays.asList(new CapabilityInner().withName("q").withValue("aj").withReason("wxacevehj"),
                new CapabilityInner().withName("yxoaf").withValue("oqltfae").withReason("inmfgvxirp")));
        model = BinaryData.fromObject(model).toObject(SkuDescription.class);
        Assertions.assertEquals("zojhpctfnmd", model.name());
        Assertions.assertEquals("tngfdgugeyzihgr", model.tier());
        Assertions.assertEquals("ui", model.size());
        Assertions.assertEquals("bsnmfpph", model.family());
        Assertions.assertEquals(917571686, model.capacity());
        Assertions.assertEquals(782057398, model.skuCapacity().minimum());
        Assertions.assertEquals(1109468062, model.skuCapacity().maximum());
        Assertions.assertEquals(1922509434, model.skuCapacity().elasticMaximum());
        Assertions.assertEquals(1354580304, model.skuCapacity().defaultProperty());
        Assertions.assertEquals("czbgomfgbeg", model.skuCapacity().scaleType());
        Assertions.assertEquals("leohibetnluankr", model.locations().get(0));
        Assertions.assertEquals("q", model.capabilities().get(0).name());
        Assertions.assertEquals("aj", model.capabilities().get(0).value());
        Assertions.assertEquals("wxacevehj", model.capabilities().get(0).reason());
    }
}
