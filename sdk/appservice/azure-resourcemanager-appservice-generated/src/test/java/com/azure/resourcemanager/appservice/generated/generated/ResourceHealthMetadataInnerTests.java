// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.ResourceHealthMetadataInner;
import org.junit.jupiter.api.Assertions;

public final class ResourceHealthMetadataInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceHealthMetadataInner model = BinaryData.fromString(
            "{\"properties\":{\"category\":\"hpsapzupz\",\"signalAvailability\":false},\"kind\":\"bdjzghximkg\",\"id\":\"mxpqkjnpyriwn\",\"name\":\"ot\",\"type\":\"xmmqmt\"}")
            .toObject(ResourceHealthMetadataInner.class);
        Assertions.assertEquals("bdjzghximkg", model.kind());
        Assertions.assertEquals("hpsapzupz", model.category());
        Assertions.assertEquals(false, model.signalAvailability());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceHealthMetadataInner model = new ResourceHealthMetadataInner().withKind("bdjzghximkg")
            .withCategory("hpsapzupz")
            .withSignalAvailability(false);
        model = BinaryData.fromObject(model).toObject(ResourceHealthMetadataInner.class);
        Assertions.assertEquals("bdjzghximkg", model.kind());
        Assertions.assertEquals("hpsapzupz", model.category());
        Assertions.assertEquals(false, model.signalAvailability());
    }
}
