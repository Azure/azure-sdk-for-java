// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.DeploymentProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class DeploymentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeploymentProperties model = BinaryData.fromString(
            "{\"status\":1216361695,\"message\":\"dtevzs\",\"author\":\"ykebmpshaez\",\"deployer\":\"dkckr\",\"author_email\":\"vqdmhcejstfsm\",\"start_time\":\"2021-06-23T00:03:16Z\",\"end_time\":\"2021-03-22T17:22:44Z\",\"active\":false,\"details\":\"wxqd\"}")
            .toObject(DeploymentProperties.class);
        Assertions.assertEquals(1216361695, model.status());
        Assertions.assertEquals("dtevzs", model.message());
        Assertions.assertEquals("ykebmpshaez", model.author());
        Assertions.assertEquals("dkckr", model.deployer());
        Assertions.assertEquals("vqdmhcejstfsm", model.authorEmail());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-23T00:03:16Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-22T17:22:44Z"), model.endTime());
        Assertions.assertEquals(false, model.active());
        Assertions.assertEquals("wxqd", model.details());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeploymentProperties model = new DeploymentProperties().withStatus(1216361695)
            .withMessage("dtevzs")
            .withAuthor("ykebmpshaez")
            .withDeployer("dkckr")
            .withAuthorEmail("vqdmhcejstfsm")
            .withStartTime(OffsetDateTime.parse("2021-06-23T00:03:16Z"))
            .withEndTime(OffsetDateTime.parse("2021-03-22T17:22:44Z"))
            .withActive(false)
            .withDetails("wxqd");
        model = BinaryData.fromObject(model).toObject(DeploymentProperties.class);
        Assertions.assertEquals(1216361695, model.status());
        Assertions.assertEquals("dtevzs", model.message());
        Assertions.assertEquals("ykebmpshaez", model.author());
        Assertions.assertEquals("dkckr", model.deployer());
        Assertions.assertEquals("vqdmhcejstfsm", model.authorEmail());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-23T00:03:16Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-22T17:22:44Z"), model.endTime());
        Assertions.assertEquals(false, model.active());
        Assertions.assertEquals("wxqd", model.details());
    }
}
