// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.TriggeredJobHistoryInner;
import com.azure.resourcemanager.appservice.generated.models.TriggeredJobHistoryCollection;
import com.azure.resourcemanager.appservice.generated.models.TriggeredJobRun;
import com.azure.resourcemanager.appservice.generated.models.TriggeredWebJobStatus;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TriggeredJobHistoryCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TriggeredJobHistoryCollection model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"runs\":[{\"web_job_id\":\"tps\",\"web_job_name\":\"awfupny\",\"status\":\"Error\",\"start_time\":\"2021-07-01T10:24:06Z\",\"end_time\":\"2021-10-08T02:08:23Z\",\"duration\":\"elauz\",\"output_url\":\"e\",\"error_url\":\"eb\",\"url\":\"gzx\",\"job_name\":\"safvflyqauuohsk\",\"trigger\":\"ntxdvlqmn\"},{\"web_job_id\":\"dhoyvpdumaplpdz\",\"web_job_name\":\"ettnmiufpbfqml\",\"status\":\"Error\",\"start_time\":\"2021-09-25T17:30:54Z\",\"end_time\":\"2021-05-06T14:29:32Z\",\"duration\":\"w\",\"output_url\":\"xz\",\"error_url\":\"gumydogrtfwzec\",\"url\":\"xrcsevqjdxiiqwqb\",\"job_name\":\"nvgpxnaaiitn\",\"trigger\":\"uywrxnksmaeb\"},{\"web_job_id\":\"xjsmrseauxeovbgr\",\"web_job_name\":\"fuxnt\",\"status\":\"Success\",\"start_time\":\"2021-10-27T09:55:44Z\",\"end_time\":\"2021-02-03T21:27:41Z\",\"duration\":\"etkviptqhat\",\"output_url\":\"khhbxgfhgkdmsflh\",\"error_url\":\"upqovuwhv\",\"url\":\"hmqhqjd\",\"job_name\":\"gcemjtiljxa\",\"trigger\":\"aly\"}]},\"kind\":\"craxilzdxcm\",\"id\":\"dmdsypksfrhi\",\"name\":\"hxjou\",\"type\":\"x\"},{\"properties\":{\"runs\":[{\"web_job_id\":\"c\",\"web_job_name\":\"vkbaoqvvyhgpgjdr\",\"status\":\"Success\",\"start_time\":\"2021-06-22T11:18:25Z\",\"end_time\":\"2021-10-14T09:28:16Z\",\"duration\":\"ukuofzwiztvucy\",\"output_url\":\"kgkavpmgtpco\",\"error_url\":\"ksixvwk\",\"url\":\"esmurjabpnx\",\"job_name\":\"agcojgmyz\",\"trigger\":\"gmqehrqtgdipbnj\"},{\"web_job_id\":\"eyuigyzsebkbfyk\",\"web_job_name\":\"wurcxxjyxy\",\"status\":\"Failed\",\"start_time\":\"2021-12-02T08:49:47Z\",\"end_time\":\"2021-03-22T04:09:52Z\",\"duration\":\"govbbncjxr\",\"output_url\":\"qgmztlrubn\",\"error_url\":\"ou\",\"url\":\"qffgjsqq\",\"job_name\":\"irooglwujobdq\",\"trigger\":\"pp\"},{\"web_job_id\":\"qovijpm\",\"web_job_name\":\"nk\",\"status\":\"Success\",\"start_time\":\"2021-02-27T02:45:29Z\",\"end_time\":\"2021-08-29T05:07:02Z\",\"duration\":\"r\",\"output_url\":\"ljfate\",\"error_url\":\"xqhje\",\"url\":\"gimyo\",\"job_name\":\"eflgnieeqjdfxx\",\"trigger\":\"nduxkepgamri\"}]},\"kind\":\"iterqfuterr\",\"id\":\"anlpfqddwwp\",\"name\":\"cqawupqkvmygueef\",\"type\":\"xzwvcvtjdq\"},{\"properties\":{\"runs\":[{\"web_job_id\":\"jafbdvpcdzdbjz\",\"web_job_name\":\"px\",\"status\":\"Error\",\"start_time\":\"2021-11-22T10:04:54Z\",\"end_time\":\"2021-01-24T12:27:41Z\",\"duration\":\"vdonkaqngv\",\"output_url\":\"gcwwuusjjhtcyzn\",\"error_url\":\"ighnxhg\",\"url\":\"rnktsvwqdar\",\"job_name\":\"eqlujmmkn\",\"trigger\":\"uksttxime\"},{\"web_job_id\":\"asflg\",\"web_job_name\":\"cw\",\"status\":\"Error\",\"start_time\":\"2021-11-06T12:13:39Z\",\"end_time\":\"2021-12-02T13:44:57Z\",\"duration\":\"jw\",\"output_url\":\"a\",\"error_url\":\"bdeeagigbpaba\",\"url\":\"le\",\"job_name\":\"jrkakmvnd\",\"trigger\":\"mazlx\"}]},\"kind\":\"dukidgqeyqrl\",\"id\":\"pkypbekpardoad\",\"name\":\"e\",\"type\":\"xzgy\"}],\"nextLink\":\"zmg\"}")
            .toObject(TriggeredJobHistoryCollection.class);
        Assertions.assertEquals("craxilzdxcm", model.value().get(0).kind());
        Assertions.assertEquals("tps", model.value().get(0).runs().get(0).webJobId());
        Assertions.assertEquals("awfupny", model.value().get(0).runs().get(0).webJobName());
        Assertions.assertEquals(TriggeredWebJobStatus.ERROR, model.value().get(0).runs().get(0).status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-01T10:24:06Z"),
            model.value().get(0).runs().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-08T02:08:23Z"),
            model.value().get(0).runs().get(0).endTime());
        Assertions.assertEquals("elauz", model.value().get(0).runs().get(0).duration());
        Assertions.assertEquals("e", model.value().get(0).runs().get(0).outputUrl());
        Assertions.assertEquals("eb", model.value().get(0).runs().get(0).errorUrl());
        Assertions.assertEquals("gzx", model.value().get(0).runs().get(0).url());
        Assertions.assertEquals("safvflyqauuohsk", model.value().get(0).runs().get(0).jobName());
        Assertions.assertEquals("ntxdvlqmn", model.value().get(0).runs().get(0).trigger());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TriggeredJobHistoryCollection model = new TriggeredJobHistoryCollection().withValue(Arrays.asList(
            new TriggeredJobHistoryInner().withKind("craxilzdxcm")
                .withRuns(Arrays.asList(
                    new TriggeredJobRun().withWebJobId("tps")
                        .withWebJobName("awfupny")
                        .withStatus(TriggeredWebJobStatus.ERROR)
                        .withStartTime(OffsetDateTime.parse("2021-07-01T10:24:06Z"))
                        .withEndTime(OffsetDateTime.parse("2021-10-08T02:08:23Z"))
                        .withDuration("elauz")
                        .withOutputUrl("e")
                        .withErrorUrl("eb")
                        .withUrl("gzx")
                        .withJobName("safvflyqauuohsk")
                        .withTrigger("ntxdvlqmn"),
                    new TriggeredJobRun().withWebJobId("dhoyvpdumaplpdz")
                        .withWebJobName("ettnmiufpbfqml")
                        .withStatus(TriggeredWebJobStatus.ERROR)
                        .withStartTime(OffsetDateTime.parse("2021-09-25T17:30:54Z"))
                        .withEndTime(OffsetDateTime.parse("2021-05-06T14:29:32Z"))
                        .withDuration("w")
                        .withOutputUrl("xz")
                        .withErrorUrl("gumydogrtfwzec")
                        .withUrl("xrcsevqjdxiiqwqb")
                        .withJobName("nvgpxnaaiitn")
                        .withTrigger("uywrxnksmaeb"),
                    new TriggeredJobRun().withWebJobId("xjsmrseauxeovbgr")
                        .withWebJobName("fuxnt")
                        .withStatus(TriggeredWebJobStatus.SUCCESS)
                        .withStartTime(OffsetDateTime.parse("2021-10-27T09:55:44Z"))
                        .withEndTime(OffsetDateTime.parse("2021-02-03T21:27:41Z"))
                        .withDuration("etkviptqhat")
                        .withOutputUrl("khhbxgfhgkdmsflh")
                        .withErrorUrl("upqovuwhv")
                        .withUrl("hmqhqjd")
                        .withJobName("gcemjtiljxa")
                        .withTrigger("aly"))),
            new TriggeredJobHistoryInner().withKind("iterqfuterr")
                .withRuns(Arrays.asList(
                    new TriggeredJobRun().withWebJobId("c")
                        .withWebJobName("vkbaoqvvyhgpgjdr")
                        .withStatus(TriggeredWebJobStatus.SUCCESS)
                        .withStartTime(OffsetDateTime.parse("2021-06-22T11:18:25Z"))
                        .withEndTime(OffsetDateTime.parse("2021-10-14T09:28:16Z"))
                        .withDuration("ukuofzwiztvucy")
                        .withOutputUrl("kgkavpmgtpco")
                        .withErrorUrl("ksixvwk")
                        .withUrl("esmurjabpnx")
                        .withJobName("agcojgmyz")
                        .withTrigger("gmqehrqtgdipbnj"),
                    new TriggeredJobRun().withWebJobId("eyuigyzsebkbfyk")
                        .withWebJobName("wurcxxjyxy")
                        .withStatus(TriggeredWebJobStatus.FAILED)
                        .withStartTime(OffsetDateTime.parse("2021-12-02T08:49:47Z"))
                        .withEndTime(OffsetDateTime.parse("2021-03-22T04:09:52Z"))
                        .withDuration("govbbncjxr")
                        .withOutputUrl("qgmztlrubn")
                        .withErrorUrl("ou")
                        .withUrl("qffgjsqq")
                        .withJobName("irooglwujobdq")
                        .withTrigger("pp"),
                    new TriggeredJobRun().withWebJobId("qovijpm")
                        .withWebJobName("nk")
                        .withStatus(TriggeredWebJobStatus.SUCCESS)
                        .withStartTime(OffsetDateTime.parse("2021-02-27T02:45:29Z"))
                        .withEndTime(OffsetDateTime.parse("2021-08-29T05:07:02Z"))
                        .withDuration("r")
                        .withOutputUrl("ljfate")
                        .withErrorUrl("xqhje")
                        .withUrl("gimyo")
                        .withJobName("eflgnieeqjdfxx")
                        .withTrigger("nduxkepgamri"))),
            new TriggeredJobHistoryInner().withKind("dukidgqeyqrl")
                .withRuns(Arrays.asList(
                    new TriggeredJobRun().withWebJobId("jafbdvpcdzdbjz")
                        .withWebJobName("px")
                        .withStatus(TriggeredWebJobStatus.ERROR)
                        .withStartTime(OffsetDateTime.parse("2021-11-22T10:04:54Z"))
                        .withEndTime(OffsetDateTime.parse("2021-01-24T12:27:41Z"))
                        .withDuration("vdonkaqngv")
                        .withOutputUrl("gcwwuusjjhtcyzn")
                        .withErrorUrl("ighnxhg")
                        .withUrl("rnktsvwqdar")
                        .withJobName("eqlujmmkn")
                        .withTrigger("uksttxime"),
                    new TriggeredJobRun().withWebJobId("asflg")
                        .withWebJobName("cw")
                        .withStatus(TriggeredWebJobStatus.ERROR)
                        .withStartTime(OffsetDateTime.parse("2021-11-06T12:13:39Z"))
                        .withEndTime(OffsetDateTime.parse("2021-12-02T13:44:57Z"))
                        .withDuration("jw")
                        .withOutputUrl("a")
                        .withErrorUrl("bdeeagigbpaba")
                        .withUrl("le")
                        .withJobName("jrkakmvnd")
                        .withTrigger("mazlx")))));
        model = BinaryData.fromObject(model).toObject(TriggeredJobHistoryCollection.class);
        Assertions.assertEquals("craxilzdxcm", model.value().get(0).kind());
        Assertions.assertEquals("tps", model.value().get(0).runs().get(0).webJobId());
        Assertions.assertEquals("awfupny", model.value().get(0).runs().get(0).webJobName());
        Assertions.assertEquals(TriggeredWebJobStatus.ERROR, model.value().get(0).runs().get(0).status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-01T10:24:06Z"),
            model.value().get(0).runs().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-08T02:08:23Z"),
            model.value().get(0).runs().get(0).endTime());
        Assertions.assertEquals("elauz", model.value().get(0).runs().get(0).duration());
        Assertions.assertEquals("e", model.value().get(0).runs().get(0).outputUrl());
        Assertions.assertEquals("eb", model.value().get(0).runs().get(0).errorUrl());
        Assertions.assertEquals("gzx", model.value().get(0).runs().get(0).url());
        Assertions.assertEquals("safvflyqauuohsk", model.value().get(0).runs().get(0).jobName());
        Assertions.assertEquals("ntxdvlqmn", model.value().get(0).runs().get(0).trigger());
    }
}
