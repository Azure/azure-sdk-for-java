// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.SkuInfo;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AppServiceEnvironmentsListMultiRolePoolSkusMockTests {
    @Test
    public void testListMultiRolePoolSkus() throws Exception {
        String responseStr
            = "{\"value\":[{\"resourceType\":\"zpr\",\"sku\":{\"name\":\"muzohnpkofklbddl\",\"tier\":\"mffyvowlam\",\"size\":\"azvw\",\"family\":\"e\",\"capacity\":1393495965,\"skuCapacity\":{\"minimum\":197870142,\"maximum\":1491363264,\"elasticMaximum\":1805005754,\"default\":2141520896,\"scaleType\":\"r\"},\"locations\":[\"dnkgztfgcuz\"],\"capabilities\":[{\"name\":\"hdtqggza\",\"value\":\"gnrsei\",\"reason\":\"fpwbybm\"},{\"name\":\"hzzgolfens\",\"value\":\"qilbpyjzvyeml\",\"reason\":\"avzczvvwr\"},{\"name\":\"galywgq\",\"value\":\"vb\",\"reason\":\"heyxewcskt\"},{\"name\":\"wbprkf\",\"value\":\"xiikrjamzt\",\"reason\":\"mrg\"}]},\"capacity\":{\"minimum\":1418561792,\"maximum\":902432352,\"elasticMaximum\":1568530743,\"default\":404922644,\"scaleType\":\"fuhmhksgo\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SkuInfo> response = manager.appServiceEnvironments()
            .listMultiRolePoolSkus("fqiwlduotsyjzda", "g", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zpr", response.iterator().next().resourceType());
        Assertions.assertEquals("muzohnpkofklbddl", response.iterator().next().sku().name());
        Assertions.assertEquals("mffyvowlam", response.iterator().next().sku().tier());
        Assertions.assertEquals("azvw", response.iterator().next().sku().size());
        Assertions.assertEquals("e", response.iterator().next().sku().family());
        Assertions.assertEquals(1393495965, response.iterator().next().sku().capacity());
        Assertions.assertEquals(197870142, response.iterator().next().sku().skuCapacity().minimum());
        Assertions.assertEquals(1491363264, response.iterator().next().sku().skuCapacity().maximum());
        Assertions.assertEquals(1805005754, response.iterator().next().sku().skuCapacity().elasticMaximum());
        Assertions.assertEquals(2141520896, response.iterator().next().sku().skuCapacity().defaultProperty());
        Assertions.assertEquals("r", response.iterator().next().sku().skuCapacity().scaleType());
        Assertions.assertEquals("dnkgztfgcuz", response.iterator().next().sku().locations().get(0));
        Assertions.assertEquals("hdtqggza", response.iterator().next().sku().capabilities().get(0).name());
        Assertions.assertEquals("gnrsei", response.iterator().next().sku().capabilities().get(0).value());
        Assertions.assertEquals("fpwbybm", response.iterator().next().sku().capabilities().get(0).reason());
        Assertions.assertEquals(1418561792, response.iterator().next().capacity().minimum());
        Assertions.assertEquals(902432352, response.iterator().next().capacity().maximum());
        Assertions.assertEquals(1568530743, response.iterator().next().capacity().elasticMaximum());
        Assertions.assertEquals(404922644, response.iterator().next().capacity().defaultProperty());
        Assertions.assertEquals("fuhmhksgo", response.iterator().next().capacity().scaleType());
    }
}
