// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.DetectorResponse;
import com.azure.resourcemanager.appservice.generated.models.InsightStatus;
import com.azure.resourcemanager.appservice.generated.models.RenderingType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DiagnosticsListHostingEnvironmentDetectorResponsesMockTests {
    @Test
    public void testListHostingEnvironmentDetectorResponses() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"metadata\":{\"id\":\"cwecbqtkdginmhlg\",\"name\":\"f\",\"description\":\"cceyowrwvbqvbcqg\",\"author\":\"sopqgiqfaxtl\",\"category\":\"yzcgugslpvy\",\"supportTopicList\":[{\"id\":\"hfaabibvslo\",\"pesId\":\"kpvvkqlkhdxnz\"},{\"id\":\"as\",\"pesId\":\"iz\"}],\"analysisType\":[\"ibwzuhyd\",\"jckgwtbfxxsfjnba\",\"cjighmkd\"],\"type\":\"Analysis\",\"score\":44.93578},\"dataset\":[{\"table\":{\"tableName\":\"xehmnizoybtehk\",\"columns\":[{},{},{},{}],\"rows\":[[],[],[],[]]},\"renderingProperties\":{\"type\":\"Card\",\"title\":\"wrcfqwkqulkzov\",\"description\":\"hwiwhrqxjxlssosn\"}}],\"status\":{\"message\":\"pxnsjj\",\"statusId\":\"Critical\"},\"dataProvidersMetadata\":[{\"providerName\":\"g\",\"propertyBag\":[{},{},{}]},{\"providerName\":\"iqxbcsj\",\"propertyBag\":[{},{},{}]}],\"suggestedUtterances\":{\"query\":\"gczpdioddtjyl\",\"results\":[{\"sampleUtterance\":{},\"score\":85.21728}]}},\"kind\":\"hmtcacwm\",\"id\":\"beh\",\"name\":\"f\",\"type\":\"skzw\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DetectorResponse> response = manager.diagnostics()
            .listHostingEnvironmentDetectorResponses("tzjxgassmnatnp", "lueylqysgmiix",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hmtcacwm", response.iterator().next().kind());
        Assertions.assertEquals("xehmnizoybtehk", response.iterator().next().dataset().get(0).table().tableName());
        Assertions.assertEquals(RenderingType.CARD,
            response.iterator().next().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("wrcfqwkqulkzov",
            response.iterator().next().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("hwiwhrqxjxlssosn",
            response.iterator().next().dataset().get(0).renderingProperties().description());
        Assertions.assertEquals("pxnsjj", response.iterator().next().status().message());
        Assertions.assertEquals(InsightStatus.CRITICAL, response.iterator().next().status().statusId());
        Assertions.assertEquals("g", response.iterator().next().dataProvidersMetadata().get(0).providerName());
        Assertions.assertEquals("gczpdioddtjyl", response.iterator().next().suggestedUtterances().query());
        Assertions.assertEquals(85.21728F, response.iterator().next().suggestedUtterances().results().get(0).score());
    }
}
