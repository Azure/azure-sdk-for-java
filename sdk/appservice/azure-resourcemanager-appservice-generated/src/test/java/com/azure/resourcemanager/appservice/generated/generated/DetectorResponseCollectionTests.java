// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.DetectorResponseInner;
import com.azure.resourcemanager.appservice.generated.models.DataProviderMetadata;
import com.azure.resourcemanager.appservice.generated.models.DataTableResponseObject;
import com.azure.resourcemanager.appservice.generated.models.DetectorInfo;
import com.azure.resourcemanager.appservice.generated.models.DetectorResponseCollection;
import com.azure.resourcemanager.appservice.generated.models.DiagnosticData;
import com.azure.resourcemanager.appservice.generated.models.InsightStatus;
import com.azure.resourcemanager.appservice.generated.models.QueryUtterancesResult;
import com.azure.resourcemanager.appservice.generated.models.QueryUtterancesResults;
import com.azure.resourcemanager.appservice.generated.models.Rendering;
import com.azure.resourcemanager.appservice.generated.models.Status;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DetectorResponseCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DetectorResponseCollection model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"metadata\":{\"id\":\"ihfxtijbpzvgnwzs\",\"name\":\"glzufc\",\"description\":\"kohdbiha\",\"author\":\"fhfcb\",\"category\":\"s\",\"supportTopicList\":[{},{},{}],\"analysisType\":[\"xqhabi\"],\"type\":\"Detector\",\"score\":58.216476},\"dataset\":[{\"table\":{},\"renderingProperties\":{}},{\"table\":{},\"renderingProperties\":{}}],\"status\":{\"message\":\"pqxu\",\"statusId\":\"None\"},\"dataProvidersMetadata\":[{\"providerName\":\"iwbybrkxvdumjg\",\"propertyBag\":[{},{}]},{\"providerName\":\"vukxgau\",\"propertyBag\":[{}]},{\"providerName\":\"nhsjcnyej\",\"propertyBag\":[{},{},{},{}]},{\"providerName\":\"htnapczwlokjyem\",\"propertyBag\":[{},{}]}],\"suggestedUtterances\":{\"query\":\"pjoxzjnch\",\"results\":[{},{},{},{}]}},\"kind\":\"podmailzydehojwy\",\"id\":\"huxinpmqnj\",\"name\":\"qwixjspro\",\"type\":\"vcputegj\"},{\"properties\":{\"metadata\":{\"id\":\"datscmd\",\"name\":\"jhulsuuvmkjo\",\"description\":\"rwfndiod\",\"author\":\"slwejdpvw\",\"category\":\"oqpsoa\",\"supportTopicList\":[{},{}],\"analysisType\":[\"akl\",\"lahbcryff\",\"fdosyg\"],\"type\":\"Detector\",\"score\":89.07041},\"dataset\":[{\"table\":{},\"renderingProperties\":{}},{\"table\":{},\"renderingProperties\":{}},{\"table\":{},\"renderingProperties\":{}}],\"status\":{\"message\":\"crzevdphlx\",\"statusId\":\"Critical\"},\"dataProvidersMetadata\":[{\"providerName\":\"trg\",\"propertyBag\":[{}]},{\"providerName\":\"f\",\"propertyBag\":[{}]},{\"providerName\":\"n\",\"propertyBag\":[{}]}],\"suggestedUtterances\":{\"query\":\"jrwzox\",\"results\":[{},{}]}},\"kind\":\"elluwfziton\",\"id\":\"eqfpj\",\"name\":\"jlxofpdvhpfxxyp\",\"type\":\"ninmayhuyb\"},{\"properties\":{\"metadata\":{\"id\":\"depoog\",\"name\":\"uvamiheognarxzxt\",\"description\":\"o\",\"author\":\"si\",\"category\":\"evcciqihnhun\",\"supportTopicList\":[{},{},{},{}],\"analysisType\":[\"rnfygxgispem\"],\"type\":\"Detector\",\"score\":47.571415},\"dataset\":[{\"table\":{},\"renderingProperties\":{}},{\"table\":{},\"renderingProperties\":{}}],\"status\":{\"message\":\"xqeofjaeqjhqjba\",\"statusId\":\"Info\"},\"dataProvidersMetadata\":[{\"providerName\":\"qulngsntnbybkzgc\",\"propertyBag\":[{},{}]},{\"providerName\":\"lxxwrljdouskc\",\"propertyBag\":[{},{},{},{}]},{\"providerName\":\"cr\",\"propertyBag\":[{}]}],\"suggestedUtterances\":{\"query\":\"tnhxbn\",\"results\":[{},{}]}},\"kind\":\"sqrglssainq\",\"id\":\"jwnzlljfmp\",\"name\":\"eebvmgxsab\",\"type\":\"yqduujit\"},{\"properties\":{\"metadata\":{\"id\":\"dzevndhkrw\",\"name\":\"appd\",\"description\":\"dkvwrwjfe\",\"author\":\"nhutjeltmrldhugj\",\"category\":\"datqxhocdgeabl\",\"supportTopicList\":[{},{},{}],\"analysisType\":[\"icndvkaozwyifty\"],\"type\":\"CategoryOverview\",\"score\":30.237473},\"dataset\":[{\"table\":{},\"renderingProperties\":{}}],\"status\":{\"message\":\"olniwpwcukjf\",\"statusId\":\"Critical\"},\"dataProvidersMetadata\":[{\"providerName\":\"klryplwck\",\"propertyBag\":[{}]}],\"suggestedUtterances\":{\"query\":\"pnddhsgcbacphejk\",\"results\":[{},{},{},{}]}},\"kind\":\"qgoulznd\",\"id\":\"i\",\"name\":\"wyqkgfgibm\",\"type\":\"dgak\"}],\"nextLink\":\"s\"}")
            .toObject(DetectorResponseCollection.class);
        Assertions.assertEquals("podmailzydehojwy", model.value().get(0).kind());
        Assertions.assertEquals("pqxu", model.value().get(0).status().message());
        Assertions.assertEquals(InsightStatus.NONE, model.value().get(0).status().statusId());
        Assertions.assertEquals("iwbybrkxvdumjg", model.value().get(0).dataProvidersMetadata().get(0).providerName());
        Assertions.assertEquals("pjoxzjnch", model.value().get(0).suggestedUtterances().query());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DetectorResponseCollection model = new DetectorResponseCollection().withValue(Arrays.asList(
            new DetectorResponseInner().withKind("podmailzydehojwy")
                .withMetadata(new DetectorInfo())
                .withDataset(Arrays.asList(
                    new DiagnosticData().withTable(new DataTableResponseObject())
                        .withRenderingProperties(new Rendering()),
                    new DiagnosticData().withTable(new DataTableResponseObject())
                        .withRenderingProperties(new Rendering())))
                .withStatus(new Status().withMessage("pqxu").withStatusId(InsightStatus.NONE))
                .withDataProvidersMetadata(Arrays.asList(new DataProviderMetadata().withProviderName("iwbybrkxvdumjg"),
                    new DataProviderMetadata().withProviderName("vukxgau"),
                    new DataProviderMetadata().withProviderName("nhsjcnyej"),
                    new DataProviderMetadata().withProviderName("htnapczwlokjyem")))
                .withSuggestedUtterances(new QueryUtterancesResults().withQuery("pjoxzjnch")
                    .withResults(Arrays.asList(new QueryUtterancesResult(), new QueryUtterancesResult(),
                        new QueryUtterancesResult(), new QueryUtterancesResult()))),
            new DetectorResponseInner().withKind("elluwfziton")
                .withMetadata(new DetectorInfo())
                .withDataset(Arrays.asList(
                    new DiagnosticData().withTable(new DataTableResponseObject())
                        .withRenderingProperties(new Rendering()),
                    new DiagnosticData().withTable(new DataTableResponseObject())
                        .withRenderingProperties(new Rendering()),
                    new DiagnosticData().withTable(new DataTableResponseObject())
                        .withRenderingProperties(new Rendering())))
                .withStatus(new Status().withMessage("crzevdphlx").withStatusId(InsightStatus.CRITICAL))
                .withDataProvidersMetadata(Arrays.asList(new DataProviderMetadata().withProviderName("trg"),
                    new DataProviderMetadata().withProviderName("f"), new DataProviderMetadata().withProviderName("n")))
                .withSuggestedUtterances(new QueryUtterancesResults().withQuery("jrwzox")
                    .withResults(Arrays.asList(new QueryUtterancesResult(), new QueryUtterancesResult()))),
            new DetectorResponseInner().withKind("sqrglssainq")
                .withMetadata(new DetectorInfo())
                .withDataset(Arrays.asList(
                    new DiagnosticData().withTable(new DataTableResponseObject())
                        .withRenderingProperties(new Rendering()),
                    new DiagnosticData().withTable(new DataTableResponseObject())
                        .withRenderingProperties(new Rendering())))
                .withStatus(new Status().withMessage("xqeofjaeqjhqjba").withStatusId(InsightStatus.INFO))
                .withDataProvidersMetadata(
                    Arrays.asList(new DataProviderMetadata().withProviderName("qulngsntnbybkzgc"),
                        new DataProviderMetadata().withProviderName("lxxwrljdouskc"),
                        new DataProviderMetadata().withProviderName("cr")))
                .withSuggestedUtterances(new QueryUtterancesResults().withQuery("tnhxbn")
                    .withResults(Arrays.asList(new QueryUtterancesResult(), new QueryUtterancesResult()))),
            new DetectorResponseInner().withKind("qgoulznd")
                .withMetadata(new DetectorInfo())
                .withDataset(Arrays.asList(new DiagnosticData().withTable(new DataTableResponseObject())
                    .withRenderingProperties(new Rendering())))
                .withStatus(new Status().withMessage("olniwpwcukjf").withStatusId(InsightStatus.CRITICAL))
                .withDataProvidersMetadata(Arrays.asList(new DataProviderMetadata().withProviderName("klryplwck")))
                .withSuggestedUtterances(new QueryUtterancesResults().withQuery("pnddhsgcbacphejk")
                    .withResults(Arrays.asList(new QueryUtterancesResult(), new QueryUtterancesResult(),
                        new QueryUtterancesResult(), new QueryUtterancesResult())))));
        model = BinaryData.fromObject(model).toObject(DetectorResponseCollection.class);
        Assertions.assertEquals("podmailzydehojwy", model.value().get(0).kind());
        Assertions.assertEquals("pqxu", model.value().get(0).status().message());
        Assertions.assertEquals(InsightStatus.NONE, model.value().get(0).status().statusId());
        Assertions.assertEquals("iwbybrkxvdumjg", model.value().get(0).dataProvidersMetadata().get(0).providerName());
        Assertions.assertEquals("pjoxzjnch", model.value().get(0).suggestedUtterances().query());
    }
}
