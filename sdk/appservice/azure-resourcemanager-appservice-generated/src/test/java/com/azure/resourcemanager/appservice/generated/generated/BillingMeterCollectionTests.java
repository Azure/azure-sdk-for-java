// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.BillingMeterInner;
import com.azure.resourcemanager.appservice.generated.models.BillingMeterCollection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BillingMeterCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BillingMeterCollection model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"meterId\":\"k\",\"billingLocation\":\"dpwjcbhaahntof\",\"shortName\":\"fh\",\"friendlyName\":\"ixo\",\"resourceType\":\"kzdfiv\",\"osType\":\"jybsrwz\",\"multiplier\":15.651335960720814},\"kind\":\"xdhmfp\",\"id\":\"inmgikes\",\"name\":\"kwtzgfrag\",\"type\":\"hxerxlobkdbtq\"}],\"nextLink\":\"mmniiqyholhjnskb\"}")
            .toObject(BillingMeterCollection.class);
        Assertions.assertEquals("xdhmfp", model.value().get(0).kind());
        Assertions.assertEquals("k", model.value().get(0).meterId());
        Assertions.assertEquals("dpwjcbhaahntof", model.value().get(0).billingLocation());
        Assertions.assertEquals("fh", model.value().get(0).shortName());
        Assertions.assertEquals("ixo", model.value().get(0).friendlyName());
        Assertions.assertEquals("kzdfiv", model.value().get(0).resourceType());
        Assertions.assertEquals("jybsrwz", model.value().get(0).osType());
        Assertions.assertEquals(15.651335960720814D, model.value().get(0).multiplier());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BillingMeterCollection model
            = new BillingMeterCollection().withValue(Arrays.asList(new BillingMeterInner().withKind("xdhmfp")
                .withMeterId("k")
                .withBillingLocation("dpwjcbhaahntof")
                .withShortName("fh")
                .withFriendlyName("ixo")
                .withResourceType("kzdfiv")
                .withOsType("jybsrwz")
                .withMultiplier(15.651335960720814D)));
        model = BinaryData.fromObject(model).toObject(BillingMeterCollection.class);
        Assertions.assertEquals("xdhmfp", model.value().get(0).kind());
        Assertions.assertEquals("k", model.value().get(0).meterId());
        Assertions.assertEquals("dpwjcbhaahntof", model.value().get(0).billingLocation());
        Assertions.assertEquals("fh", model.value().get(0).shortName());
        Assertions.assertEquals("ixo", model.value().get(0).friendlyName());
        Assertions.assertEquals("kzdfiv", model.value().get(0).resourceType());
        Assertions.assertEquals("jybsrwz", model.value().get(0).osType());
        Assertions.assertEquals(15.651335960720814D, model.value().get(0).multiplier());
    }
}
