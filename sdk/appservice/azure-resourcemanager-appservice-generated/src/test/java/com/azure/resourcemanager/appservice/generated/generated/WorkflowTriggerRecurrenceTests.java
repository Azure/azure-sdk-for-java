// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.DayOfWeek;
import com.azure.resourcemanager.appservice.generated.models.DaysOfWeek;
import com.azure.resourcemanager.appservice.generated.models.RecurrenceFrequency;
import com.azure.resourcemanager.appservice.generated.models.RecurrenceSchedule;
import com.azure.resourcemanager.appservice.generated.models.RecurrenceScheduleOccurrence;
import com.azure.resourcemanager.appservice.generated.models.WorkflowTriggerRecurrence;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkflowTriggerRecurrenceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkflowTriggerRecurrence model = BinaryData.fromString(
            "{\"frequency\":\"Month\",\"interval\":659116876,\"startTime\":\"xvtnohsym\",\"endTime\":\"irfzvtzr\",\"timeZone\":\"ilipmuu\",\"schedule\":{\"minutes\":[360222924],\"hours\":[142187662,1898404264,1760868602,1357696903],\"weekDays\":[\"Friday\"],\"monthDays\":[1570605498],\"monthlyOccurrences\":[{\"day\":\"Sunday\",\"occurrence\":1073647256}]}}")
            .toObject(WorkflowTriggerRecurrence.class);
        Assertions.assertEquals(RecurrenceFrequency.MONTH, model.frequency());
        Assertions.assertEquals(659116876, model.interval());
        Assertions.assertEquals("xvtnohsym", model.startTime());
        Assertions.assertEquals("irfzvtzr", model.endTime());
        Assertions.assertEquals("ilipmuu", model.timeZone());
        Assertions.assertEquals(360222924, model.schedule().minutes().get(0));
        Assertions.assertEquals(142187662, model.schedule().hours().get(0));
        Assertions.assertEquals(DaysOfWeek.FRIDAY, model.schedule().weekDays().get(0));
        Assertions.assertEquals(1570605498, model.schedule().monthDays().get(0));
        Assertions.assertEquals(DayOfWeek.SUNDAY, model.schedule().monthlyOccurrences().get(0).day());
        Assertions.assertEquals(1073647256, model.schedule().monthlyOccurrences().get(0).occurrence());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkflowTriggerRecurrence model = new WorkflowTriggerRecurrence().withFrequency(RecurrenceFrequency.MONTH)
            .withInterval(659116876)
            .withStartTime("xvtnohsym")
            .withEndTime("irfzvtzr")
            .withTimeZone("ilipmuu")
            .withSchedule(new RecurrenceSchedule().withMinutes(Arrays.asList(360222924))
                .withHours(Arrays.asList(142187662, 1898404264, 1760868602, 1357696903))
                .withWeekDays(Arrays.asList(DaysOfWeek.FRIDAY))
                .withMonthDays(Arrays.asList(1570605498))
                .withMonthlyOccurrences(Arrays
                    .asList(new RecurrenceScheduleOccurrence().withDay(DayOfWeek.SUNDAY).withOccurrence(1073647256))));
        model = BinaryData.fromObject(model).toObject(WorkflowTriggerRecurrence.class);
        Assertions.assertEquals(RecurrenceFrequency.MONTH, model.frequency());
        Assertions.assertEquals(659116876, model.interval());
        Assertions.assertEquals("xvtnohsym", model.startTime());
        Assertions.assertEquals("irfzvtzr", model.endTime());
        Assertions.assertEquals("ilipmuu", model.timeZone());
        Assertions.assertEquals(360222924, model.schedule().minutes().get(0));
        Assertions.assertEquals(142187662, model.schedule().hours().get(0));
        Assertions.assertEquals(DaysOfWeek.FRIDAY, model.schedule().weekDays().get(0));
        Assertions.assertEquals(1570605498, model.schedule().monthDays().get(0));
        Assertions.assertEquals(DayOfWeek.SUNDAY, model.schedule().monthlyOccurrences().get(0).day());
        Assertions.assertEquals(1073647256, model.schedule().monthlyOccurrences().get(0).occurrence());
    }
}
