// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.CsmUsageQuotaInner;
import com.azure.resourcemanager.appservice.generated.models.CsmUsageQuotaCollection;
import com.azure.resourcemanager.appservice.generated.models.LocalizableString;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CsmUsageQuotaCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CsmUsageQuotaCollection model = BinaryData.fromString(
            "{\"value\":[{\"unit\":\"b\",\"nextResetTime\":\"2021-06-29T06:55:50Z\",\"currentValue\":5798582298052723687,\"limit\":9162795145250092986,\"name\":{\"value\":\"nqbpi\",\"localizedValue\":\"qltgrd\"}},{\"unit\":\"ypxrx\",\"nextResetTime\":\"2021-10-07T01:57:35Z\",\"currentValue\":202042293139479562,\"limit\":5611913419051506898,\"name\":{\"value\":\"a\",\"localizedValue\":\"rbxrblmliowxihsp\"}}],\"nextLink\":\"wqagnepzwa\"}")
            .toObject(CsmUsageQuotaCollection.class);
        Assertions.assertEquals("b", model.value().get(0).unit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-29T06:55:50Z"), model.value().get(0).nextResetTime());
        Assertions.assertEquals(5798582298052723687L, model.value().get(0).currentValue());
        Assertions.assertEquals(9162795145250092986L, model.value().get(0).limit());
        Assertions.assertEquals("nqbpi", model.value().get(0).name().value());
        Assertions.assertEquals("qltgrd", model.value().get(0).name().localizedValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CsmUsageQuotaCollection model = new CsmUsageQuotaCollection().withValue(Arrays.asList(
            new CsmUsageQuotaInner().withUnit("b")
                .withNextResetTime(OffsetDateTime.parse("2021-06-29T06:55:50Z"))
                .withCurrentValue(5798582298052723687L)
                .withLimit(9162795145250092986L)
                .withName(new LocalizableString().withValue("nqbpi").withLocalizedValue("qltgrd")),
            new CsmUsageQuotaInner().withUnit("ypxrx")
                .withNextResetTime(OffsetDateTime.parse("2021-10-07T01:57:35Z"))
                .withCurrentValue(202042293139479562L)
                .withLimit(5611913419051506898L)
                .withName(new LocalizableString().withValue("a").withLocalizedValue("rbxrblmliowxihsp"))));
        model = BinaryData.fromObject(model).toObject(CsmUsageQuotaCollection.class);
        Assertions.assertEquals("b", model.value().get(0).unit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-29T06:55:50Z"), model.value().get(0).nextResetTime());
        Assertions.assertEquals(5798582298052723687L, model.value().get(0).currentValue());
        Assertions.assertEquals(9162795145250092986L, model.value().get(0).limit());
        Assertions.assertEquals("nqbpi", model.value().get(0).name().value());
        Assertions.assertEquals("qltgrd", model.value().get(0).name().localizedValue());
    }
}
