// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.StaticSiteLinkedBackendArmResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StaticSitesGetLinkedBackendsMockTests {
    @Test
    public void testGetLinkedBackends() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"backendResourceId\":\"zymljgay\",\"region\":\"qwnkxoqecjznuqg\",\"createdOn\":\"2021-04-22T12:04:10Z\",\"provisioningState\":\"uewshh\"},\"kind\":\"jvchliezfb\",\"id\":\"czzjfzjovwizjrak\",\"name\":\"ahwqpuklt\",\"type\":\"knroxmisnbzczpf\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<StaticSiteLinkedBackendArmResource> response
            = manager.staticSites().getLinkedBackends("tnbk", "xdafilaizcd", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("jvchliezfb", response.iterator().next().kind());
        Assertions.assertEquals("zymljgay", response.iterator().next().backendResourceId());
        Assertions.assertEquals("qwnkxoqecjznuqg", response.iterator().next().region());
    }
}
