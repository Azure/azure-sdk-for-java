// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.DetectorResponse;
import com.azure.resourcemanager.appservice.generated.models.InsightStatus;
import com.azure.resourcemanager.appservice.generated.models.RenderingType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CertificateOrdersDiagnosticsGetAppServiceCertificateOrderDetectorResponseWithResponseMockTests {
    @Test
    public void testGetAppServiceCertificateOrderDetectorResponseWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"metadata\":{\"id\":\"zdvokxuyhhrdi\",\"name\":\"bqeahgsibldxyaq\",\"description\":\"aznz\",\"author\":\"zfhh\",\"category\":\"yxkgnrya\",\"supportTopicList\":[{\"id\":\"xauihnb\",\"pesId\":\"hkdwyehqnxuffgj\"},{\"id\":\"minhvdkqigppdqsq\",\"pesId\":\"p\"},{\"id\":\"axthuhuruo\",\"pesId\":\"yotapstkdbn\"}],\"analysisType\":[\"cuzexoymfkumbysg\",\"qzpgrv\",\"agyphlfr\"],\"type\":\"Analysis\",\"score\":62.121773},\"dataset\":[{\"table\":{\"tableName\":\"kfenmiflky\",\"columns\":[{},{},{}],\"rows\":[[],[],[]]},\"renderingProperties\":{\"type\":\"Solution\",\"title\":\"supilhxtablilyoo\",\"description\":\"sejisydhardxnklu\"}},{\"table\":{\"tableName\":\"fglftlqa\",\"columns\":[{},{},{},{}],\"rows\":[[],[],[],[]]},\"renderingProperties\":{\"type\":\"AppInsight\",\"title\":\"bjxewcscuvelj\",\"description\":\"rinufziztgddahym\"}},{\"table\":{\"tableName\":\"jtdhmig\",\"columns\":[{},{},{},{}],\"rows\":[[],[]]},\"renderingProperties\":{\"type\":\"NoGraph\",\"title\":\"nylsijqy\",\"description\":\"fshdaehxv\"}}],\"status\":{\"message\":\"dsafgkysymh\",\"statusId\":\"Info\"},\"dataProvidersMetadata\":[{\"providerName\":\"lbpegcetezaa\",\"propertyBag\":[{},{}]},{\"providerName\":\"rbttzsqey\",\"propertyBag\":[{},{},{},{}]},{\"providerName\":\"fgoyxxszpaiecurf\",\"propertyBag\":[{},{},{},{}]},{\"providerName\":\"hfmgiixurveekhsm\",\"propertyBag\":[{},{},{}]}],\"suggestedUtterances\":{\"query\":\"woefk\",\"results\":[{\"sampleUtterance\":{},\"score\":64.40254}]}},\"kind\":\"whcyc\",\"id\":\"ekmufipygtmoy\",\"name\":\"potmaosongt\",\"type\":\"hvhsqvubwwqg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DetectorResponse response = manager.certificateOrdersDiagnostics()
            .getAppServiceCertificateOrderDetectorResponseWithResponse("vgotbjnxozi", "txnpovflxl", "vms",
                OffsetDateTime.parse("2021-06-30T23:02:42Z"), OffsetDateTime.parse("2021-12-10T06:15:39Z"), "supnx",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("whcyc", response.kind());
        Assertions.assertEquals("kfenmiflky", response.dataset().get(0).table().tableName());
        Assertions.assertEquals(RenderingType.SOLUTION, response.dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("supilhxtablilyoo", response.dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("sejisydhardxnklu", response.dataset().get(0).renderingProperties().description());
        Assertions.assertEquals("dsafgkysymh", response.status().message());
        Assertions.assertEquals(InsightStatus.INFO, response.status().statusId());
        Assertions.assertEquals("lbpegcetezaa", response.dataProvidersMetadata().get(0).providerName());
        Assertions.assertEquals("woefk", response.suggestedUtterances().query());
        Assertions.assertEquals(64.40254F, response.suggestedUtterances().results().get(0).score());
    }
}
