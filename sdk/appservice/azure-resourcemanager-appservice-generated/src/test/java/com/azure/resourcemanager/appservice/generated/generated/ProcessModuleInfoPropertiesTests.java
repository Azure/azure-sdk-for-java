// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.ProcessModuleInfoProperties;
import org.junit.jupiter.api.Assertions;

public final class ProcessModuleInfoPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProcessModuleInfoProperties model = BinaryData.fromString(
            "{\"base_address\":\"dzl\",\"file_name\":\"natb\",\"href\":\"lpgfygenfak\",\"file_path\":\"epsihzqieo\",\"module_memory_size\":909690885,\"file_version\":\"gl\",\"file_description\":\"sfgb\",\"product\":\"tsaz\",\"product_version\":\"cxlubrukhq\",\"is_debug\":true,\"language\":\"rbdkgqdmvvvj\"}")
            .toObject(ProcessModuleInfoProperties.class);
        Assertions.assertEquals("dzl", model.baseAddress());
        Assertions.assertEquals("natb", model.fileName());
        Assertions.assertEquals("lpgfygenfak", model.href());
        Assertions.assertEquals("epsihzqieo", model.filePath());
        Assertions.assertEquals(909690885, model.moduleMemorySize());
        Assertions.assertEquals("gl", model.fileVersion());
        Assertions.assertEquals("sfgb", model.fileDescription());
        Assertions.assertEquals("tsaz", model.product());
        Assertions.assertEquals("cxlubrukhq", model.productVersion());
        Assertions.assertEquals(true, model.isDebug());
        Assertions.assertEquals("rbdkgqdmvvvj", model.language());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProcessModuleInfoProperties model = new ProcessModuleInfoProperties().withBaseAddress("dzl")
            .withFileName("natb")
            .withHref("lpgfygenfak")
            .withFilePath("epsihzqieo")
            .withModuleMemorySize(909690885)
            .withFileVersion("gl")
            .withFileDescription("sfgb")
            .withProduct("tsaz")
            .withProductVersion("cxlubrukhq")
            .withIsDebug(true)
            .withLanguage("rbdkgqdmvvvj");
        model = BinaryData.fromObject(model).toObject(ProcessModuleInfoProperties.class);
        Assertions.assertEquals("dzl", model.baseAddress());
        Assertions.assertEquals("natb", model.fileName());
        Assertions.assertEquals("lpgfygenfak", model.href());
        Assertions.assertEquals("epsihzqieo", model.filePath());
        Assertions.assertEquals(909690885, model.moduleMemorySize());
        Assertions.assertEquals("gl", model.fileVersion());
        Assertions.assertEquals("sfgb", model.fileDescription());
        Assertions.assertEquals("tsaz", model.product());
        Assertions.assertEquals("cxlubrukhq", model.productVersion());
        Assertions.assertEquals(true, model.isDebug());
        Assertions.assertEquals("rbdkgqdmvvvj", model.language());
    }
}
