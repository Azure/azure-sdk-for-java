// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.ComputeModeOptions;
import com.azure.resourcemanager.appservice.generated.models.WorkerPoolResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AppServiceEnvironmentsListWorkerPoolsMockTests {
    @Test
    public void testListWorkerPools() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"workerSizeId\":1667830094,\"computeMode\":\"Dedicated\",\"workerSize\":\"mnmkypeqmuue\",\"workerCount\":1830741894,\"instanceNames\":[\"ulavxeaymfl\",\"hw\",\"funptsryp\"]},\"sku\":{\"name\":\"kbwbxvs\",\"tier\":\"bxcjubaddlm\",\"size\":\"ulio\",\"family\":\"cnnthluzeyv\",\"capacity\":1405337515,\"skuCapacity\":{\"minimum\":1503645673,\"maximum\":966641714,\"elasticMaximum\":392229001,\"default\":1793768835,\"scaleType\":\"asuwep\"},\"locations\":[\"tytbycc\"],\"capabilities\":[{\"name\":\"tfqffwvnjg\",\"value\":\"ykshizwdswikyewv\",\"reason\":\"zwqzwsgui\"},{\"name\":\"qemeft\",\"value\":\"jrfk\",\"reason\":\"c\"},{\"name\":\"elokxklgl\",\"value\":\"regjo\",\"reason\":\"n\"},{\"name\":\"sbmvrmenrcqi\",\"value\":\"hvps\",\"reason\":\"uiuvingmonq\"}]},\"kind\":\"tyuqdz\",\"id\":\"yojzvaykfjgakays\",\"name\":\"kydqy\",\"type\":\"zwm\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<WorkerPoolResource> response = manager.appServiceEnvironments()
            .listWorkerPools("lgspzoafprz", "vhohzkcs", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("tyuqdz", response.iterator().next().kind());
        Assertions.assertEquals("kbwbxvs", response.iterator().next().sku().name());
        Assertions.assertEquals("bxcjubaddlm", response.iterator().next().sku().tier());
        Assertions.assertEquals("ulio", response.iterator().next().sku().size());
        Assertions.assertEquals("cnnthluzeyv", response.iterator().next().sku().family());
        Assertions.assertEquals(1405337515, response.iterator().next().sku().capacity());
        Assertions.assertEquals(1503645673, response.iterator().next().sku().skuCapacity().minimum());
        Assertions.assertEquals(966641714, response.iterator().next().sku().skuCapacity().maximum());
        Assertions.assertEquals(392229001, response.iterator().next().sku().skuCapacity().elasticMaximum());
        Assertions.assertEquals(1793768835, response.iterator().next().sku().skuCapacity().defaultProperty());
        Assertions.assertEquals("asuwep", response.iterator().next().sku().skuCapacity().scaleType());
        Assertions.assertEquals("tytbycc", response.iterator().next().sku().locations().get(0));
        Assertions.assertEquals("tfqffwvnjg", response.iterator().next().sku().capabilities().get(0).name());
        Assertions.assertEquals("ykshizwdswikyewv", response.iterator().next().sku().capabilities().get(0).value());
        Assertions.assertEquals("zwqzwsgui", response.iterator().next().sku().capabilities().get(0).reason());
        Assertions.assertEquals(1667830094, response.iterator().next().workerSizeId());
        Assertions.assertEquals(ComputeModeOptions.DEDICATED, response.iterator().next().computeMode());
        Assertions.assertEquals("mnmkypeqmuue", response.iterator().next().workerSize());
        Assertions.assertEquals(1830741894, response.iterator().next().workerCount());
    }
}
