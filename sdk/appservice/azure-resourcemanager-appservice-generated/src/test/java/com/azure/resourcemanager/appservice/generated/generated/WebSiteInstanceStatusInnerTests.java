// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.WebSiteInstanceStatusInner;
import com.azure.resourcemanager.appservice.generated.models.ContainerCpuStatistics;
import com.azure.resourcemanager.appservice.generated.models.ContainerCpuUsage;
import com.azure.resourcemanager.appservice.generated.models.ContainerInfo;
import com.azure.resourcemanager.appservice.generated.models.ContainerMemoryStatistics;
import com.azure.resourcemanager.appservice.generated.models.ContainerNetworkInterfaceStatistics;
import com.azure.resourcemanager.appservice.generated.models.ContainerThrottlingData;
import com.azure.resourcemanager.appservice.generated.models.SiteRuntimeState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class WebSiteInstanceStatusInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WebSiteInstanceStatusInner model = BinaryData.fromString(
            "{\"properties\":{\"state\":\"STOPPED\",\"statusUrl\":\"urxrjwyz\",\"detectorUrl\":\"eitqmlz\",\"consoleUrl\":\"tbdzqaj\",\"healthCheckUrl\":\"mpebfhlgeeh\",\"containers\":{\"rwuhvvzfznfgpbc\":{\"currentTimeStamp\":\"2021-09-26T14:43:26Z\",\"previousTimeStamp\":\"2021-08-17T14:32:31Z\",\"currentCpuStats\":{\"cpuUsage\":{\"totalUsage\":169636203050241742,\"perCpuUsage\":[3506284882721840177,7202722252324181902],\"kernelModeUsage\":837095294498015178,\"userModeUsage\":6352073803192700985},\"systemCpuUsage\":8147721031362020072,\"onlineCpuCount\":915254261,\"throttlingData\":{\"periods\":185442539,\"throttledPeriods\":142851991,\"throttledTime\":1977163840}},\"previousCpuStats\":{\"cpuUsage\":{\"totalUsage\":135526409776834696,\"perCpuUsage\":[4847614276277271046],\"kernelModeUsage\":535728081698400488,\"userModeUsage\":8257594965847081070},\"systemCpuUsage\":3125492999683736346,\"onlineCpuCount\":1300295625,\"throttlingData\":{\"periods\":1491940212,\"throttledPeriods\":1355408466,\"throttledTime\":2034905985}},\"memoryStats\":{\"usage\":5584625053464436259,\"maxUsage\":6494087680238167768,\"limit\":6174509194338203298},\"name\":\"rwn\",\"id\":\"gdwq\",\"eth0\":{\"rxBytes\":1844210300753092892,\"rxPackets\":5066461743638817577,\"rxErrors\":2409694262290086699,\"rxDropped\":5202105265721135231,\"txBytes\":6558632091841554348,\"txPackets\":4837713605200595416,\"txErrors\":3407197691207282493,\"txDropped\":8133505788967742241}},\"azkmqfwbgdmfv\":{\"currentTimeStamp\":\"2020-12-23T14:09:20Z\",\"previousTimeStamp\":\"2021-04-24T01:54:11Z\",\"currentCpuStats\":{\"cpuUsage\":{\"totalUsage\":6848161550182447974,\"perCpuUsage\":[8049091991641971536,6798353600222682934,8564831692060561788],\"kernelModeUsage\":2598852218601764927,\"userModeUsage\":2214501922534637045},\"systemCpuUsage\":793968500201833914,\"onlineCpuCount\":262986812,\"throttlingData\":{\"periods\":1176950935,\"throttledPeriods\":675331957,\"throttledTime\":1842549987}},\"previousCpuStats\":{\"cpuUsage\":{\"totalUsage\":9141974708797539449,\"perCpuUsage\":[6064539981932435101,8774176010733045980,3169754136366251542,843735323918696105],\"kernelModeUsage\":3584807107992406765,\"userModeUsage\":1344668808835507694},\"systemCpuUsage\":5431071425764460409,\"onlineCpuCount\":1881443883,\"throttlingData\":{\"periods\":2010377507,\"throttledPeriods\":2681851,\"throttledTime\":127820982}},\"memoryStats\":{\"usage\":3147095455085218888,\"maxUsage\":2432759357818908960,\"limit\":1259001414173389241},\"name\":\"ugpeametsdwx\",\"id\":\"m\",\"eth0\":{\"rxBytes\":6866064342416640077,\"rxPackets\":8536225687021992625,\"rxErrors\":2315330407514569462,\"rxDropped\":2963002467047317730,\"txBytes\":4234138549691132996,\"txPackets\":5145712838206952820,\"txErrors\":7015145916681349906,\"txDropped\":3200490664649768833}},\"iqtuzwbkqc\":{\"currentTimeStamp\":\"2021-07-16T03:59:59Z\",\"previousTimeStamp\":\"2021-10-09T02:45:56Z\",\"currentCpuStats\":{\"cpuUsage\":{\"totalUsage\":8746673088335513886,\"perCpuUsage\":[3800873292989638917,4100473040855893703,2063318571143933646],\"kernelModeUsage\":7562447806960758737,\"userModeUsage\":2525945373289464326},\"systemCpuUsage\":8526993548228031757,\"onlineCpuCount\":1839662707,\"throttlingData\":{\"periods\":1508647734,\"throttledPeriods\":1849726402,\"throttledTime\":209505883}},\"previousCpuStats\":{\"cpuUsage\":{\"totalUsage\":2386191404567686629,\"perCpuUsage\":[8828918578288000557],\"kernelModeUsage\":6409097066361003252,\"userModeUsage\":4048550223002602903},\"systemCpuUsage\":8098194840763481434,\"onlineCpuCount\":1289331107,\"throttlingData\":{\"periods\":1883727777,\"throttledPeriods\":1318585962,\"throttledTime\":92470771}},\"memoryStats\":{\"usage\":4733101094912594054,\"maxUsage\":1510181395433106251,\"limit\":6491897343797872427},\"name\":\"pfcyatbxd\",\"id\":\"vy\",\"eth0\":{\"rxBytes\":8028104971994697617,\"rxPackets\":3314589117804465114,\"rxErrors\":763772469429359759,\"rxDropped\":5526880262413744164,\"txBytes\":4391882798242124655,\"txPackets\":4817421261359875737,\"txErrors\":8187834475253253631,\"txDropped\":6734826295829159811}},\"sfhqsacjqzr\":{\"currentTimeStamp\":\"2021-06-05T06:23:35Z\",\"previousTimeStamp\":\"2021-07-17T14:25:26Z\",\"currentCpuStats\":{\"cpuUsage\":{\"totalUsage\":5836207271384895631,\"perCpuUsage\":[8819827141294750715,5233990388782542811,4350156764923347387,6266224830404313728],\"kernelModeUsage\":745584743920523849,\"userModeUsage\":4651519475081335230},\"systemCpuUsage\":5631267544025723873,\"onlineCpuCount\":249111569,\"throttlingData\":{\"periods\":728772201,\"throttledPeriods\":362690319,\"throttledTime\":1618409559}},\"previousCpuStats\":{\"cpuUsage\":{\"totalUsage\":5220536334850634153,\"perCpuUsage\":[3900300158965689546,4446290316486949615,2676900032254960861,3758347143982487285],\"kernelModeUsage\":6026401155385351244,\"userModeUsage\":3734009925902287724},\"systemCpuUsage\":3453420012432405266,\"onlineCpuCount\":523058636,\"throttlingData\":{\"periods\":1705958504,\"throttledPeriods\":1422559782,\"throttledTime\":486056824}},\"memoryStats\":{\"usage\":6311121740651946983,\"maxUsage\":4654711786970760835,\"limit\":8264896015080464157},\"name\":\"bodvdgfuakqs\",\"id\":\"mcfvvzceuy\",\"eth0\":{\"rxBytes\":1347867049635517175,\"rxPackets\":3071806347019680870,\"rxErrors\":1106436931795201938,\"rxDropped\":7205033391396636523,\"txBytes\":1497729680755649575,\"txPackets\":4182262842140855624,\"txErrors\":9164416647011888599,\"txDropped\":7087242863511584952}}}},\"kind\":\"fwcbawapndmtq\",\"id\":\"mkmzvag\",\"name\":\"xfblsxyfq\",\"type\":\"todgkllefmizdcsr\"}")
            .toObject(WebSiteInstanceStatusInner.class);
        Assertions.assertEquals("fwcbawapndmtq", model.kind());
        Assertions.assertEquals(SiteRuntimeState.STOPPED, model.state());
        Assertions.assertEquals("urxrjwyz", model.statusUrl());
        Assertions.assertEquals("eitqmlz", model.detectorUrl());
        Assertions.assertEquals("tbdzqaj", model.consoleUrl());
        Assertions.assertEquals("mpebfhlgeeh", model.healthCheckUrl());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-26T14:43:26Z"),
            model.containers().get("rwuhvvzfznfgpbc").currentTimestamp());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T14:32:31Z"),
            model.containers().get("rwuhvvzfznfgpbc").previousTimestamp());
        Assertions.assertEquals(169636203050241742L,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().cpuUsage().totalUsage());
        Assertions.assertEquals(3506284882721840177L,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().cpuUsage().perCpuUsage().get(0));
        Assertions.assertEquals(837095294498015178L,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().cpuUsage().kernelModeUsage());
        Assertions.assertEquals(6352073803192700985L,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().cpuUsage().userModeUsage());
        Assertions.assertEquals(8147721031362020072L,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().systemCpuUsage());
        Assertions.assertEquals(915254261,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().onlineCpuCount());
        Assertions.assertEquals(185442539,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().throttlingData().periods());
        Assertions.assertEquals(142851991,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().throttlingData().throttledPeriods());
        Assertions.assertEquals(1977163840,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().throttlingData().throttledTime());
        Assertions.assertEquals(135526409776834696L,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().cpuUsage().totalUsage());
        Assertions.assertEquals(4847614276277271046L,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().cpuUsage().perCpuUsage().get(0));
        Assertions.assertEquals(535728081698400488L,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().cpuUsage().kernelModeUsage());
        Assertions.assertEquals(8257594965847081070L,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().cpuUsage().userModeUsage());
        Assertions.assertEquals(3125492999683736346L,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().systemCpuUsage());
        Assertions.assertEquals(1300295625,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().onlineCpuCount());
        Assertions.assertEquals(1491940212,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().throttlingData().periods());
        Assertions.assertEquals(1355408466,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().throttlingData().throttledPeriods());
        Assertions.assertEquals(2034905985,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().throttlingData().throttledTime());
        Assertions.assertEquals(5584625053464436259L, model.containers().get("rwuhvvzfznfgpbc").memoryStats().usage());
        Assertions.assertEquals(6494087680238167768L,
            model.containers().get("rwuhvvzfznfgpbc").memoryStats().maxUsage());
        Assertions.assertEquals(6174509194338203298L, model.containers().get("rwuhvvzfznfgpbc").memoryStats().limit());
        Assertions.assertEquals("rwn", model.containers().get("rwuhvvzfznfgpbc").name());
        Assertions.assertEquals("gdwq", model.containers().get("rwuhvvzfznfgpbc").id());
        Assertions.assertEquals(1844210300753092892L, model.containers().get("rwuhvvzfznfgpbc").eth0().rxBytes());
        Assertions.assertEquals(5066461743638817577L, model.containers().get("rwuhvvzfznfgpbc").eth0().rxPackets());
        Assertions.assertEquals(2409694262290086699L, model.containers().get("rwuhvvzfznfgpbc").eth0().rxErrors());
        Assertions.assertEquals(5202105265721135231L, model.containers().get("rwuhvvzfznfgpbc").eth0().rxDropped());
        Assertions.assertEquals(6558632091841554348L, model.containers().get("rwuhvvzfznfgpbc").eth0().txBytes());
        Assertions.assertEquals(4837713605200595416L, model.containers().get("rwuhvvzfznfgpbc").eth0().txPackets());
        Assertions.assertEquals(3407197691207282493L, model.containers().get("rwuhvvzfznfgpbc").eth0().txErrors());
        Assertions.assertEquals(8133505788967742241L, model.containers().get("rwuhvvzfznfgpbc").eth0().txDropped());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WebSiteInstanceStatusInner model
            = new WebSiteInstanceStatusInner().withKind("fwcbawapndmtq")
                .withState(SiteRuntimeState.STOPPED)
                .withStatusUrl("urxrjwyz")
                .withDetectorUrl("eitqmlz")
                .withConsoleUrl("tbdzqaj")
                .withHealthCheckUrl("mpebfhlgeeh")
                .withContainers(
                    mapOf("rwuhvvzfznfgpbc",
                        new ContainerInfo().withCurrentTimestamp(OffsetDateTime.parse("2021-09-26T14:43:26Z"))
                            .withPreviousTimestamp(OffsetDateTime.parse("2021-08-17T14:32:31Z"))
                            .withCurrentCpuStats(new ContainerCpuStatistics()
                                .withCpuUsage(new ContainerCpuUsage().withTotalUsage(169636203050241742L)
                                    .withPerCpuUsage(Arrays.asList(3506284882721840177L, 7202722252324181902L))
                                    .withKernelModeUsage(837095294498015178L)
                                    .withUserModeUsage(6352073803192700985L))
                                .withSystemCpuUsage(8147721031362020072L)
                                .withOnlineCpuCount(915254261)
                                .withThrottlingData(new ContainerThrottlingData().withPeriods(185442539)
                                    .withThrottledPeriods(142851991)
                                    .withThrottledTime(1977163840)))
                            .withPreviousCpuStats(new ContainerCpuStatistics()
                                .withCpuUsage(new ContainerCpuUsage().withTotalUsage(135526409776834696L)
                                    .withPerCpuUsage(Arrays.asList(4847614276277271046L))
                                    .withKernelModeUsage(535728081698400488L)
                                    .withUserModeUsage(8257594965847081070L))
                                .withSystemCpuUsage(3125492999683736346L)
                                .withOnlineCpuCount(1300295625)
                                .withThrottlingData(new ContainerThrottlingData().withPeriods(1491940212)
                                    .withThrottledPeriods(1355408466)
                                    .withThrottledTime(2034905985)))
                            .withMemoryStats(new ContainerMemoryStatistics().withUsage(5584625053464436259L)
                                .withMaxUsage(6494087680238167768L)
                                .withLimit(6174509194338203298L))
                            .withName("rwn")
                            .withId("gdwq")
                            .withEth0(new ContainerNetworkInterfaceStatistics().withRxBytes(1844210300753092892L)
                                .withRxPackets(5066461743638817577L)
                                .withRxErrors(2409694262290086699L)
                                .withRxDropped(5202105265721135231L)
                                .withTxBytes(6558632091841554348L)
                                .withTxPackets(4837713605200595416L)
                                .withTxErrors(3407197691207282493L)
                                .withTxDropped(8133505788967742241L)),
                        "azkmqfwbgdmfv",
                        new ContainerInfo().withCurrentTimestamp(OffsetDateTime.parse("2020-12-23T14:09:20Z"))
                            .withPreviousTimestamp(OffsetDateTime.parse("2021-04-24T01:54:11Z"))
                            .withCurrentCpuStats(
                                new ContainerCpuStatistics()
                                    .withCpuUsage(new ContainerCpuUsage().withTotalUsage(6848161550182447974L)
                                        .withPerCpuUsage(Arrays.asList(8049091991641971536L, 6798353600222682934L,
                                            8564831692060561788L))
                                        .withKernelModeUsage(2598852218601764927L)
                                        .withUserModeUsage(2214501922534637045L))
                                    .withSystemCpuUsage(793968500201833914L)
                                    .withOnlineCpuCount(262986812)
                                    .withThrottlingData(new ContainerThrottlingData().withPeriods(1176950935)
                                        .withThrottledPeriods(675331957)
                                        .withThrottledTime(1842549987)))
                            .withPreviousCpuStats(new ContainerCpuStatistics()
                                .withCpuUsage(new ContainerCpuUsage().withTotalUsage(9141974708797539449L)
                                    .withPerCpuUsage(Arrays.asList(6064539981932435101L, 8774176010733045980L,
                                        3169754136366251542L, 843735323918696105L))
                                    .withKernelModeUsage(3584807107992406765L)
                                    .withUserModeUsage(1344668808835507694L))
                                .withSystemCpuUsage(5431071425764460409L)
                                .withOnlineCpuCount(1881443883)
                                .withThrottlingData(new ContainerThrottlingData().withPeriods(2010377507)
                                    .withThrottledPeriods(2681851)
                                    .withThrottledTime(127820982)))
                            .withMemoryStats(new ContainerMemoryStatistics().withUsage(3147095455085218888L)
                                .withMaxUsage(2432759357818908960L)
                                .withLimit(1259001414173389241L))
                            .withName("ugpeametsdwx")
                            .withId("m")
                            .withEth0(new ContainerNetworkInterfaceStatistics().withRxBytes(6866064342416640077L)
                                .withRxPackets(8536225687021992625L)
                                .withRxErrors(2315330407514569462L)
                                .withRxDropped(2963002467047317730L)
                                .withTxBytes(4234138549691132996L)
                                .withTxPackets(5145712838206952820L)
                                .withTxErrors(7015145916681349906L)
                                .withTxDropped(3200490664649768833L)),
                        "iqtuzwbkqc",
                        new ContainerInfo().withCurrentTimestamp(OffsetDateTime.parse("2021-07-16T03:59:59Z"))
                            .withPreviousTimestamp(OffsetDateTime.parse("2021-10-09T02:45:56Z"))
                            .withCurrentCpuStats(
                                new ContainerCpuStatistics()
                                    .withCpuUsage(new ContainerCpuUsage().withTotalUsage(8746673088335513886L)
                                        .withPerCpuUsage(Arrays.asList(3800873292989638917L, 4100473040855893703L,
                                            2063318571143933646L))
                                        .withKernelModeUsage(7562447806960758737L)
                                        .withUserModeUsage(2525945373289464326L))
                                    .withSystemCpuUsage(8526993548228031757L)
                                    .withOnlineCpuCount(1839662707)
                                    .withThrottlingData(new ContainerThrottlingData().withPeriods(1508647734)
                                        .withThrottledPeriods(1849726402)
                                        .withThrottledTime(209505883)))
                            .withPreviousCpuStats(new ContainerCpuStatistics()
                                .withCpuUsage(new ContainerCpuUsage().withTotalUsage(2386191404567686629L)
                                    .withPerCpuUsage(Arrays.asList(8828918578288000557L))
                                    .withKernelModeUsage(6409097066361003252L)
                                    .withUserModeUsage(4048550223002602903L))
                                .withSystemCpuUsage(8098194840763481434L)
                                .withOnlineCpuCount(1289331107)
                                .withThrottlingData(new ContainerThrottlingData().withPeriods(1883727777)
                                    .withThrottledPeriods(1318585962)
                                    .withThrottledTime(92470771)))
                            .withMemoryStats(new ContainerMemoryStatistics().withUsage(4733101094912594054L)
                                .withMaxUsage(1510181395433106251L)
                                .withLimit(6491897343797872427L))
                            .withName("pfcyatbxd")
                            .withId("vy")
                            .withEth0(new ContainerNetworkInterfaceStatistics().withRxBytes(8028104971994697617L)
                                .withRxPackets(3314589117804465114L)
                                .withRxErrors(763772469429359759L)
                                .withRxDropped(5526880262413744164L)
                                .withTxBytes(4391882798242124655L)
                                .withTxPackets(4817421261359875737L)
                                .withTxErrors(8187834475253253631L)
                                .withTxDropped(6734826295829159811L)),
                        "sfhqsacjqzr",
                        new ContainerInfo().withCurrentTimestamp(OffsetDateTime.parse("2021-06-05T06:23:35Z"))
                            .withPreviousTimestamp(OffsetDateTime.parse("2021-07-17T14:25:26Z"))
                            .withCurrentCpuStats(new ContainerCpuStatistics()
                                .withCpuUsage(new ContainerCpuUsage().withTotalUsage(5836207271384895631L)
                                    .withPerCpuUsage(Arrays.asList(8819827141294750715L, 5233990388782542811L,
                                        4350156764923347387L, 6266224830404313728L))
                                    .withKernelModeUsage(745584743920523849L)
                                    .withUserModeUsage(4651519475081335230L))
                                .withSystemCpuUsage(5631267544025723873L)
                                .withOnlineCpuCount(249111569)
                                .withThrottlingData(new ContainerThrottlingData().withPeriods(728772201)
                                    .withThrottledPeriods(362690319)
                                    .withThrottledTime(1618409559)))
                            .withPreviousCpuStats(new ContainerCpuStatistics()
                                .withCpuUsage(new ContainerCpuUsage().withTotalUsage(5220536334850634153L)
                                    .withPerCpuUsage(Arrays.asList(3900300158965689546L, 4446290316486949615L,
                                        2676900032254960861L, 3758347143982487285L))
                                    .withKernelModeUsage(6026401155385351244L)
                                    .withUserModeUsage(3734009925902287724L))
                                .withSystemCpuUsage(3453420012432405266L)
                                .withOnlineCpuCount(523058636)
                                .withThrottlingData(new ContainerThrottlingData().withPeriods(1705958504)
                                    .withThrottledPeriods(1422559782)
                                    .withThrottledTime(486056824)))
                            .withMemoryStats(new ContainerMemoryStatistics().withUsage(6311121740651946983L)
                                .withMaxUsage(4654711786970760835L)
                                .withLimit(8264896015080464157L))
                            .withName("bodvdgfuakqs")
                            .withId("mcfvvzceuy")
                            .withEth0(new ContainerNetworkInterfaceStatistics().withRxBytes(1347867049635517175L)
                                .withRxPackets(3071806347019680870L)
                                .withRxErrors(1106436931795201938L)
                                .withRxDropped(7205033391396636523L)
                                .withTxBytes(1497729680755649575L)
                                .withTxPackets(4182262842140855624L)
                                .withTxErrors(9164416647011888599L)
                                .withTxDropped(7087242863511584952L))));
        model = BinaryData.fromObject(model).toObject(WebSiteInstanceStatusInner.class);
        Assertions.assertEquals("fwcbawapndmtq", model.kind());
        Assertions.assertEquals(SiteRuntimeState.STOPPED, model.state());
        Assertions.assertEquals("urxrjwyz", model.statusUrl());
        Assertions.assertEquals("eitqmlz", model.detectorUrl());
        Assertions.assertEquals("tbdzqaj", model.consoleUrl());
        Assertions.assertEquals("mpebfhlgeeh", model.healthCheckUrl());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-26T14:43:26Z"),
            model.containers().get("rwuhvvzfznfgpbc").currentTimestamp());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T14:32:31Z"),
            model.containers().get("rwuhvvzfznfgpbc").previousTimestamp());
        Assertions.assertEquals(169636203050241742L,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().cpuUsage().totalUsage());
        Assertions.assertEquals(3506284882721840177L,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().cpuUsage().perCpuUsage().get(0));
        Assertions.assertEquals(837095294498015178L,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().cpuUsage().kernelModeUsage());
        Assertions.assertEquals(6352073803192700985L,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().cpuUsage().userModeUsage());
        Assertions.assertEquals(8147721031362020072L,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().systemCpuUsage());
        Assertions.assertEquals(915254261,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().onlineCpuCount());
        Assertions.assertEquals(185442539,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().throttlingData().periods());
        Assertions.assertEquals(142851991,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().throttlingData().throttledPeriods());
        Assertions.assertEquals(1977163840,
            model.containers().get("rwuhvvzfznfgpbc").currentCpuStats().throttlingData().throttledTime());
        Assertions.assertEquals(135526409776834696L,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().cpuUsage().totalUsage());
        Assertions.assertEquals(4847614276277271046L,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().cpuUsage().perCpuUsage().get(0));
        Assertions.assertEquals(535728081698400488L,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().cpuUsage().kernelModeUsage());
        Assertions.assertEquals(8257594965847081070L,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().cpuUsage().userModeUsage());
        Assertions.assertEquals(3125492999683736346L,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().systemCpuUsage());
        Assertions.assertEquals(1300295625,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().onlineCpuCount());
        Assertions.assertEquals(1491940212,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().throttlingData().periods());
        Assertions.assertEquals(1355408466,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().throttlingData().throttledPeriods());
        Assertions.assertEquals(2034905985,
            model.containers().get("rwuhvvzfznfgpbc").previousCpuStats().throttlingData().throttledTime());
        Assertions.assertEquals(5584625053464436259L, model.containers().get("rwuhvvzfznfgpbc").memoryStats().usage());
        Assertions.assertEquals(6494087680238167768L,
            model.containers().get("rwuhvvzfznfgpbc").memoryStats().maxUsage());
        Assertions.assertEquals(6174509194338203298L, model.containers().get("rwuhvvzfznfgpbc").memoryStats().limit());
        Assertions.assertEquals("rwn", model.containers().get("rwuhvvzfznfgpbc").name());
        Assertions.assertEquals("gdwq", model.containers().get("rwuhvvzfznfgpbc").id());
        Assertions.assertEquals(1844210300753092892L, model.containers().get("rwuhvvzfznfgpbc").eth0().rxBytes());
        Assertions.assertEquals(5066461743638817577L, model.containers().get("rwuhvvzfznfgpbc").eth0().rxPackets());
        Assertions.assertEquals(2409694262290086699L, model.containers().get("rwuhvvzfznfgpbc").eth0().rxErrors());
        Assertions.assertEquals(5202105265721135231L, model.containers().get("rwuhvvzfznfgpbc").eth0().rxDropped());
        Assertions.assertEquals(6558632091841554348L, model.containers().get("rwuhvvzfznfgpbc").eth0().txBytes());
        Assertions.assertEquals(4837713605200595416L, model.containers().get("rwuhvvzfznfgpbc").eth0().txPackets());
        Assertions.assertEquals(3407197691207282493L, model.containers().get("rwuhvvzfznfgpbc").eth0().txErrors());
        Assertions.assertEquals(8133505788967742241L, model.containers().get("rwuhvvzfznfgpbc").eth0().txDropped());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
