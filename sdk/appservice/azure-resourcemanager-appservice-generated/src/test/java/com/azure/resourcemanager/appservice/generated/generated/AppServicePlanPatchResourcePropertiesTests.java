// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.AppServicePlanPatchResourceProperties;
import com.azure.resourcemanager.appservice.generated.models.HostingEnvironmentProfile;
import com.azure.resourcemanager.appservice.generated.models.KubeEnvironmentProfile;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class AppServicePlanPatchResourcePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AppServicePlanPatchResourceProperties model = BinaryData.fromString(
            "{\"workerTierName\":\"qvapcohhoucq\",\"status\":\"Pending\",\"subscription\":\"xcxzrzdcgdzben\",\"hostingEnvironmentProfile\":{\"id\":\"cawetzqddt\",\"name\":\"fljhznamtua\",\"type\":\"zwcjjncqtj\"},\"maximumNumberOfWorkers\":814110880,\"numberOfWorkers\":1502507838,\"geoRegion\":\"bgatzu\",\"perSiteScaling\":false,\"elasticScaleEnabled\":false,\"maximumElasticWorkerCount\":341006680,\"numberOfSites\":2004295081,\"isSpot\":false,\"spotExpirationTime\":\"2021-07-20T12:45:18Z\",\"freeOfferExpirationTime\":\"2021-01-16T19:45:25Z\",\"resourceGroup\":\"zlswvajqf\",\"reserved\":false,\"isXenon\":false,\"hyperV\":true,\"targetWorkerCount\":1111486350,\"targetWorkerSizeId\":1254644077,\"provisioningState\":\"Failed\",\"kubeEnvironmentProfile\":{\"id\":\"j\",\"name\":\"rg\",\"type\":\"aohcmbuocn\"},\"zoneRedundant\":false}")
            .toObject(AppServicePlanPatchResourceProperties.class);
        Assertions.assertEquals("qvapcohhoucq", model.workerTierName());
        Assertions.assertEquals("cawetzqddt", model.hostingEnvironmentProfile().id());
        Assertions.assertEquals(false, model.perSiteScaling());
        Assertions.assertEquals(false, model.elasticScaleEnabled());
        Assertions.assertEquals(341006680, model.maximumElasticWorkerCount());
        Assertions.assertEquals(false, model.isSpot());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-20T12:45:18Z"), model.spotExpirationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-16T19:45:25Z"), model.freeOfferExpirationTime());
        Assertions.assertEquals(false, model.reserved());
        Assertions.assertEquals(false, model.isXenon());
        Assertions.assertEquals(true, model.hyperV());
        Assertions.assertEquals(1111486350, model.targetWorkerCount());
        Assertions.assertEquals(1254644077, model.targetWorkerSizeId());
        Assertions.assertEquals("j", model.kubeEnvironmentProfile().id());
        Assertions.assertEquals(false, model.zoneRedundant());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AppServicePlanPatchResourceProperties model
            = new AppServicePlanPatchResourceProperties().withWorkerTierName("qvapcohhoucq")
                .withHostingEnvironmentProfile(new HostingEnvironmentProfile().withId("cawetzqddt"))
                .withPerSiteScaling(false)
                .withElasticScaleEnabled(false)
                .withMaximumElasticWorkerCount(341006680)
                .withIsSpot(false)
                .withSpotExpirationTime(OffsetDateTime.parse("2021-07-20T12:45:18Z"))
                .withFreeOfferExpirationTime(OffsetDateTime.parse("2021-01-16T19:45:25Z"))
                .withReserved(false)
                .withIsXenon(false)
                .withHyperV(true)
                .withTargetWorkerCount(1111486350)
                .withTargetWorkerSizeId(1254644077)
                .withKubeEnvironmentProfile(new KubeEnvironmentProfile().withId("j"))
                .withZoneRedundant(false);
        model = BinaryData.fromObject(model).toObject(AppServicePlanPatchResourceProperties.class);
        Assertions.assertEquals("qvapcohhoucq", model.workerTierName());
        Assertions.assertEquals("cawetzqddt", model.hostingEnvironmentProfile().id());
        Assertions.assertEquals(false, model.perSiteScaling());
        Assertions.assertEquals(false, model.elasticScaleEnabled());
        Assertions.assertEquals(341006680, model.maximumElasticWorkerCount());
        Assertions.assertEquals(false, model.isSpot());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-20T12:45:18Z"), model.spotExpirationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-16T19:45:25Z"), model.freeOfferExpirationTime());
        Assertions.assertEquals(false, model.reserved());
        Assertions.assertEquals(false, model.isXenon());
        Assertions.assertEquals(true, model.hyperV());
        Assertions.assertEquals(1111486350, model.targetWorkerCount());
        Assertions.assertEquals(1254644077, model.targetWorkerSizeId());
        Assertions.assertEquals("j", model.kubeEnvironmentProfile().id());
        Assertions.assertEquals(false, model.zoneRedundant());
    }
}
