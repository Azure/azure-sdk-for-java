// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.CapabilityInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.WorkerPoolResourceInner;
import com.azure.resourcemanager.appservice.generated.models.ComputeModeOptions;
import com.azure.resourcemanager.appservice.generated.models.SkuCapacity;
import com.azure.resourcemanager.appservice.generated.models.SkuDescription;
import com.azure.resourcemanager.appservice.generated.models.WorkerPoolResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AppServiceEnvironmentsCreateOrUpdateMultiRolePoolMockTests {
    @Test
    public void testCreateOrUpdateMultiRolePool() throws Exception {
        String responseStr
            = "{\"properties\":{\"workerSizeId\":1226497123,\"computeMode\":\"Dynamic\",\"workerSize\":\"yftvyzuyqzjfvbn\",\"workerCount\":95366465,\"instanceNames\":[\"lscyzvvsxmyzssg\",\"scqheixaz\",\"bmm\",\"a\"]},\"sku\":{\"name\":\"xwqiparctsheggt\",\"tier\":\"hokxxfawhoo\",\"size\":\"solh\",\"family\":\"mfoe\",\"capacity\":1138381767,\"skuCapacity\":{\"minimum\":302304633,\"maximum\":1576761959,\"elasticMaximum\":1554652588,\"default\":1788438030,\"scaleType\":\"ifie\"},\"locations\":[\"orsdvuirqfk\",\"jllfgmdoaihl\"],\"capabilities\":[{\"name\":\"ci\",\"value\":\"irybwgaccvwky\",\"reason\":\"mazgtbyn\"},{\"name\":\"hcawexgeqojzvu\",\"value\":\"xkojjp\",\"reason\":\"obuovsvwnpcxdk\"}]},\"kind\":\"vparyub\",\"id\":\"yhmlp\",\"name\":\"devotucnzbpocum\",\"type\":\"z\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkerPoolResource response = manager.appServiceEnvironments()
            .createOrUpdateMultiRolePool("zmxrgpp", "ajdmjunntqqguhv",
                new WorkerPoolResourceInner().withKind("gesdzgszjhe")
                    .withSku(new SkuDescription().withName("uobzz")
                        .withTier("jbyfdfuaj")
                        .withSize("p")
                        .withFamily("leku")
                        .withCapacity(949360353)
                        .withSkuCapacity(new SkuCapacity().withMinimum(1620332058)
                            .withMaximum(3619955)
                            .withElasticMaximum(814662967)
                            .withDefaultProperty(427751031)
                            .withScaleType("wxpwjv"))
                        .withLocations(Arrays.asList("loquttkb", "wgjupjbdq"))
                        .withCapabilities(Arrays.asList(
                            new CapabilityInner().withName("ajqsshupx").withValue("tnurkmerqza").withReason("womevqvv"),
                            new CapabilityInner().withName("wdlduvimgtceor").withValue("o").withReason("apafbjvbk"),
                            new CapabilityInner().withName("gzkcpt").withValue("cipy").withReason("ujgblskizprv"),
                            new CapabilityInner().withName("a").withValue("jxdrgxpuxpzslmf").withReason("pzrycchqz"))))
                    .withWorkerSizeId(1576159583)
                    .withComputeMode(ComputeModeOptions.DYNAMIC)
                    .withWorkerSize("netbzfwf")
                    .withWorkerCount(817954639),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vparyub", response.kind());
        Assertions.assertEquals("xwqiparctsheggt", response.sku().name());
        Assertions.assertEquals("hokxxfawhoo", response.sku().tier());
        Assertions.assertEquals("solh", response.sku().size());
        Assertions.assertEquals("mfoe", response.sku().family());
        Assertions.assertEquals(1138381767, response.sku().capacity());
        Assertions.assertEquals(302304633, response.sku().skuCapacity().minimum());
        Assertions.assertEquals(1576761959, response.sku().skuCapacity().maximum());
        Assertions.assertEquals(1554652588, response.sku().skuCapacity().elasticMaximum());
        Assertions.assertEquals(1788438030, response.sku().skuCapacity().defaultProperty());
        Assertions.assertEquals("ifie", response.sku().skuCapacity().scaleType());
        Assertions.assertEquals("orsdvuirqfk", response.sku().locations().get(0));
        Assertions.assertEquals("ci", response.sku().capabilities().get(0).name());
        Assertions.assertEquals("irybwgaccvwky", response.sku().capabilities().get(0).value());
        Assertions.assertEquals("mazgtbyn", response.sku().capabilities().get(0).reason());
        Assertions.assertEquals(1226497123, response.workerSizeId());
        Assertions.assertEquals(ComputeModeOptions.DYNAMIC, response.computeMode());
        Assertions.assertEquals("yftvyzuyqzjfvbn", response.workerSize());
        Assertions.assertEquals(95366465, response.workerCount());
    }
}
