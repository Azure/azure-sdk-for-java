// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.ComputeModeOptions;
import com.azure.resourcemanager.appservice.generated.models.WorkerPoolResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AppServiceEnvironmentsGetMultiRolePoolWithResponseMockTests {
    @Test
    public void testGetMultiRolePoolWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"workerSizeId\":1846992035,\"computeMode\":\"Dedicated\",\"workerSize\":\"fjqpxydpamctzmwr\",\"workerCount\":608431233,\"instanceNames\":[\"unsjssreojsgk\",\"uenpgkxyrsppbg\",\"yekggoawlqvu\"]},\"sku\":{\"name\":\"mwqsgyrz\",\"tier\":\"stngxvrpkiz\",\"size\":\"kgdsursumbcirkbk\",\"family\":\"svo\",\"capacity\":195495857,\"skuCapacity\":{\"minimum\":1687093841,\"maximum\":1263005109,\"elasticMaximum\":1519534844,\"default\":1546298542,\"scaleType\":\"rufvmgblbqx\"},\"locations\":[\"mxyjqhwsojnbbbgv\",\"owyzx\",\"huhmldhnzsckf\",\"zuc\"],\"capabilities\":[{\"name\":\"z\",\"value\":\"hqhwpuaermaww\",\"reason\":\"sdazqcemcotwfuo\"},{\"name\":\"isxzhik\",\"value\":\"fszxbupsxqo\",\"reason\":\"gxcgqkhyvtajwkrx\"}]},\"kind\":\"lmwfncwlwov\",\"id\":\"zbomjbyssprkbz\",\"name\":\"aljwfnc\",\"type\":\"aaylcp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkerPoolResource response = manager.appServiceEnvironments()
            .getMultiRolePoolWithResponse("trfvogknocshmp", "jqtuzb", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("lmwfncwlwov", response.kind());
        Assertions.assertEquals("mwqsgyrz", response.sku().name());
        Assertions.assertEquals("stngxvrpkiz", response.sku().tier());
        Assertions.assertEquals("kgdsursumbcirkbk", response.sku().size());
        Assertions.assertEquals("svo", response.sku().family());
        Assertions.assertEquals(195495857, response.sku().capacity());
        Assertions.assertEquals(1687093841, response.sku().skuCapacity().minimum());
        Assertions.assertEquals(1263005109, response.sku().skuCapacity().maximum());
        Assertions.assertEquals(1519534844, response.sku().skuCapacity().elasticMaximum());
        Assertions.assertEquals(1546298542, response.sku().skuCapacity().defaultProperty());
        Assertions.assertEquals("rufvmgblbqx", response.sku().skuCapacity().scaleType());
        Assertions.assertEquals("mxyjqhwsojnbbbgv", response.sku().locations().get(0));
        Assertions.assertEquals("z", response.sku().capabilities().get(0).name());
        Assertions.assertEquals("hqhwpuaermaww", response.sku().capabilities().get(0).value());
        Assertions.assertEquals("sdazqcemcotwfuo", response.sku().capabilities().get(0).reason());
        Assertions.assertEquals(1846992035, response.workerSizeId());
        Assertions.assertEquals(ComputeModeOptions.DEDICATED, response.computeMode());
        Assertions.assertEquals("fjqpxydpamctzmwr", response.workerSize());
        Assertions.assertEquals(608431233, response.workerCount());
    }
}
