// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.RemotePrivateEndpointConnectionArmResourceProperties;
import com.azure.resourcemanager.appservice.generated.models.ArmIdWrapper;
import com.azure.resourcemanager.appservice.generated.models.PrivateLinkConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RemotePrivateEndpointConnectionArmResourcePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RemotePrivateEndpointConnectionArmResourceProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"tuwkffdj\",\"privateEndpoint\":{\"id\":\"ysidfvclgl\"},\"privateLinkServiceConnectionState\":{\"status\":\"uijtkbu\",\"description\":\"ogsf\",\"actionsRequired\":\"ayiansharujtji\"},\"ipAddresses\":[\"zyjq\",\"tvwkpqhjpenu\"]}")
            .toObject(RemotePrivateEndpointConnectionArmResourceProperties.class);
        Assertions.assertEquals("uijtkbu", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("ogsf", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("ayiansharujtji", model.privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("zyjq", model.ipAddresses().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RemotePrivateEndpointConnectionArmResourceProperties model
            = new RemotePrivateEndpointConnectionArmResourceProperties().withPrivateEndpoint(new ArmIdWrapper())
                .withPrivateLinkServiceConnectionState(new PrivateLinkConnectionState().withStatus("uijtkbu")
                    .withDescription("ogsf")
                    .withActionsRequired("ayiansharujtji"))
                .withIpAddresses(Arrays.asList("zyjq", "tvwkpqhjpenu"));
        model = BinaryData.fromObject(model).toObject(RemotePrivateEndpointConnectionArmResourceProperties.class);
        Assertions.assertEquals("uijtkbu", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("ogsf", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("ayiansharujtji", model.privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("zyjq", model.ipAddresses().get(0));
    }
}
