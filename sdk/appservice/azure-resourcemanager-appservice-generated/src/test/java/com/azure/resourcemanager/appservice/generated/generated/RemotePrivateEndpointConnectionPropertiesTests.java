// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.RemotePrivateEndpointConnectionProperties;
import com.azure.resourcemanager.appservice.generated.models.ArmIdWrapper;
import com.azure.resourcemanager.appservice.generated.models.PrivateLinkConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RemotePrivateEndpointConnectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RemotePrivateEndpointConnectionProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"odpegq\",\"privateEndpoint\":{\"id\":\"rchazrqoxzyhl\"},\"privateLinkServiceConnectionState\":{\"status\":\"vhs\",\"description\":\"mpwxsl\",\"actionsRequired\":\"ggfzgaefh\"},\"ipAddresses\":[\"mibuyd\",\"iurni\",\"updyttqm\"]}")
            .toObject(RemotePrivateEndpointConnectionProperties.class);
        Assertions.assertEquals("vhs", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("mpwxsl", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("ggfzgaefh", model.privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("mibuyd", model.ipAddresses().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RemotePrivateEndpointConnectionProperties model
            = new RemotePrivateEndpointConnectionProperties().withPrivateEndpoint(new ArmIdWrapper())
                .withPrivateLinkServiceConnectionState(new PrivateLinkConnectionState().withStatus("vhs")
                    .withDescription("mpwxsl")
                    .withActionsRequired("ggfzgaefh"))
                .withIpAddresses(Arrays.asList("mibuyd", "iurni", "updyttqm"));
        model = BinaryData.fromObject(model).toObject(RemotePrivateEndpointConnectionProperties.class);
        Assertions.assertEquals("vhs", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("mpwxsl", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("ggfzgaefh", model.privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("mibuyd", model.ipAddresses().get(0));
    }
}
