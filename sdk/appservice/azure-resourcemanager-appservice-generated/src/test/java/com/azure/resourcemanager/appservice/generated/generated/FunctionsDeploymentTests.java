// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.AuthenticationType;
import com.azure.resourcemanager.appservice.generated.models.FunctionsDeployment;
import com.azure.resourcemanager.appservice.generated.models.FunctionsDeploymentStorage;
import com.azure.resourcemanager.appservice.generated.models.FunctionsDeploymentStorageAuthentication;
import com.azure.resourcemanager.appservice.generated.models.StorageType;
import org.junit.jupiter.api.Assertions;

public final class FunctionsDeploymentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FunctionsDeployment model = BinaryData.fromString(
            "{\"storage\":{\"type\":\"NetworkFileSystem\",\"value\":\"ckt\",\"authentication\":{\"type\":\"UserAssignedIdentity\",\"userAssignedIdentityResourceId\":\"rteeamm\",\"storageAccountConnectionStringName\":\"iekkkzddrtkgdojb\"}}}")
            .toObject(FunctionsDeployment.class);
        Assertions.assertEquals(StorageType.NETWORK_FILE_SYSTEM, model.storage().type());
        Assertions.assertEquals("ckt", model.storage().value());
        Assertions.assertEquals(AuthenticationType.USER_ASSIGNED_IDENTITY, model.storage().authentication().type());
        Assertions.assertEquals("rteeamm", model.storage().authentication().userAssignedIdentityResourceId());
        Assertions.assertEquals("iekkkzddrtkgdojb",
            model.storage().authentication().storageAccountConnectionStringName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FunctionsDeployment model
            = new FunctionsDeployment()
                .withStorage(new FunctionsDeploymentStorage().withType(StorageType.NETWORK_FILE_SYSTEM)
                    .withValue("ckt")
                    .withAuthentication(new FunctionsDeploymentStorageAuthentication()
                        .withType(AuthenticationType.USER_ASSIGNED_IDENTITY)
                        .withUserAssignedIdentityResourceId("rteeamm")
                        .withStorageAccountConnectionStringName("iekkkzddrtkgdojb")));
        model = BinaryData.fromObject(model).toObject(FunctionsDeployment.class);
        Assertions.assertEquals(StorageType.NETWORK_FILE_SYSTEM, model.storage().type());
        Assertions.assertEquals("ckt", model.storage().value());
        Assertions.assertEquals(AuthenticationType.USER_ASSIGNED_IDENTITY, model.storage().authentication().type());
        Assertions.assertEquals("rteeamm", model.storage().authentication().userAssignedIdentityResourceId());
        Assertions.assertEquals("iekkkzddrtkgdojb",
            model.storage().authentication().storageAccountConnectionStringName());
    }
}
