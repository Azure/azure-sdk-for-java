// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.AddressResponseProperties;
import com.azure.resourcemanager.appservice.generated.models.VirtualIpMapping;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AddressResponsePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AddressResponseProperties model = BinaryData.fromString(
            "{\"serviceIpAddress\":\"qyzhf\",\"internalIpAddress\":\"esgogc\",\"outboundIpAddresses\":[\"nnxk\",\"lgnyhmo\",\"sxkkg\"],\"vipMappings\":[{\"virtualIP\":\"gh\",\"internalHttpPort\":270818491,\"internalHttpsPort\":2069063654,\"inUse\":true,\"serviceName\":\"cx\"},{\"virtualIP\":\"rpdsof\",\"internalHttpPort\":1868776244,\"internalHttpsPort\":160292090,\"inUse\":false,\"serviceName\":\"uswdv\"},{\"virtualIP\":\"ybycnunvj\",\"internalHttpPort\":1037847235,\"internalHttpsPort\":76797312,\"inUse\":true,\"serviceName\":\"opqgikyzirtxdyux\"},{\"virtualIP\":\"jntpsewgioilqu\",\"internalHttpPort\":1456439071,\"internalHttpsPort\":381588306,\"inUse\":false,\"serviceName\":\"ieoxorggufhyaomt\"}]}")
            .toObject(AddressResponseProperties.class);
        Assertions.assertEquals("qyzhf", model.serviceIpAddress());
        Assertions.assertEquals("esgogc", model.internalIpAddress());
        Assertions.assertEquals("nnxk", model.outboundIpAddresses().get(0));
        Assertions.assertEquals("gh", model.vipMappings().get(0).virtualIp());
        Assertions.assertEquals(270818491, model.vipMappings().get(0).internalHttpPort());
        Assertions.assertEquals(2069063654, model.vipMappings().get(0).internalHttpsPort());
        Assertions.assertEquals(true, model.vipMappings().get(0).inUse());
        Assertions.assertEquals("cx", model.vipMappings().get(0).serviceName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AddressResponseProperties model = new AddressResponseProperties().withServiceIpAddress("qyzhf")
            .withInternalIpAddress("esgogc")
            .withOutboundIpAddresses(Arrays.asList("nnxk", "lgnyhmo", "sxkkg"))
            .withVipMappings(Arrays.asList(
                new VirtualIpMapping().withVirtualIp("gh")
                    .withInternalHttpPort(270818491)
                    .withInternalHttpsPort(2069063654)
                    .withInUse(true)
                    .withServiceName("cx"),
                new VirtualIpMapping().withVirtualIp("rpdsof")
                    .withInternalHttpPort(1868776244)
                    .withInternalHttpsPort(160292090)
                    .withInUse(false)
                    .withServiceName("uswdv"),
                new VirtualIpMapping().withVirtualIp("ybycnunvj")
                    .withInternalHttpPort(1037847235)
                    .withInternalHttpsPort(76797312)
                    .withInUse(true)
                    .withServiceName("opqgikyzirtxdyux"),
                new VirtualIpMapping().withVirtualIp("jntpsewgioilqu")
                    .withInternalHttpPort(1456439071)
                    .withInternalHttpsPort(381588306)
                    .withInUse(false)
                    .withServiceName("ieoxorggufhyaomt")));
        model = BinaryData.fromObject(model).toObject(AddressResponseProperties.class);
        Assertions.assertEquals("qyzhf", model.serviceIpAddress());
        Assertions.assertEquals("esgogc", model.internalIpAddress());
        Assertions.assertEquals("nnxk", model.outboundIpAddresses().get(0));
        Assertions.assertEquals("gh", model.vipMappings().get(0).virtualIp());
        Assertions.assertEquals(270818491, model.vipMappings().get(0).internalHttpPort());
        Assertions.assertEquals(2069063654, model.vipMappings().get(0).internalHttpsPort());
        Assertions.assertEquals(true, model.vipMappings().get(0).inUse());
        Assertions.assertEquals("cx", model.vipMappings().get(0).serviceName());
    }
}
