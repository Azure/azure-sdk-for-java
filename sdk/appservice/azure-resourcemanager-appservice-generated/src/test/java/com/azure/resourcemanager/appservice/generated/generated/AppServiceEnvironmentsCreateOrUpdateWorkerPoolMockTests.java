// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.CapabilityInner;
import com.azure.resourcemanager.appservice.generated.models.ComputeModeOptions;
import com.azure.resourcemanager.appservice.generated.models.SkuCapacity;
import com.azure.resourcemanager.appservice.generated.models.SkuDescription;
import com.azure.resourcemanager.appservice.generated.models.WorkerPoolResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AppServiceEnvironmentsCreateOrUpdateWorkerPoolMockTests {
    @Test
    public void testCreateOrUpdateWorkerPool() throws Exception {
        String responseStr
            = "{\"properties\":{\"workerSizeId\":462240130,\"computeMode\":\"Dynamic\",\"workerSize\":\"cbjxgjudgbwr\",\"workerCount\":1473640728,\"instanceNames\":[\"lfqhzihlz\"]},\"sku\":{\"name\":\"cmmgs\",\"tier\":\"ujunqwkjfmt\",\"size\":\"bdzrxbckxen\",\"family\":\"owguirhexjpw\",\"capacity\":620273983,\"skuCapacity\":{\"minimum\":1834416987,\"maximum\":597793221,\"elasticMaximum\":1653012012,\"default\":1837916137,\"scaleType\":\"o\"},\"locations\":[\"fdtbaob\",\"aofkcvhh\"],\"capabilities\":[{\"name\":\"uuik\",\"value\":\"ielrwsjvdxenxjva\",\"reason\":\"qgfvy\"},{\"name\":\"fyyknxuacfmb\",\"value\":\"lcimjm\",\"reason\":\"ocryf\"},{\"name\":\"kt\",\"value\":\"zuzvbqbroyrw\",\"reason\":\"bbfweozkbok\"}]},\"kind\":\"su\",\"id\":\"wc\",\"name\":\"lzcavodcvfwkp\",\"type\":\"p\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkerPoolResource response = manager.appServiceEnvironments()
            .defineWorkerPool("lxwsfdd")
            .withExistingHostingEnvironment("qlbmiqbdia", "jxcdhp")
            .withKind("xdrgim")
            .withSku(new SkuDescription().withName("sptce")
                .withTier("vra")
                .withSize("yfhzybjrxen")
                .withFamily("xanlbrcydwrc")
                .withCapacity(931060194)
                .withSkuCapacity(new SkuCapacity().withMinimum(1316470430)
                    .withMaximum(1541062870)
                    .withElasticMaximum(141944319)
                    .withDefaultProperty(901138801)
                    .withScaleType("hoxcgfyzluilzgp"))
                .withLocations(Arrays.asList("akzmnxjnqmajsl", "mjlp", "xvp"))
                .withCapabilities(Arrays.asList(
                    new CapabilityInner().withName("gojrwpoxuyk").withValue("oyjptkyf").withReason("zgtxwyqkkd"))))
            .withWorkerSizeId(1472348466)
            .withComputeMode(ComputeModeOptions.DEDICATED)
            .withWorkerSize("owmjsur")
            .withWorkerCount(1505370694)
            .create();

        Assertions.assertEquals("su", response.kind());
        Assertions.assertEquals("cmmgs", response.sku().name());
        Assertions.assertEquals("ujunqwkjfmt", response.sku().tier());
        Assertions.assertEquals("bdzrxbckxen", response.sku().size());
        Assertions.assertEquals("owguirhexjpw", response.sku().family());
        Assertions.assertEquals(620273983, response.sku().capacity());
        Assertions.assertEquals(1834416987, response.sku().skuCapacity().minimum());
        Assertions.assertEquals(597793221, response.sku().skuCapacity().maximum());
        Assertions.assertEquals(1653012012, response.sku().skuCapacity().elasticMaximum());
        Assertions.assertEquals(1837916137, response.sku().skuCapacity().defaultProperty());
        Assertions.assertEquals("o", response.sku().skuCapacity().scaleType());
        Assertions.assertEquals("fdtbaob", response.sku().locations().get(0));
        Assertions.assertEquals("uuik", response.sku().capabilities().get(0).name());
        Assertions.assertEquals("ielrwsjvdxenxjva", response.sku().capabilities().get(0).value());
        Assertions.assertEquals("qgfvy", response.sku().capabilities().get(0).reason());
        Assertions.assertEquals(462240130, response.workerSizeId());
        Assertions.assertEquals(ComputeModeOptions.DYNAMIC, response.computeMode());
        Assertions.assertEquals("cbjxgjudgbwr", response.workerSize());
        Assertions.assertEquals(1473640728, response.workerCount());
    }
}
