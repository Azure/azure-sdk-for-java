// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.RestoreRequestInner;
import com.azure.resourcemanager.appservice.generated.models.BackupRestoreOperationType;
import com.azure.resourcemanager.appservice.generated.models.DatabaseBackupSetting;
import com.azure.resourcemanager.appservice.generated.models.DatabaseType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RestoreRequestInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RestoreRequestInner model = BinaryData.fromString(
            "{\"properties\":{\"storageAccountUrl\":\"kyoddoqkanqtrkic\",\"blobName\":\"qyrgqmndk\",\"overwrite\":false,\"siteName\":\"murh\",\"databases\":[{\"databaseType\":\"MySql\",\"name\":\"qfsrnack\",\"connectionStringName\":\"lwgebylpzjeldaqw\",\"connectionString\":\"nilnijhwcbr\"},{\"databaseType\":\"SqlAzure\",\"name\":\"potnpkbvzpkod\",\"connectionStringName\":\"vnqdj\",\"connectionString\":\"btwgn\"}],\"ignoreConflictingHostNames\":true,\"ignoreDatabases\":false,\"appServicePlan\":\"lhvbqyczn\",\"operationType\":\"Clone\",\"adjustConnectionStrings\":false,\"hostingEnvironment\":\"uvcqoqkqwucqsdgb\"},\"kind\":\"wtvmijccpkkjl\",\"id\":\"myvwp\",\"name\":\"jmaih\",\"type\":\"nnlb\"}")
            .toObject(RestoreRequestInner.class);
        Assertions.assertEquals("wtvmijccpkkjl", model.kind());
        Assertions.assertEquals("kyoddoqkanqtrkic", model.storageAccountUrl());
        Assertions.assertEquals("qyrgqmndk", model.blobName());
        Assertions.assertEquals(false, model.overwrite());
        Assertions.assertEquals("murh", model.siteName());
        Assertions.assertEquals(DatabaseType.MY_SQL, model.databases().get(0).databaseType());
        Assertions.assertEquals("qfsrnack", model.databases().get(0).name());
        Assertions.assertEquals("lwgebylpzjeldaqw", model.databases().get(0).connectionStringName());
        Assertions.assertEquals("nilnijhwcbr", model.databases().get(0).connectionString());
        Assertions.assertEquals(true, model.ignoreConflictingHostNames());
        Assertions.assertEquals(false, model.ignoreDatabases());
        Assertions.assertEquals("lhvbqyczn", model.appServicePlan());
        Assertions.assertEquals(BackupRestoreOperationType.CLONE, model.operationType());
        Assertions.assertEquals(false, model.adjustConnectionStrings());
        Assertions.assertEquals("uvcqoqkqwucqsdgb", model.hostingEnvironment());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RestoreRequestInner model = new RestoreRequestInner().withKind("wtvmijccpkkjl")
            .withStorageAccountUrl("kyoddoqkanqtrkic")
            .withBlobName("qyrgqmndk")
            .withOverwrite(false)
            .withSiteName("murh")
            .withDatabases(Arrays.asList(
                new DatabaseBackupSetting().withDatabaseType(DatabaseType.MY_SQL)
                    .withName("qfsrnack")
                    .withConnectionStringName("lwgebylpzjeldaqw")
                    .withConnectionString("nilnijhwcbr"),
                new DatabaseBackupSetting().withDatabaseType(DatabaseType.SQL_AZURE)
                    .withName("potnpkbvzpkod")
                    .withConnectionStringName("vnqdj")
                    .withConnectionString("btwgn")))
            .withIgnoreConflictingHostNames(true)
            .withIgnoreDatabases(false)
            .withAppServicePlan("lhvbqyczn")
            .withOperationType(BackupRestoreOperationType.CLONE)
            .withAdjustConnectionStrings(false)
            .withHostingEnvironment("uvcqoqkqwucqsdgb");
        model = BinaryData.fromObject(model).toObject(RestoreRequestInner.class);
        Assertions.assertEquals("wtvmijccpkkjl", model.kind());
        Assertions.assertEquals("kyoddoqkanqtrkic", model.storageAccountUrl());
        Assertions.assertEquals("qyrgqmndk", model.blobName());
        Assertions.assertEquals(false, model.overwrite());
        Assertions.assertEquals("murh", model.siteName());
        Assertions.assertEquals(DatabaseType.MY_SQL, model.databases().get(0).databaseType());
        Assertions.assertEquals("qfsrnack", model.databases().get(0).name());
        Assertions.assertEquals("lwgebylpzjeldaqw", model.databases().get(0).connectionStringName());
        Assertions.assertEquals("nilnijhwcbr", model.databases().get(0).connectionString());
        Assertions.assertEquals(true, model.ignoreConflictingHostNames());
        Assertions.assertEquals(false, model.ignoreDatabases());
        Assertions.assertEquals("lhvbqyczn", model.appServicePlan());
        Assertions.assertEquals(BackupRestoreOperationType.CLONE, model.operationType());
        Assertions.assertEquals(false, model.adjustConnectionStrings());
        Assertions.assertEquals("uvcqoqkqwucqsdgb", model.hostingEnvironment());
    }
}
