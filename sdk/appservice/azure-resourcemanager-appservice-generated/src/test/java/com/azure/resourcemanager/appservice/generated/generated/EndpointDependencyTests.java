// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.EndpointDependency;
import com.azure.resourcemanager.appservice.generated.models.EndpointDetail;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EndpointDependencyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EndpointDependency model = BinaryData.fromString(
            "{\"domainName\":\"hdugneiknpg\",\"endpointDetails\":[{\"ipAddress\":\"iuqhibtozipqwj\",\"port\":775560662,\"latency\":74.45209479949933,\"isAccessible\":false},{\"ipAddress\":\"ewpktvqy\",\"port\":1264888765,\"latency\":60.598769282873754,\"isAccessible\":false},{\"ipAddress\":\"lfbcgwgcl\",\"port\":325536454,\"latency\":68.85589005224854,\"isAccessible\":true}]}")
            .toObject(EndpointDependency.class);
        Assertions.assertEquals("hdugneiknpg", model.domainName());
        Assertions.assertEquals("iuqhibtozipqwj", model.endpointDetails().get(0).ipAddress());
        Assertions.assertEquals(775560662, model.endpointDetails().get(0).port());
        Assertions.assertEquals(74.45209479949933D, model.endpointDetails().get(0).latency());
        Assertions.assertEquals(false, model.endpointDetails().get(0).isAccessible());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EndpointDependency model = new EndpointDependency().withDomainName("hdugneiknpg")
            .withEndpointDetails(Arrays.asList(
                new EndpointDetail().withIpAddress("iuqhibtozipqwj")
                    .withPort(775560662)
                    .withLatency(74.45209479949933D)
                    .withIsAccessible(false),
                new EndpointDetail().withIpAddress("ewpktvqy")
                    .withPort(1264888765)
                    .withLatency(60.598769282873754D)
                    .withIsAccessible(false),
                new EndpointDetail().withIpAddress("lfbcgwgcl")
                    .withPort(325536454)
                    .withLatency(68.85589005224854D)
                    .withIsAccessible(true)));
        model = BinaryData.fromObject(model).toObject(EndpointDependency.class);
        Assertions.assertEquals("hdugneiknpg", model.domainName());
        Assertions.assertEquals("iuqhibtozipqwj", model.endpointDetails().get(0).ipAddress());
        Assertions.assertEquals(775560662, model.endpointDetails().get(0).port());
        Assertions.assertEquals(74.45209479949933D, model.endpointDetails().get(0).latency());
        Assertions.assertEquals(false, model.endpointDetails().get(0).isAccessible());
    }
}
