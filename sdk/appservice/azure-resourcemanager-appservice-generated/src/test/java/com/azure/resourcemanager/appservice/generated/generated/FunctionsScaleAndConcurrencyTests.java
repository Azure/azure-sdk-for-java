// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.FunctionsAlwaysReadyConfig;
import com.azure.resourcemanager.appservice.generated.models.FunctionsScaleAndConcurrency;
import com.azure.resourcemanager.appservice.generated.models.FunctionsScaleAndConcurrencyTriggers;
import com.azure.resourcemanager.appservice.generated.models.FunctionsScaleAndConcurrencyTriggersHttp;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FunctionsScaleAndConcurrencyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FunctionsScaleAndConcurrency model = BinaryData.fromString(
            "{\"alwaysReady\":[{\"name\":\"tgsfja\",\"instanceCount\":60.76816},{\"name\":\"hhxud\",\"instanceCount\":31.866915},{\"name\":\"d\",\"instanceCount\":29.851913}],\"maximumInstanceCount\":25.047583,\"instanceMemoryMB\":12.369669,\"triggers\":{\"http\":{\"perInstanceConcurrency\":2.834177}}}")
            .toObject(FunctionsScaleAndConcurrency.class);
        Assertions.assertEquals("tgsfja", model.alwaysReady().get(0).name());
        Assertions.assertEquals(60.76816F, model.alwaysReady().get(0).instanceCount());
        Assertions.assertEquals(25.047583F, model.maximumInstanceCount());
        Assertions.assertEquals(12.369669F, model.instanceMemoryMB());
        Assertions.assertEquals(2.834177F, model.triggers().http().perInstanceConcurrency());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FunctionsScaleAndConcurrency model = new FunctionsScaleAndConcurrency()
            .withAlwaysReady(
                Arrays.asList(new FunctionsAlwaysReadyConfig().withName("tgsfja").withInstanceCount(60.76816F),
                    new FunctionsAlwaysReadyConfig().withName("hhxud").withInstanceCount(31.866915F),
                    new FunctionsAlwaysReadyConfig().withName("d").withInstanceCount(29.851913F)))
            .withMaximumInstanceCount(25.047583F)
            .withInstanceMemoryMB(12.369669F)
            .withTriggers(new FunctionsScaleAndConcurrencyTriggers()
                .withHttp(new FunctionsScaleAndConcurrencyTriggersHttp().withPerInstanceConcurrency(2.834177F)));
        model = BinaryData.fromObject(model).toObject(FunctionsScaleAndConcurrency.class);
        Assertions.assertEquals("tgsfja", model.alwaysReady().get(0).name());
        Assertions.assertEquals(60.76816F, model.alwaysReady().get(0).instanceCount());
        Assertions.assertEquals(25.047583F, model.maximumInstanceCount());
        Assertions.assertEquals(12.369669F, model.instanceMemoryMB());
        Assertions.assertEquals(2.834177F, model.triggers().http().perInstanceConcurrency());
    }
}
