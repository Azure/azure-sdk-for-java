// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.VolumeMount;
import org.junit.jupiter.api.Assertions;

public final class VolumeMountTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VolumeMount model = BinaryData.fromString(
            "{\"volumeSubPath\":\"totktd\",\"containerMountPath\":\"ewwlkry\",\"data\":\"pgqqdhtctx\",\"readOnly\":true}")
            .toObject(VolumeMount.class);
        Assertions.assertEquals("totktd", model.volumeSubPath());
        Assertions.assertEquals("ewwlkry", model.containerMountPath());
        Assertions.assertEquals("pgqqdhtctx", model.data());
        Assertions.assertEquals(true, model.readOnly());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VolumeMount model = new VolumeMount().withVolumeSubPath("totktd")
            .withContainerMountPath("ewwlkry")
            .withData("pgqqdhtctx")
            .withReadOnly(true);
        model = BinaryData.fromObject(model).toObject(VolumeMount.class);
        Assertions.assertEquals("totktd", model.volumeSubPath());
        Assertions.assertEquals("ewwlkry", model.containerMountPath());
        Assertions.assertEquals("pgqqdhtctx", model.data());
        Assertions.assertEquals(true, model.readOnly());
    }
}
