// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.AseV3NetworkingConfigurationInner;
import org.junit.jupiter.api.Assertions;

public final class AseV3NetworkingConfigurationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AseV3NetworkingConfigurationInner model = BinaryData.fromString(
            "{\"properties\":{\"windowsOutboundIpAddresses\":[\"kzwpcnpw\",\"cjaesgvvs\",\"cyajguqf\"],\"linuxOutboundIpAddresses\":[\"gzlvdnkfxu\"],\"externalInboundIpAddresses\":[\"dwzrmuh\",\"pfcqdp\",\"qxqvpsvuoymgc\",\"elvezrypq\"],\"internalInboundIpAddresses\":[\"eokerqwkyhkobopg\"],\"allowNewPrivateEndpointConnections\":false,\"ftpEnabled\":true,\"remoteDebugEnabled\":true,\"inboundIpAddressOverride\":\"bqpc\"},\"kind\":\"kbwcc\",\"id\":\"njv\",\"name\":\"dw\",\"type\":\"lpqekf\"}")
            .toObject(AseV3NetworkingConfigurationInner.class);
        Assertions.assertEquals("kbwcc", model.kind());
        Assertions.assertEquals(false, model.allowNewPrivateEndpointConnections());
        Assertions.assertEquals(true, model.ftpEnabled());
        Assertions.assertEquals(true, model.remoteDebugEnabled());
        Assertions.assertEquals("bqpc", model.inboundIpAddressOverride());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AseV3NetworkingConfigurationInner model = new AseV3NetworkingConfigurationInner().withKind("kbwcc")
            .withAllowNewPrivateEndpointConnections(false)
            .withFtpEnabled(true)
            .withRemoteDebugEnabled(true)
            .withInboundIpAddressOverride("bqpc");
        model = BinaryData.fromObject(model).toObject(AseV3NetworkingConfigurationInner.class);
        Assertions.assertEquals("kbwcc", model.kind());
        Assertions.assertEquals(false, model.allowNewPrivateEndpointConnections());
        Assertions.assertEquals(true, model.ftpEnabled());
        Assertions.assertEquals(true, model.remoteDebugEnabled());
        Assertions.assertEquals("bqpc", model.inboundIpAddressOverride());
    }
}
