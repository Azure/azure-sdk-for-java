// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.VirtualIpMapping;
import org.junit.jupiter.api.Assertions;

public final class VirtualIpMappingTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualIpMapping model = BinaryData.fromString(
            "{\"virtualIP\":\"hhavgrvkffovjz\",\"internalHttpPort\":1314543858,\"internalHttpsPort\":1224652239,\"inUse\":true,\"serviceName\":\"mfxumvfcluyovw\"}")
            .toObject(VirtualIpMapping.class);
        Assertions.assertEquals("hhavgrvkffovjz", model.virtualIp());
        Assertions.assertEquals(1314543858, model.internalHttpPort());
        Assertions.assertEquals(1224652239, model.internalHttpsPort());
        Assertions.assertEquals(true, model.inUse());
        Assertions.assertEquals("mfxumvfcluyovw", model.serviceName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualIpMapping model = new VirtualIpMapping().withVirtualIp("hhavgrvkffovjz")
            .withInternalHttpPort(1314543858)
            .withInternalHttpsPort(1224652239)
            .withInUse(true)
            .withServiceName("mfxumvfcluyovw");
        model = BinaryData.fromObject(model).toObject(VirtualIpMapping.class);
        Assertions.assertEquals("hhavgrvkffovjz", model.virtualIp());
        Assertions.assertEquals(1314543858, model.internalHttpPort());
        Assertions.assertEquals(1224652239, model.internalHttpsPort());
        Assertions.assertEquals(true, model.inUse());
        Assertions.assertEquals("mfxumvfcluyovw", model.serviceName());
    }
}
