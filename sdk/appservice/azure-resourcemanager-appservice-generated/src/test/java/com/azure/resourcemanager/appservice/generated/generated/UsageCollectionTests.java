// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.UsageInner;
import com.azure.resourcemanager.appservice.generated.models.UsageCollection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UsageCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UsageCollection model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"displayName\":\"lagun\",\"resourceName\":\"gfebwlnb\",\"unit\":\"yreeudz\",\"currentValue\":8077120167975896478,\"limit\":7319159798879999243,\"nextResetTime\":\"2021-05-03T15:28:46Z\",\"computeMode\":\"Dedicated\",\"siteMode\":\"yzglgo\"},\"kind\":\"tlmj\",\"id\":\"yuojqtobaxk\",\"name\":\"eytu\",\"type\":\"lbfjkwr\"},{\"properties\":{\"displayName\":\"kqbh\",\"resourceName\":\"rqunjq\",\"unit\":\"enx\",\"currentValue\":181486219282832895,\"limit\":9137448360522101229,\"nextResetTime\":\"2021-07-31T21:19:31Z\",\"computeMode\":\"Dynamic\",\"siteMode\":\"jnnawtqa\"},\"kind\":\"xuckpggqoweyir\",\"id\":\"hlisngw\",\"name\":\"lqqmpiz\",\"type\":\"uwnpqxpxiwfcng\"},{\"properties\":{\"displayName\":\"asi\",\"resourceName\":\"tmkzjvkviirhgfgr\",\"unit\":\"dpgra\",\"currentValue\":870650975798629622,\"limit\":6724216599601707029,\"nextResetTime\":\"2021-08-02T17:12:31Z\",\"computeMode\":\"Dedicated\",\"siteMode\":\"tctbrxkjzwrgxffm\"},\"kind\":\"kwfbkgo\",\"id\":\"xwopdbydpizqa\",\"name\":\"lnapxbiygn\",\"type\":\"gjkn\"}],\"nextLink\":\"mfcttux\"}")
            .toObject(UsageCollection.class);
        Assertions.assertEquals("tlmj", model.value().get(0).kind());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UsageCollection model = new UsageCollection().withValue(Arrays.asList(new UsageInner().withKind("tlmj"),
            new UsageInner().withKind("xuckpggqoweyir"), new UsageInner().withKind("kwfbkgo")));
        model = BinaryData.fromObject(model).toObject(UsageCollection.class);
        Assertions.assertEquals("tlmj", model.value().get(0).kind());
    }
}
