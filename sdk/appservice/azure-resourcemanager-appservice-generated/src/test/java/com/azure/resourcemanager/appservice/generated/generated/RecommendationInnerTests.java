// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.RecommendationInner;
import com.azure.resourcemanager.appservice.generated.models.Channels;
import com.azure.resourcemanager.appservice.generated.models.NotificationLevel;
import com.azure.resourcemanager.appservice.generated.models.ResourceScopeType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class RecommendationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RecommendationInner model = BinaryData.fromString(
            "{\"properties\":{\"creationTime\":\"2021-08-28T05:11:45Z\",\"recommendationId\":\"be8614f3-71d5-42ca-aa10-fb770cdcb5d4\",\"resourceId\":\"gi\",\"resourceScope\":\"ServerFarm\",\"ruleName\":\"wnwngh\",\"displayName\":\"ovke\",\"message\":\"micjixxfsf\",\"level\":\"NonUrgentSuggestion\",\"channels\":\"Api\",\"categoryTags\":[\"uefxxijtebdveywe\",\"krhlolmc\",\"wepf\",\"sv\"],\"actionName\":\"vaqdljnpetl\",\"enabled\":2127109298,\"states\":[\"tawevxehu\",\"kdxl\"],\"startTime\":\"2021-11-24T22:24:35Z\",\"endTime\":\"2021-08-01T01:04:19Z\",\"nextNotificationTime\":\"2021-11-07T02:34:47Z\",\"notificationExpirationTime\":\"2021-10-18T08:35:21Z\",\"notifiedTime\":\"2021-10-19T14:52:51Z\",\"score\":98.72644450583074,\"isDynamic\":true,\"extensionName\":\"qccddcbny\",\"bladeName\":\"jccxwbp\",\"forwardLink\":\"ykdigqzlrznda\"},\"kind\":\"nidmjqmvytg\",\"id\":\"iqlarhqtwvcaze\",\"name\":\"d\",\"type\":\"dzffzjwztsmpchg\"}")
            .toObject(RecommendationInner.class);
        Assertions.assertEquals("nidmjqmvytg", model.kind());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-28T05:11:45Z"), model.creationTime());
        Assertions.assertEquals(UUID.fromString("be8614f3-71d5-42ca-aa10-fb770cdcb5d4"), model.recommendationId());
        Assertions.assertEquals("gi", model.resourceId());
        Assertions.assertEquals(ResourceScopeType.SERVER_FARM, model.resourceScope());
        Assertions.assertEquals("wnwngh", model.ruleName());
        Assertions.assertEquals("ovke", model.displayName());
        Assertions.assertEquals("micjixxfsf", model.message());
        Assertions.assertEquals(NotificationLevel.NON_URGENT_SUGGESTION, model.level());
        Assertions.assertEquals(Channels.API, model.channels());
        Assertions.assertEquals("vaqdljnpetl", model.actionName());
        Assertions.assertEquals(2127109298, model.enabled());
        Assertions.assertEquals("tawevxehu", model.states().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-24T22:24:35Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-01T01:04:19Z"), model.endTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-07T02:34:47Z"), model.nextNotificationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-18T08:35:21Z"), model.notificationExpirationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-19T14:52:51Z"), model.notifiedTime());
        Assertions.assertEquals(98.72644450583074D, model.score());
        Assertions.assertEquals(true, model.isDynamic());
        Assertions.assertEquals("qccddcbny", model.extensionName());
        Assertions.assertEquals("jccxwbp", model.bladeName());
        Assertions.assertEquals("ykdigqzlrznda", model.forwardLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RecommendationInner model = new RecommendationInner().withKind("nidmjqmvytg")
            .withCreationTime(OffsetDateTime.parse("2021-08-28T05:11:45Z"))
            .withRecommendationId(UUID.fromString("be8614f3-71d5-42ca-aa10-fb770cdcb5d4"))
            .withResourceId("gi")
            .withResourceScope(ResourceScopeType.SERVER_FARM)
            .withRuleName("wnwngh")
            .withDisplayName("ovke")
            .withMessage("micjixxfsf")
            .withLevel(NotificationLevel.NON_URGENT_SUGGESTION)
            .withChannels(Channels.API)
            .withActionName("vaqdljnpetl")
            .withEnabled(2127109298)
            .withStates(Arrays.asList("tawevxehu", "kdxl"))
            .withStartTime(OffsetDateTime.parse("2021-11-24T22:24:35Z"))
            .withEndTime(OffsetDateTime.parse("2021-08-01T01:04:19Z"))
            .withNextNotificationTime(OffsetDateTime.parse("2021-11-07T02:34:47Z"))
            .withNotificationExpirationTime(OffsetDateTime.parse("2021-10-18T08:35:21Z"))
            .withNotifiedTime(OffsetDateTime.parse("2021-10-19T14:52:51Z"))
            .withScore(98.72644450583074D)
            .withIsDynamic(true)
            .withExtensionName("qccddcbny")
            .withBladeName("jccxwbp")
            .withForwardLink("ykdigqzlrznda");
        model = BinaryData.fromObject(model).toObject(RecommendationInner.class);
        Assertions.assertEquals("nidmjqmvytg", model.kind());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-28T05:11:45Z"), model.creationTime());
        Assertions.assertEquals(UUID.fromString("be8614f3-71d5-42ca-aa10-fb770cdcb5d4"), model.recommendationId());
        Assertions.assertEquals("gi", model.resourceId());
        Assertions.assertEquals(ResourceScopeType.SERVER_FARM, model.resourceScope());
        Assertions.assertEquals("wnwngh", model.ruleName());
        Assertions.assertEquals("ovke", model.displayName());
        Assertions.assertEquals("micjixxfsf", model.message());
        Assertions.assertEquals(NotificationLevel.NON_URGENT_SUGGESTION, model.level());
        Assertions.assertEquals(Channels.API, model.channels());
        Assertions.assertEquals("vaqdljnpetl", model.actionName());
        Assertions.assertEquals(2127109298, model.enabled());
        Assertions.assertEquals("tawevxehu", model.states().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-24T22:24:35Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-01T01:04:19Z"), model.endTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-07T02:34:47Z"), model.nextNotificationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-18T08:35:21Z"), model.notificationExpirationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-19T14:52:51Z"), model.notifiedTime());
        Assertions.assertEquals(98.72644450583074D, model.score());
        Assertions.assertEquals(true, model.isDynamic());
        Assertions.assertEquals("qccddcbny", model.extensionName());
        Assertions.assertEquals("jccxwbp", model.bladeName());
        Assertions.assertEquals("ykdigqzlrznda", model.forwardLink());
    }
}
