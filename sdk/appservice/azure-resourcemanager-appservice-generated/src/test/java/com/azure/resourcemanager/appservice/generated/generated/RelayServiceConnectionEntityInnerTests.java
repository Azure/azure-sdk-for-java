// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.RelayServiceConnectionEntityInner;
import org.junit.jupiter.api.Assertions;

public final class RelayServiceConnectionEntityInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RelayServiceConnectionEntityInner model = BinaryData.fromString(
            "{\"properties\":{\"entityName\":\"tyiz\",\"entityConnectionString\":\"zsurqcojasf\",\"resourceType\":\"z\",\"resourceConnectionString\":\"arciuoxyip\",\"hostname\":\"hjfvnhwsgn\",\"port\":49202199,\"biztalkUri\":\"felfchnuf\"},\"kind\":\"jgbfbba\",\"id\":\"h\",\"name\":\"xczzunfnbphcee\",\"type\":\"vkbuxlepg\"}")
            .toObject(RelayServiceConnectionEntityInner.class);
        Assertions.assertEquals("jgbfbba", model.kind());
        Assertions.assertEquals("tyiz", model.entityName());
        Assertions.assertEquals("zsurqcojasf", model.entityConnectionString());
        Assertions.assertEquals("z", model.resourceType());
        Assertions.assertEquals("arciuoxyip", model.resourceConnectionString());
        Assertions.assertEquals("hjfvnhwsgn", model.hostname());
        Assertions.assertEquals(49202199, model.port());
        Assertions.assertEquals("felfchnuf", model.biztalkUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RelayServiceConnectionEntityInner model = new RelayServiceConnectionEntityInner().withKind("jgbfbba")
            .withEntityName("tyiz")
            .withEntityConnectionString("zsurqcojasf")
            .withResourceType("z")
            .withResourceConnectionString("arciuoxyip")
            .withHostname("hjfvnhwsgn")
            .withPort(49202199)
            .withBiztalkUri("felfchnuf");
        model = BinaryData.fromObject(model).toObject(RelayServiceConnectionEntityInner.class);
        Assertions.assertEquals("jgbfbba", model.kind());
        Assertions.assertEquals("tyiz", model.entityName());
        Assertions.assertEquals("zsurqcojasf", model.entityConnectionString());
        Assertions.assertEquals("z", model.resourceType());
        Assertions.assertEquals("arciuoxyip", model.resourceConnectionString());
        Assertions.assertEquals("hjfvnhwsgn", model.hostname());
        Assertions.assertEquals(49202199, model.port());
        Assertions.assertEquals("felfchnuf", model.biztalkUri());
    }
}
