// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.CsmOperationDescriptionInner;
import com.azure.resourcemanager.appservice.generated.models.CsmOperationDescriptionProperties;
import com.azure.resourcemanager.appservice.generated.models.CsmOperationDisplay;
import com.azure.resourcemanager.appservice.generated.models.Dimension;
import com.azure.resourcemanager.appservice.generated.models.LogSpecification;
import com.azure.resourcemanager.appservice.generated.models.MetricAvailability;
import com.azure.resourcemanager.appservice.generated.models.MetricSpecification;
import com.azure.resourcemanager.appservice.generated.models.ServiceSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CsmOperationDescriptionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CsmOperationDescriptionInner model = BinaryData.fromString(
            "{\"name\":\"bfs\",\"isDataAction\":false,\"display\":{\"provider\":\"trcvpnazzmh\",\"resource\":\"unmpxttd\",\"operation\":\"rbnlankxmyskp\",\"description\":\"enbtkcxywny\"},\"origin\":\"rsyn\",\"properties\":{\"serviceSpecification\":{\"metricSpecifications\":[{\"name\":\"yxczfclh\",\"displayName\":\"xdbabphlwr\",\"displayDescription\":\"fkts\",\"unit\":\"sucocmnyyazttbtw\",\"aggregationType\":\"qpuedckzywbiex\",\"supportsInstanceLevelAggregation\":true,\"enableRegionalMdmAccount\":false,\"sourceMdmAccount\":\"axibxujw\",\"sourceMdmNamespace\":\"qwalmuzyoxaepd\",\"metricFilterPattern\":\"jancu\",\"fillGapWithZero\":true,\"isInternal\":true,\"dimensions\":[{},{},{},{}],\"category\":\"xbniwdjs\",\"availabilities\":[{},{}],\"supportedTimeGrainTypes\":[\"bpg\",\"xytxhpzxbz\",\"fzab\"],\"supportedAggregationTypes\":[\"uhxwtctyqiklbbov\"]},{\"name\":\"wzbhvgyugu\",\"displayName\":\"vmkfssxqu\",\"displayDescription\":\"fpl\",\"unit\":\"gsxnkjzkdeslpv\",\"aggregationType\":\"pwiyig\",\"supportsInstanceLevelAggregation\":false,\"enableRegionalMdmAccount\":false,\"sourceMdmAccount\":\"zb\",\"sourceMdmNamespace\":\"uebbaumnyqup\",\"metricFilterPattern\":\"eojnabc\",\"fillGapWithZero\":true,\"isInternal\":false,\"dimensions\":[{},{},{}],\"category\":\"ie\",\"availabilities\":[{},{},{}],\"supportedTimeGrainTypes\":[\"pesapskrdqmhjj\",\"htldwk\",\"zxuutkncwscwsvl\",\"otogtwrupqs\"],\"supportedAggregationTypes\":[\"micykvceoveilo\"]}],\"logSpecifications\":[{\"name\":\"yfjfcnjbkcn\",\"displayName\":\"hbttkphyw\",\"blobDuration\":\"vjtoqnermclfp\",\"logFilterPattern\":\"hoxus\"}]}}}")
            .toObject(CsmOperationDescriptionInner.class);
        Assertions.assertEquals("bfs", model.name());
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals("trcvpnazzmh", model.display().provider());
        Assertions.assertEquals("unmpxttd", model.display().resource());
        Assertions.assertEquals("rbnlankxmyskp", model.display().operation());
        Assertions.assertEquals("enbtkcxywny", model.display().description());
        Assertions.assertEquals("rsyn", model.origin());
        Assertions.assertEquals("yxczfclh",
            model.properties().serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("xdbabphlwr",
            model.properties().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("fkts",
            model.properties().serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("sucocmnyyazttbtw",
            model.properties().serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals("qpuedckzywbiex",
            model.properties().serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals(true,
            model.properties().serviceSpecification().metricSpecifications().get(0).supportsInstanceLevelAggregation());
        Assertions.assertEquals(false,
            model.properties().serviceSpecification().metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("axibxujw",
            model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("qwalmuzyoxaepd",
            model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("jancu",
            model.properties().serviceSpecification().metricSpecifications().get(0).metricFilterPattern());
        Assertions.assertEquals(true,
            model.properties().serviceSpecification().metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals(true,
            model.properties().serviceSpecification().metricSpecifications().get(0).isInternal());
        Assertions.assertEquals("xbniwdjs",
            model.properties().serviceSpecification().metricSpecifications().get(0).category());
        Assertions.assertEquals("bpg",
            model.properties().serviceSpecification().metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals("uhxwtctyqiklbbov",
            model.properties().serviceSpecification().metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("yfjfcnjbkcn",
            model.properties().serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("hbttkphyw",
            model.properties().serviceSpecification().logSpecifications().get(0).displayName());
        Assertions.assertEquals("vjtoqnermclfp",
            model.properties().serviceSpecification().logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("hoxus",
            model.properties().serviceSpecification().logSpecifications().get(0).logFilterPattern());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CsmOperationDescriptionInner model
            = new CsmOperationDescriptionInner().withName("bfs")
                .withIsDataAction(false)
                .withDisplay(new CsmOperationDisplay().withProvider("trcvpnazzmh")
                    .withResource("unmpxttd")
                    .withOperation("rbnlankxmyskp")
                    .withDescription("enbtkcxywny"))
                .withOrigin("rsyn")
                .withProperties(
                    new CsmOperationDescriptionProperties()
                        .withServiceSpecification(new ServiceSpecification()
                            .withMetricSpecifications(Arrays.asList(
                                new MetricSpecification().withName("yxczfclh")
                                    .withDisplayName("xdbabphlwr")
                                    .withDisplayDescription("fkts")
                                    .withUnit("sucocmnyyazttbtw")
                                    .withAggregationType("qpuedckzywbiex")
                                    .withSupportsInstanceLevelAggregation(true)
                                    .withEnableRegionalMdmAccount(false)
                                    .withSourceMdmAccount("axibxujw")
                                    .withSourceMdmNamespace("qwalmuzyoxaepd")
                                    .withMetricFilterPattern("jancu")
                                    .withFillGapWithZero(true)
                                    .withIsInternal(true)
                                    .withDimensions(Arrays.asList(new Dimension(), new Dimension(), new Dimension(),
                                        new Dimension()))
                                    .withCategory("xbniwdjs")
                                    .withAvailabilities(
                                        Arrays.asList(new MetricAvailability(), new MetricAvailability()))
                                    .withSupportedTimeGrainTypes(Arrays.asList("bpg", "xytxhpzxbz", "fzab"))
                                    .withSupportedAggregationTypes(Arrays.asList("uhxwtctyqiklbbov")),
                                new MetricSpecification().withName("wzbhvgyugu")
                                    .withDisplayName("vmkfssxqu")
                                    .withDisplayDescription("fpl")
                                    .withUnit("gsxnkjzkdeslpv")
                                    .withAggregationType("pwiyig")
                                    .withSupportsInstanceLevelAggregation(false)
                                    .withEnableRegionalMdmAccount(false)
                                    .withSourceMdmAccount("zb")
                                    .withSourceMdmNamespace("uebbaumnyqup")
                                    .withMetricFilterPattern("eojnabc")
                                    .withFillGapWithZero(true)
                                    .withIsInternal(false)
                                    .withDimensions(Arrays.asList(new Dimension(), new Dimension(), new Dimension()))
                                    .withCategory("ie")
                                    .withAvailabilities(Arrays.asList(new MetricAvailability(),
                                        new MetricAvailability(), new MetricAvailability()))
                                    .withSupportedTimeGrainTypes(
                                        Arrays.asList("pesapskrdqmhjj", "htldwk", "zxuutkncwscwsvl", "otogtwrupqs"))
                                    .withSupportedAggregationTypes(Arrays.asList("micykvceoveilo"))))
                            .withLogSpecifications(Arrays.asList(new LogSpecification().withName("yfjfcnjbkcn")
                                .withDisplayName("hbttkphyw")
                                .withBlobDuration("vjtoqnermclfp")
                                .withLogFilterPattern("hoxus")))));
        model = BinaryData.fromObject(model).toObject(CsmOperationDescriptionInner.class);
        Assertions.assertEquals("bfs", model.name());
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals("trcvpnazzmh", model.display().provider());
        Assertions.assertEquals("unmpxttd", model.display().resource());
        Assertions.assertEquals("rbnlankxmyskp", model.display().operation());
        Assertions.assertEquals("enbtkcxywny", model.display().description());
        Assertions.assertEquals("rsyn", model.origin());
        Assertions.assertEquals("yxczfclh",
            model.properties().serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("xdbabphlwr",
            model.properties().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("fkts",
            model.properties().serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("sucocmnyyazttbtw",
            model.properties().serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals("qpuedckzywbiex",
            model.properties().serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals(true,
            model.properties().serviceSpecification().metricSpecifications().get(0).supportsInstanceLevelAggregation());
        Assertions.assertEquals(false,
            model.properties().serviceSpecification().metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("axibxujw",
            model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("qwalmuzyoxaepd",
            model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("jancu",
            model.properties().serviceSpecification().metricSpecifications().get(0).metricFilterPattern());
        Assertions.assertEquals(true,
            model.properties().serviceSpecification().metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals(true,
            model.properties().serviceSpecification().metricSpecifications().get(0).isInternal());
        Assertions.assertEquals("xbniwdjs",
            model.properties().serviceSpecification().metricSpecifications().get(0).category());
        Assertions.assertEquals("bpg",
            model.properties().serviceSpecification().metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals("uhxwtctyqiklbbov",
            model.properties().serviceSpecification().metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("yfjfcnjbkcn",
            model.properties().serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("hbttkphyw",
            model.properties().serviceSpecification().logSpecifications().get(0).displayName());
        Assertions.assertEquals("vjtoqnermclfp",
            model.properties().serviceSpecification().logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("hoxus",
            model.properties().serviceSpecification().logSpecifications().get(0).logFilterPattern());
    }
}
