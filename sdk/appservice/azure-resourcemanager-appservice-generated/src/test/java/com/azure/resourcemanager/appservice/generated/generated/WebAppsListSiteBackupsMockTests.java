// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.BackupItem;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WebAppsListSiteBackupsMockTests {
    @Test
    public void testListSiteBackups() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"id\":1261263972,\"storageAccountUrl\":\"xgy\",\"blobName\":\"sz\",\"name\":\"aon\",\"status\":\"TimedOut\",\"sizeInBytes\":1324627216851577384,\"created\":\"2021-08-26T21:07:54Z\",\"log\":\"ldepzrsz\",\"databases\":[{\"databaseType\":\"LocalMySql\",\"name\":\"isce\",\"connectionStringName\":\"uoybudnxawf\",\"connectionString\":\"bmbvccui\"},{\"databaseType\":\"MySql\",\"name\":\"viux\",\"connectionStringName\":\"zbjsu\",\"connectionString\":\"uetltcrtmebr\"},{\"databaseType\":\"MySql\",\"name\":\"lxenqpthcljvqm\",\"connectionStringName\":\"xensog\",\"connectionString\":\"hqqxggn\"}],\"scheduled\":true,\"lastRestoreTimeStamp\":\"2021-08-13T03:25:07Z\",\"finishedTimeStamp\":\"2021-03-02T07:17:51Z\",\"correlationId\":\"xcjqrvpgukscr\",\"websiteSizeInBytes\":8407034176738543234},\"kind\":\"d\",\"id\":\"ma\",\"name\":\"oaj\",\"type\":\"gkcac\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<BackupItem> response
            = manager.webApps().listSiteBackups("dkrgdascmfnk", "bwpdvedm", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("d", response.iterator().next().kind());
    }
}
