// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.ProcessModuleInfoInner;
import org.junit.jupiter.api.Assertions;

public final class ProcessModuleInfoInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProcessModuleInfoInner model = BinaryData.fromString(
            "{\"properties\":{\"base_address\":\"sq\",\"file_name\":\"zabrsoihatajdtac\",\"href\":\"ynssxyl\",\"file_path\":\"ioadohsjyiehkxg\",\"module_memory_size\":80473785,\"file_version\":\"qnzkwlxqd\",\"file_description\":\"ipdnl\",\"product\":\"itfzpwwgzeylzp\",\"product_version\":\"mxacr\",\"is_debug\":false,\"language\":\"ygyn\"},\"kind\":\"x\",\"id\":\"zbbnuglquarbr\",\"name\":\"vqbeyxwrmupzpex\",\"type\":\"bhgjajkvwkocx\"}")
            .toObject(ProcessModuleInfoInner.class);
        Assertions.assertEquals("x", model.kind());
        Assertions.assertEquals("sq", model.baseAddress());
        Assertions.assertEquals("zabrsoihatajdtac", model.fileName());
        Assertions.assertEquals("ynssxyl", model.href());
        Assertions.assertEquals("ioadohsjyiehkxg", model.filePath());
        Assertions.assertEquals(80473785, model.moduleMemorySize());
        Assertions.assertEquals("qnzkwlxqd", model.fileVersion());
        Assertions.assertEquals("ipdnl", model.fileDescription());
        Assertions.assertEquals("itfzpwwgzeylzp", model.product());
        Assertions.assertEquals("mxacr", model.productVersion());
        Assertions.assertEquals(false, model.isDebug());
        Assertions.assertEquals("ygyn", model.language());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProcessModuleInfoInner model = new ProcessModuleInfoInner().withKind("x")
            .withBaseAddress("sq")
            .withFileName("zabrsoihatajdtac")
            .withHref("ynssxyl")
            .withFilePath("ioadohsjyiehkxg")
            .withModuleMemorySize(80473785)
            .withFileVersion("qnzkwlxqd")
            .withFileDescription("ipdnl")
            .withProduct("itfzpwwgzeylzp")
            .withProductVersion("mxacr")
            .withIsDebug(false)
            .withLanguage("ygyn");
        model = BinaryData.fromObject(model).toObject(ProcessModuleInfoInner.class);
        Assertions.assertEquals("x", model.kind());
        Assertions.assertEquals("sq", model.baseAddress());
        Assertions.assertEquals("zabrsoihatajdtac", model.fileName());
        Assertions.assertEquals("ynssxyl", model.href());
        Assertions.assertEquals("ioadohsjyiehkxg", model.filePath());
        Assertions.assertEquals(80473785, model.moduleMemorySize());
        Assertions.assertEquals("qnzkwlxqd", model.fileVersion());
        Assertions.assertEquals("ipdnl", model.fileDescription());
        Assertions.assertEquals("itfzpwwgzeylzp", model.product());
        Assertions.assertEquals("mxacr", model.productVersion());
        Assertions.assertEquals(false, model.isDebug());
        Assertions.assertEquals("ygyn", model.language());
    }
}
