// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.BillingMeterProperties;
import org.junit.jupiter.api.Assertions;

public final class BillingMeterPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BillingMeterProperties model = BinaryData.fromString(
            "{\"meterId\":\"yotygnb\",\"billingLocation\":\"hjgclxaxwcf\",\"shortName\":\"spsdz\",\"friendlyName\":\"cszghdoaqip\",\"resourceType\":\"xclfrs\",\"osType\":\"rnmuvwvpuofddtbf\",\"multiplier\":88.09421301339859}")
            .toObject(BillingMeterProperties.class);
        Assertions.assertEquals("yotygnb", model.meterId());
        Assertions.assertEquals("hjgclxaxwcf", model.billingLocation());
        Assertions.assertEquals("spsdz", model.shortName());
        Assertions.assertEquals("cszghdoaqip", model.friendlyName());
        Assertions.assertEquals("xclfrs", model.resourceType());
        Assertions.assertEquals("rnmuvwvpuofddtbf", model.osType());
        Assertions.assertEquals(88.09421301339859D, model.multiplier());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BillingMeterProperties model = new BillingMeterProperties().withMeterId("yotygnb")
            .withBillingLocation("hjgclxaxwcf")
            .withShortName("spsdz")
            .withFriendlyName("cszghdoaqip")
            .withResourceType("xclfrs")
            .withOsType("rnmuvwvpuofddtbf")
            .withMultiplier(88.09421301339859D);
        model = BinaryData.fromObject(model).toObject(BillingMeterProperties.class);
        Assertions.assertEquals("yotygnb", model.meterId());
        Assertions.assertEquals("hjgclxaxwcf", model.billingLocation());
        Assertions.assertEquals("spsdz", model.shortName());
        Assertions.assertEquals("cszghdoaqip", model.friendlyName());
        Assertions.assertEquals("xclfrs", model.resourceType());
        Assertions.assertEquals("rnmuvwvpuofddtbf", model.osType());
        Assertions.assertEquals(88.09421301339859D, model.multiplier());
    }
}
