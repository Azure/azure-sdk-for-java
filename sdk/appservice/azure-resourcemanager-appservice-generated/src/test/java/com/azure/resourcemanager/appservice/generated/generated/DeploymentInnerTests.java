// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.DeploymentInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class DeploymentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeploymentInner model = BinaryData.fromString(
            "{\"properties\":{\"status\":147764480,\"message\":\"wbdrwroqkljnzpqh\",\"author\":\"sarkyulfa\",\"deployer\":\"aasjqenhekza\",\"author_email\":\"geytlplslfc\",\"start_time\":\"2021-09-18T00:11:50Z\",\"end_time\":\"2021-07-25T22:46:34Z\",\"active\":true,\"details\":\"tolkyqfnj\"},\"kind\":\"rhnxzmfvmw\",\"id\":\"nrtc\",\"name\":\"rawwhyxf\",\"type\":\"hmbydmvwnb\"}")
            .toObject(DeploymentInner.class);
        Assertions.assertEquals("rhnxzmfvmw", model.kind());
        Assertions.assertEquals(147764480, model.status());
        Assertions.assertEquals("wbdrwroqkljnzpqh", model.message());
        Assertions.assertEquals("sarkyulfa", model.author());
        Assertions.assertEquals("aasjqenhekza", model.deployer());
        Assertions.assertEquals("geytlplslfc", model.authorEmail());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-18T00:11:50Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-25T22:46:34Z"), model.endTime());
        Assertions.assertEquals(true, model.active());
        Assertions.assertEquals("tolkyqfnj", model.details());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeploymentInner model = new DeploymentInner().withKind("rhnxzmfvmw")
            .withStatus(147764480)
            .withMessage("wbdrwroqkljnzpqh")
            .withAuthor("sarkyulfa")
            .withDeployer("aasjqenhekza")
            .withAuthorEmail("geytlplslfc")
            .withStartTime(OffsetDateTime.parse("2021-09-18T00:11:50Z"))
            .withEndTime(OffsetDateTime.parse("2021-07-25T22:46:34Z"))
            .withActive(true)
            .withDetails("tolkyqfnj");
        model = BinaryData.fromObject(model).toObject(DeploymentInner.class);
        Assertions.assertEquals("rhnxzmfvmw", model.kind());
        Assertions.assertEquals(147764480, model.status());
        Assertions.assertEquals("wbdrwroqkljnzpqh", model.message());
        Assertions.assertEquals("sarkyulfa", model.author());
        Assertions.assertEquals("aasjqenhekza", model.deployer());
        Assertions.assertEquals("geytlplslfc", model.authorEmail());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-18T00:11:50Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-25T22:46:34Z"), model.endTime());
        Assertions.assertEquals(true, model.active());
        Assertions.assertEquals("tolkyqfnj", model.details());
    }
}
