// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.VirtualApplication;
import com.azure.resourcemanager.appservice.generated.models.VirtualDirectory;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VirtualApplicationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualApplication model = BinaryData.fromString(
            "{\"virtualPath\":\"dmozu\",\"physicalPath\":\"lfsbtkadpysow\",\"preloadEnabled\":true,\"virtualDirectories\":[{\"virtualPath\":\"u\",\"physicalPath\":\"jqctojcmisofie\"}]}")
            .toObject(VirtualApplication.class);
        Assertions.assertEquals("dmozu", model.virtualPath());
        Assertions.assertEquals("lfsbtkadpysow", model.physicalPath());
        Assertions.assertEquals(true, model.preloadEnabled());
        Assertions.assertEquals("u", model.virtualDirectories().get(0).virtualPath());
        Assertions.assertEquals("jqctojcmisofie", model.virtualDirectories().get(0).physicalPath());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualApplication model = new VirtualApplication().withVirtualPath("dmozu")
            .withPhysicalPath("lfsbtkadpysow")
            .withPreloadEnabled(true)
            .withVirtualDirectories(
                Arrays.asList(new VirtualDirectory().withVirtualPath("u").withPhysicalPath("jqctojcmisofie")));
        model = BinaryData.fromObject(model).toObject(VirtualApplication.class);
        Assertions.assertEquals("dmozu", model.virtualPath());
        Assertions.assertEquals("lfsbtkadpysow", model.physicalPath());
        Assertions.assertEquals(true, model.preloadEnabled());
        Assertions.assertEquals("u", model.virtualDirectories().get(0).virtualPath());
        Assertions.assertEquals("jqctojcmisofie", model.virtualDirectories().get(0).physicalPath());
    }
}
