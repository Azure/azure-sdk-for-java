// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.RemotePrivateEndpointConnectionArmResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AppServiceEnvironmentsGetPrivateEndpointConnectionListMockTests {
    @Test
    public void testGetPrivateEndpointConnectionList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"sg\",\"privateEndpoint\":{\"id\":\"dozsspfwmfcortox\"},\"privateLinkServiceConnectionState\":{\"status\":\"jy\",\"description\":\"rybuqmkmw\",\"actionsRequired\":\"knvyilhos\"},\"ipAddresses\":[\"ioxgsrhxoyrg\",\"r\"]},\"kind\":\"c\",\"id\":\"mzg\",\"name\":\"bplqh\",\"type\":\"rarukdepsxu\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<RemotePrivateEndpointConnectionArmResource> response = manager.appServiceEnvironments()
            .getPrivateEndpointConnectionList("vuvrsczwcxln", "ohywfvyriaw", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("c", response.iterator().next().kind());
        Assertions.assertEquals("jy", response.iterator().next().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("rybuqmkmw",
            response.iterator().next().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("knvyilhos",
            response.iterator().next().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("ioxgsrhxoyrg", response.iterator().next().ipAddresses().get(0));
    }
}
