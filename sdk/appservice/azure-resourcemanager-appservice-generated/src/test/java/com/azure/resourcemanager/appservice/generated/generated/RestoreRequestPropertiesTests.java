// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.RestoreRequestProperties;
import com.azure.resourcemanager.appservice.generated.models.BackupRestoreOperationType;
import com.azure.resourcemanager.appservice.generated.models.DatabaseBackupSetting;
import com.azure.resourcemanager.appservice.generated.models.DatabaseType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RestoreRequestPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RestoreRequestProperties model = BinaryData.fromString(
            "{\"storageAccountUrl\":\"xjppcbqetfzfppv\",\"blobName\":\"zayjwdu\",\"overwrite\":false,\"siteName\":\"mprklatwiuujxsuj\",\"databases\":[{\"databaseType\":\"PostgreSql\",\"name\":\"eegxbnj\",\"connectionStringName\":\"zepdpcymgbfm\",\"connectionString\":\"uyyaescjxna\"},{\"databaseType\":\"PostgreSql\",\"name\":\"xqbkxdtbfkih\",\"connectionStringName\":\"nz\",\"connectionString\":\"fkzlxvcozcgo\"},{\"databaseType\":\"PostgreSql\",\"name\":\"lib\",\"connectionStringName\":\"nunzuysajvvq\",\"connectionString\":\"o\"}],\"ignoreConflictingHostNames\":false,\"ignoreDatabases\":true,\"appServicePlan\":\"ivgtibtkqjqjc\",\"operationType\":\"Relocation\",\"adjustConnectionStrings\":true,\"hostingEnvironment\":\"tkhh\"}")
            .toObject(RestoreRequestProperties.class);
        Assertions.assertEquals("xjppcbqetfzfppv", model.storageAccountUrl());
        Assertions.assertEquals("zayjwdu", model.blobName());
        Assertions.assertEquals(false, model.overwrite());
        Assertions.assertEquals("mprklatwiuujxsuj", model.siteName());
        Assertions.assertEquals(DatabaseType.POSTGRE_SQL, model.databases().get(0).databaseType());
        Assertions.assertEquals("eegxbnj", model.databases().get(0).name());
        Assertions.assertEquals("zepdpcymgbfm", model.databases().get(0).connectionStringName());
        Assertions.assertEquals("uyyaescjxna", model.databases().get(0).connectionString());
        Assertions.assertEquals(false, model.ignoreConflictingHostNames());
        Assertions.assertEquals(true, model.ignoreDatabases());
        Assertions.assertEquals("ivgtibtkqjqjc", model.appServicePlan());
        Assertions.assertEquals(BackupRestoreOperationType.RELOCATION, model.operationType());
        Assertions.assertEquals(true, model.adjustConnectionStrings());
        Assertions.assertEquals("tkhh", model.hostingEnvironment());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RestoreRequestProperties model = new RestoreRequestProperties().withStorageAccountUrl("xjppcbqetfzfppv")
            .withBlobName("zayjwdu")
            .withOverwrite(false)
            .withSiteName("mprklatwiuujxsuj")
            .withDatabases(Arrays.asList(
                new DatabaseBackupSetting().withDatabaseType(DatabaseType.POSTGRE_SQL)
                    .withName("eegxbnj")
                    .withConnectionStringName("zepdpcymgbfm")
                    .withConnectionString("uyyaescjxna"),
                new DatabaseBackupSetting().withDatabaseType(DatabaseType.POSTGRE_SQL)
                    .withName("xqbkxdtbfkih")
                    .withConnectionStringName("nz")
                    .withConnectionString("fkzlxvcozcgo"),
                new DatabaseBackupSetting().withDatabaseType(DatabaseType.POSTGRE_SQL)
                    .withName("lib")
                    .withConnectionStringName("nunzuysajvvq")
                    .withConnectionString("o")))
            .withIgnoreConflictingHostNames(false)
            .withIgnoreDatabases(true)
            .withAppServicePlan("ivgtibtkqjqjc")
            .withOperationType(BackupRestoreOperationType.RELOCATION)
            .withAdjustConnectionStrings(true)
            .withHostingEnvironment("tkhh");
        model = BinaryData.fromObject(model).toObject(RestoreRequestProperties.class);
        Assertions.assertEquals("xjppcbqetfzfppv", model.storageAccountUrl());
        Assertions.assertEquals("zayjwdu", model.blobName());
        Assertions.assertEquals(false, model.overwrite());
        Assertions.assertEquals("mprklatwiuujxsuj", model.siteName());
        Assertions.assertEquals(DatabaseType.POSTGRE_SQL, model.databases().get(0).databaseType());
        Assertions.assertEquals("eegxbnj", model.databases().get(0).name());
        Assertions.assertEquals("zepdpcymgbfm", model.databases().get(0).connectionStringName());
        Assertions.assertEquals("uyyaescjxna", model.databases().get(0).connectionString());
        Assertions.assertEquals(false, model.ignoreConflictingHostNames());
        Assertions.assertEquals(true, model.ignoreDatabases());
        Assertions.assertEquals("ivgtibtkqjqjc", model.appServicePlan());
        Assertions.assertEquals(BackupRestoreOperationType.RELOCATION, model.operationType());
        Assertions.assertEquals(true, model.adjustConnectionStrings());
        Assertions.assertEquals("tkhh", model.hostingEnvironment());
    }
}
