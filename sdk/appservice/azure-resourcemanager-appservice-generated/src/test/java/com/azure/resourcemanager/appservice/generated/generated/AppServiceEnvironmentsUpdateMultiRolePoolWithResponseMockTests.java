// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.CapabilityInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.WorkerPoolResourceInner;
import com.azure.resourcemanager.appservice.generated.models.ComputeModeOptions;
import com.azure.resourcemanager.appservice.generated.models.SkuCapacity;
import com.azure.resourcemanager.appservice.generated.models.SkuDescription;
import com.azure.resourcemanager.appservice.generated.models.WorkerPoolResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AppServiceEnvironmentsUpdateMultiRolePoolWithResponseMockTests {
    @Test
    public void testUpdateMultiRolePoolWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"workerSizeId\":900952974,\"computeMode\":\"Dedicated\",\"workerSize\":\"qaawyyszw\",\"workerCount\":879532792,\"instanceNames\":[\"lwfqrfy\",\"wzsipkhqh\"]},\"sku\":{\"name\":\"cztmqdkhohspkg\",\"tier\":\"mv\",\"size\":\"a\",\"family\":\"j\",\"capacity\":1275057659,\"skuCapacity\":{\"minimum\":559886362,\"maximum\":288957122,\"elasticMaximum\":1119817998,\"default\":1944266270,\"scaleType\":\"mx\"},\"locations\":[\"fauvgt\"],\"capabilities\":[{\"name\":\"zsmyvvfapfbm\",\"value\":\"hknefcoo\",\"reason\":\"mdspd\"},{\"name\":\"gupiosibg\",\"value\":\"ax\",\"reason\":\"bxjwnyr\"}]},\"kind\":\"yrttnrikssqfiksj\",\"id\":\"kignmtoqtuivi\",\"name\":\"bf\",\"type\":\"xpslpevzpqyd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkerPoolResource response = manager.appServiceEnvironments()
            .updateMultiRolePoolWithResponse("t", "oemzdnvnookl",
                new WorkerPoolResourceInner().withKind("aoavezwcl")
                    .withSku(new SkuDescription().withName("viaaep")
                        .withTier("xbofdc")
                        .withSize("oacfskzw")
                        .withFamily("etutqjsojw")
                        .withCapacity(2133839464)
                        .withSkuCapacity(new SkuCapacity().withMinimum(830430287)
                            .withMaximum(703422201)
                            .withElasticMaximum(1382782696)
                            .withDefaultProperty(1015032331)
                            .withScaleType("agvsljkaarqhp"))
                        .withLocations(Arrays.asList("hzsx"))
                        .withCapabilities(Arrays.asList(
                            new CapabilityInner().withName("ygmt").withValue("ivbuitee").withReason("n"),
                            new CapabilityInner().withName("vbrsxykwb").withValue("sd").withReason("jitlqxpsnnnxhgd"),
                            new CapabilityInner().withName("dxylndbgaicj").withValue("jzfzkh").withReason("pnmrxjdfk"),
                            new CapabilityInner().withName("kaipfyv")
                                .withValue("asvywkbiekyvak")
                                .withReason("hopgnapkpaiedox"))))
                    .withWorkerSizeId(1713730185)
                    .withComputeMode(ComputeModeOptions.DEDICATED)
                    .withWorkerSize("gertxic")
                    .withWorkerCount(1247770288),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("yrttnrikssqfiksj", response.kind());
        Assertions.assertEquals("cztmqdkhohspkg", response.sku().name());
        Assertions.assertEquals("mv", response.sku().tier());
        Assertions.assertEquals("a", response.sku().size());
        Assertions.assertEquals("j", response.sku().family());
        Assertions.assertEquals(1275057659, response.sku().capacity());
        Assertions.assertEquals(559886362, response.sku().skuCapacity().minimum());
        Assertions.assertEquals(288957122, response.sku().skuCapacity().maximum());
        Assertions.assertEquals(1119817998, response.sku().skuCapacity().elasticMaximum());
        Assertions.assertEquals(1944266270, response.sku().skuCapacity().defaultProperty());
        Assertions.assertEquals("mx", response.sku().skuCapacity().scaleType());
        Assertions.assertEquals("fauvgt", response.sku().locations().get(0));
        Assertions.assertEquals("zsmyvvfapfbm", response.sku().capabilities().get(0).name());
        Assertions.assertEquals("hknefcoo", response.sku().capabilities().get(0).value());
        Assertions.assertEquals("mdspd", response.sku().capabilities().get(0).reason());
        Assertions.assertEquals(900952974, response.workerSizeId());
        Assertions.assertEquals(ComputeModeOptions.DEDICATED, response.computeMode());
        Assertions.assertEquals("qaawyyszw", response.workerSize());
        Assertions.assertEquals(879532792, response.workerCount());
    }
}
