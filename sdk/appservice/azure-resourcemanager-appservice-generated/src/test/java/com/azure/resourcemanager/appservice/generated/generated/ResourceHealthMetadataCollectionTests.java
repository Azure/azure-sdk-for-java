// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.ResourceHealthMetadataInner;
import com.azure.resourcemanager.appservice.generated.models.ResourceHealthMetadataCollection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourceHealthMetadataCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceHealthMetadataCollection model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"category\":\"hdosmbngkq\",\"signalAvailability\":true},\"kind\":\"duvxd\",\"id\":\"xexatmdmnrs\",\"name\":\"nxoirxy\",\"type\":\"dmiplois\"}],\"nextLink\":\"zsoxznntwgk\"}")
            .toObject(ResourceHealthMetadataCollection.class);
        Assertions.assertEquals("duvxd", model.value().get(0).kind());
        Assertions.assertEquals("hdosmbngkq", model.value().get(0).category());
        Assertions.assertEquals(true, model.value().get(0).signalAvailability());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceHealthMetadataCollection model = new ResourceHealthMetadataCollection()
            .withValue(Arrays.asList(new ResourceHealthMetadataInner().withKind("duvxd")
                .withCategory("hdosmbngkq")
                .withSignalAvailability(true)));
        model = BinaryData.fromObject(model).toObject(ResourceHealthMetadataCollection.class);
        Assertions.assertEquals("duvxd", model.value().get(0).kind());
        Assertions.assertEquals("hdosmbngkq", model.value().get(0).category());
        Assertions.assertEquals(true, model.value().get(0).signalAvailability());
    }
}
