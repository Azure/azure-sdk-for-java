// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.StaticSiteUserProvidedFunctionAppArmResourceInner;
import com.azure.resourcemanager.appservice.generated.models.StaticSiteUserProvidedFunctionAppArmResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteMockTests {
    @Test
    public void testRegisterUserProvidedFunctionAppWithStaticSite() throws Exception {
        String responseStr
            = "{\"properties\":{\"functionAppResourceId\":\"xupxeainszru\",\"functionAppRegion\":\"eaenkfsxtsmz\",\"createdOn\":\"2021-02-12T14:43:28Z\"},\"kind\":\"fajalbs\",\"id\":\"wb\",\"name\":\"llvvazujcqzznwlx\",\"type\":\"mszxyfaidz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        StaticSiteUserProvidedFunctionAppArmResource response = manager.staticSites()
            .registerUserProvidedFunctionAppWithStaticSite("ca", "ityjznpryouujqye", "zoivincnihm",
                new StaticSiteUserProvidedFunctionAppArmResourceInner().withKind("hmilhzytdjcjunsd")
                    .withFunctionAppResourceId("c")
                    .withFunctionAppRegion("mua"),
                false, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("fajalbs", response.kind());
        Assertions.assertEquals("xupxeainszru", response.functionAppResourceId());
        Assertions.assertEquals("eaenkfsxtsmz", response.functionAppRegion());
    }
}
