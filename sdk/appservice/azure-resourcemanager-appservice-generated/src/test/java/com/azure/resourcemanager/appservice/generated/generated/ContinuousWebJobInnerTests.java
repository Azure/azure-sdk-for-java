// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.ContinuousWebJobInner;
import com.azure.resourcemanager.appservice.generated.models.ContinuousWebJobStatus;
import com.azure.resourcemanager.appservice.generated.models.WebJobType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ContinuousWebJobInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContinuousWebJobInner model = BinaryData.fromString(
            "{\"properties\":{\"status\":\"Starting\",\"detailed_status\":\"zgfctuuzow\",\"log_url\":\"zvuxnxa\",\"run_command\":\"hshzult\",\"url\":\"vmjdhypn\",\"extra_info_url\":\"cbdxvrivptbc\",\"web_job_type\":\"Continuous\",\"error\":\"grzukekyt\",\"using_sdk\":true,\"settings\":{\"inha\":\"datamaatvogpyc\",\"khwfjudapbq\":\"datahbdxsbypl\",\"tfcbrtsrdplqdyza\":\"datasezsggdp\"}},\"kind\":\"asfzrguzliyvsb\",\"id\":\"sinva\",\"name\":\"djuljgxotuda\",\"type\":\"kiyaosthulzugi\"}")
            .toObject(ContinuousWebJobInner.class);
        Assertions.assertEquals("asfzrguzliyvsb", model.kind());
        Assertions.assertEquals(ContinuousWebJobStatus.STARTING, model.status());
        Assertions.assertEquals("zgfctuuzow", model.detailedStatus());
        Assertions.assertEquals("zvuxnxa", model.logUrl());
        Assertions.assertEquals("hshzult", model.runCommand());
        Assertions.assertEquals("vmjdhypn", model.url());
        Assertions.assertEquals("cbdxvrivptbc", model.extraInfoUrl());
        Assertions.assertEquals(WebJobType.CONTINUOUS, model.webJobType());
        Assertions.assertEquals("grzukekyt", model.error());
        Assertions.assertEquals(true, model.usingSdk());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContinuousWebJobInner model = new ContinuousWebJobInner().withKind("asfzrguzliyvsb")
            .withStatus(ContinuousWebJobStatus.STARTING)
            .withDetailedStatus("zgfctuuzow")
            .withLogUrl("zvuxnxa")
            .withRunCommand("hshzult")
            .withUrl("vmjdhypn")
            .withExtraInfoUrl("cbdxvrivptbc")
            .withWebJobType(WebJobType.CONTINUOUS)
            .withError("grzukekyt")
            .withUsingSdk(true)
            .withSettings(
                mapOf("inha", "datamaatvogpyc", "khwfjudapbq", "datahbdxsbypl", "tfcbrtsrdplqdyza", "datasezsggdp"));
        model = BinaryData.fromObject(model).toObject(ContinuousWebJobInner.class);
        Assertions.assertEquals("asfzrguzliyvsb", model.kind());
        Assertions.assertEquals(ContinuousWebJobStatus.STARTING, model.status());
        Assertions.assertEquals("zgfctuuzow", model.detailedStatus());
        Assertions.assertEquals("zvuxnxa", model.logUrl());
        Assertions.assertEquals("hshzult", model.runCommand());
        Assertions.assertEquals("vmjdhypn", model.url());
        Assertions.assertEquals("cbdxvrivptbc", model.extraInfoUrl());
        Assertions.assertEquals(WebJobType.CONTINUOUS, model.webJobType());
        Assertions.assertEquals("grzukekyt", model.error());
        Assertions.assertEquals(true, model.usingSdk());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
