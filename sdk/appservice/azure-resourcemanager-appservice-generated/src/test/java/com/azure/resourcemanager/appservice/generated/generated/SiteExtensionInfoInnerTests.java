// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.SiteExtensionInfoInner;
import com.azure.resourcemanager.appservice.generated.models.SiteExtensionType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SiteExtensionInfoInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SiteExtensionInfoInner model = BinaryData.fromString(
            "{\"properties\":{\"extension_id\":\"ajzdj\",\"title\":\"brwrfrmhoufokrbg\",\"extension_type\":\"Gallery\",\"summary\":\"ksirs\",\"description\":\"unnik\",\"version\":\"xde\",\"extension_url\":\"nzadqmvpehp\",\"project_url\":\"vkyqhrplfqqnw\",\"icon_url\":\"srgclxnsvbkhh\",\"license_url\":\"sytue\",\"feed_url\":\"gukywdp\",\"authors\":[\"lcex\",\"rpitqzqnbseujc\",\"tcidcabn\"],\"installer_command_line_params\":\"hcxc\",\"published_date_time\":\"2021-02-02T08:23:38Z\",\"download_count\":381829495,\"local_is_latest_version\":true,\"local_path\":\"forylxaknwk\",\"installed_date_time\":\"2021-07-21T10:55:15Z\",\"provisioningState\":\"psymtupyjtrxxz\",\"comment\":\"snq\"},\"kind\":\"efnakdmtpj\",\"id\":\"sdlul\",\"name\":\"tjxhxwt\",\"type\":\"ttl\"}")
            .toObject(SiteExtensionInfoInner.class);
        Assertions.assertEquals("efnakdmtpj", model.kind());
        Assertions.assertEquals("ajzdj", model.extensionId());
        Assertions.assertEquals("brwrfrmhoufokrbg", model.title());
        Assertions.assertEquals(SiteExtensionType.GALLERY, model.extensionType());
        Assertions.assertEquals("ksirs", model.summary());
        Assertions.assertEquals("unnik", model.description());
        Assertions.assertEquals("xde", model.version());
        Assertions.assertEquals("nzadqmvpehp", model.extensionUrl());
        Assertions.assertEquals("vkyqhrplfqqnw", model.projectUrl());
        Assertions.assertEquals("srgclxnsvbkhh", model.iconUrl());
        Assertions.assertEquals("sytue", model.licenseUrl());
        Assertions.assertEquals("gukywdp", model.feedUrl());
        Assertions.assertEquals("lcex", model.authors().get(0));
        Assertions.assertEquals("hcxc", model.installerCommandLineParams());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-02T08:23:38Z"), model.publishedDateTime());
        Assertions.assertEquals(381829495, model.downloadCount());
        Assertions.assertEquals(true, model.localIsLatestVersion());
        Assertions.assertEquals("forylxaknwk", model.localPath());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-21T10:55:15Z"), model.installedDateTime());
        Assertions.assertEquals("psymtupyjtrxxz", model.provisioningState());
        Assertions.assertEquals("snq", model.comment());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SiteExtensionInfoInner model = new SiteExtensionInfoInner().withKind("efnakdmtpj")
            .withExtensionId("ajzdj")
            .withTitle("brwrfrmhoufokrbg")
            .withExtensionType(SiteExtensionType.GALLERY)
            .withSummary("ksirs")
            .withDescription("unnik")
            .withVersion("xde")
            .withExtensionUrl("nzadqmvpehp")
            .withProjectUrl("vkyqhrplfqqnw")
            .withIconUrl("srgclxnsvbkhh")
            .withLicenseUrl("sytue")
            .withFeedUrl("gukywdp")
            .withAuthors(Arrays.asList("lcex", "rpitqzqnbseujc", "tcidcabn"))
            .withInstallerCommandLineParams("hcxc")
            .withPublishedDateTime(OffsetDateTime.parse("2021-02-02T08:23:38Z"))
            .withDownloadCount(381829495)
            .withLocalIsLatestVersion(true)
            .withLocalPath("forylxaknwk")
            .withInstalledDateTime(OffsetDateTime.parse("2021-07-21T10:55:15Z"))
            .withProvisioningState("psymtupyjtrxxz")
            .withComment("snq");
        model = BinaryData.fromObject(model).toObject(SiteExtensionInfoInner.class);
        Assertions.assertEquals("efnakdmtpj", model.kind());
        Assertions.assertEquals("ajzdj", model.extensionId());
        Assertions.assertEquals("brwrfrmhoufokrbg", model.title());
        Assertions.assertEquals(SiteExtensionType.GALLERY, model.extensionType());
        Assertions.assertEquals("ksirs", model.summary());
        Assertions.assertEquals("unnik", model.description());
        Assertions.assertEquals("xde", model.version());
        Assertions.assertEquals("nzadqmvpehp", model.extensionUrl());
        Assertions.assertEquals("vkyqhrplfqqnw", model.projectUrl());
        Assertions.assertEquals("srgclxnsvbkhh", model.iconUrl());
        Assertions.assertEquals("sytue", model.licenseUrl());
        Assertions.assertEquals("gukywdp", model.feedUrl());
        Assertions.assertEquals("lcex", model.authors().get(0));
        Assertions.assertEquals("hcxc", model.installerCommandLineParams());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-02T08:23:38Z"), model.publishedDateTime());
        Assertions.assertEquals(381829495, model.downloadCount());
        Assertions.assertEquals(true, model.localIsLatestVersion());
        Assertions.assertEquals("forylxaknwk", model.localPath());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-21T10:55:15Z"), model.installedDateTime());
        Assertions.assertEquals("psymtupyjtrxxz", model.provisioningState());
        Assertions.assertEquals("snq", model.comment());
    }
}
