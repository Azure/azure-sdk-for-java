// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.WorkflowTrigger;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkflowTriggersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Moving\",\"createdTime\":\"2021-05-30T16:43:15Z\",\"changedTime\":\"2021-06-11T05:36:45Z\",\"state\":\"Suspended\",\"status\":\"Ignored\",\"lastExecutionTime\":\"2021-06-27T20:23:34Z\",\"nextExecutionTime\":\"2021-01-14T03:01:08Z\",\"recurrence\":{\"frequency\":\"NotSpecified\",\"interval\":1800011427,\"startTime\":\"lrgxskghdadgqpbg\",\"endTime\":\"afazwieizzxjjdb\",\"timeZone\":\"uinrs\",\"schedule\":{\"minutes\":[275878767,80219341,1194054233,136266807],\"hours\":[612317591,387441244,1602775994,1094470627],\"weekDays\":[\"Saturday\"],\"monthDays\":[1320309635,173844772],\"monthlyOccurrences\":[{},{},{}]}},\"workflow\":{\"id\":\"stzbvdzj\",\"name\":\"ocjua\",\"type\":\"lrtssbkzd\"}},\"name\":\"pyljnqiprjahg\",\"type\":\"byic\",\"id\":\"f\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<WorkflowTrigger> response = manager.workflowTriggers()
            .list("xyznnpazbfrqotig", "ndfrxn", "wqyhklhossc", 1874647638, "tiu", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("f", response.iterator().next().id());
    }
}
