// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.ArmIdWrapper;
import com.azure.resourcemanager.appservice.generated.models.PrivateLinkConnectionState;
import com.azure.resourcemanager.appservice.generated.models.RemotePrivateEndpointConnectionArmResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AppServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionMockTests {
    @Test
    public void testApproveOrRejectPrivateEndpointConnection() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"privateEndpoint\":{\"id\":\"nxfof\"},\"privateLinkServiceConnectionState\":{\"status\":\"roqk\",\"description\":\"gi\",\"actionsRequired\":\"kzctqbvntlzvgjme\"},\"ipAddresses\":[\"ydyislepdbsiklnt\",\"pfnumpyy\",\"b\"]},\"kind\":\"mjbmtxbiwf\",\"id\":\"kgeqotvocjktihnw\",\"name\":\"vtrsgf\",\"type\":\"mtfnbvtx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        RemotePrivateEndpointConnectionArmResource response = manager.appServiceEnvironments()
            .defineRemotePrivateEndpointConnectionArmResource("hffcanvrdtdl")
            .withExistingHostingEnvironment("ijssytdpwljtwibw", "dxymnswxqt")
            .withKind("n")
            .withPrivateEndpoint(new ArmIdWrapper())
            .withPrivateLinkServiceConnectionState(new PrivateLinkConnectionState().withStatus("biuwnxhqeljmfo")
                .withDescription("diku")
                .withActionsRequired("cl"))
            .withIpAddresses(Arrays.asList("hghkf"))
            .create();

        Assertions.assertEquals("mjbmtxbiwf", response.kind());
        Assertions.assertEquals("roqk", response.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("gi", response.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("kzctqbvntlzvgjme", response.privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("ydyislepdbsiklnt", response.ipAddresses().get(0));
    }
}
