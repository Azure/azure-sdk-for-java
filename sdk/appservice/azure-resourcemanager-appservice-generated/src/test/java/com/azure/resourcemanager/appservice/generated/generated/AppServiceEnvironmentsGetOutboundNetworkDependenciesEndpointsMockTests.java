// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.OutboundEnvironmentEndpoint;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsMockTests {
    @Test
    public void testGetOutboundNetworkDependenciesEndpoints() throws Exception {
        String responseStr
            = "{\"value\":[{\"category\":\"pofaogvmq\",\"endpoints\":[{\"domainName\":\"qcqhwfskmkdrpkdp\",\"endpointDetails\":[{\"ipAddress\":\"wcxjve\",\"port\":1798419450,\"latency\":93.97976076972253,\"isAccessible\":true},{\"ipAddress\":\"cotqocn\",\"port\":836053136,\"latency\":97.00327847475552,\"isAccessible\":false},{\"ipAddress\":\"dsolb\",\"port\":1637776711,\"latency\":31.452974907291154,\"isAccessible\":true},{\"ipAddress\":\"lkpvaagrdf\",\"port\":1754486207,\"latency\":74.47809032553852,\"isAccessible\":false}]},{\"domainName\":\"vosucryh\",\"endpointDetails\":[{\"ipAddress\":\"hzfotfrfhrjkah\",\"port\":850451217,\"latency\":8.833175382165948,\"isAccessible\":true},{\"ipAddress\":\"wo\",\"port\":1083166870,\"latency\":63.86198584201863,\"isAccessible\":false},{\"ipAddress\":\"nrfkzny\",\"port\":1285986017,\"latency\":93.0467762443737,\"isAccessible\":true},{\"ipAddress\":\"xhwpgkrnxrj\",\"port\":606100057,\"latency\":23.616152706814052,\"isAccessible\":false}]},{\"domainName\":\"gqib\",\"endpointDetails\":[{\"ipAddress\":\"rtxhztufw\",\"port\":995435359,\"latency\":41.162980863489516,\"isAccessible\":true},{\"ipAddress\":\"us\",\"port\":1989837386,\"latency\":27.306870897933365,\"isAccessible\":false}]},{\"domainName\":\"nttkdrble\",\"endpointDetails\":[{\"ipAddress\":\"stiwdeosb\",\"port\":1984538835,\"latency\":87.09679626034583,\"isAccessible\":false},{\"ipAddress\":\"uwhbpojujpifxtgr\",\"port\":1260045073,\"latency\":7.0471461351856775,\"isAccessible\":false},{\"ipAddress\":\"xolau\",\"port\":696469446,\"latency\":9.938158825924159,\"isAccessible\":true}]}]}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<OutboundEnvironmentEndpoint> response = manager.appServiceEnvironments()
            .getOutboundNetworkDependenciesEndpoints("kp", "rjkmpaxoe", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("pofaogvmq", response.iterator().next().category());
        Assertions.assertEquals("qcqhwfskmkdrpkdp", response.iterator().next().endpoints().get(0).domainName());
        Assertions.assertEquals("wcxjve",
            response.iterator().next().endpoints().get(0).endpointDetails().get(0).ipAddress());
        Assertions.assertEquals(1798419450,
            response.iterator().next().endpoints().get(0).endpointDetails().get(0).port());
        Assertions.assertEquals(93.97976076972253D,
            response.iterator().next().endpoints().get(0).endpointDetails().get(0).latency());
        Assertions.assertEquals(true,
            response.iterator().next().endpoints().get(0).endpointDetails().get(0).isAccessible());
    }
}
