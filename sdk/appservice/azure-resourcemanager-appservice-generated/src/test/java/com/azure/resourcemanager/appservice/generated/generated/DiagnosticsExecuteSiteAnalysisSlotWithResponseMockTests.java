// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.DiagnosticAnalysis;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DiagnosticsExecuteSiteAnalysisSlotWithResponseMockTests {
    @Test
    public void testExecuteSiteAnalysisSlotWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"startTime\":\"2021-08-19T19:50:38Z\",\"endTime\":\"2021-09-14T11:36:48Z\",\"abnormalTimePeriods\":[{\"startTime\":\"2021-04-25T01:49:06Z\",\"endTime\":\"2021-04-26T05:11:38Z\",\"events\":[{},{}],\"solutions\":[{}]}],\"payload\":[{\"source\":\"znnvda\",\"detectorDefinition\":{\"displayName\":\"diytxqsohehhtlt\",\"description\":\"ijdr\",\"rank\":27.15132397021608,\"isEnabled\":true},\"metrics\":[{}],\"data\":[[{}],[{},{}],[{},{}]],\"detectorMetaData\":{\"dataSource\":{}}}],\"nonCorrelatedDetectors\":[{\"displayName\":\"gxqfghloshop\",\"description\":\"pcmtsbandes\",\"rank\":58.05230839412947,\"isEnabled\":false}]},\"kind\":\"ljm\",\"id\":\"o\",\"name\":\"stzvtfyqeogw\",\"type\":\"syniwxh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DiagnosticAnalysis response = manager.diagnostics()
            .executeSiteAnalysisSlotWithResponse("ayyxgcgb", "ieqonsbukznxd", "vqopxun", "oxtkmknacnfz",
                "ytbhdjpagwszmw", OffsetDateTime.parse("2021-03-21T06:59:28Z"),
                OffsetDateTime.parse("2021-01-07T20:53:52Z"), "feyexbgdfyoszwi", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ljm", response.kind());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-19T19:50:38Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-14T11:36:48Z"), response.endTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-25T01:49:06Z"),
            response.abnormalTimePeriods().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-26T05:11:38Z"),
            response.abnormalTimePeriods().get(0).endTime());
        Assertions.assertEquals("znnvda", response.payload().get(0).source());
    }
}
