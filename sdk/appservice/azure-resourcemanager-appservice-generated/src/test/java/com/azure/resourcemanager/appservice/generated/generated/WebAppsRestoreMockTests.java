// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.RestoreRequestInner;
import com.azure.resourcemanager.appservice.generated.models.BackupRestoreOperationType;
import com.azure.resourcemanager.appservice.generated.models.DatabaseBackupSetting;
import com.azure.resourcemanager.appservice.generated.models.DatabaseType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WebAppsRestoreMockTests {
    @Test
    public void testRestore() throws Exception {
        String responseStr = "{}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        manager.webApps()
            .restore("vki", "yhnfqnekpxd", "deahfg",
                new RestoreRequestInner().withKind("r")
                    .withStorageAccountUrl("ahnsmktkhlq")
                    .withBlobName("jd")
                    .withOverwrite(true)
                    .withSiteName("btzrgxnla")
                    .withDatabases(Arrays.asList(new DatabaseBackupSetting().withDatabaseType(DatabaseType.MY_SQL)
                        .withName("ntcbl")
                        .withConnectionStringName("zoqtfbjk")
                        .withConnectionString("ktelblbungr")))
                    .withIgnoreConflictingHostNames(true)
                    .withIgnoreDatabases(true)
                    .withAppServicePlan("ttoenfohipijf")
                    .withOperationType(BackupRestoreOperationType.CLONE)
                    .withAdjustConnectionStrings(true)
                    .withHostingEnvironment("b"),
                com.azure.core.util.Context.NONE);

    }
}
