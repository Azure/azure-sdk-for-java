// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.Ingress;
import com.azure.resourcemanager.appservice.generated.models.IngressTransportMethod;
import com.azure.resourcemanager.appservice.generated.models.TrafficWeight;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IngressTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Ingress model = BinaryData.fromString(
            "{\"fqdn\":\"cafeddw\",\"external\":false,\"targetPort\":162906535,\"transport\":\"http2\",\"traffic\":[{\"revisionName\":\"gnhgook\",\"weight\":72957210,\"latestRevision\":true}],\"allowInsecure\":true}")
            .toObject(Ingress.class);
        Assertions.assertEquals(false, model.external());
        Assertions.assertEquals(162906535, model.targetPort());
        Assertions.assertEquals(IngressTransportMethod.HTTP2, model.transport());
        Assertions.assertEquals("gnhgook", model.traffic().get(0).revisionName());
        Assertions.assertEquals(72957210, model.traffic().get(0).weight());
        Assertions.assertEquals(true, model.traffic().get(0).latestRevision());
        Assertions.assertEquals(true, model.allowInsecure());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Ingress model = new Ingress().withExternal(false)
            .withTargetPort(162906535)
            .withTransport(IngressTransportMethod.HTTP2)
            .withTraffic(Arrays
                .asList(new TrafficWeight().withRevisionName("gnhgook").withWeight(72957210).withLatestRevision(true)))
            .withAllowInsecure(true);
        model = BinaryData.fromObject(model).toObject(Ingress.class);
        Assertions.assertEquals(false, model.external());
        Assertions.assertEquals(162906535, model.targetPort());
        Assertions.assertEquals(IngressTransportMethod.HTTP2, model.transport());
        Assertions.assertEquals("gnhgook", model.traffic().get(0).revisionName());
        Assertions.assertEquals(72957210, model.traffic().get(0).weight());
        Assertions.assertEquals(true, model.traffic().get(0).latestRevision());
        Assertions.assertEquals(true, model.allowInsecure());
    }
}
