// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.PrivateLinkResourcesWrapper;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WebAppsGetPrivateLinkResourcesSlotWithResponseMockTests {
    @Test
    public void testGetPrivateLinkResourcesSlotWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"id\":\"cm\",\"name\":\"oqkcikfe\",\"type\":\"hxomtvkx\",\"properties\":{\"groupId\":\"xlpy\",\"requiredMembers\":[\"detydqgy\",\"uysutspo\",\"rskkraapczmziif\"],\"requiredZoneNames\":[\"gtqy\",\"ocfyywcflcio\"]}},{\"id\":\"xybm\",\"name\":\"tbwdfjcep\",\"type\":\"cpwtj\",\"properties\":{\"groupId\":\"uhrtqn\",\"requiredMembers\":[\"cnic\",\"nsbbccbqxwoj\",\"ejxhfeolzftfyjce\",\"kidlpmlxhzwyyye\"],\"requiredZoneNames\":[\"mlhgytkthevodd\",\"negwsyxdfdjftcrj\",\"hdifbhtxtcqjgc\"]}},{\"id\":\"ltwlpu\",\"name\":\"rjxkphaq\",\"type\":\"nejufljqzbixlzaa\",\"properties\":{\"groupId\":\"uvhyerjrcxyx\",\"requiredMembers\":[\"lbneepfjibtspli\",\"fqjweigywj\"],\"requiredZoneNames\":[\"gncscwsefdqnsu\"]}},{\"id\":\"omln\",\"name\":\"t\",\"type\":\"jdcvnanej\",\"properties\":{\"groupId\":\"rllecqu\",\"requiredMembers\":[\"yhkvtofxke\",\"wvcyprpog\",\"qvuftkiyghcmpyki\"],\"requiredZoneNames\":[\"hpzcgsapklfns\"]}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PrivateLinkResourcesWrapper response = manager.webApps()
            .getPrivateLinkResourcesSlotWithResponse("eawolhlfffe", "nbmhqylrsywisc", "qtvxhipchdpd",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cm", response.value().get(0).id());
        Assertions.assertEquals("oqkcikfe", response.value().get(0).name());
        Assertions.assertEquals("hxomtvkx", response.value().get(0).type());
    }
}
