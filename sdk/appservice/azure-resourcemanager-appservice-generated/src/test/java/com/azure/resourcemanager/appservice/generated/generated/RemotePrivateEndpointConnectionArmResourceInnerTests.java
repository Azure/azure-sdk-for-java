// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.RemotePrivateEndpointConnectionArmResourceInner;
import com.azure.resourcemanager.appservice.generated.models.ArmIdWrapper;
import com.azure.resourcemanager.appservice.generated.models.PrivateLinkConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RemotePrivateEndpointConnectionArmResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RemotePrivateEndpointConnectionArmResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"ac\",\"privateEndpoint\":{\"id\":\"pilguooqjag\"},\"privateLinkServiceConnectionState\":{\"status\":\"tg\",\"description\":\"iookjbsah\",\"actionsRequired\":\"dt\"},\"ipAddresses\":[\"lq\",\"cslmotoebnfxo\",\"vcjkgd\"]},\"kind\":\"azftxejwabmdujtm\",\"id\":\"cope\",\"name\":\"c\",\"type\":\"jurbuhhlkyqltqsr\"}")
            .toObject(RemotePrivateEndpointConnectionArmResourceInner.class);
        Assertions.assertEquals("azftxejwabmdujtm", model.kind());
        Assertions.assertEquals("tg", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("iookjbsah", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("dt", model.privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("lq", model.ipAddresses().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RemotePrivateEndpointConnectionArmResourceInner model
            = new RemotePrivateEndpointConnectionArmResourceInner().withKind("azftxejwabmdujtm")
                .withPrivateEndpoint(new ArmIdWrapper())
                .withPrivateLinkServiceConnectionState(new PrivateLinkConnectionState().withStatus("tg")
                    .withDescription("iookjbsah")
                    .withActionsRequired("dt"))
                .withIpAddresses(Arrays.asList("lq", "cslmotoebnfxo", "vcjkgd"));
        model = BinaryData.fromObject(model).toObject(RemotePrivateEndpointConnectionArmResourceInner.class);
        Assertions.assertEquals("azftxejwabmdujtm", model.kind());
        Assertions.assertEquals("tg", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("iookjbsah", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("dt", model.privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("lq", model.ipAddresses().get(0));
    }
}
