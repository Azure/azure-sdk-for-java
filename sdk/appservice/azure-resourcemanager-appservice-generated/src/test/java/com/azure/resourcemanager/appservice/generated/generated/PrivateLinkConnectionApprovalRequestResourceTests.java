// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.PrivateLinkConnectionApprovalRequestResource;
import com.azure.resourcemanager.appservice.generated.models.PrivateLinkConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateLinkConnectionApprovalRequestResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateLinkConnectionApprovalRequestResource model = BinaryData.fromString(
            "{\"properties\":{\"privateLinkServiceConnectionState\":{\"status\":\"oyzjfg\",\"description\":\"au\",\"actionsRequired\":\"nabgrsnfzmth\"}},\"kind\":\"cuf\",\"id\":\"azfotrp\",\"name\":\"umamdorgl\",\"type\":\"ekh\"}")
            .toObject(PrivateLinkConnectionApprovalRequestResource.class);
        Assertions.assertEquals("cuf", model.kind());
        Assertions.assertEquals("oyzjfg", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("au", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("nabgrsnfzmth", model.privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateLinkConnectionApprovalRequestResource model
            = new PrivateLinkConnectionApprovalRequestResource().withKind("cuf")
                .withPrivateLinkServiceConnectionState(new PrivateLinkConnectionState().withStatus("oyzjfg")
                    .withDescription("au")
                    .withActionsRequired("nabgrsnfzmth"));
        model = BinaryData.fromObject(model).toObject(PrivateLinkConnectionApprovalRequestResource.class);
        Assertions.assertEquals("cuf", model.kind());
        Assertions.assertEquals("oyzjfg", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("au", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("nabgrsnfzmth", model.privateLinkServiceConnectionState().actionsRequired());
    }
}
