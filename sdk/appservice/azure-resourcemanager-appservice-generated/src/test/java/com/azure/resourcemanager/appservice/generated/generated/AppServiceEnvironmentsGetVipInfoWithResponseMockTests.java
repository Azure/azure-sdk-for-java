// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.AddressResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AppServiceEnvironmentsGetVipInfoWithResponseMockTests {
    @Test
    public void testGetVipInfoWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"serviceIpAddress\":\"f\",\"internalIpAddress\":\"di\",\"outboundIpAddresses\":[\"rbqgatkliopgwpka\"],\"vipMappings\":[{\"virtualIP\":\"tyyvxkwobb\",\"internalHttpPort\":1541521750,\"internalHttpsPort\":360739295,\"inUse\":false,\"serviceName\":\"trlzkpjeeg\"},{\"virtualIP\":\"hfnaqcl\",\"internalHttpPort\":1013772582,\"internalHttpsPort\":1660834081,\"inUse\":false,\"serviceName\":\"thfwphnm\"},{\"virtualIP\":\"blje\",\"internalHttpPort\":1634336541,\"internalHttpsPort\":1134440343,\"inUse\":true,\"serviceName\":\"neaqahzkvnapxht\"},{\"virtualIP\":\"sddxaovubf\",\"internalHttpPort\":367866978,\"internalHttpsPort\":1086419044,\"inUse\":true,\"serviceName\":\"iibuab\"}]},\"kind\":\"dwhvnjcbuzud\",\"id\":\"qoeoukvinkgb\",\"name\":\"zqbo\",\"type\":\"fhdyasklmy\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AddressResponse response = manager.appServiceEnvironments()
            .getVipInfoWithResponse("dibygrqcidi", "kxikxiqxlxoks", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("dwhvnjcbuzud", response.kind());
        Assertions.assertEquals("f", response.serviceIpAddress());
        Assertions.assertEquals("di", response.internalIpAddress());
        Assertions.assertEquals("rbqgatkliopgwpka", response.outboundIpAddresses().get(0));
        Assertions.assertEquals("tyyvxkwobb", response.vipMappings().get(0).virtualIp());
        Assertions.assertEquals(1541521750, response.vipMappings().get(0).internalHttpPort());
        Assertions.assertEquals(360739295, response.vipMappings().get(0).internalHttpsPort());
        Assertions.assertEquals(false, response.vipMappings().get(0).inUse());
        Assertions.assertEquals("trlzkpjeeg", response.vipMappings().get(0).serviceName());
    }
}
