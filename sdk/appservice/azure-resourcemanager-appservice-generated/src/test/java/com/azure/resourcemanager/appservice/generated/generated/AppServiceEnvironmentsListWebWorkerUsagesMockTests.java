// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.Usage;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AppServiceEnvironmentsListWebWorkerUsagesMockTests {
    @Test
    public void testListWebWorkerUsages() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"displayName\":\"ximgnsiy\",\"resourceName\":\"uyzrnngnmfh\",\"unit\":\"foummdomvd\",\"currentValue\":2154884107227061319,\"limit\":7351087574832415837,\"nextResetTime\":\"2021-07-17T18:56:50Z\",\"computeMode\":\"Shared\",\"siteMode\":\"pqhsidfhsf\"},\"kind\":\"czefgfq\",\"id\":\"e\",\"name\":\"jntiqbxzeiudogqf\",\"type\":\"rbroeomufaz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Usage> response = manager.appServiceEnvironments()
            .listWebWorkerUsages("ilfvrpbcgd", "tfxoffckejxomn", "uqwxxynttrn", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("czefgfq", response.iterator().next().kind());
    }
}
