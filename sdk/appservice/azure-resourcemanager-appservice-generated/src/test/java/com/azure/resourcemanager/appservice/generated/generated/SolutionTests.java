// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.models.NameValuePair;
import com.azure.resourcemanager.appservice.generated.models.Solution;
import com.azure.resourcemanager.appservice.generated.models.SolutionType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SolutionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Solution model = BinaryData.fromString(
            "{\"id\":88.67936907104446,\"displayName\":\"vuaytuad\",\"order\":35.15993839182529,\"description\":\"bwpntghy\",\"type\":\"BestPractices\",\"data\":[[{\"name\":\"nx\",\"value\":\"u\"},{\"name\":\"zladltxkpbq\",\"value\":\"fdqqjwkrhwz\"},{\"name\":\"nojisgglmvok\",\"value\":\"uztjct\"}],[{\"name\":\"vbkaehxs\",\"value\":\"ygdfwakwseiv\"},{\"name\":\"kxh\",\"value\":\"owljuxlkbectvtfj\"},{\"name\":\"kdch\",\"value\":\"iubavlzwpvgm\"},{\"name\":\"lkzazmgok\",\"value\":\"gjqafkmkrokzr\"}]],\"metadata\":[[{\"name\":\"wpqrtvaozn\",\"value\":\"ixiezeag\"}],[{\"name\":\"it\",\"value\":\"gedhfpjstlzm\"},{\"name\":\"syjdeolctae\",\"value\":\"syrled\"}],[{\"name\":\"stbvtqig\",\"value\":\"zvsgeafgfosehxlz\"}],[{\"name\":\"zppkk\",\"value\":\"aesky\"},{\"name\":\"lp\",\"value\":\"qtoyrpl\"}]]}")
            .toObject(Solution.class);
        Assertions.assertEquals(88.67936907104446D, model.id());
        Assertions.assertEquals("vuaytuad", model.displayName());
        Assertions.assertEquals(35.15993839182529D, model.order());
        Assertions.assertEquals("bwpntghy", model.description());
        Assertions.assertEquals(SolutionType.BEST_PRACTICES, model.type());
        Assertions.assertEquals("nx", model.data().get(0).get(0).name());
        Assertions.assertEquals("u", model.data().get(0).get(0).value());
        Assertions.assertEquals("wpqrtvaozn", model.metadata().get(0).get(0).name());
        Assertions.assertEquals("ixiezeag", model.metadata().get(0).get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Solution model = new Solution().withId(88.67936907104446D)
            .withDisplayName("vuaytuad")
            .withOrder(35.15993839182529D)
            .withDescription("bwpntghy")
            .withType(SolutionType.BEST_PRACTICES)
            .withData(Arrays.asList(
                Arrays.asList(new NameValuePair().withName("nx").withValue("u"),
                    new NameValuePair().withName("zladltxkpbq").withValue("fdqqjwkrhwz"),
                    new NameValuePair().withName("nojisgglmvok").withValue("uztjct")),
                Arrays.asList(new NameValuePair().withName("vbkaehxs").withValue("ygdfwakwseiv"),
                    new NameValuePair().withName("kxh").withValue("owljuxlkbectvtfj"),
                    new NameValuePair().withName("kdch").withValue("iubavlzwpvgm"),
                    new NameValuePair().withName("lkzazmgok").withValue("gjqafkmkrokzr"))))
            .withMetadata(Arrays.asList(Arrays.asList(new NameValuePair().withName("wpqrtvaozn").withValue("ixiezeag")),
                Arrays.asList(new NameValuePair().withName("it").withValue("gedhfpjstlzm"),
                    new NameValuePair().withName("syjdeolctae").withValue("syrled")),
                Arrays.asList(new NameValuePair().withName("stbvtqig").withValue("zvsgeafgfosehxlz")),
                Arrays.asList(new NameValuePair().withName("zppkk").withValue("aesky"),
                    new NameValuePair().withName("lp").withValue("qtoyrpl"))));
        model = BinaryData.fromObject(model).toObject(Solution.class);
        Assertions.assertEquals(88.67936907104446D, model.id());
        Assertions.assertEquals("vuaytuad", model.displayName());
        Assertions.assertEquals(35.15993839182529D, model.order());
        Assertions.assertEquals("bwpntghy", model.description());
        Assertions.assertEquals(SolutionType.BEST_PRACTICES, model.type());
        Assertions.assertEquals("nx", model.data().get(0).get(0).name());
        Assertions.assertEquals("u", model.data().get(0).get(0).value());
        Assertions.assertEquals("wpqrtvaozn", model.metadata().get(0).get(0).name());
        Assertions.assertEquals("ixiezeag", model.metadata().get(0).get(0).value());
    }
}
