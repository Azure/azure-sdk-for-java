// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.AppServicePlanProperties;
import com.azure.resourcemanager.appservice.generated.models.HostingEnvironmentProfile;
import com.azure.resourcemanager.appservice.generated.models.KubeEnvironmentProfile;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class AppServicePlanPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AppServicePlanProperties model = BinaryData.fromString(
            "{\"workerTierName\":\"zgaufcshhvn\",\"status\":\"Creating\",\"subscription\":\"xkym\",\"hostingEnvironmentProfile\":{\"id\":\"nxrjkixtwbtaoy\",\"name\":\"yghs\",\"type\":\"cyl\"},\"maximumNumberOfWorkers\":52524988,\"numberOfWorkers\":1218626524,\"geoRegion\":\"ghpxycphdr\",\"perSiteScaling\":true,\"elasticScaleEnabled\":false,\"maximumElasticWorkerCount\":1170887139,\"numberOfSites\":895699249,\"isSpot\":false,\"spotExpirationTime\":\"2021-04-06T06:54:17Z\",\"freeOfferExpirationTime\":\"2021-05-13T04:46:25Z\",\"resourceGroup\":\"nqmhrp\",\"reserved\":false,\"isXenon\":false,\"hyperV\":false,\"targetWorkerCount\":1691318308,\"targetWorkerSizeId\":480915172,\"provisioningState\":\"Succeeded\",\"kubeEnvironmentProfile\":{\"id\":\"fxuifmcsypobk\",\"name\":\"zr\",\"type\":\"sylollgtr\"},\"zoneRedundant\":true}")
            .toObject(AppServicePlanProperties.class);
        Assertions.assertEquals("zgaufcshhvn", model.workerTierName());
        Assertions.assertEquals("nxrjkixtwbtaoy", model.hostingEnvironmentProfile().id());
        Assertions.assertEquals(true, model.perSiteScaling());
        Assertions.assertEquals(false, model.elasticScaleEnabled());
        Assertions.assertEquals(1170887139, model.maximumElasticWorkerCount());
        Assertions.assertEquals(false, model.isSpot());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-06T06:54:17Z"), model.spotExpirationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-13T04:46:25Z"), model.freeOfferExpirationTime());
        Assertions.assertEquals(false, model.reserved());
        Assertions.assertEquals(false, model.isXenon());
        Assertions.assertEquals(false, model.hyperV());
        Assertions.assertEquals(1691318308, model.targetWorkerCount());
        Assertions.assertEquals(480915172, model.targetWorkerSizeId());
        Assertions.assertEquals("fxuifmcsypobk", model.kubeEnvironmentProfile().id());
        Assertions.assertEquals(true, model.zoneRedundant());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AppServicePlanProperties model = new AppServicePlanProperties().withWorkerTierName("zgaufcshhvn")
            .withHostingEnvironmentProfile(new HostingEnvironmentProfile().withId("nxrjkixtwbtaoy"))
            .withPerSiteScaling(true)
            .withElasticScaleEnabled(false)
            .withMaximumElasticWorkerCount(1170887139)
            .withIsSpot(false)
            .withSpotExpirationTime(OffsetDateTime.parse("2021-04-06T06:54:17Z"))
            .withFreeOfferExpirationTime(OffsetDateTime.parse("2021-05-13T04:46:25Z"))
            .withReserved(false)
            .withIsXenon(false)
            .withHyperV(false)
            .withTargetWorkerCount(1691318308)
            .withTargetWorkerSizeId(480915172)
            .withKubeEnvironmentProfile(new KubeEnvironmentProfile().withId("fxuifmcsypobk"))
            .withZoneRedundant(true);
        model = BinaryData.fromObject(model).toObject(AppServicePlanProperties.class);
        Assertions.assertEquals("zgaufcshhvn", model.workerTierName());
        Assertions.assertEquals("nxrjkixtwbtaoy", model.hostingEnvironmentProfile().id());
        Assertions.assertEquals(true, model.perSiteScaling());
        Assertions.assertEquals(false, model.elasticScaleEnabled());
        Assertions.assertEquals(1170887139, model.maximumElasticWorkerCount());
        Assertions.assertEquals(false, model.isSpot());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-06T06:54:17Z"), model.spotExpirationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-13T04:46:25Z"), model.freeOfferExpirationTime());
        Assertions.assertEquals(false, model.reserved());
        Assertions.assertEquals(false, model.isXenon());
        Assertions.assertEquals(false, model.hyperV());
        Assertions.assertEquals(1691318308, model.targetWorkerCount());
        Assertions.assertEquals(480915172, model.targetWorkerSizeId());
        Assertions.assertEquals("fxuifmcsypobk", model.kubeEnvironmentProfile().id());
        Assertions.assertEquals(true, model.zoneRedundant());
    }
}
