// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appservice.generated.AppServiceManager;
import com.azure.resourcemanager.appservice.generated.models.DetectorResponse;
import com.azure.resourcemanager.appservice.generated.models.InsightStatus;
import com.azure.resourcemanager.appservice.generated.models.RenderingType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CertificateOrdersDiagnosticsListAppServiceCertificateOrderDetectorResponseMockTests {
    @Test
    public void testListAppServiceCertificateOrderDetectorResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"metadata\":{\"id\":\"gw\",\"name\":\"znob\",\"description\":\"gyheyayktutflhe\",\"author\":\"xefs\",\"category\":\"mdcoeexwgzsz\",\"supportTopicList\":[{\"id\":\"qjhghihkhjld\",\"pesId\":\"dqtjhtgnc\"},{\"id\":\"jvmdkgv\",\"pesId\":\"ym\"},{\"id\":\"uuhwuoxeu\",\"pesId\":\"izzjotmygzjr\"},{\"id\":\"lq\",\"pesId\":\"fdbjxx\"}],\"analysisType\":[\"leimswxoignqumjm\",\"gzetuvfpsijpmept\",\"qsnpafks\"],\"type\":\"Analysis\",\"score\":51.966496},\"dataset\":[{\"table\":{\"tableName\":\"olmobaqol\",\"columns\":[{},{},{},{}],\"rows\":[[],[],[]]},\"renderingProperties\":{\"type\":\"ChangesView\",\"title\":\"tgfdygaphlwmiva\",\"description\":\"nbzcjmsrorjbyyx\"}},{\"table\":{\"tableName\":\"ahvby\",\"columns\":[{}],\"rows\":[[],[]]},\"renderingProperties\":{\"type\":\"DownTime\",\"title\":\"ng\",\"description\":\"yct\"}},{\"table\":{\"tableName\":\"gjyho\",\"columns\":[{},{}],\"rows\":[[],[],[],[]]},\"renderingProperties\":{\"type\":\"Markdown\",\"title\":\"vskqxgb\",\"description\":\"ozrvlklaurl\"}},{\"table\":{\"tableName\":\"eocppgsf\",\"columns\":[{},{},{}],\"rows\":[[]]},\"renderingProperties\":{\"type\":\"DynamicInsight\",\"title\":\"jn\",\"description\":\"ukbwypcvqfz\"}}],\"status\":{\"message\":\"x\",\"statusId\":\"Critical\"},\"dataProvidersMetadata\":[{\"providerName\":\"lw\",\"propertyBag\":[{},{},{},{}]},{\"providerName\":\"opqpfcdpyoqmwpmr\",\"propertyBag\":[{}]}],\"suggestedUtterances\":{\"query\":\"sxfptv\",\"results\":[{\"sampleUtterance\":{},\"score\":32.69715},{\"sampleUtterance\":{},\"score\":0.18351674}]}},\"kind\":\"m\",\"id\":\"brdwfhhwt\",\"name\":\"c\",\"type\":\"efayc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppServiceManager manager = AppServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DetectorResponse> response = manager.certificateOrdersDiagnostics()
            .listAppServiceCertificateOrderDetectorResponse("yumrobb", "xnymuygjwq", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("m", response.iterator().next().kind());
        Assertions.assertEquals("olmobaqol", response.iterator().next().dataset().get(0).table().tableName());
        Assertions.assertEquals(RenderingType.CHANGES_VIEW,
            response.iterator().next().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("tgfdygaphlwmiva",
            response.iterator().next().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("nbzcjmsrorjbyyx",
            response.iterator().next().dataset().get(0).renderingProperties().description());
        Assertions.assertEquals("x", response.iterator().next().status().message());
        Assertions.assertEquals(InsightStatus.CRITICAL, response.iterator().next().status().statusId());
        Assertions.assertEquals("lw", response.iterator().next().dataProvidersMetadata().get(0).providerName());
        Assertions.assertEquals("sxfptv", response.iterator().next().suggestedUtterances().query());
        Assertions.assertEquals(32.69715F, response.iterator().next().suggestedUtterances().results().get(0).score());
    }
}
