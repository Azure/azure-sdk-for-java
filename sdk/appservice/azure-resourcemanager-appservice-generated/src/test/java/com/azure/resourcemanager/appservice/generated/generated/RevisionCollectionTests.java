// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appservice.generated.fluent.models.RevisionInner;
import com.azure.resourcemanager.appservice.generated.models.RevisionCollection;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class RevisionCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RevisionCollection model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"createdTime\":\"2021-08-26T03:48:41Z\",\"fqdn\":\"vkjzwfbcyaykm\",\"template\":{\"revisionSuffix\":\"sbfwxr\",\"containers\":[{}],\"scale\":{\"minReplicas\":963956796,\"maxReplicas\":1249962153,\"rules\":[{},{},{}]},\"dapr\":{\"enabled\":false,\"appId\":\"bjazejwwviy\",\"appPort\":282647557,\"components\":[{},{},{}]}},\"active\":true,\"replicas\":811440586,\"trafficWeight\":170545987,\"provisioningError\":\"xs\",\"healthState\":\"None\",\"provisioningState\":\"Provisioned\"},\"kind\":\"biwetpo\",\"location\":\"ycyqiqyhgfsetzl\",\"tags\":{\"jpziu\":\"sfledyn\",\"tnhqsycl\":\"fbzkk\",\"afhlbyl\":\"selpkpbaf\",\"sofpltd\":\"cbevxrhyzdfw\"},\"id\":\"mairrh\",\"name\":\"hfnrac\",\"type\":\"npq\"}],\"nextLink\":\"tuujwouh\"}")
            .toObject(RevisionCollection.class);
        Assertions.assertEquals("ycyqiqyhgfsetzl", model.value().get(0).location());
        Assertions.assertEquals("sfledyn", model.value().get(0).tags().get("jpziu"));
        Assertions.assertEquals("biwetpo", model.value().get(0).kind());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RevisionCollection model
            = new RevisionCollection().withValue(Arrays.asList(new RevisionInner().withLocation("ycyqiqyhgfsetzl")
                .withTags(
                    mapOf("jpziu", "sfledyn", "tnhqsycl", "fbzkk", "afhlbyl", "selpkpbaf", "sofpltd", "cbevxrhyzdfw"))
                .withKind("biwetpo")));
        model = BinaryData.fromObject(model).toObject(RevisionCollection.class);
        Assertions.assertEquals("ycyqiqyhgfsetzl", model.value().get(0).location());
        Assertions.assertEquals("sfledyn", model.value().get(0).tags().get("jpziu"));
        Assertions.assertEquals("biwetpo", model.value().get(0).kind());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
