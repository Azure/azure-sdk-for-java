// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.DomainOwnershipIdentifierInner;

/** An immutable client-side representation of DomainOwnershipIdentifier. */
public interface DomainOwnershipIdentifier {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the ownershipId property: Ownership Id.
     *
     * @return the ownershipId value.
     */
    String ownershipId();

    /**
     * Gets the inner com.azure.resourcemanager.appservice.generated.fluent.models.DomainOwnershipIdentifierInner
     * object.
     *
     * @return the inner object.
     */
    DomainOwnershipIdentifierInner innerModel();

    /** The entirety of the DomainOwnershipIdentifier definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The DomainOwnershipIdentifier definition stages. */
    interface DefinitionStages {
        /** The first stage of the DomainOwnershipIdentifier definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the DomainOwnershipIdentifier definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, domainName.
             *
             * @param resourceGroupName Name of the resource group to which the resource belongs.
             * @param domainName Name of domain.
             * @return the next definition stage.
             */
            WithCreate withExistingDomain(String resourceGroupName, String domainName);
        }
        /**
         * The stage of the DomainOwnershipIdentifier definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithKind, DefinitionStages.WithOwnershipId {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            DomainOwnershipIdentifier create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DomainOwnershipIdentifier create(Context context);
        }
        /** The stage of the DomainOwnershipIdentifier definition allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource..
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }
        /** The stage of the DomainOwnershipIdentifier definition allowing to specify ownershipId. */
        interface WithOwnershipId {
            /**
             * Specifies the ownershipId property: Ownership Id..
             *
             * @param ownershipId Ownership Id.
             * @return the next definition stage.
             */
            WithCreate withOwnershipId(String ownershipId);
        }
    }
    /**
     * Begins update for the DomainOwnershipIdentifier resource.
     *
     * @return the stage of resource update.
     */
    DomainOwnershipIdentifier.Update update();

    /** The template for DomainOwnershipIdentifier update. */
    interface Update extends UpdateStages.WithKind, UpdateStages.WithOwnershipId {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        DomainOwnershipIdentifier apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        DomainOwnershipIdentifier apply(Context context);
    }
    /** The DomainOwnershipIdentifier update stages. */
    interface UpdateStages {
        /** The stage of the DomainOwnershipIdentifier update allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource..
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            Update withKind(String kind);
        }
        /** The stage of the DomainOwnershipIdentifier update allowing to specify ownershipId. */
        interface WithOwnershipId {
            /**
             * Specifies the ownershipId property: Ownership Id..
             *
             * @param ownershipId Ownership Id.
             * @return the next definition stage.
             */
            Update withOwnershipId(String ownershipId);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    DomainOwnershipIdentifier refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DomainOwnershipIdentifier refresh(Context context);
}
