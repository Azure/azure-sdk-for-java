// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.AppServiceEnvironmentResourceInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of AppServiceEnvironmentResource. */
public interface AppServiceEnvironmentResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the namePropertiesName property: Name of the App Service Environment.
     *
     * @return the namePropertiesName value.
     */
    String namePropertiesName();

    /**
     * Gets the locationPropertiesLocation property: Location of the App Service Environment, e.g. "West US".
     *
     * @return the locationPropertiesLocation value.
     */
    String locationPropertiesLocation();

    /**
     * Gets the provisioningState property: Provisioning state of the App Service Environment.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the status property: Current status of the App Service Environment.
     *
     * @return the status value.
     */
    HostingEnvironmentStatus status();

    /**
     * Gets the vnetName property: Name of the Virtual Network for the App Service Environment.
     *
     * @return the vnetName value.
     */
    String vnetName();

    /**
     * Gets the vnetResourceGroupName property: Resource group of the Virtual Network.
     *
     * @return the vnetResourceGroupName value.
     */
    String vnetResourceGroupName();

    /**
     * Gets the vnetSubnetName property: Subnet of the Virtual Network.
     *
     * @return the vnetSubnetName value.
     */
    String vnetSubnetName();

    /**
     * Gets the virtualNetwork property: Description of the Virtual Network.
     *
     * @return the virtualNetwork value.
     */
    VirtualNetworkProfile virtualNetwork();

    /**
     * Gets the internalLoadBalancingMode property: Specifies which endpoints to serve internally in the Virtual Network
     * for the App Service Environment.
     *
     * @return the internalLoadBalancingMode value.
     */
    LoadBalancingMode internalLoadBalancingMode();

    /**
     * Gets the multiSize property: Front-end VM size, e.g. "Medium", "Large".
     *
     * @return the multiSize value.
     */
    String multiSize();

    /**
     * Gets the multiRoleCount property: Number of front-end instances.
     *
     * @return the multiRoleCount value.
     */
    Integer multiRoleCount();

    /**
     * Gets the workerPools property: Description of worker pools with worker size IDs, VM sizes, and number of workers
     * in each pool.
     *
     * @return the workerPools value.
     */
    List<WorkerPool> workerPools();

    /**
     * Gets the ipsslAddressCount property: Number of IP SSL addresses reserved for the App Service Environment.
     *
     * @return the ipsslAddressCount value.
     */
    Integer ipsslAddressCount();

    /**
     * Gets the databaseEdition property: Edition of the metadata database for the App Service Environment, e.g.
     * "Standard".
     *
     * @return the databaseEdition value.
     */
    String databaseEdition();

    /**
     * Gets the databaseServiceObjective property: Service objective of the metadata database for the App Service
     * Environment, e.g. "S0".
     *
     * @return the databaseServiceObjective value.
     */
    String databaseServiceObjective();

    /**
     * Gets the upgradeDomains property: Number of upgrade domains of the App Service Environment.
     *
     * @return the upgradeDomains value.
     */
    Integer upgradeDomains();

    /**
     * Gets the subscriptionId property: Subscription of the App Service Environment.
     *
     * @return the subscriptionId value.
     */
    String subscriptionId();

    /**
     * Gets the dnsSuffix property: DNS suffix of the App Service Environment.
     *
     * @return the dnsSuffix value.
     */
    String dnsSuffix();

    /**
     * Gets the lastAction property: Last deployment action on the App Service Environment.
     *
     * @return the lastAction value.
     */
    String lastAction();

    /**
     * Gets the lastActionResult property: Result of the last deployment action on the App Service Environment.
     *
     * @return the lastActionResult value.
     */
    String lastActionResult();

    /**
     * Gets the allowedMultiSizes property: List of comma separated strings describing which VM sizes are allowed for
     * front-ends.
     *
     * @return the allowedMultiSizes value.
     */
    String allowedMultiSizes();

    /**
     * Gets the allowedWorkerSizes property: List of comma separated strings describing which VM sizes are allowed for
     * workers.
     *
     * @return the allowedWorkerSizes value.
     */
    String allowedWorkerSizes();

    /**
     * Gets the maximumNumberOfMachines property: Maximum number of VMs in the App Service Environment.
     *
     * @return the maximumNumberOfMachines value.
     */
    Integer maximumNumberOfMachines();

    /**
     * Gets the vipMappings property: Description of IP SSL mapping for the App Service Environment.
     *
     * @return the vipMappings value.
     */
    List<VirtualIpMapping> vipMappings();

    /**
     * Gets the environmentCapacities property: Current total, used, and available worker capacities.
     *
     * @return the environmentCapacities value.
     */
    List<StampCapacity> environmentCapacities();

    /**
     * Gets the networkAccessControlList property: Access control list for controlling traffic to the App Service
     * Environment.
     *
     * @return the networkAccessControlList value.
     */
    List<NetworkAccessControlEntry> networkAccessControlList();

    /**
     * Gets the environmentIsHealthy property: True/false indicating whether the App Service Environment is healthy.
     *
     * @return the environmentIsHealthy value.
     */
    Boolean environmentIsHealthy();

    /**
     * Gets the environmentStatus property: Detailed message about with results of the last check of the App Service
     * Environment.
     *
     * @return the environmentStatus value.
     */
    String environmentStatus();

    /**
     * Gets the resourceGroup property: Resource group of the App Service Environment.
     *
     * @return the resourceGroup value.
     */
    String resourceGroup();

    /**
     * Gets the frontEndScaleFactor property: Scale factor for front-ends.
     *
     * @return the frontEndScaleFactor value.
     */
    Integer frontEndScaleFactor();

    /**
     * Gets the defaultFrontEndScaleFactor property: Default Scale Factor for FrontEnds.
     *
     * @return the defaultFrontEndScaleFactor value.
     */
    Integer defaultFrontEndScaleFactor();

    /**
     * Gets the apiManagementAccountId property: API Management Account associated with the App Service Environment.
     *
     * @return the apiManagementAccountId value.
     */
    String apiManagementAccountId();

    /**
     * Gets the suspended property: &lt;code&gt;true&lt;/code&gt; if the App Service Environment is suspended;
     * otherwise, &lt;code&gt;false&lt;/code&gt;. The environment can be suspended, e.g. when the management endpoint is
     * no longer available (most likely because NSG blocked the incoming traffic).
     *
     * @return the suspended value.
     */
    Boolean suspended();

    /**
     * Gets the dynamicCacheEnabled property: True/false indicating whether the App Service Environment is suspended.
     * The environment can be suspended e.g. when the management endpoint is no longer available (most likely because
     * NSG blocked the incoming traffic).
     *
     * @return the dynamicCacheEnabled value.
     */
    Boolean dynamicCacheEnabled();

    /**
     * Gets the clusterSettings property: Custom settings for changing the behavior of the App Service Environment.
     *
     * @return the clusterSettings value.
     */
    List<NameValuePair> clusterSettings();

    /**
     * Gets the userWhitelistedIpRanges property: User added ip ranges to whitelist on ASE db.
     *
     * @return the userWhitelistedIpRanges value.
     */
    List<String> userWhitelistedIpRanges();

    /**
     * Gets the hasLinuxWorkers property: Flag that displays whether an ASE has linux workers or not.
     *
     * @return the hasLinuxWorkers value.
     */
    Boolean hasLinuxWorkers();

    /**
     * Gets the sslCertKeyVaultId property: Key Vault ID for ILB App Service Environment default SSL certificate.
     *
     * @return the sslCertKeyVaultId value.
     */
    String sslCertKeyVaultId();

    /**
     * Gets the sslCertKeyVaultSecretName property: Key Vault Secret Name for ILB App Service Environment default SSL
     * certificate.
     *
     * @return the sslCertKeyVaultSecretName value.
     */
    String sslCertKeyVaultSecretName();

    /**
     * Gets the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.appservice.generated.fluent.models.AppServiceEnvironmentResourceInner
     * object.
     *
     * @return the inner object.
     */
    AppServiceEnvironmentResourceInner innerModel();

    /** The entirety of the AppServiceEnvironmentResource definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The AppServiceEnvironmentResource definition stages. */
    interface DefinitionStages {
        /** The first stage of the AppServiceEnvironmentResource definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName Name of the resource group to which the resource belongs.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the AppServiceEnvironmentResource definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithNamePropertiesName,
                DefinitionStages.WithLocationPropertiesLocation,
                DefinitionStages.WithVnetName,
                DefinitionStages.WithVnetResourceGroupName,
                DefinitionStages.WithVnetSubnetName,
                DefinitionStages.WithVirtualNetwork,
                DefinitionStages.WithInternalLoadBalancingMode,
                DefinitionStages.WithMultiSize,
                DefinitionStages.WithMultiRoleCount,
                DefinitionStages.WithWorkerPools,
                DefinitionStages.WithIpsslAddressCount,
                DefinitionStages.WithDnsSuffix,
                DefinitionStages.WithNetworkAccessControlList,
                DefinitionStages.WithFrontEndScaleFactor,
                DefinitionStages.WithApiManagementAccountId,
                DefinitionStages.WithSuspended,
                DefinitionStages.WithDynamicCacheEnabled,
                DefinitionStages.WithClusterSettings,
                DefinitionStages.WithUserWhitelistedIpRanges,
                DefinitionStages.WithHasLinuxWorkers,
                DefinitionStages.WithSslCertKeyVaultId,
                DefinitionStages.WithSslCertKeyVaultSecretName,
                DefinitionStages.WithKind {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            AppServiceEnvironmentResource create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            AppServiceEnvironmentResource create(Context context);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify namePropertiesName. */
        interface WithNamePropertiesName {
            /**
             * Specifies the namePropertiesName property: Name of the App Service Environment..
             *
             * @param namePropertiesName Name of the App Service Environment.
             * @return the next definition stage.
             */
            WithCreate withNamePropertiesName(String namePropertiesName);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify locationPropertiesLocation. */
        interface WithLocationPropertiesLocation {
            /**
             * Specifies the locationPropertiesLocation property: Location of the App Service Environment, e.g. "West
             * US"..
             *
             * @param locationPropertiesLocation Location of the App Service Environment, e.g. "West US".
             * @return the next definition stage.
             */
            WithCreate withLocationPropertiesLocation(String locationPropertiesLocation);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify vnetName. */
        interface WithVnetName {
            /**
             * Specifies the vnetName property: Name of the Virtual Network for the App Service Environment..
             *
             * @param vnetName Name of the Virtual Network for the App Service Environment.
             * @return the next definition stage.
             */
            WithCreate withVnetName(String vnetName);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify vnetResourceGroupName. */
        interface WithVnetResourceGroupName {
            /**
             * Specifies the vnetResourceGroupName property: Resource group of the Virtual Network..
             *
             * @param vnetResourceGroupName Resource group of the Virtual Network.
             * @return the next definition stage.
             */
            WithCreate withVnetResourceGroupName(String vnetResourceGroupName);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify vnetSubnetName. */
        interface WithVnetSubnetName {
            /**
             * Specifies the vnetSubnetName property: Subnet of the Virtual Network..
             *
             * @param vnetSubnetName Subnet of the Virtual Network.
             * @return the next definition stage.
             */
            WithCreate withVnetSubnetName(String vnetSubnetName);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify virtualNetwork. */
        interface WithVirtualNetwork {
            /**
             * Specifies the virtualNetwork property: Description of the Virtual Network..
             *
             * @param virtualNetwork Description of the Virtual Network.
             * @return the next definition stage.
             */
            WithCreate withVirtualNetwork(VirtualNetworkProfile virtualNetwork);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify internalLoadBalancingMode. */
        interface WithInternalLoadBalancingMode {
            /**
             * Specifies the internalLoadBalancingMode property: Specifies which endpoints to serve internally in the
             * Virtual Network for the App Service Environment..
             *
             * @param internalLoadBalancingMode Specifies which endpoints to serve internally in the Virtual Network for
             *     the App Service Environment.
             * @return the next definition stage.
             */
            WithCreate withInternalLoadBalancingMode(LoadBalancingMode internalLoadBalancingMode);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify multiSize. */
        interface WithMultiSize {
            /**
             * Specifies the multiSize property: Front-end VM size, e.g. "Medium", "Large"..
             *
             * @param multiSize Front-end VM size, e.g. "Medium", "Large".
             * @return the next definition stage.
             */
            WithCreate withMultiSize(String multiSize);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify multiRoleCount. */
        interface WithMultiRoleCount {
            /**
             * Specifies the multiRoleCount property: Number of front-end instances..
             *
             * @param multiRoleCount Number of front-end instances.
             * @return the next definition stage.
             */
            WithCreate withMultiRoleCount(Integer multiRoleCount);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify workerPools. */
        interface WithWorkerPools {
            /**
             * Specifies the workerPools property: Description of worker pools with worker size IDs, VM sizes, and
             * number of workers in each pool..
             *
             * @param workerPools Description of worker pools with worker size IDs, VM sizes, and number of workers in
             *     each pool.
             * @return the next definition stage.
             */
            WithCreate withWorkerPools(List<WorkerPool> workerPools);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify ipsslAddressCount. */
        interface WithIpsslAddressCount {
            /**
             * Specifies the ipsslAddressCount property: Number of IP SSL addresses reserved for the App Service
             * Environment..
             *
             * @param ipsslAddressCount Number of IP SSL addresses reserved for the App Service Environment.
             * @return the next definition stage.
             */
            WithCreate withIpsslAddressCount(Integer ipsslAddressCount);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify dnsSuffix. */
        interface WithDnsSuffix {
            /**
             * Specifies the dnsSuffix property: DNS suffix of the App Service Environment..
             *
             * @param dnsSuffix DNS suffix of the App Service Environment.
             * @return the next definition stage.
             */
            WithCreate withDnsSuffix(String dnsSuffix);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify networkAccessControlList. */
        interface WithNetworkAccessControlList {
            /**
             * Specifies the networkAccessControlList property: Access control list for controlling traffic to the App
             * Service Environment..
             *
             * @param networkAccessControlList Access control list for controlling traffic to the App Service
             *     Environment.
             * @return the next definition stage.
             */
            WithCreate withNetworkAccessControlList(List<NetworkAccessControlEntry> networkAccessControlList);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify frontEndScaleFactor. */
        interface WithFrontEndScaleFactor {
            /**
             * Specifies the frontEndScaleFactor property: Scale factor for front-ends..
             *
             * @param frontEndScaleFactor Scale factor for front-ends.
             * @return the next definition stage.
             */
            WithCreate withFrontEndScaleFactor(Integer frontEndScaleFactor);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify apiManagementAccountId. */
        interface WithApiManagementAccountId {
            /**
             * Specifies the apiManagementAccountId property: API Management Account associated with the App Service
             * Environment..
             *
             * @param apiManagementAccountId API Management Account associated with the App Service Environment.
             * @return the next definition stage.
             */
            WithCreate withApiManagementAccountId(String apiManagementAccountId);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify suspended. */
        interface WithSuspended {
            /**
             * Specifies the suspended property: &lt;code&gt;true&lt;/code&gt; if the App Service Environment is
             * suspended; otherwise, &lt;code&gt;false&lt;/code&gt;. The environment can be suspended, e.g. when the
             * management endpoint is no longer available (most likely because NSG blocked the incoming traffic)..
             *
             * @param suspended &lt;code&gt;true&lt;/code&gt; if the App Service Environment is suspended; otherwise,
             *     &lt;code&gt;false&lt;/code&gt;. The environment can be suspended, e.g. when the management endpoint
             *     is no longer available (most likely because NSG blocked the incoming traffic).
             * @return the next definition stage.
             */
            WithCreate withSuspended(Boolean suspended);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify dynamicCacheEnabled. */
        interface WithDynamicCacheEnabled {
            /**
             * Specifies the dynamicCacheEnabled property: True/false indicating whether the App Service Environment is
             * suspended. The environment can be suspended e.g. when the management endpoint is no longer available
             * (most likely because NSG blocked the incoming traffic)..
             *
             * @param dynamicCacheEnabled True/false indicating whether the App Service Environment is suspended. The
             *     environment can be suspended e.g. when the management endpoint is no longer available (most likely
             *     because NSG blocked the incoming traffic).
             * @return the next definition stage.
             */
            WithCreate withDynamicCacheEnabled(Boolean dynamicCacheEnabled);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify clusterSettings. */
        interface WithClusterSettings {
            /**
             * Specifies the clusterSettings property: Custom settings for changing the behavior of the App Service
             * Environment..
             *
             * @param clusterSettings Custom settings for changing the behavior of the App Service Environment.
             * @return the next definition stage.
             */
            WithCreate withClusterSettings(List<NameValuePair> clusterSettings);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify userWhitelistedIpRanges. */
        interface WithUserWhitelistedIpRanges {
            /**
             * Specifies the userWhitelistedIpRanges property: User added ip ranges to whitelist on ASE db.
             *
             * @param userWhitelistedIpRanges User added ip ranges to whitelist on ASE db.
             * @return the next definition stage.
             */
            WithCreate withUserWhitelistedIpRanges(List<String> userWhitelistedIpRanges);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify hasLinuxWorkers. */
        interface WithHasLinuxWorkers {
            /**
             * Specifies the hasLinuxWorkers property: Flag that displays whether an ASE has linux workers or not.
             *
             * @param hasLinuxWorkers Flag that displays whether an ASE has linux workers or not.
             * @return the next definition stage.
             */
            WithCreate withHasLinuxWorkers(Boolean hasLinuxWorkers);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify sslCertKeyVaultId. */
        interface WithSslCertKeyVaultId {
            /**
             * Specifies the sslCertKeyVaultId property: Key Vault ID for ILB App Service Environment default SSL
             * certificate.
             *
             * @param sslCertKeyVaultId Key Vault ID for ILB App Service Environment default SSL certificate.
             * @return the next definition stage.
             */
            WithCreate withSslCertKeyVaultId(String sslCertKeyVaultId);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify sslCertKeyVaultSecretName. */
        interface WithSslCertKeyVaultSecretName {
            /**
             * Specifies the sslCertKeyVaultSecretName property: Key Vault Secret Name for ILB App Service Environment
             * default SSL certificate.
             *
             * @param sslCertKeyVaultSecretName Key Vault Secret Name for ILB App Service Environment default SSL
             *     certificate.
             * @return the next definition stage.
             */
            WithCreate withSslCertKeyVaultSecretName(String sslCertKeyVaultSecretName);
        }
        /** The stage of the AppServiceEnvironmentResource definition allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource..
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }
    }
    /**
     * Begins update for the AppServiceEnvironmentResource resource.
     *
     * @return the stage of resource update.
     */
    AppServiceEnvironmentResource.Update update();

    /** The template for AppServiceEnvironmentResource update. */
    interface Update
        extends UpdateStages.WithKind,
            UpdateStages.WithNamePropertiesName,
            UpdateStages.WithVnetName,
            UpdateStages.WithVnetResourceGroupName,
            UpdateStages.WithVnetSubnetName,
            UpdateStages.WithVirtualNetwork,
            UpdateStages.WithInternalLoadBalancingMode,
            UpdateStages.WithMultiSize,
            UpdateStages.WithMultiRoleCount,
            UpdateStages.WithWorkerPools,
            UpdateStages.WithIpsslAddressCount,
            UpdateStages.WithDnsSuffix,
            UpdateStages.WithNetworkAccessControlList,
            UpdateStages.WithFrontEndScaleFactor,
            UpdateStages.WithApiManagementAccountId,
            UpdateStages.WithSuspended,
            UpdateStages.WithDynamicCacheEnabled,
            UpdateStages.WithClusterSettings,
            UpdateStages.WithUserWhitelistedIpRanges,
            UpdateStages.WithHasLinuxWorkers,
            UpdateStages.WithSslCertKeyVaultId,
            UpdateStages.WithSslCertKeyVaultSecretName {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        AppServiceEnvironmentResource apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        AppServiceEnvironmentResource apply(Context context);
    }
    /** The AppServiceEnvironmentResource update stages. */
    interface UpdateStages {
        /** The stage of the AppServiceEnvironmentResource update allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource..
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            Update withKind(String kind);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify namePropertiesName. */
        interface WithNamePropertiesName {
            /**
             * Specifies the namePropertiesName property: Name of the App Service Environment..
             *
             * @param namePropertiesName Name of the App Service Environment.
             * @return the next definition stage.
             */
            Update withNamePropertiesName(String namePropertiesName);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify vnetName. */
        interface WithVnetName {
            /**
             * Specifies the vnetName property: Name of the Virtual Network for the App Service Environment..
             *
             * @param vnetName Name of the Virtual Network for the App Service Environment.
             * @return the next definition stage.
             */
            Update withVnetName(String vnetName);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify vnetResourceGroupName. */
        interface WithVnetResourceGroupName {
            /**
             * Specifies the vnetResourceGroupName property: Resource group of the Virtual Network..
             *
             * @param vnetResourceGroupName Resource group of the Virtual Network.
             * @return the next definition stage.
             */
            Update withVnetResourceGroupName(String vnetResourceGroupName);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify vnetSubnetName. */
        interface WithVnetSubnetName {
            /**
             * Specifies the vnetSubnetName property: Subnet of the Virtual Network..
             *
             * @param vnetSubnetName Subnet of the Virtual Network.
             * @return the next definition stage.
             */
            Update withVnetSubnetName(String vnetSubnetName);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify virtualNetwork. */
        interface WithVirtualNetwork {
            /**
             * Specifies the virtualNetwork property: Description of the Virtual Network..
             *
             * @param virtualNetwork Description of the Virtual Network.
             * @return the next definition stage.
             */
            Update withVirtualNetwork(VirtualNetworkProfile virtualNetwork);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify internalLoadBalancingMode. */
        interface WithInternalLoadBalancingMode {
            /**
             * Specifies the internalLoadBalancingMode property: Specifies which endpoints to serve internally in the
             * Virtual Network for the App Service Environment..
             *
             * @param internalLoadBalancingMode Specifies which endpoints to serve internally in the Virtual Network for
             *     the App Service Environment.
             * @return the next definition stage.
             */
            Update withInternalLoadBalancingMode(LoadBalancingMode internalLoadBalancingMode);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify multiSize. */
        interface WithMultiSize {
            /**
             * Specifies the multiSize property: Front-end VM size, e.g. "Medium", "Large"..
             *
             * @param multiSize Front-end VM size, e.g. "Medium", "Large".
             * @return the next definition stage.
             */
            Update withMultiSize(String multiSize);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify multiRoleCount. */
        interface WithMultiRoleCount {
            /**
             * Specifies the multiRoleCount property: Number of front-end instances..
             *
             * @param multiRoleCount Number of front-end instances.
             * @return the next definition stage.
             */
            Update withMultiRoleCount(Integer multiRoleCount);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify workerPools. */
        interface WithWorkerPools {
            /**
             * Specifies the workerPools property: Description of worker pools with worker size IDs, VM sizes, and
             * number of workers in each pool..
             *
             * @param workerPools Description of worker pools with worker size IDs, VM sizes, and number of workers in
             *     each pool.
             * @return the next definition stage.
             */
            Update withWorkerPools(List<WorkerPool> workerPools);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify ipsslAddressCount. */
        interface WithIpsslAddressCount {
            /**
             * Specifies the ipsslAddressCount property: Number of IP SSL addresses reserved for the App Service
             * Environment..
             *
             * @param ipsslAddressCount Number of IP SSL addresses reserved for the App Service Environment.
             * @return the next definition stage.
             */
            Update withIpsslAddressCount(Integer ipsslAddressCount);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify dnsSuffix. */
        interface WithDnsSuffix {
            /**
             * Specifies the dnsSuffix property: DNS suffix of the App Service Environment..
             *
             * @param dnsSuffix DNS suffix of the App Service Environment.
             * @return the next definition stage.
             */
            Update withDnsSuffix(String dnsSuffix);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify networkAccessControlList. */
        interface WithNetworkAccessControlList {
            /**
             * Specifies the networkAccessControlList property: Access control list for controlling traffic to the App
             * Service Environment..
             *
             * @param networkAccessControlList Access control list for controlling traffic to the App Service
             *     Environment.
             * @return the next definition stage.
             */
            Update withNetworkAccessControlList(List<NetworkAccessControlEntry> networkAccessControlList);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify frontEndScaleFactor. */
        interface WithFrontEndScaleFactor {
            /**
             * Specifies the frontEndScaleFactor property: Scale factor for front-ends..
             *
             * @param frontEndScaleFactor Scale factor for front-ends.
             * @return the next definition stage.
             */
            Update withFrontEndScaleFactor(Integer frontEndScaleFactor);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify apiManagementAccountId. */
        interface WithApiManagementAccountId {
            /**
             * Specifies the apiManagementAccountId property: API Management Account associated with the App Service
             * Environment..
             *
             * @param apiManagementAccountId API Management Account associated with the App Service Environment.
             * @return the next definition stage.
             */
            Update withApiManagementAccountId(String apiManagementAccountId);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify suspended. */
        interface WithSuspended {
            /**
             * Specifies the suspended property: &lt;code&gt;true&lt;/code&gt; if the App Service Environment is
             * suspended; otherwise, &lt;code&gt;false&lt;/code&gt;. The environment can be suspended, e.g. when the
             * management endpoint is no longer available (most likely because NSG blocked the incoming traffic)..
             *
             * @param suspended &lt;code&gt;true&lt;/code&gt; if the App Service Environment is suspended; otherwise,
             *     &lt;code&gt;false&lt;/code&gt;. The environment can be suspended, e.g. when the management endpoint
             *     is no longer available (most likely because NSG blocked the incoming traffic).
             * @return the next definition stage.
             */
            Update withSuspended(Boolean suspended);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify dynamicCacheEnabled. */
        interface WithDynamicCacheEnabled {
            /**
             * Specifies the dynamicCacheEnabled property: True/false indicating whether the App Service Environment is
             * suspended. The environment can be suspended e.g. when the management endpoint is no longer available
             * (most likely because NSG blocked the incoming traffic)..
             *
             * @param dynamicCacheEnabled True/false indicating whether the App Service Environment is suspended. The
             *     environment can be suspended e.g. when the management endpoint is no longer available (most likely
             *     because NSG blocked the incoming traffic).
             * @return the next definition stage.
             */
            Update withDynamicCacheEnabled(Boolean dynamicCacheEnabled);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify clusterSettings. */
        interface WithClusterSettings {
            /**
             * Specifies the clusterSettings property: Custom settings for changing the behavior of the App Service
             * Environment..
             *
             * @param clusterSettings Custom settings for changing the behavior of the App Service Environment.
             * @return the next definition stage.
             */
            Update withClusterSettings(List<NameValuePair> clusterSettings);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify userWhitelistedIpRanges. */
        interface WithUserWhitelistedIpRanges {
            /**
             * Specifies the userWhitelistedIpRanges property: User added ip ranges to whitelist on ASE db.
             *
             * @param userWhitelistedIpRanges User added ip ranges to whitelist on ASE db.
             * @return the next definition stage.
             */
            Update withUserWhitelistedIpRanges(List<String> userWhitelistedIpRanges);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify hasLinuxWorkers. */
        interface WithHasLinuxWorkers {
            /**
             * Specifies the hasLinuxWorkers property: Flag that displays whether an ASE has linux workers or not.
             *
             * @param hasLinuxWorkers Flag that displays whether an ASE has linux workers or not.
             * @return the next definition stage.
             */
            Update withHasLinuxWorkers(Boolean hasLinuxWorkers);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify sslCertKeyVaultId. */
        interface WithSslCertKeyVaultId {
            /**
             * Specifies the sslCertKeyVaultId property: Key Vault ID for ILB App Service Environment default SSL
             * certificate.
             *
             * @param sslCertKeyVaultId Key Vault ID for ILB App Service Environment default SSL certificate.
             * @return the next definition stage.
             */
            Update withSslCertKeyVaultId(String sslCertKeyVaultId);
        }
        /** The stage of the AppServiceEnvironmentResource update allowing to specify sslCertKeyVaultSecretName. */
        interface WithSslCertKeyVaultSecretName {
            /**
             * Specifies the sslCertKeyVaultSecretName property: Key Vault Secret Name for ILB App Service Environment
             * default SSL certificate.
             *
             * @param sslCertKeyVaultSecretName Key Vault Secret Name for ILB App Service Environment default SSL
             *     certificate.
             * @return the next definition stage.
             */
            Update withSslCertKeyVaultSecretName(String sslCertKeyVaultSecretName);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    AppServiceEnvironmentResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    AppServiceEnvironmentResource refresh(Context context);

    /**
     * Description for Move an App Service Environment to a different VNET.
     *
     * @param vnetInfo Details for the new virtual network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     *     request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps.
     */
    PagedIterable<Site> changeVnet(VirtualNetworkProfile vnetInfo);

    /**
     * Description for Move an App Service Environment to a different VNET.
     *
     * @param vnetInfo Details for the new virtual network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     *     request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps.
     */
    PagedIterable<Site> changeVnet(VirtualNetworkProfile vnetInfo, Context context);

    /**
     * Description for Reboot all machines in an App Service Environment.
     *
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     *     request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void reboot();

    /**
     * Description for Reboot all machines in an App Service Environment.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     *     request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> rebootWithResponse(Context context);

    /**
     * Description for Resume an App Service Environment.
     *
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     *     request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps.
     */
    PagedIterable<Site> resume();

    /**
     * Description for Resume an App Service Environment.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     *     request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps.
     */
    PagedIterable<Site> resume(Context context);

    /**
     * Description for Suspend an App Service Environment.
     *
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     *     request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps.
     */
    PagedIterable<Site> suspend();

    /**
     * Description for Suspend an App Service Environment.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     *     request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps.
     */
    PagedIterable<Site> suspend(Context context);
}
