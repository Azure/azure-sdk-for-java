// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.implementation;

import com.azure.resourcemanager.appservice.generated.fluent.models.CustomDnsSuffixConfigurationInner;
import com.azure.resourcemanager.appservice.generated.models.CustomDnsSuffixConfiguration;
import com.azure.resourcemanager.appservice.generated.models.CustomDnsSuffixProvisioningState;

public final class CustomDnsSuffixConfigurationImpl implements CustomDnsSuffixConfiguration {
    private CustomDnsSuffixConfigurationInner innerObject;

    private final com.azure.resourcemanager.appservice.generated.AppServiceManager serviceManager;

    CustomDnsSuffixConfigurationImpl(CustomDnsSuffixConfigurationInner innerObject,
        com.azure.resourcemanager.appservice.generated.AppServiceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public CustomDnsSuffixProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String provisioningDetails() {
        return this.innerModel().provisioningDetails();
    }

    public String dnsSuffix() {
        return this.innerModel().dnsSuffix();
    }

    public String certificateUrl() {
        return this.innerModel().certificateUrl();
    }

    public String keyVaultReferenceIdentity() {
        return this.innerModel().keyVaultReferenceIdentity();
    }

    public CustomDnsSuffixConfigurationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appservice.generated.AppServiceManager manager() {
        return this.serviceManager;
    }
}
