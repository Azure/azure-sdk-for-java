// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.DatabaseConnectionInner;
import java.util.List;

/**
 * An immutable client-side representation of DatabaseConnection.
 */
public interface DatabaseConnection {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the kind property: Kind of resource.
     * 
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the resourceId property: The resource id of the database.
     * 
     * @return the resourceId value.
     */
    String resourceId();

    /**
     * Gets the connectionIdentity property: If present, the identity is used in conjunction with connection string to
     * connect to the database. Use of the system-assigned managed identity is indicated with the string
     * 'SystemAssigned', while use of a user-assigned managed identity is indicated with the resource id of the managed
     * identity resource.
     * 
     * @return the connectionIdentity value.
     */
    String connectionIdentity();

    /**
     * Gets the connectionString property: The connection string to use to connect to the database.
     * 
     * @return the connectionString value.
     */
    String connectionString();

    /**
     * Gets the region property: The region of the database resource.
     * 
     * @return the region value.
     */
    String region();

    /**
     * Gets the configurationFiles property: A list of configuration files associated with this database connection.
     * 
     * @return the configurationFiles value.
     */
    List<StaticSiteDatabaseConnectionConfigurationFileOverview> configurationFiles();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.appservice.generated.fluent.models.DatabaseConnectionInner object.
     * 
     * @return the inner object.
     */
    DatabaseConnectionInner innerModel();

    /**
     * The entirety of the DatabaseConnection definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The DatabaseConnection definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the DatabaseConnection definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the DatabaseConnection definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, name, environmentName.
             * 
             * @param resourceGroupName Name of the resource group to which the resource belongs.
             * @param name Name of the static site.
             * @param environmentName The stage site identifier.
             * @return the next definition stage.
             */
            WithCreate withExistingBuild(String resourceGroupName, String name, String environmentName);
        }

        /**
         * The stage of the DatabaseConnection definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithKind, DefinitionStages.WithResourceId, DefinitionStages.WithConnectionIdentity,
            DefinitionStages.WithConnectionString, DefinitionStages.WithRegion {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            DatabaseConnection create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DatabaseConnection create(Context context);
        }

        /**
         * The stage of the DatabaseConnection definition allowing to specify kind.
         */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource..
             * 
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }

        /**
         * The stage of the DatabaseConnection definition allowing to specify resourceId.
         */
        interface WithResourceId {
            /**
             * Specifies the resourceId property: The resource id of the database..
             * 
             * @param resourceId The resource id of the database.
             * @return the next definition stage.
             */
            WithCreate withResourceId(String resourceId);
        }

        /**
         * The stage of the DatabaseConnection definition allowing to specify connectionIdentity.
         */
        interface WithConnectionIdentity {
            /**
             * Specifies the connectionIdentity property: If present, the identity is used in conjunction with
             * connection string to connect to the database. Use of the system-assigned managed identity is indicated
             * with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated with the
             * resource id of the managed identity resource..
             * 
             * @param connectionIdentity If present, the identity is used in conjunction with connection string to
             * connect to the database. Use of the system-assigned managed identity is indicated with the string
             * 'SystemAssigned', while use of a user-assigned managed identity is indicated with the resource id of the
             * managed identity resource.
             * @return the next definition stage.
             */
            WithCreate withConnectionIdentity(String connectionIdentity);
        }

        /**
         * The stage of the DatabaseConnection definition allowing to specify connectionString.
         */
        interface WithConnectionString {
            /**
             * Specifies the connectionString property: The connection string to use to connect to the database..
             * 
             * @param connectionString The connection string to use to connect to the database.
             * @return the next definition stage.
             */
            WithCreate withConnectionString(String connectionString);
        }

        /**
         * The stage of the DatabaseConnection definition allowing to specify region.
         */
        interface WithRegion {
            /**
             * Specifies the region property: The region of the database resource..
             * 
             * @param region The region of the database resource.
             * @return the next definition stage.
             */
            WithCreate withRegion(String region);
        }
    }

    /**
     * Begins update for the DatabaseConnection resource.
     * 
     * @return the stage of resource update.
     */
    DatabaseConnection.Update update();

    /**
     * The template for DatabaseConnection update.
     */
    interface Update extends UpdateStages.WithResourceId, UpdateStages.WithConnectionIdentity,
        UpdateStages.WithConnectionString, UpdateStages.WithRegion {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        DatabaseConnection apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        DatabaseConnection apply(Context context);
    }

    /**
     * The DatabaseConnection update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the DatabaseConnection update allowing to specify resourceId.
         */
        interface WithResourceId {
            /**
             * Specifies the resourceId property: The resource id of the database..
             * 
             * @param resourceId The resource id of the database.
             * @return the next definition stage.
             */
            Update withResourceId(String resourceId);
        }

        /**
         * The stage of the DatabaseConnection update allowing to specify connectionIdentity.
         */
        interface WithConnectionIdentity {
            /**
             * Specifies the connectionIdentity property: If present, the identity is used in conjunction with
             * connection string to connect to the database. Use of the system-assigned managed identity is indicated
             * with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated with the
             * resource id of the managed identity resource..
             * 
             * @param connectionIdentity If present, the identity is used in conjunction with connection string to
             * connect to the database. Use of the system-assigned managed identity is indicated with the string
             * 'SystemAssigned', while use of a user-assigned managed identity is indicated with the resource id of the
             * managed identity resource.
             * @return the next definition stage.
             */
            Update withConnectionIdentity(String connectionIdentity);
        }

        /**
         * The stage of the DatabaseConnection update allowing to specify connectionString.
         */
        interface WithConnectionString {
            /**
             * Specifies the connectionString property: The connection string to use to connect to the database..
             * 
             * @param connectionString The connection string to use to connect to the database.
             * @return the next definition stage.
             */
            Update withConnectionString(String connectionString);
        }

        /**
         * The stage of the DatabaseConnection update allowing to specify region.
         */
        interface WithRegion {
            /**
             * Specifies the region property: The region of the database resource..
             * 
             * @param region The region of the database resource.
             * @return the next definition stage.
             */
            Update withRegion(String region);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    DatabaseConnection refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DatabaseConnection refresh(Context context);

    /**
     * Returns details of a database connection for a static site build by name.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return static Site Database Connection resource along with {@link Response}.
     */
    Response<DatabaseConnection> getBuildDatabaseConnectionWithDetailsWithResponse(Context context);

    /**
     * Returns details of a database connection for a static site build by name.
     * 
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return static Site Database Connection resource.
     */
    DatabaseConnection getBuildDatabaseConnectionWithDetails();
}
