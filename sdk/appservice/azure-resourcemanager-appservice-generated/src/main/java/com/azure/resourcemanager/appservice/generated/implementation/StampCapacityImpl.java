// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.implementation;

import com.azure.resourcemanager.appservice.generated.WebSiteManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.StampCapacityInner;
import com.azure.resourcemanager.appservice.generated.models.ComputeModeOptions;
import com.azure.resourcemanager.appservice.generated.models.StampCapacity;
import com.azure.resourcemanager.appservice.generated.models.WorkerSizeOptions;

public final class StampCapacityImpl implements StampCapacity {
    private StampCapacityInner innerObject;

    private final WebSiteManager serviceManager;

    StampCapacityImpl(StampCapacityInner innerObject, WebSiteManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String name() {
        return this.innerModel().name();
    }

    public Long availableCapacity() {
        return this.innerModel().availableCapacity();
    }

    public Long totalCapacity() {
        return this.innerModel().totalCapacity();
    }

    public String unit() {
        return this.innerModel().unit();
    }

    public ComputeModeOptions computeMode() {
        return this.innerModel().computeMode();
    }

    public WorkerSizeOptions workerSize() {
        return this.innerModel().workerSize();
    }

    public Integer workerSizeId() {
        return this.innerModel().workerSizeId();
    }

    public Boolean excludeFromCapacityAllocation() {
        return this.innerModel().excludeFromCapacityAllocation();
    }

    public Boolean isApplicableForAllComputeModes() {
        return this.innerModel().isApplicableForAllComputeModes();
    }

    public String siteMode() {
        return this.innerModel().siteMode();
    }

    public Boolean isLinux() {
        return this.innerModel().isLinux();
    }

    public StampCapacityInner innerModel() {
        return this.innerObject;
    }

    private WebSiteManager manager() {
        return this.serviceManager;
    }
}
