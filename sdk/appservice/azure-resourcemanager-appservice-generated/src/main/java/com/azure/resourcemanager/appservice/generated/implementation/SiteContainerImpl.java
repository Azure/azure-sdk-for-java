// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.SiteContainerInner;
import com.azure.resourcemanager.appservice.generated.models.AuthType;
import com.azure.resourcemanager.appservice.generated.models.EnvironmentVariable;
import com.azure.resourcemanager.appservice.generated.models.SiteContainer;
import com.azure.resourcemanager.appservice.generated.models.VolumeMount;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class SiteContainerImpl implements SiteContainer, SiteContainer.Definition, SiteContainer.Update {
    private SiteContainerInner innerObject;

    private final com.azure.resourcemanager.appservice.generated.AppServiceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public String image() {
        return this.innerModel().image();
    }

    public String targetPort() {
        return this.innerModel().targetPort();
    }

    public boolean isMain() {
        return this.innerModel().isMain();
    }

    public String startUpCommand() {
        return this.innerModel().startUpCommand();
    }

    public AuthType authType() {
        return this.innerModel().authType();
    }

    public String username() {
        return this.innerModel().username();
    }

    public String passwordSecret() {
        return this.innerModel().passwordSecret();
    }

    public String userManagedIdentityClientId() {
        return this.innerModel().userManagedIdentityClientId();
    }

    public OffsetDateTime createdTime() {
        return this.innerModel().createdTime();
    }

    public OffsetDateTime lastModifiedTime() {
        return this.innerModel().lastModifiedTime();
    }

    public List<VolumeMount> volumeMounts() {
        List<VolumeMount> inner = this.innerModel().volumeMounts();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<EnvironmentVariable> environmentVariables() {
        List<EnvironmentVariable> inner = this.innerModel().environmentVariables();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SiteContainerInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appservice.generated.AppServiceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String name;

    private String containerName;

    public SiteContainerImpl withExistingSite(String resourceGroupName, String name) {
        this.resourceGroupName = resourceGroupName;
        this.name = name;
        return this;
    }

    public SiteContainer create() {
        this.innerObject = serviceManager.serviceClient()
            .getWebApps()
            .createOrUpdateSiteContainerWithResponse(resourceGroupName, name, containerName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public SiteContainer create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getWebApps()
            .createOrUpdateSiteContainerWithResponse(resourceGroupName, name, containerName, this.innerModel(), context)
            .getValue();
        return this;
    }

    SiteContainerImpl(String name, com.azure.resourcemanager.appservice.generated.AppServiceManager serviceManager) {
        this.innerObject = new SiteContainerInner();
        this.serviceManager = serviceManager;
        this.containerName = name;
    }

    public SiteContainerImpl update() {
        return this;
    }

    public SiteContainer apply() {
        this.innerObject = serviceManager.serviceClient()
            .getWebApps()
            .createOrUpdateSiteContainerWithResponse(resourceGroupName, name, containerName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public SiteContainer apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getWebApps()
            .createOrUpdateSiteContainerWithResponse(resourceGroupName, name, containerName, this.innerModel(), context)
            .getValue();
        return this;
    }

    SiteContainerImpl(SiteContainerInner innerObject,
        com.azure.resourcemanager.appservice.generated.AppServiceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.name = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "sites");
        this.containerName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "sitecontainers");
    }

    public SiteContainer refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getWebApps()
            .getSiteContainerWithResponse(resourceGroupName, name, containerName, Context.NONE)
            .getValue();
        return this;
    }

    public SiteContainer refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getWebApps()
            .getSiteContainerWithResponse(resourceGroupName, name, containerName, context)
            .getValue();
        return this;
    }

    public SiteContainerImpl withKind(String kind) {
        this.innerModel().withKind(kind);
        return this;
    }

    public SiteContainerImpl withImage(String image) {
        this.innerModel().withImage(image);
        return this;
    }

    public SiteContainerImpl withTargetPort(String targetPort) {
        this.innerModel().withTargetPort(targetPort);
        return this;
    }

    public SiteContainerImpl withIsMain(boolean isMain) {
        this.innerModel().withIsMain(isMain);
        return this;
    }

    public SiteContainerImpl withStartUpCommand(String startUpCommand) {
        this.innerModel().withStartUpCommand(startUpCommand);
        return this;
    }

    public SiteContainerImpl withAuthType(AuthType authType) {
        this.innerModel().withAuthType(authType);
        return this;
    }

    public SiteContainerImpl withUsername(String username) {
        this.innerModel().withUsername(username);
        return this;
    }

    public SiteContainerImpl withPasswordSecret(String passwordSecret) {
        this.innerModel().withPasswordSecret(passwordSecret);
        return this;
    }

    public SiteContainerImpl withUserManagedIdentityClientId(String userManagedIdentityClientId) {
        this.innerModel().withUserManagedIdentityClientId(userManagedIdentityClientId);
        return this;
    }

    public SiteContainerImpl withVolumeMounts(List<VolumeMount> volumeMounts) {
        this.innerModel().withVolumeMounts(volumeMounts);
        return this;
    }

    public SiteContainerImpl withEnvironmentVariables(List<EnvironmentVariable> environmentVariables) {
        this.innerModel().withEnvironmentVariables(environmentVariables);
        return this;
    }
}
