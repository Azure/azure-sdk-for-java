// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.SiteContainerInner;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * An immutable client-side representation of SiteContainer.
 */
public interface SiteContainer {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the kind property: Kind of resource.
     * 
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the image property: Image Name.
     * 
     * @return the image value.
     */
    String image();

    /**
     * Gets the targetPort property: Target Port.
     * 
     * @return the targetPort value.
     */
    String targetPort();

    /**
     * Gets the isMain property: &lt;code&gt;true&lt;/code&gt; if the container is the main site container;
     * &lt;code&gt;false&lt;/code&gt; otherwise.
     * 
     * @return the isMain value.
     */
    boolean isMain();

    /**
     * Gets the startUpCommand property: StartUp Command.
     * 
     * @return the startUpCommand value.
     */
    String startUpCommand();

    /**
     * Gets the authType property: Auth Type.
     * 
     * @return the authType value.
     */
    AuthType authType();

    /**
     * Gets the username property: User Name.
     * 
     * @return the username value.
     */
    String username();

    /**
     * Gets the passwordSecret property: Password Secret.
     * 
     * @return the passwordSecret value.
     */
    String passwordSecret();

    /**
     * Gets the userManagedIdentityClientId property: UserManagedIdentity ClientId.
     * 
     * @return the userManagedIdentityClientId value.
     */
    String userManagedIdentityClientId();

    /**
     * Gets the createdTime property: Created Time.
     * 
     * @return the createdTime value.
     */
    OffsetDateTime createdTime();

    /**
     * Gets the lastModifiedTime property: Last Modified Time.
     * 
     * @return the lastModifiedTime value.
     */
    OffsetDateTime lastModifiedTime();

    /**
     * Gets the volumeMounts property: List of volume mounts.
     * 
     * @return the volumeMounts value.
     */
    List<VolumeMount> volumeMounts();

    /**
     * Gets the environmentVariables property: List of environment variables.
     * 
     * @return the environmentVariables value.
     */
    List<EnvironmentVariable> environmentVariables();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.appservice.generated.fluent.models.SiteContainerInner object.
     * 
     * @return the inner object.
     */
    SiteContainerInner innerModel();

    /**
     * The entirety of the SiteContainer definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The SiteContainer definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the SiteContainer definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the SiteContainer definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, name.
             * 
             * @param resourceGroupName Name of the resource group to which the resource belongs.
             * @param name Name of the app.
             * @return the next definition stage.
             */
            WithCreate withExistingSite(String resourceGroupName, String name);
        }

        /**
         * The stage of the SiteContainer definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithKind, DefinitionStages.WithImage,
            DefinitionStages.WithTargetPort, DefinitionStages.WithIsMain, DefinitionStages.WithStartUpCommand,
            DefinitionStages.WithAuthType, DefinitionStages.WithUsername, DefinitionStages.WithPasswordSecret,
            DefinitionStages.WithUserManagedIdentityClientId, DefinitionStages.WithVolumeMounts,
            DefinitionStages.WithEnvironmentVariables {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            SiteContainer create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            SiteContainer create(Context context);
        }

        /**
         * The stage of the SiteContainer definition allowing to specify kind.
         */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource..
             * 
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }

        /**
         * The stage of the SiteContainer definition allowing to specify image.
         */
        interface WithImage {
            /**
             * Specifies the image property: Image Name.
             * 
             * @param image Image Name.
             * @return the next definition stage.
             */
            WithCreate withImage(String image);
        }

        /**
         * The stage of the SiteContainer definition allowing to specify targetPort.
         */
        interface WithTargetPort {
            /**
             * Specifies the targetPort property: Target Port.
             * 
             * @param targetPort Target Port.
             * @return the next definition stage.
             */
            WithCreate withTargetPort(String targetPort);
        }

        /**
         * The stage of the SiteContainer definition allowing to specify isMain.
         */
        interface WithIsMain {
            /**
             * Specifies the isMain property: &lt;code&gt;true&lt;/code&gt; if the container is the main site container;
             * &lt;code&gt;false&lt;/code&gt; otherwise..
             * 
             * @param isMain &lt;code&gt;true&lt;/code&gt; if the container is the main site container;
             * &lt;code&gt;false&lt;/code&gt; otherwise.
             * @return the next definition stage.
             */
            WithCreate withIsMain(boolean isMain);
        }

        /**
         * The stage of the SiteContainer definition allowing to specify startUpCommand.
         */
        interface WithStartUpCommand {
            /**
             * Specifies the startUpCommand property: StartUp Command.
             * 
             * @param startUpCommand StartUp Command.
             * @return the next definition stage.
             */
            WithCreate withStartUpCommand(String startUpCommand);
        }

        /**
         * The stage of the SiteContainer definition allowing to specify authType.
         */
        interface WithAuthType {
            /**
             * Specifies the authType property: Auth Type.
             * 
             * @param authType Auth Type.
             * @return the next definition stage.
             */
            WithCreate withAuthType(AuthType authType);
        }

        /**
         * The stage of the SiteContainer definition allowing to specify username.
         */
        interface WithUsername {
            /**
             * Specifies the username property: User Name.
             * 
             * @param username User Name.
             * @return the next definition stage.
             */
            WithCreate withUsername(String username);
        }

        /**
         * The stage of the SiteContainer definition allowing to specify passwordSecret.
         */
        interface WithPasswordSecret {
            /**
             * Specifies the passwordSecret property: Password Secret.
             * 
             * @param passwordSecret Password Secret.
             * @return the next definition stage.
             */
            WithCreate withPasswordSecret(String passwordSecret);
        }

        /**
         * The stage of the SiteContainer definition allowing to specify userManagedIdentityClientId.
         */
        interface WithUserManagedIdentityClientId {
            /**
             * Specifies the userManagedIdentityClientId property: UserManagedIdentity ClientId.
             * 
             * @param userManagedIdentityClientId UserManagedIdentity ClientId.
             * @return the next definition stage.
             */
            WithCreate withUserManagedIdentityClientId(String userManagedIdentityClientId);
        }

        /**
         * The stage of the SiteContainer definition allowing to specify volumeMounts.
         */
        interface WithVolumeMounts {
            /**
             * Specifies the volumeMounts property: List of volume mounts.
             * 
             * @param volumeMounts List of volume mounts.
             * @return the next definition stage.
             */
            WithCreate withVolumeMounts(List<VolumeMount> volumeMounts);
        }

        /**
         * The stage of the SiteContainer definition allowing to specify environmentVariables.
         */
        interface WithEnvironmentVariables {
            /**
             * Specifies the environmentVariables property: List of environment variables.
             * 
             * @param environmentVariables List of environment variables.
             * @return the next definition stage.
             */
            WithCreate withEnvironmentVariables(List<EnvironmentVariable> environmentVariables);
        }
    }

    /**
     * Begins update for the SiteContainer resource.
     * 
     * @return the stage of resource update.
     */
    SiteContainer.Update update();

    /**
     * The template for SiteContainer update.
     */
    interface Update extends UpdateStages.WithKind, UpdateStages.WithImage, UpdateStages.WithTargetPort,
        UpdateStages.WithIsMain, UpdateStages.WithStartUpCommand, UpdateStages.WithAuthType, UpdateStages.WithUsername,
        UpdateStages.WithPasswordSecret, UpdateStages.WithUserManagedIdentityClientId, UpdateStages.WithVolumeMounts,
        UpdateStages.WithEnvironmentVariables {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        SiteContainer apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        SiteContainer apply(Context context);
    }

    /**
     * The SiteContainer update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the SiteContainer update allowing to specify kind.
         */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource..
             * 
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            Update withKind(String kind);
        }

        /**
         * The stage of the SiteContainer update allowing to specify image.
         */
        interface WithImage {
            /**
             * Specifies the image property: Image Name.
             * 
             * @param image Image Name.
             * @return the next definition stage.
             */
            Update withImage(String image);
        }

        /**
         * The stage of the SiteContainer update allowing to specify targetPort.
         */
        interface WithTargetPort {
            /**
             * Specifies the targetPort property: Target Port.
             * 
             * @param targetPort Target Port.
             * @return the next definition stage.
             */
            Update withTargetPort(String targetPort);
        }

        /**
         * The stage of the SiteContainer update allowing to specify isMain.
         */
        interface WithIsMain {
            /**
             * Specifies the isMain property: &lt;code&gt;true&lt;/code&gt; if the container is the main site container;
             * &lt;code&gt;false&lt;/code&gt; otherwise..
             * 
             * @param isMain &lt;code&gt;true&lt;/code&gt; if the container is the main site container;
             * &lt;code&gt;false&lt;/code&gt; otherwise.
             * @return the next definition stage.
             */
            Update withIsMain(boolean isMain);
        }

        /**
         * The stage of the SiteContainer update allowing to specify startUpCommand.
         */
        interface WithStartUpCommand {
            /**
             * Specifies the startUpCommand property: StartUp Command.
             * 
             * @param startUpCommand StartUp Command.
             * @return the next definition stage.
             */
            Update withStartUpCommand(String startUpCommand);
        }

        /**
         * The stage of the SiteContainer update allowing to specify authType.
         */
        interface WithAuthType {
            /**
             * Specifies the authType property: Auth Type.
             * 
             * @param authType Auth Type.
             * @return the next definition stage.
             */
            Update withAuthType(AuthType authType);
        }

        /**
         * The stage of the SiteContainer update allowing to specify username.
         */
        interface WithUsername {
            /**
             * Specifies the username property: User Name.
             * 
             * @param username User Name.
             * @return the next definition stage.
             */
            Update withUsername(String username);
        }

        /**
         * The stage of the SiteContainer update allowing to specify passwordSecret.
         */
        interface WithPasswordSecret {
            /**
             * Specifies the passwordSecret property: Password Secret.
             * 
             * @param passwordSecret Password Secret.
             * @return the next definition stage.
             */
            Update withPasswordSecret(String passwordSecret);
        }

        /**
         * The stage of the SiteContainer update allowing to specify userManagedIdentityClientId.
         */
        interface WithUserManagedIdentityClientId {
            /**
             * Specifies the userManagedIdentityClientId property: UserManagedIdentity ClientId.
             * 
             * @param userManagedIdentityClientId UserManagedIdentity ClientId.
             * @return the next definition stage.
             */
            Update withUserManagedIdentityClientId(String userManagedIdentityClientId);
        }

        /**
         * The stage of the SiteContainer update allowing to specify volumeMounts.
         */
        interface WithVolumeMounts {
            /**
             * Specifies the volumeMounts property: List of volume mounts.
             * 
             * @param volumeMounts List of volume mounts.
             * @return the next definition stage.
             */
            Update withVolumeMounts(List<VolumeMount> volumeMounts);
        }

        /**
         * The stage of the SiteContainer update allowing to specify environmentVariables.
         */
        interface WithEnvironmentVariables {
            /**
             * Specifies the environmentVariables property: List of environment variables.
             * 
             * @param environmentVariables List of environment variables.
             * @return the next definition stage.
             */
            Update withEnvironmentVariables(List<EnvironmentVariable> environmentVariables);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    SiteContainer refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    SiteContainer refresh(Context context);
}
