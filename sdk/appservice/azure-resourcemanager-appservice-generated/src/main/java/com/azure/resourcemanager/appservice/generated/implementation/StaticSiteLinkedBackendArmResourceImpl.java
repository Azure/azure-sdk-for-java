// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.StaticSiteLinkedBackendArmResourceInner;
import com.azure.resourcemanager.appservice.generated.models.StaticSiteLinkedBackendArmResource;
import java.time.OffsetDateTime;

public final class StaticSiteLinkedBackendArmResourceImpl implements StaticSiteLinkedBackendArmResource,
    StaticSiteLinkedBackendArmResource.Definition, StaticSiteLinkedBackendArmResource.Update {
    private StaticSiteLinkedBackendArmResourceInner innerObject;

    private final com.azure.resourcemanager.appservice.generated.AppServiceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public String backendResourceId() {
        return this.innerModel().backendResourceId();
    }

    public String region() {
        return this.innerModel().region();
    }

    public OffsetDateTime createdOn() {
        return this.innerModel().createdOn();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public StaticSiteLinkedBackendArmResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appservice.generated.AppServiceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String name;

    private String linkedBackendName;

    public StaticSiteLinkedBackendArmResourceImpl withExistingStaticSite(String resourceGroupName, String name) {
        this.resourceGroupName = resourceGroupName;
        this.name = name;
        return this;
    }

    public StaticSiteLinkedBackendArmResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getStaticSites()
            .linkBackend(resourceGroupName, name, linkedBackendName, this.innerModel(), Context.NONE);
        return this;
    }

    public StaticSiteLinkedBackendArmResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getStaticSites()
            .linkBackend(resourceGroupName, name, linkedBackendName, this.innerModel(), context);
        return this;
    }

    StaticSiteLinkedBackendArmResourceImpl(String name,
        com.azure.resourcemanager.appservice.generated.AppServiceManager serviceManager) {
        this.innerObject = new StaticSiteLinkedBackendArmResourceInner();
        this.serviceManager = serviceManager;
        this.linkedBackendName = name;
    }

    public StaticSiteLinkedBackendArmResourceImpl update() {
        return this;
    }

    public StaticSiteLinkedBackendArmResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getStaticSites()
            .linkBackend(resourceGroupName, name, linkedBackendName, this.innerModel(), Context.NONE);
        return this;
    }

    public StaticSiteLinkedBackendArmResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getStaticSites()
            .linkBackend(resourceGroupName, name, linkedBackendName, this.innerModel(), context);
        return this;
    }

    StaticSiteLinkedBackendArmResourceImpl(StaticSiteLinkedBackendArmResourceInner innerObject,
        com.azure.resourcemanager.appservice.generated.AppServiceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.name = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "staticSites");
        this.linkedBackendName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "linkedBackends");
    }

    public StaticSiteLinkedBackendArmResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getStaticSites()
            .getLinkedBackendWithResponse(resourceGroupName, name, linkedBackendName, Context.NONE)
            .getValue();
        return this;
    }

    public StaticSiteLinkedBackendArmResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getStaticSites()
            .getLinkedBackendWithResponse(resourceGroupName, name, linkedBackendName, context)
            .getValue();
        return this;
    }

    public void validateBackend(StaticSiteLinkedBackendArmResourceInner staticSiteLinkedBackendEnvelope) {
        serviceManager.staticSites()
            .validateBackend(resourceGroupName, name, linkedBackendName, staticSiteLinkedBackendEnvelope);
    }

    public void validateBackend(StaticSiteLinkedBackendArmResourceInner staticSiteLinkedBackendEnvelope,
        Context context) {
        serviceManager.staticSites()
            .validateBackend(resourceGroupName, name, linkedBackendName, staticSiteLinkedBackendEnvelope, context);
    }

    public StaticSiteLinkedBackendArmResourceImpl withKind(String kind) {
        this.innerModel().withKind(kind);
        return this;
    }

    public StaticSiteLinkedBackendArmResourceImpl withBackendResourceId(String backendResourceId) {
        this.innerModel().withBackendResourceId(backendResourceId);
        return this;
    }

    public StaticSiteLinkedBackendArmResourceImpl withRegion(String region) {
        this.innerModel().withRegion(region);
        return this;
    }
}
