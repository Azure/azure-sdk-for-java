// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.HybridConnectionInner;

/** An immutable client-side representation of HybridConnection. */
public interface HybridConnection {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the serviceBusNamespace property: The name of the Service Bus namespace.
     *
     * @return the serviceBusNamespace value.
     */
    String serviceBusNamespace();

    /**
     * Gets the relayName property: The name of the Service Bus relay.
     *
     * @return the relayName value.
     */
    String relayName();

    /**
     * Gets the relayArmUri property: The ARM URI to the Service Bus relay.
     *
     * @return the relayArmUri value.
     */
    String relayArmUri();

    /**
     * Gets the hostname property: The hostname of the endpoint.
     *
     * @return the hostname value.
     */
    String hostname();

    /**
     * Gets the port property: The port of the endpoint.
     *
     * @return the port value.
     */
    Integer port();

    /**
     * Gets the sendKeyName property: The name of the Service Bus key which has Send permissions. This is used to
     * authenticate to Service Bus.
     *
     * @return the sendKeyName value.
     */
    String sendKeyName();

    /**
     * Gets the sendKeyValue property: The value of the Service Bus key. This is used to authenticate to Service Bus. In
     * ARM this key will not be returned normally, use the POST /listKeys API instead.
     *
     * @return the sendKeyValue value.
     */
    String sendKeyValue();

    /**
     * Gets the serviceBusSuffix property: The suffix for the service bus endpoint. By default this is
     * .servicebus.windows.net.
     *
     * @return the serviceBusSuffix value.
     */
    String serviceBusSuffix();

    /**
     * Gets the inner com.azure.resourcemanager.appservice.generated.fluent.models.HybridConnectionInner object.
     *
     * @return the inner object.
     */
    HybridConnectionInner innerModel();

    /** The entirety of the HybridConnection definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The HybridConnection definition stages. */
    interface DefinitionStages {
        /** The first stage of the HybridConnection definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the HybridConnection definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, name, namespaceName.
             *
             * @param resourceGroupName Name of the resource group to which the resource belongs.
             * @param name The name of the web app.
             * @param namespaceName The namespace for this hybrid connection.
             * @return the next definition stage.
             */
            WithCreate withExistingHybridConnectionNamespace(
                String resourceGroupName, String name, String namespaceName);
        }
        /**
         * The stage of the HybridConnection definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithKind,
                DefinitionStages.WithServiceBusNamespace,
                DefinitionStages.WithRelayName,
                DefinitionStages.WithRelayArmUri,
                DefinitionStages.WithHostname,
                DefinitionStages.WithPort,
                DefinitionStages.WithSendKeyName,
                DefinitionStages.WithSendKeyValue,
                DefinitionStages.WithServiceBusSuffix {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            HybridConnection create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            HybridConnection create(Context context);
        }
        /** The stage of the HybridConnection definition allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource..
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }
        /** The stage of the HybridConnection definition allowing to specify serviceBusNamespace. */
        interface WithServiceBusNamespace {
            /**
             * Specifies the serviceBusNamespace property: The name of the Service Bus namespace..
             *
             * @param serviceBusNamespace The name of the Service Bus namespace.
             * @return the next definition stage.
             */
            WithCreate withServiceBusNamespace(String serviceBusNamespace);
        }
        /** The stage of the HybridConnection definition allowing to specify relayName. */
        interface WithRelayName {
            /**
             * Specifies the relayName property: The name of the Service Bus relay..
             *
             * @param relayName The name of the Service Bus relay.
             * @return the next definition stage.
             */
            WithCreate withRelayName(String relayName);
        }
        /** The stage of the HybridConnection definition allowing to specify relayArmUri. */
        interface WithRelayArmUri {
            /**
             * Specifies the relayArmUri property: The ARM URI to the Service Bus relay..
             *
             * @param relayArmUri The ARM URI to the Service Bus relay.
             * @return the next definition stage.
             */
            WithCreate withRelayArmUri(String relayArmUri);
        }
        /** The stage of the HybridConnection definition allowing to specify hostname. */
        interface WithHostname {
            /**
             * Specifies the hostname property: The hostname of the endpoint..
             *
             * @param hostname The hostname of the endpoint.
             * @return the next definition stage.
             */
            WithCreate withHostname(String hostname);
        }
        /** The stage of the HybridConnection definition allowing to specify port. */
        interface WithPort {
            /**
             * Specifies the port property: The port of the endpoint..
             *
             * @param port The port of the endpoint.
             * @return the next definition stage.
             */
            WithCreate withPort(Integer port);
        }
        /** The stage of the HybridConnection definition allowing to specify sendKeyName. */
        interface WithSendKeyName {
            /**
             * Specifies the sendKeyName property: The name of the Service Bus key which has Send permissions. This is
             * used to authenticate to Service Bus..
             *
             * @param sendKeyName The name of the Service Bus key which has Send permissions. This is used to
             *     authenticate to Service Bus.
             * @return the next definition stage.
             */
            WithCreate withSendKeyName(String sendKeyName);
        }
        /** The stage of the HybridConnection definition allowing to specify sendKeyValue. */
        interface WithSendKeyValue {
            /**
             * Specifies the sendKeyValue property: The value of the Service Bus key. This is used to authenticate to
             * Service Bus. In ARM this key will not be returned normally, use the POST /listKeys API instead..
             *
             * @param sendKeyValue The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM
             *     this key will not be returned normally, use the POST /listKeys API instead.
             * @return the next definition stage.
             */
            WithCreate withSendKeyValue(String sendKeyValue);
        }
        /** The stage of the HybridConnection definition allowing to specify serviceBusSuffix. */
        interface WithServiceBusSuffix {
            /**
             * Specifies the serviceBusSuffix property: The suffix for the service bus endpoint. By default this is
             * .servicebus.windows.net.
             *
             * @param serviceBusSuffix The suffix for the service bus endpoint. By default this is
             *     .servicebus.windows.net.
             * @return the next definition stage.
             */
            WithCreate withServiceBusSuffix(String serviceBusSuffix);
        }
    }
    /**
     * Begins update for the HybridConnection resource.
     *
     * @return the stage of resource update.
     */
    HybridConnection.Update update();

    /** The template for HybridConnection update. */
    interface Update
        extends UpdateStages.WithKind,
            UpdateStages.WithServiceBusNamespace,
            UpdateStages.WithRelayName,
            UpdateStages.WithRelayArmUri,
            UpdateStages.WithHostname,
            UpdateStages.WithPort,
            UpdateStages.WithSendKeyName,
            UpdateStages.WithSendKeyValue,
            UpdateStages.WithServiceBusSuffix {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        HybridConnection apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        HybridConnection apply(Context context);
    }
    /** The HybridConnection update stages. */
    interface UpdateStages {
        /** The stage of the HybridConnection update allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource..
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            Update withKind(String kind);
        }
        /** The stage of the HybridConnection update allowing to specify serviceBusNamespace. */
        interface WithServiceBusNamespace {
            /**
             * Specifies the serviceBusNamespace property: The name of the Service Bus namespace..
             *
             * @param serviceBusNamespace The name of the Service Bus namespace.
             * @return the next definition stage.
             */
            Update withServiceBusNamespace(String serviceBusNamespace);
        }
        /** The stage of the HybridConnection update allowing to specify relayName. */
        interface WithRelayName {
            /**
             * Specifies the relayName property: The name of the Service Bus relay..
             *
             * @param relayName The name of the Service Bus relay.
             * @return the next definition stage.
             */
            Update withRelayName(String relayName);
        }
        /** The stage of the HybridConnection update allowing to specify relayArmUri. */
        interface WithRelayArmUri {
            /**
             * Specifies the relayArmUri property: The ARM URI to the Service Bus relay..
             *
             * @param relayArmUri The ARM URI to the Service Bus relay.
             * @return the next definition stage.
             */
            Update withRelayArmUri(String relayArmUri);
        }
        /** The stage of the HybridConnection update allowing to specify hostname. */
        interface WithHostname {
            /**
             * Specifies the hostname property: The hostname of the endpoint..
             *
             * @param hostname The hostname of the endpoint.
             * @return the next definition stage.
             */
            Update withHostname(String hostname);
        }
        /** The stage of the HybridConnection update allowing to specify port. */
        interface WithPort {
            /**
             * Specifies the port property: The port of the endpoint..
             *
             * @param port The port of the endpoint.
             * @return the next definition stage.
             */
            Update withPort(Integer port);
        }
        /** The stage of the HybridConnection update allowing to specify sendKeyName. */
        interface WithSendKeyName {
            /**
             * Specifies the sendKeyName property: The name of the Service Bus key which has Send permissions. This is
             * used to authenticate to Service Bus..
             *
             * @param sendKeyName The name of the Service Bus key which has Send permissions. This is used to
             *     authenticate to Service Bus.
             * @return the next definition stage.
             */
            Update withSendKeyName(String sendKeyName);
        }
        /** The stage of the HybridConnection update allowing to specify sendKeyValue. */
        interface WithSendKeyValue {
            /**
             * Specifies the sendKeyValue property: The value of the Service Bus key. This is used to authenticate to
             * Service Bus. In ARM this key will not be returned normally, use the POST /listKeys API instead..
             *
             * @param sendKeyValue The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM
             *     this key will not be returned normally, use the POST /listKeys API instead.
             * @return the next definition stage.
             */
            Update withSendKeyValue(String sendKeyValue);
        }
        /** The stage of the HybridConnection update allowing to specify serviceBusSuffix. */
        interface WithServiceBusSuffix {
            /**
             * Specifies the serviceBusSuffix property: The suffix for the service bus endpoint. By default this is
             * .servicebus.windows.net.
             *
             * @param serviceBusSuffix The suffix for the service bus endpoint. By default this is
             *     .servicebus.windows.net.
             * @return the next definition stage.
             */
            Update withServiceBusSuffix(String serviceBusSuffix);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    HybridConnection refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    HybridConnection refresh(Context context);
}
