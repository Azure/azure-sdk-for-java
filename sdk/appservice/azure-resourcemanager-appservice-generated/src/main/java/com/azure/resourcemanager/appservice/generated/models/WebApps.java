// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.AzureStoragePropertyDictionaryResourceInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.BackupRequestInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.ConnectionStringDictionaryInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.CsmPublishingCredentialsPoliciesEntityInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.DeploymentInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.FunctionEnvelopeInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.HostnameBindingInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.HybridConnectionInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.IdentifierInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.KeyInfoInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.PremierAddOnInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.PrivateAccessInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.PublicCertificateInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.PushSettingsInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.RelayServiceConnectionEntityInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.RemotePrivateEndpointConnectionArmResourceInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.RestoreRequestInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.SiteAuthSettingsInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.SiteAuthSettingsV2Inner;
import com.azure.resourcemanager.appservice.generated.fluent.models.SiteConfigResourceInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.SiteContainerInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.SiteInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.SiteLogsConfigInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.SitePatchResourceInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.SiteSourceControlInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.SlotConfigNamesResourceInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.StringDictionaryInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.SwiftVirtualNetworkInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.VnetGatewayInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.VnetInfoResourceInner;
import java.util.List;

/**
 * Resource collection API of WebApps.
 */
public interface WebApps {
    /**
     * Get all apps for a subscription.
     * 
     * Description for Get all apps for a subscription.
     * 
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> list();

    /**
     * Get all apps for a subscription.
     * 
     * Description for Get all apps for a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> list(Context context);

    /**
     * Gets all web, mobile, and API apps in the specified resource group.
     * 
     * Description for Gets all web, mobile, and API apps in the specified resource group.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> listByResourceGroup(String resourceGroupName);

    /**
     * Gets all web, mobile, and API apps in the specified resource group.
     * 
     * Description for Gets all web, mobile, and API apps in the specified resource group.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param includeSlots Specify &lt;strong&gt;true&lt;/strong&gt; to include deployment slots in results. The default
     * is false, which only gives you the production slot of all apps.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> listByResourceGroup(String resourceGroupName, Boolean includeSlots, Context context);

    /**
     * Gets the details of a web, mobile, or API app.
     * 
     * Description for Gets the details of a web, mobile, or API app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a web app, a mobile app backend, or an API app along with {@link Response}.
     */
    Response<Site> getByResourceGroupWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets the details of a web, mobile, or API app.
     * 
     * Description for Gets the details of a web, mobile, or API app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a web app, a mobile app backend, or an API app.
     */
    Site getByResourceGroup(String resourceGroupName, String name);

    /**
     * Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * Description for Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app to delete.
     * @param deleteMetrics If true, web app metrics are also deleted.
     * @param deleteEmptyServerFarm Specify false if you want to keep empty App Service plan. By default, empty App
     * Service plan is deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String name, Boolean deleteMetrics,
        Boolean deleteEmptyServerFarm, Context context);

    /**
     * Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * Description for Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String name);

    /**
     * Analyze a custom hostname.
     * 
     * Description for Analyze a custom hostname.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param hostname Custom hostname.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return custom domain analysis along with {@link Response}.
     */
    Response<CustomHostnameAnalysisResult> analyzeCustomHostnameWithResponse(String resourceGroupName, String name,
        String hostname, Context context);

    /**
     * Analyze a custom hostname.
     * 
     * Description for Analyze a custom hostname.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return custom domain analysis.
     */
    CustomHostnameAnalysisResult analyzeCustomHostname(String resourceGroupName, String name);

    /**
     * Applies the configuration settings from the target slot onto the current slot.
     * 
     * Description for Applies the configuration settings from the target slot onto the current slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> applySlotConfigToProductionWithResponse(String resourceGroupName, String name,
        CsmSlotEntity slotSwapEntity, Context context);

    /**
     * Applies the configuration settings from the target slot onto the current slot.
     * 
     * Description for Applies the configuration settings from the target slot onto the current slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void applySlotConfigToProduction(String resourceGroupName, String name, CsmSlotEntity slotSwapEntity);

    /**
     * Creates a backup of an app.
     * 
     * Description for Creates a backup of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param request Backup configuration. You can use the JSON response from the POST action as input here.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description along with {@link Response}.
     */
    Response<BackupItem> backupWithResponse(String resourceGroupName, String name, BackupRequestInner request,
        Context context);

    /**
     * Creates a backup of an app.
     * 
     * Description for Creates a backup of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param request Backup configuration. You can use the JSON response from the POST action as input here.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description.
     */
    BackupItem backup(String resourceGroupName, String name, BackupRequestInner request);

    /**
     * Gets existing backups of an app.
     * 
     * Description for Gets existing backups of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of backup items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BackupItem> listBackups(String resourceGroupName, String name);

    /**
     * Gets existing backups of an app.
     * 
     * Description for Gets existing backups of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of backup items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BackupItem> listBackups(String resourceGroupName, String name, Context context);

    /**
     * Gets a backup of an app by its ID.
     * 
     * Description for Gets a backup of an app by its ID.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description along with {@link Response}.
     */
    Response<BackupItem> getBackupStatusWithResponse(String resourceGroupName, String name, String backupId,
        Context context);

    /**
     * Gets a backup of an app by its ID.
     * 
     * Description for Gets a backup of an app by its ID.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description.
     */
    BackupItem getBackupStatus(String resourceGroupName, String name, String backupId);

    /**
     * Deletes a backup of an app by its ID.
     * 
     * Description for Deletes a backup of an app by its ID.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteBackupWithResponse(String resourceGroupName, String name, String backupId, Context context);

    /**
     * Deletes a backup of an app by its ID.
     * 
     * Description for Deletes a backup of an app by its ID.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteBackup(String resourceGroupName, String name, String backupId);

    /**
     * Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as
     * the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the
     * request body.
     * 
     * Description for Gets status of a web app backup that may be in progress, including secrets associated with the
     * backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is
     * passed in the request body.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param backupId ID of backup.
     * @param request Information on backup request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description along with {@link Response}.
     */
    Response<BackupItem> listBackupStatusSecretsWithResponse(String resourceGroupName, String name, String backupId,
        BackupRequestInner request, Context context);

    /**
     * Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as
     * the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the
     * request body.
     * 
     * Description for Gets status of a web app backup that may be in progress, including secrets associated with the
     * backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is
     * passed in the request body.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param backupId ID of backup.
     * @param request Information on backup request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description.
     */
    BackupItem listBackupStatusSecrets(String resourceGroupName, String name, String backupId,
        BackupRequestInner request);

    /**
     * Restores a specific backup to another app (or deployment slot, if specified).
     * 
     * Description for Restores a specific backup to another app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @param request Information on restore request .
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restore(String resourceGroupName, String name, String backupId, RestoreRequestInner request);

    /**
     * Restores a specific backup to another app (or deployment slot, if specified).
     * 
     * Description for Restores a specific backup to another app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @param request Information on restore request .
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restore(String resourceGroupName, String name, String backupId, RestoreRequestInner request, Context context);

    /**
     * Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.
     * 
     * Description for Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies entity collection ARM resource as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<CsmPublishingCredentialsPoliciesEntity>
        listBasicPublishingCredentialsPolicies(String resourceGroupName, String name);

    /**
     * Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.
     * 
     * Description for Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies entity collection ARM resource as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<CsmPublishingCredentialsPoliciesEntity>
        listBasicPublishingCredentialsPolicies(String resourceGroupName, String name, Context context);

    /**
     * Returns whether FTP is allowed on the site or not.
     * 
     * Description for Returns whether FTP is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters along with {@link Response}.
     */
    Response<CsmPublishingCredentialsPoliciesEntity> getFtpAllowedWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Returns whether FTP is allowed on the site or not.
     * 
     * Description for Returns whether FTP is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters.
     */
    CsmPublishingCredentialsPoliciesEntity getFtpAllowed(String resourceGroupName, String name);

    /**
     * Updates whether FTP is allowed on the site or not.
     * 
     * Description for Updates whether FTP is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters along with {@link Response}.
     */
    Response<CsmPublishingCredentialsPoliciesEntity> updateFtpAllowedWithResponse(String resourceGroupName, String name,
        CsmPublishingCredentialsPoliciesEntityInner csmPublishingAccessPoliciesEntity, Context context);

    /**
     * Updates whether FTP is allowed on the site or not.
     * 
     * Description for Updates whether FTP is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters.
     */
    CsmPublishingCredentialsPoliciesEntity updateFtpAllowed(String resourceGroupName, String name,
        CsmPublishingCredentialsPoliciesEntityInner csmPublishingAccessPoliciesEntity);

    /**
     * Returns whether Scm basic auth is allowed on the site or not.
     * 
     * Description for Returns whether Scm basic auth is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters along with {@link Response}.
     */
    Response<CsmPublishingCredentialsPoliciesEntity> getScmAllowedWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Returns whether Scm basic auth is allowed on the site or not.
     * 
     * Description for Returns whether Scm basic auth is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters.
     */
    CsmPublishingCredentialsPoliciesEntity getScmAllowed(String resourceGroupName, String name);

    /**
     * Updates whether user publishing credentials are allowed on the site or not.
     * 
     * Description for Updates whether user publishing credentials are allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters along with {@link Response}.
     */
    Response<CsmPublishingCredentialsPoliciesEntity> updateScmAllowedWithResponse(String resourceGroupName, String name,
        CsmPublishingCredentialsPoliciesEntityInner csmPublishingAccessPoliciesEntity, Context context);

    /**
     * Updates whether user publishing credentials are allowed on the site or not.
     * 
     * Description for Updates whether user publishing credentials are allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters.
     */
    CsmPublishingCredentialsPoliciesEntity updateScmAllowed(String resourceGroupName, String name,
        CsmPublishingCredentialsPoliciesEntityInner csmPublishingAccessPoliciesEntity);

    /**
     * List the configurations of an app
     * 
     * Description for List the configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of site configurations as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteConfigResource> listConfigurations(String resourceGroupName, String name);

    /**
     * List the configurations of an app
     * 
     * Description for List the configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of site configurations as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteConfigResource> listConfigurations(String resourceGroupName, String name, Context context);

    /**
     * Replaces the application settings of an app.
     * 
     * Description for Replaces the application settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param appSettings Application settings of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    StringDictionary updateApplicationSettings(String resourceGroupName, String name,
        StringDictionaryInner appSettings);

    /**
     * Replaces the application settings of an app.
     * 
     * Description for Replaces the application settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param appSettings Application settings of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    StringDictionary updateApplicationSettings(String resourceGroupName, String name, StringDictionaryInner appSettings,
        Context context);

    /**
     * Gets the application settings of an app.
     * 
     * Description for Gets the application settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<StringDictionary> listApplicationSettingsWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Gets the application settings of an app.
     * 
     * Description for Gets the application settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    StringDictionary listApplicationSettings(String resourceGroupName, String name);

    /**
     * Updates the Authentication / Authorization settings associated with web app.
     * 
     * Description for Updates the Authentication / Authorization settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param siteAuthSettings Auth settings associated with web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization feature along with
     * {@link Response}.
     */
    Response<SiteAuthSettings> updateAuthSettingsWithResponse(String resourceGroupName, String name,
        SiteAuthSettingsInner siteAuthSettings, Context context);

    /**
     * Updates the Authentication / Authorization settings associated with web app.
     * 
     * Description for Updates the Authentication / Authorization settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param siteAuthSettings Auth settings associated with web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization feature.
     */
    SiteAuthSettings updateAuthSettings(String resourceGroupName, String name, SiteAuthSettingsInner siteAuthSettings);

    /**
     * Gets the Authentication/Authorization settings of an app.
     * 
     * Description for Gets the Authentication/Authorization settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization feature along with
     * {@link Response}.
     */
    Response<SiteAuthSettings> getAuthSettingsWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets the Authentication/Authorization settings of an app.
     * 
     * Description for Gets the Authentication/Authorization settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization feature.
     */
    SiteAuthSettings getAuthSettings(String resourceGroupName, String name);

    /**
     * Gets site's Authentication / Authorization settings for apps via the V2 format
     * 
     * Description for Gets site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization V2 feature along with
     * {@link Response}.
     */
    Response<SiteAuthSettingsV2> getAuthSettingsV2WithoutSecretsWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Gets site's Authentication / Authorization settings for apps via the V2 format
     * 
     * Description for Gets site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization V2 feature.
     */
    SiteAuthSettingsV2 getAuthSettingsV2WithoutSecrets(String resourceGroupName, String name);

    /**
     * Updates site's Authentication / Authorization settings for apps via the V2 format
     * 
     * Description for Updates site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param siteAuthSettingsV2 Auth settings associated with web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization V2 feature along with
     * {@link Response}.
     */
    Response<SiteAuthSettingsV2> updateAuthSettingsV2WithResponse(String resourceGroupName, String name,
        SiteAuthSettingsV2Inner siteAuthSettingsV2, Context context);

    /**
     * Updates site's Authentication / Authorization settings for apps via the V2 format
     * 
     * Description for Updates site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param siteAuthSettingsV2 Auth settings associated with web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization V2 feature.
     */
    SiteAuthSettingsV2 updateAuthSettingsV2(String resourceGroupName, String name,
        SiteAuthSettingsV2Inner siteAuthSettingsV2);

    /**
     * Gets site's Authentication / Authorization settings for apps via the V2 format
     * 
     * Description for Gets site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization V2 feature along with
     * {@link Response}.
     */
    Response<SiteAuthSettingsV2> getAuthSettingsV2WithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets site's Authentication / Authorization settings for apps via the V2 format
     * 
     * Description for Gets site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization V2 feature.
     */
    SiteAuthSettingsV2 getAuthSettingsV2(String resourceGroupName, String name);

    /**
     * Updates the Azure storage account configurations of an app.
     * 
     * Description for Updates the Azure storage account configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param azureStorageAccounts Azure storage accounts of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azureStorageInfo dictionary resource along with {@link Response}.
     */
    Response<AzureStoragePropertyDictionaryResource> updateAzureStorageAccountsWithResponse(String resourceGroupName,
        String name, AzureStoragePropertyDictionaryResourceInner azureStorageAccounts, Context context);

    /**
     * Updates the Azure storage account configurations of an app.
     * 
     * Description for Updates the Azure storage account configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param azureStorageAccounts Azure storage accounts of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azureStorageInfo dictionary resource.
     */
    AzureStoragePropertyDictionaryResource updateAzureStorageAccounts(String resourceGroupName, String name,
        AzureStoragePropertyDictionaryResourceInner azureStorageAccounts);

    /**
     * Gets the Azure storage account configurations of an app.
     * 
     * Description for Gets the Azure storage account configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azureStorageInfo dictionary resource along with {@link Response}.
     */
    Response<AzureStoragePropertyDictionaryResource> listAzureStorageAccountsWithResponse(String resourceGroupName,
        String name, Context context);

    /**
     * Gets the Azure storage account configurations of an app.
     * 
     * Description for Gets the Azure storage account configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azureStorageInfo dictionary resource.
     */
    AzureStoragePropertyDictionaryResource listAzureStorageAccounts(String resourceGroupName, String name);

    /**
     * Updates the backup configuration of an app.
     * 
     * Description for Updates the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param request Edited backup configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a backup which will be performed along with {@link Response}.
     */
    Response<BackupRequest> updateBackupConfigurationWithResponse(String resourceGroupName, String name,
        BackupRequestInner request, Context context);

    /**
     * Updates the backup configuration of an app.
     * 
     * Description for Updates the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param request Edited backup configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a backup which will be performed.
     */
    BackupRequest updateBackupConfiguration(String resourceGroupName, String name, BackupRequestInner request);

    /**
     * Deletes the backup configuration of an app.
     * 
     * Description for Deletes the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteBackupConfigurationWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Deletes the backup configuration of an app.
     * 
     * Description for Deletes the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteBackupConfiguration(String resourceGroupName, String name);

    /**
     * Gets the backup configuration of an app.
     * 
     * Description for Gets the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a backup which will be performed along with {@link Response}.
     */
    Response<BackupRequest> getBackupConfigurationWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets the backup configuration of an app.
     * 
     * Description for Gets the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a backup which will be performed.
     */
    BackupRequest getBackupConfiguration(String resourceGroupName, String name);

    /**
     * Gets the config reference app settings and status of an app
     * 
     * Description for Gets the config reference app settings and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApiKVReference> getAppSettingsKeyVaultReferences(String resourceGroupName, String name);

    /**
     * Gets the config reference app settings and status of an app
     * 
     * Description for Gets the config reference app settings and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApiKVReference> getAppSettingsKeyVaultReferences(String resourceGroupName, String name,
        Context context);

    /**
     * Gets the config reference and status of an app
     * 
     * Description for Gets the config reference and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param appSettingKey App Setting key name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of site key vault references along with {@link Response}.
     */
    Response<ApiKVReference> getAppSettingKeyVaultReferenceWithResponse(String resourceGroupName, String name,
        String appSettingKey, Context context);

    /**
     * Gets the config reference and status of an app
     * 
     * Description for Gets the config reference and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param appSettingKey App Setting key name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of site key vault references.
     */
    ApiKVReference getAppSettingKeyVaultReference(String resourceGroupName, String name, String appSettingKey);

    /**
     * Gets the config reference app settings and status of an app
     * 
     * Description for Gets the config reference app settings and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApiKVReference> getSiteConnectionStringKeyVaultReferences(String resourceGroupName, String name);

    /**
     * Gets the config reference app settings and status of an app
     * 
     * Description for Gets the config reference app settings and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApiKVReference> getSiteConnectionStringKeyVaultReferences(String resourceGroupName, String name,
        Context context);

    /**
     * Gets the config reference and status of an app
     * 
     * Description for Gets the config reference and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param connectionStringKey The connectionStringKey parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of site key vault references along with {@link Response}.
     */
    Response<ApiKVReference> getSiteConnectionStringKeyVaultReferenceWithResponse(String resourceGroupName, String name,
        String connectionStringKey, Context context);

    /**
     * Gets the config reference and status of an app
     * 
     * Description for Gets the config reference and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param connectionStringKey The connectionStringKey parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of site key vault references.
     */
    ApiKVReference getSiteConnectionStringKeyVaultReference(String resourceGroupName, String name,
        String connectionStringKey);

    /**
     * Replaces the connection strings of an app.
     * 
     * Description for Replaces the connection strings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param connectionStrings Connection strings of the app or deployment slot. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<ConnectionStringDictionary> updateConnectionStringsWithResponse(String resourceGroupName, String name,
        ConnectionStringDictionaryInner connectionStrings, Context context);

    /**
     * Replaces the connection strings of an app.
     * 
     * Description for Replaces the connection strings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param connectionStrings Connection strings of the app or deployment slot. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    ConnectionStringDictionary updateConnectionStrings(String resourceGroupName, String name,
        ConnectionStringDictionaryInner connectionStrings);

    /**
     * Gets the connection strings of an app.
     * 
     * Description for Gets the connection strings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<ConnectionStringDictionary> listConnectionStringsWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Gets the connection strings of an app.
     * 
     * Description for Gets the connection strings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    ConnectionStringDictionary listConnectionStrings(String resourceGroupName, String name);

    /**
     * Gets the logging configuration of an app.
     * 
     * Description for Gets the logging configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration of App Service site logs along with {@link Response}.
     */
    Response<SiteLogsConfig> getDiagnosticLogsConfigurationWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Gets the logging configuration of an app.
     * 
     * Description for Gets the logging configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration of App Service site logs.
     */
    SiteLogsConfig getDiagnosticLogsConfiguration(String resourceGroupName, String name);

    /**
     * Updates the logging configuration of an app.
     * 
     * Description for Updates the logging configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param siteLogsConfig A SiteLogsConfig JSON object that contains the logging configuration to change in the
     * "properties" property.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration of App Service site logs along with {@link Response}.
     */
    Response<SiteLogsConfig> updateDiagnosticLogsConfigWithResponse(String resourceGroupName, String name,
        SiteLogsConfigInner siteLogsConfig, Context context);

    /**
     * Updates the logging configuration of an app.
     * 
     * Description for Updates the logging configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param siteLogsConfig A SiteLogsConfig JSON object that contains the logging configuration to change in the
     * "properties" property.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration of App Service site logs.
     */
    SiteLogsConfig updateDiagnosticLogsConfig(String resourceGroupName, String name,
        SiteLogsConfigInner siteLogsConfig);

    /**
     * Replaces the metadata of an app.
     * 
     * Description for Replaces the metadata of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param metadata Edited metadata of the app or deployment slot. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<StringDictionary> updateMetadataWithResponse(String resourceGroupName, String name,
        StringDictionaryInner metadata, Context context);

    /**
     * Replaces the metadata of an app.
     * 
     * Description for Replaces the metadata of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param metadata Edited metadata of the app or deployment slot. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    StringDictionary updateMetadata(String resourceGroupName, String name, StringDictionaryInner metadata);

    /**
     * Gets the metadata of an app.
     * 
     * Description for Gets the metadata of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<StringDictionary> listMetadataWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets the metadata of an app.
     * 
     * Description for Gets the metadata of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    StringDictionary listMetadata(String resourceGroupName, String name);

    /**
     * Gets the Git/FTP publishing credentials of an app.
     * 
     * Description for Gets the Git/FTP publishing credentials of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity.
     */
    User listPublishingCredentials(String resourceGroupName, String name);

    /**
     * Gets the Git/FTP publishing credentials of an app.
     * 
     * Description for Gets the Git/FTP publishing credentials of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity.
     */
    User listPublishingCredentials(String resourceGroupName, String name, Context context);

    /**
     * Updates the Push settings associated with web app.
     * 
     * Description for Updates the Push settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param pushSettings Push settings associated with web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return push settings for the App along with {@link Response}.
     */
    Response<PushSettings> updateSitePushSettingsWithResponse(String resourceGroupName, String name,
        PushSettingsInner pushSettings, Context context);

    /**
     * Updates the Push settings associated with web app.
     * 
     * Description for Updates the Push settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param pushSettings Push settings associated with web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return push settings for the App.
     */
    PushSettings updateSitePushSettings(String resourceGroupName, String name, PushSettingsInner pushSettings);

    /**
     * Gets the Push settings associated with web app.
     * 
     * Description for Gets the Push settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return push settings for the App along with {@link Response}.
     */
    Response<PushSettings> listSitePushSettingsWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets the Push settings associated with web app.
     * 
     * Description for Gets the Push settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return push settings for the App.
     */
    PushSettings listSitePushSettings(String resourceGroupName, String name);

    /**
     * Gets the names of app settings and connection strings that stick to the slot (not swapped).
     * 
     * Description for Gets the names of app settings and connection strings that stick to the slot (not swapped).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return slot Config names azure resource along with {@link Response}.
     */
    Response<SlotConfigNamesResource> listSlotConfigurationNamesWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Gets the names of app settings and connection strings that stick to the slot (not swapped).
     * 
     * Description for Gets the names of app settings and connection strings that stick to the slot (not swapped).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return slot Config names azure resource.
     */
    SlotConfigNamesResource listSlotConfigurationNames(String resourceGroupName, String name);

    /**
     * Updates the names of application settings and connection string that remain with the slot during swap operation.
     * 
     * Description for Updates the names of application settings and connection string that remain with the slot during
     * swap operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slotConfigNames Names of application settings and connection strings. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return slot Config names azure resource along with {@link Response}.
     */
    Response<SlotConfigNamesResource> updateSlotConfigurationNamesWithResponse(String resourceGroupName, String name,
        SlotConfigNamesResourceInner slotConfigNames, Context context);

    /**
     * Updates the names of application settings and connection string that remain with the slot during swap operation.
     * 
     * Description for Updates the names of application settings and connection string that remain with the slot during
     * swap operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slotConfigNames Names of application settings and connection strings. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return slot Config names azure resource.
     */
    SlotConfigNamesResource updateSlotConfigurationNames(String resourceGroupName, String name,
        SlotConfigNamesResourceInner slotConfigNames);

    /**
     * Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications,
     * Always On, etc.
     * 
     * Description for Gets the configuration of an app, such as platform version and bitness, default documents,
     * virtual applications, Always On, etc.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource along with {@link Response}.
     */
    Response<SiteConfigResource> getConfigurationWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications,
     * Always On, etc.
     * 
     * Description for Gets the configuration of an app, such as platform version and bitness, default documents,
     * virtual applications, Always On, etc.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource.
     */
    SiteConfigResource getConfiguration(String resourceGroupName, String name);

    /**
     * Updates the configuration of an app.
     * 
     * Description for Updates the configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param siteConfig JSON representation of a SiteConfig object. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource.
     */
    SiteConfigResource createOrUpdateConfiguration(String resourceGroupName, String name,
        SiteConfigResourceInner siteConfig);

    /**
     * Updates the configuration of an app.
     * 
     * Description for Updates the configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param siteConfig JSON representation of a SiteConfig object. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource.
     */
    SiteConfigResource createOrUpdateConfiguration(String resourceGroupName, String name,
        SiteConfigResourceInner siteConfig, Context context);

    /**
     * Updates the configuration of an app.
     * 
     * Description for Updates the configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param siteConfig JSON representation of a SiteConfig object. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource along with {@link Response}.
     */
    Response<SiteConfigResource> updateConfigurationWithResponse(String resourceGroupName, String name,
        SiteConfigResourceInner siteConfig, Context context);

    /**
     * Updates the configuration of an app.
     * 
     * Description for Updates the configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param siteConfig JSON representation of a SiteConfig object. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource.
     */
    SiteConfigResource updateConfiguration(String resourceGroupName, String name, SiteConfigResourceInner siteConfig);

    /**
     * Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the
     * ID of the snapshot.
     * 
     * Description for Gets a list of web app configuration snapshots identifiers. Each element of the list contains a
     * timestamp and the ID of the snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of metadata for the app configuration snapshots that can be restored as paginated response
     * with {@link PagedIterable}.
     */
    PagedIterable<SiteConfigurationSnapshotInfo> listConfigurationSnapshotInfo(String resourceGroupName, String name);

    /**
     * Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the
     * ID of the snapshot.
     * 
     * Description for Gets a list of web app configuration snapshots identifiers. Each element of the list contains a
     * timestamp and the ID of the snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of metadata for the app configuration snapshots that can be restored as paginated response
     * with {@link PagedIterable}.
     */
    PagedIterable<SiteConfigurationSnapshotInfo> listConfigurationSnapshotInfo(String resourceGroupName, String name,
        Context context);

    /**
     * Gets a snapshot of the configuration of an app at a previous point in time.
     * 
     * Description for Gets a snapshot of the configuration of an app at a previous point in time.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param snapshotId The ID of the snapshot to read.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource along with {@link Response}.
     */
    Response<SiteConfigResource> getConfigurationSnapshotWithResponse(String resourceGroupName, String name,
        String snapshotId, Context context);

    /**
     * Gets a snapshot of the configuration of an app at a previous point in time.
     * 
     * Description for Gets a snapshot of the configuration of an app at a previous point in time.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param snapshotId The ID of the snapshot to read.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource.
     */
    SiteConfigResource getConfigurationSnapshot(String resourceGroupName, String name, String snapshotId);

    /**
     * Reverts the configuration of an app to a previous snapshot.
     * 
     * Description for Reverts the configuration of an app to a previous snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param snapshotId The ID of the snapshot to read.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> recoverSiteConfigurationSnapshotWithResponse(String resourceGroupName, String name,
        String snapshotId, Context context);

    /**
     * Reverts the configuration of an app to a previous snapshot.
     * 
     * Description for Reverts the configuration of an app to a previous snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param snapshotId The ID of the snapshot to read.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void recoverSiteConfigurationSnapshot(String resourceGroupName, String name, String snapshotId);

    /**
     * Gets the last lines of docker logs for the given site
     * 
     * Description for Gets the last lines of docker logs for the given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<BinaryData> getWebSiteContainerLogsWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets the last lines of docker logs for the given site
     * 
     * Description for Gets the last lines of docker logs for the given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    BinaryData getWebSiteContainerLogs(String resourceGroupName, String name);

    /**
     * Gets the ZIP archived docker log files for the given site
     * 
     * Description for Gets the ZIP archived docker log files for the given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<BinaryData> getContainerLogsZipWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets the ZIP archived docker log files for the given site
     * 
     * Description for Gets the ZIP archived docker log files for the given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    BinaryData getContainerLogsZip(String resourceGroupName, String name);

    /**
     * List continuous web jobs for an app, or a deployment slot.
     * 
     * Description for List continuous web jobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ContinuousWebJob> listContinuousWebJobs(String resourceGroupName, String name);

    /**
     * List continuous web jobs for an app, or a deployment slot.
     * 
     * Description for List continuous web jobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ContinuousWebJob> listContinuousWebJobs(String resourceGroupName, String name, Context context);

    /**
     * Gets a continuous web job by its ID for an app, or a deployment slot.
     * 
     * Description for Gets a continuous web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return continuous Web Job Information along with {@link Response}.
     */
    Response<ContinuousWebJob> getContinuousWebJobWithResponse(String resourceGroupName, String name, String webJobName,
        Context context);

    /**
     * Gets a continuous web job by its ID for an app, or a deployment slot.
     * 
     * Description for Gets a continuous web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return continuous Web Job Information.
     */
    ContinuousWebJob getContinuousWebJob(String resourceGroupName, String name, String webJobName);

    /**
     * Delete a continuous web job by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a continuous web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteContinuousWebJobWithResponse(String resourceGroupName, String name, String webJobName,
        Context context);

    /**
     * Delete a continuous web job by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a continuous web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteContinuousWebJob(String resourceGroupName, String name, String webJobName);

    /**
     * Start a continuous web job for an app, or a deployment slot.
     * 
     * Description for Start a continuous web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> startContinuousWebJobWithResponse(String resourceGroupName, String name, String webJobName,
        Context context);

    /**
     * Start a continuous web job for an app, or a deployment slot.
     * 
     * Description for Start a continuous web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void startContinuousWebJob(String resourceGroupName, String name, String webJobName);

    /**
     * Stop a continuous web job for an app, or a deployment slot.
     * 
     * Description for Stop a continuous web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> stopContinuousWebJobWithResponse(String resourceGroupName, String name, String webJobName,
        Context context);

    /**
     * Stop a continuous web job for an app, or a deployment slot.
     * 
     * Description for Stop a continuous web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stopContinuousWebJob(String resourceGroupName, String name, String webJobName);

    /**
     * List deployment statuses for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment status collection ARM resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CsmDeploymentStatus> listProductionSiteDeploymentStatuses(String resourceGroupName, String name);

    /**
     * List deployment statuses for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment status collection ARM resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CsmDeploymentStatus> listProductionSiteDeploymentStatuses(String resourceGroupName, String name,
        Context context);

    /**
     * Gets the deployment status for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param deploymentStatusId GUID of the deployment operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the deployment status for an app (or deployment slot, if specified).
     */
    CsmDeploymentStatus getProductionSiteDeploymentStatus(String resourceGroupName, String name,
        String deploymentStatusId);

    /**
     * Gets the deployment status for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param deploymentStatusId GUID of the deployment operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the deployment status for an app (or deployment slot, if specified).
     */
    CsmDeploymentStatus getProductionSiteDeploymentStatus(String resourceGroupName, String name,
        String deploymentStatusId, Context context);

    /**
     * List deployments for an app, or a deployment slot.
     * 
     * Description for List deployments for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of app deployments as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Deployment> listDeployments(String resourceGroupName, String name);

    /**
     * List deployments for an app, or a deployment slot.
     * 
     * Description for List deployments for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of app deployments as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Deployment> listDeployments(String resourceGroupName, String name, Context context);

    /**
     * Get a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Get a deployment by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id Deployment ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity along with {@link Response}.
     */
    Response<Deployment> getDeploymentWithResponse(String resourceGroupName, String name, String id, Context context);

    /**
     * Get a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Get a deployment by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id Deployment ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity.
     */
    Deployment getDeployment(String resourceGroupName, String name, String id);

    /**
     * Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id Deployment ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteDeploymentWithResponse(String resourceGroupName, String name, String id, Context context);

    /**
     * Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id Deployment ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteDeployment(String resourceGroupName, String name, String id);

    /**
     * List deployment log for specific deployment for an app, or a deployment slot.
     * 
     * Description for List deployment log for specific deployment for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id The ID of a specific deployment. This is the value of the name property in the JSON response from "GET
     * /api/sites/{siteName}/deployments".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity along with {@link Response}.
     */
    Response<Deployment> listDeploymentLogWithResponse(String resourceGroupName, String name, String id,
        Context context);

    /**
     * List deployment log for specific deployment for an app, or a deployment slot.
     * 
     * Description for List deployment log for specific deployment for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id The ID of a specific deployment. This is the value of the name property in the JSON response from "GET
     * /api/sites/{siteName}/deployments".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity.
     */
    Deployment listDeploymentLog(String resourceGroupName, String name, String id);

    /**
     * Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to get information
     * about the databases stored in a backup.
     * 
     * Description for Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to
     * get information about the databases stored in a backup.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param request A RestoreRequest object that includes Azure storage URL and blog name for discovery of backup.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a restore request along with {@link Response}.
     */
    Response<RestoreRequest> discoverBackupWithResponse(String resourceGroupName, String name,
        RestoreRequestInner request, Context context);

    /**
     * Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to get information
     * about the databases stored in a backup.
     * 
     * Description for Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to
     * get information about the databases stored in a backup.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param request A RestoreRequest object that includes Azure storage URL and blog name for discovery of backup.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a restore request.
     */
    RestoreRequest discoverBackup(String resourceGroupName, String name, RestoreRequestInner request);

    /**
     * Lists ownership identifiers for domain associated with web app.
     * 
     * Description for Lists ownership identifiers for domain associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of identifiers as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Identifier> listDomainOwnershipIdentifiers(String resourceGroupName, String name);

    /**
     * Lists ownership identifiers for domain associated with web app.
     * 
     * Description for Lists ownership identifiers for domain associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of identifiers as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Identifier> listDomainOwnershipIdentifiers(String resourceGroupName, String name, Context context);

    /**
     * Get domain ownership identifier for web app.
     * 
     * Description for Get domain ownership identifier for web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a domain specific resource identifier along with {@link Response}.
     */
    Response<Identifier> getDomainOwnershipIdentifierWithResponse(String resourceGroupName, String name,
        String domainOwnershipIdentifierName, Context context);

    /**
     * Get domain ownership identifier for web app.
     * 
     * Description for Get domain ownership identifier for web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a domain specific resource identifier.
     */
    Identifier getDomainOwnershipIdentifier(String resourceGroupName, String name,
        String domainOwnershipIdentifierName);

    /**
     * Deletes a domain ownership identifier for a web app.
     * 
     * Description for Deletes a domain ownership identifier for a web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteDomainOwnershipIdentifierWithResponse(String resourceGroupName, String name,
        String domainOwnershipIdentifierName, Context context);

    /**
     * Deletes a domain ownership identifier for a web app.
     * 
     * Description for Deletes a domain ownership identifier for a web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteDomainOwnershipIdentifier(String resourceGroupName, String name, String domainOwnershipIdentifierName);

    /**
     * Get the status of the last MSDeploy operation.
     * 
     * Description for Get the status of the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response along with {@link Response}.
     */
    Response<MSDeployStatus> getMSDeployStatusWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Get the status of the last MSDeploy operation.
     * 
     * Description for Get the status of the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus getMSDeployStatus(String resourceGroupName, String name);

    /**
     * Invoke the MSDeploy web app extension.
     * 
     * Description for Invoke the MSDeploy web app extension.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param mSDeploy Details of MSDeploy operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus createMSDeployOperation(String resourceGroupName, String name, MSDeploy mSDeploy);

    /**
     * Invoke the MSDeploy web app extension.
     * 
     * Description for Invoke the MSDeploy web app extension.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param mSDeploy Details of MSDeploy operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus createMSDeployOperation(String resourceGroupName, String name, MSDeploy mSDeploy, Context context);

    /**
     * Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * Description for Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy log along with {@link Response}.
     */
    Response<MSDeployLog> getMSDeployLogWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * Description for Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy log.
     */
    MSDeployLog getMSDeployLog(String resourceGroupName, String name);

    /**
     * Invoke onedeploy status API /api/deployments and gets the deployment status for the site
     * 
     * Description for Invoke onedeploy status API /api/deployments and gets the deployment status for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object along with {@link Response}.
     */
    Response<Object> getOneDeployStatusWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Invoke onedeploy status API /api/deployments and gets the deployment status for the site
     * 
     * Description for Invoke onedeploy status API /api/deployments and gets the deployment status for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object getOneDeployStatus(String resourceGroupName, String name);

    /**
     * Invoke the OneDeploy publish web app extension.
     * 
     * Description for Invoke the OneDeploy publish web app extension.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object along with {@link Response}.
     */
    Response<Object> createOneDeployOperationWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Invoke the OneDeploy publish web app extension.
     * 
     * Description for Invoke the OneDeploy publish web app extension.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object createOneDeployOperation(String resourceGroupName, String name);

    /**
     * List the functions for a web site, or a deployment slot.
     * 
     * Description for List the functions for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu function information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FunctionEnvelope> listFunctions(String resourceGroupName, String name);

    /**
     * List the functions for a web site, or a deployment slot.
     * 
     * Description for List the functions for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu function information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FunctionEnvelope> listFunctions(String resourceGroupName, String name, Context context);

    /**
     * Fetch a short lived token that can be exchanged for a master key.
     * 
     * Description for Fetch a short lived token that can be exchanged for a master key.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<String> getFunctionsAdminTokenWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Fetch a short lived token that can be exchanged for a master key.
     * 
     * Description for Fetch a short lived token that can be exchanged for a master key.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    String getFunctionsAdminToken(String resourceGroupName, String name);

    /**
     * Get function information by its ID for web site, or a deployment slot.
     * 
     * Description for Get function information by its ID for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function information along with {@link Response}.
     */
    Response<FunctionEnvelope> getFunctionWithResponse(String resourceGroupName, String name, String functionName,
        Context context);

    /**
     * Get function information by its ID for web site, or a deployment slot.
     * 
     * Description for Get function information by its ID for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function information.
     */
    FunctionEnvelope getFunction(String resourceGroupName, String name, String functionName);

    /**
     * Delete a function for web site, or a deployment slot.
     * 
     * Description for Delete a function for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteFunctionWithResponse(String resourceGroupName, String name, String functionName,
        Context context);

    /**
     * Delete a function for web site, or a deployment slot.
     * 
     * Description for Delete a function for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteFunction(String resourceGroupName, String name, String functionName);

    /**
     * Add or update a function secret.
     * 
     * Description for Add or update a function secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName The name of the function.
     * @param keyName The name of the key.
     * @param key The key to create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function key info along with {@link Response}.
     */
    Response<KeyInfo> createOrUpdateFunctionSecretWithResponse(String resourceGroupName, String name,
        String functionName, String keyName, KeyInfoInner key, Context context);

    /**
     * Add or update a function secret.
     * 
     * Description for Add or update a function secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName The name of the function.
     * @param keyName The name of the key.
     * @param key The key to create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function key info.
     */
    KeyInfo createOrUpdateFunctionSecret(String resourceGroupName, String name, String functionName, String keyName,
        KeyInfoInner key);

    /**
     * Delete a function secret.
     * 
     * Description for Delete a function secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName The name of the function.
     * @param keyName The name of the key.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteFunctionSecretWithResponse(String resourceGroupName, String name, String functionName,
        String keyName, Context context);

    /**
     * Delete a function secret.
     * 
     * Description for Delete a function secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName The name of the function.
     * @param keyName The name of the key.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteFunctionSecret(String resourceGroupName, String name, String functionName, String keyName);

    /**
     * Get function keys for a function in a web site, or a deployment slot.
     * 
     * Description for Get function keys for a function in a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<StringDictionary> listFunctionKeysWithResponse(String resourceGroupName, String name, String functionName,
        Context context);

    /**
     * Get function keys for a function in a web site, or a deployment slot.
     * 
     * Description for Get function keys for a function in a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    StringDictionary listFunctionKeys(String resourceGroupName, String name, String functionName);

    /**
     * Get function secrets for a function in a web site, or a deployment slot.
     * 
     * Description for Get function secrets for a function in a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function secrets along with {@link Response}.
     */
    Response<FunctionSecrets> listFunctionSecretsWithResponse(String resourceGroupName, String name,
        String functionName, Context context);

    /**
     * Get function secrets for a function in a web site, or a deployment slot.
     * 
     * Description for Get function secrets for a function in a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function secrets.
     */
    FunctionSecrets listFunctionSecrets(String resourceGroupName, String name, String functionName);

    /**
     * Get host secrets for a function app.
     * 
     * Description for Get host secrets for a function app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return functions host level keys along with {@link Response}.
     */
    Response<HostKeys> listHostKeysWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Get host secrets for a function app.
     * 
     * Description for Get host secrets for a function app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return functions host level keys.
     */
    HostKeys listHostKeys(String resourceGroupName, String name);

    /**
     * This is to allow calling via powershell and ARM template.
     * 
     * Description for This is to allow calling via powershell and ARM template.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> listSyncStatusWithResponse(String resourceGroupName, String name, Context context);

    /**
     * This is to allow calling via powershell and ARM template.
     * 
     * Description for This is to allow calling via powershell and ARM template.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void listSyncStatus(String resourceGroupName, String name);

    /**
     * Syncs function trigger metadata to the management database
     * 
     * Description for Syncs function trigger metadata to the management database.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> syncFunctionsWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Syncs function trigger metadata to the management database
     * 
     * Description for Syncs function trigger metadata to the management database.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void syncFunctions(String resourceGroupName, String name);

    /**
     * Add or update a host level secret.
     * 
     * Description for Add or update a host level secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param keyType The type of host key.
     * @param keyName The name of the key.
     * @param key The key to create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function key info along with {@link Response}.
     */
    Response<KeyInfo> createOrUpdateHostSecretWithResponse(String resourceGroupName, String name, String keyType,
        String keyName, KeyInfoInner key, Context context);

    /**
     * Add or update a host level secret.
     * 
     * Description for Add or update a host level secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param keyType The type of host key.
     * @param keyName The name of the key.
     * @param key The key to create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function key info.
     */
    KeyInfo createOrUpdateHostSecret(String resourceGroupName, String name, String keyType, String keyName,
        KeyInfoInner key);

    /**
     * Delete a host level secret.
     * 
     * Description for Delete a host level secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param keyType The type of host key.
     * @param keyName The name of the key.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteHostSecretWithResponse(String resourceGroupName, String name, String keyType, String keyName,
        Context context);

    /**
     * Delete a host level secret.
     * 
     * Description for Delete a host level secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param keyType The type of host key.
     * @param keyName The name of the key.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteHostSecret(String resourceGroupName, String name, String keyType, String keyName);

    /**
     * Get hostname bindings for an app or a deployment slot.
     * 
     * Description for Get hostname bindings for an app or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of hostname bindings as paginated response with {@link PagedIterable}.
     */
    PagedIterable<HostnameBinding> listHostnameBindings(String resourceGroupName, String name);

    /**
     * Get hostname bindings for an app or a deployment slot.
     * 
     * Description for Get hostname bindings for an app or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of hostname bindings as paginated response with {@link PagedIterable}.
     */
    PagedIterable<HostnameBinding> listHostnameBindings(String resourceGroupName, String name, Context context);

    /**
     * Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * Description for Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param hostname Hostname in the hostname binding.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a hostname binding object along with {@link Response}.
     */
    Response<HostnameBinding> getHostnameBindingWithResponse(String resourceGroupName, String name, String hostname,
        Context context);

    /**
     * Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * Description for Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param hostname Hostname in the hostname binding.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a hostname binding object.
     */
    HostnameBinding getHostnameBinding(String resourceGroupName, String name, String hostname);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param hostname Hostname in the hostname binding.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteHostnameBindingWithResponse(String resourceGroupName, String name, String hostname,
        Context context);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param hostname Hostname in the hostname binding.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteHostnameBinding(String resourceGroupName, String name, String hostname);

    /**
     * Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract along with {@link Response}.
     */
    Response<HybridConnection> getHybridConnectionWithResponse(String resourceGroupName, String name,
        String namespaceName, String relayName, Context context);

    /**
     * Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract.
     */
    HybridConnection getHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName);

    /**
     * Removes a Hybrid Connection from this site.
     * 
     * Description for Removes a Hybrid Connection from this site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteHybridConnectionWithResponse(String resourceGroupName, String name, String namespaceName,
        String relayName, Context context);

    /**
     * Removes a Hybrid Connection from this site.
     * 
     * Description for Removes a Hybrid Connection from this site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName);

    /**
     * Retrieves all Service Bus Hybrid Connections used by this Web App.
     * 
     * Description for Retrieves all Service Bus Hybrid Connections used by this Web App.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract along with {@link Response}.
     */
    Response<HybridConnection> listHybridConnectionsWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Retrieves all Service Bus Hybrid Connections used by this Web App.
     * 
     * Description for Retrieves all Service Bus Hybrid Connections used by this Web App.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract.
     */
    HybridConnection listHybridConnections(String resourceGroupName, String name);

    /**
     * Gets hybrid connections configured for an app (or deployment slot, if specified).
     * 
     * Description for Gets hybrid connections configured for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app along with {@link Response}.
     */
    Response<RelayServiceConnectionEntity> listRelayServiceConnectionsWithResponse(String resourceGroupName,
        String name, Context context);

    /**
     * Gets hybrid connections configured for an app (or deployment slot, if specified).
     * 
     * Description for Gets hybrid connections configured for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app.
     */
    RelayServiceConnectionEntity listRelayServiceConnections(String resourceGroupName, String name);

    /**
     * Gets a hybrid connection configuration by its name.
     * 
     * Description for Gets a hybrid connection configuration by its name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app along with {@link Response}.
     */
    Response<RelayServiceConnectionEntity> getRelayServiceConnectionWithResponse(String resourceGroupName, String name,
        String entityName, Context context);

    /**
     * Gets a hybrid connection configuration by its name.
     * 
     * Description for Gets a hybrid connection configuration by its name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app.
     */
    RelayServiceConnectionEntity getRelayServiceConnection(String resourceGroupName, String name, String entityName);

    /**
     * Deletes a relay service connection by its name.
     * 
     * Description for Deletes a relay service connection by its name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteRelayServiceConnectionWithResponse(String resourceGroupName, String name, String entityName,
        Context context);

    /**
     * Deletes a relay service connection by its name.
     * 
     * Description for Deletes a relay service connection by its name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteRelayServiceConnection(String resourceGroupName, String name, String entityName);

    /**
     * Gets all scale-out instances of an app.
     * 
     * Description for Gets all scale-out instances of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of app instances as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WebSiteInstanceStatus> listInstanceIdentifiers(String resourceGroupName, String name);

    /**
     * Gets all scale-out instances of an app.
     * 
     * Description for Gets all scale-out instances of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of app instances as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WebSiteInstanceStatus> listInstanceIdentifiers(String resourceGroupName, String name,
        Context context);

    /**
     * Gets all scale-out instances of an app.
     * 
     * Description for Gets all scale-out instances of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param instanceId The instanceId parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<WebSiteInstanceStatus> getInstanceInfoWithResponse(String resourceGroupName, String name,
        String instanceId, Context context);

    /**
     * Gets all scale-out instances of an app.
     * 
     * Description for Gets all scale-out instances of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param instanceId The instanceId parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    WebSiteInstanceStatus getInstanceInfo(String resourceGroupName, String name, String instanceId);

    /**
     * Get the status of the last MSDeploy operation.
     * 
     * Description for Get the status of the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param instanceId ID of web app instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response along with {@link Response}.
     */
    Response<MSDeployStatus> getInstanceMsDeployStatusWithResponse(String resourceGroupName, String name,
        String instanceId, Context context);

    /**
     * Get the status of the last MSDeploy operation.
     * 
     * Description for Get the status of the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param instanceId ID of web app instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus getInstanceMsDeployStatus(String resourceGroupName, String name, String instanceId);

    /**
     * Invoke the MSDeploy web app extension.
     * 
     * Description for Invoke the MSDeploy web app extension.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param instanceId ID of web app instance.
     * @param mSDeploy Details of MSDeploy operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus createInstanceMSDeployOperation(String resourceGroupName, String name, String instanceId,
        MSDeploy mSDeploy);

    /**
     * Invoke the MSDeploy web app extension.
     * 
     * Description for Invoke the MSDeploy web app extension.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param instanceId ID of web app instance.
     * @param mSDeploy Details of MSDeploy operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus createInstanceMSDeployOperation(String resourceGroupName, String name, String instanceId,
        MSDeploy mSDeploy, Context context);

    /**
     * Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * Description for Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param instanceId ID of web app instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy log along with {@link Response}.
     */
    Response<MSDeployLog> getInstanceMSDeployLogWithResponse(String resourceGroupName, String name, String instanceId,
        Context context);

    /**
     * Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * Description for Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param instanceId ID of web app instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy log.
     */
    MSDeployLog getInstanceMSDeployLog(String resourceGroupName, String name, String instanceId);

    /**
     * Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.
     * 
     * Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance
     * in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu process information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessInfo> listInstanceProcesses(String resourceGroupName, String name, String instanceId);

    /**
     * Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.
     * 
     * Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance
     * in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu process information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessInfo> listInstanceProcesses(String resourceGroupName, String name, String instanceId,
        Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Information along with {@link Response}.
     */
    Response<ProcessInfo> getInstanceProcessWithResponse(String resourceGroupName, String name, String processId,
        String instanceId, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Information.
     */
    ProcessInfo getInstanceProcess(String resourceGroupName, String name, String processId, String instanceId);

    /**
     * Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web
     * site.
     * 
     * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out
     * instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteInstanceProcessWithResponse(String resourceGroupName, String name, String processId,
        String instanceId, Context context);

    /**
     * Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web
     * site.
     * 
     * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out
     * instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteInstanceProcess(String resourceGroupName, String name, String processId, String instanceId);

    /**
     * Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<BinaryData> getInstanceProcessDumpWithResponse(String resourceGroupName, String name, String processId,
        String instanceId, Context context);

    /**
     * Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    BinaryData getInstanceProcessDump(String resourceGroupName, String name, String processId, String instanceId);

    /**
     * List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessModuleInfo> listInstanceProcessModules(String resourceGroupName, String name, String processId,
        String instanceId);

    /**
     * List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessModuleInfo> listInstanceProcessModules(String resourceGroupName, String name, String processId,
        String instanceId, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param baseAddress Module base address.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Module Information along with {@link Response}.
     */
    Response<ProcessModuleInfo> getInstanceProcessModuleWithResponse(String resourceGroupName, String name,
        String processId, String baseAddress, String instanceId, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param baseAddress Module base address.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Module Information.
     */
    ProcessModuleInfo getInstanceProcessModule(String resourceGroupName, String name, String processId,
        String baseAddress, String instanceId);

    /**
     * List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessThreadInfo> listInstanceProcessThreads(String resourceGroupName, String name, String processId,
        String instanceId);

    /**
     * List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessThreadInfo> listInstanceProcessThreads(String resourceGroupName, String name, String processId,
        String instanceId, Context context);

    /**
     * Shows whether an app can be cloned to another resource group or subscription.
     * 
     * Description for Shows whether an app can be cloned to another resource group or subscription.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents whether or not an app is cloneable along with {@link Response}.
     */
    Response<SiteCloneability> isCloneableWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Shows whether an app can be cloned to another resource group or subscription.
     * 
     * Description for Shows whether an app can be cloned to another resource group or subscription.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents whether or not an app is cloneable.
     */
    SiteCloneability isCloneable(String resourceGroupName, String name);

    /**
     * Gets existing backups of an app.
     * 
     * Description for Gets existing backups of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of backup items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BackupItem> listSiteBackups(String resourceGroupName, String name);

    /**
     * Gets existing backups of an app.
     * 
     * Description for Gets existing backups of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of backup items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BackupItem> listSiteBackups(String resourceGroupName, String name, Context context);

    /**
     * This is to allow calling via powershell and ARM template.
     * 
     * Description for This is to allow calling via powershell and ARM template.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function secrets along with {@link Response}.
     */
    Response<FunctionSecrets> listSyncFunctionTriggersWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * This is to allow calling via powershell and ARM template.
     * 
     * Description for This is to allow calling via powershell and ARM template.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function secrets.
     */
    FunctionSecrets listSyncFunctionTriggers(String resourceGroupName, String name);

    /**
     * Restores a web app.
     * 
     * Description for Restores a web app.
     * 
     * @param subscriptionName Azure subscription.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param migrationOptions Migration migrationOptions.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for a migration of app content request.
     */
    StorageMigrationResponse migrateStorage(String subscriptionName, String resourceGroupName, String name,
        StorageMigrationOptions migrationOptions);

    /**
     * Restores a web app.
     * 
     * Description for Restores a web app.
     * 
     * @param subscriptionName Azure subscription.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param migrationOptions Migration migrationOptions.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for a migration of app content request.
     */
    StorageMigrationResponse migrateStorage(String subscriptionName, String resourceGroupName, String name,
        StorageMigrationOptions migrationOptions, Context context);

    /**
     * Migrates a local (in-app) MySql database to a remote MySql database.
     * 
     * Description for Migrates a local (in-app) MySql database to a remote MySql database.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param migrationRequestEnvelope MySql migration options.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an operation on a resource.
     */
    Operation migrateMySql(String resourceGroupName, String name, MigrateMySqlRequest migrationRequestEnvelope);

    /**
     * Migrates a local (in-app) MySql database to a remote MySql database.
     * 
     * Description for Migrates a local (in-app) MySql database to a remote MySql database.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param migrationRequestEnvelope MySql migration options.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an operation on a resource.
     */
    Operation migrateMySql(String resourceGroupName, String name, MigrateMySqlRequest migrationRequestEnvelope,
        Context context);

    /**
     * Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled
     * 
     * Description for Returns the status of MySql in app migration, if one is active, and whether or not MySql in app
     * is enabled.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mySQL migration status along with {@link Response}.
     */
    Response<MigrateMySqlStatus> getMigrateMySqlStatusWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled
     * 
     * Description for Returns the status of MySql in app migration, if one is active, and whether or not MySql in app
     * is enabled.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mySQL migration status.
     */
    MigrateMySqlStatus getMigrateMySqlStatus(String resourceGroupName, String name);

    /**
     * Gets a Swift Virtual Network connection.
     * 
     * Description for Gets a Swift Virtual Network connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract along with {@link Response}.
     */
    Response<SwiftVirtualNetwork> getSwiftVirtualNetworkConnectionWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Gets a Swift Virtual Network connection.
     * 
     * Description for Gets a Swift Virtual Network connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract.
     */
    SwiftVirtualNetwork getSwiftVirtualNetworkConnection(String resourceGroupName, String name);

    /**
     * Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true when doing a GET
     * against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * Description for Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true
     * when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract along with {@link Response}.
     */
    Response<SwiftVirtualNetwork> createOrUpdateSwiftVirtualNetworkConnectionWithCheckWithResponse(
        String resourceGroupName, String name, SwiftVirtualNetworkInner connectionEnvelope, Context context);

    /**
     * Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true when doing a GET
     * against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * Description for Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true
     * when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract.
     */
    SwiftVirtualNetwork createOrUpdateSwiftVirtualNetworkConnectionWithCheck(String resourceGroupName, String name,
        SwiftVirtualNetworkInner connectionEnvelope);

    /**
     * Deletes a Swift Virtual Network connection from an app (or deployment slot).
     * 
     * Description for Deletes a Swift Virtual Network connection from an app (or deployment slot).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteSwiftVirtualNetworkWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Deletes a Swift Virtual Network connection from an app (or deployment slot).
     * 
     * Description for Deletes a Swift Virtual Network connection from an app (or deployment slot).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteSwiftVirtualNetwork(String resourceGroupName, String name);

    /**
     * Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true when doing a GET
     * against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * Description for Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true
     * when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract along with {@link Response}.
     */
    Response<SwiftVirtualNetwork> updateSwiftVirtualNetworkConnectionWithCheckWithResponse(String resourceGroupName,
        String name, SwiftVirtualNetworkInner connectionEnvelope, Context context);

    /**
     * Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true when doing a GET
     * against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * Description for Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true
     * when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract.
     */
    SwiftVirtualNetwork updateSwiftVirtualNetworkConnectionWithCheck(String resourceGroupName, String name,
        SwiftVirtualNetworkInner connectionEnvelope);

    /**
     * Gets all network features used by the app (or deployment slot, if specified).
     * 
     * Description for Gets all network features used by the app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param view The type of view. Only "summary" is supported at this time.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return full view of network features for an app (presently VNET integration and Hybrid Connections) along with
     * {@link Response}.
     */
    Response<NetworkFeatures> listNetworkFeaturesWithResponse(String resourceGroupName, String name, String view,
        Context context);

    /**
     * Gets all network features used by the app (or deployment slot, if specified).
     * 
     * Description for Gets all network features used by the app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param view The type of view. Only "summary" is supported at this time.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return full view of network features for an app (presently VNET integration and Hybrid Connections).
     */
    NetworkFeatures listNetworkFeatures(String resourceGroupName, String name, String view);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace along with {@link Response}.
     */
    Response<Object> getNetworkTraceOperationWithResponse(String resourceGroupName, String name, String operationId,
        Context context);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object getNetworkTraceOperation(String resourceGroupName, String name, String operationId);

    /**
     * Start capturing network packets for the site (To be deprecated).
     * 
     * Description for Start capturing network packets for the site (To be deprecated).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param durationInSeconds The duration to keep capturing in seconds.
     * @param maxFrameLength The maximum frame length in bytes (Optional).
     * @param sasUrl The Blob URL to store capture file.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<String> startWebSiteNetworkTraceWithResponse(String resourceGroupName, String name,
        Integer durationInSeconds, Integer maxFrameLength, String sasUrl, Context context);

    /**
     * Start capturing network packets for the site (To be deprecated).
     * 
     * Description for Start capturing network packets for the site (To be deprecated).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    String startWebSiteNetworkTrace(String resourceGroupName, String name);

    /**
     * Start capturing network packets for the site.
     * 
     * Description for Start capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object startWebSiteNetworkTraceOperation(String resourceGroupName, String name);

    /**
     * Start capturing network packets for the site.
     * 
     * Description for Start capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param durationInSeconds The duration to keep capturing in seconds.
     * @param maxFrameLength The maximum frame length in bytes (Optional).
     * @param sasUrl The Blob URL to store capture file.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object startWebSiteNetworkTraceOperation(String resourceGroupName, String name, Integer durationInSeconds,
        Integer maxFrameLength, String sasUrl, Context context);

    /**
     * Stop ongoing capturing network packets for the site.
     * 
     * Description for Stop ongoing capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> stopWebSiteNetworkTraceWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Stop ongoing capturing network packets for the site.
     * 
     * Description for Stop ongoing capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stopWebSiteNetworkTrace(String resourceGroupName, String name);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace along with {@link Response}.
     */
    Response<List<NetworkTrace>> getNetworkTracesWithResponse(String resourceGroupName, String name, String operationId,
        Context context);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    List<NetworkTrace> getNetworkTraces(String resourceGroupName, String name, String operationId);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace along with {@link Response}.
     */
    Response<Object> getNetworkTraceOperationV2WithResponse(String resourceGroupName, String name, String operationId,
        Context context);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object getNetworkTraceOperationV2(String resourceGroupName, String name, String operationId);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace along with {@link Response}.
     */
    Response<List<NetworkTrace>> getNetworkTracesV2WithResponse(String resourceGroupName, String name,
        String operationId, Context context);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    List<NetworkTrace> getNetworkTracesV2(String resourceGroupName, String name, String operationId);

    /**
     * Generates a new publishing password for an app (or deployment slot, if specified).
     * 
     * Description for Generates a new publishing password for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> generateNewSitePublishingPasswordWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Generates a new publishing password for an app (or deployment slot, if specified).
     * 
     * Description for Generates a new publishing password for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void generateNewSitePublishingPassword(String resourceGroupName, String name);

    /**
     * Gets perfmon counters for web app.
     * 
     * Description for Gets perfmon counters for web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of performance monitor counters as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PerfMonResponse> listPerfMonCounters(String resourceGroupName, String name);

    /**
     * Gets perfmon counters for web app.
     * 
     * Description for Gets perfmon counters for web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param filter Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
     * $filter=(startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
     * duration'[Hour|Minute|Day]'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of performance monitor counters as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PerfMonResponse> listPerfMonCounters(String resourceGroupName, String name, String filter,
        Context context);

    /**
     * Gets web app's event logs.
     * 
     * Description for Gets web app's event logs.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return used for getting PHP error logging flag along with {@link Response}.
     */
    Response<SitePhpErrorLogFlag> getSitePhpErrorLogFlagWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Gets web app's event logs.
     * 
     * Description for Gets web app's event logs.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return used for getting PHP error logging flag.
     */
    SitePhpErrorLogFlag getSitePhpErrorLogFlag(String resourceGroupName, String name);

    /**
     * Gets the premier add-ons of an app.
     * 
     * Description for Gets the premier add-ons of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on along with {@link Response}.
     */
    Response<PremierAddOn> listPremierAddOnsWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets the premier add-ons of an app.
     * 
     * Description for Gets the premier add-ons of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on.
     */
    PremierAddOn listPremierAddOns(String resourceGroupName, String name);

    /**
     * Gets a named add-on of an app.
     * 
     * Description for Gets a named add-on of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on along with {@link Response}.
     */
    Response<PremierAddOn> getPremierAddOnWithResponse(String resourceGroupName, String name, String premierAddOnName,
        Context context);

    /**
     * Gets a named add-on of an app.
     * 
     * Description for Gets a named add-on of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on.
     */
    PremierAddOn getPremierAddOn(String resourceGroupName, String name, String premierAddOnName);

    /**
     * Delete a premier add-on from an app.
     * 
     * Description for Delete a premier add-on from an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deletePremierAddOnWithResponse(String resourceGroupName, String name, String premierAddOnName,
        Context context);

    /**
     * Delete a premier add-on from an app.
     * 
     * Description for Delete a premier add-on from an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deletePremierAddOn(String resourceGroupName, String name, String premierAddOnName);

    /**
     * Gets data around private site access enablement and authorized Virtual Networks that can access the site.
     * 
     * Description for Gets data around private site access enablement and authorized Virtual Networks that can access
     * the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of the parameters of Private Access for a Web Site along with {@link Response}.
     */
    Response<PrivateAccess> getPrivateAccessWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets data around private site access enablement and authorized Virtual Networks that can access the site.
     * 
     * Description for Gets data around private site access enablement and authorized Virtual Networks that can access
     * the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of the parameters of Private Access for a Web Site.
     */
    PrivateAccess getPrivateAccess(String resourceGroupName, String name);

    /**
     * Sets data around private site access enablement and authorized Virtual Networks that can access the site.
     * 
     * Description for Sets data around private site access enablement and authorized Virtual Networks that can access
     * the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param access The information for the private access.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of the parameters of Private Access for a Web Site along with {@link Response}.
     */
    Response<PrivateAccess> putPrivateAccessVnetWithResponse(String resourceGroupName, String name,
        PrivateAccessInner access, Context context);

    /**
     * Sets data around private site access enablement and authorized Virtual Networks that can access the site.
     * 
     * Description for Sets data around private site access enablement and authorized Virtual Networks that can access
     * the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param access The information for the private access.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of the parameters of Private Access for a Web Site.
     */
    PrivateAccess putPrivateAccessVnet(String resourceGroupName, String name, PrivateAccessInner access);

    /**
     * Gets the list of private endpoint connections associated with a site
     * 
     * Description for Gets the list of private endpoint connections associated with a site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<RemotePrivateEndpointConnectionArmResource> getPrivateEndpointConnectionList(String resourceGroupName,
        String name);

    /**
     * Gets the list of private endpoint connections associated with a site
     * 
     * Description for Gets the list of private endpoint connections associated with a site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<RemotePrivateEndpointConnectionArmResource> getPrivateEndpointConnectionList(String resourceGroupName,
        String name, Context context);

    /**
     * Gets a private endpoint connection
     * 
     * Description for Gets a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName Name of the private endpoint connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remote Private Endpoint Connection ARM resource along with {@link Response}.
     */
    Response<RemotePrivateEndpointConnectionArmResource> getPrivateEndpointConnectionWithResponse(
        String resourceGroupName, String name, String privateEndpointConnectionName, Context context);

    /**
     * Gets a private endpoint connection
     * 
     * Description for Gets a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName Name of the private endpoint connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remote Private Endpoint Connection ARM resource.
     */
    RemotePrivateEndpointConnectionArmResource getPrivateEndpointConnection(String resourceGroupName, String name,
        String privateEndpointConnectionName);

    /**
     * Approves or rejects a private endpoint connection
     * 
     * Description for Approves or rejects a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName The privateEndpointConnectionName parameter.
     * @param privateEndpointWrapper Remote Private Endpoint Connection ARM resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remote Private Endpoint Connection ARM resource.
     */
    RemotePrivateEndpointConnectionArmResource approveOrRejectPrivateEndpointConnection(String resourceGroupName,
        String name, String privateEndpointConnectionName,
        RemotePrivateEndpointConnectionArmResourceInner privateEndpointWrapper);

    /**
     * Approves or rejects a private endpoint connection
     * 
     * Description for Approves or rejects a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName The privateEndpointConnectionName parameter.
     * @param privateEndpointWrapper Remote Private Endpoint Connection ARM resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remote Private Endpoint Connection ARM resource.
     */
    RemotePrivateEndpointConnectionArmResource approveOrRejectPrivateEndpointConnection(String resourceGroupName,
        String name, String privateEndpointConnectionName,
        RemotePrivateEndpointConnectionArmResourceInner privateEndpointWrapper, Context context);

    /**
     * Deletes a private endpoint connection
     * 
     * Description for Deletes a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName The privateEndpointConnectionName parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object deletePrivateEndpointConnection(String resourceGroupName, String name, String privateEndpointConnectionName);

    /**
     * Deletes a private endpoint connection
     * 
     * Description for Deletes a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName The privateEndpointConnectionName parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object deletePrivateEndpointConnection(String resourceGroupName, String name, String privateEndpointConnectionName,
        Context context);

    /**
     * Gets the private link resources
     * 
     * Description for Gets the private link resources.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return wrapper for a collection of private link resources along with {@link Response}.
     */
    Response<PrivateLinkResourcesWrapper> getPrivateLinkResourcesWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Gets the private link resources
     * 
     * Description for Gets the private link resources.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return wrapper for a collection of private link resources.
     */
    PrivateLinkResourcesWrapper getPrivateLinkResources(String resourceGroupName, String name);

    /**
     * Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.
     * 
     * Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance
     * in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu process information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessInfo> listProcesses(String resourceGroupName, String name);

    /**
     * Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.
     * 
     * Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance
     * in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu process information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessInfo> listProcesses(String resourceGroupName, String name, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Information along with {@link Response}.
     */
    Response<ProcessInfo> getProcessWithResponse(String resourceGroupName, String name, String processId,
        Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Information.
     */
    ProcessInfo getProcess(String resourceGroupName, String name, String processId);

    /**
     * Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web
     * site.
     * 
     * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out
     * instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteProcessWithResponse(String resourceGroupName, String name, String processId, Context context);

    /**
     * Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web
     * site.
     * 
     * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out
     * instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteProcess(String resourceGroupName, String name, String processId);

    /**
     * Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<BinaryData> getProcessDumpWithResponse(String resourceGroupName, String name, String processId,
        Context context);

    /**
     * Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    BinaryData getProcessDump(String resourceGroupName, String name, String processId);

    /**
     * List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessModuleInfo> listProcessModules(String resourceGroupName, String name, String processId);

    /**
     * List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessModuleInfo> listProcessModules(String resourceGroupName, String name, String processId,
        Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param baseAddress Module base address.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Module Information along with {@link Response}.
     */
    Response<ProcessModuleInfo> getProcessModuleWithResponse(String resourceGroupName, String name, String processId,
        String baseAddress, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param baseAddress Module base address.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Module Information.
     */
    ProcessModuleInfo getProcessModule(String resourceGroupName, String name, String processId, String baseAddress);

    /**
     * List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessThreadInfo> listProcessThreads(String resourceGroupName, String name, String processId);

    /**
     * List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessThreadInfo> listProcessThreads(String resourceGroupName, String name, String processId,
        Context context);

    /**
     * Get public certificates for an app or a deployment slot.
     * 
     * Description for Get public certificates for an app or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of public certificates as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PublicCertificate> listPublicCertificates(String resourceGroupName, String name);

    /**
     * Get public certificates for an app or a deployment slot.
     * 
     * Description for Get public certificates for an app or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of public certificates as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PublicCertificate> listPublicCertificates(String resourceGroupName, String name, Context context);

    /**
     * Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * Description for Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param publicCertificateName Public certificate name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public certificate object along with {@link Response}.
     */
    Response<PublicCertificate> getPublicCertificateWithResponse(String resourceGroupName, String name,
        String publicCertificateName, Context context);

    /**
     * Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * Description for Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param publicCertificateName Public certificate name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public certificate object.
     */
    PublicCertificate getPublicCertificate(String resourceGroupName, String name, String publicCertificateName);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param publicCertificateName Public certificate name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deletePublicCertificateWithResponse(String resourceGroupName, String name,
        String publicCertificateName, Context context);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param publicCertificateName Public certificate name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deletePublicCertificate(String resourceGroupName, String name, String publicCertificateName);

    /**
     * Gets the publishing profile for an app (or deployment slot, if specified).
     * 
     * Description for Gets the publishing profile for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param publishingProfileOptions Specifies publishingProfileOptions for publishing profile. For example, use
     * {"format": "FileZilla3"} to get a FileZilla publishing profile.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<BinaryData> listPublishingProfileXmlWithSecretsWithResponse(String resourceGroupName, String name,
        CsmPublishingProfileOptions publishingProfileOptions, Context context);

    /**
     * Gets the publishing profile for an app (or deployment slot, if specified).
     * 
     * Description for Gets the publishing profile for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param publishingProfileOptions Specifies publishingProfileOptions for publishing profile. For example, use
     * {"format": "FileZilla3"} to get a FileZilla publishing profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    BinaryData listPublishingProfileXmlWithSecrets(String resourceGroupName, String name,
        CsmPublishingProfileOptions publishingProfileOptions);

    /**
     * Resets the configuration settings of the current slot if they were previously modified by calling the API with
     * POST.
     * 
     * Description for Resets the configuration settings of the current slot if they were previously modified by calling
     * the API with POST.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> resetProductionSlotConfigWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Resets the configuration settings of the current slot if they were previously modified by calling the API with
     * POST.
     * 
     * Description for Resets the configuration settings of the current slot if they were previously modified by calling
     * the API with POST.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void resetProductionSlotConfig(String resourceGroupName, String name);

    /**
     * Restarts an app (or deployment slot, if specified).
     * 
     * Description for Restarts an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param softRestart Specify true to apply the configuration settings and restarts the app only if necessary. By
     * default, the API always restarts and reprovisions the app.
     * @param synchronous Specify true to block until the app is restarted. By default, it is set to false, and the API
     * responds immediately (asynchronous).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> restartWithResponse(String resourceGroupName, String name, Boolean softRestart, Boolean synchronous,
        Context context);

    /**
     * Restarts an app (or deployment slot, if specified).
     * 
     * Description for Restarts an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restart(String resourceGroupName, String name);

    /**
     * Restores an app from a backup blob in Azure Storage.
     * 
     * Description for Restores an app from a backup blob in Azure Storage.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param request Information on restore request .
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreFromBackupBlob(String resourceGroupName, String name, RestoreRequestInner request);

    /**
     * Restores an app from a backup blob in Azure Storage.
     * 
     * Description for Restores an app from a backup blob in Azure Storage.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param request Information on restore request .
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreFromBackupBlob(String resourceGroupName, String name, RestoreRequestInner request, Context context);

    /**
     * Restores a deleted web app to this web app.
     * 
     * Description for Restores a deleted web app to this web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param restoreRequest Deleted web app restore information.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreFromDeletedApp(String resourceGroupName, String name, DeletedAppRestoreRequest restoreRequest);

    /**
     * Restores a deleted web app to this web app.
     * 
     * Description for Restores a deleted web app to this web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param restoreRequest Deleted web app restore information.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreFromDeletedApp(String resourceGroupName, String name, DeletedAppRestoreRequest restoreRequest,
        Context context);

    /**
     * Restores a web app from a snapshot.
     * 
     * Description for Restores a web app from a snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param restoreRequest Snapshot restore settings. Snapshot information can be obtained by calling GetDeletedSites
     * or GetSiteSnapshots API.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreSnapshot(String resourceGroupName, String name, SnapshotRestoreRequest restoreRequest);

    /**
     * Restores a web app from a snapshot.
     * 
     * Description for Restores a web app from a snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param restoreRequest Snapshot restore settings. Snapshot information can be obtained by calling GetDeletedSites
     * or GetSiteSnapshots API.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreSnapshot(String resourceGroupName, String name, SnapshotRestoreRequest restoreRequest, Context context);

    /**
     * Lists all the site containers of a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of site containers as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteContainer> listSiteContainers(String resourceGroupName, String name);

    /**
     * Lists all the site containers of a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of site containers as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteContainer> listSiteContainers(String resourceGroupName, String name, Context context);

    /**
     * Gets a site container of a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param containerName Site Container Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a site container of a site, or a deployment slot along with {@link Response}.
     */
    Response<SiteContainer> getSiteContainerWithResponse(String resourceGroupName, String name, String containerName,
        Context context);

    /**
     * Gets a site container of a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param containerName Site Container Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a site container of a site, or a deployment slot.
     */
    SiteContainer getSiteContainer(String resourceGroupName, String name, String containerName);

    /**
     * Deletes a site container for a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param containerName Site Container Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteSiteContainerWithResponse(String resourceGroupName, String name, String containerName,
        Context context);

    /**
     * Deletes a site container for a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param containerName Site Container Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteSiteContainer(String resourceGroupName, String name, String containerName);

    /**
     * Get list of siteextensions for a web site, or a deployment slot.
     * 
     * Description for Get list of siteextensions for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu site extension information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteExtensionInfo> listSiteExtensions(String resourceGroupName, String name);

    /**
     * Get list of siteextensions for a web site, or a deployment slot.
     * 
     * Description for Get list of siteextensions for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu site extension information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteExtensionInfo> listSiteExtensions(String resourceGroupName, String name, Context context);

    /**
     * Get site extension information by its ID for a web site, or a deployment slot.
     * 
     * Description for Get site extension information by its ID for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site Extension Information along with {@link Response}.
     */
    Response<SiteExtensionInfo> getSiteExtensionWithResponse(String resourceGroupName, String name,
        String siteExtensionId, Context context);

    /**
     * Get site extension information by its ID for a web site, or a deployment slot.
     * 
     * Description for Get site extension information by its ID for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site Extension Information.
     */
    SiteExtensionInfo getSiteExtension(String resourceGroupName, String name, String siteExtensionId);

    /**
     * Install site extension on a web site, or a deployment slot.
     * 
     * Description for Install site extension on a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 429.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site Extension Information.
     */
    SiteExtensionInfo installSiteExtension(String resourceGroupName, String name, String siteExtensionId);

    /**
     * Install site extension on a web site, or a deployment slot.
     * 
     * Description for Install site extension on a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 429.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site Extension Information.
     */
    SiteExtensionInfo installSiteExtension(String resourceGroupName, String name, String siteExtensionId,
        Context context);

    /**
     * Remove a site extension from a web site, or a deployment slot.
     * 
     * Description for Remove a site extension from a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteSiteExtensionWithResponse(String resourceGroupName, String name, String siteExtensionId,
        Context context);

    /**
     * Remove a site extension from a web site, or a deployment slot.
     * 
     * Description for Remove a site extension from a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteSiteExtension(String resourceGroupName, String name, String siteExtensionId);

    /**
     * Gets an app's deployment slots.
     * 
     * Description for Gets an app's deployment slots.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> listSlots(String resourceGroupName, String name);

    /**
     * Gets an app's deployment slots.
     * 
     * Description for Gets an app's deployment slots.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of App Service apps as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> listSlots(String resourceGroupName, String name, Context context);

    /**
     * Gets the details of a web, mobile, or API app.
     * 
     * Description for Gets the details of a web, mobile, or API app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. By default, this API returns the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a web app, a mobile app backend, or an API app along with {@link Response}.
     */
    Response<Site> getSlotWithResponse(String resourceGroupName, String name, String slot, Context context);

    /**
     * Gets the details of a web, mobile, or API app.
     * 
     * Description for Gets the details of a web, mobile, or API app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. By default, this API returns the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a web app, a mobile app backend, or an API app.
     */
    Site getSlot(String resourceGroupName, String name, String slot);

    /**
     * Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.
     * 
     * Description for Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Unique name of the app to create or update. To create or update a deployment slot, use the {slot}
     * parameter.
     * @param slot Name of the deployment slot to create or update. By default, this API attempts to create or modify
     * the production slot.
     * @param siteEnvelope A JSON representation of the app properties. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a web app, a mobile app backend, or an API app.
     */
    Site createOrUpdateSlot(String resourceGroupName, String name, String slot, SiteInner siteEnvelope);

    /**
     * Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.
     * 
     * Description for Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Unique name of the app to create or update. To create or update a deployment slot, use the {slot}
     * parameter.
     * @param slot Name of the deployment slot to create or update. By default, this API attempts to create or modify
     * the production slot.
     * @param siteEnvelope A JSON representation of the app properties. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a web app, a mobile app backend, or an API app.
     */
    Site createOrUpdateSlot(String resourceGroupName, String name, String slot, SiteInner siteEnvelope,
        Context context);

    /**
     * Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * Description for Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app to delete.
     * @param slot Name of the deployment slot to delete. By default, the API deletes the production slot.
     * @param deleteMetrics If true, web app metrics are also deleted.
     * @param deleteEmptyServerFarm Specify false if you want to keep empty App Service plan. By default, empty App
     * Service plan is deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteSlotWithResponse(String resourceGroupName, String name, String slot, Boolean deleteMetrics,
        Boolean deleteEmptyServerFarm, Context context);

    /**
     * Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * Description for Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app to delete.
     * @param slot Name of the deployment slot to delete. By default, the API deletes the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteSlot(String resourceGroupName, String name, String slot);

    /**
     * Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.
     * 
     * Description for Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Unique name of the app to create or update. To create or update a deployment slot, use the {slot}
     * parameter.
     * @param slot Name of the deployment slot to create or update. By default, this API attempts to create or modify
     * the production slot.
     * @param siteEnvelope A JSON representation of the app properties. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a web app, a mobile app backend, or an API app along with {@link Response}.
     */
    Response<Site> updateSlotWithResponse(String resourceGroupName, String name, String slot,
        SitePatchResourceInner siteEnvelope, Context context);

    /**
     * Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.
     * 
     * Description for Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Unique name of the app to create or update. To create or update a deployment slot, use the {slot}
     * parameter.
     * @param slot Name of the deployment slot to create or update. By default, this API attempts to create or modify
     * the production slot.
     * @param siteEnvelope A JSON representation of the app properties. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a web app, a mobile app backend, or an API app.
     */
    Site updateSlot(String resourceGroupName, String name, String slot, SitePatchResourceInner siteEnvelope);

    /**
     * Analyze a custom hostname.
     * 
     * Description for Analyze a custom hostname.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param hostname Custom hostname.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return custom domain analysis along with {@link Response}.
     */
    Response<CustomHostnameAnalysisResult> analyzeCustomHostnameSlotWithResponse(String resourceGroupName, String name,
        String slot, String hostname, Context context);

    /**
     * Analyze a custom hostname.
     * 
     * Description for Analyze a custom hostname.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return custom domain analysis.
     */
    CustomHostnameAnalysisResult analyzeCustomHostnameSlot(String resourceGroupName, String name, String slot);

    /**
     * Applies the configuration settings from the target slot onto the current slot.
     * 
     * Description for Applies the configuration settings from the target slot onto the current slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the source slot.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> applySlotConfigurationSlotWithResponse(String resourceGroupName, String name, String slot,
        CsmSlotEntity slotSwapEntity, Context context);

    /**
     * Applies the configuration settings from the target slot onto the current slot.
     * 
     * Description for Applies the configuration settings from the target slot onto the current slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the source slot.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void applySlotConfigurationSlot(String resourceGroupName, String name, String slot, CsmSlotEntity slotSwapEntity);

    /**
     * Creates a backup of an app.
     * 
     * Description for Creates a backup of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create a backup for the
     * production slot.
     * @param request Backup configuration. You can use the JSON response from the POST action as input here.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description along with {@link Response}.
     */
    Response<BackupItem> backupSlotWithResponse(String resourceGroupName, String name, String slot,
        BackupRequestInner request, Context context);

    /**
     * Creates a backup of an app.
     * 
     * Description for Creates a backup of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create a backup for the
     * production slot.
     * @param request Backup configuration. You can use the JSON response from the POST action as input here.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description.
     */
    BackupItem backupSlot(String resourceGroupName, String name, String slot, BackupRequestInner request);

    /**
     * Gets existing backups of an app.
     * 
     * Description for Gets existing backups of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get backups of the production
     * slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of backup items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BackupItem> listBackupsSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets existing backups of an app.
     * 
     * Description for Gets existing backups of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get backups of the production
     * slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of backup items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BackupItem> listBackupsSlot(String resourceGroupName, String name, String slot, Context context);

    /**
     * Gets a backup of an app by its ID.
     * 
     * Description for Gets a backup of an app by its ID.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get a backup of the production
     * slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description along with {@link Response}.
     */
    Response<BackupItem> getBackupStatusSlotWithResponse(String resourceGroupName, String name, String backupId,
        String slot, Context context);

    /**
     * Gets a backup of an app by its ID.
     * 
     * Description for Gets a backup of an app by its ID.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get a backup of the production
     * slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description.
     */
    BackupItem getBackupStatusSlot(String resourceGroupName, String name, String backupId, String slot);

    /**
     * Deletes a backup of an app by its ID.
     * 
     * Description for Deletes a backup of an app by its ID.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete a backup of the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteBackupSlotWithResponse(String resourceGroupName, String name, String backupId, String slot,
        Context context);

    /**
     * Deletes a backup of an app by its ID.
     * 
     * Description for Deletes a backup of an app by its ID.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete a backup of the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteBackupSlot(String resourceGroupName, String name, String backupId, String slot);

    /**
     * Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as
     * the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the
     * request body.
     * 
     * Description for Gets status of a web app backup that may be in progress, including secrets associated with the
     * backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is
     * passed in the request body.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param backupId ID of backup.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param request Information on backup request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description along with {@link Response}.
     */
    Response<BackupItem> listBackupStatusSecretsSlotWithResponse(String resourceGroupName, String name, String backupId,
        String slot, BackupRequestInner request, Context context);

    /**
     * Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as
     * the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the
     * request body.
     * 
     * Description for Gets status of a web app backup that may be in progress, including secrets associated with the
     * backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is
     * passed in the request body.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param backupId ID of backup.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param request Information on backup request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return backup description.
     */
    BackupItem listBackupStatusSecretsSlot(String resourceGroupName, String name, String backupId, String slot,
        BackupRequestInner request);

    /**
     * Restores a specific backup to another app (or deployment slot, if specified).
     * 
     * Description for Restores a specific backup to another app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will restore a backup of the
     * production slot.
     * @param request Information on restore request .
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreSlot(String resourceGroupName, String name, String backupId, String slot, RestoreRequestInner request);

    /**
     * Restores a specific backup to another app (or deployment slot, if specified).
     * 
     * Description for Restores a specific backup to another app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param backupId ID of the backup.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will restore a backup of the
     * production slot.
     * @param request Information on restore request .
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreSlot(String resourceGroupName, String name, String backupId, String slot, RestoreRequestInner request,
        Context context);

    /**
     * Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.
     * 
     * Description for Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies entity collection ARM resource as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<CsmPublishingCredentialsPoliciesEntity>
        listBasicPublishingCredentialsPoliciesSlot(String resourceGroupName, String name, String slot);

    /**
     * Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.
     * 
     * Description for Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies entity collection ARM resource as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<CsmPublishingCredentialsPoliciesEntity>
        listBasicPublishingCredentialsPoliciesSlot(String resourceGroupName, String name, String slot, Context context);

    /**
     * Returns whether FTP is allowed on the site or not.
     * 
     * Description for Returns whether FTP is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters along with {@link Response}.
     */
    Response<CsmPublishingCredentialsPoliciesEntity> getFtpAllowedSlotWithResponse(String resourceGroupName,
        String name, String slot, Context context);

    /**
     * Returns whether FTP is allowed on the site or not.
     * 
     * Description for Returns whether FTP is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters.
     */
    CsmPublishingCredentialsPoliciesEntity getFtpAllowedSlot(String resourceGroupName, String name, String slot);

    /**
     * Updates whether FTP is allowed on the site or not.
     * 
     * Description for Updates whether FTP is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters along with {@link Response}.
     */
    Response<CsmPublishingCredentialsPoliciesEntity> updateFtpAllowedSlotWithResponse(String resourceGroupName,
        String name, String slot, CsmPublishingCredentialsPoliciesEntityInner csmPublishingAccessPoliciesEntity,
        Context context);

    /**
     * Updates whether FTP is allowed on the site or not.
     * 
     * Description for Updates whether FTP is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters.
     */
    CsmPublishingCredentialsPoliciesEntity updateFtpAllowedSlot(String resourceGroupName, String name, String slot,
        CsmPublishingCredentialsPoliciesEntityInner csmPublishingAccessPoliciesEntity);

    /**
     * Returns whether Scm basic auth is allowed on the site or not.
     * 
     * Description for Returns whether Scm basic auth is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters along with {@link Response}.
     */
    Response<CsmPublishingCredentialsPoliciesEntity> getScmAllowedSlotWithResponse(String resourceGroupName,
        String name, String slot, Context context);

    /**
     * Returns whether Scm basic auth is allowed on the site or not.
     * 
     * Description for Returns whether Scm basic auth is allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters.
     */
    CsmPublishingCredentialsPoliciesEntity getScmAllowedSlot(String resourceGroupName, String name, String slot);

    /**
     * Updates whether user publishing credentials are allowed on the site or not.
     * 
     * Description for Updates whether user publishing credentials are allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters along with {@link Response}.
     */
    Response<CsmPublishingCredentialsPoliciesEntity> updateScmAllowedSlotWithResponse(String resourceGroupName,
        String name, String slot, CsmPublishingCredentialsPoliciesEntityInner csmPublishingAccessPoliciesEntity,
        Context context);

    /**
     * Updates whether user publishing credentials are allowed on the site or not.
     * 
     * Description for Updates whether user publishing credentials are allowed on the site or not.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publishing Credentials Policies parameters.
     */
    CsmPublishingCredentialsPoliciesEntity updateScmAllowedSlot(String resourceGroupName, String name, String slot,
        CsmPublishingCredentialsPoliciesEntityInner csmPublishingAccessPoliciesEntity);

    /**
     * List the configurations of an app
     * 
     * Description for List the configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will return configuration for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of site configurations as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteConfigResource> listConfigurationsSlot(String resourceGroupName, String name, String slot);

    /**
     * List the configurations of an app
     * 
     * Description for List the configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will return configuration for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of site configurations as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteConfigResource> listConfigurationsSlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Replaces the application settings of an app.
     * 
     * Description for Replaces the application settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the application settings
     * for the production slot.
     * @param appSettings Application settings of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<StringDictionary> updateApplicationSettingsSlotWithResponse(String resourceGroupName, String name,
        String slot, StringDictionaryInner appSettings, Context context);

    /**
     * Replaces the application settings of an app.
     * 
     * Description for Replaces the application settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the application settings
     * for the production slot.
     * @param appSettings Application settings of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    StringDictionary updateApplicationSettingsSlot(String resourceGroupName, String name, String slot,
        StringDictionaryInner appSettings);

    /**
     * Gets the application settings of an app.
     * 
     * Description for Gets the application settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the application settings
     * for the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<StringDictionary> listApplicationSettingsSlotWithResponse(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Gets the application settings of an app.
     * 
     * Description for Gets the application settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the application settings
     * for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    StringDictionary listApplicationSettingsSlot(String resourceGroupName, String name, String slot);

    /**
     * Updates the Authentication / Authorization settings associated with web app.
     * 
     * Description for Updates the Authentication / Authorization settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param siteAuthSettings Auth settings associated with web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization feature along with
     * {@link Response}.
     */
    Response<SiteAuthSettings> updateAuthSettingsSlotWithResponse(String resourceGroupName, String name, String slot,
        SiteAuthSettingsInner siteAuthSettings, Context context);

    /**
     * Updates the Authentication / Authorization settings associated with web app.
     * 
     * Description for Updates the Authentication / Authorization settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param siteAuthSettings Auth settings associated with web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization feature.
     */
    SiteAuthSettings updateAuthSettingsSlot(String resourceGroupName, String name, String slot,
        SiteAuthSettingsInner siteAuthSettings);

    /**
     * Gets the Authentication/Authorization settings of an app.
     * 
     * Description for Gets the Authentication/Authorization settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the settings for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization feature along with
     * {@link Response}.
     */
    Response<SiteAuthSettings> getAuthSettingsSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets the Authentication/Authorization settings of an app.
     * 
     * Description for Gets the Authentication/Authorization settings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the settings for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization feature.
     */
    SiteAuthSettings getAuthSettingsSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the settings for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site's Authentication / Authorization settings for apps via the V2 format along with {@link Response}.
     */
    Response<SiteAuthSettingsV2> getAuthSettingsV2WithoutSecretsSlotWithResponse(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Gets site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the settings for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site's Authentication / Authorization settings for apps via the V2 format.
     */
    SiteAuthSettingsV2 getAuthSettingsV2WithoutSecretsSlot(String resourceGroupName, String name, String slot);

    /**
     * Updates site's Authentication / Authorization settings for apps via the V2 format
     * 
     * Description for Updates site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param siteAuthSettingsV2 Auth settings associated with web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization V2 feature along with
     * {@link Response}.
     */
    Response<SiteAuthSettingsV2> updateAuthSettingsV2SlotWithResponse(String resourceGroupName, String name,
        String slot, SiteAuthSettingsV2Inner siteAuthSettingsV2, Context context);

    /**
     * Updates site's Authentication / Authorization settings for apps via the V2 format
     * 
     * Description for Updates site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param siteAuthSettingsV2 Auth settings associated with web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization V2 feature.
     */
    SiteAuthSettingsV2 updateAuthSettingsV2Slot(String resourceGroupName, String name, String slot,
        SiteAuthSettingsV2Inner siteAuthSettingsV2);

    /**
     * Gets site's Authentication / Authorization settings for apps via the V2 format
     * 
     * Description for Gets site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the settings for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization V2 feature along with
     * {@link Response}.
     */
    Response<SiteAuthSettingsV2> getAuthSettingsV2SlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets site's Authentication / Authorization settings for apps via the V2 format
     * 
     * Description for Gets site's Authentication / Authorization settings for apps via the V2 format.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the settings for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration settings for the Azure App Service Authentication / Authorization V2 feature.
     */
    SiteAuthSettingsV2 getAuthSettingsV2Slot(String resourceGroupName, String name, String slot);

    /**
     * Updates the Azure storage account configurations of an app.
     * 
     * Description for Updates the Azure storage account configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the Azure storage
     * account configurations for the production slot.
     * @param azureStorageAccounts Azure storage accounts of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azureStorageInfo dictionary resource along with {@link Response}.
     */
    Response<AzureStoragePropertyDictionaryResource> updateAzureStorageAccountsSlotWithResponse(
        String resourceGroupName, String name, String slot,
        AzureStoragePropertyDictionaryResourceInner azureStorageAccounts, Context context);

    /**
     * Updates the Azure storage account configurations of an app.
     * 
     * Description for Updates the Azure storage account configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the Azure storage
     * account configurations for the production slot.
     * @param azureStorageAccounts Azure storage accounts of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azureStorageInfo dictionary resource.
     */
    AzureStoragePropertyDictionaryResource updateAzureStorageAccountsSlot(String resourceGroupName, String name,
        String slot, AzureStoragePropertyDictionaryResourceInner azureStorageAccounts);

    /**
     * Gets the Azure storage account configurations of an app.
     * 
     * Description for Gets the Azure storage account configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the Azure storage
     * account configurations for the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azureStorageInfo dictionary resource along with {@link Response}.
     */
    Response<AzureStoragePropertyDictionaryResource> listAzureStorageAccountsSlotWithResponse(String resourceGroupName,
        String name, String slot, Context context);

    /**
     * Gets the Azure storage account configurations of an app.
     * 
     * Description for Gets the Azure storage account configurations of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the Azure storage
     * account configurations for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azureStorageInfo dictionary resource.
     */
    AzureStoragePropertyDictionaryResource listAzureStorageAccountsSlot(String resourceGroupName, String name,
        String slot);

    /**
     * Updates the backup configuration of an app.
     * 
     * Description for Updates the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the backup configuration
     * for the production slot.
     * @param request Edited backup configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a backup which will be performed along with {@link Response}.
     */
    Response<BackupRequest> updateBackupConfigurationSlotWithResponse(String resourceGroupName, String name,
        String slot, BackupRequestInner request, Context context);

    /**
     * Updates the backup configuration of an app.
     * 
     * Description for Updates the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the backup configuration
     * for the production slot.
     * @param request Edited backup configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a backup which will be performed.
     */
    BackupRequest updateBackupConfigurationSlot(String resourceGroupName, String name, String slot,
        BackupRequestInner request);

    /**
     * Deletes the backup configuration of an app.
     * 
     * Description for Deletes the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the backup configuration
     * for the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteBackupConfigurationSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Deletes the backup configuration of an app.
     * 
     * Description for Deletes the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the backup configuration
     * for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteBackupConfigurationSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets the backup configuration of an app.
     * 
     * Description for Gets the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the backup configuration
     * for the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a backup which will be performed along with {@link Response}.
     */
    Response<BackupRequest> getBackupConfigurationSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets the backup configuration of an app.
     * 
     * Description for Gets the backup configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the backup configuration
     * for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a backup which will be performed.
     */
    BackupRequest getBackupConfigurationSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets the config reference app settings and status of an app
     * 
     * Description for Gets the config reference app settings and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApiKVReference> getAppSettingsKeyVaultReferencesSlot(String resourceGroupName, String name,
        String slot);

    /**
     * Gets the config reference app settings and status of an app
     * 
     * Description for Gets the config reference app settings and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApiKVReference> getAppSettingsKeyVaultReferencesSlot(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Gets the config reference and status of an app
     * 
     * Description for Gets the config reference and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param appSettingKey App Setting key name.
     * @param slot The slot parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of site key vault references along with {@link Response}.
     */
    Response<ApiKVReference> getAppSettingKeyVaultReferenceSlotWithResponse(String resourceGroupName, String name,
        String appSettingKey, String slot, Context context);

    /**
     * Gets the config reference and status of an app
     * 
     * Description for Gets the config reference and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param appSettingKey App Setting key name.
     * @param slot The slot parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of site key vault references.
     */
    ApiKVReference getAppSettingKeyVaultReferenceSlot(String resourceGroupName, String name, String appSettingKey,
        String slot);

    /**
     * Gets the config reference app settings and status of an app
     * 
     * Description for Gets the config reference app settings and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApiKVReference> getSiteConnectionStringKeyVaultReferencesSlot(String resourceGroupName, String name,
        String slot);

    /**
     * Gets the config reference app settings and status of an app
     * 
     * Description for Gets the config reference app settings and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot The slot parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApiKVReference> getSiteConnectionStringKeyVaultReferencesSlot(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Gets the config reference and status of an app
     * 
     * Description for Gets the config reference and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param connectionStringKey The connectionStringKey parameter.
     * @param slot The slot parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of site key vault references along with {@link Response}.
     */
    Response<ApiKVReference> getSiteConnectionStringKeyVaultReferenceSlotWithResponse(String resourceGroupName,
        String name, String connectionStringKey, String slot, Context context);

    /**
     * Gets the config reference and status of an app
     * 
     * Description for Gets the config reference and status of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param connectionStringKey The connectionStringKey parameter.
     * @param slot The slot parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of site key vault references.
     */
    ApiKVReference getSiteConnectionStringKeyVaultReferenceSlot(String resourceGroupName, String name,
        String connectionStringKey, String slot);

    /**
     * Replaces the connection strings of an app.
     * 
     * Description for Replaces the connection strings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the connection settings
     * for the production slot.
     * @param connectionStrings Connection strings of the app or deployment slot. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<ConnectionStringDictionary> updateConnectionStringsSlotWithResponse(String resourceGroupName, String name,
        String slot, ConnectionStringDictionaryInner connectionStrings, Context context);

    /**
     * Replaces the connection strings of an app.
     * 
     * Description for Replaces the connection strings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the connection settings
     * for the production slot.
     * @param connectionStrings Connection strings of the app or deployment slot. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    ConnectionStringDictionary updateConnectionStringsSlot(String resourceGroupName, String name, String slot,
        ConnectionStringDictionaryInner connectionStrings);

    /**
     * Gets the connection strings of an app.
     * 
     * Description for Gets the connection strings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the connection settings for
     * the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<ConnectionStringDictionary> listConnectionStringsSlotWithResponse(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Gets the connection strings of an app.
     * 
     * Description for Gets the connection strings of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the connection settings for
     * the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    ConnectionStringDictionary listConnectionStringsSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets the logging configuration of an app.
     * 
     * Description for Gets the logging configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the logging configuration
     * for the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration of App Service site logs along with {@link Response}.
     */
    Response<SiteLogsConfig> getDiagnosticLogsConfigurationSlotWithResponse(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Gets the logging configuration of an app.
     * 
     * Description for Gets the logging configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the logging configuration
     * for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration of App Service site logs.
     */
    SiteLogsConfig getDiagnosticLogsConfigurationSlot(String resourceGroupName, String name, String slot);

    /**
     * Updates the logging configuration of an app.
     * 
     * Description for Updates the logging configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the logging
     * configuration for the production slot.
     * @param siteLogsConfig A SiteLogsConfig JSON object that contains the logging configuration to change in the
     * "properties" property.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration of App Service site logs along with {@link Response}.
     */
    Response<SiteLogsConfig> updateDiagnosticLogsConfigSlotWithResponse(String resourceGroupName, String name,
        String slot, SiteLogsConfigInner siteLogsConfig, Context context);

    /**
     * Updates the logging configuration of an app.
     * 
     * Description for Updates the logging configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the logging
     * configuration for the production slot.
     * @param siteLogsConfig A SiteLogsConfig JSON object that contains the logging configuration to change in the
     * "properties" property.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration of App Service site logs.
     */
    SiteLogsConfig updateDiagnosticLogsConfigSlot(String resourceGroupName, String name, String slot,
        SiteLogsConfigInner siteLogsConfig);

    /**
     * Replaces the metadata of an app.
     * 
     * Description for Replaces the metadata of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the metadata for the
     * production slot.
     * @param metadata Edited metadata of the app or deployment slot. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<StringDictionary> updateMetadataSlotWithResponse(String resourceGroupName, String name, String slot,
        StringDictionaryInner metadata, Context context);

    /**
     * Replaces the metadata of an app.
     * 
     * Description for Replaces the metadata of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the metadata for the
     * production slot.
     * @param metadata Edited metadata of the app or deployment slot. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    StringDictionary updateMetadataSlot(String resourceGroupName, String name, String slot,
        StringDictionaryInner metadata);

    /**
     * Gets the metadata of an app.
     * 
     * Description for Gets the metadata of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the metadata for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<StringDictionary> listMetadataSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets the metadata of an app.
     * 
     * Description for Gets the metadata of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the metadata for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    StringDictionary listMetadataSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets the Git/FTP publishing credentials of an app.
     * 
     * Description for Gets the Git/FTP publishing credentials of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the publishing credentials
     * for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity.
     */
    User listPublishingCredentialsSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets the Git/FTP publishing credentials of an app.
     * 
     * Description for Gets the Git/FTP publishing credentials of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the publishing credentials
     * for the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity.
     */
    User listPublishingCredentialsSlot(String resourceGroupName, String name, String slot, Context context);

    /**
     * Updates the Push settings associated with web app.
     * 
     * Description for Updates the Push settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param pushSettings Push settings associated with web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return push settings for the App along with {@link Response}.
     */
    Response<PushSettings> updateSitePushSettingsSlotWithResponse(String resourceGroupName, String name, String slot,
        PushSettingsInner pushSettings, Context context);

    /**
     * Updates the Push settings associated with web app.
     * 
     * Description for Updates the Push settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param pushSettings Push settings associated with web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return push settings for the App.
     */
    PushSettings updateSitePushSettingsSlot(String resourceGroupName, String name, String slot,
        PushSettingsInner pushSettings);

    /**
     * Gets the Push settings associated with web app.
     * 
     * Description for Gets the Push settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return push settings for the App along with {@link Response}.
     */
    Response<PushSettings> listSitePushSettingsSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets the Push settings associated with web app.
     * 
     * Description for Gets the Push settings associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return push settings for the App.
     */
    PushSettings listSitePushSettingsSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications,
     * Always On, etc.
     * 
     * Description for Gets the configuration of an app, such as platform version and bitness, default documents,
     * virtual applications, Always On, etc.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will return configuration for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource along with {@link Response}.
     */
    Response<SiteConfigResource> getConfigurationSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications,
     * Always On, etc.
     * 
     * Description for Gets the configuration of an app, such as platform version and bitness, default documents,
     * virtual applications, Always On, etc.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will return configuration for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource.
     */
    SiteConfigResource getConfigurationSlot(String resourceGroupName, String name, String slot);

    /**
     * Updates the configuration of an app.
     * 
     * Description for Updates the configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update configuration for the
     * production slot.
     * @param siteConfig JSON representation of a SiteConfig object. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource along with {@link Response}.
     */
    Response<SiteConfigResource> createOrUpdateConfigurationSlotWithResponse(String resourceGroupName, String name,
        String slot, SiteConfigResourceInner siteConfig, Context context);

    /**
     * Updates the configuration of an app.
     * 
     * Description for Updates the configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update configuration for the
     * production slot.
     * @param siteConfig JSON representation of a SiteConfig object. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource.
     */
    SiteConfigResource createOrUpdateConfigurationSlot(String resourceGroupName, String name, String slot,
        SiteConfigResourceInner siteConfig);

    /**
     * Updates the configuration of an app.
     * 
     * Description for Updates the configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update configuration for the
     * production slot.
     * @param siteConfig JSON representation of a SiteConfig object. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource along with {@link Response}.
     */
    Response<SiteConfigResource> updateConfigurationSlotWithResponse(String resourceGroupName, String name, String slot,
        SiteConfigResourceInner siteConfig, Context context);

    /**
     * Updates the configuration of an app.
     * 
     * Description for Updates the configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update configuration for the
     * production slot.
     * @param siteConfig JSON representation of a SiteConfig object. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource.
     */
    SiteConfigResource updateConfigurationSlot(String resourceGroupName, String name, String slot,
        SiteConfigResourceInner siteConfig);

    /**
     * Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the
     * ID of the snapshot.
     * 
     * Description for Gets a list of web app configuration snapshots identifiers. Each element of the list contains a
     * timestamp and the ID of the snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will return configuration for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of metadata for the app configuration snapshots that can be restored as paginated response
     * with {@link PagedIterable}.
     */
    PagedIterable<SiteConfigurationSnapshotInfo> listConfigurationSnapshotInfoSlot(String resourceGroupName,
        String name, String slot);

    /**
     * Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the
     * ID of the snapshot.
     * 
     * Description for Gets a list of web app configuration snapshots identifiers. Each element of the list contains a
     * timestamp and the ID of the snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will return configuration for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of metadata for the app configuration snapshots that can be restored as paginated response
     * with {@link PagedIterable}.
     */
    PagedIterable<SiteConfigurationSnapshotInfo> listConfigurationSnapshotInfoSlot(String resourceGroupName,
        String name, String slot, Context context);

    /**
     * Gets a snapshot of the configuration of an app at a previous point in time.
     * 
     * Description for Gets a snapshot of the configuration of an app at a previous point in time.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param snapshotId The ID of the snapshot to read.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will return configuration for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource along with {@link Response}.
     */
    Response<SiteConfigResource> getConfigurationSnapshotSlotWithResponse(String resourceGroupName, String name,
        String snapshotId, String slot, Context context);

    /**
     * Gets a snapshot of the configuration of an app at a previous point in time.
     * 
     * Description for Gets a snapshot of the configuration of an app at a previous point in time.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param snapshotId The ID of the snapshot to read.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will return configuration for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web app configuration ARM resource.
     */
    SiteConfigResource getConfigurationSnapshotSlot(String resourceGroupName, String name, String snapshotId,
        String slot);

    /**
     * Reverts the configuration of an app to a previous snapshot.
     * 
     * Description for Reverts the configuration of an app to a previous snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param snapshotId The ID of the snapshot to read.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will return configuration for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> recoverSiteConfigurationSnapshotSlotWithResponse(String resourceGroupName, String name,
        String snapshotId, String slot, Context context);

    /**
     * Reverts the configuration of an app to a previous snapshot.
     * 
     * Description for Reverts the configuration of an app to a previous snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param snapshotId The ID of the snapshot to read.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will return configuration for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void recoverSiteConfigurationSnapshotSlot(String resourceGroupName, String name, String snapshotId, String slot);

    /**
     * Gets the last lines of docker logs for the given site
     * 
     * Description for Gets the last lines of docker logs for the given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<BinaryData> getWebSiteContainerLogsSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets the last lines of docker logs for the given site
     * 
     * Description for Gets the last lines of docker logs for the given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    BinaryData getWebSiteContainerLogsSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets the ZIP archived docker log files for the given site
     * 
     * Description for Gets the ZIP archived docker log files for the given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<BinaryData> getContainerLogsZipSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets the ZIP archived docker log files for the given site
     * 
     * Description for Gets the ZIP archived docker log files for the given site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    BinaryData getContainerLogsZipSlot(String resourceGroupName, String name, String slot);

    /**
     * List continuous web jobs for an app, or a deployment slot.
     * 
     * Description for List continuous web jobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ContinuousWebJob> listContinuousWebJobsSlot(String resourceGroupName, String name, String slot);

    /**
     * List continuous web jobs for an app, or a deployment slot.
     * 
     * Description for List continuous web jobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ContinuousWebJob> listContinuousWebJobsSlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets a continuous web job by its ID for an app, or a deployment slot.
     * 
     * Description for Gets a continuous web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return continuous Web Job Information along with {@link Response}.
     */
    Response<ContinuousWebJob> getContinuousWebJobSlotWithResponse(String resourceGroupName, String name,
        String webJobName, String slot, Context context);

    /**
     * Gets a continuous web job by its ID for an app, or a deployment slot.
     * 
     * Description for Gets a continuous web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return continuous Web Job Information.
     */
    ContinuousWebJob getContinuousWebJobSlot(String resourceGroupName, String name, String webJobName, String slot);

    /**
     * Delete a continuous web job by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a continuous web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteContinuousWebJobSlotWithResponse(String resourceGroupName, String name, String webJobName,
        String slot, Context context);

    /**
     * Delete a continuous web job by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a continuous web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteContinuousWebJobSlot(String resourceGroupName, String name, String webJobName, String slot);

    /**
     * Start a continuous web job for an app, or a deployment slot.
     * 
     * Description for Start a continuous web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> startContinuousWebJobSlotWithResponse(String resourceGroupName, String name, String webJobName,
        String slot, Context context);

    /**
     * Start a continuous web job for an app, or a deployment slot.
     * 
     * Description for Start a continuous web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void startContinuousWebJobSlot(String resourceGroupName, String name, String webJobName, String slot);

    /**
     * Stop a continuous web job for an app, or a deployment slot.
     * 
     * Description for Stop a continuous web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> stopContinuousWebJobSlotWithResponse(String resourceGroupName, String name, String webJobName,
        String slot, Context context);

    /**
     * Stop a continuous web job for an app, or a deployment slot.
     * 
     * Description for Stop a continuous web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stopContinuousWebJobSlot(String resourceGroupName, String name, String webJobName, String slot);

    /**
     * List deployment statuses for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the deployment status for
     * the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment status collection ARM resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CsmDeploymentStatus> listSlotSiteDeploymentStatusesSlot(String resourceGroupName, String name,
        String slot);

    /**
     * List deployment statuses for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the deployment status for
     * the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment status collection ARM resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CsmDeploymentStatus> listSlotSiteDeploymentStatusesSlot(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Gets the deployment status for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the deployment status for
     * the production slot.
     * @param deploymentStatusId GUID of the deployment operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the deployment status for an app (or deployment slot, if specified).
     */
    CsmDeploymentStatus getSlotSiteDeploymentStatusSlot(String resourceGroupName, String name, String slot,
        String deploymentStatusId);

    /**
     * Gets the deployment status for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the deployment status for
     * the production slot.
     * @param deploymentStatusId GUID of the deployment operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the deployment status for an app (or deployment slot, if specified).
     */
    CsmDeploymentStatus getSlotSiteDeploymentStatusSlot(String resourceGroupName, String name, String slot,
        String deploymentStatusId, Context context);

    /**
     * List deployments for an app, or a deployment slot.
     * 
     * Description for List deployments for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of app deployments as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Deployment> listDeploymentsSlot(String resourceGroupName, String name, String slot);

    /**
     * List deployments for an app, or a deployment slot.
     * 
     * Description for List deployments for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of app deployments as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Deployment> listDeploymentsSlot(String resourceGroupName, String name, String slot, Context context);

    /**
     * Get a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Get a deployment by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id Deployment ID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API gets a deployment for the production
     * slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity along with {@link Response}.
     */
    Response<Deployment> getDeploymentSlotWithResponse(String resourceGroupName, String name, String id, String slot,
        Context context);

    /**
     * Get a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Get a deployment by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id Deployment ID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API gets a deployment for the production
     * slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity.
     */
    Deployment getDeploymentSlot(String resourceGroupName, String name, String id, String slot);

    /**
     * Create a deployment for an app, or a deployment slot.
     * 
     * Description for Create a deployment for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id ID of an existing deployment.
     * @param slot Name of the deployment slot. If a slot is not specified, the API creates a deployment for the
     * production slot.
     * @param deployment Deployment details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity along with {@link Response}.
     */
    Response<Deployment> createDeploymentSlotWithResponse(String resourceGroupName, String name, String id, String slot,
        DeploymentInner deployment, Context context);

    /**
     * Create a deployment for an app, or a deployment slot.
     * 
     * Description for Create a deployment for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id ID of an existing deployment.
     * @param slot Name of the deployment slot. If a slot is not specified, the API creates a deployment for the
     * production slot.
     * @param deployment Deployment details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity.
     */
    Deployment createDeploymentSlot(String resourceGroupName, String name, String id, String slot,
        DeploymentInner deployment);

    /**
     * Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id Deployment ID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteDeploymentSlotWithResponse(String resourceGroupName, String name, String id, String slot,
        Context context);

    /**
     * Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id Deployment ID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteDeploymentSlot(String resourceGroupName, String name, String id, String slot);

    /**
     * List deployment log for specific deployment for an app, or a deployment slot.
     * 
     * Description for List deployment log for specific deployment for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id The ID of a specific deployment. This is the value of the name property in the JSON response from "GET
     * /api/sites/{siteName}/deployments".
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity along with {@link Response}.
     */
    Response<Deployment> listDeploymentLogSlotWithResponse(String resourceGroupName, String name, String id,
        String slot, Context context);

    /**
     * List deployment log for specific deployment for an app, or a deployment slot.
     * 
     * Description for List deployment log for specific deployment for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param id The ID of a specific deployment. This is the value of the name property in the JSON response from "GET
     * /api/sites/{siteName}/deployments".
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity.
     */
    Deployment listDeploymentLogSlot(String resourceGroupName, String name, String id, String slot);

    /**
     * Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to get information
     * about the databases stored in a backup.
     * 
     * Description for Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to
     * get information about the databases stored in a backup.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will perform discovery for the
     * production slot.
     * @param request A RestoreRequest object that includes Azure storage URL and blog name for discovery of backup.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a restore request along with {@link Response}.
     */
    Response<RestoreRequest> discoverBackupSlotWithResponse(String resourceGroupName, String name, String slot,
        RestoreRequestInner request, Context context);

    /**
     * Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to get information
     * about the databases stored in a backup.
     * 
     * Description for Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to
     * get information about the databases stored in a backup.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will perform discovery for the
     * production slot.
     * @param request A RestoreRequest object that includes Azure storage URL and blog name for discovery of backup.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a restore request.
     */
    RestoreRequest discoverBackupSlot(String resourceGroupName, String name, String slot, RestoreRequestInner request);

    /**
     * Lists ownership identifiers for domain associated with web app.
     * 
     * Description for Lists ownership identifiers for domain associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of identifiers as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Identifier> listDomainOwnershipIdentifiersSlot(String resourceGroupName, String name, String slot);

    /**
     * Lists ownership identifiers for domain associated with web app.
     * 
     * Description for Lists ownership identifiers for domain associated with web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of identifiers as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Identifier> listDomainOwnershipIdentifiersSlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Get domain ownership identifier for web app.
     * 
     * Description for Get domain ownership identifier for web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a domain specific resource identifier along with {@link Response}.
     */
    Response<Identifier> getDomainOwnershipIdentifierSlotWithResponse(String resourceGroupName, String name,
        String domainOwnershipIdentifierName, String slot, Context context);

    /**
     * Get domain ownership identifier for web app.
     * 
     * Description for Get domain ownership identifier for web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a domain specific resource identifier.
     */
    Identifier getDomainOwnershipIdentifierSlot(String resourceGroupName, String name,
        String domainOwnershipIdentifierName, String slot);

    /**
     * Creates a domain ownership identifier for web app, or updates an existing ownership identifier.
     * 
     * Description for Creates a domain ownership identifier for web app, or updates an existing ownership identifier.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a domain specific resource identifier along with {@link Response}.
     */
    Response<Identifier> createOrUpdateDomainOwnershipIdentifierSlotWithResponse(String resourceGroupName, String name,
        String domainOwnershipIdentifierName, String slot, IdentifierInner domainOwnershipIdentifier, Context context);

    /**
     * Creates a domain ownership identifier for web app, or updates an existing ownership identifier.
     * 
     * Description for Creates a domain ownership identifier for web app, or updates an existing ownership identifier.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a domain specific resource identifier.
     */
    Identifier createOrUpdateDomainOwnershipIdentifierSlot(String resourceGroupName, String name,
        String domainOwnershipIdentifierName, String slot, IdentifierInner domainOwnershipIdentifier);

    /**
     * Deletes a domain ownership identifier for a web app.
     * 
     * Description for Deletes a domain ownership identifier for a web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteDomainOwnershipIdentifierSlotWithResponse(String resourceGroupName, String name,
        String domainOwnershipIdentifierName, String slot, Context context);

    /**
     * Deletes a domain ownership identifier for a web app.
     * 
     * Description for Deletes a domain ownership identifier for a web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteDomainOwnershipIdentifierSlot(String resourceGroupName, String name,
        String domainOwnershipIdentifierName, String slot);

    /**
     * Creates a domain ownership identifier for web app, or updates an existing ownership identifier.
     * 
     * Description for Creates a domain ownership identifier for web app, or updates an existing ownership identifier.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a domain specific resource identifier along with {@link Response}.
     */
    Response<Identifier> updateDomainOwnershipIdentifierSlotWithResponse(String resourceGroupName, String name,
        String domainOwnershipIdentifierName, String slot, IdentifierInner domainOwnershipIdentifier, Context context);

    /**
     * Creates a domain ownership identifier for web app, or updates an existing ownership identifier.
     * 
     * Description for Creates a domain ownership identifier for web app, or updates an existing ownership identifier.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param domainOwnershipIdentifierName Name of domain ownership identifier.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a domain specific resource identifier.
     */
    Identifier updateDomainOwnershipIdentifierSlot(String resourceGroupName, String name,
        String domainOwnershipIdentifierName, String slot, IdentifierInner domainOwnershipIdentifier);

    /**
     * Get the status of the last MSDeploy operation.
     * 
     * Description for Get the status of the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response along with {@link Response}.
     */
    Response<MSDeployStatus> getMSDeployStatusSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Get the status of the last MSDeploy operation.
     * 
     * Description for Get the status of the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus getMSDeployStatusSlot(String resourceGroupName, String name, String slot);

    /**
     * Invoke the MSDeploy web app extension.
     * 
     * Description for Invoke the MSDeploy web app extension.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param mSDeploy Details of MSDeploy operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus createMSDeployOperationSlot(String resourceGroupName, String name, String slot, MSDeploy mSDeploy);

    /**
     * Invoke the MSDeploy web app extension.
     * 
     * Description for Invoke the MSDeploy web app extension.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param mSDeploy Details of MSDeploy operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus createMSDeployOperationSlot(String resourceGroupName, String name, String slot, MSDeploy mSDeploy,
        Context context);

    /**
     * Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * Description for Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy log along with {@link Response}.
     */
    Response<MSDeployLog> getMSDeployLogSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * Description for Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy log.
     */
    MSDeployLog getMSDeployLogSlot(String resourceGroupName, String name, String slot);

    /**
     * List the functions for a web site, or a deployment slot.
     * 
     * Description for List the functions for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu function information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FunctionEnvelope> listInstanceFunctionsSlot(String resourceGroupName, String name, String slot);

    /**
     * List the functions for a web site, or a deployment slot.
     * 
     * Description for List the functions for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu function information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FunctionEnvelope> listInstanceFunctionsSlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Fetch a short lived token that can be exchanged for a master key.
     * 
     * Description for Fetch a short lived token that can be exchanged for a master key.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<String> getFunctionsAdminTokenSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Fetch a short lived token that can be exchanged for a master key.
     * 
     * Description for Fetch a short lived token that can be exchanged for a master key.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    String getFunctionsAdminTokenSlot(String resourceGroupName, String name, String slot);

    /**
     * Get function information by its ID for web site, or a deployment slot.
     * 
     * Description for Get function information by its ID for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function information along with {@link Response}.
     */
    Response<FunctionEnvelope> getInstanceFunctionSlotWithResponse(String resourceGroupName, String name,
        String functionName, String slot, Context context);

    /**
     * Get function information by its ID for web site, or a deployment slot.
     * 
     * Description for Get function information by its ID for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function information.
     */
    FunctionEnvelope getInstanceFunctionSlot(String resourceGroupName, String name, String functionName, String slot);

    /**
     * Create function for web site, or a deployment slot.
     * 
     * Description for Create function for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param slot Name of the deployment slot.
     * @param functionEnvelope Function details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function information.
     */
    FunctionEnvelope createInstanceFunctionSlot(String resourceGroupName, String name, String functionName, String slot,
        FunctionEnvelopeInner functionEnvelope);

    /**
     * Create function for web site, or a deployment slot.
     * 
     * Description for Create function for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param slot Name of the deployment slot.
     * @param functionEnvelope Function details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function information.
     */
    FunctionEnvelope createInstanceFunctionSlot(String resourceGroupName, String name, String functionName, String slot,
        FunctionEnvelopeInner functionEnvelope, Context context);

    /**
     * Delete a function for web site, or a deployment slot.
     * 
     * Description for Delete a function for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteInstanceFunctionSlotWithResponse(String resourceGroupName, String name, String functionName,
        String slot, Context context);

    /**
     * Delete a function for web site, or a deployment slot.
     * 
     * Description for Delete a function for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteInstanceFunctionSlot(String resourceGroupName, String name, String functionName, String slot);

    /**
     * Add or update a function secret.
     * 
     * Description for Add or update a function secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName The name of the function.
     * @param keyName The name of the key.
     * @param slot Name of the deployment slot.
     * @param key The key to create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function key info along with {@link Response}.
     */
    Response<KeyInfo> createOrUpdateFunctionSecretSlotWithResponse(String resourceGroupName, String name,
        String functionName, String keyName, String slot, KeyInfoInner key, Context context);

    /**
     * Add or update a function secret.
     * 
     * Description for Add or update a function secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName The name of the function.
     * @param keyName The name of the key.
     * @param slot Name of the deployment slot.
     * @param key The key to create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function key info.
     */
    KeyInfo createOrUpdateFunctionSecretSlot(String resourceGroupName, String name, String functionName, String keyName,
        String slot, KeyInfoInner key);

    /**
     * Delete a function secret.
     * 
     * Description for Delete a function secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName The name of the function.
     * @param keyName The name of the key.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteFunctionSecretSlotWithResponse(String resourceGroupName, String name, String functionName,
        String keyName, String slot, Context context);

    /**
     * Delete a function secret.
     * 
     * Description for Delete a function secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName The name of the function.
     * @param keyName The name of the key.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteFunctionSecretSlot(String resourceGroupName, String name, String functionName, String keyName,
        String slot);

    /**
     * Get function keys for a function in a web site, or a deployment slot.
     * 
     * Description for Get function keys for a function in a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource along with {@link Response}.
     */
    Response<StringDictionary> listFunctionKeysSlotWithResponse(String resourceGroupName, String name,
        String functionName, String slot, Context context);

    /**
     * Get function keys for a function in a web site, or a deployment slot.
     * 
     * Description for Get function keys for a function in a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return string dictionary resource.
     */
    StringDictionary listFunctionKeysSlot(String resourceGroupName, String name, String functionName, String slot);

    /**
     * Get function secrets for a function in a web site, or a deployment slot.
     * 
     * Description for Get function secrets for a function in a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function secrets along with {@link Response}.
     */
    Response<FunctionSecrets> listFunctionSecretsSlotWithResponse(String resourceGroupName, String name,
        String functionName, String slot, Context context);

    /**
     * Get function secrets for a function in a web site, or a deployment slot.
     * 
     * Description for Get function secrets for a function in a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param functionName Function name.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function secrets.
     */
    FunctionSecrets listFunctionSecretsSlot(String resourceGroupName, String name, String functionName, String slot);

    /**
     * Get host secrets for a function app.
     * 
     * Description for Get host secrets for a function app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return functions host level keys along with {@link Response}.
     */
    Response<HostKeys> listHostKeysSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Get host secrets for a function app.
     * 
     * Description for Get host secrets for a function app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return functions host level keys.
     */
    HostKeys listHostKeysSlot(String resourceGroupName, String name, String slot);

    /**
     * This is to allow calling via powershell and ARM template.
     * 
     * Description for This is to allow calling via powershell and ARM template.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> listSyncStatusSlotWithResponse(String resourceGroupName, String name, String slot, Context context);

    /**
     * This is to allow calling via powershell and ARM template.
     * 
     * Description for This is to allow calling via powershell and ARM template.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void listSyncStatusSlot(String resourceGroupName, String name, String slot);

    /**
     * Syncs function trigger metadata to the management database
     * 
     * Description for Syncs function trigger metadata to the management database.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> syncFunctionsSlotWithResponse(String resourceGroupName, String name, String slot, Context context);

    /**
     * Syncs function trigger metadata to the management database
     * 
     * Description for Syncs function trigger metadata to the management database.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void syncFunctionsSlot(String resourceGroupName, String name, String slot);

    /**
     * Add or update a host level secret.
     * 
     * Description for Add or update a host level secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param keyType The type of host key.
     * @param keyName The name of the key.
     * @param slot Name of the deployment slot.
     * @param key The key to create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function key info along with {@link Response}.
     */
    Response<KeyInfo> createOrUpdateHostSecretSlotWithResponse(String resourceGroupName, String name, String keyType,
        String keyName, String slot, KeyInfoInner key, Context context);

    /**
     * Add or update a host level secret.
     * 
     * Description for Add or update a host level secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param keyType The type of host key.
     * @param keyName The name of the key.
     * @param slot Name of the deployment slot.
     * @param key The key to create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function key info.
     */
    KeyInfo createOrUpdateHostSecretSlot(String resourceGroupName, String name, String keyType, String keyName,
        String slot, KeyInfoInner key);

    /**
     * Delete a host level secret.
     * 
     * Description for Delete a host level secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param keyType The type of host key.
     * @param keyName The name of the key.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteHostSecretSlotWithResponse(String resourceGroupName, String name, String keyType,
        String keyName, String slot, Context context);

    /**
     * Delete a host level secret.
     * 
     * Description for Delete a host level secret.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param keyType The type of host key.
     * @param keyName The name of the key.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteHostSecretSlot(String resourceGroupName, String name, String keyType, String keyName, String slot);

    /**
     * Get hostname bindings for an app or a deployment slot.
     * 
     * Description for Get hostname bindings for an app or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API gets hostname bindings for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of hostname bindings as paginated response with {@link PagedIterable}.
     */
    PagedIterable<HostnameBinding> listHostnameBindingsSlot(String resourceGroupName, String name, String slot);

    /**
     * Get hostname bindings for an app or a deployment slot.
     * 
     * Description for Get hostname bindings for an app or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API gets hostname bindings for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of hostname bindings as paginated response with {@link PagedIterable}.
     */
    PagedIterable<HostnameBinding> listHostnameBindingsSlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * Description for Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API the named binding for the production
     * slot.
     * @param hostname Hostname in the hostname binding.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a hostname binding object along with {@link Response}.
     */
    Response<HostnameBinding> getHostnameBindingSlotWithResponse(String resourceGroupName, String name, String slot,
        String hostname, Context context);

    /**
     * Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * Description for Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API the named binding for the production
     * slot.
     * @param hostname Hostname in the hostname binding.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a hostname binding object.
     */
    HostnameBinding getHostnameBindingSlot(String resourceGroupName, String name, String slot, String hostname);

    /**
     * Creates a hostname binding for an app.
     * 
     * Description for Creates a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param hostname Hostname in the hostname binding.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create a binding for the
     * production slot.
     * @param hostnameBinding Binding details. This is the JSON representation of a HostNameBinding object.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a hostname binding object along with {@link Response}.
     */
    Response<HostnameBinding> createOrUpdateHostnameBindingSlotWithResponse(String resourceGroupName, String name,
        String hostname, String slot, HostnameBindingInner hostnameBinding, Context context);

    /**
     * Creates a hostname binding for an app.
     * 
     * Description for Creates a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param hostname Hostname in the hostname binding.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create a binding for the
     * production slot.
     * @param hostnameBinding Binding details. This is the JSON representation of a HostNameBinding object.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a hostname binding object.
     */
    HostnameBinding createOrUpdateHostnameBindingSlot(String resourceGroupName, String name, String hostname,
        String slot, HostnameBindingInner hostnameBinding);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @param hostname Hostname in the hostname binding.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteHostnameBindingSlotWithResponse(String resourceGroupName, String name, String slot,
        String hostname, Context context);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @param hostname Hostname in the hostname binding.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteHostnameBindingSlot(String resourceGroupName, String name, String slot, String hostname);

    /**
     * Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @param slot The name of the slot for the web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract along with {@link Response}.
     */
    Response<HybridConnection> getHybridConnectionSlotWithResponse(String resourceGroupName, String name,
        String namespaceName, String relayName, String slot, Context context);

    /**
     * Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @param slot The name of the slot for the web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract.
     */
    HybridConnection getHybridConnectionSlot(String resourceGroupName, String name, String namespaceName,
        String relayName, String slot);

    /**
     * Creates a new Hybrid Connection using a Service Bus relay.
     * 
     * Description for Creates a new Hybrid Connection using a Service Bus relay.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @param slot The name of the slot for the web app.
     * @param connectionEnvelope The details of the hybrid connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract along with {@link Response}.
     */
    Response<HybridConnection> createOrUpdateHybridConnectionSlotWithResponse(String resourceGroupName, String name,
        String namespaceName, String relayName, String slot, HybridConnectionInner connectionEnvelope, Context context);

    /**
     * Creates a new Hybrid Connection using a Service Bus relay.
     * 
     * Description for Creates a new Hybrid Connection using a Service Bus relay.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @param slot The name of the slot for the web app.
     * @param connectionEnvelope The details of the hybrid connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract.
     */
    HybridConnection createOrUpdateHybridConnectionSlot(String resourceGroupName, String name, String namespaceName,
        String relayName, String slot, HybridConnectionInner connectionEnvelope);

    /**
     * Removes a Hybrid Connection from this site.
     * 
     * Description for Removes a Hybrid Connection from this site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @param slot The name of the slot for the web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteHybridConnectionSlotWithResponse(String resourceGroupName, String name, String namespaceName,
        String relayName, String slot, Context context);

    /**
     * Removes a Hybrid Connection from this site.
     * 
     * Description for Removes a Hybrid Connection from this site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @param slot The name of the slot for the web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteHybridConnectionSlot(String resourceGroupName, String name, String namespaceName, String relayName,
        String slot);

    /**
     * Creates a new Hybrid Connection using a Service Bus relay.
     * 
     * Description for Creates a new Hybrid Connection using a Service Bus relay.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @param slot The name of the slot for the web app.
     * @param connectionEnvelope The details of the hybrid connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract along with {@link Response}.
     */
    Response<HybridConnection> updateHybridConnectionSlotWithResponse(String resourceGroupName, String name,
        String namespaceName, String relayName, String slot, HybridConnectionInner connectionEnvelope, Context context);

    /**
     * Creates a new Hybrid Connection using a Service Bus relay.
     * 
     * Description for Creates a new Hybrid Connection using a Service Bus relay.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param namespaceName The namespace for this hybrid connection.
     * @param relayName The relay name for this hybrid connection.
     * @param slot The name of the slot for the web app.
     * @param connectionEnvelope The details of the hybrid connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract.
     */
    HybridConnection updateHybridConnectionSlot(String resourceGroupName, String name, String namespaceName,
        String relayName, String slot, HybridConnectionInner connectionEnvelope);

    /**
     * Retrieves all Service Bus Hybrid Connections used by this Web App.
     * 
     * Description for Retrieves all Service Bus Hybrid Connections used by this Web App.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for the web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract along with {@link Response}.
     */
    Response<HybridConnection> listHybridConnectionsSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Retrieves all Service Bus Hybrid Connections used by this Web App.
     * 
     * Description for Retrieves all Service Bus Hybrid Connections used by this Web App.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for the web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract.
     */
    HybridConnection listHybridConnectionsSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets hybrid connections configured for an app (or deployment slot, if specified).
     * 
     * Description for Gets hybrid connections configured for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get hybrid connections for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app along with {@link Response}.
     */
    Response<RelayServiceConnectionEntity> listRelayServiceConnectionsSlotWithResponse(String resourceGroupName,
        String name, String slot, Context context);

    /**
     * Gets hybrid connections configured for an app (or deployment slot, if specified).
     * 
     * Description for Gets hybrid connections configured for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get hybrid connections for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app.
     */
    RelayServiceConnectionEntity listRelayServiceConnectionsSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets a hybrid connection configuration by its name.
     * 
     * Description for Gets a hybrid connection configuration by its name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get a hybrid connection for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app along with {@link Response}.
     */
    Response<RelayServiceConnectionEntity> getRelayServiceConnectionSlotWithResponse(String resourceGroupName,
        String name, String entityName, String slot, Context context);

    /**
     * Gets a hybrid connection configuration by its name.
     * 
     * Description for Gets a hybrid connection configuration by its name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get a hybrid connection for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app.
     */
    RelayServiceConnectionEntity getRelayServiceConnectionSlot(String resourceGroupName, String name, String entityName,
        String slot);

    /**
     * Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).
     * 
     * Description for Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection configuration.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create or update a hybrid
     * connection for the production slot.
     * @param connectionEnvelope Details of the hybrid connection configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app along with {@link Response}.
     */
    Response<RelayServiceConnectionEntity> createOrUpdateRelayServiceConnectionSlotWithResponse(
        String resourceGroupName, String name, String entityName, String slot,
        RelayServiceConnectionEntityInner connectionEnvelope, Context context);

    /**
     * Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).
     * 
     * Description for Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection configuration.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create or update a hybrid
     * connection for the production slot.
     * @param connectionEnvelope Details of the hybrid connection configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app.
     */
    RelayServiceConnectionEntity createOrUpdateRelayServiceConnectionSlot(String resourceGroupName, String name,
        String entityName, String slot, RelayServiceConnectionEntityInner connectionEnvelope);

    /**
     * Deletes a relay service connection by its name.
     * 
     * Description for Deletes a relay service connection by its name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection configuration.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete a hybrid connection for
     * the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteRelayServiceConnectionSlotWithResponse(String resourceGroupName, String name,
        String entityName, String slot, Context context);

    /**
     * Deletes a relay service connection by its name.
     * 
     * Description for Deletes a relay service connection by its name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection configuration.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete a hybrid connection for
     * the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteRelayServiceConnectionSlot(String resourceGroupName, String name, String entityName, String slot);

    /**
     * Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).
     * 
     * Description for Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection configuration.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create or update a hybrid
     * connection for the production slot.
     * @param connectionEnvelope Details of the hybrid connection configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app along with {@link Response}.
     */
    Response<RelayServiceConnectionEntity> updateRelayServiceConnectionSlotWithResponse(String resourceGroupName,
        String name, String entityName, String slot, RelayServiceConnectionEntityInner connectionEnvelope,
        Context context);

    /**
     * Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).
     * 
     * Description for Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param entityName Name of the hybrid connection configuration.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create or update a hybrid
     * connection for the production slot.
     * @param connectionEnvelope Details of the hybrid connection configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app.
     */
    RelayServiceConnectionEntity updateRelayServiceConnectionSlot(String resourceGroupName, String name,
        String entityName, String slot, RelayServiceConnectionEntityInner connectionEnvelope);

    /**
     * Gets all scale-out instances of an app.
     * 
     * Description for Gets all scale-out instances of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API gets the production slot instances.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of app instances as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WebSiteInstanceStatus> listInstanceIdentifiersSlot(String resourceGroupName, String name,
        String slot);

    /**
     * Gets all scale-out instances of an app.
     * 
     * Description for Gets all scale-out instances of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API gets the production slot instances.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of app instances as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WebSiteInstanceStatus> listInstanceIdentifiersSlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets all scale-out instances of an app.
     * 
     * Description for Gets all scale-out instances of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param instanceId The instanceId parameter.
     * @param slot Name of the deployment slot. If a slot is not specified, the API gets the production slot instances.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<WebSiteInstanceStatus> getInstanceInfoSlotWithResponse(String resourceGroupName, String name,
        String instanceId, String slot, Context context);

    /**
     * Gets all scale-out instances of an app.
     * 
     * Description for Gets all scale-out instances of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param instanceId The instanceId parameter.
     * @param slot Name of the deployment slot. If a slot is not specified, the API gets the production slot instances.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    WebSiteInstanceStatus getInstanceInfoSlot(String resourceGroupName, String name, String instanceId, String slot);

    /**
     * Get the status of the last MSDeploy operation.
     * 
     * Description for Get the status of the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param instanceId ID of web app instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response along with {@link Response}.
     */
    Response<MSDeployStatus> getInstanceMsDeployStatusSlotWithResponse(String resourceGroupName, String name,
        String slot, String instanceId, Context context);

    /**
     * Get the status of the last MSDeploy operation.
     * 
     * Description for Get the status of the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param instanceId ID of web app instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus getInstanceMsDeployStatusSlot(String resourceGroupName, String name, String slot, String instanceId);

    /**
     * Invoke the MSDeploy web app extension.
     * 
     * Description for Invoke the MSDeploy web app extension.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param instanceId ID of web app instance.
     * @param mSDeploy Details of MSDeploy operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus createInstanceMSDeployOperationSlot(String resourceGroupName, String name, String slot,
        String instanceId, MSDeploy mSDeploy);

    /**
     * Invoke the MSDeploy web app extension.
     * 
     * Description for Invoke the MSDeploy web app extension.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param instanceId ID of web app instance.
     * @param mSDeploy Details of MSDeploy operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy ARM response.
     */
    MSDeployStatus createInstanceMSDeployOperationSlot(String resourceGroupName, String name, String slot,
        String instanceId, MSDeploy mSDeploy, Context context);

    /**
     * Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * Description for Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param instanceId ID of web app instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy log along with {@link Response}.
     */
    Response<MSDeployLog> getInstanceMSDeployLogSlotWithResponse(String resourceGroupName, String name, String slot,
        String instanceId, Context context);

    /**
     * Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * Description for Get the MSDeploy Log for the last MSDeploy operation.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param instanceId ID of web app instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mSDeploy log.
     */
    MSDeployLog getInstanceMSDeployLogSlot(String resourceGroupName, String name, String slot, String instanceId);

    /**
     * Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.
     * 
     * Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance
     * in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu process information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessInfo> listInstanceProcessesSlot(String resourceGroupName, String name, String slot,
        String instanceId);

    /**
     * Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.
     * 
     * Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance
     * in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu process information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessInfo> listInstanceProcessesSlot(String resourceGroupName, String name, String slot,
        String instanceId, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Information along with {@link Response}.
     */
    Response<ProcessInfo> getInstanceProcessSlotWithResponse(String resourceGroupName, String name, String processId,
        String slot, String instanceId, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Information.
     */
    ProcessInfo getInstanceProcessSlot(String resourceGroupName, String name, String processId, String slot,
        String instanceId);

    /**
     * Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web
     * site.
     * 
     * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out
     * instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteInstanceProcessSlotWithResponse(String resourceGroupName, String name, String processId,
        String slot, String instanceId, Context context);

    /**
     * Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web
     * site.
     * 
     * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out
     * instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteInstanceProcessSlot(String resourceGroupName, String name, String processId, String slot,
        String instanceId);

    /**
     * Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<BinaryData> getInstanceProcessDumpSlotWithResponse(String resourceGroupName, String name, String processId,
        String slot, String instanceId, Context context);

    /**
     * Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    BinaryData getInstanceProcessDumpSlot(String resourceGroupName, String name, String processId, String slot,
        String instanceId);

    /**
     * List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessModuleInfo> listInstanceProcessModulesSlot(String resourceGroupName, String name,
        String processId, String slot, String instanceId);

    /**
     * List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessModuleInfo> listInstanceProcessModulesSlot(String resourceGroupName, String name,
        String processId, String slot, String instanceId, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param baseAddress Module base address.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Module Information along with {@link Response}.
     */
    Response<ProcessModuleInfo> getInstanceProcessModuleSlotWithResponse(String resourceGroupName, String name,
        String processId, String baseAddress, String slot, String instanceId, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param baseAddress Module base address.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Module Information.
     */
    ProcessModuleInfo getInstanceProcessModuleSlot(String resourceGroupName, String name, String processId,
        String baseAddress, String slot, String instanceId);

    /**
     * List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessThreadInfo> listInstanceProcessThreadsSlot(String resourceGroupName, String name,
        String processId, String slot, String instanceId);

    /**
     * List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in the JSON
     * response from "GET api/sites/{siteName}/instances".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessThreadInfo> listInstanceProcessThreadsSlot(String resourceGroupName, String name,
        String processId, String slot, String instanceId, Context context);

    /**
     * Shows whether an app can be cloned to another resource group or subscription.
     * 
     * Description for Shows whether an app can be cloned to another resource group or subscription.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. By default, this API returns information on the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents whether or not an app is cloneable along with {@link Response}.
     */
    Response<SiteCloneability> isCloneableSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Shows whether an app can be cloned to another resource group or subscription.
     * 
     * Description for Shows whether an app can be cloned to another resource group or subscription.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. By default, this API returns information on the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents whether or not an app is cloneable.
     */
    SiteCloneability isCloneableSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets existing backups of an app.
     * 
     * Description for Gets existing backups of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get backups of the production
     * slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of backup items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BackupItem> listSiteBackupsSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets existing backups of an app.
     * 
     * Description for Gets existing backups of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get backups of the production
     * slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of backup items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BackupItem> listSiteBackupsSlot(String resourceGroupName, String name, String slot, Context context);

    /**
     * This is to allow calling via powershell and ARM template.
     * 
     * Description for This is to allow calling via powershell and ARM template.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function secrets along with {@link Response}.
     */
    Response<FunctionSecrets> listSyncFunctionTriggersSlotWithResponse(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * This is to allow calling via powershell and ARM template.
     * 
     * Description for This is to allow calling via powershell and ARM template.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function secrets.
     */
    FunctionSecrets listSyncFunctionTriggersSlot(String resourceGroupName, String name, String slot);

    /**
     * Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled
     * 
     * Description for Returns the status of MySql in app migration, if one is active, and whether or not MySql in app
     * is enabled.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mySQL migration status along with {@link Response}.
     */
    Response<MigrateMySqlStatus> getMigrateMySqlStatusSlotWithResponse(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled
     * 
     * Description for Returns the status of MySql in app migration, if one is active, and whether or not MySql in app
     * is enabled.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mySQL migration status.
     */
    MigrateMySqlStatus getMigrateMySqlStatusSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets a Swift Virtual Network connection.
     * 
     * Description for Gets a Swift Virtual Network connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get a gateway for the
     * production slot's Virtual Network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract along with {@link Response}.
     */
    Response<SwiftVirtualNetwork> getSwiftVirtualNetworkConnectionSlotWithResponse(String resourceGroupName,
        String name, String slot, Context context);

    /**
     * Gets a Swift Virtual Network connection.
     * 
     * Description for Gets a Swift Virtual Network connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get a gateway for the
     * production slot's Virtual Network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract.
     */
    SwiftVirtualNetwork getSwiftVirtualNetworkConnectionSlot(String resourceGroupName, String name, String slot);

    /**
     * Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true when doing a GET
     * against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * Description for Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true
     * when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will add or update connections for
     * the production slot.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract along with {@link Response}.
     */
    Response<SwiftVirtualNetwork> createOrUpdateSwiftVirtualNetworkConnectionWithCheckSlotWithResponse(
        String resourceGroupName, String name, String slot, SwiftVirtualNetworkInner connectionEnvelope,
        Context context);

    /**
     * Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true when doing a GET
     * against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * Description for Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true
     * when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will add or update connections for
     * the production slot.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract.
     */
    SwiftVirtualNetwork createOrUpdateSwiftVirtualNetworkConnectionWithCheckSlot(String resourceGroupName, String name,
        String slot, SwiftVirtualNetworkInner connectionEnvelope);

    /**
     * Deletes a Swift Virtual Network connection from an app (or deployment slot).
     * 
     * Description for Deletes a Swift Virtual Network connection from an app (or deployment slot).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the connection for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteSwiftVirtualNetworkSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Deletes a Swift Virtual Network connection from an app (or deployment slot).
     * 
     * Description for Deletes a Swift Virtual Network connection from an app (or deployment slot).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the connection for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteSwiftVirtualNetworkSlot(String resourceGroupName, String name, String slot);

    /**
     * Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true when doing a GET
     * against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * Description for Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true
     * when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will add or update connections for
     * the production slot.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract along with {@link Response}.
     */
    Response<SwiftVirtualNetwork> updateSwiftVirtualNetworkConnectionWithCheckSlotWithResponse(String resourceGroupName,
        String name, String slot, SwiftVirtualNetworkInner connectionEnvelope, Context context);

    /**
     * Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true when doing a GET
     * against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * Description for Integrates this Web App with a Virtual Network. This requires that 1) "swiftSupported" is true
     * when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not
     * in use by another App Service Plan other than the one this App is in.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will add or update connections for
     * the production slot.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return swift Virtual Network Contract.
     */
    SwiftVirtualNetwork updateSwiftVirtualNetworkConnectionWithCheckSlot(String resourceGroupName, String name,
        String slot, SwiftVirtualNetworkInner connectionEnvelope);

    /**
     * Gets all network features used by the app (or deployment slot, if specified).
     * 
     * Description for Gets all network features used by the app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param view The type of view. Only "summary" is supported at this time.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get network features for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return full view of network features for an app (presently VNET integration and Hybrid Connections) along with
     * {@link Response}.
     */
    Response<NetworkFeatures> listNetworkFeaturesSlotWithResponse(String resourceGroupName, String name, String view,
        String slot, Context context);

    /**
     * Gets all network features used by the app (or deployment slot, if specified).
     * 
     * Description for Gets all network features used by the app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param view The type of view. Only "summary" is supported at this time.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get network features for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return full view of network features for an app (presently VNET integration and Hybrid Connections).
     */
    NetworkFeatures listNetworkFeaturesSlot(String resourceGroupName, String name, String view, String slot);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace along with {@link Response}.
     */
    Response<Object> getNetworkTraceOperationSlotWithResponse(String resourceGroupName, String name, String operationId,
        String slot, Context context);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object getNetworkTraceOperationSlot(String resourceGroupName, String name, String operationId, String slot);

    /**
     * Start capturing network packets for the site (To be deprecated).
     * 
     * Description for Start capturing network packets for the site (To be deprecated).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for this web app.
     * @param durationInSeconds The duration to keep capturing in seconds.
     * @param maxFrameLength The maximum frame length in bytes (Optional).
     * @param sasUrl The Blob URL to store capture file.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<String> startWebSiteNetworkTraceSlotWithResponse(String resourceGroupName, String name, String slot,
        Integer durationInSeconds, Integer maxFrameLength, String sasUrl, Context context);

    /**
     * Start capturing network packets for the site (To be deprecated).
     * 
     * Description for Start capturing network packets for the site (To be deprecated).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for this web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    String startWebSiteNetworkTraceSlot(String resourceGroupName, String name, String slot);

    /**
     * Start capturing network packets for the site.
     * 
     * Description for Start capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for this web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object startWebSiteNetworkTraceOperationSlot(String resourceGroupName, String name, String slot);

    /**
     * Start capturing network packets for the site.
     * 
     * Description for Start capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for this web app.
     * @param durationInSeconds The duration to keep capturing in seconds.
     * @param maxFrameLength The maximum frame length in bytes (Optional).
     * @param sasUrl The Blob URL to store capture file.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object startWebSiteNetworkTraceOperationSlot(String resourceGroupName, String name, String slot,
        Integer durationInSeconds, Integer maxFrameLength, String sasUrl, Context context);

    /**
     * Stop ongoing capturing network packets for the site.
     * 
     * Description for Stop ongoing capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for this web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> stopWebSiteNetworkTraceSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Stop ongoing capturing network packets for the site.
     * 
     * Description for Stop ongoing capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for this web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stopWebSiteNetworkTraceSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace along with {@link Response}.
     */
    Response<List<NetworkTrace>> getNetworkTracesSlotWithResponse(String resourceGroupName, String name,
        String operationId, String slot, Context context);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    List<NetworkTrace> getNetworkTracesSlot(String resourceGroupName, String name, String operationId, String slot);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace along with {@link Response}.
     */
    Response<Object> getNetworkTraceOperationSlotV2WithResponse(String resourceGroupName, String name,
        String operationId, String slot, Context context);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object getNetworkTraceOperationSlotV2(String resourceGroupName, String name, String operationId, String slot);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace along with {@link Response}.
     */
    Response<List<NetworkTrace>> getNetworkTracesSlotV2WithResponse(String resourceGroupName, String name,
        String operationId, String slot, Context context);

    /**
     * Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param operationId GUID of the operation.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    List<NetworkTrace> getNetworkTracesSlotV2(String resourceGroupName, String name, String operationId, String slot);

    /**
     * Generates a new publishing password for an app (or deployment slot, if specified).
     * 
     * Description for Generates a new publishing password for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API generate a new publishing password
     * for the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> generateNewSitePublishingPasswordSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Generates a new publishing password for an app (or deployment slot, if specified).
     * 
     * Description for Generates a new publishing password for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API generate a new publishing password
     * for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void generateNewSitePublishingPasswordSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets perfmon counters for web app.
     * 
     * Description for Gets perfmon counters for web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of performance monitor counters as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PerfMonResponse> listPerfMonCountersSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets perfmon counters for web app.
     * 
     * Description for Gets perfmon counters for web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param filter Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
     * $filter=(startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
     * duration'[Hour|Minute|Day]'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of performance monitor counters as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PerfMonResponse> listPerfMonCountersSlot(String resourceGroupName, String name, String slot,
        String filter, Context context);

    /**
     * Gets web app's event logs.
     * 
     * Description for Gets web app's event logs.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return used for getting PHP error logging flag along with {@link Response}.
     */
    Response<SitePhpErrorLogFlag> getSitePhpErrorLogFlagSlotWithResponse(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Gets web app's event logs.
     * 
     * Description for Gets web app's event logs.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return used for getting PHP error logging flag.
     */
    SitePhpErrorLogFlag getSitePhpErrorLogFlagSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets the premier add-ons of an app.
     * 
     * Description for Gets the premier add-ons of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the premier add-ons for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on along with {@link Response}.
     */
    Response<PremierAddOn> listPremierAddOnsSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets the premier add-ons of an app.
     * 
     * Description for Gets the premier add-ons of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the premier add-ons for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on.
     */
    PremierAddOn listPremierAddOnsSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets a named add-on of an app.
     * 
     * Description for Gets a named add-on of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the named add-on for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on along with {@link Response}.
     */
    Response<PremierAddOn> getPremierAddOnSlotWithResponse(String resourceGroupName, String name,
        String premierAddOnName, String slot, Context context);

    /**
     * Gets a named add-on of an app.
     * 
     * Description for Gets a named add-on of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the named add-on for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on.
     */
    PremierAddOn getPremierAddOnSlot(String resourceGroupName, String name, String premierAddOnName, String slot);

    /**
     * Updates a named add-on of an app.
     * 
     * Description for Updates a named add-on of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the named add-on for the
     * production slot.
     * @param premierAddOn A JSON representation of the edited premier add-on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on along with {@link Response}.
     */
    Response<PremierAddOn> addPremierAddOnSlotWithResponse(String resourceGroupName, String name,
        String premierAddOnName, String slot, PremierAddOnInner premierAddOn, Context context);

    /**
     * Updates a named add-on of an app.
     * 
     * Description for Updates a named add-on of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the named add-on for the
     * production slot.
     * @param premierAddOn A JSON representation of the edited premier add-on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on.
     */
    PremierAddOn addPremierAddOnSlot(String resourceGroupName, String name, String premierAddOnName, String slot,
        PremierAddOnInner premierAddOn);

    /**
     * Delete a premier add-on from an app.
     * 
     * Description for Delete a premier add-on from an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the named add-on for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deletePremierAddOnSlotWithResponse(String resourceGroupName, String name, String premierAddOnName,
        String slot, Context context);

    /**
     * Delete a premier add-on from an app.
     * 
     * Description for Delete a premier add-on from an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the named add-on for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deletePremierAddOnSlot(String resourceGroupName, String name, String premierAddOnName, String slot);

    /**
     * Updates a named add-on of an app.
     * 
     * Description for Updates a named add-on of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the named add-on for the
     * production slot.
     * @param premierAddOn A JSON representation of the edited premier add-on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on along with {@link Response}.
     */
    Response<PremierAddOn> updatePremierAddOnSlotWithResponse(String resourceGroupName, String name,
        String premierAddOnName, String slot, PremierAddOnPatchResource premierAddOn, Context context);

    /**
     * Updates a named add-on of an app.
     * 
     * Description for Updates a named add-on of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param premierAddOnName Add-on name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the named add-on for the
     * production slot.
     * @param premierAddOn A JSON representation of the edited premier add-on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on.
     */
    PremierAddOn updatePremierAddOnSlot(String resourceGroupName, String name, String premierAddOnName, String slot,
        PremierAddOnPatchResource premierAddOn);

    /**
     * Gets data around private site access enablement and authorized Virtual Networks that can access the site.
     * 
     * Description for Gets data around private site access enablement and authorized Virtual Networks that can access
     * the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for the web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of the parameters of Private Access for a Web Site along with {@link Response}.
     */
    Response<PrivateAccess> getPrivateAccessSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets data around private site access enablement and authorized Virtual Networks that can access the site.
     * 
     * Description for Gets data around private site access enablement and authorized Virtual Networks that can access
     * the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for the web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of the parameters of Private Access for a Web Site.
     */
    PrivateAccess getPrivateAccessSlot(String resourceGroupName, String name, String slot);

    /**
     * Sets data around private site access enablement and authorized Virtual Networks that can access the site.
     * 
     * Description for Sets data around private site access enablement and authorized Virtual Networks that can access
     * the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for the web app.
     * @param access The information for the private access.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of the parameters of Private Access for a Web Site along with {@link Response}.
     */
    Response<PrivateAccess> putPrivateAccessVnetSlotWithResponse(String resourceGroupName, String name, String slot,
        PrivateAccessInner access, Context context);

    /**
     * Sets data around private site access enablement and authorized Virtual Networks that can access the site.
     * 
     * Description for Sets data around private site access enablement and authorized Virtual Networks that can access
     * the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for the web app.
     * @param access The information for the private access.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of the parameters of Private Access for a Web Site.
     */
    PrivateAccess putPrivateAccessVnetSlot(String resourceGroupName, String name, String slot,
        PrivateAccessInner access);

    /**
     * Gets the list of private endpoint connections associated with a site
     * 
     * Description for Gets the list of private endpoint connections associated with a site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param slot Name of the site deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<RemotePrivateEndpointConnectionArmResource>
        getPrivateEndpointConnectionListSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets the list of private endpoint connections associated with a site
     * 
     * Description for Gets the list of private endpoint connections associated with a site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param slot Name of the site deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<RemotePrivateEndpointConnectionArmResource>
        getPrivateEndpointConnectionListSlot(String resourceGroupName, String name, String slot, Context context);

    /**
     * Gets a private endpoint connection
     * 
     * Description for Gets a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName Name of the private endpoint connection.
     * @param slot Name of the site deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remote Private Endpoint Connection ARM resource along with {@link Response}.
     */
    Response<RemotePrivateEndpointConnectionArmResource> getPrivateEndpointConnectionSlotWithResponse(
        String resourceGroupName, String name, String privateEndpointConnectionName, String slot, Context context);

    /**
     * Gets a private endpoint connection
     * 
     * Description for Gets a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName Name of the private endpoint connection.
     * @param slot Name of the site deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remote Private Endpoint Connection ARM resource.
     */
    RemotePrivateEndpointConnectionArmResource getPrivateEndpointConnectionSlot(String resourceGroupName, String name,
        String privateEndpointConnectionName, String slot);

    /**
     * Approves or rejects a private endpoint connection
     * 
     * Description for Approves or rejects a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName The privateEndpointConnectionName parameter.
     * @param slot The slot parameter.
     * @param privateEndpointWrapper Remote Private Endpoint Connection ARM resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remote Private Endpoint Connection ARM resource.
     */
    RemotePrivateEndpointConnectionArmResource approveOrRejectPrivateEndpointConnectionSlot(String resourceGroupName,
        String name, String privateEndpointConnectionName, String slot,
        RemotePrivateEndpointConnectionArmResourceInner privateEndpointWrapper);

    /**
     * Approves or rejects a private endpoint connection
     * 
     * Description for Approves or rejects a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName The privateEndpointConnectionName parameter.
     * @param slot The slot parameter.
     * @param privateEndpointWrapper Remote Private Endpoint Connection ARM resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remote Private Endpoint Connection ARM resource.
     */
    RemotePrivateEndpointConnectionArmResource approveOrRejectPrivateEndpointConnectionSlot(String resourceGroupName,
        String name, String privateEndpointConnectionName, String slot,
        RemotePrivateEndpointConnectionArmResourceInner privateEndpointWrapper, Context context);

    /**
     * Deletes a private endpoint connection
     * 
     * Description for Deletes a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName The privateEndpointConnectionName parameter.
     * @param slot The slot parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object deletePrivateEndpointConnectionSlot(String resourceGroupName, String name,
        String privateEndpointConnectionName, String slot);

    /**
     * Deletes a private endpoint connection
     * 
     * Description for Deletes a private endpoint connection.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param privateEndpointConnectionName The privateEndpointConnectionName parameter.
     * @param slot The slot parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object deletePrivateEndpointConnectionSlot(String resourceGroupName, String name,
        String privateEndpointConnectionName, String slot, Context context);

    /**
     * Gets the private link resources
     * 
     * Description for Gets the private link resources.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param slot The slot parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return wrapper for a collection of private link resources along with {@link Response}.
     */
    Response<PrivateLinkResourcesWrapper> getPrivateLinkResourcesSlotWithResponse(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Gets the private link resources
     * 
     * Description for Gets the private link resources.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the site.
     * @param slot The slot parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return wrapper for a collection of private link resources.
     */
    PrivateLinkResourcesWrapper getPrivateLinkResourcesSlot(String resourceGroupName, String name, String slot);

    /**
     * Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.
     * 
     * Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance
     * in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu process information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessInfo> listProcessesSlot(String resourceGroupName, String name, String slot);

    /**
     * Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.
     * 
     * Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance
     * in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu process information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessInfo> listProcessesSlot(String resourceGroupName, String name, String slot, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Information along with {@link Response}.
     */
    Response<ProcessInfo> getProcessSlotWithResponse(String resourceGroupName, String name, String processId,
        String slot, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Information.
     */
    ProcessInfo getProcessSlot(String resourceGroupName, String name, String processId, String slot);

    /**
     * Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web
     * site.
     * 
     * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out
     * instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteProcessSlotWithResponse(String resourceGroupName, String name, String processId, String slot,
        Context context);

    /**
     * Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web
     * site.
     * 
     * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out
     * instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteProcessSlot(String resourceGroupName, String name, String processId, String slot);

    /**
     * Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<BinaryData> getProcessDumpSlotWithResponse(String resourceGroupName, String name, String processId,
        String slot, Context context);

    /**
     * Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    BinaryData getProcessDumpSlot(String resourceGroupName, String name, String processId, String slot);

    /**
     * List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessModuleInfo> listProcessModulesSlot(String resourceGroupName, String name, String processId,
        String slot);

    /**
     * List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List module information for a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessModuleInfo> listProcessModulesSlot(String resourceGroupName, String name, String processId,
        String slot, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param baseAddress Module base address.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Module Information along with {@link Response}.
     */
    Response<ProcessModuleInfo> getProcessModuleSlotWithResponse(String resourceGroupName, String name,
        String processId, String baseAddress, String slot, Context context);

    /**
     * Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for Get process information by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param baseAddress Module base address.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return process Module Information.
     */
    ProcessModuleInfo getProcessModuleSlot(String resourceGroupName, String name, String processId, String baseAddress,
        String slot);

    /**
     * List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessThreadInfo> listProcessThreadsSlot(String resourceGroupName, String name, String processId,
        String slot);

    /**
     * List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param processId PID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu thread information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ProcessThreadInfo> listProcessThreadsSlot(String resourceGroupName, String name, String processId,
        String slot, Context context);

    /**
     * Get public certificates for an app or a deployment slot.
     * 
     * Description for Get public certificates for an app or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API gets hostname bindings for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of public certificates as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PublicCertificate> listPublicCertificatesSlot(String resourceGroupName, String name, String slot);

    /**
     * Get public certificates for an app or a deployment slot.
     * 
     * Description for Get public certificates for an app or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API gets hostname bindings for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of public certificates as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PublicCertificate> listPublicCertificatesSlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * Description for Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API the named binding for the production
     * slot.
     * @param publicCertificateName Public certificate name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public certificate object along with {@link Response}.
     */
    Response<PublicCertificate> getPublicCertificateSlotWithResponse(String resourceGroupName, String name, String slot,
        String publicCertificateName, Context context);

    /**
     * Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * Description for Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API the named binding for the production
     * slot.
     * @param publicCertificateName Public certificate name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public certificate object.
     */
    PublicCertificate getPublicCertificateSlot(String resourceGroupName, String name, String slot,
        String publicCertificateName);

    /**
     * Creates a hostname binding for an app.
     * 
     * Description for Creates a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param publicCertificateName Public certificate name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create a binding for the
     * production slot.
     * @param publicCertificate Public certificate details. This is the JSON representation of a PublicCertificate
     * object.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public certificate object along with {@link Response}.
     */
    Response<PublicCertificate> createOrUpdatePublicCertificateSlotWithResponse(String resourceGroupName, String name,
        String publicCertificateName, String slot, PublicCertificateInner publicCertificate, Context context);

    /**
     * Creates a hostname binding for an app.
     * 
     * Description for Creates a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param publicCertificateName Public certificate name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create a binding for the
     * production slot.
     * @param publicCertificate Public certificate details. This is the JSON representation of a PublicCertificate
     * object.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public certificate object.
     */
    PublicCertificate createOrUpdatePublicCertificateSlot(String resourceGroupName, String name,
        String publicCertificateName, String slot, PublicCertificateInner publicCertificate);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @param publicCertificateName Public certificate name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deletePublicCertificateSlotWithResponse(String resourceGroupName, String name, String slot,
        String publicCertificateName, Context context);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding for the
     * production slot.
     * @param publicCertificateName Public certificate name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deletePublicCertificateSlot(String resourceGroupName, String name, String slot, String publicCertificateName);

    /**
     * Gets the publishing profile for an app (or deployment slot, if specified).
     * 
     * Description for Gets the publishing profile for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the publishing profile for
     * the production slot.
     * @param publishingProfileOptions Specifies publishingProfileOptions for publishing profile. For example, use
     * {"format": "FileZilla3"} to get a FileZilla publishing profile.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<BinaryData> listPublishingProfileXmlWithSecretsSlotWithResponse(String resourceGroupName, String name,
        String slot, CsmPublishingProfileOptions publishingProfileOptions, Context context);

    /**
     * Gets the publishing profile for an app (or deployment slot, if specified).
     * 
     * Description for Gets the publishing profile for an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the publishing profile for
     * the production slot.
     * @param publishingProfileOptions Specifies publishingProfileOptions for publishing profile. For example, use
     * {"format": "FileZilla3"} to get a FileZilla publishing profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    BinaryData listPublishingProfileXmlWithSecretsSlot(String resourceGroupName, String name, String slot,
        CsmPublishingProfileOptions publishingProfileOptions);

    /**
     * Resets the configuration settings of the current slot if they were previously modified by calling the API with
     * POST.
     * 
     * Description for Resets the configuration settings of the current slot if they were previously modified by calling
     * the API with POST.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API resets configuration settings for
     * the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> resetSlotConfigurationSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Resets the configuration settings of the current slot if they were previously modified by calling the API with
     * POST.
     * 
     * Description for Resets the configuration settings of the current slot if they were previously modified by calling
     * the API with POST.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API resets configuration settings for
     * the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void resetSlotConfigurationSlot(String resourceGroupName, String name, String slot);

    /**
     * Restarts an app (or deployment slot, if specified).
     * 
     * Description for Restarts an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will restart the production slot.
     * @param softRestart Specify true to apply the configuration settings and restarts the app only if necessary. By
     * default, the API always restarts and reprovisions the app.
     * @param synchronous Specify true to block until the app is restarted. By default, it is set to false, and the API
     * responds immediately (asynchronous).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> restartSlotWithResponse(String resourceGroupName, String name, String slot, Boolean softRestart,
        Boolean synchronous, Context context);

    /**
     * Restarts an app (or deployment slot, if specified).
     * 
     * Description for Restarts an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will restart the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restartSlot(String resourceGroupName, String name, String slot);

    /**
     * Restores an app from a backup blob in Azure Storage.
     * 
     * Description for Restores an app from a backup blob in Azure Storage.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will restore a backup of the
     * production slot.
     * @param request Information on restore request .
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreFromBackupBlobSlot(String resourceGroupName, String name, String slot, RestoreRequestInner request);

    /**
     * Restores an app from a backup blob in Azure Storage.
     * 
     * Description for Restores an app from a backup blob in Azure Storage.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will restore a backup of the
     * production slot.
     * @param request Information on restore request .
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreFromBackupBlobSlot(String resourceGroupName, String name, String slot, RestoreRequestInner request,
        Context context);

    /**
     * Restores a deleted web app to this web app.
     * 
     * Description for Restores a deleted web app to this web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param restoreRequest Deleted web app restore information.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreFromDeletedAppSlot(String resourceGroupName, String name, String slot,
        DeletedAppRestoreRequest restoreRequest);

    /**
     * Restores a deleted web app to this web app.
     * 
     * Description for Restores a deleted web app to this web app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param restoreRequest Deleted web app restore information.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreFromDeletedAppSlot(String resourceGroupName, String name, String slot,
        DeletedAppRestoreRequest restoreRequest, Context context);

    /**
     * Restores a web app from a snapshot.
     * 
     * Description for Restores a web app from a snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param restoreRequest Snapshot restore settings. Snapshot information can be obtained by calling GetDeletedSites
     * or GetSiteSnapshots API.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreSnapshotSlot(String resourceGroupName, String name, String slot, SnapshotRestoreRequest restoreRequest);

    /**
     * Restores a web app from a snapshot.
     * 
     * Description for Restores a web app from a snapshot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param restoreRequest Snapshot restore settings. Snapshot information can be obtained by calling GetDeletedSites
     * or GetSiteSnapshots API.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restoreSnapshotSlot(String resourceGroupName, String name, String slot, SnapshotRestoreRequest restoreRequest,
        Context context);

    /**
     * Lists all the site containers of a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get a list of site containers
     * for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of site containers as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteContainer> listSiteContainersSlot(String resourceGroupName, String name, String slot);

    /**
     * Lists all the site containers of a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get a list of site containers
     * for the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of site containers as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteContainer> listSiteContainersSlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets a site container of a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the Site Container for the
     * production slot.
     * @param containerName Site Container Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a site container of a site, or a deployment slot along with {@link Response}.
     */
    Response<SiteContainer> getSiteContainerSlotWithResponse(String resourceGroupName, String name, String slot,
        String containerName, Context context);

    /**
     * Gets a site container of a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the Site Container for the
     * production slot.
     * @param containerName Site Container Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a site container of a site, or a deployment slot.
     */
    SiteContainer getSiteContainerSlot(String resourceGroupName, String name, String slot, String containerName);

    /**
     * Creates or Updates a site container for a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create the container for the
     * production slot.
     * @param containerName Site Container Name.
     * @param request Container Entity.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return container of a site along with {@link Response}.
     */
    Response<SiteContainer> createOrUpdateSiteContainerSlotWithResponse(String resourceGroupName, String name,
        String slot, String containerName, SiteContainerInner request, Context context);

    /**
     * Creates or Updates a site container for a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will create the container for the
     * production slot.
     * @param containerName Site Container Name.
     * @param request Container Entity.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return container of a site.
     */
    SiteContainer createOrUpdateSiteContainerSlot(String resourceGroupName, String name, String slot,
        String containerName, SiteContainerInner request);

    /**
     * Deletes a site container for a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the container for the
     * production slot.
     * @param containerName Site Container Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteSiteContainerSlotWithResponse(String resourceGroupName, String name, String slot,
        String containerName, Context context);

    /**
     * Deletes a site container for a site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the container for the
     * production slot.
     * @param containerName Site Container Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteSiteContainerSlot(String resourceGroupName, String name, String slot, String containerName);

    /**
     * Get list of siteextensions for a web site, or a deployment slot.
     * 
     * Description for Get list of siteextensions for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu site extension information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteExtensionInfo> listSiteExtensionsSlot(String resourceGroupName, String name, String slot);

    /**
     * Get list of siteextensions for a web site, or a deployment slot.
     * 
     * Description for Get list of siteextensions for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu site extension information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SiteExtensionInfo> listSiteExtensionsSlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Get site extension information by its ID for a web site, or a deployment slot.
     * 
     * Description for Get site extension information by its ID for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site Extension Information along with {@link Response}.
     */
    Response<SiteExtensionInfo> getSiteExtensionSlotWithResponse(String resourceGroupName, String name,
        String siteExtensionId, String slot, Context context);

    /**
     * Get site extension information by its ID for a web site, or a deployment slot.
     * 
     * Description for Get site extension information by its ID for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site Extension Information.
     */
    SiteExtensionInfo getSiteExtensionSlot(String resourceGroupName, String name, String siteExtensionId, String slot);

    /**
     * Install site extension on a web site, or a deployment slot.
     * 
     * Description for Install site extension on a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 429.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site Extension Information.
     */
    SiteExtensionInfo installSiteExtensionSlot(String resourceGroupName, String name, String siteExtensionId,
        String slot);

    /**
     * Install site extension on a web site, or a deployment slot.
     * 
     * Description for Install site extension on a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 429.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site Extension Information.
     */
    SiteExtensionInfo installSiteExtensionSlot(String resourceGroupName, String name, String siteExtensionId,
        String slot, Context context);

    /**
     * Remove a site extension from a web site, or a deployment slot.
     * 
     * Description for Remove a site extension from a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteSiteExtensionSlotWithResponse(String resourceGroupName, String name, String siteExtensionId,
        String slot, Context context);

    /**
     * Remove a site extension from a web site, or a deployment slot.
     * 
     * Description for Remove a site extension from a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param siteExtensionId Site extension name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteSiteExtensionSlot(String resourceGroupName, String name, String siteExtensionId, String slot);

    /**
     * Get the difference in configuration settings between two web app slots.
     * 
     * Description for Get the difference in configuration settings between two web app slots.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the source slot.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of slot differences as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SlotDifference> listSlotDifferencesSlot(String resourceGroupName, String name, String slot,
        CsmSlotEntity slotSwapEntity);

    /**
     * Get the difference in configuration settings between two web app slots.
     * 
     * Description for Get the difference in configuration settings between two web app slots.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the source slot.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of slot differences as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SlotDifference> listSlotDifferencesSlot(String resourceGroupName, String name, String slot,
        CsmSlotEntity slotSwapEntity, Context context);

    /**
     * Swaps two deployment slots of an app.
     * 
     * Description for Swaps two deployment slots of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the source slot.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void swapSlot(String resourceGroupName, String name, String slot, CsmSlotEntity slotSwapEntity);

    /**
     * Swaps two deployment slots of an app.
     * 
     * Description for Swaps two deployment slots of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the source slot.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void swapSlot(String resourceGroupName, String name, String slot, CsmSlotEntity slotSwapEntity, Context context);

    /**
     * Returns all Snapshots to the user.
     * 
     * Description for Returns all Snapshots to the user.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Website Name.
     * @param slot Website Slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of snapshots which can be used to revert an app to a previous time as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<Snapshot> listSnapshotsSlot(String resourceGroupName, String name, String slot);

    /**
     * Returns all Snapshots to the user.
     * 
     * Description for Returns all Snapshots to the user.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Website Name.
     * @param slot Website Slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of snapshots which can be used to revert an app to a previous time as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<Snapshot> listSnapshotsSlot(String resourceGroupName, String name, String slot, Context context);

    /**
     * Returns all Snapshots to the user from DRSecondary endpoint.
     * 
     * Description for Returns all Snapshots to the user from DRSecondary endpoint.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Website Name.
     * @param slot Website Slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of snapshots which can be used to revert an app to a previous time as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<Snapshot> listSnapshotsFromDRSecondarySlot(String resourceGroupName, String name, String slot);

    /**
     * Returns all Snapshots to the user from DRSecondary endpoint.
     * 
     * Description for Returns all Snapshots to the user from DRSecondary endpoint.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Website Name.
     * @param slot Website Slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of snapshots which can be used to revert an app to a previous time as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<Snapshot> listSnapshotsFromDRSecondarySlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets the source control configuration of an app.
     * 
     * Description for Gets the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the source control
     * configuration for the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app along with {@link Response}.
     */
    Response<SiteSourceControl> getSourceControlSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets the source control configuration of an app.
     * 
     * Description for Gets the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the source control
     * configuration for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app.
     */
    SiteSourceControl getSourceControlSlot(String resourceGroupName, String name, String slot);

    /**
     * Updates the source control configuration of an app.
     * 
     * Description for Updates the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the source control
     * configuration for the production slot.
     * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app.
     */
    SiteSourceControl createOrUpdateSourceControlSlot(String resourceGroupName, String name, String slot,
        SiteSourceControlInner siteSourceControl);

    /**
     * Updates the source control configuration of an app.
     * 
     * Description for Updates the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the source control
     * configuration for the production slot.
     * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app.
     */
    SiteSourceControl createOrUpdateSourceControlSlot(String resourceGroupName, String name, String slot,
        SiteSourceControlInner siteSourceControl, Context context);

    /**
     * Deletes the source control configuration of an app.
     * 
     * Description for Deletes the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the source control
     * configuration for the production slot.
     * @param additionalFlags The additionalFlags parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteSourceControlSlotWithResponse(String resourceGroupName, String name, String slot,
        String additionalFlags, Context context);

    /**
     * Deletes the source control configuration of an app.
     * 
     * Description for Deletes the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the source control
     * configuration for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteSourceControlSlot(String resourceGroupName, String name, String slot);

    /**
     * Updates the source control configuration of an app.
     * 
     * Description for Updates the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the source control
     * configuration for the production slot.
     * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app along with {@link Response}.
     */
    Response<SiteSourceControl> updateSourceControlSlotWithResponse(String resourceGroupName, String name, String slot,
        SiteSourceControlInner siteSourceControl, Context context);

    /**
     * Updates the source control configuration of an app.
     * 
     * Description for Updates the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will update the source control
     * configuration for the production slot.
     * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app.
     */
    SiteSourceControl updateSourceControlSlot(String resourceGroupName, String name, String slot,
        SiteSourceControlInner siteSourceControl);

    /**
     * Starts an app (or deployment slot, if specified).
     * 
     * Description for Starts an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will start the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> startSlotWithResponse(String resourceGroupName, String name, String slot, Context context);

    /**
     * Starts an app (or deployment slot, if specified).
     * 
     * Description for Starts an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will start the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void startSlot(String resourceGroupName, String name, String slot);

    /**
     * Start capturing network packets for the site.
     * 
     * Description for Start capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for this web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object startNetworkTraceSlot(String resourceGroupName, String name, String slot);

    /**
     * Start capturing network packets for the site.
     * 
     * Description for Start capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for this web app.
     * @param durationInSeconds The duration to keep capturing in seconds.
     * @param maxFrameLength The maximum frame length in bytes (Optional).
     * @param sasUrl The Blob URL to store capture file.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object startNetworkTraceSlot(String resourceGroupName, String name, String slot, Integer durationInSeconds,
        Integer maxFrameLength, String sasUrl, Context context);

    /**
     * Stops an app (or deployment slot, if specified).
     * 
     * Description for Stops an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will stop the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> stopSlotWithResponse(String resourceGroupName, String name, String slot, Context context);

    /**
     * Stops an app (or deployment slot, if specified).
     * 
     * Description for Stops an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will stop the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stopSlot(String resourceGroupName, String name, String slot);

    /**
     * Stop ongoing capturing network packets for the site.
     * 
     * Description for Stop ongoing capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for this web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> stopNetworkTraceSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Stop ongoing capturing network packets for the site.
     * 
     * Description for Stop ongoing capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param slot The name of the slot for this web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stopNetworkTraceSlot(String resourceGroupName, String name, String slot);

    /**
     * Sync web app repository.
     * 
     * Description for Sync web app repository.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> syncRepositorySlotWithResponse(String resourceGroupName, String name, String slot, Context context);

    /**
     * Sync web app repository.
     * 
     * Description for Sync web app repository.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void syncRepositorySlot(String resourceGroupName, String name, String slot);

    /**
     * Syncs function trigger metadata to the management database
     * 
     * Description for Syncs function trigger metadata to the management database.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> syncFunctionTriggersSlotWithResponse(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Syncs function trigger metadata to the management database
     * 
     * Description for Syncs function trigger metadata to the management database.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void syncFunctionTriggersSlot(String resourceGroupName, String name, String slot);

    /**
     * List triggered web jobs for an app, or a deployment slot.
     * 
     * Description for List triggered web jobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<TriggeredWebJob> listTriggeredWebJobsSlot(String resourceGroupName, String name, String slot);

    /**
     * List triggered web jobs for an app, or a deployment slot.
     * 
     * Description for List triggered web jobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<TriggeredWebJob> listTriggeredWebJobsSlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Gets a triggered web job by its ID for an app, or a deployment slot.
     * 
     * Description for Gets a triggered web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return triggered Web Job Information along with {@link Response}.
     */
    Response<TriggeredWebJob> getTriggeredWebJobSlotWithResponse(String resourceGroupName, String name,
        String webJobName, String slot, Context context);

    /**
     * Gets a triggered web job by its ID for an app, or a deployment slot.
     * 
     * Description for Gets a triggered web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return triggered Web Job Information.
     */
    TriggeredWebJob getTriggeredWebJobSlot(String resourceGroupName, String name, String webJobName, String slot);

    /**
     * Delete a triggered web job by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a triggered web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes web job for the production
     * slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteTriggeredWebJobSlotWithResponse(String resourceGroupName, String name, String webJobName,
        String slot, Context context);

    /**
     * Delete a triggered web job by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a triggered web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API deletes web job for the production
     * slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteTriggeredWebJobSlot(String resourceGroupName, String name, String webJobName, String slot);

    /**
     * List a triggered web job's history for an app, or a deployment slot.
     * 
     * Description for List a triggered web job's history for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<TriggeredJobHistory> listTriggeredWebJobHistorySlot(String resourceGroupName, String name,
        String webJobName, String slot);

    /**
     * List a triggered web job's history for an app, or a deployment slot.
     * 
     * Description for List a triggered web job's history for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<TriggeredJobHistory> listTriggeredWebJobHistorySlot(String resourceGroupName, String name,
        String webJobName, String slot, Context context);

    /**
     * Gets a triggered web job's history by its ID for an app, , or a deployment slot.
     * 
     * Description for Gets a triggered web job's history by its ID for an app, , or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param id History ID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return triggered Web Job History along with {@link Response}.
     */
    Response<TriggeredJobHistory> getTriggeredWebJobHistorySlotWithResponse(String resourceGroupName, String name,
        String webJobName, String id, String slot, Context context);

    /**
     * Gets a triggered web job's history by its ID for an app, , or a deployment slot.
     * 
     * Description for Gets a triggered web job's history by its ID for an app, , or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param id History ID.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return triggered Web Job History.
     */
    TriggeredJobHistory getTriggeredWebJobHistorySlot(String resourceGroupName, String name, String webJobName,
        String id, String slot);

    /**
     * Run a triggered web job for an app, or a deployment slot.
     * 
     * Description for Run a triggered web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> runTriggeredWebJobSlotWithResponse(String resourceGroupName, String name, String webJobName,
        String slot, Context context);

    /**
     * Run a triggered web job for an app, or a deployment slot.
     * 
     * Description for Run a triggered web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void runTriggeredWebJobSlot(String resourceGroupName, String name, String webJobName, String slot);

    /**
     * Gets the quota usage information of an app (or deployment slot, if specified).
     * 
     * Description for Gets the quota usage information of an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get quota information of the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of CSM usage quotas as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CsmUsageQuota> listUsagesSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets the quota usage information of an app (or deployment slot, if specified).
     * 
     * Description for Gets the quota usage information of an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get quota information of the
     * production slot.
     * @param filter Return only information specified in the filter (using OData syntax). For example:
     * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime eq
     * 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of CSM usage quotas as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CsmUsageQuota> listUsagesSlot(String resourceGroupName, String name, String slot, String filter,
        Context context);

    /**
     * Gets the virtual networks the app (or deployment slot) is connected to.
     * 
     * Description for Gets the virtual networks the app (or deployment slot) is connected to.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get virtual network connections
     * for the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of VnetInfoResource along with {@link Response}.
     */
    Response<List<VnetInfoResource>> listVnetConnectionsSlotWithResponse(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Gets the virtual networks the app (or deployment slot) is connected to.
     * 
     * Description for Gets the virtual networks the app (or deployment slot) is connected to.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get virtual network connections
     * for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of VnetInfoResource.
     */
    List<VnetInfoResource> listVnetConnectionsSlot(String resourceGroupName, String name, String slot);

    /**
     * Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * Description for Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the virtual network.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the named virtual network
     * for the production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return virtual Network information ARM resource along with {@link Response}.
     */
    Response<VnetInfoResource> getVnetConnectionSlotWithResponse(String resourceGroupName, String name, String vnetName,
        String slot, Context context);

    /**
     * Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * Description for Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the virtual network.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get the named virtual network
     * for the production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return virtual Network information ARM resource.
     */
    VnetInfoResource getVnetConnectionSlot(String resourceGroupName, String name, String vnetName, String slot);

    /**
     * Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * Description for Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the virtual network.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the connection for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteVnetConnectionSlotWithResponse(String resourceGroupName, String name, String vnetName,
        String slot, Context context);

    /**
     * Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * Description for Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the virtual network.
     * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the connection for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteVnetConnectionSlot(String resourceGroupName, String name, String vnetName, String slot);

    /**
     * Gets an app's Virtual Network gateway.
     * 
     * Description for Gets an app's Virtual Network gateway.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the Virtual Network.
     * @param gatewayName Name of the gateway. Currently, the only supported string is "primary".
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get a gateway for the
     * production slot's Virtual Network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network gateway contract along with {@link Response}.
     */
    Response<VnetGateway> getVnetConnectionGatewaySlotWithResponse(String resourceGroupName, String name,
        String vnetName, String gatewayName, String slot, Context context);

    /**
     * Gets an app's Virtual Network gateway.
     * 
     * Description for Gets an app's Virtual Network gateway.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the Virtual Network.
     * @param gatewayName Name of the gateway. Currently, the only supported string is "primary".
     * @param slot Name of the deployment slot. If a slot is not specified, the API will get a gateway for the
     * production slot's Virtual Network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network gateway contract.
     */
    VnetGateway getVnetConnectionGatewaySlot(String resourceGroupName, String name, String vnetName, String gatewayName,
        String slot);

    /**
     * List webjobs for an app, or a deployment slot.
     * 
     * Description for List webjobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu web job information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WebJob> listWebJobsSlot(String resourceGroupName, String name, String slot);

    /**
     * List webjobs for an app, or a deployment slot.
     * 
     * Description for List webjobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu web job information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WebJob> listWebJobsSlot(String resourceGroupName, String name, String slot, Context context);

    /**
     * Get webjob information for an app, or a deployment slot.
     * 
     * Description for Get webjob information for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of the web job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web Job Information along with {@link Response}.
     */
    Response<WebJob> getWebJobSlotWithResponse(String resourceGroupName, String name, String webJobName, String slot,
        Context context);

    /**
     * Get webjob information for an app, or a deployment slot.
     * 
     * Description for Get webjob information for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of the web job.
     * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for the
     * production slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web Job Information.
     */
    WebJob getWebJobSlot(String resourceGroupName, String name, String webJobName, String slot);

    /**
     * Get the difference in configuration settings between two web app slots.
     * 
     * Description for Get the difference in configuration settings between two web app slots.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of slot differences as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SlotDifference> listSlotDifferencesFromProduction(String resourceGroupName, String name,
        CsmSlotEntity slotSwapEntity);

    /**
     * Get the difference in configuration settings between two web app slots.
     * 
     * Description for Get the difference in configuration settings between two web app slots.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of slot differences as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SlotDifference> listSlotDifferencesFromProduction(String resourceGroupName, String name,
        CsmSlotEntity slotSwapEntity, Context context);

    /**
     * Swaps two deployment slots of an app.
     * 
     * Description for Swaps two deployment slots of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void swapSlotWithProduction(String resourceGroupName, String name, CsmSlotEntity slotSwapEntity);

    /**
     * Swaps two deployment slots of an app.
     * 
     * Description for Swaps two deployment slots of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param slotSwapEntity JSON object that contains the target slot name. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void swapSlotWithProduction(String resourceGroupName, String name, CsmSlotEntity slotSwapEntity, Context context);

    /**
     * Returns all Snapshots to the user.
     * 
     * Description for Returns all Snapshots to the user.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Website Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of snapshots which can be used to revert an app to a previous time as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<Snapshot> listSnapshots(String resourceGroupName, String name);

    /**
     * Returns all Snapshots to the user.
     * 
     * Description for Returns all Snapshots to the user.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Website Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of snapshots which can be used to revert an app to a previous time as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<Snapshot> listSnapshots(String resourceGroupName, String name, Context context);

    /**
     * Returns all Snapshots to the user from DRSecondary endpoint.
     * 
     * Description for Returns all Snapshots to the user from DRSecondary endpoint.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Website Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of snapshots which can be used to revert an app to a previous time as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<Snapshot> listSnapshotsFromDRSecondary(String resourceGroupName, String name);

    /**
     * Returns all Snapshots to the user from DRSecondary endpoint.
     * 
     * Description for Returns all Snapshots to the user from DRSecondary endpoint.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Website Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of snapshots which can be used to revert an app to a previous time as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<Snapshot> listSnapshotsFromDRSecondary(String resourceGroupName, String name, Context context);

    /**
     * Gets the source control configuration of an app.
     * 
     * Description for Gets the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app along with {@link Response}.
     */
    Response<SiteSourceControl> getSourceControlWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets the source control configuration of an app.
     * 
     * Description for Gets the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app.
     */
    SiteSourceControl getSourceControl(String resourceGroupName, String name);

    /**
     * Updates the source control configuration of an app.
     * 
     * Description for Updates the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app.
     */
    SiteSourceControl createOrUpdateSourceControl(String resourceGroupName, String name,
        SiteSourceControlInner siteSourceControl);

    /**
     * Updates the source control configuration of an app.
     * 
     * Description for Updates the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app.
     */
    SiteSourceControl createOrUpdateSourceControl(String resourceGroupName, String name,
        SiteSourceControlInner siteSourceControl, Context context);

    /**
     * Deletes the source control configuration of an app.
     * 
     * Description for Deletes the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param additionalFlags The additionalFlags parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteSourceControlWithResponse(String resourceGroupName, String name, String additionalFlags,
        Context context);

    /**
     * Deletes the source control configuration of an app.
     * 
     * Description for Deletes the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteSourceControl(String resourceGroupName, String name);

    /**
     * Updates the source control configuration of an app.
     * 
     * Description for Updates the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app along with {@link Response}.
     */
    Response<SiteSourceControl> updateSourceControlWithResponse(String resourceGroupName, String name,
        SiteSourceControlInner siteSourceControl, Context context);

    /**
     * Updates the source control configuration of an app.
     * 
     * Description for Updates the source control configuration of an app.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return source control configuration for an app.
     */
    SiteSourceControl updateSourceControl(String resourceGroupName, String name,
        SiteSourceControlInner siteSourceControl);

    /**
     * Starts an app (or deployment slot, if specified).
     * 
     * Description for Starts an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> startWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Starts an app (or deployment slot, if specified).
     * 
     * Description for Starts an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void start(String resourceGroupName, String name);

    /**
     * Start capturing network packets for the site.
     * 
     * Description for Start capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object startNetworkTrace(String resourceGroupName, String name);

    /**
     * Start capturing network packets for the site.
     * 
     * Description for Start capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param durationInSeconds The duration to keep capturing in seconds.
     * @param maxFrameLength The maximum frame length in bytes (Optional).
     * @param sasUrl The Blob URL to store capture file.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of NetworkTrace.
     */
    Object startNetworkTrace(String resourceGroupName, String name, Integer durationInSeconds, Integer maxFrameLength,
        String sasUrl, Context context);

    /**
     * Stops an app (or deployment slot, if specified).
     * 
     * Description for Stops an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> stopWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Stops an app (or deployment slot, if specified).
     * 
     * Description for Stops an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stop(String resourceGroupName, String name);

    /**
     * Stop ongoing capturing network packets for the site.
     * 
     * Description for Stop ongoing capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> stopNetworkTraceWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Stop ongoing capturing network packets for the site.
     * 
     * Description for Stop ongoing capturing network packets for the site.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name The name of the web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stopNetworkTrace(String resourceGroupName, String name);

    /**
     * Sync web app repository.
     * 
     * Description for Sync web app repository.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> syncRepositoryWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Sync web app repository.
     * 
     * Description for Sync web app repository.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void syncRepository(String resourceGroupName, String name);

    /**
     * Syncs function trigger metadata to the management database
     * 
     * Description for Syncs function trigger metadata to the management database.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> syncFunctionTriggersWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Syncs function trigger metadata to the management database
     * 
     * Description for Syncs function trigger metadata to the management database.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void syncFunctionTriggers(String resourceGroupName, String name);

    /**
     * List triggered web jobs for an app, or a deployment slot.
     * 
     * Description for List triggered web jobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<TriggeredWebJob> listTriggeredWebJobs(String resourceGroupName, String name);

    /**
     * List triggered web jobs for an app, or a deployment slot.
     * 
     * Description for List triggered web jobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<TriggeredWebJob> listTriggeredWebJobs(String resourceGroupName, String name, Context context);

    /**
     * Gets a triggered web job by its ID for an app, or a deployment slot.
     * 
     * Description for Gets a triggered web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return triggered Web Job Information along with {@link Response}.
     */
    Response<TriggeredWebJob> getTriggeredWebJobWithResponse(String resourceGroupName, String name, String webJobName,
        Context context);

    /**
     * Gets a triggered web job by its ID for an app, or a deployment slot.
     * 
     * Description for Gets a triggered web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return triggered Web Job Information.
     */
    TriggeredWebJob getTriggeredWebJob(String resourceGroupName, String name, String webJobName);

    /**
     * Delete a triggered web job by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a triggered web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteTriggeredWebJobWithResponse(String resourceGroupName, String name, String webJobName,
        Context context);

    /**
     * Delete a triggered web job by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a triggered web job by its ID for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteTriggeredWebJob(String resourceGroupName, String name, String webJobName);

    /**
     * List a triggered web job's history for an app, or a deployment slot.
     * 
     * Description for List a triggered web job's history for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<TriggeredJobHistory> listTriggeredWebJobHistory(String resourceGroupName, String name,
        String webJobName);

    /**
     * List a triggered web job's history for an app, or a deployment slot.
     * 
     * Description for List a triggered web job's history for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu continuous web job information elements as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<TriggeredJobHistory> listTriggeredWebJobHistory(String resourceGroupName, String name,
        String webJobName, Context context);

    /**
     * Gets a triggered web job's history by its ID for an app, , or a deployment slot.
     * 
     * Description for Gets a triggered web job's history by its ID for an app, , or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param id History ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return triggered Web Job History along with {@link Response}.
     */
    Response<TriggeredJobHistory> getTriggeredWebJobHistoryWithResponse(String resourceGroupName, String name,
        String webJobName, String id, Context context);

    /**
     * Gets a triggered web job's history by its ID for an app, , or a deployment slot.
     * 
     * Description for Gets a triggered web job's history by its ID for an app, , or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param id History ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return triggered Web Job History.
     */
    TriggeredJobHistory getTriggeredWebJobHistory(String resourceGroupName, String name, String webJobName, String id);

    /**
     * Run a triggered web job for an app, or a deployment slot.
     * 
     * Description for Run a triggered web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> runTriggeredWebJobWithResponse(String resourceGroupName, String name, String webJobName,
        Context context);

    /**
     * Run a triggered web job for an app, or a deployment slot.
     * 
     * Description for Run a triggered web job for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of Web Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void runTriggeredWebJob(String resourceGroupName, String name, String webJobName);

    /**
     * Gets the quota usage information of an app (or deployment slot, if specified).
     * 
     * Description for Gets the quota usage information of an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of CSM usage quotas as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CsmUsageQuota> listUsages(String resourceGroupName, String name);

    /**
     * Gets the quota usage information of an app (or deployment slot, if specified).
     * 
     * Description for Gets the quota usage information of an app (or deployment slot, if specified).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param filter Return only information specified in the filter (using OData syntax). For example:
     * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime eq
     * 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of CSM usage quotas as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CsmUsageQuota> listUsages(String resourceGroupName, String name, String filter, Context context);

    /**
     * Gets the virtual networks the app (or deployment slot) is connected to.
     * 
     * Description for Gets the virtual networks the app (or deployment slot) is connected to.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of VnetInfoResource along with {@link Response}.
     */
    Response<List<VnetInfoResource>> listVnetConnectionsWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Gets the virtual networks the app (or deployment slot) is connected to.
     * 
     * Description for Gets the virtual networks the app (or deployment slot) is connected to.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of VnetInfoResource.
     */
    List<VnetInfoResource> listVnetConnections(String resourceGroupName, String name);

    /**
     * Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * Description for Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the virtual network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return virtual Network information ARM resource along with {@link Response}.
     */
    Response<VnetInfoResource> getVnetConnectionWithResponse(String resourceGroupName, String name, String vnetName,
        Context context);

    /**
     * Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * Description for Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the virtual network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return virtual Network information ARM resource.
     */
    VnetInfoResource getVnetConnection(String resourceGroupName, String name, String vnetName);

    /**
     * Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).
     * 
     * Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties
     * (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of an existing Virtual Network.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return virtual Network information ARM resource along with {@link Response}.
     */
    Response<VnetInfoResource> createOrUpdateVnetConnectionWithResponse(String resourceGroupName, String name,
        String vnetName, VnetInfoResourceInner connectionEnvelope, Context context);

    /**
     * Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).
     * 
     * Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties
     * (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of an existing Virtual Network.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return virtual Network information ARM resource.
     */
    VnetInfoResource createOrUpdateVnetConnection(String resourceGroupName, String name, String vnetName,
        VnetInfoResourceInner connectionEnvelope);

    /**
     * Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * Description for Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the virtual network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteVnetConnectionWithResponse(String resourceGroupName, String name, String vnetName,
        Context context);

    /**
     * Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * Description for Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the virtual network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteVnetConnection(String resourceGroupName, String name, String vnetName);

    /**
     * Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).
     * 
     * Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties
     * (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of an existing Virtual Network.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return virtual Network information ARM resource along with {@link Response}.
     */
    Response<VnetInfoResource> updateVnetConnectionWithResponse(String resourceGroupName, String name, String vnetName,
        VnetInfoResourceInner connectionEnvelope, Context context);

    /**
     * Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).
     * 
     * Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties
     * (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of an existing Virtual Network.
     * @param connectionEnvelope Properties of the Virtual Network connection. See example.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return virtual Network information ARM resource.
     */
    VnetInfoResource updateVnetConnection(String resourceGroupName, String name, String vnetName,
        VnetInfoResourceInner connectionEnvelope);

    /**
     * Gets an app's Virtual Network gateway.
     * 
     * Description for Gets an app's Virtual Network gateway.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the Virtual Network.
     * @param gatewayName Name of the gateway. Currently, the only supported string is "primary".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network gateway contract along with {@link Response}.
     */
    Response<VnetGateway> getVnetConnectionGatewayWithResponse(String resourceGroupName, String name, String vnetName,
        String gatewayName, Context context);

    /**
     * Gets an app's Virtual Network gateway.
     * 
     * Description for Gets an app's Virtual Network gateway.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the Virtual Network.
     * @param gatewayName Name of the gateway. Currently, the only supported string is "primary".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network gateway contract.
     */
    VnetGateway getVnetConnectionGateway(String resourceGroupName, String name, String vnetName, String gatewayName);

    /**
     * Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
     * 
     * Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the Virtual Network.
     * @param gatewayName Name of the gateway. Currently, the only supported string is "primary".
     * @param connectionEnvelope The properties to update this gateway with.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network gateway contract along with {@link Response}.
     */
    Response<VnetGateway> createOrUpdateVnetConnectionGatewayWithResponse(String resourceGroupName, String name,
        String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope, Context context);

    /**
     * Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
     * 
     * Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the Virtual Network.
     * @param gatewayName Name of the gateway. Currently, the only supported string is "primary".
     * @param connectionEnvelope The properties to update this gateway with.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network gateway contract.
     */
    VnetGateway createOrUpdateVnetConnectionGateway(String resourceGroupName, String name, String vnetName,
        String gatewayName, VnetGatewayInner connectionEnvelope);

    /**
     * Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
     * 
     * Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the Virtual Network.
     * @param gatewayName Name of the gateway. Currently, the only supported string is "primary".
     * @param connectionEnvelope The properties to update this gateway with.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network gateway contract along with {@link Response}.
     */
    Response<VnetGateway> updateVnetConnectionGatewayWithResponse(String resourceGroupName, String name,
        String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope, Context context);

    /**
     * Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
     * 
     * Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the app.
     * @param vnetName Name of the Virtual Network.
     * @param gatewayName Name of the gateway. Currently, the only supported string is "primary".
     * @param connectionEnvelope The properties to update this gateway with.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network gateway contract.
     */
    VnetGateway updateVnetConnectionGateway(String resourceGroupName, String name, String vnetName, String gatewayName,
        VnetGatewayInner connectionEnvelope);

    /**
     * List webjobs for an app, or a deployment slot.
     * 
     * Description for List webjobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu web job information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WebJob> listWebJobs(String resourceGroupName, String name);

    /**
     * List webjobs for an app, or a deployment slot.
     * 
     * Description for List webjobs for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu web job information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WebJob> listWebJobs(String resourceGroupName, String name, Context context);

    /**
     * Get webjob information for an app, or a deployment slot.
     * 
     * Description for Get webjob information for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of the web job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web Job Information along with {@link Response}.
     */
    Response<WebJob> getWebJobWithResponse(String resourceGroupName, String name, String webJobName, Context context);

    /**
     * Get webjob information for an app, or a deployment slot.
     * 
     * Description for Get webjob information for an app, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param webJobName Name of the web job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return web Job Information.
     */
    WebJob getWebJob(String resourceGroupName, String name, String webJobName);

    /**
     * Creates the artifacts for web site, or a deployment slot.
     * 
     * Description for Creates the artifacts for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param workflowArtifacts Application settings and files of the workflow.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deployWorkflowArtifactsWithResponse(String resourceGroupName, String name,
        WorkflowArtifacts workflowArtifacts, Context context);

    /**
     * Creates the artifacts for web site, or a deployment slot.
     * 
     * Description for Creates the artifacts for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deployWorkflowArtifacts(String resourceGroupName, String name);

    /**
     * Creates the artifacts for web site, or a deployment slot.
     * 
     * Description for Creates the artifacts for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @param workflowArtifacts Application settings and files of the workflow.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deployWorkflowArtifactsSlotWithResponse(String resourceGroupName, String name, String slot,
        WorkflowArtifacts workflowArtifacts, Context context);

    /**
     * Creates the artifacts for web site, or a deployment slot.
     * 
     * Description for Creates the artifacts for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deployWorkflowArtifactsSlot(String resourceGroupName, String name, String slot);

    /**
     * List the workflows for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu workflow information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WorkflowEnvelope> listInstanceWorkflowsSlot(String resourceGroupName, String name, String slot);

    /**
     * List the workflows for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu workflow information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WorkflowEnvelope> listInstanceWorkflowsSlot(String resourceGroupName, String name, String slot,
        Context context);

    /**
     * Get workflow information by its ID for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @param workflowName Workflow name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow information by its ID for web site, or a deployment slot along with {@link Response}.
     */
    Response<WorkflowEnvelope> getInstanceWorkflowSlotWithResponse(String resourceGroupName, String name, String slot,
        String workflowName, Context context);

    /**
     * Get workflow information by its ID for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @param workflowName Workflow name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow information by its ID for web site, or a deployment slot.
     */
    WorkflowEnvelope getInstanceWorkflowSlot(String resourceGroupName, String name, String slot, String workflowName);

    /**
     * Lists logic app's connections for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow properties definition along with {@link Response}.
     */
    Response<WorkflowEnvelope> listWorkflowsConnectionsSlotWithResponse(String resourceGroupName, String name,
        String slot, Context context);

    /**
     * Lists logic app's connections for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param slot Name of the deployment slot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow properties definition.
     */
    WorkflowEnvelope listWorkflowsConnectionsSlot(String resourceGroupName, String name, String slot);

    /**
     * List the workflows for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu workflow information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WorkflowEnvelope> listWorkflows(String resourceGroupName, String name);

    /**
     * List the workflows for a web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of Kudu workflow information elements as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WorkflowEnvelope> listWorkflows(String resourceGroupName, String name, Context context);

    /**
     * Get workflow information by its ID for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param workflowName Workflow name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow information by its ID for web site, or a deployment slot along with {@link Response}.
     */
    Response<WorkflowEnvelope> getWorkflowWithResponse(String resourceGroupName, String name, String workflowName,
        Context context);

    /**
     * Get workflow information by its ID for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param workflowName Workflow name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow information by its ID for web site, or a deployment slot.
     */
    WorkflowEnvelope getWorkflow(String resourceGroupName, String name, String workflowName);

    /**
     * Lists logic app's connections for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow properties definition along with {@link Response}.
     */
    Response<WorkflowEnvelope> listWorkflowsConnectionsWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Lists logic app's connections for web site, or a deployment slot.
     * 
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow properties definition.
     */
    WorkflowEnvelope listWorkflowsConnections(String resourceGroupName, String name);

    /**
     * Gets the details of a web, mobile, or API app.
     * 
     * Description for Gets the details of a web, mobile, or API app.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a web app, a mobile app backend, or an API app along with {@link Response}.
     */
    Site getById(String id);

    /**
     * Gets the details of a web, mobile, or API app.
     * 
     * Description for Gets the details of a web, mobile, or API app.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a web app, a mobile app backend, or an API app along with {@link Response}.
     */
    Response<Site> getByIdWithResponse(String id, Context context);

    /**
     * Get a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Get a deployment by its ID for an app, or a deployment slot.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity along with {@link Response}.
     */
    Deployment getDeploymentById(String id);

    /**
     * Get a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Get a deployment by its ID for an app, or a deployment slot.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return user credentials used for publishing activity along with {@link Response}.
     */
    Response<Deployment> getDeploymentByIdWithResponse(String id, Context context);

    /**
     * Get domain ownership identifier for web app.
     * 
     * Description for Get domain ownership identifier for web app.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a domain specific resource identifier along with {@link Response}.
     */
    Identifier getDomainOwnershipIdentifierById(String id);

    /**
     * Get domain ownership identifier for web app.
     * 
     * Description for Get domain ownership identifier for web app.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a domain specific resource identifier along with {@link Response}.
     */
    Response<Identifier> getDomainOwnershipIdentifierByIdWithResponse(String id, Context context);

    /**
     * Get function information by its ID for web site, or a deployment slot.
     * 
     * Description for Get function information by its ID for web site, or a deployment slot.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function information along with {@link Response}.
     */
    FunctionEnvelope getFunctionById(String id);

    /**
     * Get function information by its ID for web site, or a deployment slot.
     * 
     * Description for Get function information by its ID for web site, or a deployment slot.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return function information along with {@link Response}.
     */
    Response<FunctionEnvelope> getFunctionByIdWithResponse(String id, Context context);

    /**
     * Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * Description for Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a hostname binding object along with {@link Response}.
     */
    HostnameBinding getHostnameBindingById(String id);

    /**
     * Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * Description for Get the named hostname binding for an app (or deployment slot, if specified).
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a hostname binding object along with {@link Response}.
     */
    Response<HostnameBinding> getHostnameBindingByIdWithResponse(String id, Context context);

    /**
     * Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract along with {@link Response}.
     */
    HybridConnection getHybridConnectionById(String id);

    /**
     * Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection contract along with {@link Response}.
     */
    Response<HybridConnection> getHybridConnectionByIdWithResponse(String id, Context context);

    /**
     * Gets a hybrid connection configuration by its name.
     * 
     * Description for Gets a hybrid connection configuration by its name.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app along with {@link Response}.
     */
    RelayServiceConnectionEntity getRelayServiceConnectionById(String id);

    /**
     * Gets a hybrid connection configuration by its name.
     * 
     * Description for Gets a hybrid connection configuration by its name.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybrid Connection for an App Service app along with {@link Response}.
     */
    Response<RelayServiceConnectionEntity> getRelayServiceConnectionByIdWithResponse(String id, Context context);

    /**
     * Gets a named add-on of an app.
     * 
     * Description for Gets a named add-on of an app.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on along with {@link Response}.
     */
    PremierAddOn getPremierAddOnById(String id);

    /**
     * Gets a named add-on of an app.
     * 
     * Description for Gets a named add-on of an app.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return premier add-on along with {@link Response}.
     */
    Response<PremierAddOn> getPremierAddOnByIdWithResponse(String id, Context context);

    /**
     * Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * Description for Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public certificate object along with {@link Response}.
     */
    PublicCertificate getPublicCertificateById(String id);

    /**
     * Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * Description for Get the named public certificate for an app (or deployment slot, if specified).
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public certificate object along with {@link Response}.
     */
    Response<PublicCertificate> getPublicCertificateByIdWithResponse(String id, Context context);

    /**
     * Gets a site container of a site, or a deployment slot.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a site container of a site, or a deployment slot along with {@link Response}.
     */
    SiteContainer getSiteContainerById(String id);

    /**
     * Gets a site container of a site, or a deployment slot.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a site container of a site, or a deployment slot along with {@link Response}.
     */
    Response<SiteContainer> getSiteContainerByIdWithResponse(String id, Context context);

    /**
     * Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * Description for Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return virtual Network information ARM resource along with {@link Response}.
     */
    VnetInfoResource getVnetConnectionSlotById(String id);

    /**
     * Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * Description for Gets a virtual network the app (or deployment slot) is connected to by name.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return virtual Network information ARM resource along with {@link Response}.
     */
    Response<VnetInfoResource> getVnetConnectionSlotByIdWithResponse(String id, Context context);

    /**
     * Gets an app's Virtual Network gateway.
     * 
     * Description for Gets an app's Virtual Network gateway.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network gateway contract along with {@link Response}.
     */
    VnetGateway getVnetConnectionGatewaySlotById(String id);

    /**
     * Gets an app's Virtual Network gateway.
     * 
     * Description for Gets an app's Virtual Network gateway.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network gateway contract along with {@link Response}.
     */
    Response<VnetGateway> getVnetConnectionGatewaySlotByIdWithResponse(String id, Context context);

    /**
     * Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * Description for Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * Description for Deletes a web, mobile, or API app, or one of the deployment slots.
     * 
     * @param id the resource ID.
     * @param deleteMetrics If true, web app metrics are also deleted.
     * @param deleteEmptyServerFarm Specify false if you want to keep empty App Service plan. By default, empty App
     * Service plan is deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Boolean deleteMetrics, Boolean deleteEmptyServerFarm,
        Context context);

    /**
     * Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteDeploymentById(String id);

    /**
     * Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * Description for Delete a deployment by its ID for an app, or a deployment slot.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteDeploymentByIdWithResponse(String id, Context context);

    /**
     * Deletes a domain ownership identifier for a web app.
     * 
     * Description for Deletes a domain ownership identifier for a web app.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteDomainOwnershipIdentifierById(String id);

    /**
     * Deletes a domain ownership identifier for a web app.
     * 
     * Description for Deletes a domain ownership identifier for a web app.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteDomainOwnershipIdentifierByIdWithResponse(String id, Context context);

    /**
     * Delete a function for web site, or a deployment slot.
     * 
     * Description for Delete a function for web site, or a deployment slot.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteFunctionById(String id);

    /**
     * Delete a function for web site, or a deployment slot.
     * 
     * Description for Delete a function for web site, or a deployment slot.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteFunctionByIdWithResponse(String id, Context context);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteHostnameBindingById(String id);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteHostnameBindingByIdWithResponse(String id, Context context);

    /**
     * Removes a Hybrid Connection from this site.
     * 
     * Description for Removes a Hybrid Connection from this site.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteHybridConnectionById(String id);

    /**
     * Removes a Hybrid Connection from this site.
     * 
     * Description for Removes a Hybrid Connection from this site.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteHybridConnectionByIdWithResponse(String id, Context context);

    /**
     * Deletes a relay service connection by its name.
     * 
     * Description for Deletes a relay service connection by its name.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteRelayServiceConnectionById(String id);

    /**
     * Deletes a relay service connection by its name.
     * 
     * Description for Deletes a relay service connection by its name.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteRelayServiceConnectionByIdWithResponse(String id, Context context);

    /**
     * Delete a premier add-on from an app.
     * 
     * Description for Delete a premier add-on from an app.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deletePremierAddOnById(String id);

    /**
     * Delete a premier add-on from an app.
     * 
     * Description for Delete a premier add-on from an app.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deletePremierAddOnByIdWithResponse(String id, Context context);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deletePublicCertificateById(String id);

    /**
     * Deletes a hostname binding for an app.
     * 
     * Description for Deletes a hostname binding for an app.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deletePublicCertificateByIdWithResponse(String id, Context context);

    /**
     * Deletes a site container for a site, or a deployment slot.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteSiteContainerById(String id);

    /**
     * Deletes a site container for a site, or a deployment slot.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteSiteContainerByIdWithResponse(String id, Context context);

    /**
     * Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * Description for Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteVnetConnectionSlotById(String id);

    /**
     * Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * Description for Deletes a connection from an app (or deployment slot to a named virtual network.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appservice.generated.models.DefaultErrorResponseErrorException thrown if the
     * request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     * status code 404.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteVnetConnectionSlotByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Site resource.
     * 
     * @param name resource name.
     * @return the first stage of the new Site definition.
     */
    Site.DefinitionStages.Blank define(String name);

    /**
     * Begins definition for a new Deployment resource.
     * 
     * @param name resource name.
     * @return the first stage of the new Deployment definition.
     */
    Deployment.DefinitionStages.Blank defineDeployment(String name);

    /**
     * Begins definition for a new Identifier resource.
     * 
     * @param name resource name.
     * @return the first stage of the new Identifier definition.
     */
    Identifier.DefinitionStages.Blank defineDomainOwnershipIdentifier(String name);

    /**
     * Begins definition for a new FunctionEnvelope resource.
     * 
     * @param name resource name.
     * @return the first stage of the new FunctionEnvelope definition.
     */
    FunctionEnvelope.DefinitionStages.Blank defineFunction(String name);

    /**
     * Begins definition for a new HostnameBinding resource.
     * 
     * @param name resource name.
     * @return the first stage of the new HostnameBinding definition.
     */
    HostnameBinding.DefinitionStages.Blank defineHostnameBinding(String name);

    /**
     * Begins definition for a new HybridConnection resource.
     * 
     * @param name resource name.
     * @return the first stage of the new HybridConnection definition.
     */
    HybridConnection.DefinitionStages.Blank defineHybridConnection(String name);

    /**
     * Begins definition for a new RelayServiceConnectionEntity resource.
     * 
     * @param name resource name.
     * @return the first stage of the new RelayServiceConnectionEntity definition.
     */
    RelayServiceConnectionEntity.DefinitionStages.Blank defineRelayServiceConnection(String name);

    /**
     * Begins definition for a new PremierAddOn resource.
     * 
     * @param name resource name.
     * @return the first stage of the new PremierAddOn definition.
     */
    PremierAddOn.DefinitionStages.Blank definePremierAddOn(String name);

    /**
     * Begins definition for a new PublicCertificate resource.
     * 
     * @param name resource name.
     * @return the first stage of the new PublicCertificate definition.
     */
    PublicCertificate.DefinitionStages.Blank definePublicCertificate(String name);

    /**
     * Begins definition for a new SiteContainer resource.
     * 
     * @param name resource name.
     * @return the first stage of the new SiteContainer definition.
     */
    SiteContainer.DefinitionStages.Blank defineSiteContainer(String name);

    /**
     * Begins definition for a new VnetInfoResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new VnetInfoResource definition.
     */
    VnetInfoResource.DefinitionStages.Blank defineVnetConnectionSlot(String name);

    /**
     * Begins definition for a new VnetGateway resource.
     * 
     * @param name resource name.
     * @return the first stage of the new VnetGateway definition.
     */
    VnetGateway.DefinitionStages.Blank defineVnetConnectionGatewaySlot(String name);
}
