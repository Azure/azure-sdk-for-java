// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Properties for Helm operator. */
@Fluent
public final class HelmOperatorProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(HelmOperatorProperties.class);

    /*
     * Version of the operator Helm chart.
     */
    @JsonProperty(value = "chartVersion")
    private String chartVersion;

    /*
     * Values override for the operator Helm chart.
     */
    @JsonProperty(value = "chartValues")
    private String chartValues;

    /**
     * Get the chartVersion property: Version of the operator Helm chart.
     *
     * @return the chartVersion value.
     */
    public String chartVersion() {
        return this.chartVersion;
    }

    /**
     * Set the chartVersion property: Version of the operator Helm chart.
     *
     * @param chartVersion the chartVersion value to set.
     * @return the HelmOperatorProperties object itself.
     */
    public HelmOperatorProperties withChartVersion(String chartVersion) {
        this.chartVersion = chartVersion;
        return this;
    }

    /**
     * Get the chartValues property: Values override for the operator Helm chart.
     *
     * @return the chartValues value.
     */
    public String chartValues() {
        return this.chartValues;
    }

    /**
     * Set the chartValues property: Values override for the operator Helm chart.
     *
     * @param chartValues the chartValues value to set.
     * @return the HelmOperatorProperties object itself.
     */
    public HelmOperatorProperties withChartValues(String chartValues) {
        this.chartValues = chartValues;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
