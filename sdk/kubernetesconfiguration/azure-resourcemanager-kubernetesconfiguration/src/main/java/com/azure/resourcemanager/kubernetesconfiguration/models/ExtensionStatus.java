// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Status from the extension. */
@Fluent
public final class ExtensionStatus {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ExtensionStatus.class);

    /*
     * Status code provided by the Extension
     */
    @JsonProperty(value = "code")
    private String code;

    /*
     * Short description of status of the extension.
     */
    @JsonProperty(value = "displayStatus")
    private String displayStatus;

    /*
     * Level of the status.
     */
    @JsonProperty(value = "level")
    private LevelType level;

    /*
     * Detailed message of the status from the Extension.
     */
    @JsonProperty(value = "message")
    private String message;

    /*
     * DateLiteral (per ISO8601) noting the time of installation status.
     */
    @JsonProperty(value = "time")
    private String time;

    /**
     * Get the code property: Status code provided by the Extension.
     *
     * @return the code value.
     */
    public String code() {
        return this.code;
    }

    /**
     * Set the code property: Status code provided by the Extension.
     *
     * @param code the code value to set.
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get the displayStatus property: Short description of status of the extension.
     *
     * @return the displayStatus value.
     */
    public String displayStatus() {
        return this.displayStatus;
    }

    /**
     * Set the displayStatus property: Short description of status of the extension.
     *
     * @param displayStatus the displayStatus value to set.
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withDisplayStatus(String displayStatus) {
        this.displayStatus = displayStatus;
        return this;
    }

    /**
     * Get the level property: Level of the status.
     *
     * @return the level value.
     */
    public LevelType level() {
        return this.level;
    }

    /**
     * Set the level property: Level of the status.
     *
     * @param level the level value to set.
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withLevel(LevelType level) {
        this.level = level;
        return this;
    }

    /**
     * Get the message property: Detailed message of the status from the Extension.
     *
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: Detailed message of the status from the Extension.
     *
     * @param message the message value to set.
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the time property: DateLiteral (per ISO8601) noting the time of installation status.
     *
     * @return the time value.
     */
    public String time() {
        return this.time;
    }

    /**
     * Set the time property: DateLiteral (per ISO8601) noting the time of installation status.
     *
     * @param time the time value to set.
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withTime(String time) {
        this.time = time;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
