// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Status from the extension.
 */
@Fluent
public final class ExtensionStatus implements JsonSerializable<ExtensionStatus> {
    /*
     * Status code provided by the Extension
     */
    private String code;

    /*
     * Short description of status of the extension.
     */
    private String displayStatus;

    /*
     * Level of the status.
     */
    private LevelType level;

    /*
     * Detailed message of the status from the Extension.
     */
    private String message;

    /*
     * DateLiteral (per ISO8601) noting the time of installation status.
     */
    private String time;

    /**
     * Creates an instance of ExtensionStatus class.
     */
    public ExtensionStatus() {
    }

    /**
     * Get the code property: Status code provided by the Extension.
     * 
     * @return the code value.
     */
    public String code() {
        return this.code;
    }

    /**
     * Set the code property: Status code provided by the Extension.
     * 
     * @param code the code value to set.
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get the displayStatus property: Short description of status of the extension.
     * 
     * @return the displayStatus value.
     */
    public String displayStatus() {
        return this.displayStatus;
    }

    /**
     * Set the displayStatus property: Short description of status of the extension.
     * 
     * @param displayStatus the displayStatus value to set.
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withDisplayStatus(String displayStatus) {
        this.displayStatus = displayStatus;
        return this;
    }

    /**
     * Get the level property: Level of the status.
     * 
     * @return the level value.
     */
    public LevelType level() {
        return this.level;
    }

    /**
     * Set the level property: Level of the status.
     * 
     * @param level the level value to set.
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withLevel(LevelType level) {
        this.level = level;
        return this;
    }

    /**
     * Get the message property: Detailed message of the status from the Extension.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: Detailed message of the status from the Extension.
     * 
     * @param message the message value to set.
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the time property: DateLiteral (per ISO8601) noting the time of installation status.
     * 
     * @return the time value.
     */
    public String time() {
        return this.time;
    }

    /**
     * Set the time property: DateLiteral (per ISO8601) noting the time of installation status.
     * 
     * @param time the time value to set.
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withTime(String time) {
        this.time = time;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("code", this.code);
        jsonWriter.writeStringField("displayStatus", this.displayStatus);
        jsonWriter.writeStringField("level", this.level == null ? null : this.level.toString());
        jsonWriter.writeStringField("message", this.message);
        jsonWriter.writeStringField("time", this.time);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExtensionStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExtensionStatus if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExtensionStatus.
     */
    public static ExtensionStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExtensionStatus deserializedExtensionStatus = new ExtensionStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    deserializedExtensionStatus.code = reader.getString();
                } else if ("displayStatus".equals(fieldName)) {
                    deserializedExtensionStatus.displayStatus = reader.getString();
                } else if ("level".equals(fieldName)) {
                    deserializedExtensionStatus.level = LevelType.fromString(reader.getString());
                } else if ("message".equals(fieldName)) {
                    deserializedExtensionStatus.message = reader.getString();
                } else if ("time".equals(fieldName)) {
                    deserializedExtensionStatus.time = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExtensionStatus;
        });
    }
}
