// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Status condition of Kubernetes object.
 */
@Fluent
public final class ObjectStatusConditionDefinition implements JsonSerializable<ObjectStatusConditionDefinition> {
    /*
     * Last time this status condition has changed
     */
    private OffsetDateTime lastTransitionTime;

    /*
     * A more verbose description of the object status condition
     */
    private String message;

    /*
     * Reason for the specified status condition type status
     */
    private String reason;

    /*
     * Status of the Kubernetes object condition type
     */
    private String status;

    /*
     * Object status condition type for this object
     */
    private String type;

    /**
     * Creates an instance of ObjectStatusConditionDefinition class.
     */
    public ObjectStatusConditionDefinition() {
    }

    /**
     * Get the lastTransitionTime property: Last time this status condition has changed.
     * 
     * @return the lastTransitionTime value.
     */
    public OffsetDateTime lastTransitionTime() {
        return this.lastTransitionTime;
    }

    /**
     * Set the lastTransitionTime property: Last time this status condition has changed.
     * 
     * @param lastTransitionTime the lastTransitionTime value to set.
     * @return the ObjectStatusConditionDefinition object itself.
     */
    public ObjectStatusConditionDefinition withLastTransitionTime(OffsetDateTime lastTransitionTime) {
        this.lastTransitionTime = lastTransitionTime;
        return this;
    }

    /**
     * Get the message property: A more verbose description of the object status condition.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: A more verbose description of the object status condition.
     * 
     * @param message the message value to set.
     * @return the ObjectStatusConditionDefinition object itself.
     */
    public ObjectStatusConditionDefinition withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the reason property: Reason for the specified status condition type status.
     * 
     * @return the reason value.
     */
    public String reason() {
        return this.reason;
    }

    /**
     * Set the reason property: Reason for the specified status condition type status.
     * 
     * @param reason the reason value to set.
     * @return the ObjectStatusConditionDefinition object itself.
     */
    public ObjectStatusConditionDefinition withReason(String reason) {
        this.reason = reason;
        return this;
    }

    /**
     * Get the status property: Status of the Kubernetes object condition type.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: Status of the Kubernetes object condition type.
     * 
     * @param status the status value to set.
     * @return the ObjectStatusConditionDefinition object itself.
     */
    public ObjectStatusConditionDefinition withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the type property: Object status condition type for this object.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Object status condition type for this object.
     * 
     * @param type the type value to set.
     * @return the ObjectStatusConditionDefinition object itself.
     */
    public ObjectStatusConditionDefinition withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("lastTransitionTime",
            this.lastTransitionTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.lastTransitionTime));
        jsonWriter.writeStringField("message", this.message);
        jsonWriter.writeStringField("reason", this.reason);
        jsonWriter.writeStringField("status", this.status);
        jsonWriter.writeStringField("type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ObjectStatusConditionDefinition from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ObjectStatusConditionDefinition if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ObjectStatusConditionDefinition.
     */
    public static ObjectStatusConditionDefinition fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ObjectStatusConditionDefinition deserializedObjectStatusConditionDefinition
                = new ObjectStatusConditionDefinition();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("lastTransitionTime".equals(fieldName)) {
                    deserializedObjectStatusConditionDefinition.lastTransitionTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("message".equals(fieldName)) {
                    deserializedObjectStatusConditionDefinition.message = reader.getString();
                } else if ("reason".equals(fieldName)) {
                    deserializedObjectStatusConditionDefinition.reason = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedObjectStatusConditionDefinition.status = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedObjectStatusConditionDefinition.type = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedObjectStatusConditionDefinition;
        });
    }
}
