// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Status condition of Kubernetes object. */
@Fluent
public final class ObjectStatusConditionDefinition {
    /*
     * Last time this status condition has changed
     */
    @JsonProperty(value = "lastTransitionTime")
    private OffsetDateTime lastTransitionTime;

    /*
     * A more verbose description of the object status condition
     */
    @JsonProperty(value = "message")
    private String message;

    /*
     * Reason for the specified status condition type status
     */
    @JsonProperty(value = "reason")
    private String reason;

    /*
     * Status of the Kubernetes object condition type
     */
    @JsonProperty(value = "status")
    private String status;

    /*
     * Object status condition type for this object
     */
    @JsonProperty(value = "type")
    private String type;

    /** Creates an instance of ObjectStatusConditionDefinition class. */
    public ObjectStatusConditionDefinition() {
    }

    /**
     * Get the lastTransitionTime property: Last time this status condition has changed.
     *
     * @return the lastTransitionTime value.
     */
    public OffsetDateTime lastTransitionTime() {
        return this.lastTransitionTime;
    }

    /**
     * Set the lastTransitionTime property: Last time this status condition has changed.
     *
     * @param lastTransitionTime the lastTransitionTime value to set.
     * @return the ObjectStatusConditionDefinition object itself.
     */
    public ObjectStatusConditionDefinition withLastTransitionTime(OffsetDateTime lastTransitionTime) {
        this.lastTransitionTime = lastTransitionTime;
        return this;
    }

    /**
     * Get the message property: A more verbose description of the object status condition.
     *
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: A more verbose description of the object status condition.
     *
     * @param message the message value to set.
     * @return the ObjectStatusConditionDefinition object itself.
     */
    public ObjectStatusConditionDefinition withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the reason property: Reason for the specified status condition type status.
     *
     * @return the reason value.
     */
    public String reason() {
        return this.reason;
    }

    /**
     * Set the reason property: Reason for the specified status condition type status.
     *
     * @param reason the reason value to set.
     * @return the ObjectStatusConditionDefinition object itself.
     */
    public ObjectStatusConditionDefinition withReason(String reason) {
        this.reason = reason;
        return this;
    }

    /**
     * Get the status property: Status of the Kubernetes object condition type.
     *
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: Status of the Kubernetes object condition type.
     *
     * @param status the status value to set.
     * @return the ObjectStatusConditionDefinition object itself.
     */
    public ObjectStatusConditionDefinition withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the type property: Object status condition type for this object.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Object status condition type for this object.
     *
     * @param type the type value to set.
     * @return the ObjectStatusConditionDefinition object itself.
     */
    public ObjectStatusConditionDefinition withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
