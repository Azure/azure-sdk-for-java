// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.ExtensionTypesManager;
import com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.models.VersionForReleaseTrain;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExtensionTypesListVersionsMockTests {
    @Test
    public void testListVersions() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"version\":\"nqzahmgkbrpyyd\",\"unsupportedKubernetesVersions\":{\"connectedCluster\":[{\"distributions\":[\"qkpikadrgvtqagnb\",\"ynhijggme\",\"fsiarbutr\"],\"unsupportedVersions\":[\"na\",\"zmhjrunmp\"]},{\"distributions\":[\"dbhrbnlankxm\",\"skpbhenbtkcxywn\",\"tnrsyn\"],\"unsupportedVersions\":[\"dybyxczfclhaa\",\"dbabp\",\"lwrq\"]},{\"distributions\":[\"tsthsucocm\",\"yyazttbt\",\"wrqpue\",\"ckzywbiexzfeyue\"],\"unsupportedVersions\":[\"bxu\"]},{\"distributions\":[\"hqwa\",\"muzyoxaepdk\",\"jancu\",\"rhdwbavxbniw\"],\"unsupportedVersions\":[\"wz\",\"s\"]}],\"appliances\":[{\"distributions\":[\"xytxhpzxbz\",\"fzab\"],\"unsupportedVersions\":[\"uhxwtctyqiklbbov\"]}],\"provisionedCluster\":[{\"distributions\":[\"hvgyuguosvmk\",\"ss\"],\"unsupportedVersions\":[\"kkfpl\",\"mg\",\"xnkjzkdesl\"]},{\"distributions\":[\"opwi\",\"ighxpk\"],\"unsupportedVersions\":[\"baiuebbaumny\"]},{\"distributions\":[\"edeojnabc\"],\"unsupportedVersions\":[\"mtxpsiebtfh\",\"pesapskrdqmhjj\",\"htldwk\"]}],\"managedCluster\":[{\"distributions\":[\"tkncwsc\",\"svlxotogtwrup\"],\"unsupportedVersions\":[\"vnm\",\"cykvceo\",\"eil\",\"vnotyfjfcnj\"]},{\"distributions\":[\"nxdhbt\"],\"unsupportedVersions\":[\"h\",\"wpn\"]},{\"distributions\":[\"oqnermclfpl\"],\"unsupportedVersions\":[\"xus\",\"rpabg\",\"epsbjtazqu\",\"xywpmueefjzwfqkq\"]},{\"distributions\":[\"dsuyonobgla\"],\"unsupportedVersions\":[\"xtccmg\",\"udxytlmoyrx\",\"wfudwpzntxhdzhl\"]}]},\"supportedClusterTypes\":[\"bh\",\"kfrlhrxsbky\",\"pycanuzbpz\"]},\"id\":\"afkuwb\",\"name\":\"rnwb\",\"type\":\"ehhseyvjusrts\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ExtensionTypesManager manager = ExtensionTypesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<VersionForReleaseTrain> response = manager.extensionTypes()
            .listVersions("mxnehmp", "ec", "godebfqkkrbmpu", "gr", "wflzlfbxzpuzy", true,
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("nqzahmgkbrpyyd", response.iterator().next().properties().version());
        Assertions.assertEquals("qkpikadrgvtqagnb",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .connectedCluster()
                .get(0)
                .distributions()
                .get(0));
        Assertions.assertEquals("na",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .connectedCluster()
                .get(0)
                .unsupportedVersions()
                .get(0));
        Assertions.assertEquals("xytxhpzxbz",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .appliances()
                .get(0)
                .distributions()
                .get(0));
        Assertions.assertEquals("uhxwtctyqiklbbov",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .appliances()
                .get(0)
                .unsupportedVersions()
                .get(0));
        Assertions.assertEquals("hvgyuguosvmk",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .provisionedCluster()
                .get(0)
                .distributions()
                .get(0));
        Assertions.assertEquals("kkfpl",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .provisionedCluster()
                .get(0)
                .unsupportedVersions()
                .get(0));
        Assertions.assertEquals("tkncwsc",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .managedCluster()
                .get(0)
                .distributions()
                .get(0));
        Assertions.assertEquals("vnm",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .managedCluster()
                .get(0)
                .unsupportedVersions()
                .get(0));
        Assertions.assertEquals("bh", response.iterator().next().properties().supportedClusterTypes().get(0));
    }
}
