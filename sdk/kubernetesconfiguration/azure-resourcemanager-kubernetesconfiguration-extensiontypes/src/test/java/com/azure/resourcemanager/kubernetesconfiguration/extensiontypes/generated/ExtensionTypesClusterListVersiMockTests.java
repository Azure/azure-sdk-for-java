// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.ExtensionTypesManager;
import com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.models.VersionForReleaseTrain;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExtensionTypesClusterListVersiMockTests {
    @Test
    public void testClusterListVersions() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"version\":\"pvjzbe\",\"unsupportedKubernetesVersions\":{\"connectedCluster\":[{\"distributions\":[\"fqqnvwpmqtaruo\",\"jmkcjhwqytj\"],\"unsupportedVersions\":[\"n\"]},{\"distributions\":[\"wgdrjervnaenqp\",\"hin\",\"oygmift\"],\"unsupportedVersions\":[\"d\",\"dslgnayqigynduh\"]},{\"distributions\":[\"qlkth\",\"maqolbgycduie\",\"tgccymvaolpss\"],\"unsupportedVersions\":[\"fmmdnbbg\",\"zpswiydmc\",\"yhz\",\"xssadbzmnvdf\"]},{\"distributions\":[\"daodvxzbncblyl\"],\"unsupportedVersions\":[\"dbh\",\"xsrz\",\"zucerscdntnev\"]}],\"appliances\":[{\"distributions\":[\"ygtdsslswt\",\"weriofzpyqsem\",\"abnetshh\"],\"unsupportedVersions\":[\"edplvwiwubmw\"]}],\"provisionedCluster\":[{\"distributions\":[\"dnkwwtppjflcxog\",\"okonzmnsikvmkqz\",\"qqkdltfzxmhhvhgu\"],\"unsupportedVersions\":[\"dkwobdagx\",\"ibqdxbxwakbogqx\"]}],\"managedCluster\":[{\"distributions\":[\"gxhuriplbp\"],\"unsupportedVersions\":[\"unkbebx\",\"ubyyntw\",\"rbqtkoie\",\"seotgqrllt\"]},{\"distributions\":[\"lauwzizxbmpgcjef\",\"zmuvpbttdumorppx\",\"bmnzbtbhjpgl\",\"fgohdneuelfphs\"],\"unsupportedVersions\":[\"t\",\"zfikd\",\"wwquuvxzxclvithh\"]},{\"distributions\":[\"nosggbhcoh\"],\"unsupportedVersions\":[\"sjnkal\",\"utiiswacf\"]},{\"distributions\":[\"k\",\"zewk\",\"vhqcrail\",\"pnppfuf\"],\"unsupportedVersions\":[\"dmhdlxyjr\",\"sag\",\"fcnihgwq\"]}]},\"supportedClusterTypes\":[\"edgfbcvkcvq\",\"pkeqdcvdrhvoo\"]},\"id\":\"sotbob\",\"name\":\"dopcjwvnh\",\"type\":\"ld\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ExtensionTypesManager manager = ExtensionTypesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<VersionForReleaseTrain> response = manager.extensionTypes()
            .clusterListVersions("bhsfxob", "ytkblmpew", "wfbkrvrns", "shqjohxcrsbf", "vasrruvwb", "sqfsubcgjbirxb",
                "ybsrfbjfdtwss", false, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("pvjzbe", response.iterator().next().properties().version());
        Assertions.assertEquals("fqqnvwpmqtaruo",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .connectedCluster()
                .get(0)
                .distributions()
                .get(0));
        Assertions.assertEquals("n",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .connectedCluster()
                .get(0)
                .unsupportedVersions()
                .get(0));
        Assertions.assertEquals("ygtdsslswt",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .appliances()
                .get(0)
                .distributions()
                .get(0));
        Assertions.assertEquals("edplvwiwubmw",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .appliances()
                .get(0)
                .unsupportedVersions()
                .get(0));
        Assertions.assertEquals("dnkwwtppjflcxog",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .provisionedCluster()
                .get(0)
                .distributions()
                .get(0));
        Assertions.assertEquals("dkwobdagx",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .provisionedCluster()
                .get(0)
                .unsupportedVersions()
                .get(0));
        Assertions.assertEquals("gxhuriplbp",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .managedCluster()
                .get(0)
                .distributions()
                .get(0));
        Assertions.assertEquals("unkbebx",
            response.iterator()
                .next()
                .properties()
                .unsupportedKubernetesVersions()
                .managedCluster()
                .get(0)
                .unsupportedVersions()
                .get(0));
        Assertions.assertEquals("edgfbcvkcvq", response.iterator().next().properties().supportedClusterTypes().get(0));
    }
}
