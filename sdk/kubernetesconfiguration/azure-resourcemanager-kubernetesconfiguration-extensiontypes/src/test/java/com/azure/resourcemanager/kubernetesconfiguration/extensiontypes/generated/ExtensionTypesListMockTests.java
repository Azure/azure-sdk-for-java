// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.ExtensionTypesManager;
import com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.models.ExtensionType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExtensionTypesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"isSystemExtension\":true,\"isManagedIdentityRequired\":false,\"description\":\"bbtdzumvee\",\"publisher\":\"pwo\",\"planInfo\":{\"publisherId\":\"kfpbs\",\"planId\":\"ofd\",\"offerId\":\"uusdttouwa\"},\"supportedClusterTypes\":[\"kqvkelnsmvbxwyjs\",\"lh\"],\"supportedScopes\":{\"defaultScope\":\"aln\",\"clusterScopeSettings\":{\"properties\":{\"allowMultipleInstances\":true,\"defaultReleaseNamespace\":\"yaw\"},\"id\":\"oyaqcslyjpkiid\",\"name\":\"yexz\",\"type\":\"eli\"}}},\"id\":\"hnrztfol\",\"name\":\"bnxknalaulppg\",\"type\":\"dtpnapnyiropuhp\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ExtensionTypesManager manager = ExtensionTypesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ExtensionType> response = manager.extensionTypes()
            .list("qbex", "mcqibycnojv", "nmefqsgzvahapj", "zhpvgqzcjrvxd", "zlmwlxkvugfhz", "vawjvzunlu", "hnnpr",
                "xipeilpjzuaejx", com.azure.core.util.Context.NONE);

        Assertions.assertTrue(response.iterator().next().properties().isSystemExtension());
        Assertions.assertFalse(response.iterator().next().properties().isManagedIdentityRequired());
        Assertions.assertEquals("bbtdzumvee", response.iterator().next().properties().description());
        Assertions.assertEquals("pwo", response.iterator().next().properties().publisher());
        Assertions.assertEquals("kfpbs", response.iterator().next().properties().planInfo().publisherId());
        Assertions.assertEquals("ofd", response.iterator().next().properties().planInfo().planId());
        Assertions.assertEquals("uusdttouwa", response.iterator().next().properties().planInfo().offerId());
        Assertions.assertEquals("kqvkelnsmvbxwyjs",
            response.iterator().next().properties().supportedClusterTypes().get(0));
        Assertions.assertEquals("aln", response.iterator().next().properties().supportedScopes().defaultScope());
        Assertions.assertTrue(
            response.iterator().next().properties().supportedScopes().clusterScopeSettings().allowMultipleInstances());
        Assertions.assertEquals("yaw",
            response.iterator().next().properties().supportedScopes().clusterScopeSettings().defaultReleaseNamespace());
    }
}
