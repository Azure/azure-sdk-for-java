// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ExtensionTypeProperties model.
 */
@Fluent
public final class ExtensionTypeProperties implements JsonSerializable<ExtensionTypeProperties> {
    /*
     * Is this Extension Type a system extension.
     */
    private Boolean isSystemExtension;

    /*
     * Should an identity for this cluster resource be created
     */
    private Boolean isManagedIdentityRequired;

    /*
     * Description of the extension type
     */
    private String description;

    /*
     * Name of the publisher for the Extension Type
     */
    private String publisher;

    /*
     * Plan information only for the Marketplace Extension Type.
     */
    private ExtensionTypePropertiesPlanInfo planInfo;

    /*
     * Cluster Types supported for this Extension Type.
     */
    private List<String> supportedClusterTypes;

    /*
     * Supported Kubernetes Scopes for this Extension Type.
     */
    private ExtensionTypePropertiesSupportedScopes supportedScopes;

    /**
     * Creates an instance of ExtensionTypeProperties class.
     */
    public ExtensionTypeProperties() {
    }

    /**
     * Get the isSystemExtension property: Is this Extension Type a system extension.
     * 
     * @return the isSystemExtension value.
     */
    public Boolean isSystemExtension() {
        return this.isSystemExtension;
    }

    /**
     * Set the isSystemExtension property: Is this Extension Type a system extension.
     * 
     * @param isSystemExtension the isSystemExtension value to set.
     * @return the ExtensionTypeProperties object itself.
     */
    public ExtensionTypeProperties withIsSystemExtension(Boolean isSystemExtension) {
        this.isSystemExtension = isSystemExtension;
        return this;
    }

    /**
     * Get the isManagedIdentityRequired property: Should an identity for this cluster resource be created.
     * 
     * @return the isManagedIdentityRequired value.
     */
    public Boolean isManagedIdentityRequired() {
        return this.isManagedIdentityRequired;
    }

    /**
     * Set the isManagedIdentityRequired property: Should an identity for this cluster resource be created.
     * 
     * @param isManagedIdentityRequired the isManagedIdentityRequired value to set.
     * @return the ExtensionTypeProperties object itself.
     */
    public ExtensionTypeProperties withIsManagedIdentityRequired(Boolean isManagedIdentityRequired) {
        this.isManagedIdentityRequired = isManagedIdentityRequired;
        return this;
    }

    /**
     * Get the description property: Description of the extension type.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the extension type.
     * 
     * @param description the description value to set.
     * @return the ExtensionTypeProperties object itself.
     */
    public ExtensionTypeProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the publisher property: Name of the publisher for the Extension Type.
     * 
     * @return the publisher value.
     */
    public String publisher() {
        return this.publisher;
    }

    /**
     * Set the publisher property: Name of the publisher for the Extension Type.
     * 
     * @param publisher the publisher value to set.
     * @return the ExtensionTypeProperties object itself.
     */
    public ExtensionTypeProperties withPublisher(String publisher) {
        this.publisher = publisher;
        return this;
    }

    /**
     * Get the planInfo property: Plan information only for the Marketplace Extension Type.
     * 
     * @return the planInfo value.
     */
    public ExtensionTypePropertiesPlanInfo planInfo() {
        return this.planInfo;
    }

    /**
     * Set the planInfo property: Plan information only for the Marketplace Extension Type.
     * 
     * @param planInfo the planInfo value to set.
     * @return the ExtensionTypeProperties object itself.
     */
    public ExtensionTypeProperties withPlanInfo(ExtensionTypePropertiesPlanInfo planInfo) {
        this.planInfo = planInfo;
        return this;
    }

    /**
     * Get the supportedClusterTypes property: Cluster Types supported for this Extension Type.
     * 
     * @return the supportedClusterTypes value.
     */
    public List<String> supportedClusterTypes() {
        return this.supportedClusterTypes;
    }

    /**
     * Set the supportedClusterTypes property: Cluster Types supported for this Extension Type.
     * 
     * @param supportedClusterTypes the supportedClusterTypes value to set.
     * @return the ExtensionTypeProperties object itself.
     */
    public ExtensionTypeProperties withSupportedClusterTypes(List<String> supportedClusterTypes) {
        this.supportedClusterTypes = supportedClusterTypes;
        return this;
    }

    /**
     * Get the supportedScopes property: Supported Kubernetes Scopes for this Extension Type.
     * 
     * @return the supportedScopes value.
     */
    public ExtensionTypePropertiesSupportedScopes supportedScopes() {
        return this.supportedScopes;
    }

    /**
     * Set the supportedScopes property: Supported Kubernetes Scopes for this Extension Type.
     * 
     * @param supportedScopes the supportedScopes value to set.
     * @return the ExtensionTypeProperties object itself.
     */
    public ExtensionTypeProperties withSupportedScopes(ExtensionTypePropertiesSupportedScopes supportedScopes) {
        this.supportedScopes = supportedScopes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (planInfo() != null) {
            planInfo().validate();
        }
        if (supportedScopes() != null) {
            supportedScopes().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("isSystemExtension", this.isSystemExtension);
        jsonWriter.writeBooleanField("isManagedIdentityRequired", this.isManagedIdentityRequired);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("publisher", this.publisher);
        jsonWriter.writeJsonField("planInfo", this.planInfo);
        jsonWriter.writeArrayField("supportedClusterTypes", this.supportedClusterTypes,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("supportedScopes", this.supportedScopes);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExtensionTypeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExtensionTypeProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExtensionTypeProperties.
     */
    public static ExtensionTypeProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExtensionTypeProperties deserializedExtensionTypeProperties = new ExtensionTypeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("isSystemExtension".equals(fieldName)) {
                    deserializedExtensionTypeProperties.isSystemExtension = reader.getNullable(JsonReader::getBoolean);
                } else if ("isManagedIdentityRequired".equals(fieldName)) {
                    deserializedExtensionTypeProperties.isManagedIdentityRequired
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("description".equals(fieldName)) {
                    deserializedExtensionTypeProperties.description = reader.getString();
                } else if ("publisher".equals(fieldName)) {
                    deserializedExtensionTypeProperties.publisher = reader.getString();
                } else if ("planInfo".equals(fieldName)) {
                    deserializedExtensionTypeProperties.planInfo = ExtensionTypePropertiesPlanInfo.fromJson(reader);
                } else if ("supportedClusterTypes".equals(fieldName)) {
                    List<String> supportedClusterTypes = reader.readArray(reader1 -> reader1.getString());
                    deserializedExtensionTypeProperties.supportedClusterTypes = supportedClusterTypes;
                } else if ("supportedScopes".equals(fieldName)) {
                    deserializedExtensionTypeProperties.supportedScopes
                        = ExtensionTypePropertiesSupportedScopes.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExtensionTypeProperties;
        });
    }
}
