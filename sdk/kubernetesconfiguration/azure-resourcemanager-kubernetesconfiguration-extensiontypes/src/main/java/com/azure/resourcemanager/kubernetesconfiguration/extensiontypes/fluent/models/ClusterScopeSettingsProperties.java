// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Extension scope settings.
 */
@Fluent
public final class ClusterScopeSettingsProperties implements JsonSerializable<ClusterScopeSettingsProperties> {
    /*
     * Describes if multiple instances of the extension are allowed
     */
    private Boolean allowMultipleInstances;

    /*
     * Default extension release namespace
     */
    private String defaultReleaseNamespace;

    /**
     * Creates an instance of ClusterScopeSettingsProperties class.
     */
    public ClusterScopeSettingsProperties() {
    }

    /**
     * Get the allowMultipleInstances property: Describes if multiple instances of the extension are allowed.
     * 
     * @return the allowMultipleInstances value.
     */
    public Boolean allowMultipleInstances() {
        return this.allowMultipleInstances;
    }

    /**
     * Set the allowMultipleInstances property: Describes if multiple instances of the extension are allowed.
     * 
     * @param allowMultipleInstances the allowMultipleInstances value to set.
     * @return the ClusterScopeSettingsProperties object itself.
     */
    public ClusterScopeSettingsProperties withAllowMultipleInstances(Boolean allowMultipleInstances) {
        this.allowMultipleInstances = allowMultipleInstances;
        return this;
    }

    /**
     * Get the defaultReleaseNamespace property: Default extension release namespace.
     * 
     * @return the defaultReleaseNamespace value.
     */
    public String defaultReleaseNamespace() {
        return this.defaultReleaseNamespace;
    }

    /**
     * Set the defaultReleaseNamespace property: Default extension release namespace.
     * 
     * @param defaultReleaseNamespace the defaultReleaseNamespace value to set.
     * @return the ClusterScopeSettingsProperties object itself.
     */
    public ClusterScopeSettingsProperties withDefaultReleaseNamespace(String defaultReleaseNamespace) {
        this.defaultReleaseNamespace = defaultReleaseNamespace;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("allowMultipleInstances", this.allowMultipleInstances);
        jsonWriter.writeStringField("defaultReleaseNamespace", this.defaultReleaseNamespace);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClusterScopeSettingsProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClusterScopeSettingsProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClusterScopeSettingsProperties.
     */
    public static ClusterScopeSettingsProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClusterScopeSettingsProperties deserializedClusterScopeSettingsProperties
                = new ClusterScopeSettingsProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("allowMultipleInstances".equals(fieldName)) {
                    deserializedClusterScopeSettingsProperties.allowMultipleInstances
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("defaultReleaseNamespace".equals(fieldName)) {
                    deserializedClusterScopeSettingsProperties.defaultReleaseNamespace = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClusterScopeSettingsProperties;
        });
    }
}
