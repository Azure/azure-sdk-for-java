// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ExtensionTypes.
 */
public interface ExtensionTypes {
    /**
     * List all Extension Types for the location.
     * 
     * @param location The name of Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list Extension Types as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ExtensionType> locationList(String location);

    /**
     * List all Extension Types for the location.
     * 
     * @param location The name of Azure region.
     * @param publisherId Filter results by Publisher ID of a marketplace extension type.
     * @param offerId Filter results by Offer or Product ID of a marketplace extension type.
     * @param planId Filter results by Plan ID of a marketplace extension type.
     * @param releaseTrain Filter results by release train (default value is stable).
     * @param clusterType Filter results by the cluster type for extension types.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list Extension Types as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ExtensionType> locationList(String location, String publisherId, String offerId, String planId,
        String releaseTrain, String clusterType, Context context);

    /**
     * Get an extension type for the location.
     * 
     * @param location The name of Azure region.
     * @param extensionTypeName Name of the Extension Type.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an extension type for the location along with {@link Response}.
     */
    Response<ExtensionType> locationGetWithResponse(String location, String extensionTypeName, Context context);

    /**
     * Get an extension type for the location.
     * 
     * @param location The name of Azure region.
     * @param extensionTypeName Name of the Extension Type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an extension type for the location.
     */
    ExtensionType locationGet(String location, String extensionTypeName);

    /**
     * List the versions for an extension type and location.
     * 
     * @param location The name of Azure region.
     * @param extensionTypeName Name of the Extension Type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list Extension Type Versions as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VersionForReleaseTrain> listVersions(String location, String extensionTypeName);

    /**
     * List the versions for an extension type and location.
     * 
     * @param location The name of Azure region.
     * @param extensionTypeName Name of the Extension Type.
     * @param releaseTrain Filter results by release train (default value is stable).
     * @param clusterType Filter results by the cluster type for extension types.
     * @param majorVersion Filter results by the major version of an extension type.
     * @param showLatest Filter results by only the latest version (based on other query parameters).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list Extension Type Versions as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VersionForReleaseTrain> listVersions(String location, String extensionTypeName, String releaseTrain,
        String clusterType, String majorVersion, Boolean showLatest, Context context);

    /**
     * Get details of a version for an extension type and location.
     * 
     * @param location The name of Azure region.
     * @param extensionTypeName Name of the Extension Type.
     * @param versionNumber Version number of the Extension Type.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a version for an extension type and location along with {@link Response}.
     */
    Response<VersionForReleaseTrain> getVersionWithResponse(String location, String extensionTypeName,
        String versionNumber, Context context);

    /**
     * Get details of a version for an extension type and location.
     * 
     * @param location The name of Azure region.
     * @param extensionTypeName Name of the Extension Type.
     * @param versionNumber Version number of the Extension Type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a version for an extension type and location.
     */
    VersionForReleaseTrain getVersion(String location, String extensionTypeName, String versionNumber);

    /**
     * List installable Extension Types for the cluster based region and type for the cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
     * Microsoft.HybridContainerService.
     * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters, connectedClusters,
     * provisionedClusters, appliances.
     * @param clusterName The name of the kubernetes cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list Extension Types as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ExtensionType> list(String resourceGroupName, String clusterRp, String clusterResourceName,
        String clusterName);

    /**
     * List installable Extension Types for the cluster based region and type for the cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
     * Microsoft.HybridContainerService.
     * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters, connectedClusters,
     * provisionedClusters, appliances.
     * @param clusterName The name of the kubernetes cluster.
     * @param publisherId Filter results by Publisher ID of a marketplace extension type.
     * @param offerId Filter results by Offer or Product ID of a marketplace extension type.
     * @param planId Filter results by Plan ID of a marketplace extension type.
     * @param releaseTrain Filter results by release train (default value is stable).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list Extension Types as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ExtensionType> list(String resourceGroupName, String clusterRp, String clusterResourceName,
        String clusterName, String publisherId, String offerId, String planId, String releaseTrain, Context context);

    /**
     * Get an Extension Type installable to the cluster based region and type for the cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
     * Microsoft.HybridContainerService.
     * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters, connectedClusters,
     * provisionedClusters, appliances.
     * @param clusterName The name of the kubernetes cluster.
     * @param extensionTypeName Name of the Extension Type.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Extension Type installable to the cluster based region and type for the cluster along with
     * {@link Response}.
     */
    Response<ExtensionType> getWithResponse(String resourceGroupName, String clusterRp, String clusterResourceName,
        String clusterName, String extensionTypeName, Context context);

    /**
     * Get an Extension Type installable to the cluster based region and type for the cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
     * Microsoft.HybridContainerService.
     * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters, connectedClusters,
     * provisionedClusters, appliances.
     * @param clusterName The name of the kubernetes cluster.
     * @param extensionTypeName Name of the Extension Type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Extension Type installable to the cluster based region and type for the cluster.
     */
    ExtensionType get(String resourceGroupName, String clusterRp, String clusterResourceName, String clusterName,
        String extensionTypeName);

    /**
     * List the version for an Extension Type installable to the cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
     * Microsoft.HybridContainerService.
     * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters, connectedClusters,
     * provisionedClusters, appliances.
     * @param clusterName The name of the kubernetes cluster.
     * @param extensionTypeName Name of the Extension Type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list Extension Type Versions as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VersionForReleaseTrain> clusterListVersions(String resourceGroupName, String clusterRp,
        String clusterResourceName, String clusterName, String extensionTypeName);

    /**
     * List the version for an Extension Type installable to the cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
     * Microsoft.HybridContainerService.
     * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters, connectedClusters,
     * provisionedClusters, appliances.
     * @param clusterName The name of the kubernetes cluster.
     * @param extensionTypeName Name of the Extension Type.
     * @param releaseTrain Filter results by release train (default value is stable).
     * @param majorVersion Filter results by the major version of an extension type.
     * @param showLatest Filter results by only the latest version (based on other query parameters).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list Extension Type Versions as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VersionForReleaseTrain> clusterListVersions(String resourceGroupName, String clusterRp,
        String clusterResourceName, String clusterName, String extensionTypeName, String releaseTrain,
        String majorVersion, Boolean showLatest, Context context);

    /**
     * Get details of a version for an Extension Type installable to the cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
     * Microsoft.HybridContainerService.
     * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters, connectedClusters,
     * provisionedClusters, appliances.
     * @param clusterName The name of the kubernetes cluster.
     * @param extensionTypeName Name of the Extension Type.
     * @param versionNumber Version number of the Extension Type.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a version for an Extension Type installable to the cluster along with {@link Response}.
     */
    Response<VersionForReleaseTrain> clusterGetVersionWithResponse(String resourceGroupName, String clusterRp,
        String clusterResourceName, String clusterName, String extensionTypeName, String versionNumber,
        Context context);

    /**
     * Get details of a version for an Extension Type installable to the cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
     * Microsoft.HybridContainerService.
     * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters, connectedClusters,
     * provisionedClusters, appliances.
     * @param clusterName The name of the kubernetes cluster.
     * @param extensionTypeName Name of the Extension Type.
     * @param versionNumber Version number of the Extension Type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a version for an Extension Type installable to the cluster.
     */
    VersionForReleaseTrain clusterGetVersion(String resourceGroupName, String clusterRp, String clusterResourceName,
        String clusterName, String extensionTypeName, String versionNumber);
}
