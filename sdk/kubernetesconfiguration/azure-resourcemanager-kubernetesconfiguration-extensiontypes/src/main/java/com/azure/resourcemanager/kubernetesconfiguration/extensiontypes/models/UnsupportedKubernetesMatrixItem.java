// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.extensiontypes.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The list of Kubernetes Distribution and Versions that are not supported by this version of this Extension Type.
 */
@Fluent
public final class UnsupportedKubernetesMatrixItem implements JsonSerializable<UnsupportedKubernetesMatrixItem> {
    /*
     * The list of Kubernetes Cluster Distribution Names not supported
     */
    private List<String> distributions;

    /*
     * The list of Kubernetes Versions not supported by the list of Kubernetes Cluster Distribution names in this object
     */
    private List<String> unsupportedVersions;

    /**
     * Creates an instance of UnsupportedKubernetesMatrixItem class.
     */
    public UnsupportedKubernetesMatrixItem() {
    }

    /**
     * Get the distributions property: The list of Kubernetes Cluster Distribution Names not supported.
     * 
     * @return the distributions value.
     */
    public List<String> distributions() {
        return this.distributions;
    }

    /**
     * Set the distributions property: The list of Kubernetes Cluster Distribution Names not supported.
     * 
     * @param distributions the distributions value to set.
     * @return the UnsupportedKubernetesMatrixItem object itself.
     */
    public UnsupportedKubernetesMatrixItem withDistributions(List<String> distributions) {
        this.distributions = distributions;
        return this;
    }

    /**
     * Get the unsupportedVersions property: The list of Kubernetes Versions not supported by the list of Kubernetes
     * Cluster Distribution names in this object.
     * 
     * @return the unsupportedVersions value.
     */
    public List<String> unsupportedVersions() {
        return this.unsupportedVersions;
    }

    /**
     * Set the unsupportedVersions property: The list of Kubernetes Versions not supported by the list of Kubernetes
     * Cluster Distribution names in this object.
     * 
     * @param unsupportedVersions the unsupportedVersions value to set.
     * @return the UnsupportedKubernetesMatrixItem object itself.
     */
    public UnsupportedKubernetesMatrixItem withUnsupportedVersions(List<String> unsupportedVersions) {
        this.unsupportedVersions = unsupportedVersions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("distributions", this.distributions,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("unsupportedVersions", this.unsupportedVersions,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UnsupportedKubernetesMatrixItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UnsupportedKubernetesMatrixItem if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the UnsupportedKubernetesMatrixItem.
     */
    public static UnsupportedKubernetesMatrixItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UnsupportedKubernetesMatrixItem deserializedUnsupportedKubernetesMatrixItem
                = new UnsupportedKubernetesMatrixItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("distributions".equals(fieldName)) {
                    List<String> distributions = reader.readArray(reader1 -> reader1.getString());
                    deserializedUnsupportedKubernetesMatrixItem.distributions = distributions;
                } else if ("unsupportedVersions".equals(fieldName)) {
                    List<String> unsupportedVersions = reader.readArray(reader1 -> reader1.getString());
                    deserializedUnsupportedKubernetesMatrixItem.unsupportedVersions = unsupportedVersions;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUnsupportedKubernetesMatrixItem;
        });
    }
}
