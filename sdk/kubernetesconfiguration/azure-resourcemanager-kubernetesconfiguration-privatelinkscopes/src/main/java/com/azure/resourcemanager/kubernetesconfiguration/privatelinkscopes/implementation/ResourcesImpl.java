// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.privatelinkscopes.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.kubernetesconfiguration.privatelinkscopes.fluent.ResourcesClient;
import com.azure.resourcemanager.kubernetesconfiguration.privatelinkscopes.fluent.models.PrivateLinkResourceInner;
import com.azure.resourcemanager.kubernetesconfiguration.privatelinkscopes.fluent.models.ResourceListResultInner;
import com.azure.resourcemanager.kubernetesconfiguration.privatelinkscopes.models.PrivateLinkResource;
import com.azure.resourcemanager.kubernetesconfiguration.privatelinkscopes.models.ResourceListResult;
import com.azure.resourcemanager.kubernetesconfiguration.privatelinkscopes.models.Resources;

public final class ResourcesImpl implements Resources {
    private static final ClientLogger LOGGER = new ClientLogger(ResourcesImpl.class);

    private final ResourcesClient innerClient;

    private final com.azure.resourcemanager.kubernetesconfiguration.privatelinkscopes.ScopeManager serviceManager;

    public ResourcesImpl(ResourcesClient innerClient,
        com.azure.resourcemanager.kubernetesconfiguration.privatelinkscopes.ScopeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ResourceListResult> listByPrivateLinkScopeWithResponse(String resourceGroupName, String scopeName,
        Context context) {
        Response<ResourceListResultInner> inner
            = this.serviceClient().listByPrivateLinkScopeWithResponse(resourceGroupName, scopeName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ResourceListResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ResourceListResult listByPrivateLinkScope(String resourceGroupName, String scopeName) {
        ResourceListResultInner inner = this.serviceClient().listByPrivateLinkScope(resourceGroupName, scopeName);
        if (inner != null) {
            return new ResourceListResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<PrivateLinkResource> getWithResponse(String resourceGroupName, String scopeName, String groupName,
        Context context) {
        Response<PrivateLinkResourceInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, scopeName, groupName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new PrivateLinkResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PrivateLinkResource get(String resourceGroupName, String scopeName, String groupName) {
        PrivateLinkResourceInner inner = this.serviceClient().get(resourceGroupName, scopeName, groupName);
        if (inner != null) {
            return new PrivateLinkResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ResourcesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.kubernetesconfiguration.privatelinkscopes.ScopeManager manager() {
        return this.serviceManager;
    }
}
