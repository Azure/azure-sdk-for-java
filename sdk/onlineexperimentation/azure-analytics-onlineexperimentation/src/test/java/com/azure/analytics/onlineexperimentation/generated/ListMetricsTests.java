// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.onlineexperimentation.generated;

import com.azure.analytics.onlineexperimentation.models.DesiredDirection;
import com.azure.analytics.onlineexperimentation.models.ExperimentMetric;
import com.azure.analytics.onlineexperimentation.models.ExperimentMetricDefinition;
import com.azure.analytics.onlineexperimentation.models.ExperimentMetricType;
import com.azure.analytics.onlineexperimentation.models.LifecycleStage;
import com.azure.core.http.HttpHeaderName;
import com.azure.core.http.rest.PagedIterable;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class ListMetricsTests extends OnlineExperimentationClientTestBase {
    @Test
    @Disabled
    public void testListMetricsTests() {
        // method invocation
        PagedIterable<ExperimentMetric> response = onlineExperimentationClient.listMetrics(8, 15);

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        Assertions.assertEquals("00000000-0000-0000-0000-000000000000",
            response.iterableByPage()
                .iterator()
                .next()
                .getHeaders()
                .get(HttpHeaderName.fromString("x-ms-client-request-id"))
                .getValue());
        ExperimentMetric firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "id"
        Assertions.assertEquals("events_purchase_creditcard", firstItem.getId());
        // verify property "lifecycle"
        Assertions.assertEquals(LifecycleStage.ACTIVE, firstItem.getLifecycle());
        // verify property "displayName"
        Assertions.assertEquals("Number of purchases (credit card)", firstItem.getDisplayName());
        // verify property "description"
        Assertions.assertEquals(
            "The number of purchase transactions made with credit card. Refund transactions are excluded from this metric.",
            firstItem.getDescription());
        // verify property "categories"
        List<String> firstItemCategories = firstItem.getCategories();
        Assertions.assertEquals("Monetization", firstItemCategories.iterator().next());
        // verify property "desiredDirection"
        Assertions.assertEquals(DesiredDirection.INCREASE, firstItem.getDesiredDirection());
        // verify property "definition"
        ExperimentMetricDefinition firstItemDefinition = firstItem.getDefinition();
        Assertions.assertNotNull(firstItemDefinition);
        Assertions.assertEquals(ExperimentMetricType.EVENT_COUNT, firstItemDefinition.getType());
        // verify property "eTag"
        Assertions.assertEquals("ckswkavwgassdlocwuzxz", firstItem.getETag());
        // verify property "lastModifiedAt"
        Assertions.assertNotNull(firstItem.getLastModifiedAt());
    }
}
