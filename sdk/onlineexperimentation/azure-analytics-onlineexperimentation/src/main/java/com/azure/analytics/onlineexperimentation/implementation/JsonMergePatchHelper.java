// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.onlineexperimentation.implementation;

import com.azure.analytics.onlineexperimentation.models.AggregatedValue;
import com.azure.analytics.onlineexperimentation.models.ExperimentMetric;
import com.azure.analytics.onlineexperimentation.models.ExperimentMetricDefinition;
import com.azure.analytics.onlineexperimentation.models.ObservedEvent;

/**
 * This is the Helper class to enable json merge patch serialization for a model.
 */
public class JsonMergePatchHelper {
    private static ExperimentMetricAccessor experimentMetricAccessor;

    public interface ExperimentMetricAccessor {
        ExperimentMetric prepareModelForJsonMergePatch(ExperimentMetric experimentMetric,
            boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(ExperimentMetric experimentMetric);
    }

    public static void setExperimentMetricAccessor(ExperimentMetricAccessor accessor) {
        experimentMetricAccessor = accessor;
    }

    public static ExperimentMetricAccessor getExperimentMetricAccessor() {
        return experimentMetricAccessor;
    }

    private static ExperimentMetricDefinitionAccessor experimentMetricDefinitionAccessor;

    public interface ExperimentMetricDefinitionAccessor {
        ExperimentMetricDefinition prepareModelForJsonMergePatch(ExperimentMetricDefinition experimentMetricDefinition,
            boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(ExperimentMetricDefinition experimentMetricDefinition);
    }

    public static void setExperimentMetricDefinitionAccessor(ExperimentMetricDefinitionAccessor accessor) {
        experimentMetricDefinitionAccessor = accessor;
    }

    public static ExperimentMetricDefinitionAccessor getExperimentMetricDefinitionAccessor() {
        return experimentMetricDefinitionAccessor;
    }

    private static ObservedEventAccessor observedEventAccessor;

    public interface ObservedEventAccessor {
        ObservedEvent prepareModelForJsonMergePatch(ObservedEvent observedEvent, boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(ObservedEvent observedEvent);
    }

    public static void setObservedEventAccessor(ObservedEventAccessor accessor) {
        observedEventAccessor = accessor;
    }

    public static ObservedEventAccessor getObservedEventAccessor() {
        return observedEventAccessor;
    }

    private static AggregatedValueAccessor aggregatedValueAccessor;

    public interface AggregatedValueAccessor {
        AggregatedValue prepareModelForJsonMergePatch(AggregatedValue aggregatedValue, boolean jsonMergePatchEnabled);

        boolean isJsonMergePatch(AggregatedValue aggregatedValue);
    }

    public static void setAggregatedValueAccessor(AggregatedValueAccessor accessor) {
        aggregatedValueAccessor = accessor;
    }

    public static AggregatedValueAccessor getAggregatedValueAccessor() {
        return aggregatedValueAccessor;
    }
}
