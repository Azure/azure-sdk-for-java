// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.onlineexperimentation.generated;

import com.azure.analytics.onlineexperimentation.OnlineExperimentationClient;
import com.azure.analytics.onlineexperimentation.OnlineExperimentationClientBuilder;
import com.azure.analytics.onlineexperimentation.models.AggregatedValue;
import com.azure.analytics.onlineexperimentation.models.AverageMetricDefinition;
import com.azure.analytics.onlineexperimentation.models.DesiredDirection;
import com.azure.analytics.onlineexperimentation.models.ExperimentMetric;
import com.azure.analytics.onlineexperimentation.models.LifecycleStage;
import com.azure.core.http.RequestConditions;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;
import java.time.OffsetDateTime;
import java.util.Arrays;

public class CreateOrUpdateMetricAverage {
    public static void main(String[] args) {
        OnlineExperimentationClient onlineExperimentationClient
            = new OnlineExperimentationClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT"))
                .buildClient();
        // BEGIN:com.azure.analytics.onlineexperimentation.generated.createorupdatemetric.createorupdatemetricaverage
        ExperimentMetric response = onlineExperimentationClient.createOrUpdateMetric("avg_purchase_revenue",
            new ExperimentMetric().setLifecycle(LifecycleStage.ACTIVE)
                .setDisplayName("Average revenue per purchase [USD]")
                .setDescription(
                    "The average revenue per purchase transaction in USD. Refund transactions are excluded from this metric. The total revenue might increase while this metric decreases if the number of purchases increases.")
                .setCategories(Arrays.asList("Monetization"))
                .setDesiredDirection(DesiredDirection.INCREASE)
                .setDefinition(new AverageMetricDefinition().setValue(new AggregatedValue().setEventName("Transaction")
                    .setFilter("Revenue > 0")
                    .setEventProperty("Revenue"))),
            new RequestConditions().setIfMatch("vxexdn")
                .setIfNoneMatch("ijchzdh")
                .setIfUnmodifiedSince(OffsetDateTime.parse("2024-08-22T02:02:11Z"))
                .setIfModifiedSince(OffsetDateTime.parse("2024-08-22T02:02:11Z")));
        // END:com.azure.analytics.onlineexperimentation.generated.createorupdatemetric.createorupdatemetricaverage
    }
}
