// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.onlineexperimentation.generated;

import com.azure.analytics.onlineexperimentation.OnlineExperimentationClient;
import com.azure.analytics.onlineexperimentation.OnlineExperimentationClientBuilder;
import com.azure.analytics.onlineexperimentation.models.DesiredDirection;
import com.azure.analytics.onlineexperimentation.models.EventRateMetricDefinition;
import com.azure.analytics.onlineexperimentation.models.ExperimentMetric;
import com.azure.analytics.onlineexperimentation.models.LifecycleStage;
import com.azure.analytics.onlineexperimentation.models.ObservedEvent;
import com.azure.core.http.RequestConditions;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;
import java.time.OffsetDateTime;
import java.util.Arrays;

public class CreateOrUpdateMetricEventRate {
    public static void main(String[] args) {
        OnlineExperimentationClient onlineExperimentationClient
            = new OnlineExperimentationClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT"))
                .buildClient();
        // BEGIN:com.azure.analytics.onlineexperimentation.generated.createorupdatemetric.createorupdatemetriceventrate
        ExperimentMetric response = onlineExperimentationClient.createOrUpdateMetric("rate_refund",
            new ExperimentMetric().setLifecycle(LifecycleStage.ACTIVE)
                .setDisplayName("Refund rate")
                .setDescription(
                    "The percentage of transactions that are refunds. This metric is calculated as the number of refund transactions divided by the total number of transactions.")
                .setCategories(Arrays.asList("Monetization"))
                .setDesiredDirection(DesiredDirection.NEUTRAL)
                .setDefinition(new EventRateMetricDefinition().setEvent(new ObservedEvent().setEventName("Transaction"))
                    .setRateCondition("Revenue < 0")),
            new RequestConditions().setIfMatch("vxexdn")
                .setIfNoneMatch("ijchzdh")
                .setIfUnmodifiedSince(OffsetDateTime.parse("2024-08-22T02:02:11Z"))
                .setIfModifiedSince(OffsetDateTime.parse("2024-08-22T02:02:11Z")));
        // END:com.azure.analytics.onlineexperimentation.generated.createorupdatemetric.createorupdatemetriceventrate
    }
}
