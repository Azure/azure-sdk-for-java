// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.onlineexperimentation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.onlineexperimentation.fluent.models.PrivateEndpointConnectionInner;
import java.io.IOException;
import java.util.List;

/**
 * The properties of an online experimentation workspace.
 */
@Fluent
public final class OnlineExperimentationWorkspaceProperties
    implements JsonSerializable<OnlineExperimentationWorkspaceProperties> {
    /*
     * The Id of the workspace.
     */
    private String workspaceId;

    /*
     * The provisioning state for the resource
     */
    private ResourceProvisioningState provisioningState;

    /*
     * The resource identifier of the Log Analytics workspace which online experimentation workspace uses for generating
     * experiment analysis results.
     */
    private String logAnalyticsWorkspaceResourceId;

    /*
     * The resource identifier of storage account where logs are exported from Log Analytics workspace. online
     * experimentation workspace uses it generating experiment analysis results.
     */
    private String logsExporterStorageAccountResourceId;

    /*
     * The resource identifier of App Configuration with which this online experimentation workspace is tied for
     * experimentation. This is a required field for creating an online experimentation workspace.
     */
    private String appConfigurationResourceId;

    /*
     * The encryption configuration for the online experimentation workspace resource.
     */
    private ResourceEncryptionConfiguration encryption;

    /*
     * The data plane endpoint for the online experimentation workspace resource.
     */
    private String endpoint;

    /*
     * Public Network Access Control for the online experimentation resource. Defaults to Enabled if not set.
     * - Enabled: The resource can be accessed from the public internet.
     * - Disabled: The resource can only be accessed from a private endpoint.
     */
    private PublicNetworkAccessType publicNetworkAccess;

    /*
     * The private endpoint connections associated with the online experimentation workspace resource.
     */
    private List<PrivateEndpointConnectionInner> privateEndpointConnections;

    /**
     * Creates an instance of OnlineExperimentationWorkspaceProperties class.
     */
    public OnlineExperimentationWorkspaceProperties() {
    }

    /**
     * Get the workspaceId property: The Id of the workspace.
     * 
     * @return the workspaceId value.
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    /**
     * Get the provisioningState property: The provisioning state for the resource.
     * 
     * @return the provisioningState value.
     */
    public ResourceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the logAnalyticsWorkspaceResourceId property: The resource identifier of the Log Analytics workspace which
     * online experimentation workspace uses for generating experiment analysis results.
     * 
     * @return the logAnalyticsWorkspaceResourceId value.
     */
    public String logAnalyticsWorkspaceResourceId() {
        return this.logAnalyticsWorkspaceResourceId;
    }

    /**
     * Set the logAnalyticsWorkspaceResourceId property: The resource identifier of the Log Analytics workspace which
     * online experimentation workspace uses for generating experiment analysis results.
     * 
     * @param logAnalyticsWorkspaceResourceId the logAnalyticsWorkspaceResourceId value to set.
     * @return the OnlineExperimentationWorkspaceProperties object itself.
     */
    public OnlineExperimentationWorkspaceProperties
        withLogAnalyticsWorkspaceResourceId(String logAnalyticsWorkspaceResourceId) {
        this.logAnalyticsWorkspaceResourceId = logAnalyticsWorkspaceResourceId;
        return this;
    }

    /**
     * Get the logsExporterStorageAccountResourceId property: The resource identifier of storage account where logs are
     * exported from Log Analytics workspace. online experimentation workspace uses it generating experiment analysis
     * results.
     * 
     * @return the logsExporterStorageAccountResourceId value.
     */
    public String logsExporterStorageAccountResourceId() {
        return this.logsExporterStorageAccountResourceId;
    }

    /**
     * Set the logsExporterStorageAccountResourceId property: The resource identifier of storage account where logs are
     * exported from Log Analytics workspace. online experimentation workspace uses it generating experiment analysis
     * results.
     * 
     * @param logsExporterStorageAccountResourceId the logsExporterStorageAccountResourceId value to set.
     * @return the OnlineExperimentationWorkspaceProperties object itself.
     */
    public OnlineExperimentationWorkspaceProperties
        withLogsExporterStorageAccountResourceId(String logsExporterStorageAccountResourceId) {
        this.logsExporterStorageAccountResourceId = logsExporterStorageAccountResourceId;
        return this;
    }

    /**
     * Get the appConfigurationResourceId property: The resource identifier of App Configuration with which this online
     * experimentation workspace is tied for experimentation. This is a required field for creating an online
     * experimentation workspace.
     * 
     * @return the appConfigurationResourceId value.
     */
    public String appConfigurationResourceId() {
        return this.appConfigurationResourceId;
    }

    /**
     * Set the appConfigurationResourceId property: The resource identifier of App Configuration with which this online
     * experimentation workspace is tied for experimentation. This is a required field for creating an online
     * experimentation workspace.
     * 
     * @param appConfigurationResourceId the appConfigurationResourceId value to set.
     * @return the OnlineExperimentationWorkspaceProperties object itself.
     */
    public OnlineExperimentationWorkspaceProperties withAppConfigurationResourceId(String appConfigurationResourceId) {
        this.appConfigurationResourceId = appConfigurationResourceId;
        return this;
    }

    /**
     * Get the encryption property: The encryption configuration for the online experimentation workspace resource.
     * 
     * @return the encryption value.
     */
    public ResourceEncryptionConfiguration encryption() {
        return this.encryption;
    }

    /**
     * Set the encryption property: The encryption configuration for the online experimentation workspace resource.
     * 
     * @param encryption the encryption value to set.
     * @return the OnlineExperimentationWorkspaceProperties object itself.
     */
    public OnlineExperimentationWorkspaceProperties withEncryption(ResourceEncryptionConfiguration encryption) {
        this.encryption = encryption;
        return this;
    }

    /**
     * Get the endpoint property: The data plane endpoint for the online experimentation workspace resource.
     * 
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Get the publicNetworkAccess property: Public Network Access Control for the online experimentation resource.
     * Defaults to Enabled if not set.
     * - Enabled: The resource can be accessed from the public internet.
     * - Disabled: The resource can only be accessed from a private endpoint.
     * 
     * @return the publicNetworkAccess value.
     */
    public PublicNetworkAccessType publicNetworkAccess() {
        return this.publicNetworkAccess;
    }

    /**
     * Set the publicNetworkAccess property: Public Network Access Control for the online experimentation resource.
     * Defaults to Enabled if not set.
     * - Enabled: The resource can be accessed from the public internet.
     * - Disabled: The resource can only be accessed from a private endpoint.
     * 
     * @param publicNetworkAccess the publicNetworkAccess value to set.
     * @return the OnlineExperimentationWorkspaceProperties object itself.
     */
    public OnlineExperimentationWorkspaceProperties
        withPublicNetworkAccess(PublicNetworkAccessType publicNetworkAccess) {
        this.publicNetworkAccess = publicNetworkAccess;
        return this;
    }

    /**
     * Get the privateEndpointConnections property: The private endpoint connections associated with the online
     * experimentation workspace resource.
     * 
     * @return the privateEndpointConnections value.
     */
    public List<PrivateEndpointConnectionInner> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("logAnalyticsWorkspaceResourceId", this.logAnalyticsWorkspaceResourceId);
        jsonWriter.writeStringField("logsExporterStorageAccountResourceId", this.logsExporterStorageAccountResourceId);
        jsonWriter.writeStringField("appConfigurationResourceId", this.appConfigurationResourceId);
        jsonWriter.writeJsonField("encryption", this.encryption);
        jsonWriter.writeStringField("publicNetworkAccess",
            this.publicNetworkAccess == null ? null : this.publicNetworkAccess.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OnlineExperimentationWorkspaceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OnlineExperimentationWorkspaceProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the OnlineExperimentationWorkspaceProperties.
     */
    public static OnlineExperimentationWorkspaceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OnlineExperimentationWorkspaceProperties deserializedOnlineExperimentationWorkspaceProperties
                = new OnlineExperimentationWorkspaceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("logAnalyticsWorkspaceResourceId".equals(fieldName)) {
                    deserializedOnlineExperimentationWorkspaceProperties.logAnalyticsWorkspaceResourceId
                        = reader.getString();
                } else if ("logsExporterStorageAccountResourceId".equals(fieldName)) {
                    deserializedOnlineExperimentationWorkspaceProperties.logsExporterStorageAccountResourceId
                        = reader.getString();
                } else if ("appConfigurationResourceId".equals(fieldName)) {
                    deserializedOnlineExperimentationWorkspaceProperties.appConfigurationResourceId
                        = reader.getString();
                } else if ("workspaceId".equals(fieldName)) {
                    deserializedOnlineExperimentationWorkspaceProperties.workspaceId = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedOnlineExperimentationWorkspaceProperties.provisioningState
                        = ResourceProvisioningState.fromString(reader.getString());
                } else if ("encryption".equals(fieldName)) {
                    deserializedOnlineExperimentationWorkspaceProperties.encryption
                        = ResourceEncryptionConfiguration.fromJson(reader);
                } else if ("endpoint".equals(fieldName)) {
                    deserializedOnlineExperimentationWorkspaceProperties.endpoint = reader.getString();
                } else if ("publicNetworkAccess".equals(fieldName)) {
                    deserializedOnlineExperimentationWorkspaceProperties.publicNetworkAccess
                        = PublicNetworkAccessType.fromString(reader.getString());
                } else if ("privateEndpointConnections".equals(fieldName)) {
                    List<PrivateEndpointConnectionInner> privateEndpointConnections
                        = reader.readArray(reader1 -> PrivateEndpointConnectionInner.fromJson(reader1));
                    deserializedOnlineExperimentationWorkspaceProperties.privateEndpointConnections
                        = privateEndpointConnections;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOnlineExperimentationWorkspaceProperties;
        });
    }
}
