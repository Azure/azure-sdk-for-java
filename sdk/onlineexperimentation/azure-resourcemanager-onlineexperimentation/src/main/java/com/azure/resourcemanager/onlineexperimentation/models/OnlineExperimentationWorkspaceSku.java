// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.onlineexperimentation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The SKU (Stock Keeping Unit) assigned to this resource.
 */
@Fluent
public final class OnlineExperimentationWorkspaceSku implements JsonSerializable<OnlineExperimentationWorkspaceSku> {
    /*
     * The name of the SKU. Ex - F0, P0. It is typically a letter+number code
     */
    private OnlineExperimentationWorkspaceSkuName name;

    /*
     * The name of the SKU tier
     */
    private OnlineExperimentationWorkspaceSkuTier tier;

    /**
     * Creates an instance of OnlineExperimentationWorkspaceSku class.
     */
    public OnlineExperimentationWorkspaceSku() {
    }

    /**
     * Get the name property: The name of the SKU. Ex - F0, P0. It is typically a letter+number code.
     * 
     * @return the name value.
     */
    public OnlineExperimentationWorkspaceSkuName name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the SKU. Ex - F0, P0. It is typically a letter+number code.
     * 
     * @param name the name value to set.
     * @return the OnlineExperimentationWorkspaceSku object itself.
     */
    public OnlineExperimentationWorkspaceSku withName(OnlineExperimentationWorkspaceSkuName name) {
        this.name = name;
        return this;
    }

    /**
     * Get the tier property: The name of the SKU tier.
     * 
     * @return the tier value.
     */
    public OnlineExperimentationWorkspaceSkuTier tier() {
        return this.tier;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name == null ? null : this.name.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OnlineExperimentationWorkspaceSku from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OnlineExperimentationWorkspaceSku if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the OnlineExperimentationWorkspaceSku.
     */
    public static OnlineExperimentationWorkspaceSku fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OnlineExperimentationWorkspaceSku deserializedOnlineExperimentationWorkspaceSku
                = new OnlineExperimentationWorkspaceSku();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedOnlineExperimentationWorkspaceSku.name
                        = OnlineExperimentationWorkspaceSkuName.fromString(reader.getString());
                } else if ("tier".equals(fieldName)) {
                    deserializedOnlineExperimentationWorkspaceSku.tier
                        = OnlineExperimentationWorkspaceSkuTier.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOnlineExperimentationWorkspaceSku;
        });
    }
}
