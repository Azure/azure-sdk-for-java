// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.onlineexperimentation.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.onlineexperimentation.fluent.models.OnlineExperimentWorkspaceInner;
import com.azure.resourcemanager.onlineexperimentation.models.ManagedServiceIdentity;
import com.azure.resourcemanager.onlineexperimentation.models.OnlineExperimentWorkspace;
import com.azure.resourcemanager.onlineexperimentation.models.OnlineExperimentWorkspacePatch;
import com.azure.resourcemanager.onlineexperimentation.models.OnlineExperimentWorkspacePatchProperties;
import com.azure.resourcemanager.onlineexperimentation.models.OnlineExperimentWorkspaceProperties;
import com.azure.resourcemanager.onlineexperimentation.models.OnlineExperimentationWorkspaceSku;
import java.util.Collections;
import java.util.Map;

public final class OnlineExperimentWorkspaceImpl
    implements OnlineExperimentWorkspace, OnlineExperimentWorkspace.Definition, OnlineExperimentWorkspace.Update {
    private OnlineExperimentWorkspaceInner innerObject;

    private final com.azure.resourcemanager.onlineexperimentation.OnlineExperimentationManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public OnlineExperimentWorkspaceProperties properties() {
        return this.innerModel().properties();
    }

    public ManagedServiceIdentity identity() {
        return this.innerModel().identity();
    }

    public OnlineExperimentationWorkspaceSku sku() {
        return this.innerModel().sku();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public OnlineExperimentWorkspaceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.onlineexperimentation.OnlineExperimentationManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private OnlineExperimentWorkspacePatch updateProperties;

    public OnlineExperimentWorkspaceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public OnlineExperimentWorkspace create() {
        this.innerObject = serviceManager.serviceClient()
            .getOnlineExperimentWorkspaces()
            .createOrUpdate(resourceGroupName, workspaceName, this.innerModel(), Context.NONE);
        return this;
    }

    public OnlineExperimentWorkspace create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getOnlineExperimentWorkspaces()
            .createOrUpdate(resourceGroupName, workspaceName, this.innerModel(), context);
        return this;
    }

    OnlineExperimentWorkspaceImpl(String name,
        com.azure.resourcemanager.onlineexperimentation.OnlineExperimentationManager serviceManager) {
        this.innerObject = new OnlineExperimentWorkspaceInner();
        this.serviceManager = serviceManager;
        this.workspaceName = name;
    }

    public OnlineExperimentWorkspaceImpl update() {
        this.updateProperties = new OnlineExperimentWorkspacePatch();
        return this;
    }

    public OnlineExperimentWorkspace apply() {
        this.innerObject = serviceManager.serviceClient()
            .getOnlineExperimentWorkspaces()
            .update(resourceGroupName, workspaceName, updateProperties, Context.NONE);
        return this;
    }

    public OnlineExperimentWorkspace apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getOnlineExperimentWorkspaces()
            .update(resourceGroupName, workspaceName, updateProperties, context);
        return this;
    }

    OnlineExperimentWorkspaceImpl(OnlineExperimentWorkspaceInner innerObject,
        com.azure.resourcemanager.onlineexperimentation.OnlineExperimentationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "workspaces");
    }

    public OnlineExperimentWorkspace refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getOnlineExperimentWorkspaces()
            .getByResourceGroupWithResponse(resourceGroupName, workspaceName, Context.NONE)
            .getValue();
        return this;
    }

    public OnlineExperimentWorkspace refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getOnlineExperimentWorkspaces()
            .getByResourceGroupWithResponse(resourceGroupName, workspaceName, context)
            .getValue();
        return this;
    }

    public OnlineExperimentWorkspaceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public OnlineExperimentWorkspaceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public OnlineExperimentWorkspaceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public OnlineExperimentWorkspaceImpl withProperties(OnlineExperimentWorkspaceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public OnlineExperimentWorkspaceImpl withIdentity(ManagedServiceIdentity identity) {
        if (isInCreateMode()) {
            this.innerModel().withIdentity(identity);
            return this;
        } else {
            this.updateProperties.withIdentity(identity);
            return this;
        }
    }

    public OnlineExperimentWorkspaceImpl withSku(OnlineExperimentationWorkspaceSku sku) {
        if (isInCreateMode()) {
            this.innerModel().withSku(sku);
            return this;
        } else {
            this.updateProperties.withSku(sku);
            return this;
        }
    }

    public OnlineExperimentWorkspaceImpl withProperties(OnlineExperimentWorkspacePatchProperties properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
