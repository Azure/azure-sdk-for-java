// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sqlvirtualmachine.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.sqlvirtualmachine.models.AutoBackupDaysOfWeek;
import com.azure.resourcemanager.sqlvirtualmachine.models.AutoBackupSettings;
import com.azure.resourcemanager.sqlvirtualmachine.models.BackupScheduleType;
import com.azure.resourcemanager.sqlvirtualmachine.models.FullBackupFrequencyType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AutoBackupSettingsTests {
    @Test
    public void testDeserialize() {
        AutoBackupSettings model =
            BinaryData
                .fromString(
                    "{\"enable\":false,\"enableEncryption\":true,\"retentionPeriod\":1821646506,\"storageAccountUrl\":\"xw\",\"storageContainerName\":\"pwhonowkg\",\"storageAccessKey\":\"wankixzbi\",\"password\":\"eputtmrywnuzoqf\",\"backupSystemDbs\":true,\"backupScheduleType\":\"Automated\",\"fullBackupFrequency\":\"Daily\",\"daysOfWeek\":[\"Saturday\",\"Monday\",\"Sunday\",\"Tuesday\"],\"fullBackupStartTime\":798441434,\"fullBackupWindowHours\":1495315655,\"logBackupFrequency\":1368622267}")
                .toObject(AutoBackupSettings.class);
        Assertions.assertEquals(false, model.enable());
        Assertions.assertEquals(true, model.enableEncryption());
        Assertions.assertEquals(1821646506, model.retentionPeriod());
        Assertions.assertEquals("xw", model.storageAccountUrl());
        Assertions.assertEquals("pwhonowkg", model.storageContainerName());
        Assertions.assertEquals("wankixzbi", model.storageAccessKey());
        Assertions.assertEquals("eputtmrywnuzoqf", model.password());
        Assertions.assertEquals(true, model.backupSystemDbs());
        Assertions.assertEquals(BackupScheduleType.AUTOMATED, model.backupScheduleType());
        Assertions.assertEquals(FullBackupFrequencyType.DAILY, model.fullBackupFrequency());
        Assertions.assertEquals(AutoBackupDaysOfWeek.SATURDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(798441434, model.fullBackupStartTime());
        Assertions.assertEquals(1495315655, model.fullBackupWindowHours());
        Assertions.assertEquals(1368622267, model.logBackupFrequency());
    }

    @Test
    public void testSerialize() {
        AutoBackupSettings model =
            new AutoBackupSettings()
                .withEnable(false)
                .withEnableEncryption(true)
                .withRetentionPeriod(1821646506)
                .withStorageAccountUrl("xw")
                .withStorageContainerName("pwhonowkg")
                .withStorageAccessKey("wankixzbi")
                .withPassword("eputtmrywnuzoqf")
                .withBackupSystemDbs(true)
                .withBackupScheduleType(BackupScheduleType.AUTOMATED)
                .withFullBackupFrequency(FullBackupFrequencyType.DAILY)
                .withDaysOfWeek(
                    Arrays
                        .asList(
                            AutoBackupDaysOfWeek.SATURDAY,
                            AutoBackupDaysOfWeek.MONDAY,
                            AutoBackupDaysOfWeek.SUNDAY,
                            AutoBackupDaysOfWeek.TUESDAY))
                .withFullBackupStartTime(798441434)
                .withFullBackupWindowHours(1495315655)
                .withLogBackupFrequency(1368622267);
        model = BinaryData.fromObject(model).toObject(AutoBackupSettings.class);
        Assertions.assertEquals(false, model.enable());
        Assertions.assertEquals(true, model.enableEncryption());
        Assertions.assertEquals(1821646506, model.retentionPeriod());
        Assertions.assertEquals("xw", model.storageAccountUrl());
        Assertions.assertEquals("pwhonowkg", model.storageContainerName());
        Assertions.assertEquals("wankixzbi", model.storageAccessKey());
        Assertions.assertEquals("eputtmrywnuzoqf", model.password());
        Assertions.assertEquals(true, model.backupSystemDbs());
        Assertions.assertEquals(BackupScheduleType.AUTOMATED, model.backupScheduleType());
        Assertions.assertEquals(FullBackupFrequencyType.DAILY, model.fullBackupFrequency());
        Assertions.assertEquals(AutoBackupDaysOfWeek.SATURDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(798441434, model.fullBackupStartTime());
        Assertions.assertEquals(1495315655, model.fullBackupWindowHours());
        Assertions.assertEquals(1368622267, model.logBackupFrequency());
    }
}
