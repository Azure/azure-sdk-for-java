// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sqlvirtualmachine.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.sqlvirtualmachine.models.LoadBalancerConfiguration;
import com.azure.resourcemanager.sqlvirtualmachine.models.PrivateIpAddress;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LoadBalancerConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LoadBalancerConfiguration model = BinaryData.fromString(
            "{\"privateIpAddress\":{\"ipAddress\":\"fxxypininmayhuy\",\"subnetResourceId\":\"kpode\"},\"publicIpAddressResourceId\":\"oginuvamiheognar\",\"loadBalancerResourceId\":\"xth\",\"probePort\":1638968400,\"sqlVirtualMachineInstances\":[\"ivyevcciqihnhun\"]}")
            .toObject(LoadBalancerConfiguration.class);
        Assertions.assertEquals("fxxypininmayhuy", model.privateIpAddress().ipAddress());
        Assertions.assertEquals("kpode", model.privateIpAddress().subnetResourceId());
        Assertions.assertEquals("oginuvamiheognar", model.publicIpAddressResourceId());
        Assertions.assertEquals("xth", model.loadBalancerResourceId());
        Assertions.assertEquals(1638968400, model.probePort());
        Assertions.assertEquals("ivyevcciqihnhun", model.sqlVirtualMachineInstances().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LoadBalancerConfiguration model = new LoadBalancerConfiguration()
            .withPrivateIpAddress(new PrivateIpAddress().withIpAddress("fxxypininmayhuy").withSubnetResourceId("kpode"))
            .withPublicIpAddressResourceId("oginuvamiheognar")
            .withLoadBalancerResourceId("xth")
            .withProbePort(1638968400)
            .withSqlVirtualMachineInstances(Arrays.asList("ivyevcciqihnhun"));
        model = BinaryData.fromObject(model).toObject(LoadBalancerConfiguration.class);
        Assertions.assertEquals("fxxypininmayhuy", model.privateIpAddress().ipAddress());
        Assertions.assertEquals("kpode", model.privateIpAddress().subnetResourceId());
        Assertions.assertEquals("oginuvamiheognar", model.publicIpAddressResourceId());
        Assertions.assertEquals("xth", model.loadBalancerResourceId());
        Assertions.assertEquals(1638968400, model.probePort());
        Assertions.assertEquals("ivyevcciqihnhun", model.sqlVirtualMachineInstances().get(0));
    }
}
