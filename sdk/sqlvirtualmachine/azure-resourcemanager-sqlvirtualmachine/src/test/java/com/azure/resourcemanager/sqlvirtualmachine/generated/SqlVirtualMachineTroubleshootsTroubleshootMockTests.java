// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sqlvirtualmachine.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.sqlvirtualmachine.SqlVirtualMachineManager;
import com.azure.resourcemanager.sqlvirtualmachine.fluent.models.SqlVmTroubleshootingInner;
import com.azure.resourcemanager.sqlvirtualmachine.models.SqlVmTroubleshooting;
import com.azure.resourcemanager.sqlvirtualmachine.models.TroubleshootingAdditionalProperties;
import com.azure.resourcemanager.sqlvirtualmachine.models.TroubleshootingScenario;
import com.azure.resourcemanager.sqlvirtualmachine.models.UnhealthyReplicaInfo;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlVirtualMachineTroubleshootsTroubleshootMockTests {
    @Test
    public void testTroubleshoot() throws Exception {
        String responseStr
            = "{\"startTimeUtc\":\"2021-02-19T02:21:49Z\",\"endTimeUtc\":\"2021-03-13T21:06:45Z\",\"troubleshootingScenario\":\"UnhealthyReplica\",\"properties\":{\"unhealthyReplicaInfo\":{\"availabilityGroupName\":\"rgly\"}},\"virtualMachineResourceId\":\"dd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SqlVirtualMachineManager manager = SqlVirtualMachineManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SqlVmTroubleshooting response = manager.sqlVirtualMachineTroubleshoots()
            .troubleshoot("jmquxvypomgk", "pkwhojvpa",
                new SqlVmTroubleshootingInner().withStartTimeUtc(OffsetDateTime.parse("2021-09-03T12:55:38Z"))
                    .withEndTimeUtc(OffsetDateTime.parse("2021-11-27T13:09:17Z"))
                    .withTroubleshootingScenario(TroubleshootingScenario.UNHEALTHY_REPLICA)
                    .withProperties(new TroubleshootingAdditionalProperties()
                        .withUnhealthyReplicaInfo(new UnhealthyReplicaInfo().withAvailabilityGroupName("bq"))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OffsetDateTime.parse("2021-02-19T02:21:49Z"), response.startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-13T21:06:45Z"), response.endTimeUtc());
        Assertions.assertEquals(TroubleshootingScenario.UNHEALTHY_REPLICA, response.troubleshootingScenario());
        Assertions.assertEquals("rgly", response.properties().unhealthyReplicaInfo().availabilityGroupName());
    }
}
