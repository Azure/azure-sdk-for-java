// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sqlvirtualmachine.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.sqlvirtualmachine.models.SqlTempDbSettings;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SqlTempDbSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlTempDbSettings model = BinaryData.fromString(
            "{\"dataFileSize\":26085617,\"dataGrowth\":998039935,\"logFileSize\":1027022233,\"logGrowth\":1162722818,\"dataFileCount\":1075133602,\"persistFolder\":false,\"persistFolderPath\":\"ddystkiiuxhqy\",\"luns\":[186143874,2120884016],\"defaultFilePath\":\"qn\"}")
            .toObject(SqlTempDbSettings.class);
        Assertions.assertEquals(26085617, model.dataFileSize());
        Assertions.assertEquals(998039935, model.dataGrowth());
        Assertions.assertEquals(1027022233, model.logFileSize());
        Assertions.assertEquals(1162722818, model.logGrowth());
        Assertions.assertEquals(1075133602, model.dataFileCount());
        Assertions.assertEquals(false, model.persistFolder());
        Assertions.assertEquals("ddystkiiuxhqy", model.persistFolderPath());
        Assertions.assertEquals(186143874, model.luns().get(0));
        Assertions.assertEquals("qn", model.defaultFilePath());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlTempDbSettings model = new SqlTempDbSettings().withDataFileSize(26085617)
            .withDataGrowth(998039935)
            .withLogFileSize(1027022233)
            .withLogGrowth(1162722818)
            .withDataFileCount(1075133602)
            .withPersistFolder(false)
            .withPersistFolderPath("ddystkiiuxhqy")
            .withLuns(Arrays.asList(186143874, 2120884016))
            .withDefaultFilePath("qn");
        model = BinaryData.fromObject(model).toObject(SqlTempDbSettings.class);
        Assertions.assertEquals(26085617, model.dataFileSize());
        Assertions.assertEquals(998039935, model.dataGrowth());
        Assertions.assertEquals(1027022233, model.logFileSize());
        Assertions.assertEquals(1162722818, model.logGrowth());
        Assertions.assertEquals(1075133602, model.dataFileCount());
        Assertions.assertEquals(false, model.persistFolder());
        Assertions.assertEquals("ddystkiiuxhqy", model.persistFolderPath());
        Assertions.assertEquals(186143874, model.luns().get(0));
        Assertions.assertEquals("qn", model.defaultFilePath());
    }
}
