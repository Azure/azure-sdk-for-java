// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sqlvirtualmachine.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.sqlvirtualmachine.models.AgReplica;
import com.azure.resourcemanager.sqlvirtualmachine.models.Commit;
import com.azure.resourcemanager.sqlvirtualmachine.models.Failover;
import com.azure.resourcemanager.sqlvirtualmachine.models.ReadableSecondary;
import com.azure.resourcemanager.sqlvirtualmachine.models.Role;
import org.junit.jupiter.api.Assertions;

public final class AgReplicaTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AgReplica model = BinaryData.fromString(
            "{\"sqlVirtualMachineInstanceId\":\"yqduujit\",\"role\":\"PRIMARY\",\"commit\":\"ASYNCHRONOUS_COMMIT\",\"failover\":\"AUTOMATIC\",\"readableSecondary\":\"NO\"}")
            .toObject(AgReplica.class);
        Assertions.assertEquals("yqduujit", model.sqlVirtualMachineInstanceId());
        Assertions.assertEquals(Role.PRIMARY, model.role());
        Assertions.assertEquals(Commit.ASYNCHRONOUS_COMMIT, model.commit());
        Assertions.assertEquals(Failover.AUTOMATIC, model.failover());
        Assertions.assertEquals(ReadableSecondary.NO, model.readableSecondary());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AgReplica model = new AgReplica().withSqlVirtualMachineInstanceId("yqduujit")
            .withRole(Role.PRIMARY)
            .withCommit(Commit.ASYNCHRONOUS_COMMIT)
            .withFailover(Failover.AUTOMATIC)
            .withReadableSecondary(ReadableSecondary.NO);
        model = BinaryData.fromObject(model).toObject(AgReplica.class);
        Assertions.assertEquals("yqduujit", model.sqlVirtualMachineInstanceId());
        Assertions.assertEquals(Role.PRIMARY, model.role());
        Assertions.assertEquals(Commit.ASYNCHRONOUS_COMMIT, model.commit());
        Assertions.assertEquals(Failover.AUTOMATIC, model.failover());
        Assertions.assertEquals(ReadableSecondary.NO, model.readableSecondary());
    }
}
