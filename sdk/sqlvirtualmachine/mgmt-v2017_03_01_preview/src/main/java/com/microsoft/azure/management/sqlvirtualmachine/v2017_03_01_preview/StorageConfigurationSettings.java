/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Storage Configurations for SQL Data, Log and TempDb.
 */
public class StorageConfigurationSettings {
    /**
     * SQL Server Data Storage Settings.
     */
    @JsonProperty(value = "sqlDataSettings")
    private SQLStorageSettings sqlDataSettings;

    /**
     * SQL Server Log Storage Settings.
     */
    @JsonProperty(value = "sqlLogSettings")
    private SQLStorageSettings sqlLogSettings;

    /**
     * SQL Server TempDb Storage Settings.
     */
    @JsonProperty(value = "sqlTempDbSettings")
    private SQLStorageSettings sqlTempDbSettings;

    /**
     * Disk configuration to apply to SQL Server. Possible values include:
     * 'NEW', 'EXTEND', 'ADD'.
     */
    @JsonProperty(value = "diskConfigurationType")
    private DiskConfigurationType diskConfigurationType;

    /**
     * Storage workload type. Possible values include: 'GENERAL', 'OLTP', 'DW'.
     */
    @JsonProperty(value = "storageWorkloadType")
    private StorageWorkloadType storageWorkloadType;

    /**
     * Get sQL Server Data Storage Settings.
     *
     * @return the sqlDataSettings value
     */
    public SQLStorageSettings sqlDataSettings() {
        return this.sqlDataSettings;
    }

    /**
     * Set sQL Server Data Storage Settings.
     *
     * @param sqlDataSettings the sqlDataSettings value to set
     * @return the StorageConfigurationSettings object itself.
     */
    public StorageConfigurationSettings withSqlDataSettings(SQLStorageSettings sqlDataSettings) {
        this.sqlDataSettings = sqlDataSettings;
        return this;
    }

    /**
     * Get sQL Server Log Storage Settings.
     *
     * @return the sqlLogSettings value
     */
    public SQLStorageSettings sqlLogSettings() {
        return this.sqlLogSettings;
    }

    /**
     * Set sQL Server Log Storage Settings.
     *
     * @param sqlLogSettings the sqlLogSettings value to set
     * @return the StorageConfigurationSettings object itself.
     */
    public StorageConfigurationSettings withSqlLogSettings(SQLStorageSettings sqlLogSettings) {
        this.sqlLogSettings = sqlLogSettings;
        return this;
    }

    /**
     * Get sQL Server TempDb Storage Settings.
     *
     * @return the sqlTempDbSettings value
     */
    public SQLStorageSettings sqlTempDbSettings() {
        return this.sqlTempDbSettings;
    }

    /**
     * Set sQL Server TempDb Storage Settings.
     *
     * @param sqlTempDbSettings the sqlTempDbSettings value to set
     * @return the StorageConfigurationSettings object itself.
     */
    public StorageConfigurationSettings withSqlTempDbSettings(SQLStorageSettings sqlTempDbSettings) {
        this.sqlTempDbSettings = sqlTempDbSettings;
        return this;
    }

    /**
     * Get disk configuration to apply to SQL Server. Possible values include: 'NEW', 'EXTEND', 'ADD'.
     *
     * @return the diskConfigurationType value
     */
    public DiskConfigurationType diskConfigurationType() {
        return this.diskConfigurationType;
    }

    /**
     * Set disk configuration to apply to SQL Server. Possible values include: 'NEW', 'EXTEND', 'ADD'.
     *
     * @param diskConfigurationType the diskConfigurationType value to set
     * @return the StorageConfigurationSettings object itself.
     */
    public StorageConfigurationSettings withDiskConfigurationType(DiskConfigurationType diskConfigurationType) {
        this.diskConfigurationType = diskConfigurationType;
        return this;
    }

    /**
     * Get storage workload type. Possible values include: 'GENERAL', 'OLTP', 'DW'.
     *
     * @return the storageWorkloadType value
     */
    public StorageWorkloadType storageWorkloadType() {
        return this.storageWorkloadType;
    }

    /**
     * Set storage workload type. Possible values include: 'GENERAL', 'OLTP', 'DW'.
     *
     * @param storageWorkloadType the storageWorkloadType value to set
     * @return the StorageConfigurationSettings object itself.
     */
    public StorageConfigurationSettings withStorageWorkloadType(StorageWorkloadType storageWorkloadType) {
        this.storageWorkloadType = storageWorkloadType;
        return this;
    }

}
