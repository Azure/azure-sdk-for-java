/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.implementation;

import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.SqlVirtualMachine;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import java.util.Map;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.ResourceIdentity;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.SqlServerLicenseType;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.SqlManagementMode;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.SqlImageSku;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.WsfcDomainCredentials;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.AutoPatchingSettings;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.AutoBackupSettings;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.KeyVaultCredentialSettings;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.ServerConfigurationsManagementSettings;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.StorageConfigurationSettings;

class SqlVirtualMachineImpl extends CreatableUpdatableImpl<SqlVirtualMachine, SqlVirtualMachineInner, SqlVirtualMachineImpl> implements SqlVirtualMachine, SqlVirtualMachine.Definition, SqlVirtualMachine.Update {
    private final SqlVirtualMachineManager manager;
    private String resourceGroupName;
    private String sqlVirtualMachineName;

    SqlVirtualMachineImpl(String name, SqlVirtualMachineManager manager) {
        super(name, new SqlVirtualMachineInner());
        this.manager = manager;
        // Set resource name
        this.sqlVirtualMachineName = name;
        //
    }

    SqlVirtualMachineImpl(SqlVirtualMachineInner inner, SqlVirtualMachineManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.sqlVirtualMachineName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.sqlVirtualMachineName = IdParsingUtils.getValueFromIdByName(inner.id(), "sqlVirtualMachines");
        //
    }

    @Override
    public SqlVirtualMachineManager manager() {
        return this.manager;
    }

    @Override
    public Observable<SqlVirtualMachine> createResourceAsync() {
        SqlVirtualMachinesInner client = this.manager().inner().sqlVirtualMachines();
        return client.createOrUpdateAsync(this.resourceGroupName, this.sqlVirtualMachineName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<SqlVirtualMachine> updateResourceAsync() {
        SqlVirtualMachinesInner client = this.manager().inner().sqlVirtualMachines();
        return client.createOrUpdateAsync(this.resourceGroupName, this.sqlVirtualMachineName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<SqlVirtualMachineInner> getInnerAsync() {
        SqlVirtualMachinesInner client = this.manager().inner().sqlVirtualMachines();
        return null; // NOP getInnerAsync implementation as get is not supported
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public AutoBackupSettings autoBackupSettings() {
        return this.inner().autoBackupSettings();
    }

    @Override
    public AutoPatchingSettings autoPatchingSettings() {
        return this.inner().autoPatchingSettings();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public ResourceIdentity identity() {
        return this.inner().identity();
    }

    @Override
    public KeyVaultCredentialSettings keyVaultCredentialSettings() {
        return this.inner().keyVaultCredentialSettings();
    }

    @Override
    public String location() {
        return this.inner().location();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public ServerConfigurationsManagementSettings serverConfigurationsManagementSettings() {
        return this.inner().serverConfigurationsManagementSettings();
    }

    @Override
    public String sqlImageOffer() {
        return this.inner().sqlImageOffer();
    }

    @Override
    public SqlImageSku sqlImageSku() {
        return this.inner().sqlImageSku();
    }

    @Override
    public SqlManagementMode sqlManagement() {
        return this.inner().sqlManagement();
    }

    @Override
    public SqlServerLicenseType sqlServerLicenseType() {
        return this.inner().sqlServerLicenseType();
    }

    @Override
    public String sqlVirtualMachineGroupResourceId() {
        return this.inner().sqlVirtualMachineGroupResourceId();
    }

    @Override
    public StorageConfigurationSettings storageConfigurationSettings() {
        return this.inner().storageConfigurationSettings();
    }

    @Override
    public Map<String, String> tags() {
        return this.inner().getTags();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public String virtualMachineResourceId() {
        return this.inner().virtualMachineResourceId();
    }

    @Override
    public WsfcDomainCredentials wsfcDomainCredentials() {
        return this.inner().wsfcDomainCredentials();
    }

    @Override
    public SqlVirtualMachineImpl withExistingSqlVirtualMachineGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withLocation(String location) {
        this.inner().withLocation(location);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withAutoBackupSettings(AutoBackupSettings autoBackupSettings) {
        this.inner().withAutoBackupSettings(autoBackupSettings);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withAutoPatchingSettings(AutoPatchingSettings autoPatchingSettings) {
        this.inner().withAutoPatchingSettings(autoPatchingSettings);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withIdentity(ResourceIdentity identity) {
        this.inner().withIdentity(identity);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withKeyVaultCredentialSettings(KeyVaultCredentialSettings keyVaultCredentialSettings) {
        this.inner().withKeyVaultCredentialSettings(keyVaultCredentialSettings);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withServerConfigurationsManagementSettings(ServerConfigurationsManagementSettings serverConfigurationsManagementSettings) {
        this.inner().withServerConfigurationsManagementSettings(serverConfigurationsManagementSettings);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withSqlImageOffer(String sqlImageOffer) {
        this.inner().withSqlImageOffer(sqlImageOffer);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withSqlImageSku(SqlImageSku sqlImageSku) {
        this.inner().withSqlImageSku(sqlImageSku);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withSqlManagement(SqlManagementMode sqlManagement) {
        this.inner().withSqlManagement(sqlManagement);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withSqlServerLicenseType(SqlServerLicenseType sqlServerLicenseType) {
        this.inner().withSqlServerLicenseType(sqlServerLicenseType);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withSqlVirtualMachineGroupResourceId(String sqlVirtualMachineGroupResourceId) {
        this.inner().withSqlVirtualMachineGroupResourceId(sqlVirtualMachineGroupResourceId);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withStorageConfigurationSettings(StorageConfigurationSettings storageConfigurationSettings) {
        this.inner().withStorageConfigurationSettings(storageConfigurationSettings);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withTags(Map<String, String> tags) {
        this.inner().withTags(tags);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withVirtualMachineResourceId(String virtualMachineResourceId) {
        this.inner().withVirtualMachineResourceId(virtualMachineResourceId);
        return this;
    }

    @Override
    public SqlVirtualMachineImpl withWsfcDomainCredentials(WsfcDomainCredentials wsfcDomainCredentials) {
        this.inner().withWsfcDomainCredentials(wsfcDomainCredentials);
        return this;
    }

}
