/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.SqlVirtualMachines;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import rx.Completable;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.SqlVirtualMachine;

class SqlVirtualMachinesImpl extends WrapperImpl<SqlVirtualMachinesInner> implements SqlVirtualMachines {
    private final SqlVirtualMachineManager manager;

    SqlVirtualMachinesImpl(SqlVirtualMachineManager manager) {
        super(manager.inner().sqlVirtualMachines());
        this.manager = manager;
    }

    public SqlVirtualMachineManager manager() {
        return this.manager;
    }

    @Override
    public SqlVirtualMachineImpl define(String name) {
        return wrapModel(name);
    }

    private SqlVirtualMachineImpl wrapModel(SqlVirtualMachineInner inner) {
        return  new SqlVirtualMachineImpl(inner, manager());
    }

    private SqlVirtualMachineImpl wrapModel(String name) {
        return new SqlVirtualMachineImpl(name, this.manager());
    }

    @Override
    public Observable<SqlVirtualMachine> getByResourceGroupAsync(String resourceGroupName, String sqlVirtualMachineName) {
        SqlVirtualMachinesInner client = this.inner();
        return client.getByResourceGroupAsync(resourceGroupName, sqlVirtualMachineName)
        .map(new Func1<SqlVirtualMachineInner, SqlVirtualMachine>() {
            @Override
            public SqlVirtualMachine call(SqlVirtualMachineInner inner) {
                return new SqlVirtualMachineImpl(inner, manager());
            }
        });
    }

    @Override
    public Completable deleteAsync(String resourceGroupName, String sqlVirtualMachineName) {
        SqlVirtualMachinesInner client = this.inner();
        return client.deleteAsync(resourceGroupName, sqlVirtualMachineName).toCompletable();
    }

    @Override
    public Observable<SqlVirtualMachine> listAsync() {
        SqlVirtualMachinesInner client = this.inner();
        return client.listAsync()
        .flatMapIterable(new Func1<Page<SqlVirtualMachineInner>, Iterable<SqlVirtualMachineInner>>() {
            @Override
            public Iterable<SqlVirtualMachineInner> call(Page<SqlVirtualMachineInner> page) {
                return page.items();
            }
        })
        .map(new Func1<SqlVirtualMachineInner, SqlVirtualMachine>() {
            @Override
            public SqlVirtualMachine call(SqlVirtualMachineInner inner) {
                return new SqlVirtualMachineImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<SqlVirtualMachine> listByResourceGroupAsync(final String resourceGroupName) {
        SqlVirtualMachinesInner client = this.inner();
        return client.listByResourceGroupAsync(resourceGroupName)
        .flatMapIterable(new Func1<Page<SqlVirtualMachineInner>, Iterable<SqlVirtualMachineInner>>() {
            @Override
            public Iterable<SqlVirtualMachineInner> call(Page<SqlVirtualMachineInner> page) {
                return page.items();
            }
        })
        .map(new Func1<SqlVirtualMachineInner, SqlVirtualMachine>() {
            @Override
            public SqlVirtualMachine call(SqlVirtualMachineInner inner) {
                return new SqlVirtualMachineImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<SqlVirtualMachine> listBySqlVmGroupAsync(final String resourceGroupName, final String sqlVirtualMachineGroupName) {
        SqlVirtualMachinesInner client = this.inner();
        return client.listBySqlVmGroupAsync(resourceGroupName, sqlVirtualMachineGroupName)
        .flatMapIterable(new Func1<Page<SqlVirtualMachineInner>, Iterable<SqlVirtualMachineInner>>() {
            @Override
            public Iterable<SqlVirtualMachineInner> call(Page<SqlVirtualMachineInner> page) {
                return page.items();
            }
        })
        .map(new Func1<SqlVirtualMachineInner, SqlVirtualMachine>() {
            @Override
            public SqlVirtualMachine call(SqlVirtualMachineInner inner) {
                return wrapModel(inner);
            }
        });
    }

}
