/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Set disk storage settings for SQL Server.
 */
public class SqlStorageUpdateSettings {
    /**
     * Virtual machine disk count.
     */
    @JsonProperty(value = "diskCount")
    private Integer diskCount;

    /**
     * Device id of the first disk to be updated.
     */
    @JsonProperty(value = "startingDeviceId")
    private Integer startingDeviceId;

    /**
     * Disk configuration to apply to SQL Server. Possible values include:
     * 'NEW', 'EXTEND', 'ADD'.
     */
    @JsonProperty(value = "diskConfigurationType")
    private DiskConfigurationType diskConfigurationType;

    /**
     * Get virtual machine disk count.
     *
     * @return the diskCount value
     */
    public Integer diskCount() {
        return this.diskCount;
    }

    /**
     * Set virtual machine disk count.
     *
     * @param diskCount the diskCount value to set
     * @return the SqlStorageUpdateSettings object itself.
     */
    public SqlStorageUpdateSettings withDiskCount(Integer diskCount) {
        this.diskCount = diskCount;
        return this;
    }

    /**
     * Get device id of the first disk to be updated.
     *
     * @return the startingDeviceId value
     */
    public Integer startingDeviceId() {
        return this.startingDeviceId;
    }

    /**
     * Set device id of the first disk to be updated.
     *
     * @param startingDeviceId the startingDeviceId value to set
     * @return the SqlStorageUpdateSettings object itself.
     */
    public SqlStorageUpdateSettings withStartingDeviceId(Integer startingDeviceId) {
        this.startingDeviceId = startingDeviceId;
        return this;
    }

    /**
     * Get disk configuration to apply to SQL Server. Possible values include: 'NEW', 'EXTEND', 'ADD'.
     *
     * @return the diskConfigurationType value
     */
    public DiskConfigurationType diskConfigurationType() {
        return this.diskConfigurationType;
    }

    /**
     * Set disk configuration to apply to SQL Server. Possible values include: 'NEW', 'EXTEND', 'ADD'.
     *
     * @param diskConfigurationType the diskConfigurationType value to set
     * @return the SqlStorageUpdateSettings object itself.
     */
    public SqlStorageUpdateSettings withDiskConfigurationType(DiskConfigurationType diskConfigurationType) {
        this.diskConfigurationType = diskConfigurationType;
        return this;
    }

}
