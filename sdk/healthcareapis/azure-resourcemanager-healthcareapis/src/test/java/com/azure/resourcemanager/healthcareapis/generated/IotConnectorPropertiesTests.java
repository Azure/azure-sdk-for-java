// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.fluent.models.IotConnectorProperties;
import com.azure.resourcemanager.healthcareapis.models.IotEventHubIngestionEndpointConfiguration;
import com.azure.resourcemanager.healthcareapis.models.IotMappingProperties;
import org.junit.jupiter.api.Assertions;

public final class IotConnectorPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IotConnectorProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Creating\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"aejxd\",\"consumerGroup\":\"tskzbbtdzumveek\",\"fullyQualifiedEventHubNamespace\":\"wozuhkf\"},\"deviceMapping\":{\"content\":\"datajyofdxluusdtto\"}}")
            .toObject(IotConnectorProperties.class);
        Assertions.assertEquals("aejxd", model.ingestionEndpointConfiguration().eventHubName());
        Assertions.assertEquals("tskzbbtdzumveek", model.ingestionEndpointConfiguration().consumerGroup());
        Assertions.assertEquals("wozuhkf", model.ingestionEndpointConfiguration().fullyQualifiedEventHubNamespace());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IotConnectorProperties model = new IotConnectorProperties()
            .withIngestionEndpointConfiguration(
                new IotEventHubIngestionEndpointConfiguration().withEventHubName("aejxd")
                    .withConsumerGroup("tskzbbtdzumveek").withFullyQualifiedEventHubNamespace("wozuhkf"))
            .withDeviceMapping(new IotMappingProperties().withContent("datajyofdxluusdtto"));
        model = BinaryData.fromObject(model).toObject(IotConnectorProperties.class);
        Assertions.assertEquals("aejxd", model.ingestionEndpointConfiguration().eventHubName());
        Assertions.assertEquals("tskzbbtdzumveek", model.ingestionEndpointConfiguration().consumerGroup());
        Assertions.assertEquals("wozuhkf", model.ingestionEndpointConfiguration().fullyQualifiedEventHubNamespace());
    }
}
