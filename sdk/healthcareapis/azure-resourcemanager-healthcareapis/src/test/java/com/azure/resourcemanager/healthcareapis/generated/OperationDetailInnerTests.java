// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.fluent.models.OperationDetailInner;
import com.azure.resourcemanager.healthcareapis.models.LogSpecification;
import com.azure.resourcemanager.healthcareapis.models.MetricDimension;
import com.azure.resourcemanager.healthcareapis.models.MetricSpecification;
import com.azure.resourcemanager.healthcareapis.models.OperationDisplay;
import com.azure.resourcemanager.healthcareapis.models.OperationProperties;
import com.azure.resourcemanager.healthcareapis.models.ServiceSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationDetailInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationDetailInner model = BinaryData.fromString(
            "{\"name\":\"ezikywggxkal\",\"isDataAction\":false,\"display\":{\"provider\":\"lwuip\",\"resource\":\"cjzkzivgvvcna\",\"operation\":\"hyrnxxmu\",\"description\":\"dndrdvstkwqqtche\"},\"origin\":\"mfmtdaaygdvw\",\"actionType\":\"Internal\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{\"name\":\"xrtfudxep\",\"displayName\":\"yqagvrvm\",\"blobDuration\":\"k\"}],\"metricSpecifications\":[{\"name\":\"i\",\"displayName\":\"blxgwimf\",\"displayDescription\":\"hfjx\",\"unit\":\"szkkfoqre\",\"category\":\"kzikfjawneaivxwc\",\"aggregationType\":\"lpcirelsf\",\"supportedAggregationTypes\":[\"nwabfatkldd\",\"bjhwuaan\",\"zjosp\"],\"supportedTimeGrainTypes\":[\"ulpjr\",\"xagl\"],\"fillGapWithZero\":false,\"metricFilterPattern\":\"jwosytxitcskfck\",\"dimensions\":[{},{},{}],\"isInternal\":false,\"sourceMdmAccount\":\"kkezzikhlyfjhdgq\",\"sourceMdmNamespace\":\"ebdunyg\",\"enableRegionalMdmAccount\":true,\"resourceIdDimensionNameOverride\":\"db\"},{\"name\":\"atpxl\",\"displayName\":\"xcyjmoadsuvarmy\",\"displayDescription\":\"mjsjqb\",\"unit\":\"hyxxrwlycoduhpk\",\"category\":\"gymare\",\"aggregationType\":\"ajxq\",\"supportedAggregationTypes\":[\"hky\",\"ubeddg\"],\"supportedTimeGrainTypes\":[\"fwqmzqalkrmn\"],\"fillGapWithZero\":false,\"metricFilterPattern\":\"xacqqudfnbyx\",\"dimensions\":[{},{},{},{}],\"isInternal\":false,\"sourceMdmAccount\":\"yvayffimrzr\",\"sourceMdmNamespace\":\"zqogse\",\"enableRegionalMdmAccount\":true,\"resourceIdDimensionNameOverride\":\"fdnw\"}]}}}")
            .toObject(OperationDetailInner.class);
        Assertions.assertEquals("xrtfudxep",
            model.properties().serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("yqagvrvm",
            model.properties().serviceSpecification().logSpecifications().get(0).displayName());
        Assertions.assertEquals("k",
            model.properties().serviceSpecification().logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("i", model.properties().serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("blxgwimf",
            model.properties().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("hfjx",
            model.properties().serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("szkkfoqre",
            model.properties().serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals("kzikfjawneaivxwc",
            model.properties().serviceSpecification().metricSpecifications().get(0).category());
        Assertions.assertEquals("lpcirelsf",
            model.properties().serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals("nwabfatkldd",
            model.properties().serviceSpecification().metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("ulpjr",
            model.properties().serviceSpecification().metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals(false,
            model.properties().serviceSpecification().metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals("jwosytxitcskfck",
            model.properties().serviceSpecification().metricSpecifications().get(0).metricFilterPattern());
        Assertions.assertEquals(false,
            model.properties().serviceSpecification().metricSpecifications().get(0).isInternal());
        Assertions.assertEquals("kkezzikhlyfjhdgq",
            model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("ebdunyg",
            model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals(true,
            model.properties().serviceSpecification().metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("db",
            model.properties().serviceSpecification().metricSpecifications().get(0).resourceIdDimensionNameOverride());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationDetailInner model
            = new OperationDetailInner().withDisplay(new OperationDisplay())
                .withProperties(new OperationProperties()
                    .withServiceSpecification(new ServiceSpecification().withLogSpecifications(Arrays.asList(
                        new LogSpecification().withName("xrtfudxep").withDisplayName("yqagvrvm").withBlobDuration("k")))
                        .withMetricSpecifications(
                            Arrays
                                .asList(
                                    new MetricSpecification().withName("i")
                                        .withDisplayName("blxgwimf")
                                        .withDisplayDescription("hfjx")
                                        .withUnit("szkkfoqre")
                                        .withCategory("kzikfjawneaivxwc")
                                        .withAggregationType("lpcirelsf")
                                        .withSupportedAggregationTypes(
                                            Arrays.asList("nwabfatkldd", "bjhwuaan", "zjosp"))
                                        .withSupportedTimeGrainTypes(Arrays.asList("ulpjr", "xagl"))
                                        .withFillGapWithZero(false)
                                        .withMetricFilterPattern("jwosytxitcskfck")
                                        .withDimensions(Arrays.asList(new MetricDimension(), new MetricDimension(),
                                            new MetricDimension()))
                                        .withIsInternal(false)
                                        .withSourceMdmAccount("kkezzikhlyfjhdgq")
                                        .withSourceMdmNamespace("ebdunyg")
                                        .withEnableRegionalMdmAccount(true)
                                        .withResourceIdDimensionNameOverride("db"),
                                    new MetricSpecification().withName("atpxl")
                                        .withDisplayName("xcyjmoadsuvarmy")
                                        .withDisplayDescription("mjsjqb")
                                        .withUnit("hyxxrwlycoduhpk")
                                        .withCategory("gymare")
                                        .withAggregationType("ajxq")
                                        .withSupportedAggregationTypes(Arrays.asList("hky", "ubeddg"))
                                        .withSupportedTimeGrainTypes(Arrays.asList("fwqmzqalkrmn"))
                                        .withFillGapWithZero(false)
                                        .withMetricFilterPattern("xacqqudfnbyx")
                                        .withDimensions(Arrays.asList(new MetricDimension(), new MetricDimension(),
                                            new MetricDimension(), new MetricDimension()))
                                        .withIsInternal(false)
                                        .withSourceMdmAccount("yvayffimrzr")
                                        .withSourceMdmNamespace("zqogse")
                                        .withEnableRegionalMdmAccount(true)
                                        .withResourceIdDimensionNameOverride("fdnw")))));
        model = BinaryData.fromObject(model).toObject(OperationDetailInner.class);
        Assertions.assertEquals("xrtfudxep",
            model.properties().serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("yqagvrvm",
            model.properties().serviceSpecification().logSpecifications().get(0).displayName());
        Assertions.assertEquals("k",
            model.properties().serviceSpecification().logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("i", model.properties().serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("blxgwimf",
            model.properties().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("hfjx",
            model.properties().serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("szkkfoqre",
            model.properties().serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals("kzikfjawneaivxwc",
            model.properties().serviceSpecification().metricSpecifications().get(0).category());
        Assertions.assertEquals("lpcirelsf",
            model.properties().serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals("nwabfatkldd",
            model.properties().serviceSpecification().metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("ulpjr",
            model.properties().serviceSpecification().metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals(false,
            model.properties().serviceSpecification().metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals("jwosytxitcskfck",
            model.properties().serviceSpecification().metricSpecifications().get(0).metricFilterPattern());
        Assertions.assertEquals(false,
            model.properties().serviceSpecification().metricSpecifications().get(0).isInternal());
        Assertions.assertEquals("kkezzikhlyfjhdgq",
            model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("ebdunyg",
            model.properties().serviceSpecification().metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals(true,
            model.properties().serviceSpecification().metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("db",
            model.properties().serviceSpecification().metricSpecifications().get(0).resourceIdDimensionNameOverride());
    }
}
