// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.models.MetricDimension;
import com.azure.resourcemanager.healthcareapis.models.MetricSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MetricSpecificationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MetricSpecification model = BinaryData.fromString(
            "{\"name\":\"nrvgoupmfiibfgg\",\"displayName\":\"ool\",\"displayDescription\":\"wxkvtkkgll\",\"unit\":\"jygvjayvbl\",\"category\":\"vkzuhbxvvyhgso\",\"aggregationType\":\"yrqufegxuvwz\",\"supportedAggregationTypes\":[\"hlmctlpdngitvgb\",\"hrixkwmy\",\"jejveg\"],\"supportedTimeGrainTypes\":[\"pna\",\"xexccbdreaxhcexd\",\"rvqahqkghtpwi\",\"nhyjsv\"],\"fillGapWithZero\":true,\"metricFilterPattern\":\"z\",\"dimensions\":[{\"name\":\"owvrvmtgjqppyos\",\"displayName\":\"on\",\"toBeExportedForShoebox\":true},{\"name\":\"gfipnsxk\",\"displayName\":\"waekrrjreafxtsgu\",\"toBeExportedForShoebox\":true}],\"isInternal\":false,\"sourceMdmAccount\":\"kkxwslol\",\"sourceMdmNamespace\":\"pvuzlmv\",\"enableRegionalMdmAccount\":true,\"resourceIdDimensionNameOverride\":\"ktgplcr\"}")
            .toObject(MetricSpecification.class);
        Assertions.assertEquals("nrvgoupmfiibfgg", model.name());
        Assertions.assertEquals("ool", model.displayName());
        Assertions.assertEquals("wxkvtkkgll", model.displayDescription());
        Assertions.assertEquals("jygvjayvbl", model.unit());
        Assertions.assertEquals("vkzuhbxvvyhgso", model.category());
        Assertions.assertEquals("yrqufegxuvwz", model.aggregationType());
        Assertions.assertEquals("hlmctlpdngitvgb", model.supportedAggregationTypes().get(0));
        Assertions.assertEquals("pna", model.supportedTimeGrainTypes().get(0));
        Assertions.assertEquals(true, model.fillGapWithZero());
        Assertions.assertEquals("z", model.metricFilterPattern());
        Assertions.assertEquals("owvrvmtgjqppyos", model.dimensions().get(0).name());
        Assertions.assertEquals("on", model.dimensions().get(0).displayName());
        Assertions.assertEquals(true, model.dimensions().get(0).toBeExportedForShoebox());
        Assertions.assertEquals(false, model.isInternal());
        Assertions.assertEquals("kkxwslol", model.sourceMdmAccount());
        Assertions.assertEquals("pvuzlmv", model.sourceMdmNamespace());
        Assertions.assertEquals(true, model.enableRegionalMdmAccount());
        Assertions.assertEquals("ktgplcr", model.resourceIdDimensionNameOverride());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MetricSpecification model = new MetricSpecification().withName("nrvgoupmfiibfgg").withDisplayName("ool")
            .withDisplayDescription("wxkvtkkgll").withUnit("jygvjayvbl").withCategory("vkzuhbxvvyhgso")
            .withAggregationType("yrqufegxuvwz")
            .withSupportedAggregationTypes(Arrays.asList("hlmctlpdngitvgb", "hrixkwmy", "jejveg"))
            .withSupportedTimeGrainTypes(Arrays.asList("pna", "xexccbdreaxhcexd", "rvqahqkghtpwi", "nhyjsv"))
            .withFillGapWithZero(true).withMetricFilterPattern("z")
            .withDimensions(Arrays.asList(
                new MetricDimension().withName("owvrvmtgjqppyos").withDisplayName("on")
                    .withToBeExportedForShoebox(true),
                new MetricDimension().withName("gfipnsxk").withDisplayName("waekrrjreafxtsgu")
                    .withToBeExportedForShoebox(true)))
            .withIsInternal(false).withSourceMdmAccount("kkxwslol").withSourceMdmNamespace("pvuzlmv")
            .withEnableRegionalMdmAccount(true).withResourceIdDimensionNameOverride("ktgplcr");
        model = BinaryData.fromObject(model).toObject(MetricSpecification.class);
        Assertions.assertEquals("nrvgoupmfiibfgg", model.name());
        Assertions.assertEquals("ool", model.displayName());
        Assertions.assertEquals("wxkvtkkgll", model.displayDescription());
        Assertions.assertEquals("jygvjayvbl", model.unit());
        Assertions.assertEquals("vkzuhbxvvyhgso", model.category());
        Assertions.assertEquals("yrqufegxuvwz", model.aggregationType());
        Assertions.assertEquals("hlmctlpdngitvgb", model.supportedAggregationTypes().get(0));
        Assertions.assertEquals("pna", model.supportedTimeGrainTypes().get(0));
        Assertions.assertEquals(true, model.fillGapWithZero());
        Assertions.assertEquals("z", model.metricFilterPattern());
        Assertions.assertEquals("owvrvmtgjqppyos", model.dimensions().get(0).name());
        Assertions.assertEquals("on", model.dimensions().get(0).displayName());
        Assertions.assertEquals(true, model.dimensions().get(0).toBeExportedForShoebox());
        Assertions.assertEquals(false, model.isInternal());
        Assertions.assertEquals("kkxwslol", model.sourceMdmAccount());
        Assertions.assertEquals("pvuzlmv", model.sourceMdmNamespace());
        Assertions.assertEquals(true, model.enableRegionalMdmAccount());
        Assertions.assertEquals("ktgplcr", model.resourceIdDimensionNameOverride());
    }
}
