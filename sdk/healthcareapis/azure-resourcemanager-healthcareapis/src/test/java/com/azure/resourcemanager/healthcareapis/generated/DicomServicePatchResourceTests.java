// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.models.DicomServicePatchResource;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityIdentity;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityType;
import com.azure.resourcemanager.healthcareapis.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DicomServicePatchResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DicomServicePatchResource model = BinaryData.fromString(
            "{\"identity\":{\"type\":\"SystemAssigned\",\"principalId\":\"20419a23-79c8-4400-ba1b-a59a22334831\",\"tenantId\":\"de211640-8b31-4964-8014-5f81199ee0ad\",\"userAssignedIdentities\":{\"vtq\":{\"principalId\":\"86533f40-fd3c-4c97-bc54-448b2608ae10\",\"clientId\":\"43d6aebd-adef-4a94-8fe3-358e05be4780\"},\"buynhijggm\":{\"principalId\":\"7d626872-8686-43e4-aae8-72cf119d2c01\",\"clientId\":\"02cbec94-2299-4180-8d5f-90d1f87d6f30\"},\"siarbutrcvpn\":{\"principalId\":\"015af440-a468-4c28-8326-c408f1364211\",\"clientId\":\"83ad26d5-85e2-4125-9dd0-775b77e349eb\"}}},\"tags\":{\"nlankxmyskpb\":\"mhjrunmpxttdbhr\",\"nrs\":\"enbtkcxywny\",\"lhaaxdbabp\":\"nlqidybyxczf\"}}")
            .toObject(DicomServicePatchResource.class);
        Assertions.assertEquals("mhjrunmpxttdbhr", model.tags().get("nlankxmyskpb"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DicomServicePatchResource model = new DicomServicePatchResource()
            .withTags(mapOf("nlankxmyskpb", "mhjrunmpxttdbhr", "nrs", "enbtkcxywny", "lhaaxdbabp", "nlqidybyxczf"))
            .withIdentity(new ServiceManagedIdentityIdentity().withType(ServiceManagedIdentityType.SYSTEM_ASSIGNED)
                .withUserAssignedIdentities(mapOf("vtq", new UserAssignedIdentity(), "buynhijggm",
                    new UserAssignedIdentity(), "siarbutrcvpn", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(DicomServicePatchResource.class);
        Assertions.assertEquals("mhjrunmpxttdbhr", model.tags().get("nlankxmyskpb"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
