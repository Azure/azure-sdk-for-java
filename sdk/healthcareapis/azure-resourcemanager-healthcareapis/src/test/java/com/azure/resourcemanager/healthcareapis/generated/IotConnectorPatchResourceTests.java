// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.models.IotConnectorPatchResource;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityIdentity;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityType;
import com.azure.resourcemanager.healthcareapis.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IotConnectorPatchResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IotConnectorPatchResource model = BinaryData.fromString(
            "{\"identity\":{\"type\":\"SystemAssigned,UserAssigned\",\"principalId\":\"3ba26416-eb31-4a54-9ea4-ca41dd8d471c\",\"tenantId\":\"af2b6fe2-ae05-4527-b7a4-a1f75bcaa6cc\",\"userAssignedIdentities\":{\"yexz\":{\"principalId\":\"e7c6bdec-468b-4e58-9965-c28584b45613\",\"clientId\":\"828f14c1-6b1d-4c47-9366-8b82e252c00b\"},\"ixhnrztf\":{\"principalId\":\"afaba394-1322-4f50-9379-1fcb3b5bb0d6\",\"clientId\":\"b5422552-8181-4bd2-a05a-4bc9519d9892\"},\"bnxknalaulppg\":{\"principalId\":\"c5c5d23b-d688-4d6f-af3b-ddd341fcd67a\",\"clientId\":\"f970eb13-bb0e-414a-804e-a77a3806f467\"},\"pnapnyiropuh\":{\"principalId\":\"59f779c4-bb38-45e2-9a44-0df3e131fdf8\",\"clientId\":\"6737cb0a-6354-46ca-9348-2e07716837c7\"}}},\"tags\":{\"v\":\"vpgylgqgitxmed\",\"zzhxgktrm\":\"slynqwwnc\"}}")
            .toObject(IotConnectorPatchResource.class);
        Assertions.assertEquals("vpgylgqgitxmed", model.tags().get("v"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IotConnectorPatchResource model
            = new IotConnectorPatchResource().withTags(mapOf("v", "vpgylgqgitxmed", "zzhxgktrm", "slynqwwnc"))
                .withIdentity(new ServiceManagedIdentityIdentity()
                    .withType(ServiceManagedIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED).withUserAssignedIdentities(
                        mapOf("yexz", new UserAssignedIdentity(), "ixhnrztf", new UserAssignedIdentity(),
                            "bnxknalaulppg", new UserAssignedIdentity(), "pnapnyiropuh", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(IotConnectorPatchResource.class);
        Assertions.assertEquals("vpgylgqgitxmed", model.tags().get("v"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
