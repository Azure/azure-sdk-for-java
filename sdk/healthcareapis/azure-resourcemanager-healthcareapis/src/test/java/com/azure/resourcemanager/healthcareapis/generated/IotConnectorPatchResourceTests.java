// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.models.IotConnectorPatchResource;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityIdentity;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityType;
import com.azure.resourcemanager.healthcareapis.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IotConnectorPatchResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IotConnectorPatchResource model = BinaryData.fromString(
            "{\"identity\":{\"type\":\"SystemAssigned,UserAssigned\",\"principalId\":\"4771d423-2147-48d4-9675-2c439cb0b101\",\"tenantId\":\"a82fd74e-b990-4656-b28d-4cc643fcbfd0\",\"userAssignedIdentities\":{\"yexz\":{\"principalId\":\"df8fcde8-eb0d-4106-9041-1a34481bae77\",\"clientId\":\"db37b60a-efd2-41af-8b82-809fa47a776f\"},\"ixhnrztf\":{\"principalId\":\"f274be68-b423-452c-8128-917d26313aab\",\"clientId\":\"02d8ccb9-cbb2-4534-af4b-fa6c75c30b3b\"},\"bnxknalaulppg\":{\"principalId\":\"ed1f2d9c-a50c-46b7-a328-92f6a1921bcd\",\"clientId\":\"b2e5bc7e-8a39-4a1f-afc3-86e2ddd3b90a\"},\"pnapnyiropuh\":{\"principalId\":\"5f428e42-70cd-4355-bb18-a8d5bb9f1e77\",\"clientId\":\"2ef97333-a587-4748-9573-a6170177d937\"}}},\"tags\":{\"v\":\"vpgylgqgitxmed\",\"zzhxgktrm\":\"slynqwwnc\"}}")
            .toObject(IotConnectorPatchResource.class);
        Assertions.assertEquals("vpgylgqgitxmed", model.tags().get("v"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IotConnectorPatchResource model
            = new IotConnectorPatchResource().withTags(mapOf("v", "vpgylgqgitxmed", "zzhxgktrm", "slynqwwnc"))
                .withIdentity(new ServiceManagedIdentityIdentity()
                    .withType(ServiceManagedIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED).withUserAssignedIdentities(
                        mapOf("yexz", new UserAssignedIdentity(), "ixhnrztf", new UserAssignedIdentity(),
                            "bnxknalaulppg", new UserAssignedIdentity(), "pnapnyiropuh", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(IotConnectorPatchResource.class);
        Assertions.assertEquals("vpgylgqgitxmed", model.tags().get("v"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
