// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.healthcareapis.HealthcareApisManager;
import com.azure.resourcemanager.healthcareapis.models.IotConnector;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotConnectorsListByWorkspaceMockTests {
    @Test
    public void testListByWorkspace() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Moving\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"wiivwzjbhyzsx\",\"consumerGroup\":\"kambtrnegvmnvuqe\",\"fullyQualifiedEventHubNamespace\":\"lds\"},\"deviceMapping\":{\"content\":\"datatjb\"}},\"identity\":{\"type\":\"SystemAssigned\",\"principalId\":\"c7cd14e6-139d-473b-88ab-822be03a4d0c\",\"tenantId\":\"f682a67b-52d1-4207-af0b-308ff3385ab0\",\"userAssignedIdentities\":{\"mjlxrrilozapeewc\":{\"principalId\":\"99867d1f-371d-4394-92c0-36e3d3ab8db5\",\"clientId\":\"5522c85c-29d8-46ee-b056-4cbee8e8c9b7\"}}},\"tags\":{\"f\":\"lktwkuziycslev\",\"tqedcgzulwm\":\"ztcktyh\",\"rjvpglydzgkrvqee\":\"rqzz\"},\"location\":\"oepry\",\"etag\":\"nwy\",\"id\":\"pzdm\",\"name\":\"vzvfvaawzqadfl\",\"type\":\"z\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HealthcareApisManager manager = HealthcareApisManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<IotConnector> response
            = manager.iotConnectors().listByWorkspace("fmo", "uxrkjp", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("nwy", response.iterator().next().etag());
        Assertions.assertEquals("oepry", response.iterator().next().location());
        Assertions.assertEquals("lktwkuziycslev", response.iterator().next().tags().get("f"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("wiivwzjbhyzsx",
            response.iterator().next().ingestionEndpointConfiguration().eventHubName());
        Assertions.assertEquals("kambtrnegvmnvuqe",
            response.iterator().next().ingestionEndpointConfiguration().consumerGroup());
        Assertions.assertEquals("lds",
            response.iterator().next().ingestionEndpointConfiguration().fullyQualifiedEventHubNamespace());
    }
}
