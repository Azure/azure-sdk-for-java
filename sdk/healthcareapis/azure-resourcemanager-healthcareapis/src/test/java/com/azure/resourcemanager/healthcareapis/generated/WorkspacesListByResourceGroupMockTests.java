// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.healthcareapis.HealthcareApisManager;
import com.azure.resourcemanager.healthcareapis.models.PublicNetworkAccess;
import com.azure.resourcemanager.healthcareapis.models.Workspace;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkspacesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Moving\",\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Creating\"},\"id\":\"x\",\"name\":\"tczheydbsdshmkx\",\"type\":\"aehvbbxuri\"},{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Succeeded\"},\"id\":\"htba\",\"name\":\"kgxywr\",\"type\":\"kpyklyhp\"},{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Creating\"},\"id\":\"vruu\",\"name\":\"lgzi\",\"type\":\"thost\"}],\"publicNetworkAccess\":\"Disabled\"},\"tags\":{\"lhpl\":\"dxeclzedqbcvh\",\"lkxt\":\"dqkdlwwqfbu\"},\"location\":\"jfsmlmbtxhwgfwsr\",\"etag\":\"wcoezbrhub\",\"id\":\"kh\",\"name\":\"dyg\",\"type\":\"ookk\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HealthcareApisManager manager = HealthcareApisManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Workspace> response
            = manager.workspaces().listByResourceGroup("jpr", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wcoezbrhub", response.iterator().next().etag());
        Assertions.assertEquals("jfsmlmbtxhwgfwsr", response.iterator().next().location());
        Assertions.assertEquals("dxeclzedqbcvh", response.iterator().next().tags().get("lhpl"));
        Assertions.assertEquals(PublicNetworkAccess.DISABLED,
            response.iterator().next().properties().publicNetworkAccess());
    }
}
