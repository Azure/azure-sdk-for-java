// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.healthcareapis.HealthcareApisManager;
import com.azure.resourcemanager.healthcareapis.models.IotConnector;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotConnectorsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Warned\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"obfirclnpk\",\"consumerGroup\":\"ayzri\",\"fullyQualifiedEventHubNamespace\":\"hya\"},\"deviceMapping\":{\"content\":\"datajlb\"}},\"identity\":{\"type\":\"UserAssigned\",\"principalId\":\"36c5dc0e-d88b-47cb-a955-ccf6e913dbd8\",\"tenantId\":\"cc26c0fe-617f-483c-a822-0391f835f38e\",\"userAssignedIdentities\":{\"omdynhdwdigum\":{\"principalId\":\"6297a391-3b9d-4176-b3f8-5fff43963d8b\",\"clientId\":\"2dec164a-b9da-4c64-bb6a-fb09e3e5d4a7\"}}},\"tags\":{\"hezwwvaiq\":\"aauzzptjazysd\",\"hqyikvy\":\"uvvfonkp\"},\"location\":\"uyav\",\"etag\":\"wmn\",\"id\":\"sttijfybvp\",\"name\":\"ekrsgs\",\"type\":\"b\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HealthcareApisManager manager = HealthcareApisManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IotConnector response = manager.iotConnectors()
            .getWithResponse("riglaec", "ndtic", "kpvzmlq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("wmn", response.etag());
        Assertions.assertEquals("uyav", response.location());
        Assertions.assertEquals("aauzzptjazysd", response.tags().get("hezwwvaiq"));
        Assertions.assertEquals(ServiceManagedIdentityType.USER_ASSIGNED, response.identity().type());
        Assertions.assertEquals("obfirclnpk", response.ingestionEndpointConfiguration().eventHubName());
        Assertions.assertEquals("ayzri", response.ingestionEndpointConfiguration().consumerGroup());
        Assertions.assertEquals("hya", response.ingestionEndpointConfiguration().fullyQualifiedEventHubNamespace());
    }
}
