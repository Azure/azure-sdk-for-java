// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.models.FhirServicePatchResource;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityIdentity;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityType;
import com.azure.resourcemanager.healthcareapis.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class FhirServicePatchResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FhirServicePatchResource model = BinaryData.fromString(
            "{\"identity\":{\"type\":\"UserAssigned\",\"principalId\":\"c799eb62-e28d-4b6c-a1ae-47283d495ce9\",\"tenantId\":\"df78e339-ea66-4486-9299-b65c4df16e9f\",\"userAssignedIdentities\":{\"fovljxyws\":{\"principalId\":\"eaa0c884-607f-4d86-b745-8095e84a2e16\",\"clientId\":\"138c8a39-def2-477b-ac7a-335e4e5e1b8a\"},\"yrs\":{\"principalId\":\"820704f5-bff5-4dd6-9c94-78f9443ca1b2\",\"clientId\":\"23f6489b-206e-474d-81b3-d2a3d2cca3a1\"},\"ytgadgvraeaene\":{\"principalId\":\"ec972ad3-5a3b-4de5-8fc8-3aee407fcced\",\"clientId\":\"3a1f4ea4-35de-454b-aaf2-7f346104e90a\"}}},\"tags\":{\"jfqka\":\"arrwlquu\"}}")
            .toObject(FhirServicePatchResource.class);
        Assertions.assertEquals("arrwlquu", model.tags().get("jfqka"));
        Assertions.assertEquals(ServiceManagedIdentityType.USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FhirServicePatchResource model = new FhirServicePatchResource().withTags(mapOf("jfqka", "arrwlquu"))
            .withIdentity(new ServiceManagedIdentityIdentity().withType(ServiceManagedIdentityType.USER_ASSIGNED)
                .withUserAssignedIdentities(mapOf("fovljxyws", new UserAssignedIdentity(), "yrs",
                    new UserAssignedIdentity(), "ytgadgvraeaene", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(FhirServicePatchResource.class);
        Assertions.assertEquals("arrwlquu", model.tags().get("jfqka"));
        Assertions.assertEquals(ServiceManagedIdentityType.USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
