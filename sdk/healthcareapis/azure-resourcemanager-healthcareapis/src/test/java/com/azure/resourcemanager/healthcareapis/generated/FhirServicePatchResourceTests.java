// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.models.FhirServicePatchResource;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityIdentity;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityType;
import com.azure.resourcemanager.healthcareapis.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class FhirServicePatchResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FhirServicePatchResource model = BinaryData.fromString(
            "{\"identity\":{\"type\":\"UserAssigned\",\"principalId\":\"ab9ba8ec-cfb7-47d7-b005-214fabe8ba66\",\"tenantId\":\"71c27ee1-8eba-4cb7-aea6-abc498ab1eb5\",\"userAssignedIdentities\":{\"fovljxyws\":{\"principalId\":\"f93466ac-0fb6-47eb-b164-279ab90b0902\",\"clientId\":\"e898f093-4069-4174-b05b-ad5a86d90f48\"},\"yrs\":{\"principalId\":\"b81c7fc2-ab7f-462f-bc2b-c3b8c0432ce6\",\"clientId\":\"f9924e31-f2c9-41ac-8e5a-5c0489936efb\"},\"ytgadgvraeaene\":{\"principalId\":\"398711a8-efe5-40ce-8dc8-a477db472bab\",\"clientId\":\"eaea2ed2-273b-4833-ba3a-95881ec4ae78\"}}},\"tags\":{\"jfqka\":\"arrwlquu\"}}")
            .toObject(FhirServicePatchResource.class);
        Assertions.assertEquals("arrwlquu", model.tags().get("jfqka"));
        Assertions.assertEquals(ServiceManagedIdentityType.USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FhirServicePatchResource model = new FhirServicePatchResource().withTags(mapOf("jfqka", "arrwlquu"))
            .withIdentity(new ServiceManagedIdentityIdentity().withType(ServiceManagedIdentityType.USER_ASSIGNED)
                .withUserAssignedIdentities(mapOf("fovljxyws", new UserAssignedIdentity(), "yrs",
                    new UserAssignedIdentity(), "ytgadgvraeaene", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(FhirServicePatchResource.class);
        Assertions.assertEquals("arrwlquu", model.tags().get("jfqka"));
        Assertions.assertEquals(ServiceManagedIdentityType.USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
