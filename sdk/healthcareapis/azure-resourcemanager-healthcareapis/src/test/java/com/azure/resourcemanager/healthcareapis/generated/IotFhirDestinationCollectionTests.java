// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.fluent.models.IotFhirDestinationInner;
import com.azure.resourcemanager.healthcareapis.models.IotFhirDestinationCollection;
import com.azure.resourcemanager.healthcareapis.models.IotIdentityResolutionType;
import com.azure.resourcemanager.healthcareapis.models.IotMappingProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IotFhirDestinationCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IotFhirDestinationCollection model = BinaryData.fromString(
            "{\"nextLink\":\"hfxobbcswsrtj\",\"value\":[{\"properties\":{\"resourceIdentityResolutionType\":\"Lookup\",\"fhirServiceResourceId\":\"rbpbewtghfgblcg\",\"fhirMapping\":{\"content\":\"datazvlvqhjkbegib\"},\"provisioningState\":\"Deleting\"},\"location\":\"ebwwaloayqc\",\"etag\":\"rtzju\",\"id\":\"gwyzm\",\"name\":\"txon\",\"type\":\"mtsavjcbpwxqp\"},{\"properties\":{\"resourceIdentityResolutionType\":\"Lookup\",\"fhirServiceResourceId\":\"knftguvriuh\",\"fhirMapping\":{\"content\":\"datawmdyvxqtay\"},\"provisioningState\":\"Deprovisioned\"},\"location\":\"oyq\",\"etag\":\"xrmcqibycnojvk\",\"id\":\"mefqsgzvahapjyzh\",\"name\":\"vgqzcjrvxd\",\"type\":\"zlmwlxkvugfhz\"},{\"properties\":{\"resourceIdentityResolutionType\":\"Lookup\",\"fhirServiceResourceId\":\"awjvzunluthnnp\",\"fhirMapping\":{\"content\":\"dataxipeilpjzuaejx\"},\"provisioningState\":\"Canceled\"},\"location\":\"kzbbtd\",\"etag\":\"mv\",\"id\":\"ekg\",\"name\":\"wozuhkf\",\"type\":\"bsjyofdx\"}]}")
            .toObject(IotFhirDestinationCollection.class);
        Assertions.assertEquals("hfxobbcswsrtj", model.nextLink());
        Assertions.assertEquals("rtzju", model.value().get(0).etag());
        Assertions.assertEquals("ebwwaloayqc", model.value().get(0).location());
        Assertions.assertEquals(IotIdentityResolutionType.LOOKUP,
            model.value().get(0).resourceIdentityResolutionType());
        Assertions.assertEquals("rbpbewtghfgblcg", model.value().get(0).fhirServiceResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IotFhirDestinationCollection model = new IotFhirDestinationCollection().withNextLink("hfxobbcswsrtj")
            .withValue(Arrays.asList(
                new IotFhirDestinationInner().withEtag("rtzju")
                    .withLocation("ebwwaloayqc")
                    .withResourceIdentityResolutionType(IotIdentityResolutionType.LOOKUP)
                    .withFhirServiceResourceId("rbpbewtghfgblcg")
                    .withFhirMapping(new IotMappingProperties().withContent("datazvlvqhjkbegib")),
                new IotFhirDestinationInner().withEtag("xrmcqibycnojvk")
                    .withLocation("oyq")
                    .withResourceIdentityResolutionType(IotIdentityResolutionType.LOOKUP)
                    .withFhirServiceResourceId("knftguvriuh")
                    .withFhirMapping(new IotMappingProperties().withContent("datawmdyvxqtay")),
                new IotFhirDestinationInner().withEtag("mv")
                    .withLocation("kzbbtd")
                    .withResourceIdentityResolutionType(IotIdentityResolutionType.LOOKUP)
                    .withFhirServiceResourceId("awjvzunluthnnp")
                    .withFhirMapping(new IotMappingProperties().withContent("dataxipeilpjzuaejx"))));
        model = BinaryData.fromObject(model).toObject(IotFhirDestinationCollection.class);
        Assertions.assertEquals("hfxobbcswsrtj", model.nextLink());
        Assertions.assertEquals("rtzju", model.value().get(0).etag());
        Assertions.assertEquals("ebwwaloayqc", model.value().get(0).location());
        Assertions.assertEquals(IotIdentityResolutionType.LOOKUP,
            model.value().get(0).resourceIdentityResolutionType());
        Assertions.assertEquals("rbpbewtghfgblcg", model.value().get(0).fhirServiceResourceId());
    }
}
