// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.fluent.models.IotConnectorInner;
import com.azure.resourcemanager.healthcareapis.models.IotConnectorCollection;
import com.azure.resourcemanager.healthcareapis.models.IotEventHubIngestionEndpointConfiguration;
import com.azure.resourcemanager.healthcareapis.models.IotMappingProperties;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityIdentity;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityType;
import com.azure.resourcemanager.healthcareapis.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IotConnectorCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IotConnectorCollection model = BinaryData.fromString(
            "{\"nextLink\":\"wrqlfktsthsuco\",\"value\":[{\"properties\":{\"provisioningState\":\"Warned\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"t\",\"consumerGroup\":\"wwrq\",\"fullyQualifiedEventHubNamespace\":\"edckzywbiexzfey\"},\"deviceMapping\":{\"content\":\"dataxibxujwbhqwalm\"}},\"identity\":{\"type\":\"SystemAssigned\",\"principalId\":\"6dac0d20-3064-4e97-8060-7d8b3259418f\",\"tenantId\":\"70698a20-8d71-4d25-88b8-c2b07aac7167\",\"userAssignedIdentities\":{\"zjancuxr\":{\"principalId\":\"9c60e281-e630-4868-8682-184679524612\",\"clientId\":\"8e26738a-a678-42d1-8510-b3c22c985a27\"},\"bavxbniwdjswzt\":{\"principalId\":\"466aa42f-feb0-4bc4-961e-a63ef0df1447\",\"clientId\":\"a5791844-233b-4955-a983-0195c5dba156\"},\"pgn\":{\"principalId\":\"4a366876-667c-4bf2-9372-28e9fe35f106\",\"clientId\":\"c78c119f-ca6f-4d2c-bd61-01cdf7e541de\"}}},\"tags\":{\"pzxbz\":\"x\"},\"location\":\"zabglcuhxwt\",\"etag\":\"yqiklbbovplwzb\",\"id\":\"vgyuguos\",\"name\":\"mkfssxqukkfplgm\",\"type\":\"sxnkjzkdeslpvlo\"},{\"properties\":{\"provisioningState\":\"Deprovisioned\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"hxpkd\",\"consumerGroup\":\"baiuebbaumny\",\"fullyQualifiedEventHubNamespace\":\"ped\"},\"deviceMapping\":{\"content\":\"datanabckhsmtx\"}},\"identity\":{\"type\":\"UserAssigned\",\"principalId\":\"d03bf959-2e81-4729-b8c6-8448fb7a67f7\",\"tenantId\":\"181a46a3-1c5b-4d7d-b2c2-418bfcdadd74\",\"userAssignedIdentities\":{\"esap\":{\"principalId\":\"03195845-1654-4249-b800-c44814885e29\",\"clientId\":\"73cccf06-4c07-4b1e-b645-2dd8ca95c47b\"},\"dqmh\":{\"principalId\":\"2a491122-e8b4-4eb0-a522-dd0348e4d4da\",\"clientId\":\"9866b1bb-67e7-43cc-872a-1260fba0f319\"},\"htldwk\":{\"principalId\":\"fed6f0b3-2fb4-4e23-87a6-31fb24a31e4f\",\"clientId\":\"a40569be-7480-484f-9475-ae720b4382c5\"},\"uutkncw\":{\"principalId\":\"40b6928c-84cb-487d-8714-e179cd0e4f4b\",\"clientId\":\"35dfdeab-7a78-42cc-943d-f41fceaac68c\"}}},\"tags\":{\"sx\":\"svlxotogtwrup\",\"kvceoveilovnotyf\":\"nmic\",\"k\":\"fcnj\",\"kphywpnvjto\":\"nxdhbt\"},\"location\":\"ermclfplphoxuscr\",\"etag\":\"bgyepsbj\",\"id\":\"azqugxywpmueefj\",\"name\":\"wfqkquj\",\"type\":\"dsuyonobgla\"},{\"properties\":{\"provisioningState\":\"Accepted\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"cmgyud\",\"consumerGroup\":\"tlmoyrx\",\"fullyQualifiedEventHubNamespace\":\"fudwpznt\"},\"deviceMapping\":{\"content\":\"datazhlrqjb\"}},\"identity\":{\"type\":\"None\",\"principalId\":\"5e8e0993-f695-40b6-b6cc-0630f9706b55\",\"tenantId\":\"e4e801af-bac8-44cb-87a9-ff986ecda996\",\"userAssignedIdentities\":{\"bkyvp\":{\"principalId\":\"48751839-a4d1-4822-b600-c713d7dcca15\",\"clientId\":\"2e8edc73-7c1c-4a4d-a8e8-46694370c78a\"},\"n\":{\"principalId\":\"896871b4-a065-4d8c-856a-d64ad87d8f02\",\"clientId\":\"0bd93285-1aeb-4897-a22b-579c57dbe37b\"}}},\"tags\":{\"kafkuwbcrnwbm\":\"p\",\"us\":\"hhseyv\",\"ofmxagkvtmelmqkr\":\"tslhspkdeem\"},\"location\":\"hvljuahaquh\",\"etag\":\"hmdua\",\"id\":\"aex\",\"name\":\"pvfadmwsrcr\",\"type\":\"vxpvgomz\"},{\"properties\":{\"provisioningState\":\"SystemMaintenance\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"wbnb\",\"consumerGroup\":\"ldawkzbaliourqha\",\"fullyQualifiedEventHubNamespace\":\"uhashsfwx\"},\"deviceMapping\":{\"content\":\"dataw\"}},\"identity\":{\"type\":\"SystemAssigned,UserAssigned\",\"principalId\":\"8a1554b9-3b22-4715-b734-75a29d81862d\",\"tenantId\":\"19916128-0d7f-4e09-8eb7-e1e31d7ea27b\",\"userAssignedIdentities\":{\"xdje\":{\"principalId\":\"04bc47b2-a620-4254-b900-3ea122d6960d\",\"clientId\":\"6e3c9b13-d0b2-44b0-ad93-ebe9439f31c7\"},\"ucww\":{\"principalId\":\"b2a1b3ef-9877-4cf7-b365-e9e9530060a7\",\"clientId\":\"edcd2c99-875c-48a0-a030-33b44de4958c\"},\"vbvmeu\":{\"principalId\":\"cb250575-1137-47c0-8001-45b57a2b734d\",\"clientId\":\"3c9ebbd1-1170-4cd3-b1a1-a852879ad46a\"}}},\"tags\":{\"eiotwmcdytdx\":\"vyhzceuojgjrwj\",\"nrjawgqwg\":\"it\",\"klwndnhjdauwhv\":\"hniskxfbkpyc\",\"zbtd\":\"l\"},\"location\":\"ujznb\",\"etag\":\"ow\",\"id\":\"wpr\",\"name\":\"qlveualupjmkh\",\"type\":\"xobbcswsrt\"}]}")
            .toObject(IotConnectorCollection.class);
        Assertions.assertEquals("wrqlfktsthsuco", model.nextLink());
        Assertions.assertEquals("yqiklbbovplwzb", model.value().get(0).etag());
        Assertions.assertEquals("zabglcuhxwt", model.value().get(0).location());
        Assertions.assertEquals("x", model.value().get(0).tags().get("pzxbz"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals("t", model.value().get(0).ingestionEndpointConfiguration().eventHubName());
        Assertions.assertEquals("wwrq", model.value().get(0).ingestionEndpointConfiguration().consumerGroup());
        Assertions.assertEquals("edckzywbiexzfey",
            model.value().get(0).ingestionEndpointConfiguration().fullyQualifiedEventHubNamespace());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IotConnectorCollection model
            = new IotConnectorCollection().withNextLink("wrqlfktsthsuco")
                .withValue(
                    Arrays.asList(
                        new IotConnectorInner().withEtag("yqiklbbovplwzb").withLocation("zabglcuhxwt")
                            .withTags(mapOf("pzxbz", "x"))
                            .withIdentity(new ServiceManagedIdentityIdentity()
                                .withType(ServiceManagedIdentityType.SYSTEM_ASSIGNED)
                                .withUserAssignedIdentities(mapOf("zjancuxr", new UserAssignedIdentity(),
                                    "bavxbniwdjswzt", new UserAssignedIdentity(), "pgn", new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(
                                new IotEventHubIngestionEndpointConfiguration().withEventHubName("t")
                                    .withConsumerGroup("wwrq").withFullyQualifiedEventHubNamespace("edckzywbiexzfey"))
                            .withDeviceMapping(new IotMappingProperties().withContent("dataxibxujwbhqwalm")),
                        new IotConnectorInner().withEtag("bgyepsbj").withLocation("ermclfplphoxuscr")
                            .withTags(mapOf("sx", "svlxotogtwrup", "kvceoveilovnotyf", "nmic", "k", "fcnj",
                                "kphywpnvjto", "nxdhbt"))
                            .withIdentity(
                                new ServiceManagedIdentityIdentity().withType(ServiceManagedIdentityType.USER_ASSIGNED)
                                    .withUserAssignedIdentities(mapOf("esap", new UserAssignedIdentity(), "dqmh",
                                        new UserAssignedIdentity(), "htldwk", new UserAssignedIdentity(), "uutkncw",
                                        new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(
                                new IotEventHubIngestionEndpointConfiguration().withEventHubName("hxpkd")
                                    .withConsumerGroup("baiuebbaumny").withFullyQualifiedEventHubNamespace("ped"))
                            .withDeviceMapping(new IotMappingProperties().withContent("datanabckhsmtx")),
                        new IotConnectorInner().withEtag("hmdua").withLocation("hvljuahaquh")
                            .withTags(mapOf("kafkuwbcrnwbm", "p", "us", "hhseyv", "ofmxagkvtmelmqkr", "tslhspkdeem"))
                            .withIdentity(new ServiceManagedIdentityIdentity()
                                .withType(ServiceManagedIdentityType.NONE).withUserAssignedIdentities(
                                    mapOf("bkyvp", new UserAssignedIdentity(), "n", new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(
                                new IotEventHubIngestionEndpointConfiguration().withEventHubName("cmgyud")
                                    .withConsumerGroup("tlmoyrx").withFullyQualifiedEventHubNamespace("fudwpznt"))
                            .withDeviceMapping(new IotMappingProperties().withContent("datazhlrqjb")),
                        new IotConnectorInner().withEtag("ow").withLocation("ujznb")
                            .withTags(mapOf("eiotwmcdytdx", "vyhzceuojgjrwj", "nrjawgqwg", "it", "klwndnhjdauwhv",
                                "hniskxfbkpyc", "zbtd", "l"))
                            .withIdentity(new ServiceManagedIdentityIdentity()
                                .withType(ServiceManagedIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                                .withUserAssignedIdentities(mapOf("xdje", new UserAssignedIdentity(), "ucww",
                                    new UserAssignedIdentity(), "vbvmeu", new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(new IotEventHubIngestionEndpointConfiguration()
                                .withEventHubName("wbnb").withConsumerGroup("ldawkzbaliourqha")
                                .withFullyQualifiedEventHubNamespace("uhashsfwx"))
                            .withDeviceMapping(new IotMappingProperties().withContent("dataw"))));
        model = BinaryData.fromObject(model).toObject(IotConnectorCollection.class);
        Assertions.assertEquals("wrqlfktsthsuco", model.nextLink());
        Assertions.assertEquals("yqiklbbovplwzb", model.value().get(0).etag());
        Assertions.assertEquals("zabglcuhxwt", model.value().get(0).location());
        Assertions.assertEquals("x", model.value().get(0).tags().get("pzxbz"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals("t", model.value().get(0).ingestionEndpointConfiguration().eventHubName());
        Assertions.assertEquals("wwrq", model.value().get(0).ingestionEndpointConfiguration().consumerGroup());
        Assertions.assertEquals("edckzywbiexzfey",
            model.value().get(0).ingestionEndpointConfiguration().fullyQualifiedEventHubNamespace());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
