// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.fluent.models.IotConnectorInner;
import com.azure.resourcemanager.healthcareapis.models.IotConnectorCollection;
import com.azure.resourcemanager.healthcareapis.models.IotEventHubIngestionEndpointConfiguration;
import com.azure.resourcemanager.healthcareapis.models.IotMappingProperties;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityIdentity;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityType;
import com.azure.resourcemanager.healthcareapis.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IotConnectorCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IotConnectorCollection model = BinaryData.fromString(
            "{\"nextLink\":\"wrqlfktsthsuco\",\"value\":[{\"properties\":{\"provisioningState\":\"Warned\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"t\",\"consumerGroup\":\"wwrq\",\"fullyQualifiedEventHubNamespace\":\"edckzywbiexzfey\"},\"deviceMapping\":{\"content\":\"dataxibxujwbhqwalm\"}},\"identity\":{\"type\":\"SystemAssigned\",\"principalId\":\"37a1efcf-64bd-4216-b077-84fbd7e5dc38\",\"tenantId\":\"687ec273-36ad-43bf-a950-162f0f4b2ff7\",\"userAssignedIdentities\":{\"zjancuxr\":{\"principalId\":\"43ef6008-906d-4e52-a6ac-f67255fc0da3\",\"clientId\":\"b6b30913-18e8-4c63-8915-d722527f8c26\"},\"bavxbniwdjswzt\":{\"principalId\":\"4c78d5b7-2925-4168-8640-17f356371286\",\"clientId\":\"288677ea-72dd-45fd-8591-c9800df55e78\"},\"pgn\":{\"principalId\":\"563d2bfa-2c4c-48e3-8fd6-47f36b9df366\",\"clientId\":\"ff04daa2-be77-49bc-b03c-1475d35af24b\"}}},\"tags\":{\"pzxbz\":\"x\"},\"location\":\"zabglcuhxwt\",\"etag\":\"yqiklbbovplwzb\",\"id\":\"vgyuguos\",\"name\":\"mkfssxqukkfplgm\",\"type\":\"sxnkjzkdeslpvlo\"},{\"properties\":{\"provisioningState\":\"Deprovisioned\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"hxpkd\",\"consumerGroup\":\"baiuebbaumny\",\"fullyQualifiedEventHubNamespace\":\"ped\"},\"deviceMapping\":{\"content\":\"datanabckhsmtx\"}},\"identity\":{\"type\":\"UserAssigned\",\"principalId\":\"5a726ab4-29c2-4cc2-bee9-a1b05a7f8a34\",\"tenantId\":\"028c61f1-2c5e-4785-91d2-6283809970c2\",\"userAssignedIdentities\":{\"esap\":{\"principalId\":\"4aa108b7-e7e4-4a43-b138-ef28794cf5ea\",\"clientId\":\"1ad6f7d1-ebbc-45ba-a3a1-f389c3a3dae5\"},\"dqmh\":{\"principalId\":\"bd55db4e-6adb-4800-82cb-f8f46bdb26ab\",\"clientId\":\"9cef2e0a-c87c-4fbc-8145-86f1b7a1234b\"},\"htldwk\":{\"principalId\":\"4d786135-11b5-466a-9264-1a92b2213aa3\",\"clientId\":\"ba36fd7a-f1c3-45af-a250-547c96c76611\"},\"uutkncw\":{\"principalId\":\"e3cbe0b5-f633-4f97-ae62-efcc2159cac4\",\"clientId\":\"cc11016a-d775-450f-b6a8-1dc645411be0\"}}},\"tags\":{\"sx\":\"svlxotogtwrup\",\"kvceoveilovnotyf\":\"nmic\",\"k\":\"fcnj\",\"kphywpnvjto\":\"nxdhbt\"},\"location\":\"ermclfplphoxuscr\",\"etag\":\"bgyepsbj\",\"id\":\"azqugxywpmueefj\",\"name\":\"wfqkquj\",\"type\":\"dsuyonobgla\"},{\"properties\":{\"provisioningState\":\"Accepted\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"cmgyud\",\"consumerGroup\":\"tlmoyrx\",\"fullyQualifiedEventHubNamespace\":\"fudwpznt\"},\"deviceMapping\":{\"content\":\"datazhlrqjb\"}},\"identity\":{\"type\":\"None\",\"principalId\":\"9c271b92-f19f-452e-9d61-0e8390badc2e\",\"tenantId\":\"c3f53165-861c-4086-a982-acabbee329a4\",\"userAssignedIdentities\":{\"bkyvp\":{\"principalId\":\"28b3cd3e-5c6d-4773-96ea-c79a16cc8bde\",\"clientId\":\"c5339988-2285-4af5-9441-faa1f34acc04\"},\"n\":{\"principalId\":\"6ea6434a-4214-4ac5-b148-2f0cbfcdf392\",\"clientId\":\"0548104e-0347-4d94-9126-92e9e494a847\"}}},\"tags\":{\"kafkuwbcrnwbm\":\"p\",\"us\":\"hhseyv\",\"ofmxagkvtmelmqkr\":\"tslhspkdeem\"},\"location\":\"hvljuahaquh\",\"etag\":\"hmdua\",\"id\":\"aex\",\"name\":\"pvfadmwsrcr\",\"type\":\"vxpvgomz\"},{\"properties\":{\"provisioningState\":\"SystemMaintenance\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"wbnb\",\"consumerGroup\":\"ldawkzbaliourqha\",\"fullyQualifiedEventHubNamespace\":\"uhashsfwx\"},\"deviceMapping\":{\"content\":\"dataw\"}},\"identity\":{\"type\":\"SystemAssigned,UserAssigned\",\"principalId\":\"69bde015-cba9-49a5-90af-034affafeb9f\",\"tenantId\":\"c095da2b-a5a0-4d25-a6c1-b780bd8400c0\",\"userAssignedIdentities\":{\"xdje\":{\"principalId\":\"d8ef26b5-60c6-46d1-9fa2-fdda72db0f2f\",\"clientId\":\"f69008fa-d4ef-4d3e-a8f4-55ffa7257d36\"},\"ucww\":{\"principalId\":\"32b601ee-3ffe-40ac-b099-e98048965c59\",\"clientId\":\"90847c7d-ad0b-45cb-86c0-e6e3904c69b5\"},\"vbvmeu\":{\"principalId\":\"cfc71c5e-5378-4bba-9596-f2d0ecf9d9cc\",\"clientId\":\"63be371e-12a7-48af-8531-34a5db87e08a\"}}},\"tags\":{\"eiotwmcdytdx\":\"vyhzceuojgjrwj\",\"nrjawgqwg\":\"it\",\"klwndnhjdauwhv\":\"hniskxfbkpyc\",\"zbtd\":\"l\"},\"location\":\"ujznb\",\"etag\":\"ow\",\"id\":\"wpr\",\"name\":\"qlveualupjmkh\",\"type\":\"xobbcswsrt\"}]}")
            .toObject(IotConnectorCollection.class);
        Assertions.assertEquals("wrqlfktsthsuco", model.nextLink());
        Assertions.assertEquals("yqiklbbovplwzb", model.value().get(0).etag());
        Assertions.assertEquals("zabglcuhxwt", model.value().get(0).location());
        Assertions.assertEquals("x", model.value().get(0).tags().get("pzxbz"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals("t", model.value().get(0).ingestionEndpointConfiguration().eventHubName());
        Assertions.assertEquals("wwrq", model.value().get(0).ingestionEndpointConfiguration().consumerGroup());
        Assertions.assertEquals("edckzywbiexzfey",
            model.value().get(0).ingestionEndpointConfiguration().fullyQualifiedEventHubNamespace());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IotConnectorCollection model
            = new IotConnectorCollection().withNextLink("wrqlfktsthsuco")
                .withValue(
                    Arrays.asList(
                        new IotConnectorInner().withEtag("yqiklbbovplwzb").withLocation("zabglcuhxwt")
                            .withTags(mapOf("pzxbz", "x"))
                            .withIdentity(new ServiceManagedIdentityIdentity()
                                .withType(ServiceManagedIdentityType.SYSTEM_ASSIGNED)
                                .withUserAssignedIdentities(mapOf("zjancuxr", new UserAssignedIdentity(),
                                    "bavxbniwdjswzt", new UserAssignedIdentity(), "pgn", new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(
                                new IotEventHubIngestionEndpointConfiguration().withEventHubName("t")
                                    .withConsumerGroup("wwrq").withFullyQualifiedEventHubNamespace("edckzywbiexzfey"))
                            .withDeviceMapping(new IotMappingProperties().withContent("dataxibxujwbhqwalm")),
                        new IotConnectorInner().withEtag("bgyepsbj").withLocation("ermclfplphoxuscr")
                            .withTags(mapOf("sx", "svlxotogtwrup", "kvceoveilovnotyf", "nmic", "k", "fcnj",
                                "kphywpnvjto", "nxdhbt"))
                            .withIdentity(
                                new ServiceManagedIdentityIdentity().withType(ServiceManagedIdentityType.USER_ASSIGNED)
                                    .withUserAssignedIdentities(mapOf("esap", new UserAssignedIdentity(), "dqmh",
                                        new UserAssignedIdentity(), "htldwk", new UserAssignedIdentity(), "uutkncw",
                                        new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(
                                new IotEventHubIngestionEndpointConfiguration().withEventHubName("hxpkd")
                                    .withConsumerGroup("baiuebbaumny").withFullyQualifiedEventHubNamespace("ped"))
                            .withDeviceMapping(new IotMappingProperties().withContent("datanabckhsmtx")),
                        new IotConnectorInner().withEtag("hmdua").withLocation("hvljuahaquh")
                            .withTags(mapOf("kafkuwbcrnwbm", "p", "us", "hhseyv", "ofmxagkvtmelmqkr", "tslhspkdeem"))
                            .withIdentity(new ServiceManagedIdentityIdentity()
                                .withType(ServiceManagedIdentityType.NONE).withUserAssignedIdentities(
                                    mapOf("bkyvp", new UserAssignedIdentity(), "n", new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(
                                new IotEventHubIngestionEndpointConfiguration().withEventHubName("cmgyud")
                                    .withConsumerGroup("tlmoyrx").withFullyQualifiedEventHubNamespace("fudwpznt"))
                            .withDeviceMapping(new IotMappingProperties().withContent("datazhlrqjb")),
                        new IotConnectorInner().withEtag("ow").withLocation("ujznb")
                            .withTags(mapOf("eiotwmcdytdx", "vyhzceuojgjrwj", "nrjawgqwg", "it", "klwndnhjdauwhv",
                                "hniskxfbkpyc", "zbtd", "l"))
                            .withIdentity(new ServiceManagedIdentityIdentity()
                                .withType(ServiceManagedIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                                .withUserAssignedIdentities(mapOf("xdje", new UserAssignedIdentity(), "ucww",
                                    new UserAssignedIdentity(), "vbvmeu", new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(new IotEventHubIngestionEndpointConfiguration()
                                .withEventHubName("wbnb").withConsumerGroup("ldawkzbaliourqha")
                                .withFullyQualifiedEventHubNamespace("uhashsfwx"))
                            .withDeviceMapping(new IotMappingProperties().withContent("dataw"))));
        model = BinaryData.fromObject(model).toObject(IotConnectorCollection.class);
        Assertions.assertEquals("wrqlfktsthsuco", model.nextLink());
        Assertions.assertEquals("yqiklbbovplwzb", model.value().get(0).etag());
        Assertions.assertEquals("zabglcuhxwt", model.value().get(0).location());
        Assertions.assertEquals("x", model.value().get(0).tags().get("pzxbz"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals("t", model.value().get(0).ingestionEndpointConfiguration().eventHubName());
        Assertions.assertEquals("wwrq", model.value().get(0).ingestionEndpointConfiguration().consumerGroup());
        Assertions.assertEquals("edckzywbiexzfey",
            model.value().get(0).ingestionEndpointConfiguration().fullyQualifiedEventHubNamespace());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
