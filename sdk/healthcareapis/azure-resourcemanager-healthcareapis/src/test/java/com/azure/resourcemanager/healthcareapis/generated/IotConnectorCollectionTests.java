// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.fluent.models.IotConnectorInner;
import com.azure.resourcemanager.healthcareapis.models.IotConnectorCollection;
import com.azure.resourcemanager.healthcareapis.models.IotEventHubIngestionEndpointConfiguration;
import com.azure.resourcemanager.healthcareapis.models.IotMappingProperties;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityIdentity;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityType;
import com.azure.resourcemanager.healthcareapis.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IotConnectorCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IotConnectorCollection model = BinaryData.fromString(
            "{\"nextLink\":\"wrqlfktsthsuco\",\"value\":[{\"properties\":{\"provisioningState\":\"Warned\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"t\",\"consumerGroup\":\"wwrq\",\"fullyQualifiedEventHubNamespace\":\"edckzywbiexzfey\"},\"deviceMapping\":{\"content\":\"dataxibxujwbhqwalm\"}},\"identity\":{\"type\":\"SystemAssigned\",\"principalId\":\"63faff57-a7ba-4c02-a86f-2870db96de3f\",\"tenantId\":\"11985b44-de42-41ba-a00c-6217f3e38480\",\"userAssignedIdentities\":{\"zjancuxr\":{\"principalId\":\"382d19f2-1931-493c-902a-6957cfa5e183\",\"clientId\":\"ae6080d1-f72f-4d39-925f-d1b6ec77423a\"},\"bavxbniwdjswzt\":{\"principalId\":\"8dd3f28f-0dc7-4bc9-968d-cc3a0dbb8793\",\"clientId\":\"28ca6ad7-443e-4720-9f88-3206f174a19c\"},\"pgn\":{\"principalId\":\"a93a737e-d1d8-452a-a4af-f6b16d93a9b3\",\"clientId\":\"4e1d5c40-a93e-494b-9aa6-6c9313fcc093\"}}},\"tags\":{\"pzxbz\":\"x\"},\"location\":\"zabglcuhxwt\",\"etag\":\"yqiklbbovplwzb\",\"id\":\"vgyuguos\",\"name\":\"mkfssxqukkfplgm\",\"type\":\"sxnkjzkdeslpvlo\"},{\"properties\":{\"provisioningState\":\"Deprovisioned\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"hxpkd\",\"consumerGroup\":\"baiuebbaumny\",\"fullyQualifiedEventHubNamespace\":\"ped\"},\"deviceMapping\":{\"content\":\"datanabckhsmtx\"}},\"identity\":{\"type\":\"UserAssigned\",\"principalId\":\"9d601b96-31f4-4e4b-b5ba-5e93177b0ae4\",\"tenantId\":\"36604fa7-99db-4d96-86f5-a4c82ef10e8c\",\"userAssignedIdentities\":{\"esap\":{\"principalId\":\"e11dd9e7-f674-4ca6-8969-7002b120c9a8\",\"clientId\":\"bab8bd32-5444-497b-a800-011f4587bffd\"},\"dqmh\":{\"principalId\":\"030505f5-a14d-40c2-a282-6c5b83401a74\",\"clientId\":\"b351c856-8f18-4675-8d50-b879279c683d\"},\"htldwk\":{\"principalId\":\"d4cd2a1d-af5a-4d2c-b519-dbb604a6b529\",\"clientId\":\"f6b62d92-be41-41a8-a3b0-9e2d75d96cad\"},\"uutkncw\":{\"principalId\":\"180084fd-8cda-4768-8178-9053f8cf914e\",\"clientId\":\"2d13b710-231d-423a-a387-8d4bdd35ed31\"}}},\"tags\":{\"sx\":\"svlxotogtwrup\",\"kvceoveilovnotyf\":\"nmic\",\"k\":\"fcnj\",\"kphywpnvjto\":\"nxdhbt\"},\"location\":\"ermclfplphoxuscr\",\"etag\":\"bgyepsbj\",\"id\":\"azqugxywpmueefj\",\"name\":\"wfqkquj\",\"type\":\"dsuyonobgla\"},{\"properties\":{\"provisioningState\":\"Accepted\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"cmgyud\",\"consumerGroup\":\"tlmoyrx\",\"fullyQualifiedEventHubNamespace\":\"fudwpznt\"},\"deviceMapping\":{\"content\":\"datazhlrqjb\"}},\"identity\":{\"type\":\"None\",\"principalId\":\"f27fc3af-b8ad-4b98-9f88-8714b3130e1a\",\"tenantId\":\"1e16b2da-d03c-483e-81bc-c23a1144d07a\",\"userAssignedIdentities\":{\"bkyvp\":{\"principalId\":\"fa934386-50e0-48e0-b7e3-abbe60487139\",\"clientId\":\"ca4f08fd-7d7b-437b-953f-e452188f4d88\"},\"n\":{\"principalId\":\"a6584d48-83c8-4209-8b66-f0e43f5107a6\",\"clientId\":\"456134a3-c25b-4ece-bb06-cfa57d46994e\"}}},\"tags\":{\"kafkuwbcrnwbm\":\"p\",\"us\":\"hhseyv\",\"ofmxagkvtmelmqkr\":\"tslhspkdeem\"},\"location\":\"hvljuahaquh\",\"etag\":\"hmdua\",\"id\":\"aex\",\"name\":\"pvfadmwsrcr\",\"type\":\"vxpvgomz\"},{\"properties\":{\"provisioningState\":\"SystemMaintenance\",\"ingestionEndpointConfiguration\":{\"eventHubName\":\"wbnb\",\"consumerGroup\":\"ldawkzbaliourqha\",\"fullyQualifiedEventHubNamespace\":\"uhashsfwx\"},\"deviceMapping\":{\"content\":\"dataw\"}},\"identity\":{\"type\":\"SystemAssigned,UserAssigned\",\"principalId\":\"61af33ad-31cb-495f-84ee-7b66713875b9\",\"tenantId\":\"9bb9741c-8823-496b-9cd3-343cf70a8c75\",\"userAssignedIdentities\":{\"xdje\":{\"principalId\":\"d69eac14-8630-4165-87ad-2d642ffe978e\",\"clientId\":\"977e1f6e-eb04-437c-a2fe-fc8901838abe\"},\"ucww\":{\"principalId\":\"0001cc13-4807-45c2-9418-97bab1631e3b\",\"clientId\":\"e34bef8a-7b02-4939-95cc-6287755d247e\"},\"vbvmeu\":{\"principalId\":\"1a42cdad-1646-4765-9910-143d03cd0eed\",\"clientId\":\"52ed49c1-2732-4a7c-8439-48735496a095\"}}},\"tags\":{\"eiotwmcdytdx\":\"vyhzceuojgjrwj\",\"nrjawgqwg\":\"it\",\"klwndnhjdauwhv\":\"hniskxfbkpyc\",\"zbtd\":\"l\"},\"location\":\"ujznb\",\"etag\":\"ow\",\"id\":\"wpr\",\"name\":\"qlveualupjmkh\",\"type\":\"xobbcswsrt\"}]}")
            .toObject(IotConnectorCollection.class);
        Assertions.assertEquals("wrqlfktsthsuco", model.nextLink());
        Assertions.assertEquals("yqiklbbovplwzb", model.value().get(0).etag());
        Assertions.assertEquals("zabglcuhxwt", model.value().get(0).location());
        Assertions.assertEquals("x", model.value().get(0).tags().get("pzxbz"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals("t", model.value().get(0).ingestionEndpointConfiguration().eventHubName());
        Assertions.assertEquals("wwrq", model.value().get(0).ingestionEndpointConfiguration().consumerGroup());
        Assertions.assertEquals("edckzywbiexzfey",
            model.value().get(0).ingestionEndpointConfiguration().fullyQualifiedEventHubNamespace());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IotConnectorCollection model
            = new IotConnectorCollection().withNextLink("wrqlfktsthsuco")
                .withValue(
                    Arrays.asList(
                        new IotConnectorInner().withEtag("yqiklbbovplwzb").withLocation("zabglcuhxwt")
                            .withTags(mapOf("pzxbz", "x"))
                            .withIdentity(new ServiceManagedIdentityIdentity()
                                .withType(ServiceManagedIdentityType.SYSTEM_ASSIGNED)
                                .withUserAssignedIdentities(mapOf("zjancuxr", new UserAssignedIdentity(),
                                    "bavxbniwdjswzt", new UserAssignedIdentity(), "pgn", new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(
                                new IotEventHubIngestionEndpointConfiguration().withEventHubName("t")
                                    .withConsumerGroup("wwrq").withFullyQualifiedEventHubNamespace("edckzywbiexzfey"))
                            .withDeviceMapping(new IotMappingProperties().withContent("dataxibxujwbhqwalm")),
                        new IotConnectorInner().withEtag("bgyepsbj").withLocation("ermclfplphoxuscr")
                            .withTags(mapOf("sx", "svlxotogtwrup", "kvceoveilovnotyf", "nmic", "k", "fcnj",
                                "kphywpnvjto", "nxdhbt"))
                            .withIdentity(
                                new ServiceManagedIdentityIdentity().withType(ServiceManagedIdentityType.USER_ASSIGNED)
                                    .withUserAssignedIdentities(mapOf("esap", new UserAssignedIdentity(), "dqmh",
                                        new UserAssignedIdentity(), "htldwk", new UserAssignedIdentity(), "uutkncw",
                                        new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(
                                new IotEventHubIngestionEndpointConfiguration().withEventHubName("hxpkd")
                                    .withConsumerGroup("baiuebbaumny").withFullyQualifiedEventHubNamespace("ped"))
                            .withDeviceMapping(new IotMappingProperties().withContent("datanabckhsmtx")),
                        new IotConnectorInner().withEtag("hmdua").withLocation("hvljuahaquh")
                            .withTags(mapOf("kafkuwbcrnwbm", "p", "us", "hhseyv", "ofmxagkvtmelmqkr", "tslhspkdeem"))
                            .withIdentity(new ServiceManagedIdentityIdentity()
                                .withType(ServiceManagedIdentityType.NONE).withUserAssignedIdentities(
                                    mapOf("bkyvp", new UserAssignedIdentity(), "n", new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(
                                new IotEventHubIngestionEndpointConfiguration().withEventHubName("cmgyud")
                                    .withConsumerGroup("tlmoyrx").withFullyQualifiedEventHubNamespace("fudwpznt"))
                            .withDeviceMapping(new IotMappingProperties().withContent("datazhlrqjb")),
                        new IotConnectorInner().withEtag("ow").withLocation("ujznb")
                            .withTags(mapOf("eiotwmcdytdx", "vyhzceuojgjrwj", "nrjawgqwg", "it", "klwndnhjdauwhv",
                                "hniskxfbkpyc", "zbtd", "l"))
                            .withIdentity(new ServiceManagedIdentityIdentity()
                                .withType(ServiceManagedIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                                .withUserAssignedIdentities(mapOf("xdje", new UserAssignedIdentity(), "ucww",
                                    new UserAssignedIdentity(), "vbvmeu", new UserAssignedIdentity())))
                            .withIngestionEndpointConfiguration(new IotEventHubIngestionEndpointConfiguration()
                                .withEventHubName("wbnb").withConsumerGroup("ldawkzbaliourqha")
                                .withFullyQualifiedEventHubNamespace("uhashsfwx"))
                            .withDeviceMapping(new IotMappingProperties().withContent("dataw"))));
        model = BinaryData.fromObject(model).toObject(IotConnectorCollection.class);
        Assertions.assertEquals("wrqlfktsthsuco", model.nextLink());
        Assertions.assertEquals("yqiklbbovplwzb", model.value().get(0).etag());
        Assertions.assertEquals("zabglcuhxwt", model.value().get(0).location());
        Assertions.assertEquals("x", model.value().get(0).tags().get("pzxbz"));
        Assertions.assertEquals(ServiceManagedIdentityType.SYSTEM_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals("t", model.value().get(0).ingestionEndpointConfiguration().eventHubName());
        Assertions.assertEquals("wwrq", model.value().get(0).ingestionEndpointConfiguration().consumerGroup());
        Assertions.assertEquals("edckzywbiexzfey",
            model.value().get(0).ingestionEndpointConfiguration().fullyQualifiedEventHubNamespace());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
