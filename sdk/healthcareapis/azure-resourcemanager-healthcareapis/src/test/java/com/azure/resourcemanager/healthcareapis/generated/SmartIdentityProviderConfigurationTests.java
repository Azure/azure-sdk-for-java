// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.healthcareapis.models.SmartDataActions;
import com.azure.resourcemanager.healthcareapis.models.SmartIdentityProviderApplication;
import com.azure.resourcemanager.healthcareapis.models.SmartIdentityProviderConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SmartIdentityProviderConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SmartIdentityProviderConfiguration model = BinaryData.fromString(
            "{\"authority\":\"pomgkopkwhojvp\",\"applications\":[{\"clientId\":\"xysmoc\",\"audience\":\"qfqvmkc\",\"allowedDataActions\":[\"Read\",\"Read\"]}]}")
            .toObject(SmartIdentityProviderConfiguration.class);
        Assertions.assertEquals("pomgkopkwhojvp", model.authority());
        Assertions.assertEquals("xysmoc", model.applications().get(0).clientId());
        Assertions.assertEquals("qfqvmkc", model.applications().get(0).audience());
        Assertions.assertEquals(SmartDataActions.READ, model.applications().get(0).allowedDataActions().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SmartIdentityProviderConfiguration model
            = new SmartIdentityProviderConfiguration().withAuthority("pomgkopkwhojvp")
                .withApplications(Arrays.asList(new SmartIdentityProviderApplication().withClientId("xysmoc")
                    .withAudience("qfqvmkc")
                    .withAllowedDataActions(Arrays.asList(SmartDataActions.READ, SmartDataActions.READ))));
        model = BinaryData.fromObject(model).toObject(SmartIdentityProviderConfiguration.class);
        Assertions.assertEquals("pomgkopkwhojvp", model.authority());
        Assertions.assertEquals("xysmoc", model.applications().get(0).clientId());
        Assertions.assertEquals("qfqvmkc", model.applications().get(0).audience());
        Assertions.assertEquals(SmartDataActions.READ, model.applications().get(0).allowedDataActions().get(0));
    }
}
