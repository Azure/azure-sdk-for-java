// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * An object to configure an identity provider for use with SMART on FHIR authentication.
 */
@Fluent
public final class SmartIdentityProviderConfiguration {
    /*
     * The identity provider token authority also known as the token issuing authority.
     */
    @JsonProperty(value = "authority")
    private String authority;

    /*
     * The array of identity provider applications for SMART on FHIR authentication.
     */
    @JsonProperty(value = "applications")
    private List<SmartIdentityProviderApplication> applications;

    /**
     * Creates an instance of SmartIdentityProviderConfiguration class.
     */
    public SmartIdentityProviderConfiguration() {
    }

    /**
     * Get the authority property: The identity provider token authority also known as the token issuing authority.
     * 
     * @return the authority value.
     */
    public String authority() {
        return this.authority;
    }

    /**
     * Set the authority property: The identity provider token authority also known as the token issuing authority.
     * 
     * @param authority the authority value to set.
     * @return the SmartIdentityProviderConfiguration object itself.
     */
    public SmartIdentityProviderConfiguration withAuthority(String authority) {
        this.authority = authority;
        return this;
    }

    /**
     * Get the applications property: The array of identity provider applications for SMART on FHIR authentication.
     * 
     * @return the applications value.
     */
    public List<SmartIdentityProviderApplication> applications() {
        return this.applications;
    }

    /**
     * Set the applications property: The array of identity provider applications for SMART on FHIR authentication.
     * 
     * @param applications the applications value to set.
     * @return the SmartIdentityProviderConfiguration object itself.
     */
    public SmartIdentityProviderConfiguration withApplications(List<SmartIdentityProviderApplication> applications) {
        this.applications = applications;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (applications() != null) {
            applications().forEach(e -> e.validate());
        }
    }
}
