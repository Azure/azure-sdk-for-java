// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The configuration of connected storage.
 */
@Fluent
public final class StorageConfiguration {
    /*
     * The resource id of connected storage account.
     */
    @JsonProperty(value = "storageResourceId")
    private String storageResourceId;

    /*
     * The filesystem name of connected storage account.
     */
    @JsonProperty(value = "fileSystemName")
    private String fileSystemName;

    /**
     * Creates an instance of StorageConfiguration class.
     */
    public StorageConfiguration() {
    }

    /**
     * Get the storageResourceId property: The resource id of connected storage account.
     * 
     * @return the storageResourceId value.
     */
    public String storageResourceId() {
        return this.storageResourceId;
    }

    /**
     * Set the storageResourceId property: The resource id of connected storage account.
     * 
     * @param storageResourceId the storageResourceId value to set.
     * @return the StorageConfiguration object itself.
     */
    public StorageConfiguration withStorageResourceId(String storageResourceId) {
        this.storageResourceId = storageResourceId;
        return this;
    }

    /**
     * Get the fileSystemName property: The filesystem name of connected storage account.
     * 
     * @return the fileSystemName value.
     */
    public String fileSystemName() {
        return this.fileSystemName;
    }

    /**
     * Set the fileSystemName property: The filesystem name of connected storage account.
     * 
     * @param fileSystemName the fileSystemName value to set.
     * @return the StorageConfiguration object itself.
     */
    public StorageConfiguration withFileSystemName(String fileSystemName) {
        this.fileSystemName = fileSystemName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
