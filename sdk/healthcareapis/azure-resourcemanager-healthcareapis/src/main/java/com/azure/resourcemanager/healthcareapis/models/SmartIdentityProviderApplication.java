// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * An Application configured in the Identity Provider used to access FHIR resources.
 */
@Fluent
public final class SmartIdentityProviderApplication {
    /*
     * The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.
     */
    @JsonProperty(value = "clientId")
    private String clientId;

    /*
     * The audience that will be used to validate bearer tokens against the given authority.
     */
    @JsonProperty(value = "audience")
    private String audience;

    /*
     * The actions that are permitted to be performed on FHIR resources for the application.
     */
    @JsonProperty(value = "allowedDataActions")
    private List<SmartDataActions> allowedDataActions;

    /**
     * Creates an instance of SmartIdentityProviderApplication class.
     */
    public SmartIdentityProviderApplication() {
    }

    /**
     * Get the clientId property: The application client id defined in the identity provider. This value will be used to
     * validate bearer tokens against the given authority.
     * 
     * @return the clientId value.
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: The application client id defined in the identity provider. This value will be used to
     * validate bearer tokens against the given authority.
     * 
     * @param clientId the clientId value to set.
     * @return the SmartIdentityProviderApplication object itself.
     */
    public SmartIdentityProviderApplication withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the audience property: The audience that will be used to validate bearer tokens against the given authority.
     * 
     * @return the audience value.
     */
    public String audience() {
        return this.audience;
    }

    /**
     * Set the audience property: The audience that will be used to validate bearer tokens against the given authority.
     * 
     * @param audience the audience value to set.
     * @return the SmartIdentityProviderApplication object itself.
     */
    public SmartIdentityProviderApplication withAudience(String audience) {
        this.audience = audience;
        return this;
    }

    /**
     * Get the allowedDataActions property: The actions that are permitted to be performed on FHIR resources for the
     * application.
     * 
     * @return the allowedDataActions value.
     */
    public List<SmartDataActions> allowedDataActions() {
        return this.allowedDataActions;
    }

    /**
     * Set the allowedDataActions property: The actions that are permitted to be performed on FHIR resources for the
     * application.
     * 
     * @param allowedDataActions the allowedDataActions value to set.
     * @return the SmartIdentityProviderApplication object itself.
     */
    public SmartIdentityProviderApplication withAllowedDataActions(List<SmartDataActions> allowedDataActions) {
        this.allowedDataActions = allowedDataActions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
