// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.sitemanager.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.sitemanager.fluent.models.SiteInner;

/**
 * Resource collection API of SitesByServiceGroups.
 */
public interface SitesByServiceGroups {
    /**
     * list Site at SG scope.
     * 
     * @param servicegroupName The name of the service group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Site list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> listByServiceGroup(String servicegroupName);

    /**
     * list Site at SG scope.
     * 
     * @param servicegroupName The name of the service group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Site list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> listByServiceGroup(String servicegroupName, Context context);

    /**
     * Get Site at SG scope.
     * 
     * @param servicegroupName The name of the service group.
     * @param siteName The name of the site.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site at SG scope along with {@link Response}.
     */
    Response<Site> getWithResponse(String servicegroupName, String siteName, Context context);

    /**
     * Get Site at SG scope.
     * 
     * @param servicegroupName The name of the service group.
     * @param siteName The name of the site.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site at SG scope.
     */
    Site get(String servicegroupName, String siteName);

    /**
     * create or update Site at SG scope.
     * 
     * @param servicegroupName The name of the service group.
     * @param siteName The name of the site.
     * @param resource The properties of the site.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site as ARM Resource.
     */
    Site createOrUpdate(String servicegroupName, String siteName, SiteInner resource);

    /**
     * create or update Site at SG scope.
     * 
     * @param servicegroupName The name of the service group.
     * @param siteName The name of the site.
     * @param resource The properties of the site.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site as ARM Resource.
     */
    Site createOrUpdate(String servicegroupName, String siteName, SiteInner resource, Context context);

    /**
     * update Site at SG scope.
     * 
     * @param servicegroupName The name of the service group.
     * @param siteName The name of the site.
     * @param properties The properties of the site.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site as ARM Resource along with {@link Response}.
     */
    Response<Site> updateWithResponse(String servicegroupName, String siteName, SiteUpdate properties, Context context);

    /**
     * update Site at SG scope.
     * 
     * @param servicegroupName The name of the service group.
     * @param siteName The name of the site.
     * @param properties The properties of the site.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return site as ARM Resource.
     */
    Site update(String servicegroupName, String siteName, SiteUpdate properties);

    /**
     * delete Site at SG scope.
     * 
     * @param servicegroupName The name of the service group.
     * @param siteName The name of the site.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(String servicegroupName, String siteName, Context context);

    /**
     * delete Site at SG scope.
     * 
     * @param servicegroupName The name of the service group.
     * @param siteName The name of the site.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String servicegroupName, String siteName);
}
