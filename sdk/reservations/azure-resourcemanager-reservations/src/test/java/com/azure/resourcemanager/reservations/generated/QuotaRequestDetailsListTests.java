// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.reservations.fluent.models.QuotaRequestDetailsInner;
import com.azure.resourcemanager.reservations.models.QuotaRequestDetailsList;
import com.azure.resourcemanager.reservations.models.QuotaRequestState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class QuotaRequestDetailsListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaRequestDetailsList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"provisioningState\":\"Accepted\",\"message\":\"ncormrlxqtvcof\",\"requestSubmitTime\":\"2021-04-19T01:16:51Z\",\"value\":[]},\"id\":\"vkg\",\"name\":\"u\",\"type\":\"gdknnqv\"},{\"properties\":{\"provisioningState\":\"Failed\",\"message\":\"n\",\"requestSubmitTime\":\"2021-11-22T10:46:24Z\",\"value\":[]},\"id\":\"dsg\",\"name\":\"a\",\"type\":\"mkycgra\"},{\"properties\":{\"provisioningState\":\"Succeeded\",\"message\":\"taeburuvdm\",\"requestSubmitTime\":\"2021-03-10T19:42:31Z\",\"value\":[]},\"id\":\"zlxwabmqoefkifr\",\"name\":\"tpuqujmq\",\"type\":\"gkfbtndoaong\"}],\"nextLink\":\"cn\"}")
                .toObject(QuotaRequestDetailsList.class);
        Assertions.assertEquals(QuotaRequestState.ACCEPTED, model.value().get(0).provisioningState());
        Assertions.assertEquals("cn", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaRequestDetailsList model =
            new QuotaRequestDetailsList()
                .withValue(
                    Arrays
                        .asList(
                            new QuotaRequestDetailsInner()
                                .withProvisioningState(QuotaRequestState.ACCEPTED)
                                .withValue(Arrays.asList()),
                            new QuotaRequestDetailsInner()
                                .withProvisioningState(QuotaRequestState.FAILED)
                                .withValue(Arrays.asList()),
                            new QuotaRequestDetailsInner()
                                .withProvisioningState(QuotaRequestState.SUCCEEDED)
                                .withValue(Arrays.asList())))
                .withNextLink("cn");
        model = BinaryData.fromObject(model).toObject(QuotaRequestDetailsList.class);
        Assertions.assertEquals(QuotaRequestState.ACCEPTED, model.value().get(0).provisioningState());
        Assertions.assertEquals("cn", model.nextLink());
    }
}
