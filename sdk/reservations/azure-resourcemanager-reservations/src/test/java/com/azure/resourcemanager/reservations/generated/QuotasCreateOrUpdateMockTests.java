// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.reservations.ReservationsManager;
import com.azure.resourcemanager.reservations.models.CurrentQuotaLimitBase;
import com.azure.resourcemanager.reservations.models.QuotaProperties;
import com.azure.resourcemanager.reservations.models.ResourceName;
import com.azure.resourcemanager.reservations.models.ResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class QuotasCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"limit\":1922486723,\"currentValue\":1078649712,\"unit\":\"srvhmgorffuki\",\"name\":{\"value\":\"w\",\"localizedValue\":\"hwplefaxvx\"},\"resourceType\":\"standard\",\"quotaPeriod\":\"tg\",\"properties\":\"datanzeyqxtjj\"},\"id\":\"zqlqhyc\",\"name\":\"vodggxdbee\",\"type\":\"mieknlraria\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ReservationsManager manager = ReservationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CurrentQuotaLimitBase response = manager.quotas()
            .define("vgtrdcnifmzzs")
            .withExistingLocation("ppnvdxz", "hihfrbbcevqagtlt", "hlfkqojpy")
            .withProperties(new QuotaProperties().withLimit(599707965)
                .withUnit("suxmpraf")
                .withName(new ResourceName().withValue("khocxvdfffwaf"))
                .withResourceType(ResourceType.STANDARD)
                .withProperties("datahcxgkmoyx"))
            .create();

        Assertions.assertEquals(1922486723, response.properties().limit());
        Assertions.assertEquals("srvhmgorffuki", response.properties().unit());
        Assertions.assertEquals("w", response.properties().name().value());
        Assertions.assertEquals(ResourceType.STANDARD, response.properties().resourceType());
    }
}
