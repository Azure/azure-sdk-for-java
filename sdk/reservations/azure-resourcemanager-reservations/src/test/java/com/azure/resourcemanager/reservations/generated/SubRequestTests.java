// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.reservations.models.QuotaRequestState;
import com.azure.resourcemanager.reservations.models.ResourceName;
import com.azure.resourcemanager.reservations.models.SubRequest;
import org.junit.jupiter.api.Assertions;

public final class SubRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubRequest model = BinaryData.fromString(
            "{\"limit\":1622767746,\"name\":{\"value\":\"nnqvsa\",\"localizedValue\":\"qntorudsgsahmkyc\"},\"resourceType\":\"auwjuetaebu\",\"unit\":\"vdmovsmzlxwabm\",\"provisioningState\":\"Accepted\",\"message\":\"kif\",\"subRequestId\":\"tpuqujmq\"}")
            .toObject(SubRequest.class);
        Assertions.assertEquals("nnqvsa", model.name().value());
        Assertions.assertEquals("vdmovsmzlxwabm", model.unit());
        Assertions.assertEquals(QuotaRequestState.ACCEPTED, model.provisioningState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubRequest model = new SubRequest().withName(new ResourceName().withValue("nnqvsa"))
            .withUnit("vdmovsmzlxwabm")
            .withProvisioningState(QuotaRequestState.ACCEPTED);
        model = BinaryData.fromObject(model).toObject(SubRequest.class);
        Assertions.assertEquals("nnqvsa", model.name().value());
        Assertions.assertEquals("vdmovsmzlxwabm", model.unit());
        Assertions.assertEquals(QuotaRequestState.ACCEPTED, model.provisioningState());
    }
}
