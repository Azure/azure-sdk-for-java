// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.reservations.fluent.models.QuotaRequestDetailsInner;
import com.azure.resourcemanager.reservations.models.QuotaRequestState;
import com.azure.resourcemanager.reservations.models.SubRequest;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class QuotaRequestDetailsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaRequestDetailsInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"provisioningState\":\"Succeeded\",\"message\":\"rthzvaytdwkqbrqu\",\"requestSubmitTime\":\"2021-01-20T18:23:45Z\",\"value\":[{\"limit\":1398139013,\"resourceType\":\"livpdt\",\"unit\":\"r\",\"provisioningState\":\"Invalid\",\"message\":\"oaxoruzfgsqu\",\"subRequestId\":\"xrxxlep\"}]},\"id\":\"ramxjezwlwnw\",\"name\":\"uqlcvydy\",\"type\":\"atdooaojkniod\"}")
                .toObject(QuotaRequestDetailsInner.class);
        Assertions.assertEquals(QuotaRequestState.SUCCEEDED, model.provisioningState());
        Assertions.assertEquals("r", model.value().get(0).unit());
        Assertions.assertEquals(QuotaRequestState.INVALID, model.value().get(0).provisioningState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaRequestDetailsInner model =
            new QuotaRequestDetailsInner()
                .withProvisioningState(QuotaRequestState.SUCCEEDED)
                .withValue(
                    Arrays.asList(new SubRequest().withUnit("r").withProvisioningState(QuotaRequestState.INVALID)));
        model = BinaryData.fromObject(model).toObject(QuotaRequestDetailsInner.class);
        Assertions.assertEquals(QuotaRequestState.SUCCEEDED, model.provisioningState());
        Assertions.assertEquals("r", model.value().get(0).unit());
        Assertions.assertEquals(QuotaRequestState.INVALID, model.value().get(0).provisioningState());
    }
}
