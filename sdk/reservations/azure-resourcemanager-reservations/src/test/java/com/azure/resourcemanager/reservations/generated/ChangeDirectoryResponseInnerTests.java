// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.reservations.fluent.models.ChangeDirectoryResponseInner;
import com.azure.resourcemanager.reservations.models.ChangeDirectoryResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ChangeDirectoryResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ChangeDirectoryResponseInner model = BinaryData.fromString(
            "{\"reservationOrder\":{\"id\":\"enwash\",\"name\":\"dtkcnqxwbpokulp\",\"isSucceeded\":false,\"error\":\"aasipqi\"},\"reservations\":[{\"id\":\"uqerpqlpqwc\",\"name\":\"uqgbdbutauvfbt\",\"isSucceeded\":true,\"error\":\"h\"},{\"id\":\"ykojoxafnndlpic\",\"name\":\"o\",\"isSucceeded\":false,\"error\":\"dyh\"},{\"id\":\"kkpwdreqnovvq\",\"name\":\"vljxywsu\",\"isSucceeded\":false,\"error\":\"s\"}]}")
            .toObject(ChangeDirectoryResponseInner.class);
        Assertions.assertEquals("enwash", model.reservationOrder().id());
        Assertions.assertEquals("dtkcnqxwbpokulp", model.reservationOrder().name());
        Assertions.assertEquals(false, model.reservationOrder().isSucceeded());
        Assertions.assertEquals("aasipqi", model.reservationOrder().error());
        Assertions.assertEquals("uqerpqlpqwc", model.reservations().get(0).id());
        Assertions.assertEquals("uqgbdbutauvfbt", model.reservations().get(0).name());
        Assertions.assertEquals(true, model.reservations().get(0).isSucceeded());
        Assertions.assertEquals("h", model.reservations().get(0).error());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ChangeDirectoryResponseInner model = new ChangeDirectoryResponseInner()
            .withReservationOrder(new ChangeDirectoryResult().withId("enwash")
                .withName("dtkcnqxwbpokulp")
                .withIsSucceeded(false)
                .withError("aasipqi"))
            .withReservations(Arrays.asList(
                new ChangeDirectoryResult().withId("uqerpqlpqwc")
                    .withName("uqgbdbutauvfbt")
                    .withIsSucceeded(true)
                    .withError("h"),
                new ChangeDirectoryResult().withId("ykojoxafnndlpic")
                    .withName("o")
                    .withIsSucceeded(false)
                    .withError("dyh"),
                new ChangeDirectoryResult().withId("kkpwdreqnovvq")
                    .withName("vljxywsu")
                    .withIsSucceeded(false)
                    .withError("s")));
        model = BinaryData.fromObject(model).toObject(ChangeDirectoryResponseInner.class);
        Assertions.assertEquals("enwash", model.reservationOrder().id());
        Assertions.assertEquals("dtkcnqxwbpokulp", model.reservationOrder().name());
        Assertions.assertEquals(false, model.reservationOrder().isSucceeded());
        Assertions.assertEquals("aasipqi", model.reservationOrder().error());
        Assertions.assertEquals("uqerpqlpqwc", model.reservations().get(0).id());
        Assertions.assertEquals("uqgbdbutauvfbt", model.reservations().get(0).name());
        Assertions.assertEquals(true, model.reservations().get(0).isSucceeded());
        Assertions.assertEquals("h", model.reservations().get(0).error());
    }
}
