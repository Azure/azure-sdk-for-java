// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.reservations.models.AppliedScopeType;
import com.azure.resourcemanager.reservations.models.PatchPropertiesRenewProperties;
import com.azure.resourcemanager.reservations.models.PurchaseRequest;
import com.azure.resourcemanager.reservations.models.ReservationBillingPlan;
import com.azure.resourcemanager.reservations.models.ReservationTerm;
import com.azure.resourcemanager.reservations.models.ReservedResourceType;
import com.azure.resourcemanager.reservations.models.SkuName;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PatchPropertiesRenewPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PatchPropertiesRenewProperties model =
            BinaryData
                .fromString(
                    "{\"purchaseProperties\":{\"sku\":{\"name\":\"pvecxgodeb\"},\"location\":\"kk\",\"properties\":{\"reservedResourceType\":\"RedisCache\",\"billingScopeId\":\"kgriwflzlfbx\",\"term\":\"P5Y\",\"billingPlan\":\"Monthly\",\"quantity\":1610498845,\"displayName\":\"pnq\",\"appliedScopeType\":\"ManagementGroup\",\"appliedScopes\":[\"kbrpyydhibnuq\",\"kpikadrgvt\"],\"renew\":false,\"reviewDateTime\":\"2021-11-05T12:10:44Z\"}}}")
                .toObject(PatchPropertiesRenewProperties.class);
        Assertions.assertEquals("pvecxgodeb", model.purchaseProperties().sku().name());
        Assertions.assertEquals("kk", model.purchaseProperties().location());
        Assertions.assertEquals(ReservedResourceType.REDIS_CACHE, model.purchaseProperties().reservedResourceType());
        Assertions.assertEquals("kgriwflzlfbx", model.purchaseProperties().billingScopeId());
        Assertions.assertEquals(ReservationTerm.P5Y, model.purchaseProperties().term());
        Assertions.assertEquals(ReservationBillingPlan.MONTHLY, model.purchaseProperties().billingPlan());
        Assertions.assertEquals(1610498845, model.purchaseProperties().quantity());
        Assertions.assertEquals("pnq", model.purchaseProperties().displayName());
        Assertions.assertEquals(AppliedScopeType.MANAGEMENT_GROUP, model.purchaseProperties().appliedScopeType());
        Assertions.assertEquals("kbrpyydhibnuq", model.purchaseProperties().appliedScopes().get(0));
        Assertions.assertEquals(false, model.purchaseProperties().renew());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-11-05T12:10:44Z"), model.purchaseProperties().reviewDateTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PatchPropertiesRenewProperties model =
            new PatchPropertiesRenewProperties()
                .withPurchaseProperties(
                    new PurchaseRequest()
                        .withSku(new SkuName().withName("pvecxgodeb"))
                        .withLocation("kk")
                        .withReservedResourceType(ReservedResourceType.REDIS_CACHE)
                        .withBillingScopeId("kgriwflzlfbx")
                        .withTerm(ReservationTerm.P5Y)
                        .withBillingPlan(ReservationBillingPlan.MONTHLY)
                        .withQuantity(1610498845)
                        .withDisplayName("pnq")
                        .withAppliedScopeType(AppliedScopeType.MANAGEMENT_GROUP)
                        .withAppliedScopes(Arrays.asList("kbrpyydhibnuq", "kpikadrgvt"))
                        .withRenew(false)
                        .withReviewDateTime(OffsetDateTime.parse("2021-11-05T12:10:44Z")));
        model = BinaryData.fromObject(model).toObject(PatchPropertiesRenewProperties.class);
        Assertions.assertEquals("pvecxgodeb", model.purchaseProperties().sku().name());
        Assertions.assertEquals("kk", model.purchaseProperties().location());
        Assertions.assertEquals(ReservedResourceType.REDIS_CACHE, model.purchaseProperties().reservedResourceType());
        Assertions.assertEquals("kgriwflzlfbx", model.purchaseProperties().billingScopeId());
        Assertions.assertEquals(ReservationTerm.P5Y, model.purchaseProperties().term());
        Assertions.assertEquals(ReservationBillingPlan.MONTHLY, model.purchaseProperties().billingPlan());
        Assertions.assertEquals(1610498845, model.purchaseProperties().quantity());
        Assertions.assertEquals("pnq", model.purchaseProperties().displayName());
        Assertions.assertEquals(AppliedScopeType.MANAGEMENT_GROUP, model.purchaseProperties().appliedScopeType());
        Assertions.assertEquals("kbrpyydhibnuq", model.purchaseProperties().appliedScopes().get(0));
        Assertions.assertEquals(false, model.purchaseProperties().renew());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-11-05T12:10:44Z"), model.purchaseProperties().reviewDateTime());
    }
}
