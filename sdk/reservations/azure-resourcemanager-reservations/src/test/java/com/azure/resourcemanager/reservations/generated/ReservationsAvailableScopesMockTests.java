// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.reservations.ReservationsManager;
import com.azure.resourcemanager.reservations.models.AvailableScopeProperties;
import com.azure.resourcemanager.reservations.models.AvailableScopeRequest;
import com.azure.resourcemanager.reservations.models.AvailableScopeRequestProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReservationsAvailableScopesMockTests {
    @Test
    public void testAvailableScopes() throws Exception {
        String responseStr
            = "{\"properties\":{\"scopes\":[{\"scope\":\"ofel\",\"valid\":true},{\"scope\":\"qmqhldvriii\",\"valid\":true},{\"scope\":\"lg\",\"valid\":true}]}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ReservationsManager manager = ReservationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AvailableScopeProperties response = manager.reservations()
            .availableScopes("irgzp", "rlazszrnw",
                new AvailableScopeRequest().withProperties(
                    new AvailableScopeRequestProperties().withScopes(Arrays.asList("dfpwpjylwbtlhfls", "cdhszf"))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ofel", response.properties().scopes().get(0).scope());
        Assertions.assertEquals(true, response.properties().scopes().get(0).valid());
    }
}
