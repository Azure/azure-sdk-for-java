// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.reservations.ReservationsManager;
import com.azure.resourcemanager.reservations.models.ChangeDirectoryRequest;
import com.azure.resourcemanager.reservations.models.ChangeDirectoryResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReservationOrdersChangeDirectoryWithResponseMockTests {
    @Test
    public void testChangeDirectoryWithResponse() throws Exception {
        String responseStr
            = "{\"reservationOrder\":{\"id\":\"epn\",\"name\":\"jcrxgibbdaxcon\",\"isSucceeded\":false,\"error\":\"uors\"},\"reservations\":[{\"id\":\"wbqpl\",\"name\":\"vnuuepzl\",\"isSucceeded\":false,\"error\":\"zsoldwey\"},{\"id\":\"dunvmnnrwrbiorkt\",\"name\":\"ywjhhgdnhx\",\"isSucceeded\":true,\"error\":\"fomiloxgg\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ReservationsManager manager = ReservationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ChangeDirectoryResponse response = manager.reservationOrders()
            .changeDirectoryWithResponse("duvwpklvxwmygd",
                new ChangeDirectoryRequest().withDestinationTenantId("gpqch"), com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("epn", response.reservationOrder().id());
        Assertions.assertEquals("jcrxgibbdaxcon", response.reservationOrder().name());
        Assertions.assertEquals(false, response.reservationOrder().isSucceeded());
        Assertions.assertEquals("uors", response.reservationOrder().error());
        Assertions.assertEquals("wbqpl", response.reservations().get(0).id());
        Assertions.assertEquals("vnuuepzl", response.reservations().get(0).name());
        Assertions.assertEquals(false, response.reservations().get(0).isSucceeded());
        Assertions.assertEquals("zsoldwey", response.reservations().get(0).error());
    }
}
