// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.reservations.fluent.models.PurchaseRequestProperties;
import com.azure.resourcemanager.reservations.models.AppliedScopeProperties;
import com.azure.resourcemanager.reservations.models.AppliedScopeType;
import com.azure.resourcemanager.reservations.models.InstanceFlexibility;
import com.azure.resourcemanager.reservations.models.PurchaseRequestPropertiesReservedResourceProperties;
import com.azure.resourcemanager.reservations.models.ReservationBillingPlan;
import com.azure.resourcemanager.reservations.models.ReservationTerm;
import com.azure.resourcemanager.reservations.models.ReservedResourceType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PurchaseRequestPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PurchaseRequestProperties model = BinaryData.fromString(
            "{\"reservedResourceType\":\"SqlDataWarehouse\",\"billingScopeId\":\"e\",\"term\":\"P5Y\",\"billingPlan\":\"Monthly\",\"quantity\":915193606,\"displayName\":\"v\",\"appliedScopeType\":\"Single\",\"appliedScopes\":[\"ulngsntn\",\"ybkzgcwr\",\"clxxwrljdo\",\"skcqvkocrcjd\"],\"appliedScopeProperties\":{\"tenantId\":\"nh\",\"managementGroupId\":\"njbiksqrglssain\",\"subscriptionId\":\"jwnzlljfmp\",\"resourceGroupId\":\"ebvmgxsabkyqd\",\"displayName\":\"jitcjczdzevn\"},\"renew\":false,\"reservedResourceProperties\":{\"instanceFlexibility\":\"On\"},\"reviewDateTime\":\"2021-04-18T17:34:07Z\"}")
            .toObject(PurchaseRequestProperties.class);
        Assertions.assertEquals(ReservedResourceType.SQL_DATA_WAREHOUSE, model.reservedResourceType());
        Assertions.assertEquals("e", model.billingScopeId());
        Assertions.assertEquals(ReservationTerm.P5Y, model.term());
        Assertions.assertEquals(ReservationBillingPlan.MONTHLY, model.billingPlan());
        Assertions.assertEquals(915193606, model.quantity());
        Assertions.assertEquals("v", model.displayName());
        Assertions.assertEquals(AppliedScopeType.SINGLE, model.appliedScopeType());
        Assertions.assertEquals("ulngsntn", model.appliedScopes().get(0));
        Assertions.assertEquals("nh", model.appliedScopeProperties().tenantId());
        Assertions.assertEquals("njbiksqrglssain", model.appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("jwnzlljfmp", model.appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("ebvmgxsabkyqd", model.appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("jitcjczdzevn", model.appliedScopeProperties().displayName());
        Assertions.assertEquals(false, model.renew());
        Assertions.assertEquals(InstanceFlexibility.ON, model.reservedResourceProperties().instanceFlexibility());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-18T17:34:07Z"), model.reviewDateTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PurchaseRequestProperties model
            = new PurchaseRequestProperties().withReservedResourceType(ReservedResourceType.SQL_DATA_WAREHOUSE)
                .withBillingScopeId("e")
                .withTerm(ReservationTerm.P5Y)
                .withBillingPlan(ReservationBillingPlan.MONTHLY)
                .withQuantity(915193606)
                .withDisplayName("v")
                .withAppliedScopeType(AppliedScopeType.SINGLE)
                .withAppliedScopes(Arrays.asList("ulngsntn", "ybkzgcwr", "clxxwrljdo", "skcqvkocrcjd"))
                .withAppliedScopeProperties(new AppliedScopeProperties().withTenantId("nh")
                    .withManagementGroupId("njbiksqrglssain")
                    .withSubscriptionId("jwnzlljfmp")
                    .withResourceGroupId("ebvmgxsabkyqd")
                    .withDisplayName("jitcjczdzevn"))
                .withRenew(false)
                .withReservedResourceProperties(new PurchaseRequestPropertiesReservedResourceProperties()
                    .withInstanceFlexibility(InstanceFlexibility.ON))
                .withReviewDateTime(OffsetDateTime.parse("2021-04-18T17:34:07Z"));
        model = BinaryData.fromObject(model).toObject(PurchaseRequestProperties.class);
        Assertions.assertEquals(ReservedResourceType.SQL_DATA_WAREHOUSE, model.reservedResourceType());
        Assertions.assertEquals("e", model.billingScopeId());
        Assertions.assertEquals(ReservationTerm.P5Y, model.term());
        Assertions.assertEquals(ReservationBillingPlan.MONTHLY, model.billingPlan());
        Assertions.assertEquals(915193606, model.quantity());
        Assertions.assertEquals("v", model.displayName());
        Assertions.assertEquals(AppliedScopeType.SINGLE, model.appliedScopeType());
        Assertions.assertEquals("ulngsntn", model.appliedScopes().get(0));
        Assertions.assertEquals("nh", model.appliedScopeProperties().tenantId());
        Assertions.assertEquals("njbiksqrglssain", model.appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("jwnzlljfmp", model.appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("ebvmgxsabkyqd", model.appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("jitcjczdzevn", model.appliedScopeProperties().displayName());
        Assertions.assertEquals(false, model.renew());
        Assertions.assertEquals(InstanceFlexibility.ON, model.reservedResourceProperties().instanceFlexibility());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-18T17:34:07Z"), model.reviewDateTime());
    }
}
