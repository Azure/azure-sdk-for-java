// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.reservations.fluent.models.ReservationResponseInner;
import com.azure.resourcemanager.reservations.models.AppliedScopeType;
import com.azure.resourcemanager.reservations.models.InstanceFlexibility;
import com.azure.resourcemanager.reservations.models.Kind;
import com.azure.resourcemanager.reservations.models.ProvisioningState;
import com.azure.resourcemanager.reservations.models.ReservationBillingPlan;
import com.azure.resourcemanager.reservations.models.ReservationList;
import com.azure.resourcemanager.reservations.models.ReservationTerm;
import com.azure.resourcemanager.reservations.models.ReservationsProperties;
import com.azure.resourcemanager.reservations.models.ReservedResourceType;
import com.azure.resourcemanager.reservations.models.SkuName;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ReservationListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReservationList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"location\":\"wey\",\"etag\":1047075786,\"sku\":{\"name\":\"evfyexfwhybcib\"},\"properties\":{\"reservedResourceType\":\"DataFactory\",\"instanceFlexibility\":\"On\",\"displayName\":\"tynnaamdectehfi\",\"appliedScopes\":[],\"appliedScopeType\":\"ManagementGroup\",\"archived\":true,\"capabilities\":\"vhezrkgqhcj\",\"quantity\":1843167961,\"provisioningState\":\"PendingResourceHold\",\"effectiveDateTime\":\"2021-06-07T02:58Z\",\"benefitStartTime\":\"2021-10-26T09:37:04Z\",\"lastUpdatedDateTime\":\"2021-02-03T09:21:46Z\",\"expiryDateTime\":\"2021-08-20T18:32:02Z\",\"reviewDateTime\":\"2021-05-05T15:09:29Z\",\"skuDescription\":\"qjpkcattpngjcrc\",\"billingPlan\":\"Upfront\",\"displayProvisioningState\":\"jh\",\"provisioningSubState\":\"daj\",\"purchaseDateTime\":\"2021-09-30T19:57Z\",\"billingScopeId\":\"canoaeupf\",\"renew\":true,\"renewSource\":\"trpmo\",\"renewDestination\":\"mcmatuokthfuiu\",\"term\":\"P1Y\",\"userFriendlyAppliedScopeType\":\"cpkvxodp\",\"userFriendlyRenewState\":\"zmyzydagf\"},\"kind\":\"Microsoft.Compute\",\"id\":\"zyiuokk\",\"name\":\"whrdxwzywqsmbsu\",\"type\":\"exim\"},{\"location\":\"yocf\",\"etag\":1075133602,\"sku\":{\"name\":\"mddystkiiux\"},\"properties\":{\"reservedResourceType\":\"SqlEdge\",\"instanceFlexibility\":\"On\",\"displayName\":\"rrqnbpoczvyifqrv\",\"appliedScopes\":[],\"appliedScopeType\":\"Single\",\"archived\":false,\"capabilities\":\"rm\",\"quantity\":115624331,\"provisioningState\":\"Created\",\"effectiveDateTime\":\"2021-12-05T03:26:34Z\",\"benefitStartTime\":\"2021-07-14T20:07:14Z\",\"lastUpdatedDateTime\":\"2021-01-04T16:23:35Z\",\"expiryDateTime\":\"2021-11-18T04:15:49Z\",\"reviewDateTime\":\"2021-05-09T09:45:07Z\",\"skuDescription\":\"czwtruwiqzbqjv\",\"billingPlan\":\"Monthly\",\"displayProvisioningState\":\"okacspk\",\"provisioningSubState\":\"hzdobpxjmflbvvnc\",\"purchaseDateTime\":\"2021-03-04T23:54:12Z\",\"billingScopeId\":\"juqk\",\"renew\":false,\"renewSource\":\"jiwkuofoskghsau\",\"renewDestination\":\"mjmvxieduugidyjr\",\"term\":\"P1Y\",\"userFriendlyAppliedScopeType\":\"osvexcsonpclhoc\",\"userFriendlyRenewState\":\"slkevle\"},\"kind\":\"Microsoft.Compute\",\"id\":\"u\",\"name\":\"fmvfaxkffeiit\",\"type\":\"lvmezyvshxmzsbbz\"},{\"location\":\"gigr\",\"etag\":830818996,\"sku\":{\"name\":\"vjxxjnsp\"},\"properties\":{\"reservedResourceType\":\"MariaDb\",\"instanceFlexibility\":\"Off\",\"displayName\":\"nkoukn\",\"appliedScopes\":[],\"appliedScopeType\":\"Single\",\"archived\":true,\"capabilities\":\"kbldngkpocipa\",\"quantity\":1866473569,\"provisioningState\":\"PendingResourceHold\",\"effectiveDateTime\":\"2021-01-06T21:03:44Z\",\"benefitStartTime\":\"2021-12-09T00:28:10Z\",\"lastUpdatedDateTime\":\"2021-07-16T00:56:23Z\",\"expiryDateTime\":\"2021-10-28T00:07:14Z\",\"reviewDateTime\":\"2021-07-11T10:35:30Z\",\"skuDescription\":\"gevqznty\",\"billingPlan\":\"Monthly\",\"displayProvisioningState\":\"izcdrqjsd\",\"provisioningSubState\":\"dnfyhxdeoejzicwi\",\"purchaseDateTime\":\"2021-01-05T16:16:49Z\",\"billingScopeId\":\"ishc\",\"renew\":true,\"renewSource\":\"jdeyeamdpha\",\"renewDestination\":\"lpbuxwgipwhonowk\",\"term\":\"P1Y\",\"userFriendlyAppliedScopeType\":\"nkixzbinj\",\"userFriendlyRenewState\":\"uttmrywnuzoqft\"},\"kind\":\"Microsoft.Compute\",\"id\":\"n\",\"name\":\"cqvyxlwhzlsico\",\"type\":\"oqqnwvlryav\"}],\"nextLink\":\"heun\"}")
                .toObject(ReservationList.class);
        Assertions.assertEquals("wey", model.value().get(0).location());
        Assertions.assertEquals(1047075786, model.value().get(0).etag());
        Assertions.assertEquals("evfyexfwhybcib", model.value().get(0).sku().name());
        Assertions
            .assertEquals(ReservedResourceType.DATA_FACTORY, model.value().get(0).properties().reservedResourceType());
        Assertions.assertEquals(InstanceFlexibility.ON, model.value().get(0).properties().instanceFlexibility());
        Assertions.assertEquals("tynnaamdectehfi", model.value().get(0).properties().displayName());
        Assertions
            .assertEquals(AppliedScopeType.MANAGEMENT_GROUP, model.value().get(0).properties().appliedScopeType());
        Assertions.assertEquals(true, model.value().get(0).properties().archived());
        Assertions.assertEquals("vhezrkgqhcj", model.value().get(0).properties().capabilities());
        Assertions.assertEquals(1843167961, model.value().get(0).properties().quantity());
        Assertions
            .assertEquals(
                ProvisioningState.PENDING_RESOURCE_HOLD, model.value().get(0).properties().provisioningState());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-06-07T02:58Z"), model.value().get(0).properties().effectiveDateTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-10-26T09:37:04Z"), model.value().get(0).properties().benefitStartTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-08-20T18:32:02Z"), model.value().get(0).properties().expiryDateTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-05-05T15:09:29Z"), model.value().get(0).properties().reviewDateTime());
        Assertions.assertEquals("qjpkcattpngjcrc", model.value().get(0).properties().skuDescription());
        Assertions.assertEquals(ReservationBillingPlan.UPFRONT, model.value().get(0).properties().billingPlan());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-09-30T19:57Z"), model.value().get(0).properties().purchaseDateTime());
        Assertions.assertEquals("canoaeupf", model.value().get(0).properties().billingScopeId());
        Assertions.assertEquals(true, model.value().get(0).properties().renew());
        Assertions.assertEquals("trpmo", model.value().get(0).properties().renewSource());
        Assertions.assertEquals("mcmatuokthfuiu", model.value().get(0).properties().renewDestination());
        Assertions.assertEquals(ReservationTerm.P1Y, model.value().get(0).properties().term());
        Assertions.assertEquals(Kind.MICROSOFT_COMPUTE, model.value().get(0).kind());
        Assertions.assertEquals("heun", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReservationList model =
            new ReservationList()
                .withValue(
                    Arrays
                        .asList(
                            new ReservationResponseInner()
                                .withLocation("wey")
                                .withEtag(1047075786)
                                .withSku(new SkuName().withName("evfyexfwhybcib"))
                                .withProperties(
                                    new ReservationsProperties()
                                        .withReservedResourceType(ReservedResourceType.DATA_FACTORY)
                                        .withInstanceFlexibility(InstanceFlexibility.ON)
                                        .withDisplayName("tynnaamdectehfi")
                                        .withAppliedScopes(Arrays.asList())
                                        .withAppliedScopeType(AppliedScopeType.MANAGEMENT_GROUP)
                                        .withArchived(true)
                                        .withCapabilities("vhezrkgqhcj")
                                        .withQuantity(1843167961)
                                        .withProvisioningState(ProvisioningState.PENDING_RESOURCE_HOLD)
                                        .withEffectiveDateTime(OffsetDateTime.parse("2021-06-07T02:58Z"))
                                        .withBenefitStartTime(OffsetDateTime.parse("2021-10-26T09:37:04Z"))
                                        .withExpiryDateTime(OffsetDateTime.parse("2021-08-20T18:32:02Z"))
                                        .withReviewDateTime(OffsetDateTime.parse("2021-05-05T15:09:29Z"))
                                        .withSkuDescription("qjpkcattpngjcrc")
                                        .withBillingPlan(ReservationBillingPlan.UPFRONT)
                                        .withPurchaseDateTime(OffsetDateTime.parse("2021-09-30T19:57Z"))
                                        .withBillingScopeId("canoaeupf")
                                        .withRenew(true)
                                        .withRenewSource("trpmo")
                                        .withRenewDestination("mcmatuokthfuiu")
                                        .withTerm(ReservationTerm.P1Y))
                                .withKind(Kind.MICROSOFT_COMPUTE),
                            new ReservationResponseInner()
                                .withLocation("yocf")
                                .withEtag(1075133602)
                                .withSku(new SkuName().withName("mddystkiiux"))
                                .withProperties(
                                    new ReservationsProperties()
                                        .withReservedResourceType(ReservedResourceType.SQL_EDGE)
                                        .withInstanceFlexibility(InstanceFlexibility.ON)
                                        .withDisplayName("rrqnbpoczvyifqrv")
                                        .withAppliedScopes(Arrays.asList())
                                        .withAppliedScopeType(AppliedScopeType.SINGLE)
                                        .withArchived(false)
                                        .withCapabilities("rm")
                                        .withQuantity(115624331)
                                        .withProvisioningState(ProvisioningState.CREATED)
                                        .withEffectiveDateTime(OffsetDateTime.parse("2021-12-05T03:26:34Z"))
                                        .withBenefitStartTime(OffsetDateTime.parse("2021-07-14T20:07:14Z"))
                                        .withExpiryDateTime(OffsetDateTime.parse("2021-11-18T04:15:49Z"))
                                        .withReviewDateTime(OffsetDateTime.parse("2021-05-09T09:45:07Z"))
                                        .withSkuDescription("czwtruwiqzbqjv")
                                        .withBillingPlan(ReservationBillingPlan.MONTHLY)
                                        .withPurchaseDateTime(OffsetDateTime.parse("2021-03-04T23:54:12Z"))
                                        .withBillingScopeId("juqk")
                                        .withRenew(false)
                                        .withRenewSource("jiwkuofoskghsau")
                                        .withRenewDestination("mjmvxieduugidyjr")
                                        .withTerm(ReservationTerm.P1Y))
                                .withKind(Kind.MICROSOFT_COMPUTE),
                            new ReservationResponseInner()
                                .withLocation("gigr")
                                .withEtag(830818996)
                                .withSku(new SkuName().withName("vjxxjnsp"))
                                .withProperties(
                                    new ReservationsProperties()
                                        .withReservedResourceType(ReservedResourceType.MARIA_DB)
                                        .withInstanceFlexibility(InstanceFlexibility.OFF)
                                        .withDisplayName("nkoukn")
                                        .withAppliedScopes(Arrays.asList())
                                        .withAppliedScopeType(AppliedScopeType.SINGLE)
                                        .withArchived(true)
                                        .withCapabilities("kbldngkpocipa")
                                        .withQuantity(1866473569)
                                        .withProvisioningState(ProvisioningState.PENDING_RESOURCE_HOLD)
                                        .withEffectiveDateTime(OffsetDateTime.parse("2021-01-06T21:03:44Z"))
                                        .withBenefitStartTime(OffsetDateTime.parse("2021-12-09T00:28:10Z"))
                                        .withExpiryDateTime(OffsetDateTime.parse("2021-10-28T00:07:14Z"))
                                        .withReviewDateTime(OffsetDateTime.parse("2021-07-11T10:35:30Z"))
                                        .withSkuDescription("gevqznty")
                                        .withBillingPlan(ReservationBillingPlan.MONTHLY)
                                        .withPurchaseDateTime(OffsetDateTime.parse("2021-01-05T16:16:49Z"))
                                        .withBillingScopeId("ishc")
                                        .withRenew(true)
                                        .withRenewSource("jdeyeamdpha")
                                        .withRenewDestination("lpbuxwgipwhonowk")
                                        .withTerm(ReservationTerm.P1Y))
                                .withKind(Kind.MICROSOFT_COMPUTE)))
                .withNextLink("heun");
        model = BinaryData.fromObject(model).toObject(ReservationList.class);
        Assertions.assertEquals("wey", model.value().get(0).location());
        Assertions.assertEquals(1047075786, model.value().get(0).etag());
        Assertions.assertEquals("evfyexfwhybcib", model.value().get(0).sku().name());
        Assertions
            .assertEquals(ReservedResourceType.DATA_FACTORY, model.value().get(0).properties().reservedResourceType());
        Assertions.assertEquals(InstanceFlexibility.ON, model.value().get(0).properties().instanceFlexibility());
        Assertions.assertEquals("tynnaamdectehfi", model.value().get(0).properties().displayName());
        Assertions
            .assertEquals(AppliedScopeType.MANAGEMENT_GROUP, model.value().get(0).properties().appliedScopeType());
        Assertions.assertEquals(true, model.value().get(0).properties().archived());
        Assertions.assertEquals("vhezrkgqhcj", model.value().get(0).properties().capabilities());
        Assertions.assertEquals(1843167961, model.value().get(0).properties().quantity());
        Assertions
            .assertEquals(
                ProvisioningState.PENDING_RESOURCE_HOLD, model.value().get(0).properties().provisioningState());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-06-07T02:58Z"), model.value().get(0).properties().effectiveDateTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-10-26T09:37:04Z"), model.value().get(0).properties().benefitStartTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-08-20T18:32:02Z"), model.value().get(0).properties().expiryDateTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-05-05T15:09:29Z"), model.value().get(0).properties().reviewDateTime());
        Assertions.assertEquals("qjpkcattpngjcrc", model.value().get(0).properties().skuDescription());
        Assertions.assertEquals(ReservationBillingPlan.UPFRONT, model.value().get(0).properties().billingPlan());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-09-30T19:57Z"), model.value().get(0).properties().purchaseDateTime());
        Assertions.assertEquals("canoaeupf", model.value().get(0).properties().billingScopeId());
        Assertions.assertEquals(true, model.value().get(0).properties().renew());
        Assertions.assertEquals("trpmo", model.value().get(0).properties().renewSource());
        Assertions.assertEquals("mcmatuokthfuiu", model.value().get(0).properties().renewDestination());
        Assertions.assertEquals(ReservationTerm.P1Y, model.value().get(0).properties().term());
        Assertions.assertEquals(Kind.MICROSOFT_COMPUTE, model.value().get(0).kind());
        Assertions.assertEquals("heun", model.nextLink());
    }
}
