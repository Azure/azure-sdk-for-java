// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.reservations.fluent.models.QuotaRequestDetailsInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Quota request details. */
@Fluent
public final class QuotaRequestDetailsList {
    /*
     * The quota requests.
     */
    @JsonProperty(value = "value")
    private List<QuotaRequestDetailsInner> value;

    /*
     * The URI to fetch the next page of quota limits. When there are no more pages, this is null.
     */
    @JsonProperty(value = "nextLink")
    private String nextLink;

    /** Creates an instance of QuotaRequestDetailsList class. */
    public QuotaRequestDetailsList() {
    }

    /**
     * Get the value property: The quota requests.
     *
     * @return the value value.
     */
    public List<QuotaRequestDetailsInner> value() {
        return this.value;
    }

    /**
     * Set the value property: The quota requests.
     *
     * @param value the value value to set.
     * @return the QuotaRequestDetailsList object itself.
     */
    public QuotaRequestDetailsList withValue(List<QuotaRequestDetailsInner> value) {
        this.value = value;
        return this;
    }

    /**
     * Get the nextLink property: The URI to fetch the next page of quota limits. When there are no more pages, this is
     * null.
     *
     * @return the nextLink value.
     */
    public String nextLink() {
        return this.nextLink;
    }

    /**
     * Set the nextLink property: The URI to fetch the next page of quota limits. When there are no more pages, this is
     * null.
     *
     * @param nextLink the nextLink value to set.
     * @return the QuotaRequestDetailsList object itself.
     */
    public QuotaRequestDetailsList withNextLink(String nextLink) {
        this.nextLink = nextLink;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (value() != null) {
            value().forEach(e -> e.validate());
        }
    }
}
