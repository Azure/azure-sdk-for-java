// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not
 * included.
 */
@Fluent
public final class RenewPropertiesResponseBillingCurrencyTotal {
    /*
     * The ISO 4217 3-letter currency code for the currency used by this purchase record.
     */
    @JsonProperty(value = "currencyCode")
    private String currencyCode;

    /*
     * The amount property.
     */
    @JsonProperty(value = "amount")
    private Float amount;

    /** Creates an instance of RenewPropertiesResponseBillingCurrencyTotal class. */
    public RenewPropertiesResponseBillingCurrencyTotal() {
    }

    /**
     * Get the currencyCode property: The ISO 4217 3-letter currency code for the currency used by this purchase record.
     *
     * @return the currencyCode value.
     */
    public String currencyCode() {
        return this.currencyCode;
    }

    /**
     * Set the currencyCode property: The ISO 4217 3-letter currency code for the currency used by this purchase record.
     *
     * @param currencyCode the currencyCode value to set.
     * @return the RenewPropertiesResponseBillingCurrencyTotal object itself.
     */
    public RenewPropertiesResponseBillingCurrencyTotal withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }

    /**
     * Get the amount property: The amount property.
     *
     * @return the amount value.
     */
    public Float amount() {
        return this.amount;
    }

    /**
     * Set the amount property: The amount property.
     *
     * @param amount the amount value to set.
     * @return the RenewPropertiesResponseBillingCurrencyTotal object itself.
     */
    public RenewPropertiesResponseBillingCurrencyTotal withAmount(Float amount) {
        this.amount = amount;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
