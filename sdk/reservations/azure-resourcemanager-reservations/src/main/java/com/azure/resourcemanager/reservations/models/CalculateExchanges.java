// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.models;

import com.azure.core.util.Context;

/** Resource collection API of CalculateExchanges. */
public interface CalculateExchanges {
    /**
     * Calculates the refund amounts and price of the new purchases.
     *
     * <p>Calculates price for exchanging `Reservations` if there are no policy errors.
     *
     * @param body Request containing purchases and refunds that need to be executed.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return calculateExchange operation result.
     */
    CalculateExchangeOperationResultResponse post(CalculateExchangeRequest body);

    /**
     * Calculates the refund amounts and price of the new purchases.
     *
     * <p>Calculates price for exchanging `Reservations` if there are no policy errors.
     *
     * @param body Request containing purchases and refunds that need to be executed.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return calculateExchange operation result.
     */
    CalculateExchangeOperationResultResponse post(CalculateExchangeRequest body, Context context);
}
