// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.reservations.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Reservation purchase details. */
@Fluent
public final class ReservationToPurchaseExchange {
    /*
     * Fully qualified id of the reservationOrder being purchased
     */
    @JsonProperty(value = "reservationOrderId")
    private String reservationOrderId;

    /*
     * Fully qualified id of the reservation being purchased. This value is only guaranteed to be non-null if the
     * purchase is successful.
     */
    @JsonProperty(value = "reservationId")
    private String reservationId;

    /*
     * The request for reservation purchase
     */
    @JsonProperty(value = "properties")
    private PurchaseRequest properties;

    /*
     * Pricing information containing the amount and the currency code
     */
    @JsonProperty(value = "billingCurrencyTotal")
    private Price billingCurrencyTotal;

    /*
     * Status of the individual operation.
     */
    @JsonProperty(value = "status")
    private OperationStatus status;

    /** Creates an instance of ReservationToPurchaseExchange class. */
    public ReservationToPurchaseExchange() {
    }

    /**
     * Get the reservationOrderId property: Fully qualified id of the reservationOrder being purchased.
     *
     * @return the reservationOrderId value.
     */
    public String reservationOrderId() {
        return this.reservationOrderId;
    }

    /**
     * Set the reservationOrderId property: Fully qualified id of the reservationOrder being purchased.
     *
     * @param reservationOrderId the reservationOrderId value to set.
     * @return the ReservationToPurchaseExchange object itself.
     */
    public ReservationToPurchaseExchange withReservationOrderId(String reservationOrderId) {
        this.reservationOrderId = reservationOrderId;
        return this;
    }

    /**
     * Get the reservationId property: Fully qualified id of the reservation being purchased. This value is only
     * guaranteed to be non-null if the purchase is successful.
     *
     * @return the reservationId value.
     */
    public String reservationId() {
        return this.reservationId;
    }

    /**
     * Set the reservationId property: Fully qualified id of the reservation being purchased. This value is only
     * guaranteed to be non-null if the purchase is successful.
     *
     * @param reservationId the reservationId value to set.
     * @return the ReservationToPurchaseExchange object itself.
     */
    public ReservationToPurchaseExchange withReservationId(String reservationId) {
        this.reservationId = reservationId;
        return this;
    }

    /**
     * Get the properties property: The request for reservation purchase.
     *
     * @return the properties value.
     */
    public PurchaseRequest properties() {
        return this.properties;
    }

    /**
     * Set the properties property: The request for reservation purchase.
     *
     * @param properties the properties value to set.
     * @return the ReservationToPurchaseExchange object itself.
     */
    public ReservationToPurchaseExchange withProperties(PurchaseRequest properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the billingCurrencyTotal property: Pricing information containing the amount and the currency code.
     *
     * @return the billingCurrencyTotal value.
     */
    public Price billingCurrencyTotal() {
        return this.billingCurrencyTotal;
    }

    /**
     * Set the billingCurrencyTotal property: Pricing information containing the amount and the currency code.
     *
     * @param billingCurrencyTotal the billingCurrencyTotal value to set.
     * @return the ReservationToPurchaseExchange object itself.
     */
    public ReservationToPurchaseExchange withBillingCurrencyTotal(Price billingCurrencyTotal) {
        this.billingCurrencyTotal = billingCurrencyTotal;
        return this;
    }

    /**
     * Get the status property: Status of the individual operation.
     *
     * @return the status value.
     */
    public OperationStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Status of the individual operation.
     *
     * @param status the status value to set.
     * @return the ReservationToPurchaseExchange object itself.
     */
    public ReservationToPurchaseExchange withStatus(OperationStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (properties() != null) {
            properties().validate();
        }
        if (billingCurrencyTotal() != null) {
            billingCurrencyTotal().validate();
        }
    }
}
