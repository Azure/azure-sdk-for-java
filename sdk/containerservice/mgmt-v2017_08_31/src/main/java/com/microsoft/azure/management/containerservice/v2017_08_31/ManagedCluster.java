/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerservice.v2017_08_31;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.containerservice.v2017_08_31.implementation.ContainerServiceManager;
import java.util.List;
import com.microsoft.azure.management.containerservice.v2017_08_31.implementation.ManagedClusterInner;

/**
 * Type representing ManagedCluster.
 */
public interface ManagedCluster extends HasInner<ManagedClusterInner>, Resource, GroupableResourceCore<ContainerServiceManager, ManagedClusterInner>, HasResourceGroup, Refreshable<ManagedCluster>, Updatable<ManagedCluster.Update>, HasManager<ContainerServiceManager> {
    /**
     * @return the agentPoolProfiles value.
     */
    List<ContainerServiceAgentPoolProfile> agentPoolProfiles();

    /**
     * @return the dnsPrefix value.
     */
    String dnsPrefix();

    /**
     * @return the fqdn value.
     */
    String fqdn();

    /**
     * @return the kubernetesVersion value.
     */
    String kubernetesVersion();

    /**
     * @return the linuxProfile value.
     */
    ContainerServiceLinuxProfile linuxProfile();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the servicePrincipalProfile value.
     */
    ContainerServiceServicePrincipalProfile servicePrincipalProfile();

    /**
     * The entirety of the ManagedCluster definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ManagedCluster definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ManagedCluster definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the ManagedCluster definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the managedcluster update allowing to specify AgentPoolProfiles.
         */
        interface WithAgentPoolProfiles {
            /**
             * Specifies agentPoolProfiles.
             */
            WithCreate withAgentPoolProfiles(List<ContainerServiceAgentPoolProfile> agentPoolProfiles);
        }

        /**
         * The stage of the managedcluster update allowing to specify DnsPrefix.
         */
        interface WithDnsPrefix {
            /**
             * Specifies dnsPrefix.
             */
            WithCreate withDnsPrefix(String dnsPrefix);
        }

        /**
         * The stage of the managedcluster update allowing to specify KubernetesVersion.
         */
        interface WithKubernetesVersion {
            /**
             * Specifies kubernetesVersion.
             */
            WithCreate withKubernetesVersion(String kubernetesVersion);
        }

        /**
         * The stage of the managedcluster update allowing to specify LinuxProfile.
         */
        interface WithLinuxProfile {
            /**
             * Specifies linuxProfile.
             */
            WithCreate withLinuxProfile(ContainerServiceLinuxProfile linuxProfile);
        }

        /**
         * The stage of the managedcluster update allowing to specify ServicePrincipalProfile.
         */
        interface WithServicePrincipalProfile {
            /**
             * Specifies servicePrincipalProfile.
             */
            WithCreate withServicePrincipalProfile(ContainerServiceServicePrincipalProfile servicePrincipalProfile);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ManagedCluster>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithAgentPoolProfiles, DefinitionStages.WithDnsPrefix, DefinitionStages.WithKubernetesVersion, DefinitionStages.WithLinuxProfile, DefinitionStages.WithServicePrincipalProfile {
        }
    }
    /**
     * The template for a ManagedCluster update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ManagedCluster>, Resource.UpdateWithTags<Update>, UpdateStages.WithAgentPoolProfiles, UpdateStages.WithDnsPrefix, UpdateStages.WithKubernetesVersion, UpdateStages.WithLinuxProfile, UpdateStages.WithServicePrincipalProfile {
    }

    /**
     * Grouping of ManagedCluster update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the managedcluster {0} allowing to specify AgentPoolProfiles.
         */
        interface WithAgentPoolProfiles {
            /**
             * Specifies agentPoolProfiles.
             */
            Update withAgentPoolProfiles(List<ContainerServiceAgentPoolProfile> agentPoolProfiles);
        }

        /**
         * The stage of the managedcluster {0} allowing to specify DnsPrefix.
         */
        interface WithDnsPrefix {
            /**
             * Specifies dnsPrefix.
             */
            Update withDnsPrefix(String dnsPrefix);
        }

        /**
         * The stage of the managedcluster {0} allowing to specify KubernetesVersion.
         */
        interface WithKubernetesVersion {
            /**
             * Specifies kubernetesVersion.
             */
            Update withKubernetesVersion(String kubernetesVersion);
        }

        /**
         * The stage of the managedcluster {0} allowing to specify LinuxProfile.
         */
        interface WithLinuxProfile {
            /**
             * Specifies linuxProfile.
             */
            Update withLinuxProfile(ContainerServiceLinuxProfile linuxProfile);
        }

        /**
         * The stage of the managedcluster {0} allowing to specify ServicePrincipalProfile.
         */
        interface WithServicePrincipalProfile {
            /**
             * Specifies servicePrincipalProfile.
             */
            Update withServicePrincipalProfile(ContainerServiceServicePrincipalProfile servicePrincipalProfile);
        }

    }
}
