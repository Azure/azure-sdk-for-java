// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler model.
 */
@Fluent
public final class ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler
    implements JsonSerializable<ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler> {
    /*
     * Whether to enable VPA add-on in cluster. Default value is false.
     */
    private boolean enabled;

    /*
     * Whether VPA add-on is enabled and configured to scale AKS-managed add-ons.
     */
    private AddonAutoscaling addonAutoscaling;

    /**
     * Creates an instance of ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler class.
     */
    public ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler() {
    }

    /**
     * Get the enabled property: Whether to enable VPA add-on in cluster. Default value is false.
     * 
     * @return the enabled value.
     */
    public boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Whether to enable VPA add-on in cluster. Default value is false.
     * 
     * @param enabled the enabled value to set.
     * @return the ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler object itself.
     */
    public ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler withEnabled(boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the addonAutoscaling property: Whether VPA add-on is enabled and configured to scale AKS-managed add-ons.
     * 
     * @return the addonAutoscaling value.
     */
    public AddonAutoscaling addonAutoscaling() {
        return this.addonAutoscaling;
    }

    /**
     * Set the addonAutoscaling property: Whether VPA add-on is enabled and configured to scale AKS-managed add-ons.
     * 
     * @param addonAutoscaling the addonAutoscaling value to set.
     * @return the ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler object itself.
     */
    public ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler
        withAddonAutoscaling(AddonAutoscaling addonAutoscaling) {
        this.addonAutoscaling = addonAutoscaling;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enabled", this.enabled);
        jsonWriter.writeStringField("addonAutoscaling",
            this.addonAutoscaling == null ? null : this.addonAutoscaling.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the
     * ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler.
     */
    public static ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler deserializedManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler
                = new ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enabled".equals(fieldName)) {
                    deserializedManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler.enabled
                        = reader.getBoolean();
                } else if ("addonAutoscaling".equals(fieldName)) {
                    deserializedManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler.addonAutoscaling
                        = AddonAutoscaling.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler;
        });
    }
}
