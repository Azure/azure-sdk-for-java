// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Holds configuration customizations for kube-proxy. Any values not defined will use the kube-proxy defaulting
 * behavior. See https://v&lt;version&gt;.docs.kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/
 * where &lt;version&gt; is represented by a &lt;major version&gt;-&lt;minor version&gt; string. Kubernetes version 1.23
 * would be '1-23'.
 */
@Fluent
public final class ContainerServiceNetworkProfileKubeProxyConfig
    implements JsonSerializable<ContainerServiceNetworkProfileKubeProxyConfig> {
    /*
     * Whether to enable on kube-proxy on the cluster (if no 'kubeProxyConfig' exists, kube-proxy is enabled in AKS by
     * default without these customizations).
     */
    private Boolean enabled;

    /*
     * Specify which proxy mode to use ('IPTABLES' or 'IPVS')
     */
    private Mode mode;

    /*
     * Holds configuration customizations for IPVS. May only be specified if 'mode' is set to 'IPVS'.
     */
    private ContainerServiceNetworkProfileKubeProxyConfigIpvsConfig ipvsConfig;

    /**
     * Creates an instance of ContainerServiceNetworkProfileKubeProxyConfig class.
     */
    public ContainerServiceNetworkProfileKubeProxyConfig() {
    }

    /**
     * Get the enabled property: Whether to enable on kube-proxy on the cluster (if no 'kubeProxyConfig' exists,
     * kube-proxy is enabled in AKS by default without these customizations).
     * 
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Whether to enable on kube-proxy on the cluster (if no 'kubeProxyConfig' exists,
     * kube-proxy is enabled in AKS by default without these customizations).
     * 
     * @param enabled the enabled value to set.
     * @return the ContainerServiceNetworkProfileKubeProxyConfig object itself.
     */
    public ContainerServiceNetworkProfileKubeProxyConfig withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the mode property: Specify which proxy mode to use ('IPTABLES' or 'IPVS').
     * 
     * @return the mode value.
     */
    public Mode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: Specify which proxy mode to use ('IPTABLES' or 'IPVS').
     * 
     * @param mode the mode value to set.
     * @return the ContainerServiceNetworkProfileKubeProxyConfig object itself.
     */
    public ContainerServiceNetworkProfileKubeProxyConfig withMode(Mode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the ipvsConfig property: Holds configuration customizations for IPVS. May only be specified if 'mode' is set
     * to 'IPVS'.
     * 
     * @return the ipvsConfig value.
     */
    public ContainerServiceNetworkProfileKubeProxyConfigIpvsConfig ipvsConfig() {
        return this.ipvsConfig;
    }

    /**
     * Set the ipvsConfig property: Holds configuration customizations for IPVS. May only be specified if 'mode' is set
     * to 'IPVS'.
     * 
     * @param ipvsConfig the ipvsConfig value to set.
     * @return the ContainerServiceNetworkProfileKubeProxyConfig object itself.
     */
    public ContainerServiceNetworkProfileKubeProxyConfig
        withIpvsConfig(ContainerServiceNetworkProfileKubeProxyConfigIpvsConfig ipvsConfig) {
        this.ipvsConfig = ipvsConfig;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (ipvsConfig() != null) {
            ipvsConfig().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enabled", this.enabled);
        jsonWriter.writeStringField("mode", this.mode == null ? null : this.mode.toString());
        jsonWriter.writeJsonField("ipvsConfig", this.ipvsConfig);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ContainerServiceNetworkProfileKubeProxyConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ContainerServiceNetworkProfileKubeProxyConfig if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ContainerServiceNetworkProfileKubeProxyConfig.
     */
    public static ContainerServiceNetworkProfileKubeProxyConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ContainerServiceNetworkProfileKubeProxyConfig deserializedContainerServiceNetworkProfileKubeProxyConfig
                = new ContainerServiceNetworkProfileKubeProxyConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enabled".equals(fieldName)) {
                    deserializedContainerServiceNetworkProfileKubeProxyConfig.enabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("mode".equals(fieldName)) {
                    deserializedContainerServiceNetworkProfileKubeProxyConfig.mode
                        = Mode.fromString(reader.getString());
                } else if ("ipvsConfig".equals(fieldName)) {
                    deserializedContainerServiceNetworkProfileKubeProxyConfig.ipvsConfig
                        = ContainerServiceNetworkProfileKubeProxyConfigIpvsConfig.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedContainerServiceNetworkProfileKubeProxyConfig;
        });
    }
}
