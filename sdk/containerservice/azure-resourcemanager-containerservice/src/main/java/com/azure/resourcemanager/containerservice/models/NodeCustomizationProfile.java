// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Settings to determine the node customization used to provision nodes in a pool.
 */
@Fluent
public final class NodeCustomizationProfile implements JsonSerializable<NodeCustomizationProfile> {
    /*
     * The resource ID of the node customization resource to use. This can be a version. Omitting the version will use
     * the latest version of the node customization.
     */
    private String nodeCustomizationId;

    /**
     * Creates an instance of NodeCustomizationProfile class.
     */
    public NodeCustomizationProfile() {
    }

    /**
     * Get the nodeCustomizationId property: The resource ID of the node customization resource to use. This can be a
     * version. Omitting the version will use the latest version of the node customization.
     * 
     * @return the nodeCustomizationId value.
     */
    public String nodeCustomizationId() {
        return this.nodeCustomizationId;
    }

    /**
     * Set the nodeCustomizationId property: The resource ID of the node customization resource to use. This can be a
     * version. Omitting the version will use the latest version of the node customization.
     * 
     * @param nodeCustomizationId the nodeCustomizationId value to set.
     * @return the NodeCustomizationProfile object itself.
     */
    public NodeCustomizationProfile withNodeCustomizationId(String nodeCustomizationId) {
        this.nodeCustomizationId = nodeCustomizationId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("nodeCustomizationId", this.nodeCustomizationId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NodeCustomizationProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NodeCustomizationProfile if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the NodeCustomizationProfile.
     */
    public static NodeCustomizationProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NodeCustomizationProfile deserializedNodeCustomizationProfile = new NodeCustomizationProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("nodeCustomizationId".equals(fieldName)) {
                    deserializedNodeCustomizationProfile.nodeCustomizationId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNodeCustomizationProfile;
        });
    }
}
