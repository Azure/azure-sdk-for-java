// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Managed identity profile for the identity binding.
 */
@Fluent
public final class IdentityBindingManagedIdentityProfile
    implements JsonSerializable<IdentityBindingManagedIdentityProfile> {
    /*
     * The resource ID of the managed identity.
     */
    private String resourceId;

    /*
     * The object ID of the managed identity.
     */
    private String objectId;

    /*
     * The client ID of the managed identity.
     */
    private String clientId;

    /*
     * The tenant ID of the managed identity.
     */
    private String tenantId;

    /**
     * Creates an instance of IdentityBindingManagedIdentityProfile class.
     */
    public IdentityBindingManagedIdentityProfile() {
    }

    /**
     * Get the resourceId property: The resource ID of the managed identity.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: The resource ID of the managed identity.
     * 
     * @param resourceId the resourceId value to set.
     * @return the IdentityBindingManagedIdentityProfile object itself.
     */
    public IdentityBindingManagedIdentityProfile withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the objectId property: The object ID of the managed identity.
     * 
     * @return the objectId value.
     */
    public String objectId() {
        return this.objectId;
    }

    /**
     * Get the clientId property: The client ID of the managed identity.
     * 
     * @return the clientId value.
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * Get the tenantId property: The tenant ID of the managed identity.
     * 
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property resourceId in model IdentityBindingManagedIdentityProfile"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(IdentityBindingManagedIdentityProfile.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceId", this.resourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IdentityBindingManagedIdentityProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IdentityBindingManagedIdentityProfile if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the IdentityBindingManagedIdentityProfile.
     */
    public static IdentityBindingManagedIdentityProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IdentityBindingManagedIdentityProfile deserializedIdentityBindingManagedIdentityProfile
                = new IdentityBindingManagedIdentityProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceId".equals(fieldName)) {
                    deserializedIdentityBindingManagedIdentityProfile.resourceId = reader.getString();
                } else if ("objectId".equals(fieldName)) {
                    deserializedIdentityBindingManagedIdentityProfile.objectId = reader.getString();
                } else if ("clientId".equals(fieldName)) {
                    deserializedIdentityBindingManagedIdentityProfile.clientId = reader.getString();
                } else if ("tenantId".equals(fieldName)) {
                    deserializedIdentityBindingManagedIdentityProfile.tenantId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIdentityBindingManagedIdentityProfile;
        });
    }
}
