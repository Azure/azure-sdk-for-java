// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * components of given Kubernetes version.
 */
@Fluent
public final class ComponentsByRelease implements JsonSerializable<ComponentsByRelease> {
    /*
     * The Kubernetes version (major.minor).
     */
    private String kubernetesVersion;

    /*
     * components of current or upgraded Kubernetes version in the cluster.
     */
    private List<Component> components;

    /**
     * Creates an instance of ComponentsByRelease class.
     */
    public ComponentsByRelease() {
    }

    /**
     * Get the kubernetesVersion property: The Kubernetes version (major.minor).
     * 
     * @return the kubernetesVersion value.
     */
    public String kubernetesVersion() {
        return this.kubernetesVersion;
    }

    /**
     * Set the kubernetesVersion property: The Kubernetes version (major.minor).
     * 
     * @param kubernetesVersion the kubernetesVersion value to set.
     * @return the ComponentsByRelease object itself.
     */
    public ComponentsByRelease withKubernetesVersion(String kubernetesVersion) {
        this.kubernetesVersion = kubernetesVersion;
        return this;
    }

    /**
     * Get the components property: components of current or upgraded Kubernetes version in the cluster.
     * 
     * @return the components value.
     */
    public List<Component> components() {
        return this.components;
    }

    /**
     * Set the components property: components of current or upgraded Kubernetes version in the cluster.
     * 
     * @param components the components value to set.
     * @return the ComponentsByRelease object itself.
     */
    public ComponentsByRelease withComponents(List<Component> components) {
        this.components = components;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (components() != null) {
            components().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("kubernetesVersion", this.kubernetesVersion);
        jsonWriter.writeArrayField("components", this.components, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComponentsByRelease from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComponentsByRelease if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ComponentsByRelease.
     */
    public static ComponentsByRelease fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ComponentsByRelease deserializedComponentsByRelease = new ComponentsByRelease();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("kubernetesVersion".equals(fieldName)) {
                    deserializedComponentsByRelease.kubernetesVersion = reader.getString();
                } else if ("components".equals(fieldName)) {
                    List<Component> components = reader.readArray(reader1 -> Component.fromJson(reader1));
                    deserializedComponentsByRelease.components = components;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedComponentsByRelease;
        });
    }
}
