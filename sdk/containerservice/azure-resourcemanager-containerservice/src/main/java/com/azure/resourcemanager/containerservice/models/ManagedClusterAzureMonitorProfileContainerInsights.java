// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure Monitor Container Insights Profile for Kubernetes Events, Inventory and Container stdout &amp; stderr logs etc.
 * See aka.ms/AzureMonitorContainerInsights for an overview.
 */
@Fluent
public final class ManagedClusterAzureMonitorProfileContainerInsights
    implements JsonSerializable<ManagedClusterAzureMonitorProfileContainerInsights> {
    /*
     * Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.
     */
    private Boolean enabled;

    /*
     * Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights
     * Logs.
     */
    private String logAnalyticsWorkspaceResourceId;

    /*
     * The syslog host port. If not specified, the default port is 28330.
     */
    private Long syslogPort;

    /*
     * Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No
     * custom metrics will be emitted if this field is false but the container insights enabled field is false
     */
    private Boolean disableCustomMetrics;

    /*
     * Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No
     * prometheus metrics will be emitted if this field is false but the container insights enabled field is false
     */
    private Boolean disablePrometheusMetricsScraping;

    /**
     * Creates an instance of ManagedClusterAzureMonitorProfileContainerInsights class.
     */
    public ManagedClusterAzureMonitorProfileContainerInsights() {
    }

    /**
     * Get the enabled property: Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.
     * 
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.
     * 
     * @param enabled the enabled value to set.
     * @return the ManagedClusterAzureMonitorProfileContainerInsights object itself.
     */
    public ManagedClusterAzureMonitorProfileContainerInsights withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the logAnalyticsWorkspaceResourceId property: Fully Qualified ARM Resource Id of Azure Log Analytics
     * Workspace for storing Azure Monitor Container Insights Logs.
     * 
     * @return the logAnalyticsWorkspaceResourceId value.
     */
    public String logAnalyticsWorkspaceResourceId() {
        return this.logAnalyticsWorkspaceResourceId;
    }

    /**
     * Set the logAnalyticsWorkspaceResourceId property: Fully Qualified ARM Resource Id of Azure Log Analytics
     * Workspace for storing Azure Monitor Container Insights Logs.
     * 
     * @param logAnalyticsWorkspaceResourceId the logAnalyticsWorkspaceResourceId value to set.
     * @return the ManagedClusterAzureMonitorProfileContainerInsights object itself.
     */
    public ManagedClusterAzureMonitorProfileContainerInsights
        withLogAnalyticsWorkspaceResourceId(String logAnalyticsWorkspaceResourceId) {
        this.logAnalyticsWorkspaceResourceId = logAnalyticsWorkspaceResourceId;
        return this;
    }

    /**
     * Get the syslogPort property: The syslog host port. If not specified, the default port is 28330.
     * 
     * @return the syslogPort value.
     */
    public Long syslogPort() {
        return this.syslogPort;
    }

    /**
     * Set the syslogPort property: The syslog host port. If not specified, the default port is 28330.
     * 
     * @param syslogPort the syslogPort value to set.
     * @return the ManagedClusterAzureMonitorProfileContainerInsights object itself.
     */
    public ManagedClusterAzureMonitorProfileContainerInsights withSyslogPort(Long syslogPort) {
        this.syslogPort = syslogPort;
        return this;
    }

    /**
     * Get the disableCustomMetrics property: Indicates whether custom metrics collection has to be disabled or not. If
     * not specified the default is false. No custom metrics will be emitted if this field is false but the container
     * insights enabled field is false.
     * 
     * @return the disableCustomMetrics value.
     */
    public Boolean disableCustomMetrics() {
        return this.disableCustomMetrics;
    }

    /**
     * Set the disableCustomMetrics property: Indicates whether custom metrics collection has to be disabled or not. If
     * not specified the default is false. No custom metrics will be emitted if this field is false but the container
     * insights enabled field is false.
     * 
     * @param disableCustomMetrics the disableCustomMetrics value to set.
     * @return the ManagedClusterAzureMonitorProfileContainerInsights object itself.
     */
    public ManagedClusterAzureMonitorProfileContainerInsights withDisableCustomMetrics(Boolean disableCustomMetrics) {
        this.disableCustomMetrics = disableCustomMetrics;
        return this;
    }

    /**
     * Get the disablePrometheusMetricsScraping property: Indicates whether prometheus metrics scraping is disabled or
     * not. If not specified the default is false. No prometheus metrics will be emitted if this field is false but the
     * container insights enabled field is false.
     * 
     * @return the disablePrometheusMetricsScraping value.
     */
    public Boolean disablePrometheusMetricsScraping() {
        return this.disablePrometheusMetricsScraping;
    }

    /**
     * Set the disablePrometheusMetricsScraping property: Indicates whether prometheus metrics scraping is disabled or
     * not. If not specified the default is false. No prometheus metrics will be emitted if this field is false but the
     * container insights enabled field is false.
     * 
     * @param disablePrometheusMetricsScraping the disablePrometheusMetricsScraping value to set.
     * @return the ManagedClusterAzureMonitorProfileContainerInsights object itself.
     */
    public ManagedClusterAzureMonitorProfileContainerInsights
        withDisablePrometheusMetricsScraping(Boolean disablePrometheusMetricsScraping) {
        this.disablePrometheusMetricsScraping = disablePrometheusMetricsScraping;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enabled", this.enabled);
        jsonWriter.writeStringField("logAnalyticsWorkspaceResourceId", this.logAnalyticsWorkspaceResourceId);
        jsonWriter.writeNumberField("syslogPort", this.syslogPort);
        jsonWriter.writeBooleanField("disableCustomMetrics", this.disableCustomMetrics);
        jsonWriter.writeBooleanField("disablePrometheusMetricsScraping", this.disablePrometheusMetricsScraping);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedClusterAzureMonitorProfileContainerInsights from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedClusterAzureMonitorProfileContainerInsights if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManagedClusterAzureMonitorProfileContainerInsights.
     */
    public static ManagedClusterAzureMonitorProfileContainerInsights fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedClusterAzureMonitorProfileContainerInsights deserializedManagedClusterAzureMonitorProfileContainerInsights
                = new ManagedClusterAzureMonitorProfileContainerInsights();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enabled".equals(fieldName)) {
                    deserializedManagedClusterAzureMonitorProfileContainerInsights.enabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("logAnalyticsWorkspaceResourceId".equals(fieldName)) {
                    deserializedManagedClusterAzureMonitorProfileContainerInsights.logAnalyticsWorkspaceResourceId
                        = reader.getString();
                } else if ("syslogPort".equals(fieldName)) {
                    deserializedManagedClusterAzureMonitorProfileContainerInsights.syslogPort
                        = reader.getNullable(JsonReader::getLong);
                } else if ("disableCustomMetrics".equals(fieldName)) {
                    deserializedManagedClusterAzureMonitorProfileContainerInsights.disableCustomMetrics
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("disablePrometheusMetricsScraping".equals(fieldName)) {
                    deserializedManagedClusterAzureMonitorProfileContainerInsights.disablePrometheusMetricsScraping
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedClusterAzureMonitorProfileContainerInsights;
        });
    }
}
