// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The scheduler profile for a single scheduler instance.
 */
@Fluent
public final class SchedulerInstanceProfile implements JsonSerializable<SchedulerInstanceProfile> {
    /*
     * The config customization mode for this scheduler instance.
     */
    private SchedulerConfigMode schedulerConfigMode;

    /**
     * Creates an instance of SchedulerInstanceProfile class.
     */
    public SchedulerInstanceProfile() {
    }

    /**
     * Get the schedulerConfigMode property: The config customization mode for this scheduler instance.
     * 
     * @return the schedulerConfigMode value.
     */
    public SchedulerConfigMode schedulerConfigMode() {
        return this.schedulerConfigMode;
    }

    /**
     * Set the schedulerConfigMode property: The config customization mode for this scheduler instance.
     * 
     * @param schedulerConfigMode the schedulerConfigMode value to set.
     * @return the SchedulerInstanceProfile object itself.
     */
    public SchedulerInstanceProfile withSchedulerConfigMode(SchedulerConfigMode schedulerConfigMode) {
        this.schedulerConfigMode = schedulerConfigMode;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("schedulerConfigMode",
            this.schedulerConfigMode == null ? null : this.schedulerConfigMode.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SchedulerInstanceProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SchedulerInstanceProfile if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SchedulerInstanceProfile.
     */
    public static SchedulerInstanceProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SchedulerInstanceProfile deserializedSchedulerInstanceProfile = new SchedulerInstanceProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("schedulerConfigMode".equals(fieldName)) {
                    deserializedSchedulerInstanceProfile.schedulerConfigMode
                        = SchedulerConfigMode.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSchedulerInstanceProfile;
        });
    }
}
