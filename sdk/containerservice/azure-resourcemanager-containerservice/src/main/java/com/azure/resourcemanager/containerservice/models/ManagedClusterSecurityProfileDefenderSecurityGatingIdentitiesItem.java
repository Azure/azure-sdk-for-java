// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem model.
 */
@Fluent
public final class ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem
    implements JsonSerializable<ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem> {
    /*
     * The container registry for which the identity will be used; the identity specified here should have a federated
     * identity credential attached to it.
     */
    private String azureContainerRegistry;

    /*
     * The identity object used to access the registry
     */
    private UserAssignedIdentity identity;

    /**
     * Creates an instance of ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem class.
     */
    public ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem() {
    }

    /**
     * Get the azureContainerRegistry property: The container registry for which the identity will be used; the identity
     * specified here should have a federated identity credential attached to it.
     * 
     * @return the azureContainerRegistry value.
     */
    public String azureContainerRegistry() {
        return this.azureContainerRegistry;
    }

    /**
     * Set the azureContainerRegistry property: The container registry for which the identity will be used; the identity
     * specified here should have a federated identity credential attached to it.
     * 
     * @param azureContainerRegistry the azureContainerRegistry value to set.
     * @return the ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem object itself.
     */
    public ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem
        withAzureContainerRegistry(String azureContainerRegistry) {
        this.azureContainerRegistry = azureContainerRegistry;
        return this;
    }

    /**
     * Get the identity property: The identity object used to access the registry.
     * 
     * @return the identity value.
     */
    public UserAssignedIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: The identity object used to access the registry.
     * 
     * @param identity the identity value to set.
     * @return the ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem object itself.
     */
    public ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem
        withIdentity(UserAssignedIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("azureContainerRegistry", this.azureContainerRegistry);
        jsonWriter.writeJsonField("identity", this.identity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem.
     */
    public static ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem deserializedManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem
                = new ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureContainerRegistry".equals(fieldName)) {
                    deserializedManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem.azureContainerRegistry
                        = reader.getString();
                } else if ("identity".equals(fieldName)) {
                    deserializedManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem.identity
                        = UserAssignedIdentity.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem;
        });
    }
}
