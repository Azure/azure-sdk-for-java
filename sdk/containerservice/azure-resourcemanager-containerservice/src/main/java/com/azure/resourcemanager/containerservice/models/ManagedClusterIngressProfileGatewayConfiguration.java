// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ManagedClusterIngressProfileGatewayConfiguration model.
 */
@Fluent
public final class ManagedClusterIngressProfileGatewayConfiguration
    implements JsonSerializable<ManagedClusterIngressProfileGatewayConfiguration> {
    /*
     * Configuration for the managed Gateway API installation. If not specified, the default is 'Disabled'. See
     * https://aka.ms/k8s-gateway-api for more details.
     */
    private ManagedGatewayType installation;

    /**
     * Creates an instance of ManagedClusterIngressProfileGatewayConfiguration class.
     */
    public ManagedClusterIngressProfileGatewayConfiguration() {
    }

    /**
     * Get the installation property: Configuration for the managed Gateway API installation. If not specified, the
     * default is 'Disabled'. See https://aka.ms/k8s-gateway-api for more details.
     * 
     * @return the installation value.
     */
    public ManagedGatewayType installation() {
        return this.installation;
    }

    /**
     * Set the installation property: Configuration for the managed Gateway API installation. If not specified, the
     * default is 'Disabled'. See https://aka.ms/k8s-gateway-api for more details.
     * 
     * @param installation the installation value to set.
     * @return the ManagedClusterIngressProfileGatewayConfiguration object itself.
     */
    public ManagedClusterIngressProfileGatewayConfiguration withInstallation(ManagedGatewayType installation) {
        this.installation = installation;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("installation", this.installation == null ? null : this.installation.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedClusterIngressProfileGatewayConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedClusterIngressProfileGatewayConfiguration if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManagedClusterIngressProfileGatewayConfiguration.
     */
    public static ManagedClusterIngressProfileGatewayConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedClusterIngressProfileGatewayConfiguration deserializedManagedClusterIngressProfileGatewayConfiguration
                = new ManagedClusterIngressProfileGatewayConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("installation".equals(fieldName)) {
                    deserializedManagedClusterIngressProfileGatewayConfiguration.installation
                        = ManagedGatewayType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedClusterIngressProfileGatewayConfiguration;
        });
    }
}
