// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.generated.implementation;

import com.azure.resourcemanager.containerservice.generated.ContainerServiceManager;
import com.azure.resourcemanager.containerservice.generated.fluent.models.AgentPoolUpgradeProfileInner;
import com.azure.resourcemanager.containerservice.generated.models.AgentPoolUpgradeProfile;
import com.azure.resourcemanager.containerservice.generated.models.AgentPoolUpgradeProfilePropertiesUpgradesItem;
import com.azure.resourcemanager.containerservice.generated.models.OSType;
import java.util.Collections;
import java.util.List;

public final class AgentPoolUpgradeProfileImpl implements AgentPoolUpgradeProfile {
    private AgentPoolUpgradeProfileInner innerObject;

    private final ContainerServiceManager serviceManager;

    AgentPoolUpgradeProfileImpl(AgentPoolUpgradeProfileInner innerObject, ContainerServiceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String kubernetesVersion() {
        return this.innerModel().kubernetesVersion();
    }

    public OSType osType() {
        return this.innerModel().osType();
    }

    public List<AgentPoolUpgradeProfilePropertiesUpgradesItem> upgrades() {
        List<AgentPoolUpgradeProfilePropertiesUpgradesItem> inner = this.innerModel().upgrades();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String latestNodeImageVersion() {
        return this.innerModel().latestNodeImageVersion();
    }

    public AgentPoolUpgradeProfileInner innerModel() {
        return this.innerObject;
    }

    private ContainerServiceManager manager() {
        return this.serviceManager;
    }
}
