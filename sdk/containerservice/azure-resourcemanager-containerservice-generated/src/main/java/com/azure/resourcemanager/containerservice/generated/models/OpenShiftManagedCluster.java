// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerservice.generated.fluent.models.OpenShiftManagedClusterInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of OpenShiftManagedCluster. */
public interface OpenShiftManagedCluster {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the plan property: Define the resource plan as required by ARM for billing purposes.
     *
     * @return the plan value.
     */
    PurchasePlan plan();

    /**
     * Gets the provisioningState property: The current deployment or provisioning state, which only appears in the
     * response.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the openShiftVersion property: Version of OpenShift specified when creating the cluster.
     *
     * @return the openShiftVersion value.
     */
    String openShiftVersion();

    /**
     * Gets the clusterVersion property: Version of OpenShift specified when creating the cluster.
     *
     * @return the clusterVersion value.
     */
    String clusterVersion();

    /**
     * Gets the publicHostname property: Service generated FQDN for OpenShift API server.
     *
     * @return the publicHostname value.
     */
    String publicHostname();

    /**
     * Gets the fqdn property: Service generated FQDN for OpenShift API server loadbalancer internal hostname.
     *
     * @return the fqdn value.
     */
    String fqdn();

    /**
     * Gets the networkProfile property: Configuration for OpenShift networking.
     *
     * @return the networkProfile value.
     */
    NetworkProfile networkProfile();

    /**
     * Gets the routerProfiles property: Configuration for OpenShift router(s).
     *
     * @return the routerProfiles value.
     */
    List<OpenShiftRouterProfile> routerProfiles();

    /**
     * Gets the masterPoolProfile property: Configuration for OpenShift master VMs.
     *
     * @return the masterPoolProfile value.
     */
    OpenShiftManagedClusterMasterPoolProfile masterPoolProfile();

    /**
     * Gets the agentPoolProfiles property: Configuration of OpenShift cluster VMs.
     *
     * @return the agentPoolProfiles value.
     */
    List<OpenShiftManagedClusterAgentPoolProfile> agentPoolProfiles();

    /**
     * Gets the authProfile property: Configures OpenShift authentication.
     *
     * @return the authProfile value.
     */
    OpenShiftManagedClusterAuthProfile authProfile();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.containerservice.generated.fluent.models.OpenShiftManagedClusterInner
     * object.
     *
     * @return the inner object.
     */
    OpenShiftManagedClusterInner innerModel();

    /** The entirety of the OpenShiftManagedCluster definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The OpenShiftManagedCluster definition stages. */
    interface DefinitionStages {
        /** The first stage of the OpenShiftManagedCluster definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the OpenShiftManagedCluster definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the OpenShiftManagedCluster definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the OpenShiftManagedCluster definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithPlan,
                DefinitionStages.WithOpenShiftVersion,
                DefinitionStages.WithNetworkProfile,
                DefinitionStages.WithRouterProfiles,
                DefinitionStages.WithMasterPoolProfile,
                DefinitionStages.WithAgentPoolProfiles,
                DefinitionStages.WithAuthProfile {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            OpenShiftManagedCluster create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            OpenShiftManagedCluster create(Context context);
        }
        /** The stage of the OpenShiftManagedCluster definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the OpenShiftManagedCluster definition allowing to specify plan. */
        interface WithPlan {
            /**
             * Specifies the plan property: Define the resource plan as required by ARM for billing purposes.
             *
             * @param plan Define the resource plan as required by ARM for billing purposes.
             * @return the next definition stage.
             */
            WithCreate withPlan(PurchasePlan plan);
        }
        /** The stage of the OpenShiftManagedCluster definition allowing to specify openShiftVersion. */
        interface WithOpenShiftVersion {
            /**
             * Specifies the openShiftVersion property: Version of OpenShift specified when creating the cluster..
             *
             * @param openShiftVersion Version of OpenShift specified when creating the cluster.
             * @return the next definition stage.
             */
            WithCreate withOpenShiftVersion(String openShiftVersion);
        }
        /** The stage of the OpenShiftManagedCluster definition allowing to specify networkProfile. */
        interface WithNetworkProfile {
            /**
             * Specifies the networkProfile property: Configuration for OpenShift networking..
             *
             * @param networkProfile Configuration for OpenShift networking.
             * @return the next definition stage.
             */
            WithCreate withNetworkProfile(NetworkProfile networkProfile);
        }
        /** The stage of the OpenShiftManagedCluster definition allowing to specify routerProfiles. */
        interface WithRouterProfiles {
            /**
             * Specifies the routerProfiles property: Configuration for OpenShift router(s)..
             *
             * @param routerProfiles Configuration for OpenShift router(s).
             * @return the next definition stage.
             */
            WithCreate withRouterProfiles(List<OpenShiftRouterProfile> routerProfiles);
        }
        /** The stage of the OpenShiftManagedCluster definition allowing to specify masterPoolProfile. */
        interface WithMasterPoolProfile {
            /**
             * Specifies the masterPoolProfile property: Configuration for OpenShift master VMs..
             *
             * @param masterPoolProfile Configuration for OpenShift master VMs.
             * @return the next definition stage.
             */
            WithCreate withMasterPoolProfile(OpenShiftManagedClusterMasterPoolProfile masterPoolProfile);
        }
        /** The stage of the OpenShiftManagedCluster definition allowing to specify agentPoolProfiles. */
        interface WithAgentPoolProfiles {
            /**
             * Specifies the agentPoolProfiles property: Configuration of OpenShift cluster VMs..
             *
             * @param agentPoolProfiles Configuration of OpenShift cluster VMs.
             * @return the next definition stage.
             */
            WithCreate withAgentPoolProfiles(List<OpenShiftManagedClusterAgentPoolProfile> agentPoolProfiles);
        }
        /** The stage of the OpenShiftManagedCluster definition allowing to specify authProfile. */
        interface WithAuthProfile {
            /**
             * Specifies the authProfile property: Configures OpenShift authentication..
             *
             * @param authProfile Configures OpenShift authentication.
             * @return the next definition stage.
             */
            WithCreate withAuthProfile(OpenShiftManagedClusterAuthProfile authProfile);
        }
    }
    /**
     * Begins update for the OpenShiftManagedCluster resource.
     *
     * @return the stage of resource update.
     */
    OpenShiftManagedCluster.Update update();

    /** The template for OpenShiftManagedCluster update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        OpenShiftManagedCluster apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        OpenShiftManagedCluster apply(Context context);
    }
    /** The OpenShiftManagedCluster update stages. */
    interface UpdateStages {
        /** The stage of the OpenShiftManagedCluster update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    OpenShiftManagedCluster refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    OpenShiftManagedCluster refresh(Context context);
}
