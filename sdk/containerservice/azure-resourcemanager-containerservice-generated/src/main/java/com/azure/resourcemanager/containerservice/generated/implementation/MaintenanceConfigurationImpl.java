// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.containerservice.generated.ContainerServiceManager;
import com.azure.resourcemanager.containerservice.generated.fluent.models.MaintenanceConfigurationInner;
import com.azure.resourcemanager.containerservice.generated.models.MaintenanceConfiguration;
import com.azure.resourcemanager.containerservice.generated.models.SystemData;
import com.azure.resourcemanager.containerservice.generated.models.TimeInWeek;
import com.azure.resourcemanager.containerservice.generated.models.TimeSpan;
import java.util.Collections;
import java.util.List;

public final class MaintenanceConfigurationImpl
    implements MaintenanceConfiguration, MaintenanceConfiguration.Definition, MaintenanceConfiguration.Update {
    private MaintenanceConfigurationInner innerObject;

    private final ContainerServiceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public List<TimeInWeek> timeInWeek() {
        List<TimeInWeek> inner = this.innerModel().timeInWeek();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<TimeSpan> notAllowedTime() {
        List<TimeSpan> inner = this.innerModel().notAllowedTime();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public MaintenanceConfigurationInner innerModel() {
        return this.innerObject;
    }

    private ContainerServiceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String resourceName;

    private String configName;

    public MaintenanceConfigurationImpl withExistingManagedCluster(String resourceGroupName, String resourceName) {
        this.resourceGroupName = resourceGroupName;
        this.resourceName = resourceName;
        return this;
    }

    public MaintenanceConfiguration create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMaintenanceConfigurations()
                .createOrUpdateWithResponse(
                    resourceGroupName, resourceName, configName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public MaintenanceConfiguration create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMaintenanceConfigurations()
                .createOrUpdateWithResponse(resourceGroupName, resourceName, configName, this.innerModel(), context)
                .getValue();
        return this;
    }

    MaintenanceConfigurationImpl(String name, ContainerServiceManager serviceManager) {
        this.innerObject = new MaintenanceConfigurationInner();
        this.serviceManager = serviceManager;
        this.configName = name;
    }

    public MaintenanceConfigurationImpl update() {
        return this;
    }

    public MaintenanceConfiguration apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMaintenanceConfigurations()
                .createOrUpdateWithResponse(
                    resourceGroupName, resourceName, configName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public MaintenanceConfiguration apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMaintenanceConfigurations()
                .createOrUpdateWithResponse(resourceGroupName, resourceName, configName, this.innerModel(), context)
                .getValue();
        return this;
    }

    MaintenanceConfigurationImpl(MaintenanceConfigurationInner innerObject, ContainerServiceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.resourceName = Utils.getValueFromIdByName(innerObject.id(), "managedClusters");
        this.configName = Utils.getValueFromIdByName(innerObject.id(), "maintenanceConfigurations");
    }

    public MaintenanceConfiguration refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMaintenanceConfigurations()
                .getWithResponse(resourceGroupName, resourceName, configName, Context.NONE)
                .getValue();
        return this;
    }

    public MaintenanceConfiguration refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMaintenanceConfigurations()
                .getWithResponse(resourceGroupName, resourceName, configName, context)
                .getValue();
        return this;
    }

    public MaintenanceConfigurationImpl withTimeInWeek(List<TimeInWeek> timeInWeek) {
        this.innerModel().withTimeInWeek(timeInWeek);
        return this;
    }

    public MaintenanceConfigurationImpl withNotAllowedTime(List<TimeSpan> notAllowedTime) {
        this.innerModel().withNotAllowedTime(notAllowedTime);
        return this;
    }
}
