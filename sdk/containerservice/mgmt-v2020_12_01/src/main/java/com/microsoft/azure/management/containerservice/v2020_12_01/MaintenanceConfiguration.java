/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerservice.v2020_12_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.containerservice.v2020_12_01.implementation.MaintenanceConfigurationInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.containerservice.v2020_12_01.implementation.ContainerServiceManager;
import java.util.List;

/**
 * Type representing MaintenanceConfiguration.
 */
public interface MaintenanceConfiguration extends HasInner<MaintenanceConfigurationInner>, Indexable, Refreshable<MaintenanceConfiguration>, Updatable<MaintenanceConfiguration.Update>, HasManager<ContainerServiceManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the notAllowedTime value.
     */
    List<TimeSpan> notAllowedTime();

    /**
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * @return the timeInWeek value.
     */
    List<TimeInWeek> timeInWeek();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the MaintenanceConfiguration definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithManagedCluster, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of MaintenanceConfiguration definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a MaintenanceConfiguration definition.
         */
        interface Blank extends WithManagedCluster {
        }

        /**
         * The stage of the maintenanceconfiguration definition allowing to specify ManagedCluster.
         */
        interface WithManagedCluster {
           /**
            * Specifies resourceGroupName, resourceName.
            * @param resourceGroupName The name of the resource group
            * @param resourceName The name of the managed cluster resource
            * @return the next definition stage
            */
            WithCreate withExistingManagedCluster(String resourceGroupName, String resourceName);
        }

        /**
         * The stage of the maintenanceconfiguration definition allowing to specify NotAllowedTime.
         */
        interface WithNotAllowedTime {
            /**
             * Specifies notAllowedTime.
             * @param notAllowedTime Time slots on which upgrade is not allowed
             * @return the next definition stage
             */
            WithCreate withNotAllowedTime(List<TimeSpan> notAllowedTime);
        }

        /**
         * The stage of the maintenanceconfiguration definition allowing to specify TimeInWeek.
         */
        interface WithTimeInWeek {
            /**
             * Specifies timeInWeek.
             * @param timeInWeek Weekday time slots allowed to upgrade
             * @return the next definition stage
             */
            WithCreate withTimeInWeek(List<TimeInWeek> timeInWeek);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<MaintenanceConfiguration>, DefinitionStages.WithNotAllowedTime, DefinitionStages.WithTimeInWeek {
        }
    }
    /**
     * The template for a MaintenanceConfiguration update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<MaintenanceConfiguration>, UpdateStages.WithNotAllowedTime, UpdateStages.WithTimeInWeek {
    }

    /**
     * Grouping of MaintenanceConfiguration update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the maintenanceconfiguration update allowing to specify NotAllowedTime.
         */
        interface WithNotAllowedTime {
            /**
             * Specifies notAllowedTime.
             * @param notAllowedTime Time slots on which upgrade is not allowed
             * @return the next update stage
             */
            Update withNotAllowedTime(List<TimeSpan> notAllowedTime);
        }

        /**
         * The stage of the maintenanceconfiguration update allowing to specify TimeInWeek.
         */
        interface WithTimeInWeek {
            /**
             * Specifies timeInWeek.
             * @param timeInWeek Weekday time slots allowed to upgrade
             * @return the next update stage
             */
            Update withTimeInWeek(List<TimeInWeek> timeInWeek);
        }

    }
}
