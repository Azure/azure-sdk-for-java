// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.terraform.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.terraform.models.ExportResult;
import com.azure.resourcemanager.terraform.models.ResourceProvisioningState;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * The status of the LRO (Long Running Operation) and the export result.
 */
@Immutable
public final class TerraformOperationStatusInner implements JsonSerializable<TerraformOperationStatusInner> {
    /*
     * RP-specific properties for the operationStatus resource, only appears when operation ended with Succeeded status
     */
    private ExportResult properties;

    /*
     * The operation status
     */
    private ResourceProvisioningState status;

    /*
     * The unique identifier for the operationStatus resource
     */
    private String id;

    /*
     * The name of the operationStatus resource
     */
    private String name;

    /*
     * Operation start time
     */
    private OffsetDateTime startTime;

    /*
     * Operation complete time
     */
    private OffsetDateTime endTime;

    /*
     * The progress made toward completing the operation
     */
    private Double percentComplete;

    /*
     * Errors that occurred if the operation ended with Canceled or Failed status
     */
    private ManagementError error;

    /**
     * Creates an instance of TerraformOperationStatusInner class.
     */
    private TerraformOperationStatusInner() {
    }

    /**
     * Get the properties property: RP-specific properties for the operationStatus resource, only appears when operation
     * ended with Succeeded status.
     * 
     * @return the properties value.
     */
    public ExportResult properties() {
        return this.properties;
    }

    /**
     * Get the status property: The operation status.
     * 
     * @return the status value.
     */
    public ResourceProvisioningState status() {
        return this.status;
    }

    /**
     * Get the id property: The unique identifier for the operationStatus resource.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: The name of the operationStatus resource.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the startTime property: Operation start time.
     * 
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Get the endTime property: Operation complete time.
     * 
     * @return the endTime value.
     */
    public OffsetDateTime endTime() {
        return this.endTime;
    }

    /**
     * Get the percentComplete property: The progress made toward completing the operation.
     * 
     * @return the percentComplete value.
     */
    public Double percentComplete() {
        return this.percentComplete;
    }

    /**
     * Get the error property: Errors that occurred if the operation ended with Canceled or Failed status.
     * 
     * @return the error value.
     */
    public ManagementError error() {
        return this.error;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TerraformOperationStatusInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TerraformOperationStatusInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the TerraformOperationStatusInner.
     */
    public static TerraformOperationStatusInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TerraformOperationStatusInner deserializedTerraformOperationStatusInner
                = new TerraformOperationStatusInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedTerraformOperationStatusInner.status
                        = ResourceProvisioningState.fromString(reader.getString());
                } else if ("id".equals(fieldName)) {
                    deserializedTerraformOperationStatusInner.id = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedTerraformOperationStatusInner.properties = ExportResult.fromJson(reader);
                } else if ("name".equals(fieldName)) {
                    deserializedTerraformOperationStatusInner.name = reader.getString();
                } else if ("startTime".equals(fieldName)) {
                    deserializedTerraformOperationStatusInner.startTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("endTime".equals(fieldName)) {
                    deserializedTerraformOperationStatusInner.endTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("percentComplete".equals(fieldName)) {
                    deserializedTerraformOperationStatusInner.percentComplete
                        = reader.getNullable(JsonReader::getDouble);
                } else if ("error".equals(fieldName)) {
                    deserializedTerraformOperationStatusInner.error = ManagementError.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTerraformOperationStatusInner;
        });
    }
}
