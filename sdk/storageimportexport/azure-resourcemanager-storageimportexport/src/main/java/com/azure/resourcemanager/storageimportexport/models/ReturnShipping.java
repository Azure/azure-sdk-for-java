// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storageimportexport.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Specifies the return carrier and customer's account with the carrier.
 */
@Fluent
public final class ReturnShipping implements JsonSerializable<ReturnShipping> {
    /*
     * The carrier's name.
     */
    private String carrierName;

    /*
     * The customer's account number with the carrier.
     */
    private String carrierAccountNumber;

    /**
     * Creates an instance of ReturnShipping class.
     */
    public ReturnShipping() {
    }

    /**
     * Get the carrierName property: The carrier's name.
     * 
     * @return the carrierName value.
     */
    public String carrierName() {
        return this.carrierName;
    }

    /**
     * Set the carrierName property: The carrier's name.
     * 
     * @param carrierName the carrierName value to set.
     * @return the ReturnShipping object itself.
     */
    public ReturnShipping withCarrierName(String carrierName) {
        this.carrierName = carrierName;
        return this;
    }

    /**
     * Get the carrierAccountNumber property: The customer's account number with the carrier.
     * 
     * @return the carrierAccountNumber value.
     */
    public String carrierAccountNumber() {
        return this.carrierAccountNumber;
    }

    /**
     * Set the carrierAccountNumber property: The customer's account number with the carrier.
     * 
     * @param carrierAccountNumber the carrierAccountNumber value to set.
     * @return the ReturnShipping object itself.
     */
    public ReturnShipping withCarrierAccountNumber(String carrierAccountNumber) {
        this.carrierAccountNumber = carrierAccountNumber;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (carrierName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property carrierName in model ReturnShipping"));
        }
        if (carrierAccountNumber() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property carrierAccountNumber in model ReturnShipping"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ReturnShipping.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("carrierName", this.carrierName);
        jsonWriter.writeStringField("carrierAccountNumber", this.carrierAccountNumber);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReturnShipping from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReturnShipping if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ReturnShipping.
     */
    public static ReturnShipping fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReturnShipping deserializedReturnShipping = new ReturnShipping();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("carrierName".equals(fieldName)) {
                    deserializedReturnShipping.carrierName = reader.getString();
                } else if ("carrierAccountNumber".equals(fieldName)) {
                    deserializedReturnShipping.carrierAccountNumber = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedReturnShipping;
        });
    }
}
