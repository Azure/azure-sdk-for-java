/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.storageimportexport.v2016_11_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.storageimportexport.v2016_11_01.BitLockerKeys;
import rx.functions.Func1;
import rx.Observable;
import java.util.List;
import com.microsoft.azure.management.storageimportexport.v2016_11_01.DriveBitLockerKey;

class BitLockerKeysImpl extends WrapperImpl<BitLockerKeysInner> implements BitLockerKeys {
    private final StorageImportExportManager manager;

    BitLockerKeysImpl(StorageImportExportManager manager) {
        super(manager.inner().bitLockerKeys());
        this.manager = manager;
    }

    public StorageImportExportManager manager() {
        return this.manager;
    }

    @Override
    public Observable<DriveBitLockerKey> listAsync(String jobName, String resourceGroupName) {
        BitLockerKeysInner client = this.inner();
        return client.listAsync(jobName, resourceGroupName)
        .flatMap(new Func1<List<DriveBitLockerKeyInner>, Observable<DriveBitLockerKeyInner>>() {
            @Override
            public Observable<DriveBitLockerKeyInner> call(List<DriveBitLockerKeyInner> innerList) {
                return Observable.from(innerList);
            }
        })
        .map(new Func1<DriveBitLockerKeyInner, DriveBitLockerKey>() {
            @Override
            public DriveBitLockerKey call(DriveBitLockerKeyInner inner) {
                return new DriveBitLockerKeyImpl(inner, manager());
            }
        });
    }

}
