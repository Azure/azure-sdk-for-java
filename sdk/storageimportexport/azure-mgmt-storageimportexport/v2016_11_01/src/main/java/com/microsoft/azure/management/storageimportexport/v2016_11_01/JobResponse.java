/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.storageimportexport.v2016_11_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.storageimportexport.v2016_11_01.implementation.StorageImportExportManager;
import java.util.List;
import com.microsoft.azure.management.storageimportexport.v2016_11_01.implementation.JobResponseInner;

/**
 * Type representing JobResponse.
 */
public interface JobResponse extends HasInner<JobResponseInner>, Resource, GroupableResourceCore<StorageImportExportManager, JobResponseInner>, HasResourceGroup, Refreshable<JobResponse>, Updatable<JobResponse.Update>, HasManager<StorageImportExportManager> {
    /**
     * @return the properties value.
     */
    JobDetails properties();

    /**
     * The entirety of the JobResponse definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithClientTenantId, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of JobResponse definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a JobResponse definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the JobResponse definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithClientTenantId> {
        }

        /**
         * The stage of the jobresponse definition allowing to specify ClientTenantId.
         */
        interface WithClientTenantId {
           /**
            * Specifies clientTenantId.
            * @param clientTenantId The tenant ID of the client making the request
            * @return the next definition stage
*/
            WithCreate withClientTenantId(String clientTenantId);
        }

        /**
         * The stage of the jobresponse definition allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             * @param properties Specifies the job properties
             * @return the next definition stage
             */
            WithCreate withProperties(JobDetails properties);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<JobResponse>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithProperties {
        }
    }
    /**
     * The template for a JobResponse update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<JobResponse>, Resource.UpdateWithTags<Update>, UpdateStages.WithBackupDriveManifest, UpdateStages.WithCancelRequested, UpdateStages.WithDeliveryPackage, UpdateStages.WithDriveList, UpdateStages.WithLogLevel, UpdateStages.WithReturnAddress, UpdateStages.WithReturnShipping, UpdateStages.WithState {
    }

    /**
     * Grouping of JobResponse update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the jobresponse update allowing to specify BackupDriveManifest.
         */
        interface WithBackupDriveManifest {
            /**
             * Specifies backupDriveManifest.
             * @param backupDriveManifest Indicates whether the manifest files on the drives should be copied to block blobs
             * @return the next update stage
             */
            Update withBackupDriveManifest(Boolean backupDriveManifest);
        }

        /**
         * The stage of the jobresponse update allowing to specify CancelRequested.
         */
        interface WithCancelRequested {
            /**
             * Specifies cancelRequested.
             * @param cancelRequested If specified, the value must be true. The service will attempt to cancel the job
             * @return the next update stage
             */
            Update withCancelRequested(Boolean cancelRequested);
        }

        /**
         * The stage of the jobresponse update allowing to specify DeliveryPackage.
         */
        interface WithDeliveryPackage {
            /**
             * Specifies deliveryPackage.
             * @param deliveryPackage Contains information about the package being shipped by the customer to the Microsoft data center
             * @return the next update stage
             */
            Update withDeliveryPackage(PackageInfomation deliveryPackage);
        }

        /**
         * The stage of the jobresponse update allowing to specify DriveList.
         */
        interface WithDriveList {
            /**
             * Specifies driveList.
             * @param driveList List of drives that comprise the job
             * @return the next update stage
             */
            Update withDriveList(List<DriveStatus> driveList);
        }

        /**
         * The stage of the jobresponse update allowing to specify LogLevel.
         */
        interface WithLogLevel {
            /**
             * Specifies logLevel.
             * @param logLevel Indicates whether error logging or verbose logging is enabled
             * @return the next update stage
             */
            Update withLogLevel(String logLevel);
        }

        /**
         * The stage of the jobresponse update allowing to specify ReturnAddress.
         */
        interface WithReturnAddress {
            /**
             * Specifies returnAddress.
             * @param returnAddress Specifies the return address information for the job
             * @return the next update stage
             */
            Update withReturnAddress(ReturnAddress returnAddress);
        }

        /**
         * The stage of the jobresponse update allowing to specify ReturnShipping.
         */
        interface WithReturnShipping {
            /**
             * Specifies returnShipping.
             * @param returnShipping Specifies the return carrier and customer's account with the carrier
             * @return the next update stage
             */
            Update withReturnShipping(ReturnShipping returnShipping);
        }

        /**
         * The stage of the jobresponse update allowing to specify State.
         */
        interface WithState {
            /**
             * Specifies state.
             * @param state If specified, the value must be Shipping, which tells the Import/Export service that the package for the job has been shipped. The ReturnAddress and DeliveryPackage properties must have been set either in this request or in a previous request, otherwise the request will fail
             * @return the next update stage
             */
            Update withState(String state);
        }

    }
}
