/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.maintenance.v2018_06_01_preview;

import rx.Observable;

/**
 * Type representing ApplyUpdates.
 */
public interface ApplyUpdates {
    /**
     * Track Updates to resource with parent.
     * Track maintenance updates to resource with parent.
     *
     * @param resourceGroupName Resource group name
     * @param resourceParentType Resource parent type
     * @param resourceParentName Resource parent identifier
     * @param providerName Resource provider name
     * @param resourceType Resource type
     * @param resourceName Resource identifier
     * @param applyUpdateName applyUpdate Id
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ApplyUpdate> getParentAsync(String resourceGroupName, String resourceParentType, String resourceParentName, String providerName, String resourceType, String resourceName, String applyUpdateName);

    /**
     * Track Updates to resource.
     * Track maintenance updates to resource.
     *
     * @param resourceGroupName Resource group name
     * @param providerName Resource provider name
     * @param resourceType Resource type
     * @param resourceName Resource identifier
     * @param applyUpdateName applyUpdate Id
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ApplyUpdate> getAsync(String resourceGroupName, String providerName, String resourceType, String resourceName, String applyUpdateName);

    /**
     * Apply Updates to resource with parent.
     * Apply maintenance updates to resource with parent.
     *
     * @param resourceGroupName Resource group name
     * @param providerName Resource provider name
     * @param resourceParentType Resource parent type
     * @param resourceParentName Resource parent identifier
     * @param resourceType Resource type
     * @param resourceName Resource identifier
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ApplyUpdate> createOrUpdateParentAsync(String resourceGroupName, String providerName, String resourceParentType, String resourceParentName, String resourceType, String resourceName);

    /**
     * Apply Updates to resource.
     * Apply maintenance updates to resource.
     *
     * @param resourceGroupName Resource group name
     * @param providerName Resource provider name
     * @param resourceType Resource type
     * @param resourceName Resource identifier
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ApplyUpdate> createOrUpdateAsync(String resourceGroupName, String providerName, String resourceType, String resourceName);

}
