/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.maintenance.v2018_06_01_preview.implementation;

import com.microsoft.azure.management.maintenance.v2018_06_01_preview.MaintenanceScope;
import com.microsoft.azure.management.maintenance.v2018_06_01_preview.ImpactType;
import com.microsoft.azure.management.maintenance.v2018_06_01_preview.UpdateStatus;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Maintenance update on a resource.
 */
@JsonFlatten
public class UpdateInner {
    /**
     * The impact area. Possible values include: 'All', 'Host', 'Resource',
     * 'InResource'.
     */
    @JsonProperty(value = "maintenanceScope")
    private MaintenanceScope maintenanceScope;

    /**
     * The impact type. Possible values include: 'None', 'Freeze', 'Restart',
     * 'Redeploy'.
     */
    @JsonProperty(value = "impactType")
    private ImpactType impactType;

    /**
     * The status. Possible values include: 'Pending', 'InProgress',
     * 'Completed', 'RetryNow', 'RetryLater'.
     */
    @JsonProperty(value = "status")
    private UpdateStatus status;

    /**
     * Duration of impact in seconds.
     */
    @JsonProperty(value = "impactDurationInSec")
    private Integer impactDurationInSec;

    /**
     * Time when Azure will start force updates if not self-updated by customer
     * before this time.
     */
    @JsonProperty(value = "notBefore")
    private DateTime notBefore;

    /**
     * The resourceId.
     */
    @JsonProperty(value = "properties.resourceId")
    private String resourceId;

    /**
     * Get the impact area. Possible values include: 'All', 'Host', 'Resource', 'InResource'.
     *
     * @return the maintenanceScope value
     */
    public MaintenanceScope maintenanceScope() {
        return this.maintenanceScope;
    }

    /**
     * Set the impact area. Possible values include: 'All', 'Host', 'Resource', 'InResource'.
     *
     * @param maintenanceScope the maintenanceScope value to set
     * @return the UpdateInner object itself.
     */
    public UpdateInner withMaintenanceScope(MaintenanceScope maintenanceScope) {
        this.maintenanceScope = maintenanceScope;
        return this;
    }

    /**
     * Get the impact type. Possible values include: 'None', 'Freeze', 'Restart', 'Redeploy'.
     *
     * @return the impactType value
     */
    public ImpactType impactType() {
        return this.impactType;
    }

    /**
     * Set the impact type. Possible values include: 'None', 'Freeze', 'Restart', 'Redeploy'.
     *
     * @param impactType the impactType value to set
     * @return the UpdateInner object itself.
     */
    public UpdateInner withImpactType(ImpactType impactType) {
        this.impactType = impactType;
        return this;
    }

    /**
     * Get the status. Possible values include: 'Pending', 'InProgress', 'Completed', 'RetryNow', 'RetryLater'.
     *
     * @return the status value
     */
    public UpdateStatus status() {
        return this.status;
    }

    /**
     * Set the status. Possible values include: 'Pending', 'InProgress', 'Completed', 'RetryNow', 'RetryLater'.
     *
     * @param status the status value to set
     * @return the UpdateInner object itself.
     */
    public UpdateInner withStatus(UpdateStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get duration of impact in seconds.
     *
     * @return the impactDurationInSec value
     */
    public Integer impactDurationInSec() {
        return this.impactDurationInSec;
    }

    /**
     * Set duration of impact in seconds.
     *
     * @param impactDurationInSec the impactDurationInSec value to set
     * @return the UpdateInner object itself.
     */
    public UpdateInner withImpactDurationInSec(Integer impactDurationInSec) {
        this.impactDurationInSec = impactDurationInSec;
        return this;
    }

    /**
     * Get time when Azure will start force updates if not self-updated by customer before this time.
     *
     * @return the notBefore value
     */
    public DateTime notBefore() {
        return this.notBefore;
    }

    /**
     * Set time when Azure will start force updates if not self-updated by customer before this time.
     *
     * @param notBefore the notBefore value to set
     * @return the UpdateInner object itself.
     */
    public UpdateInner withNotBefore(DateTime notBefore) {
        this.notBefore = notBefore;
        return this;
    }

    /**
     * Get the resourceId.
     *
     * @return the resourceId value
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId.
     *
     * @param resourceId the resourceId value to set
     * @return the UpdateInner object itself.
     */
    public UpdateInner withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

}
