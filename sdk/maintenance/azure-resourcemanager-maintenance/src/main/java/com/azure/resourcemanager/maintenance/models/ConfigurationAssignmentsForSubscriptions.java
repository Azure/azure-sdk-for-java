// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ConfigurationAssignmentsForSubscriptions.
 */
public interface ConfigurationAssignmentsForSubscriptions {
    /**
     * Get configuration assignment
     * 
     * Get configuration assignment for resource..
     * 
     * @param configurationAssignmentName Configuration assignment name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration assignment for resource. along with {@link Response}.
     */
    Response<ConfigurationAssignment> getWithResponse(String configurationAssignmentName, Context context);

    /**
     * Get configuration assignment
     * 
     * Get configuration assignment for resource..
     * 
     * @param configurationAssignmentName Configuration assignment name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration assignment for resource.
     */
    ConfigurationAssignment get(String configurationAssignmentName);

    /**
     * Unregister configuration for resource
     * 
     * Unregister configuration for resource.
     * 
     * @param configurationAssignmentName Unique configuration assignment name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration Assignment along with {@link Response}.
     */
    Response<ConfigurationAssignment> deleteWithResponse(String configurationAssignmentName, Context context);

    /**
     * Unregister configuration for resource
     * 
     * Unregister configuration for resource.
     * 
     * @param configurationAssignmentName Unique configuration assignment name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration Assignment.
     */
    ConfigurationAssignment delete(String configurationAssignmentName);

    /**
     * Get configuration assignment
     * 
     * Get configuration assignment for resource..
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration assignment for resource. along with {@link Response}.
     */
    ConfigurationAssignment getById(String id);

    /**
     * Get configuration assignment
     * 
     * Get configuration assignment for resource..
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration assignment for resource. along with {@link Response}.
     */
    Response<ConfigurationAssignment> getByIdWithResponse(String id, Context context);

    /**
     * Unregister configuration for resource
     * 
     * Unregister configuration for resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration Assignment along with {@link Response}.
     */
    ConfigurationAssignment deleteById(String id);

    /**
     * Unregister configuration for resource
     * 
     * Unregister configuration for resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration Assignment along with {@link Response}.
     */
    Response<ConfigurationAssignment> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ConfigurationAssignment resource.
     * 
     * @param name resource name.
     * @return the first stage of the new ConfigurationAssignment definition.
     */
    ConfigurationAssignment.DefinitionStages.Blank define(String name);
}
