// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.maintenance.fluent.models.ConfigurationAssignmentInner;

/**
 * An instance of this class provides access to all the operations defined in
 * ConfigurationAssignmentsForSubscriptionsClient.
 */
public interface ConfigurationAssignmentsForSubscriptionsClient {
    /**
     * Get configuration assignment
     * 
     * Get configuration assignment for resource..
     * 
     * @param configurationAssignmentName Configuration assignment name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration assignment for resource. along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConfigurationAssignmentInner> getWithResponse(String configurationAssignmentName, Context context);

    /**
     * Get configuration assignment
     * 
     * Get configuration assignment for resource..
     * 
     * @param configurationAssignmentName Configuration assignment name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration assignment for resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConfigurationAssignmentInner get(String configurationAssignmentName);

    /**
     * Create configuration assignment
     * 
     * Register configuration for resource.
     * 
     * @param configurationAssignmentName Configuration assignment name.
     * @param configurationAssignment The configurationAssignment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration Assignment along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConfigurationAssignmentInner> createOrUpdateWithResponse(String configurationAssignmentName,
        ConfigurationAssignmentInner configurationAssignment, Context context);

    /**
     * Create configuration assignment
     * 
     * Register configuration for resource.
     * 
     * @param configurationAssignmentName Configuration assignment name.
     * @param configurationAssignment The configurationAssignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration Assignment.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConfigurationAssignmentInner createOrUpdate(String configurationAssignmentName,
        ConfigurationAssignmentInner configurationAssignment);

    /**
     * Create configuration assignment
     * 
     * Register configuration for resource.
     * 
     * @param configurationAssignmentName Configuration assignment name.
     * @param configurationAssignment The configurationAssignment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration Assignment along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConfigurationAssignmentInner> updateWithResponse(String configurationAssignmentName,
        ConfigurationAssignmentInner configurationAssignment, Context context);

    /**
     * Create configuration assignment
     * 
     * Register configuration for resource.
     * 
     * @param configurationAssignmentName Configuration assignment name.
     * @param configurationAssignment The configurationAssignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration Assignment.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConfigurationAssignmentInner update(String configurationAssignmentName,
        ConfigurationAssignmentInner configurationAssignment);

    /**
     * Unregister configuration for resource
     * 
     * Unregister configuration for resource.
     * 
     * @param configurationAssignmentName Unique configuration assignment name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration Assignment along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConfigurationAssignmentInner> deleteWithResponse(String configurationAssignmentName, Context context);

    /**
     * Unregister configuration for resource
     * 
     * Unregister configuration for resource.
     * 
     * @param configurationAssignmentName Unique configuration assignment name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration Assignment.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConfigurationAssignmentInner delete(String configurationAssignmentName);
}
