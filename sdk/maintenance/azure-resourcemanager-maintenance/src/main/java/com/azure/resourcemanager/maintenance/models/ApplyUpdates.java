// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.maintenance.fluent.models.ApplyUpdateInner;

/**
 * Resource collection API of ApplyUpdates.
 */
public interface ApplyUpdates {
    /**
     * Track Updates to resource with parent
     * 
     * Track maintenance updates to resource with parent.
     * 
     * @param resourceGroupName Resource group name.
     * @param providerName Resource provider name.
     * @param resourceParentType Resource parent type.
     * @param resourceParentName Resource parent identifier.
     * @param resourceType Resource type.
     * @param resourceName Resource identifier.
     * @param applyUpdateName applyUpdate Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return apply Update request along with {@link Response}.
     */
    Response<ApplyUpdate> getParentWithResponse(String resourceGroupName, String providerName,
        String resourceParentType, String resourceParentName, String resourceType, String resourceName,
        String applyUpdateName, Context context);

    /**
     * Track Updates to resource with parent
     * 
     * Track maintenance updates to resource with parent.
     * 
     * @param resourceGroupName Resource group name.
     * @param providerName Resource provider name.
     * @param resourceParentType Resource parent type.
     * @param resourceParentName Resource parent identifier.
     * @param resourceType Resource type.
     * @param resourceName Resource identifier.
     * @param applyUpdateName applyUpdate Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return apply Update request.
     */
    ApplyUpdate getParent(String resourceGroupName, String providerName, String resourceParentType,
        String resourceParentName, String resourceType, String resourceName, String applyUpdateName);

    /**
     * Track Updates to resource
     * 
     * Track maintenance updates to resource.
     * 
     * @param resourceGroupName Resource group name.
     * @param providerName Resource provider name.
     * @param resourceType Resource type.
     * @param resourceName Resource identifier.
     * @param applyUpdateName applyUpdate Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return apply Update request along with {@link Response}.
     */
    Response<ApplyUpdate> getWithResponse(String resourceGroupName, String providerName, String resourceType,
        String resourceName, String applyUpdateName, Context context);

    /**
     * Track Updates to resource
     * 
     * Track maintenance updates to resource.
     * 
     * @param resourceGroupName Resource group name.
     * @param providerName Resource provider name.
     * @param resourceType Resource type.
     * @param resourceName Resource identifier.
     * @param applyUpdateName applyUpdate Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return apply Update request.
     */
    ApplyUpdate get(String resourceGroupName, String providerName, String resourceType, String resourceName,
        String applyUpdateName);

    /**
     * Apply Updates to resource
     * 
     * Apply maintenance updates to resource.
     * 
     * @param resourceGroupName Resource group name.
     * @param providerName Resource provider name.
     * @param resourceType Resource type.
     * @param resourceName Resource identifier.
     * @param applyUpdateName ApplyUpdate name.
     * @param applyUpdate The ApplyUpdate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return apply Update request along with {@link Response}.
     */
    Response<ApplyUpdate> createOrUpdateOrCancelWithResponse(String resourceGroupName, String providerName,
        String resourceType, String resourceName, String applyUpdateName, ApplyUpdateInner applyUpdate,
        Context context);

    /**
     * Apply Updates to resource
     * 
     * Apply maintenance updates to resource.
     * 
     * @param resourceGroupName Resource group name.
     * @param providerName Resource provider name.
     * @param resourceType Resource type.
     * @param resourceName Resource identifier.
     * @param applyUpdateName ApplyUpdate name.
     * @param applyUpdate The ApplyUpdate.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return apply Update request.
     */
    ApplyUpdate createOrUpdateOrCancel(String resourceGroupName, String providerName, String resourceType,
        String resourceName, String applyUpdateName, ApplyUpdateInner applyUpdate);

    /**
     * Apply Updates to resource with parent
     * 
     * Apply maintenance updates to resource with parent.
     * 
     * @param resourceGroupName Resource group name.
     * @param providerName Resource provider name.
     * @param resourceParentType Resource parent type.
     * @param resourceParentName Resource parent identifier.
     * @param resourceType Resource type.
     * @param resourceName Resource identifier.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return apply Update request along with {@link Response}.
     */
    Response<ApplyUpdate> createOrUpdateParentWithResponse(String resourceGroupName, String providerName,
        String resourceParentType, String resourceParentName, String resourceType, String resourceName,
        Context context);

    /**
     * Apply Updates to resource with parent
     * 
     * Apply maintenance updates to resource with parent.
     * 
     * @param resourceGroupName Resource group name.
     * @param providerName Resource provider name.
     * @param resourceParentType Resource parent type.
     * @param resourceParentName Resource parent identifier.
     * @param resourceType Resource type.
     * @param resourceName Resource identifier.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return apply Update request.
     */
    ApplyUpdate createOrUpdateParent(String resourceGroupName, String providerName, String resourceParentType,
        String resourceParentName, String resourceType, String resourceName);

    /**
     * Apply Updates to resource
     * 
     * Apply maintenance updates to resource.
     * 
     * @param resourceGroupName Resource group name.
     * @param providerName Resource provider name.
     * @param resourceType Resource type.
     * @param resourceName Resource identifier.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return apply Update request along with {@link Response}.
     */
    Response<ApplyUpdate> createOrUpdateWithResponse(String resourceGroupName, String providerName, String resourceType,
        String resourceName, Context context);

    /**
     * Apply Updates to resource
     * 
     * Apply maintenance updates to resource.
     * 
     * @param resourceGroupName Resource group name.
     * @param providerName Resource provider name.
     * @param resourceType Resource type.
     * @param resourceName Resource identifier.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return apply Update request.
     */
    ApplyUpdate createOrUpdate(String resourceGroupName, String providerName, String resourceType, String resourceName);

    /**
     * Get Configuration records within a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration records within a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApplyUpdate> list();

    /**
     * Get Configuration records within a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration records within a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApplyUpdate> list(Context context);
}
