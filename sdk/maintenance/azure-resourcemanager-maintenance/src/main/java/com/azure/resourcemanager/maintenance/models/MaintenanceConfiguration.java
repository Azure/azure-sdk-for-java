// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.maintenance.fluent.models.MaintenanceConfigurationInner;
import java.util.Map;

/** An immutable client-side representation of MaintenanceConfiguration. */
public interface MaintenanceConfiguration {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: Gets or sets location of the resource.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Gets or sets tags of the resource.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the namespace property: Gets or sets namespace of the resource e.g. Microsoft.Maintenance or Microsoft.Sql.
     *
     * @return the namespace value.
     */
    String namespace();

    /**
     * Gets the extensionProperties property: Gets or sets extensionProperties of the maintenanceConfiguration. This is
     * for future use only and would be a set of key value pairs for additional information e.g. whether to follow SDP
     * etc.
     *
     * @return the extensionProperties value.
     */
    Map<String, String> extensionProperties();

    /**
     * Gets the maintenanceScope property: Gets or sets maintenanceScope of the configuration. It represent the impact
     * area of the maintenance.
     *
     * @return the maintenanceScope value.
     */
    MaintenanceScope maintenanceScope();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.maintenance.fluent.models.MaintenanceConfigurationInner object.
     *
     * @return the inner object.
     */
    MaintenanceConfigurationInner innerModel();

    /** The entirety of the MaintenanceConfiguration definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }
    /** The MaintenanceConfiguration definition stages. */
    interface DefinitionStages {
        /** The first stage of the MaintenanceConfiguration definition. */
        interface Blank extends WithResourceGroup {
        }
        /** The stage of the MaintenanceConfiguration definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName Resource Group Name.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the MaintenanceConfiguration definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithLocation,
                DefinitionStages.WithTags,
                DefinitionStages.WithNamespace,
                DefinitionStages.WithExtensionProperties,
                DefinitionStages.WithMaintenanceScope {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            MaintenanceConfiguration create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            MaintenanceConfiguration create(Context context);
        }
        /** The stage of the MaintenanceConfiguration definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location Gets or sets location of the resource.
             * @return the next definition stage.
             */
            WithCreate withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location Gets or sets location of the resource.
             * @return the next definition stage.
             */
            WithCreate withRegion(String location);
        }
        /** The stage of the MaintenanceConfiguration definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Gets or sets tags of the resource.
             *
             * @param tags Gets or sets tags of the resource.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the MaintenanceConfiguration definition allowing to specify namespace. */
        interface WithNamespace {
            /**
             * Specifies the namespace property: Gets or sets namespace of the resource e.g. Microsoft.Maintenance or
             * Microsoft.Sql.
             *
             * @param namespace Gets or sets namespace of the resource e.g. Microsoft.Maintenance or Microsoft.Sql.
             * @return the next definition stage.
             */
            WithCreate withNamespace(String namespace);
        }
        /** The stage of the MaintenanceConfiguration definition allowing to specify extensionProperties. */
        interface WithExtensionProperties {
            /**
             * Specifies the extensionProperties property: Gets or sets extensionProperties of the
             * maintenanceConfiguration. This is for future use only and would be a set of key value pairs for
             * additional information e.g. whether to follow SDP etc..
             *
             * @param extensionProperties Gets or sets extensionProperties of the maintenanceConfiguration. This is for
             *     future use only and would be a set of key value pairs for additional information e.g. whether to
             *     follow SDP etc.
             * @return the next definition stage.
             */
            WithCreate withExtensionProperties(Map<String, String> extensionProperties);
        }
        /** The stage of the MaintenanceConfiguration definition allowing to specify maintenanceScope. */
        interface WithMaintenanceScope {
            /**
             * Specifies the maintenanceScope property: Gets or sets maintenanceScope of the configuration. It represent
             * the impact area of the maintenance.
             *
             * @param maintenanceScope Gets or sets maintenanceScope of the configuration. It represent the impact area
             *     of the maintenance.
             * @return the next definition stage.
             */
            WithCreate withMaintenanceScope(MaintenanceScope maintenanceScope);
        }
    }
    /**
     * Begins update for the MaintenanceConfiguration resource.
     *
     * @return the stage of resource update.
     */
    MaintenanceConfiguration.Update update();

    /** The template for MaintenanceConfiguration update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithNamespace,
            UpdateStages.WithExtensionProperties,
            UpdateStages.WithMaintenanceScope {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        MaintenanceConfiguration apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        MaintenanceConfiguration apply(Context context);
    }
    /** The MaintenanceConfiguration update stages. */
    interface UpdateStages {
        /** The stage of the MaintenanceConfiguration update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Gets or sets tags of the resource.
             *
             * @param tags Gets or sets tags of the resource.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the MaintenanceConfiguration update allowing to specify namespace. */
        interface WithNamespace {
            /**
             * Specifies the namespace property: Gets or sets namespace of the resource e.g. Microsoft.Maintenance or
             * Microsoft.Sql.
             *
             * @param namespace Gets or sets namespace of the resource e.g. Microsoft.Maintenance or Microsoft.Sql.
             * @return the next definition stage.
             */
            Update withNamespace(String namespace);
        }
        /** The stage of the MaintenanceConfiguration update allowing to specify extensionProperties. */
        interface WithExtensionProperties {
            /**
             * Specifies the extensionProperties property: Gets or sets extensionProperties of the
             * maintenanceConfiguration. This is for future use only and would be a set of key value pairs for
             * additional information e.g. whether to follow SDP etc..
             *
             * @param extensionProperties Gets or sets extensionProperties of the maintenanceConfiguration. This is for
             *     future use only and would be a set of key value pairs for additional information e.g. whether to
             *     follow SDP etc.
             * @return the next definition stage.
             */
            Update withExtensionProperties(Map<String, String> extensionProperties);
        }
        /** The stage of the MaintenanceConfiguration update allowing to specify maintenanceScope. */
        interface WithMaintenanceScope {
            /**
             * Specifies the maintenanceScope property: Gets or sets maintenanceScope of the configuration. It represent
             * the impact area of the maintenance.
             *
             * @param maintenanceScope Gets or sets maintenanceScope of the configuration. It represent the impact area
             *     of the maintenance.
             * @return the next definition stage.
             */
            Update withMaintenanceScope(MaintenanceScope maintenanceScope);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    MaintenanceConfiguration refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    MaintenanceConfiguration refresh(Context context);
}
