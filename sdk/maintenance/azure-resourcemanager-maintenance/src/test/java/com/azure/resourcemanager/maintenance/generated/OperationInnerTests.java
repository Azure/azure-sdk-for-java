// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.maintenance.fluent.models.OperationInner;
import com.azure.resourcemanager.maintenance.models.OperationInfo;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"name\":\"eualupjmkhf\",\"display\":{\"provider\":\"bcswsrt\",\"resource\":\"iplrbpbewtghfgb\",\"operation\":\"gw\",\"description\":\"vlvqhjkbegi\"},\"origin\":\"nmxiebwwaloayqc\",\"properties\":\"datartzju\",\"isDataAction\":true}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("eualupjmkhf", model.name());
        Assertions.assertEquals("bcswsrt", model.display().provider());
        Assertions.assertEquals("iplrbpbewtghfgb", model.display().resource());
        Assertions.assertEquals("gw", model.display().operation());
        Assertions.assertEquals("vlvqhjkbegi", model.display().description());
        Assertions.assertEquals("nmxiebwwaloayqc", model.origin());
        Assertions.assertEquals(true, model.isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner().withName("eualupjmkhf")
            .withDisplay(new OperationInfo().withProvider("bcswsrt")
                .withResource("iplrbpbewtghfgb")
                .withOperation("gw")
                .withDescription("vlvqhjkbegi"))
            .withOrigin("nmxiebwwaloayqc")
            .withProperties("datartzju")
            .withIsDataAction(true);
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("eualupjmkhf", model.name());
        Assertions.assertEquals("bcswsrt", model.display().provider());
        Assertions.assertEquals("iplrbpbewtghfgb", model.display().resource());
        Assertions.assertEquals("gw", model.display().operation());
        Assertions.assertEquals("vlvqhjkbegi", model.display().description());
        Assertions.assertEquals("nmxiebwwaloayqc", model.origin());
        Assertions.assertEquals(true, model.isDataAction());
    }
}
