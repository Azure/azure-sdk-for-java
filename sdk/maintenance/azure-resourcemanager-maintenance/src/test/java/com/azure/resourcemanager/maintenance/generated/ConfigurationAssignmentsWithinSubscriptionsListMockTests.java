// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maintenance.MaintenanceManager;
import com.azure.resourcemanager.maintenance.models.ConfigurationAssignment;
import com.azure.resourcemanager.maintenance.models.TagOperators;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ConfigurationAssignmentsWithinSubscriptionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"location\":\"zeyqxtjjfzqlqhyc\",\"properties\":{\"maintenanceConfigurationId\":\"dggxdbeesmi\",\"resourceId\":\"nlrariaawiuagy\",\"filter\":{\"resourceTypes\":[\"bylyrfgia\",\"tcojocqwo\"],\"resourceGroups\":[\"zjvusfzldmo\",\"uxylfsbtkadpy\",\"own\"],\"osTypes\":[\"kb\",\"grjqctojcmi\",\"of\"],\"locations\":[\"pe\",\"ojyqdhcuplcplcw\",\"hihihlhzdsqtzbsr\",\"nowc\"],\"tagSettings\":{\"tags\":{\"wotey\":[\"vecactx\"],\"uagrttikteusqc\":[\"cluqovekqvgqo\",\"wifzmp\",\"wyivqikf\",\"cvhrfsp\"],\"metttwgd\":[\"vyklxuby\",\"affmmfblcqc\",\"ubgq\",\"brta\"]},\"filterOperator\":\"Any\"}}},\"id\":\"ihhrmo\",\"name\":\"i\",\"type\":\"qseypxiutcxa\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MaintenanceManager manager = MaintenanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ConfigurationAssignment> response
            = manager.configurationAssignmentsWithinSubscriptions().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zeyqxtjjfzqlqhyc", response.iterator().next().location());
        Assertions.assertEquals("dggxdbeesmi", response.iterator().next().maintenanceConfigurationId());
        Assertions.assertEquals("nlrariaawiuagy", response.iterator().next().resourceId());
        Assertions.assertEquals("bylyrfgia", response.iterator().next().filter().resourceTypes().get(0));
        Assertions.assertEquals("zjvusfzldmo", response.iterator().next().filter().resourceGroups().get(0));
        Assertions.assertEquals("kb", response.iterator().next().filter().osTypes().get(0));
        Assertions.assertEquals("pe", response.iterator().next().filter().locations().get(0));
        Assertions.assertEquals("vecactx",
            response.iterator().next().filter().tagSettings().tags().get("wotey").get(0));
        Assertions.assertEquals(TagOperators.ANY, response.iterator().next().filter().tagSettings().filterOperator());
    }
}
