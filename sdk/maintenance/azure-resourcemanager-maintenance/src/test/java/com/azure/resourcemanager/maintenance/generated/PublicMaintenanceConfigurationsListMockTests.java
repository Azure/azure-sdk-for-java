// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maintenance.MaintenanceManager;
import com.azure.resourcemanager.maintenance.models.MaintenanceConfiguration;
import com.azure.resourcemanager.maintenance.models.MaintenanceScope;
import com.azure.resourcemanager.maintenance.models.RebootOptions;
import com.azure.resourcemanager.maintenance.models.Visibility;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PublicMaintenanceConfigurationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"location\":\"vbxwyjsflhh\",\"tags\":{\"joya\":\"lnjixisxya\"},\"properties\":{\"namespace\":\"lyjpk\",\"extensionProperties\":{\"lixhnrztfol\":\"zyexzn\",\"dtpnapnyiropuhp\":\"bnxknalaulppg\",\"gqgitxmedjvcsl\":\"gvpgy\"},\"maintenanceScope\":\"SQLDB\",\"maintenanceWindow\":{\"startDateTime\":\"ncw\",\"expirationDateTime\":\"hxg\",\"duration\":\"rmgucnap\",\"timeZone\":\"eoellwptfdygp\",\"recurEvery\":\"b\"},\"visibility\":\"Public\",\"installPatches\":{\"rebootSetting\":\"IfRequired\",\"windowsParameters\":{\"kbNumbersToExclude\":[\"rhhuaopppcqeqx\",\"lzdahzxctobgbkdm\"],\"kbNumbersToInclude\":[\"postmgrcfbunrm\",\"qjhhkxbpv\",\"ymjhxxjyngudivkr\"],\"classificationsToInclude\":[\"bxqz\",\"szjfauvjfdxxivet\",\"t\"],\"excludeKbsRequiringReboot\":true},\"linuxParameters\":{\"packageNameMasksToExclude\":[\"oqmcbxvwvxyslq\",\"hsfxoblytkb\",\"mpew\",\"wfbkrvrns\"],\"packageNameMasksToInclude\":[\"q\",\"ohxcrsbfova\",\"rruvwbhsq\",\"sub\"],\"classificationsToInclude\":[\"birx\"]}}},\"id\":\"ybsrfbjfdtwss\",\"name\":\"t\",\"type\":\"tpvjzbexilzznfqq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MaintenanceManager manager = MaintenanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<MaintenanceConfiguration> response
            = manager.publicMaintenanceConfigurations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vbxwyjsflhh", response.iterator().next().location());
        Assertions.assertEquals("lnjixisxya", response.iterator().next().tags().get("joya"));
        Assertions.assertEquals("lyjpk", response.iterator().next().namespace());
        Assertions.assertEquals("zyexzn", response.iterator().next().extensionProperties().get("lixhnrztfol"));
        Assertions.assertEquals(MaintenanceScope.SQLDB, response.iterator().next().maintenanceScope());
        Assertions.assertEquals(Visibility.PUBLIC, response.iterator().next().visibility());
        Assertions.assertEquals(RebootOptions.IF_REQUIRED, response.iterator().next().installPatches().rebootSetting());
        Assertions.assertEquals("rhhuaopppcqeqx",
            response.iterator().next().installPatches().windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("postmgrcfbunrm",
            response.iterator().next().installPatches().windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("bxqz",
            response.iterator().next().installPatches().windowsParameters().classificationsToInclude().get(0));
        Assertions.assertEquals(true,
            response.iterator().next().installPatches().windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("oqmcbxvwvxyslq",
            response.iterator().next().installPatches().linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("q",
            response.iterator().next().installPatches().linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("birx",
            response.iterator().next().installPatches().linuxParameters().classificationsToInclude().get(0));
        Assertions.assertEquals("ncw", response.iterator().next().startDateTime());
        Assertions.assertEquals("hxg", response.iterator().next().expirationDateTime());
        Assertions.assertEquals("rmgucnap", response.iterator().next().duration());
        Assertions.assertEquals("eoellwptfdygp", response.iterator().next().timeZone());
        Assertions.assertEquals("b", response.iterator().next().recurEvery());
    }
}
