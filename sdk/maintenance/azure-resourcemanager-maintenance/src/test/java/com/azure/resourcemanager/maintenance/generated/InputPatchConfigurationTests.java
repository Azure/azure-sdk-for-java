// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.maintenance.models.InputLinuxParameters;
import com.azure.resourcemanager.maintenance.models.InputPatchConfiguration;
import com.azure.resourcemanager.maintenance.models.InputWindowsParameters;
import com.azure.resourcemanager.maintenance.models.RebootOptions;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InputPatchConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InputPatchConfiguration model =
            BinaryData
                .fromString(
                    "{\"rebootSetting\":\"Never\",\"windowsParameters\":{\"kbNumbersToExclude\":[\"lzu\"],\"kbNumbersToInclude\":[\"fwnfnb\"],\"classificationsToInclude\":[\"ionle\",\"x\"],\"excludeKbsRequiringReboot\":false},\"linuxParameters\":{\"packageNameMasksToExclude\":[\"xdpnqbqq\",\"xrjfeallnwsub\",\"snjampmng\"],\"packageNameMasksToInclude\":[\"c\",\"aqw\"],\"classificationsToInclude\":[\"hcbonqvpkvlr\",\"njeaseipheofloke\",\"y\",\"enjbdlwtgrhp\"]}}")
                .toObject(InputPatchConfiguration.class);
        Assertions.assertEquals(RebootOptions.NEVER, model.rebootSetting());
        Assertions.assertEquals("lzu", model.windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("fwnfnb", model.windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("ionle", model.windowsParameters().classificationsToInclude().get(0));
        Assertions.assertEquals(false, model.windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("xdpnqbqq", model.linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("c", model.linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("hcbonqvpkvlr", model.linuxParameters().classificationsToInclude().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InputPatchConfiguration model =
            new InputPatchConfiguration()
                .withRebootSetting(RebootOptions.NEVER)
                .withWindowsParameters(
                    new InputWindowsParameters()
                        .withKbNumbersToExclude(Arrays.asList("lzu"))
                        .withKbNumbersToInclude(Arrays.asList("fwnfnb"))
                        .withClassificationsToInclude(Arrays.asList("ionle", "x"))
                        .withExcludeKbsRequiringReboot(false))
                .withLinuxParameters(
                    new InputLinuxParameters()
                        .withPackageNameMasksToExclude(Arrays.asList("xdpnqbqq", "xrjfeallnwsub", "snjampmng"))
                        .withPackageNameMasksToInclude(Arrays.asList("c", "aqw"))
                        .withClassificationsToInclude(
                            Arrays.asList("hcbonqvpkvlr", "njeaseipheofloke", "y", "enjbdlwtgrhp")));
        model = BinaryData.fromObject(model).toObject(InputPatchConfiguration.class);
        Assertions.assertEquals(RebootOptions.NEVER, model.rebootSetting());
        Assertions.assertEquals("lzu", model.windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("fwnfnb", model.windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("ionle", model.windowsParameters().classificationsToInclude().get(0));
        Assertions.assertEquals(false, model.windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("xdpnqbqq", model.linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("c", model.linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("hcbonqvpkvlr", model.linuxParameters().classificationsToInclude().get(0));
    }
}
