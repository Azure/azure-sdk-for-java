// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.maintenance.models.InputLinuxParameters;
import com.azure.resourcemanager.maintenance.models.InputPatchConfiguration;
import com.azure.resourcemanager.maintenance.models.InputWindowsParameters;
import com.azure.resourcemanager.maintenance.models.RebootOptions;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InputPatchConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InputPatchConfiguration model = BinaryData.fromString(
            "{\"rebootSetting\":\"Never\",\"windowsParameters\":{\"kbNumbersToExclude\":[\"w\",\"ujjugwdkcglh\",\"lazjdyggdtjixhbk\",\"ofqweykhmenevfye\"],\"kbNumbersToInclude\":[\"hybcibv\",\"vdcsitynn\"],\"classificationsToInclude\":[\"dectehfiqsc\",\"eypvhezrkg\",\"hcjrefovgmk\",\"sle\"],\"excludeKbsRequiringReboot\":true},\"linuxParameters\":{\"packageNameMasksToExclude\":[\"jpkcattpng\",\"cr\",\"czsqpjhvm\",\"ajvnysounqe\"],\"packageNameMasksToInclude\":[\"oaeupfhyhltrpmo\"],\"classificationsToInclude\":[\"cma\",\"u\",\"kthfui\",\"aodsfcpkv\"]}}")
            .toObject(InputPatchConfiguration.class);
        Assertions.assertEquals(RebootOptions.NEVER, model.rebootSetting());
        Assertions.assertEquals("w", model.windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("hybcibv", model.windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("dectehfiqsc", model.windowsParameters().classificationsToInclude().get(0));
        Assertions.assertEquals(true, model.windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("jpkcattpng", model.linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("oaeupfhyhltrpmo", model.linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("cma", model.linuxParameters().classificationsToInclude().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InputPatchConfiguration model = new InputPatchConfiguration().withRebootSetting(RebootOptions.NEVER)
            .withWindowsParameters(new InputWindowsParameters()
                .withKbNumbersToExclude(Arrays.asList("w", "ujjugwdkcglh", "lazjdyggdtjixhbk", "ofqweykhmenevfye"))
                .withKbNumbersToInclude(Arrays.asList("hybcibv", "vdcsitynn"))
                .withClassificationsToInclude(Arrays.asList("dectehfiqsc", "eypvhezrkg", "hcjrefovgmk", "sle"))
                .withExcludeKbsRequiringReboot(true))
            .withLinuxParameters(new InputLinuxParameters()
                .withPackageNameMasksToExclude(Arrays.asList("jpkcattpng", "cr", "czsqpjhvm", "ajvnysounqe"))
                .withPackageNameMasksToInclude(Arrays.asList("oaeupfhyhltrpmo"))
                .withClassificationsToInclude(Arrays.asList("cma", "u", "kthfui", "aodsfcpkv")));
        model = BinaryData.fromObject(model).toObject(InputPatchConfiguration.class);
        Assertions.assertEquals(RebootOptions.NEVER, model.rebootSetting());
        Assertions.assertEquals("w", model.windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("hybcibv", model.windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("dectehfiqsc", model.windowsParameters().classificationsToInclude().get(0));
        Assertions.assertEquals(true, model.windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("jpkcattpng", model.linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("oaeupfhyhltrpmo", model.linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("cma", model.linuxParameters().classificationsToInclude().get(0));
    }
}
