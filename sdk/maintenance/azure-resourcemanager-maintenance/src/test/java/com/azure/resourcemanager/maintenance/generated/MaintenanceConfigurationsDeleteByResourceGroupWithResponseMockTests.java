// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maintenance.MaintenanceManager;
import com.azure.resourcemanager.maintenance.models.MaintenanceConfiguration;
import com.azure.resourcemanager.maintenance.models.MaintenanceScope;
import com.azure.resourcemanager.maintenance.models.RebootOptions;
import com.azure.resourcemanager.maintenance.models.Visibility;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MaintenanceConfigurationsDeleteByResourceGroupWithResponseMockTests {
    @Test
    public void testDeleteWithResponse() throws Exception {
        String responseStr
            = "{\"location\":\"eqphchqnrnr\",\"tags\":{\"iklbydvkhb\":\"huwrykqgaifm\",\"xcv\":\"jdz\",\"v\":\"srhnjivo\",\"jdftuljltd\":\"novqfzge\"},\"properties\":{\"namespace\":\"amtmcz\",\"extensionProperties\":{\"ssxmojms\":\"ejwcwwqiok\"},\"maintenanceScope\":\"InGuestPatch\",\"maintenanceWindow\":{\"startDateTime\":\"rvkwc\",\"expirationDateTime\":\"ql\",\"duration\":\"x\",\"timeZone\":\"czheyd\",\"recurEvery\":\"dshmkxmaehvbbx\"},\"visibility\":\"Custom\",\"installPatches\":{\"rebootSetting\":\"Never\",\"windowsParameters\":{\"kbNumbersToExclude\":[\"tbaxk\"],\"kbNumbersToInclude\":[\"wrck\",\"yklyhpluodpvruud\"],\"classificationsToInclude\":[\"ibthostgktstvd\"],\"excludeKbsRequiringReboot\":true},\"linuxParameters\":{\"packageNameMasksToExclude\":[\"dqbcvhzlhplod\",\"kdl\"],\"packageNameMasksToInclude\":[\"fbumlkx\",\"rqjfsmlm\",\"txhwgfws\",\"tawc\"],\"classificationsToInclude\":[\"brhu\",\"skh\",\"dyg\",\"ookk\"]}}},\"id\":\"qjbvleorfmlu\",\"name\":\"qtqzfavyv\",\"type\":\"qqybarye\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MaintenanceManager manager = MaintenanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MaintenanceConfiguration response = manager.maintenanceConfigurations()
            .deleteByResourceGroupWithResponse("jslb", "wkojgcyztsfmzn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("eqphchqnrnr", response.location());
        Assertions.assertEquals("huwrykqgaifm", response.tags().get("iklbydvkhb"));
        Assertions.assertEquals("amtmcz", response.namespace());
        Assertions.assertEquals("ejwcwwqiok", response.extensionProperties().get("ssxmojms"));
        Assertions.assertEquals(MaintenanceScope.IN_GUEST_PATCH, response.maintenanceScope());
        Assertions.assertEquals(Visibility.CUSTOM, response.visibility());
        Assertions.assertEquals(RebootOptions.NEVER, response.installPatches().rebootSetting());
        Assertions.assertEquals("tbaxk", response.installPatches().windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("wrck", response.installPatches().windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("ibthostgktstvd",
            response.installPatches().windowsParameters().classificationsToInclude().get(0));
        Assertions.assertEquals(true, response.installPatches().windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("dqbcvhzlhplod",
            response.installPatches().linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("fbumlkx",
            response.installPatches().linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("brhu", response.installPatches().linuxParameters().classificationsToInclude().get(0));
        Assertions.assertEquals("rvkwc", response.startDateTime());
        Assertions.assertEquals("ql", response.expirationDateTime());
        Assertions.assertEquals("x", response.duration());
        Assertions.assertEquals("czheyd", response.timeZone());
        Assertions.assertEquals("dshmkxmaehvbbx", response.recurEvery());
    }
}
