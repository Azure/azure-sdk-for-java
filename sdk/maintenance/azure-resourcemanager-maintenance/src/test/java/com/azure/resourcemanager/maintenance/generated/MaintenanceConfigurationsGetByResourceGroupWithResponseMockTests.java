// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maintenance.MaintenanceManager;
import com.azure.resourcemanager.maintenance.models.MaintenanceConfiguration;
import com.azure.resourcemanager.maintenance.models.MaintenanceScope;
import com.azure.resourcemanager.maintenance.models.RebootOptions;
import com.azure.resourcemanager.maintenance.models.Visibility;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MaintenanceConfigurationsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"location\":\"dsofbshrns\",\"tags\":{\"jsrtk\":\"swdvzyybycnun\",\"uxzejntpsew\":\"awnopqgikyzirtxd\"},\"properties\":{\"namespace\":\"ilqu\",\"extensionProperties\":{\"ggufhyaomtb\":\"dxtqmieoxo\",\"pjbi\":\"hhavgrvkffovjz\"},\"maintenanceScope\":\"Resource\",\"maintenanceWindow\":{\"startDateTime\":\"xumvfcluyovw\",\"expirationDateTime\":\"bkfezzxscyhwzdgi\",\"duration\":\"jbzbomvzzbtdcq\",\"timeZone\":\"niyujv\",\"recurEvery\":\"l\"},\"visibility\":\"Public\",\"installPatches\":{\"rebootSetting\":\"Never\",\"windowsParameters\":{\"kbNumbersToExclude\":[\"bgye\",\"rymsgaojfmw\"],\"kbNumbersToInclude\":[\"tmr\",\"hirctymoxoftpipi\"],\"classificationsToInclude\":[\"zuhx\",\"cpqjlihhyu\",\"pskasdvlmfwdg\",\"x\"],\"excludeKbsRequiringReboot\":false},\"linuxParameters\":{\"packageNameMasksToExclude\":[\"amrsreuzv\",\"urisjnhnytxifqj\"],\"packageNameMasksToInclude\":[\"mrhublwpc\",\"sutrgjup\"],\"classificationsToInclude\":[\"tpwoqhihejq\",\"w\",\"pnfqntcyp\",\"xjvfoimwksl\"]}}},\"id\":\"cizjxvydfceacvl\",\"name\":\"vygdyft\",\"type\":\"mrtwna\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MaintenanceManager manager = MaintenanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MaintenanceConfiguration response = manager.maintenanceConfigurations()
            .getByResourceGroupWithResponse("jbdhqxvc", "gf", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("dsofbshrns", response.location());
        Assertions.assertEquals("swdvzyybycnun", response.tags().get("jsrtk"));
        Assertions.assertEquals("ilqu", response.namespace());
        Assertions.assertEquals("dxtqmieoxo", response.extensionProperties().get("ggufhyaomtb"));
        Assertions.assertEquals(MaintenanceScope.RESOURCE, response.maintenanceScope());
        Assertions.assertEquals(Visibility.PUBLIC, response.visibility());
        Assertions.assertEquals(RebootOptions.NEVER, response.installPatches().rebootSetting());
        Assertions.assertEquals("bgye", response.installPatches().windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("tmr", response.installPatches().windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("zuhx",
            response.installPatches().windowsParameters().classificationsToInclude().get(0));
        Assertions.assertEquals(false, response.installPatches().windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("amrsreuzv",
            response.installPatches().linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("mrhublwpc",
            response.installPatches().linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("tpwoqhihejq",
            response.installPatches().linuxParameters().classificationsToInclude().get(0));
        Assertions.assertEquals("xumvfcluyovw", response.startDateTime());
        Assertions.assertEquals("bkfezzxscyhwzdgi", response.expirationDateTime());
        Assertions.assertEquals("jbzbomvzzbtdcq", response.duration());
        Assertions.assertEquals("niyujv", response.timeZone());
        Assertions.assertEquals("l", response.recurEvery());
    }
}
