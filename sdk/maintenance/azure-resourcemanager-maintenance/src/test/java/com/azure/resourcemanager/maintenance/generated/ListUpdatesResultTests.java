// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.maintenance.fluent.models.UpdateInner;
import com.azure.resourcemanager.maintenance.models.ImpactType;
import com.azure.resourcemanager.maintenance.models.ListUpdatesResult;
import com.azure.resourcemanager.maintenance.models.MaintenanceScope;
import com.azure.resourcemanager.maintenance.models.UpdateStatus;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ListUpdatesResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ListUpdatesResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"maintenanceScope\":\"SQLManagedInstance\",\"impactType\":\"None\",\"status\":\"InProgress\",\"impactDurationInSec\":236193588,\"notBefore\":\"2021-05-28T01:48:43Z\",\"properties\":{\"resourceId\":\"y\"}},{\"maintenanceScope\":\"OSImage\",\"impactType\":\"Freeze\",\"status\":\"InProgress\",\"impactDurationInSec\":1035502887,\"notBefore\":\"2021-06-18T07:43:59Z\",\"properties\":{\"resourceId\":\"whvylw\"}}]}")
                .toObject(ListUpdatesResult.class);
        Assertions.assertEquals(MaintenanceScope.SQLMANAGED_INSTANCE, model.value().get(0).maintenanceScope());
        Assertions.assertEquals(ImpactType.NONE, model.value().get(0).impactType());
        Assertions.assertEquals(UpdateStatus.IN_PROGRESS, model.value().get(0).status());
        Assertions.assertEquals(236193588, model.value().get(0).impactDurationInSec());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-28T01:48:43Z"), model.value().get(0).notBefore());
        Assertions.assertEquals("y", model.value().get(0).resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ListUpdatesResult model =
            new ListUpdatesResult()
                .withValue(
                    Arrays
                        .asList(
                            new UpdateInner()
                                .withMaintenanceScope(MaintenanceScope.SQLMANAGED_INSTANCE)
                                .withImpactType(ImpactType.NONE)
                                .withStatus(UpdateStatus.IN_PROGRESS)
                                .withImpactDurationInSec(236193588)
                                .withNotBefore(OffsetDateTime.parse("2021-05-28T01:48:43Z"))
                                .withResourceId("y"),
                            new UpdateInner()
                                .withMaintenanceScope(MaintenanceScope.OSIMAGE)
                                .withImpactType(ImpactType.FREEZE)
                                .withStatus(UpdateStatus.IN_PROGRESS)
                                .withImpactDurationInSec(1035502887)
                                .withNotBefore(OffsetDateTime.parse("2021-06-18T07:43:59Z"))
                                .withResourceId("whvylw")));
        model = BinaryData.fromObject(model).toObject(ListUpdatesResult.class);
        Assertions.assertEquals(MaintenanceScope.SQLMANAGED_INSTANCE, model.value().get(0).maintenanceScope());
        Assertions.assertEquals(ImpactType.NONE, model.value().get(0).impactType());
        Assertions.assertEquals(UpdateStatus.IN_PROGRESS, model.value().get(0).status());
        Assertions.assertEquals(236193588, model.value().get(0).impactDurationInSec());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-28T01:48:43Z"), model.value().get(0).notBefore());
        Assertions.assertEquals("y", model.value().get(0).resourceId());
    }
}
