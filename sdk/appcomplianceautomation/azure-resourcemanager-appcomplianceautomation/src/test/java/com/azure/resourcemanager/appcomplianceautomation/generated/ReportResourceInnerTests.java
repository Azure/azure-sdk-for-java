// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.ReportResourceInner;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportProperties;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceMetadata;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceOrigin;
import com.azure.resourcemanager.appcomplianceautomation.models.StorageInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ReportResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReportResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"triggerTime\":\"2021-01-03T12:42:14Z\",\"timeZone\":\"mhquvgjxp\",\"resources\":[{\"resourceId\":\"czmehmtzopbsp\",\"resourceType\":\"upi\",\"resourceKind\":\"sybbejhph\",\"resourceOrigin\":\"AWS\",\"accountId\":\"sx\"},{\"resourceId\":\"obhdxbmtqioqjze\",\"resourceType\":\"bmufpown\",\"resourceKind\":\"zhwlrxy\",\"resourceOrigin\":\"AWS\",\"accountId\":\"qijgkd\"}],\"status\":\"Reviewing\",\"errors\":[\"lobcufpdznrbtcq\",\"jnqglhqgnu\",\"ooojywifsqe\"],\"tenantId\":\"agdfmglzlh\",\"offerGuid\":\"rifkwm\",\"nextTriggerTime\":\"2021-08-23T15:37:33Z\",\"lastTriggerTime\":\"2021-09-06T10:19:53Z\",\"subscriptions\":[\"nt\",\"cipaouaj\",\"s\",\"ucmpoyfd\"],\"complianceStatus\":{\"m365\":{\"passedCount\":934276292,\"failedCount\":2026517402,\"manualCount\":1139572680,\"notApplicableCount\":1727300200,\"pendingCount\":1891405510}},\"storageInfo\":{\"subscriptionId\":\"qs\",\"resourceGroup\":\"eupewnwreitjz\",\"accountName\":\"lusarh\",\"location\":\"fcqhsmyurkd\"},\"certRecords\":[{\"offerGuid\":\"he\",\"certificationStatus\":\"k\",\"ingestionStatus\":\"txukcdmp\",\"controls\":[{\"controlId\":\"y\",\"controlStatus\":\"nzwuxzd\"},{\"controlId\":\"a\",\"controlStatus\":\"lhmwhfpmrqobm\"}]}],\"provisioningState\":\"Deleting\"},\"id\":\"nryrtihf\",\"name\":\"tijbpzvgnwzsymgl\",\"type\":\"uf\"}")
            .toObject(ReportResourceInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-03T12:42:14Z"), model.properties().triggerTime());
        Assertions.assertEquals("mhquvgjxp", model.properties().timeZone());
        Assertions.assertEquals("czmehmtzopbsp", model.properties().resources().get(0).resourceId());
        Assertions.assertEquals("upi", model.properties().resources().get(0).resourceType());
        Assertions.assertEquals("sybbejhph", model.properties().resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.AWS, model.properties().resources().get(0).resourceOrigin());
        Assertions.assertEquals("sx", model.properties().resources().get(0).accountId());
        Assertions.assertEquals("rifkwm", model.properties().offerGuid());
        Assertions.assertEquals("qs", model.properties().storageInfo().subscriptionId());
        Assertions.assertEquals("eupewnwreitjz", model.properties().storageInfo().resourceGroup());
        Assertions.assertEquals("lusarh", model.properties().storageInfo().accountName());
        Assertions.assertEquals("fcqhsmyurkd", model.properties().storageInfo().location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReportResourceInner model = new ReportResourceInner()
            .withProperties(new ReportProperties().withTriggerTime(OffsetDateTime.parse("2021-01-03T12:42:14Z"))
                .withTimeZone("mhquvgjxp")
                .withResources(Arrays.asList(
                    new ResourceMetadata().withResourceId("czmehmtzopbsp")
                        .withResourceType("upi")
                        .withResourceKind("sybbejhph")
                        .withResourceOrigin(ResourceOrigin.AWS)
                        .withAccountId("sx"),
                    new ResourceMetadata().withResourceId("obhdxbmtqioqjze")
                        .withResourceType("bmufpown")
                        .withResourceKind("zhwlrxy")
                        .withResourceOrigin(ResourceOrigin.AWS)
                        .withAccountId("qijgkd")))
                .withOfferGuid("rifkwm")
                .withStorageInfo(new StorageInfo().withSubscriptionId("qs")
                    .withResourceGroup("eupewnwreitjz")
                    .withAccountName("lusarh")
                    .withLocation("fcqhsmyurkd")));
        model = BinaryData.fromObject(model).toObject(ReportResourceInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-03T12:42:14Z"), model.properties().triggerTime());
        Assertions.assertEquals("mhquvgjxp", model.properties().timeZone());
        Assertions.assertEquals("czmehmtzopbsp", model.properties().resources().get(0).resourceId());
        Assertions.assertEquals("upi", model.properties().resources().get(0).resourceType());
        Assertions.assertEquals("sybbejhph", model.properties().resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.AWS, model.properties().resources().get(0).resourceOrigin());
        Assertions.assertEquals("sx", model.properties().resources().get(0).accountId());
        Assertions.assertEquals("rifkwm", model.properties().offerGuid());
        Assertions.assertEquals("qs", model.properties().storageInfo().subscriptionId());
        Assertions.assertEquals("eupewnwreitjz", model.properties().storageInfo().resourceGroup());
        Assertions.assertEquals("lusarh", model.properties().storageInfo().accountName());
        Assertions.assertEquals("fcqhsmyurkd", model.properties().storageInfo().location());
    }
}
