// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.ScopingConfigurationResourceInner;
import com.azure.resourcemanager.appcomplianceautomation.models.ScopingAnswer;
import com.azure.resourcemanager.appcomplianceautomation.models.ScopingConfigurationProperties;
import com.azure.resourcemanager.appcomplianceautomation.models.ScopingConfigurationResourceListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScopingConfigurationResourceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScopingConfigurationResourceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"answers\":[{\"questionId\":\"nwbmeh\",\"answers\":[\"eyvjusrtslhspkde\",\"maofmxagkv\"]}],\"provisioningState\":\"Canceled\"},\"id\":\"mqkrhahvljuahaqu\",\"name\":\"c\",\"type\":\"hmdua\"}],\"nextLink\":\"exq\"}")
            .toObject(ScopingConfigurationResourceListResult.class);
        Assertions.assertEquals("nwbmeh", model.value().get(0).properties().answers().get(0).questionId());
        Assertions.assertEquals("eyvjusrtslhspkde",
            model.value().get(0).properties().answers().get(0).answers().get(0));
        Assertions.assertEquals("exq", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScopingConfigurationResourceListResult model = new ScopingConfigurationResourceListResult().withValue(
            Arrays.asList(new ScopingConfigurationResourceInner().withProperties(new ScopingConfigurationProperties()
                .withAnswers(Arrays.asList(new ScopingAnswer().withQuestionId("nwbmeh")
                    .withAnswers(Arrays.asList("eyvjusrtslhspkde", "maofmxagkv")))))))
            .withNextLink("exq");
        model = BinaryData.fromObject(model).toObject(ScopingConfigurationResourceListResult.class);
        Assertions.assertEquals("nwbmeh", model.value().get(0).properties().answers().get(0).questionId());
        Assertions.assertEquals("eyvjusrtslhspkde",
            model.value().get(0).properties().answers().get(0).answers().get(0));
        Assertions.assertEquals("exq", model.nextLink());
    }
}
