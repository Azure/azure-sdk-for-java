// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcomplianceautomation.models.ScopingAnswer;
import com.azure.resourcemanager.appcomplianceautomation.models.ScopingConfigurationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScopingConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScopingConfigurationProperties model = BinaryData.fromString(
            "{\"answers\":[{\"questionId\":\"ooxdjebwpuc\",\"answers\":[\"fvovbvmeuecivy\",\"zceuojgjrw\"]},{\"questionId\":\"ueiotwmcdyt\",\"answers\":[\"wit\"]},{\"questionId\":\"nrjawgqwg\",\"answers\":[\"ni\",\"kxfbkpycgklwndn\",\"jdauwhvy\"]}],\"provisioningState\":\"Failed\"}")
            .toObject(ScopingConfigurationProperties.class);
        Assertions.assertEquals("ooxdjebwpuc", model.answers().get(0).questionId());
        Assertions.assertEquals("fvovbvmeuecivy", model.answers().get(0).answers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScopingConfigurationProperties model = new ScopingConfigurationProperties().withAnswers(Arrays.asList(
            new ScopingAnswer().withQuestionId("ooxdjebwpuc")
                .withAnswers(Arrays.asList("fvovbvmeuecivy", "zceuojgjrw")),
            new ScopingAnswer().withQuestionId("ueiotwmcdyt").withAnswers(Arrays.asList("wit")),
            new ScopingAnswer().withQuestionId("nrjawgqwg")
                .withAnswers(Arrays.asList("ni", "kxfbkpycgklwndn", "jdauwhvy"))));
        model = BinaryData.fromObject(model).toObject(ScopingConfigurationProperties.class);
        Assertions.assertEquals("ooxdjebwpuc", model.answers().get(0).questionId());
        Assertions.assertEquals("fvovbvmeuecivy", model.answers().get(0).answers().get(0));
    }
}
