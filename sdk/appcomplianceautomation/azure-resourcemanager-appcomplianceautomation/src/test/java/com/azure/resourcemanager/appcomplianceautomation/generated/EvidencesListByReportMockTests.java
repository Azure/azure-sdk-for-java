// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceResource;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EvidencesListByReportMockTests {
    @Test
    public void testListByReport() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"evidenceType\":\"Data\",\"filePath\":\"xnmwmqtibxyijddt\",\"extraData\":\"cttadi\",\"controlId\":\"eukmr\",\"responsibilityId\":\"eekpndz\",\"provisioningState\":\"Fixing\"},\"id\":\"udqmeqwigpibudq\",\"name\":\"yxeb\",\"type\":\"ybpmzznrtffyaq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<EvidenceResource> response = manager.evidences()
            .listByReport("pteecjme", "slstvasy", 1529136023, "xdza", "mweoohgu", "fuzboyjathwtzolb", "emwmdxmebwjs",
                "jpahlxvea", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(EvidenceType.DATA, response.iterator().next().properties().evidenceType());
        Assertions.assertEquals("xnmwmqtibxyijddt", response.iterator().next().properties().filePath());
        Assertions.assertEquals("cttadi", response.iterator().next().properties().extraData());
        Assertions.assertEquals("eukmr", response.iterator().next().properties().controlId());
        Assertions.assertEquals("eekpndz", response.iterator().next().properties().responsibilityId());
    }
}
