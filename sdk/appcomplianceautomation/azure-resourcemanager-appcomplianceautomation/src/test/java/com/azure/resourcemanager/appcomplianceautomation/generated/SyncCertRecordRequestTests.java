// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcomplianceautomation.models.CertSyncRecord;
import com.azure.resourcemanager.appcomplianceautomation.models.ControlSyncRecord;
import com.azure.resourcemanager.appcomplianceautomation.models.SyncCertRecordRequest;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SyncCertRecordRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SyncCertRecordRequest model = BinaryData.fromString(
            "{\"certRecord\":{\"offerGuid\":\"mwctondzjluudfd\",\"certificationStatus\":\"gg\",\"ingestionStatus\":\"sb\",\"controls\":[{\"controlId\":\"vtgsei\",\"controlStatus\":\"fiufx\"},{\"controlId\":\"npirgnepttw\",\"controlStatus\":\"sniffc\"},{\"controlId\":\"qnrojlpijnkrxfrd\",\"controlStatus\":\"c\"},{\"controlId\":\"tizzronasxif\",\"controlStatus\":\"zq\"}]}}")
            .toObject(SyncCertRecordRequest.class);
        Assertions.assertEquals("mwctondzjluudfd", model.certRecord().offerGuid());
        Assertions.assertEquals("gg", model.certRecord().certificationStatus());
        Assertions.assertEquals("sb", model.certRecord().ingestionStatus());
        Assertions.assertEquals("vtgsei", model.certRecord().controls().get(0).controlId());
        Assertions.assertEquals("fiufx", model.certRecord().controls().get(0).controlStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SyncCertRecordRequest model
            = new SyncCertRecordRequest().withCertRecord(new CertSyncRecord().withOfferGuid("mwctondzjluudfd")
                .withCertificationStatus("gg")
                .withIngestionStatus("sb")
                .withControls(Arrays.asList(new ControlSyncRecord().withControlId("vtgsei").withControlStatus("fiufx"),
                    new ControlSyncRecord().withControlId("npirgnepttw").withControlStatus("sniffc"),
                    new ControlSyncRecord().withControlId("qnrojlpijnkrxfrd").withControlStatus("c"),
                    new ControlSyncRecord().withControlId("tizzronasxif").withControlStatus("zq"))));
        model = BinaryData.fromObject(model).toObject(SyncCertRecordRequest.class);
        Assertions.assertEquals("mwctondzjluudfd", model.certRecord().offerGuid());
        Assertions.assertEquals("gg", model.certRecord().certificationStatus());
        Assertions.assertEquals("sb", model.certRecord().ingestionStatus());
        Assertions.assertEquals("vtgsei", model.certRecord().controls().get(0).controlId());
        Assertions.assertEquals("fiufx", model.certRecord().controls().get(0).controlStatus());
    }
}
