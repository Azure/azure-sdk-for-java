// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcomplianceautomation.models.CertSyncRecord;
import com.azure.resourcemanager.appcomplianceautomation.models.ControlSyncRecord;
import com.azure.resourcemanager.appcomplianceautomation.models.SyncCertRecordRequest;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SyncCertRecordRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SyncCertRecordRequest model = BinaryData.fromString(
            "{\"certRecord\":{\"offerGuid\":\"fsnkymuctq\",\"certificationStatus\":\"fbebrjcxer\",\"ingestionStatus\":\"wutttxfvjrbi\",\"controls\":[{\"controlId\":\"epcyvahfnlj\",\"controlStatus\":\"qxj\"},{\"controlId\":\"ujqgidok\",\"controlStatus\":\"ljyoxgvcltb\"},{\"controlId\":\"ncghkje\",\"controlStatus\":\"zhbijhtxfv\"},{\"controlId\":\"bfs\",\"controlStatus\":\"nehmpvecx\"}]}}")
            .toObject(SyncCertRecordRequest.class);
        Assertions.assertEquals("fsnkymuctq", model.certRecord().offerGuid());
        Assertions.assertEquals("fbebrjcxer", model.certRecord().certificationStatus());
        Assertions.assertEquals("wutttxfvjrbi", model.certRecord().ingestionStatus());
        Assertions.assertEquals("epcyvahfnlj", model.certRecord().controls().get(0).controlId());
        Assertions.assertEquals("qxj", model.certRecord().controls().get(0).controlStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SyncCertRecordRequest model = new SyncCertRecordRequest().withCertRecord(new CertSyncRecord()
            .withOfferGuid("fsnkymuctq")
            .withCertificationStatus("fbebrjcxer")
            .withIngestionStatus("wutttxfvjrbi")
            .withControls(Arrays.asList(new ControlSyncRecord().withControlId("epcyvahfnlj").withControlStatus("qxj"),
                new ControlSyncRecord().withControlId("ujqgidok").withControlStatus("ljyoxgvcltb"),
                new ControlSyncRecord().withControlId("ncghkje").withControlStatus("zhbijhtxfv"),
                new ControlSyncRecord().withControlId("bfs").withControlStatus("nehmpvecx"))));
        model = BinaryData.fromObject(model).toObject(SyncCertRecordRequest.class);
        Assertions.assertEquals("fsnkymuctq", model.certRecord().offerGuid());
        Assertions.assertEquals("fbebrjcxer", model.certRecord().certificationStatus());
        Assertions.assertEquals("wutttxfvjrbi", model.certRecord().ingestionStatus());
        Assertions.assertEquals("epcyvahfnlj", model.certRecord().controls().get(0).controlId());
        Assertions.assertEquals("qxj", model.certRecord().controls().get(0).controlStatus());
    }
}
