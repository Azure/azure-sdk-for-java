// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.ScopingQuestions;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReportsGetScopingQuestionsWithResponseMockTests {
    @Test
    public void testGetScopingQuestionsWithResponse() throws Exception {
        String responseStr
            = "{\"questions\":[{\"questionId\":\"ccknfnwmbtmvp\",\"superiorQuestionId\":\"jdhttzaefedxi\",\"inputType\":\"MultiSelectDropdownCustom\",\"optionIds\":[\"rphkmcrjdqnsdfz\",\"bg\",\"gkylkdghr\"],\"rules\":[\"PublisherVerification\",\"PublicSOX\",\"AzureApplication\"],\"showSubQuestionsValue\":\"wxezwzhok\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ScopingQuestions response
            = manager.reports().getScopingQuestionsWithResponse("ytdc", com.azure.core.util.Context.NONE).getValue();

    }
}
