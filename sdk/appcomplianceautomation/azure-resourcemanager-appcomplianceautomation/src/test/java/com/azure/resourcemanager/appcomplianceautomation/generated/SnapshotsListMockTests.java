// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.SnapshotResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"snapshotName\":\"tmcg\",\"createdAt\":\"2021-04-24T18:57:19Z\",\"provisioningState\":\"Succeeded\",\"reportProperties\":{\"triggerTime\":\"2021-01-11T18:38:59Z\",\"timeZone\":\"lnd\",\"resources\":[{\"resourceId\":\"tutmzl\",\"resourceType\":\"ojlvfhrbbpneqvc\",\"resourceKind\":\"yyurmochpprprsnm\",\"resourceOrigin\":\"AWS\",\"accountId\":\"zejnhl\"},{\"resourceId\":\"kpbz\",\"resourceType\":\"piljhahzvech\",\"resourceKind\":\"bnwieholew\",\"resourceOrigin\":\"Azure\",\"accountId\":\"ubwefqs\"},{\"resourceId\":\"ap\",\"resourceType\":\"tf\",\"resourceKind\":\"rqwexjkmfxapjwog\",\"resourceOrigin\":\"AWS\",\"accountId\":\"bpudcdab\"},{\"resourceId\":\"qwpwyawbzasqbuc\",\"resourceType\":\"gkyexaoguy\",\"resourceKind\":\"p\",\"resourceOrigin\":\"GCP\",\"accountId\":\"ault\"}],\"status\":\"Active\",\"errors\":[\"mfqwa\"],\"tenantId\":\"nqnm\",\"offerGuid\":\"ngz\",\"nextTriggerTime\":\"2021-03-07T06:59:29Z\",\"lastTriggerTime\":\"2021-06-22T01:10:17Z\",\"subscriptions\":[\"wgnyfusfzsvtui\"],\"complianceStatus\":{\"m365\":{\"passedCount\":566108141,\"failedCount\":1502257649,\"manualCount\":961484418,\"notApplicableCount\":388714674,\"pendingCount\":32509021}},\"storageInfo\":{\"subscriptionId\":\"ryxynqnzrd\",\"resourceGroup\":\"ovw\",\"accountName\":\"nptgoeiybba\",\"location\":\"fhvfsl\"},\"certRecords\":[{\"offerGuid\":\"jlrigjkskyrioovz\",\"certificationStatus\":\"sxwaabzm\",\"ingestionStatus\":\"rygznmmaxriz\",\"controls\":[{},{}]},{\"offerGuid\":\"gopxlhslnelxie\",\"certificationStatus\":\"ynllxe\",\"ingestionStatus\":\"crojp\",\"controls\":[{}]}],\"provisioningState\":\"Verifying\"},\"complianceResults\":[{\"complianceName\":\"tifdwfmvi\",\"categories\":[{}]},{\"complianceName\":\"jbt\",\"categories\":[{}]},{\"complianceName\":\"aglkafhon\",\"categories\":[{},{}]},{\"complianceName\":\"eickpz\",\"categories\":[{}]}]},\"id\":\"pmxelnwcltyje\",\"name\":\"ex\",\"type\":\"mlfmkqs\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SnapshotResource> response = manager.snapshots()
            .list("owxeqocljmy", "vkzqk", 1858033886, "eokbze", "ezrxcczurtleipqx", "kwv", "gnzvdfbzdixzm",
                "pnodawopqhe", com.azure.core.util.Context.NONE);

    }
}
