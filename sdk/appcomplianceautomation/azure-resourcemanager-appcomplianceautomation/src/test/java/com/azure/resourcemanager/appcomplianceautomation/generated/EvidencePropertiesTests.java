// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceProperties;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceType;
import org.junit.jupiter.api.Assertions;

public final class EvidencePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EvidenceProperties model = BinaryData.fromString(
            "{\"evidenceType\":\"File\",\"filePath\":\"rkjpvdwxfzwii\",\"extraData\":\"zjb\",\"controlId\":\"zsxjrkambtrneg\",\"responsibilityId\":\"nvuqeqvldspa\",\"provisioningState\":\"Updating\"}")
            .toObject(EvidenceProperties.class);
        Assertions.assertEquals(EvidenceType.FILE, model.evidenceType());
        Assertions.assertEquals("rkjpvdwxfzwii", model.filePath());
        Assertions.assertEquals("zjb", model.extraData());
        Assertions.assertEquals("zsxjrkambtrneg", model.controlId());
        Assertions.assertEquals("nvuqeqvldspa", model.responsibilityId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EvidenceProperties model = new EvidenceProperties().withEvidenceType(EvidenceType.FILE)
            .withFilePath("rkjpvdwxfzwii")
            .withExtraData("zjb")
            .withControlId("zsxjrkambtrneg")
            .withResponsibilityId("nvuqeqvldspa");
        model = BinaryData.fromObject(model).toObject(EvidenceProperties.class);
        Assertions.assertEquals(EvidenceType.FILE, model.evidenceType());
        Assertions.assertEquals("rkjpvdwxfzwii", model.filePath());
        Assertions.assertEquals("zjb", model.extraData());
        Assertions.assertEquals("zsxjrkambtrneg", model.controlId());
        Assertions.assertEquals("nvuqeqvldspa", model.responsibilityId());
    }
}
