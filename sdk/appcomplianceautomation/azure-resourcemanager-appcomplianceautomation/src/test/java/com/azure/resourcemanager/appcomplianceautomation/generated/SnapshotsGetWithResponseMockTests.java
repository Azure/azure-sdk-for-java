// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.SnapshotResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"snapshotName\":\"amwabzxrvxcushsp\",\"createdAt\":\"2021-06-11T01:35Z\",\"provisioningState\":\"Verifying\",\"reportProperties\":{\"triggerTime\":\"2021-04-04T03:00:41Z\",\"timeZone\":\"asflvg\",\"resources\":[{\"resourceId\":\"zwywako\",\"resourceType\":\"knsmjblmljhlnymz\",\"resourceKind\":\"qyryuzcbmqqvxm\",\"resourceOrigin\":\"Azure\",\"accountId\":\"tayx\"},{\"resourceId\":\"nsup\",\"resourceType\":\"jlzqnhc\",\"resourceKind\":\"ql\",\"resourceOrigin\":\"Azure\",\"accountId\":\"ibg\"}],\"status\":\"Active\",\"errors\":[\"fyq\",\"nmpqoxwdofdb\",\"iqxeiiqbimht\",\"wwinhehf\"],\"tenantId\":\"ofvwbcb\",\"offerGuid\":\"mbnkb\",\"nextTriggerTime\":\"2021-10-03T15:33:29Z\",\"lastTriggerTime\":\"2021-02-16T20:23:19Z\",\"subscriptions\":[\"ivqiheb\",\"tswbzuwfmd\"],\"complianceStatus\":{\"m365\":{\"passedCount\":1298087244,\"failedCount\":1708780540,\"manualCount\":1824105790,\"notApplicableCount\":2034109305,\"pendingCount\":2073266063}},\"storageInfo\":{\"subscriptionId\":\"sdjubggbqigkxkbs\",\"resourceGroup\":\"gak\",\"accountName\":\"cyrcmjdmspo\",\"location\":\"pv\"},\"certRecords\":[{\"offerGuid\":\"lniofrzgbzje\",\"certificationStatus\":\"st\",\"ingestionStatus\":\"nlvxbcuii\",\"controls\":[{},{}]},{\"offerGuid\":\"wfansnvpdi\",\"certificationStatus\":\"ikostbzbkiwbuqny\",\"ingestionStatus\":\"hzfylsgcrpfbc\",\"controls\":[{},{}]},{\"offerGuid\":\"zcezelfwyfwl\",\"certificationStatus\":\"jwetnpsihcla\",\"ingestionStatus\":\"va\",\"controls\":[{}]}],\"provisioningState\":\"Deleting\"},\"complianceResults\":[{\"complianceName\":\"ztcmwq\",\"categories\":[{},{},{}]},{\"complianceName\":\"xwaxfewzjkj\",\"categories\":[{},{},{}]},{\"complianceName\":\"eqvhpsylkk\",\"categories\":[{},{}]}]},\"id\":\"ffmbmxzjrg\",\"name\":\"wwp\",\"type\":\"jx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SnapshotResource response
            = manager.snapshots().getWithResponse("azuawx", "z", com.azure.core.util.Context.NONE).getValue();

    }
}
