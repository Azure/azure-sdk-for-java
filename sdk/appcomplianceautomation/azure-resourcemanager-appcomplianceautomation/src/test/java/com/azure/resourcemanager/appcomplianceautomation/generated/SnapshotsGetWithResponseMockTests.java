// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.SnapshotResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"snapshotName\":\"waxfewzjkj\",\"createdAt\":\"2021-10-18T01:04:41Z\",\"provisioningState\":\"Deleting\",\"reportProperties\":{\"triggerTime\":\"2021-03-23T11:04:46Z\",\"timeZone\":\"hpsylkksh\",\"resources\":[{\"resourceId\":\"ffmbmxzjrg\",\"resourceType\":\"wpgj\",\"resourceKind\":\"nptfujgi\",\"resourceOrigin\":\"AWS\",\"accountId\":\"o\"},{\"resourceId\":\"pttaqutd\",\"resourceType\":\"emxswvruu\",\"resourceKind\":\"zjgehkfkim\",\"resourceOrigin\":\"GCP\",\"accountId\":\"okffqyinljqepqwh\"}],\"status\":\"Disabled\",\"errors\":[\"stshiy\",\"gvelfc\"],\"tenantId\":\"uccbirdsvuw\",\"offerGuid\":\"b\",\"nextTriggerTime\":\"2021-10-09T11:33:20Z\",\"lastTriggerTime\":\"2021-02-11T07:52:46Z\",\"subscriptions\":[\"inwjizcilngh\",\"shejjtbxqm\"],\"complianceStatus\":{\"m365\":{\"passedCount\":1413912286,\"failedCount\":1164696958,\"manualCount\":1071855018,\"notApplicableCount\":749316543,\"pendingCount\":1381551038}},\"storageInfo\":{\"subscriptionId\":\"cucrwnamikze\",\"resourceGroup\":\"qbsms\",\"accountName\":\"iqg\",\"location\":\"hokzrusw\"},\"certRecords\":[{\"offerGuid\":\"zznvfbyc\",\"certificationStatus\":\"xjww\",\"ingestionStatus\":\"z\",\"controls\":[{},{},{},{}]},{\"offerGuid\":\"mxqhndvnoamldse\",\"certificationStatus\":\"ohdjhhflzok\",\"ingestionStatus\":\"ox\",\"controls\":[{},{},{}]}],\"provisioningState\":\"Verifying\"},\"complianceResults\":[{\"complianceName\":\"ltsxoatf\",\"categories\":[{},{}]},{\"complianceName\":\"npbs\",\"categories\":[{}]}]},\"id\":\"loccsrmozihm\",\"name\":\"pgawtxxpkyjcxcjx\",\"type\":\"rytfmpcycil\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SnapshotResource response = manager.snapshots()
            .getWithResponse("hclafzvaylptrs", "qwztcmwqkc", com.azure.core.util.Context.NONE)
            .getValue();

    }
}
