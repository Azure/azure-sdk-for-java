// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportResource;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceOrigin;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReportsListByTenantMockTests {
    @Test
    public void testListByTenant() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"triggerTime\":\"2021-06-17T04:22:53Z\",\"timeZone\":\"ypundmbxhugc\",\"resources\":[{\"resourceId\":\"k\",\"resourceType\":\"lgorb\",\"resourceKind\":\"tp\",\"resourceOrigin\":\"Azure\",\"accountId\":\"fjltfvnzcyjtotp\"},{\"resourceId\":\"opv\",\"resourceType\":\"dbzqgqqihed\",\"resourceKind\":\"qwthmky\",\"resourceOrigin\":\"GCP\",\"accountId\":\"sihsgqcwdhohsd\"}],\"status\":\"Failed\",\"errors\":[\"sufco\"],\"tenantId\":\"xbzlmc\",\"offerGuid\":\"apcvhdbe\",\"nextTriggerTime\":\"2021-02-16T08:02:42Z\",\"lastTriggerTime\":\"2021-10-19T03:06:18Z\",\"subscriptions\":[\"skonqzinkf\",\"bgbzbowxeqoclj\",\"ygvkzqkjj\"],\"complianceStatus\":{\"m365\":{\"passedCount\":1401279651,\"failedCount\":1236103657,\"manualCount\":50022372,\"notApplicableCount\":2083826558,\"pendingCount\":2052140485}},\"storageInfo\":{\"subscriptionId\":\"rtle\",\"resourceGroup\":\"q\",\"accountName\":\"kwv\",\"location\":\"nzvdfbzdixzmq\"},\"certRecords\":[{\"offerGuid\":\"awopqh\",\"certificationStatus\":\"jptmcgsbost\",\"ingestionStatus\":\"lnd\",\"controls\":[{},{}]},{\"offerGuid\":\"tmzlbiojlv\",\"certificationStatus\":\"rbbpneqvcwwyy\",\"ingestionStatus\":\"mochpprprsnmok\",\"controls\":[{},{}]},{\"offerGuid\":\"jnhlbkpbzpcpiljh\",\"certificationStatus\":\"zv\",\"ingestionStatus\":\"h\",\"controls\":[{},{},{}]},{\"offerGuid\":\"wieholewjwiu\",\"certificationStatus\":\"wefqsfapaqtferr\",\"ingestionStatus\":\"ex\",\"controls\":[{},{},{},{}]}],\"provisioningState\":\"Failed\"},\"id\":\"pjwogqqno\",\"name\":\"pud\",\"type\":\"dabtqwp\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ReportResource> response = manager.reports()
            .listByTenant("mexiitdfuxt", 1550177536, "siibmiybnnustgn", "jh", "mgixhcmavmqfou", "or", "cgyypro",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OffsetDateTime.parse("2021-06-17T04:22:53Z"),
            response.iterator().next().properties().triggerTime());
        Assertions.assertEquals("ypundmbxhugc", response.iterator().next().properties().timeZone());
        Assertions.assertEquals("k", response.iterator().next().properties().resources().get(0).resourceId());
        Assertions.assertEquals("lgorb", response.iterator().next().properties().resources().get(0).resourceType());
        Assertions.assertEquals("tp", response.iterator().next().properties().resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.AZURE,
            response.iterator().next().properties().resources().get(0).resourceOrigin());
        Assertions.assertEquals("fjltfvnzcyjtotp",
            response.iterator().next().properties().resources().get(0).accountId());
        Assertions.assertEquals("apcvhdbe", response.iterator().next().properties().offerGuid());
        Assertions.assertEquals("rtle", response.iterator().next().properties().storageInfo().subscriptionId());
        Assertions.assertEquals("q", response.iterator().next().properties().storageInfo().resourceGroup());
        Assertions.assertEquals("kwv", response.iterator().next().properties().storageInfo().accountName());
        Assertions.assertEquals("nzvdfbzdixzmq", response.iterator().next().properties().storageInfo().location());
    }
}
