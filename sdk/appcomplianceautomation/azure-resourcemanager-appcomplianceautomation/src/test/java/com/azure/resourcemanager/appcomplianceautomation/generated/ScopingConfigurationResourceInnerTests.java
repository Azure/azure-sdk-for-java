// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.ScopingConfigurationResourceInner;
import com.azure.resourcemanager.appcomplianceautomation.models.ScopingAnswer;
import com.azure.resourcemanager.appcomplianceautomation.models.ScopingConfigurationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScopingConfigurationResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScopingConfigurationResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"answers\":[{\"questionId\":\"icc\",\"answers\":[\"wfscjfn\",\"nszqujiz\",\"voqyt\",\"byowbblgyavutp\"]},{\"questionId\":\"hjoxo\",\"answers\":[\"msksbp\",\"mlqoljx\"]},{\"questionId\":\"cgxxlxs\",\"answers\":[\"gcvizqzdwlvwlyou\",\"fgfb\"]},{\"questionId\":\"jub\",\"answers\":[\"hgkfmin\"]}],\"provisioningState\":\"Fixing\"},\"id\":\"zfttsttktlahb\",\"name\":\"actxtgzukxitm\",\"type\":\"qtgqqqxhrnxr\"}")
            .toObject(ScopingConfigurationResourceInner.class);
        Assertions.assertEquals("icc", model.properties().answers().get(0).questionId());
        Assertions.assertEquals("wfscjfn", model.properties().answers().get(0).answers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScopingConfigurationResourceInner model = new ScopingConfigurationResourceInner()
            .withProperties(new ScopingConfigurationProperties().withAnswers(Arrays.asList(
                new ScopingAnswer().withQuestionId("icc")
                    .withAnswers(Arrays.asList("wfscjfn", "nszqujiz", "voqyt", "byowbblgyavutp")),
                new ScopingAnswer().withQuestionId("hjoxo").withAnswers(Arrays.asList("msksbp", "mlqoljx")),
                new ScopingAnswer().withQuestionId("cgxxlxs").withAnswers(Arrays.asList("gcvizqzdwlvwlyou", "fgfb")),
                new ScopingAnswer().withQuestionId("jub").withAnswers(Arrays.asList("hgkfmin")))));
        model = BinaryData.fromObject(model).toObject(ScopingConfigurationResourceInner.class);
        Assertions.assertEquals("icc", model.properties().answers().get(0).questionId());
        Assertions.assertEquals("wfscjfn", model.properties().answers().get(0).answers().get(0));
    }
}
