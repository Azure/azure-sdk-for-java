// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.EvidenceResourceInner;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceProperties;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceResource;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EvidencesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"evidenceType\":\"File\",\"filePath\":\"mgbro\",\"extraData\":\"ddbhf\",\"controlId\":\"fpazjzoywjxhpd\",\"responsibilityId\":\"ontacnpq\",\"provisioningState\":\"Deleting\"},\"id\":\"tuevrh\",\"name\":\"ljyoogwx\",\"type\":\"nsduugwbsre\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        EvidenceResource response = manager.evidences()
            .createOrUpdateWithResponse("qyggagfl", "lgmtrwahzjmucf",
                new EvidenceResourceInner().withProperties(new EvidenceProperties().withEvidenceType(EvidenceType.FILE)
                    .withFilePath("r")
                    .withExtraData("rohkpigqfusu")
                    .withControlId("zmkw")
                    .withResponsibilityId("snoxaxmqeqa")),
                "narfdlpukhpyrn", "izjcpeog", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(EvidenceType.FILE, response.properties().evidenceType());
        Assertions.assertEquals("mgbro", response.properties().filePath());
        Assertions.assertEquals("ddbhf", response.properties().extraData());
        Assertions.assertEquals("fpazjzoywjxhpd", response.properties().controlId());
        Assertions.assertEquals("ontacnpq", response.properties().responsibilityId());
    }
}
