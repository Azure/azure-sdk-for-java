// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.ReportResourceInner;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportProperties;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportResource;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceMetadata;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceOrigin;
import com.azure.resourcemanager.appcomplianceautomation.models.StorageInfo;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReportsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"triggerTime\":\"2021-08-09T21:38:20Z\",\"timeZone\":\"es\",\"resources\":[{\"resourceId\":\"dlpagzrcxfail\",\"resourceType\":\"xwmdboxd\",\"resourceKind\":\"sftufqobrjlna\",\"resourceOrigin\":\"Azure\",\"accountId\":\"kknhxkizvytnrzv\"},{\"resourceId\":\"lj\",\"resourceType\":\"aeranokqgukkjqnv\",\"resourceKind\":\"oylaxxul\",\"resourceOrigin\":\"GCP\",\"accountId\":\"dosfjbjsvgjrw\"}],\"status\":\"Disabled\",\"errors\":[\"cytdclxgccknfnwm\"],\"tenantId\":\"mvpdvjdhttzaef\",\"offerGuid\":\"x\",\"nextTriggerTime\":\"2021-02-09T11:19:45Z\",\"lastTriggerTime\":\"2021-02-26T01:00:55Z\",\"subscriptions\":[\"k\"],\"complianceStatus\":{\"m365\":{\"passedCount\":903968902,\"failedCount\":841583452,\"manualCount\":1496434745,\"notApplicableCount\":949510054,\"pendingCount\":320306874}},\"storageInfo\":{\"subscriptionId\":\"gkylkdghr\",\"resourceGroup\":\"uutlwxezwzhok\",\"accountName\":\"wnhhtqlgehgppip\",\"location\":\"hpfeoajvgcxtxjc\"},\"certRecords\":[{\"offerGuid\":\"fidltug\",\"certificationStatus\":\"esmkssjhoiftxfkf\",\"ingestionStatus\":\"gpr\",\"controls\":[{},{},{}]},{\"offerGuid\":\"llu\",\"certificationStatus\":\"iqtgdqoh\",\"ingestionStatus\":\"wsldrizetpwbr\",\"controls\":[{},{},{},{}]},{\"offerGuid\":\"ibph\",\"certificationStatus\":\"zmizakakan\",\"ingestionStatus\":\"p\",\"controls\":[{},{}]},{\"offerGuid\":\"ha\",\"certificationStatus\":\"ylhjlm\",\"ingestionStatus\":\"y\",\"controls\":[{},{}]}],\"provisioningState\":\"Succeeded\"},\"id\":\"sopteecj\",\"name\":\"eislstvasylwx\",\"type\":\"zaum\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ReportResource response = manager.reports()
            .createOrUpdate("vcpwpgclrc",
                new ReportResourceInner()
                    .withProperties(new ReportProperties().withTriggerTime(OffsetDateTime.parse("2021-06-07T01:59:28Z"))
                        .withTimeZone("tso")
                        .withResources(Arrays.asList(
                            new ResourceMetadata().withResourceId("rkenx")
                                .withResourceType("yyefrpmpdnqqs")
                                .withResourceKind("waoqvmmb")
                                .withResourceOrigin(ResourceOrigin.AWS)
                                .withAccountId("rtql"),
                            new ResourceMetadata().withResourceId("zmegnitgvk")
                                .withResourceType("zyqdrfegcealzx")
                                .withResourceKind("cansymoyqhlwigd")
                                .withResourceOrigin(ResourceOrigin.AWS)
                                .withAccountId("bxgomfaj"),
                            new ResourceMetadata().withResourceId("wasqvdaeyyg")
                                .withResourceType("akjsqz")
                                .withResourceKind("bezkgimsidxasic")
                                .withResourceOrigin(ResourceOrigin.AZURE)
                                .withAccountId("vjskgfmoc"),
                            new ResourceMetadata().withResourceId("ah")
                                .withResourceType("gat")
                                .withResourceKind("a")
                                .withResourceOrigin(ResourceOrigin.AWS)
                                .withAccountId("jhhn")))
                        .withOfferGuid("mjbnk")
                        .withStorageInfo(new StorageInfo().withSubscriptionId("mx")
                            .withResourceGroup("ekkkzd")
                            .withAccountName("tkgdojbmxva")
                            .withLocation("efdeesve"))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OffsetDateTime.parse("2021-08-09T21:38:20Z"), response.properties().triggerTime());
        Assertions.assertEquals("es", response.properties().timeZone());
        Assertions.assertEquals("dlpagzrcxfail", response.properties().resources().get(0).resourceId());
        Assertions.assertEquals("xwmdboxd", response.properties().resources().get(0).resourceType());
        Assertions.assertEquals("sftufqobrjlna", response.properties().resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.AZURE, response.properties().resources().get(0).resourceOrigin());
        Assertions.assertEquals("kknhxkizvytnrzv", response.properties().resources().get(0).accountId());
        Assertions.assertEquals("x", response.properties().offerGuid());
        Assertions.assertEquals("gkylkdghr", response.properties().storageInfo().subscriptionId());
        Assertions.assertEquals("uutlwxezwzhok", response.properties().storageInfo().resourceGroup());
        Assertions.assertEquals("wnhhtqlgehgppip", response.properties().storageInfo().accountName());
        Assertions.assertEquals("hpfeoajvgcxtxjc", response.properties().storageInfo().location());
    }
}
