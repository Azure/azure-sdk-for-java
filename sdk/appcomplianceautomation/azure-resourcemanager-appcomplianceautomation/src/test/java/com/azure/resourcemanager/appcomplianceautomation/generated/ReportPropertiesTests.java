// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportProperties;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceMetadata;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceOrigin;
import com.azure.resourcemanager.appcomplianceautomation.models.StorageInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ReportPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReportProperties model = BinaryData.fromString(
            "{\"triggerTime\":\"2021-01-13T20:02:55Z\",\"timeZone\":\"ngxlefgugnxkrxdq\",\"resources\":[{\"resourceId\":\"dt\",\"resourceType\":\"zrvqdr\",\"resourceKind\":\"hjybigehoqfbo\",\"resourceOrigin\":\"AWS\",\"accountId\":\"nyktzlcuiy\"}],\"status\":\"Active\",\"errors\":[\"gndrvynh\",\"gpphrcgyn\",\"ocpecfvmmco\",\"fsxlzevgbmqjqa\"],\"tenantId\":\"y\",\"offerGuid\":\"ivkwlzuvccfwnfnb\",\"nextTriggerTime\":\"2021-04-04T07:21:26Z\",\"lastTriggerTime\":\"2021-04-16T12:59:12Z\",\"subscriptions\":[\"ebxetqgtzxdp\"],\"complianceStatus\":{\"m365\":{\"passedCount\":978126196,\"failedCount\":1208210765,\"manualCount\":588288126,\"notApplicableCount\":1251275830,\"pendingCount\":1993000932}},\"storageInfo\":{\"subscriptionId\":\"wsubisnja\",\"resourceGroup\":\"mngnzscxaqw\",\"accountName\":\"chcbonqvpkvlrxnj\",\"location\":\"seiphe\"},\"certRecords\":[{\"offerGuid\":\"keyyi\",\"certificationStatus\":\"jbdlwtgrhpdjpju\",\"ingestionStatus\":\"sxazjpq\",\"controls\":[{\"controlId\":\"alhbx\",\"controlStatus\":\"e\"}]},{\"offerGuid\":\"zzvdudgwds\",\"certificationStatus\":\"hotwmcynpwlbjnp\",\"ingestionStatus\":\"cftadeh\",\"controls\":[{\"controlId\":\"yfsoppu\",\"controlStatus\":\"esnzwde\"},{\"controlId\":\"avo\",\"controlStatus\":\"zdmohctbqvu\"}]}],\"provisioningState\":\"Failed\"}")
            .toObject(ReportProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-13T20:02:55Z"), model.triggerTime());
        Assertions.assertEquals("ngxlefgugnxkrxdq", model.timeZone());
        Assertions.assertEquals("dt", model.resources().get(0).resourceId());
        Assertions.assertEquals("zrvqdr", model.resources().get(0).resourceType());
        Assertions.assertEquals("hjybigehoqfbo", model.resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.AWS, model.resources().get(0).resourceOrigin());
        Assertions.assertEquals("nyktzlcuiy", model.resources().get(0).accountId());
        Assertions.assertEquals("ivkwlzuvccfwnfnb", model.offerGuid());
        Assertions.assertEquals("wsubisnja", model.storageInfo().subscriptionId());
        Assertions.assertEquals("mngnzscxaqw", model.storageInfo().resourceGroup());
        Assertions.assertEquals("chcbonqvpkvlrxnj", model.storageInfo().accountName());
        Assertions.assertEquals("seiphe", model.storageInfo().location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReportProperties model = new ReportProperties().withTriggerTime(OffsetDateTime.parse("2021-01-13T20:02:55Z"))
            .withTimeZone("ngxlefgugnxkrxdq")
            .withResources(Arrays.asList(new ResourceMetadata().withResourceId("dt")
                .withResourceType("zrvqdr")
                .withResourceKind("hjybigehoqfbo")
                .withResourceOrigin(ResourceOrigin.AWS)
                .withAccountId("nyktzlcuiy")))
            .withOfferGuid("ivkwlzuvccfwnfnb")
            .withStorageInfo(new StorageInfo().withSubscriptionId("wsubisnja")
                .withResourceGroup("mngnzscxaqw")
                .withAccountName("chcbonqvpkvlrxnj")
                .withLocation("seiphe"));
        model = BinaryData.fromObject(model).toObject(ReportProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-13T20:02:55Z"), model.triggerTime());
        Assertions.assertEquals("ngxlefgugnxkrxdq", model.timeZone());
        Assertions.assertEquals("dt", model.resources().get(0).resourceId());
        Assertions.assertEquals("zrvqdr", model.resources().get(0).resourceType());
        Assertions.assertEquals("hjybigehoqfbo", model.resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.AWS, model.resources().get(0).resourceOrigin());
        Assertions.assertEquals("nyktzlcuiy", model.resources().get(0).accountId());
        Assertions.assertEquals("ivkwlzuvccfwnfnb", model.offerGuid());
        Assertions.assertEquals("wsubisnja", model.storageInfo().subscriptionId());
        Assertions.assertEquals("mngnzscxaqw", model.storageInfo().resourceGroup());
        Assertions.assertEquals("chcbonqvpkvlrxnj", model.storageInfo().accountName());
        Assertions.assertEquals("seiphe", model.storageInfo().location());
    }
}
