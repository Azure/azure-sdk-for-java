// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportProperties;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceMetadata;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceOrigin;
import com.azure.resourcemanager.appcomplianceautomation.models.StorageInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ReportPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReportProperties model = BinaryData.fromString(
            "{\"triggerTime\":\"2021-01-28T09:29:32Z\",\"timeZone\":\"zk\",\"resources\":[{\"resourceId\":\"dbihanufhfcbj\",\"resourceType\":\"a\",\"resourceKind\":\"th\",\"resourceOrigin\":\"GCP\",\"accountId\":\"bifpikxwczb\"},{\"resourceId\":\"scnpqxuhivy\",\"resourceType\":\"iwbybrkxvdumjg\",\"resourceKind\":\"fwvuk\",\"resourceOrigin\":\"Azure\",\"accountId\":\"dcc\"}],\"status\":\"Active\",\"errors\":[\"cnyejhkryhtnapcz\"],\"tenantId\":\"okjye\",\"offerGuid\":\"kvnipjoxz\",\"nextTriggerTime\":\"2021-09-07T17:28:25Z\",\"lastTriggerTime\":\"2021-08-30T22:34:51Z\",\"subscriptions\":[\"spodmail\",\"ydehoj\",\"yahux\",\"npmqnjaqwixjspro\"],\"complianceStatus\":{\"m365\":{\"passedCount\":1146923499,\"failedCount\":409698731,\"manualCount\":1721756309,\"notApplicableCount\":1903590590,\"pendingCount\":1508437812}},\"storageInfo\":{\"subscriptionId\":\"t\",\"resourceGroup\":\"mdvpjhulsu\",\"accountName\":\"mkjozkrwf\",\"location\":\"iodjp\"},\"certRecords\":[{\"offerGuid\":\"jdpvwryo\",\"certificationStatus\":\"soacctazakl\",\"ingestionStatus\":\"ahbc\",\"controls\":[{\"controlId\":\"dfdosygexp\",\"controlStatus\":\"jakhmsbzjh\"},{\"controlId\":\"zevdphlx\",\"controlStatus\":\"lthqtrgqjbp\"},{\"controlId\":\"fsinzgvfcjrwzoxx\",\"controlStatus\":\"felluwfzitonpe\"},{\"controlId\":\"pjkjlxofpdv\",\"controlStatus\":\"fxxypininmayhuy\"}]}],\"provisioningState\":\"Canceled\"}")
            .toObject(ReportProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-28T09:29:32Z"), model.triggerTime());
        Assertions.assertEquals("zk", model.timeZone());
        Assertions.assertEquals("dbihanufhfcbj", model.resources().get(0).resourceId());
        Assertions.assertEquals("a", model.resources().get(0).resourceType());
        Assertions.assertEquals("th", model.resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.GCP, model.resources().get(0).resourceOrigin());
        Assertions.assertEquals("bifpikxwczb", model.resources().get(0).accountId());
        Assertions.assertEquals("kvnipjoxz", model.offerGuid());
        Assertions.assertEquals("t", model.storageInfo().subscriptionId());
        Assertions.assertEquals("mdvpjhulsu", model.storageInfo().resourceGroup());
        Assertions.assertEquals("mkjozkrwf", model.storageInfo().accountName());
        Assertions.assertEquals("iodjp", model.storageInfo().location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReportProperties model = new ReportProperties().withTriggerTime(OffsetDateTime.parse("2021-01-28T09:29:32Z"))
            .withTimeZone("zk")
            .withResources(Arrays.asList(
                new ResourceMetadata().withResourceId("dbihanufhfcbj")
                    .withResourceType("a")
                    .withResourceKind("th")
                    .withResourceOrigin(ResourceOrigin.GCP)
                    .withAccountId("bifpikxwczb"),
                new ResourceMetadata().withResourceId("scnpqxuhivy")
                    .withResourceType("iwbybrkxvdumjg")
                    .withResourceKind("fwvuk")
                    .withResourceOrigin(ResourceOrigin.AZURE)
                    .withAccountId("dcc")))
            .withOfferGuid("kvnipjoxz")
            .withStorageInfo(new StorageInfo().withSubscriptionId("t")
                .withResourceGroup("mdvpjhulsu")
                .withAccountName("mkjozkrwf")
                .withLocation("iodjp"));
        model = BinaryData.fromObject(model).toObject(ReportProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-28T09:29:32Z"), model.triggerTime());
        Assertions.assertEquals("zk", model.timeZone());
        Assertions.assertEquals("dbihanufhfcbj", model.resources().get(0).resourceId());
        Assertions.assertEquals("a", model.resources().get(0).resourceType());
        Assertions.assertEquals("th", model.resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.GCP, model.resources().get(0).resourceOrigin());
        Assertions.assertEquals("bifpikxwczb", model.resources().get(0).accountId());
        Assertions.assertEquals("kvnipjoxz", model.offerGuid());
        Assertions.assertEquals("t", model.storageInfo().subscriptionId());
        Assertions.assertEquals("mdvpjhulsu", model.storageInfo().resourceGroup());
        Assertions.assertEquals("mkjozkrwf", model.storageInfo().accountName());
        Assertions.assertEquals("iodjp", model.storageInfo().location());
    }
}
