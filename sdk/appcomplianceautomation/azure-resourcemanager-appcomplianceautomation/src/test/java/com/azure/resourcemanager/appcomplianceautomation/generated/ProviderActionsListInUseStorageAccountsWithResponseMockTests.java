// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.ListInUseStorageAccountsRequest;
import com.azure.resourcemanager.appcomplianceautomation.models.ListInUseStorageAccountsResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProviderActionsListInUseStorageAccountsWithResponseMockTests {
    @Test
    public void testListInUseStorageAccountsWithResponse() throws Exception {
        String responseStr
            = "{\"storageAccountList\":[{\"subscriptionId\":\"uic\",\"resourceGroup\":\"vtrrmhwrbfdpyflu\",\"accountName\":\"vjglrocuyzlwhhme\",\"location\":\"ooclutnp\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ListInUseStorageAccountsResponse response = manager.providerActions()
            .listInUseStorageAccountsWithResponse(new ListInUseStorageAccountsRequest()
                .withSubscriptionIds(Arrays.asList("h", "k", "yych", "nsjlpjrtws")), com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("uic", response.storageAccountList().get(0).subscriptionId());
        Assertions.assertEquals("vtrrmhwrbfdpyflu", response.storageAccountList().get(0).resourceGroup());
        Assertions.assertEquals("vjglrocuyzlwhhme", response.storageAccountList().get(0).accountName());
        Assertions.assertEquals("ooclutnp", response.storageAccountList().get(0).location());
    }
}
