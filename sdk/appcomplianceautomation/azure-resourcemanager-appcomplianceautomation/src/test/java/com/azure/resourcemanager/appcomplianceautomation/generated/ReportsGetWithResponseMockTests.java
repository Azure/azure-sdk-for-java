// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportResource;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceOrigin;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReportsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"triggerTime\":\"2021-03-07T07:53:09Z\",\"timeZone\":\"oaimlnw\",\"resources\":[{\"resourceId\":\"aomylwea\",\"resourceType\":\"lcsethwwnpj\",\"resourceKind\":\"fz\",\"resourceOrigin\":\"GCP\",\"accountId\":\"hwahfbousn\"},{\"resourceId\":\"epgfew\",\"resourceType\":\"wlyxgncxyk\",\"resourceKind\":\"djhlimm\",\"resourceOrigin\":\"Azure\",\"accountId\":\"h\"},{\"resourceId\":\"cporxvxcjz\",\"resourceType\":\"izxfpxt\",\"resourceKind\":\"scjavftju\",\"resourceOrigin\":\"Azure\",\"accountId\":\"zkmtgguwpijrajci\"}],\"status\":\"Disabled\",\"errors\":[\"f\"],\"tenantId\":\"iwrxgkn\",\"offerGuid\":\"vyi\",\"nextTriggerTime\":\"2021-01-25T20:49:17Z\",\"lastTriggerTime\":\"2021-01-28T01:28:40Z\",\"subscriptions\":[\"pgshoxgsgbpfgz\",\"jtxvzflbqvgaq\",\"lgafcqusrdve\"],\"complianceStatus\":{\"m365\":{\"passedCount\":89870573,\"failedCount\":1022807330,\"manualCount\":2027553854,\"notApplicableCount\":1456659976,\"pendingCount\":1517277198}},\"storageInfo\":{\"subscriptionId\":\"vuzhyr\",\"resourceGroup\":\"wipmvekdxuk\",\"accountName\":\"gsjj\",\"location\":\"n\"},\"certRecords\":[{\"offerGuid\":\"etw\",\"certificationStatus\":\"hzjhf\",\"ingestionStatus\":\"hvvmuvgpmun\",\"controls\":[{}]},{\"offerGuid\":\"vmhfbuz\",\"certificationStatus\":\"ihsasb\",\"ingestionStatus\":\"dyp\",\"controls\":[{}]},{\"offerGuid\":\"emslynsqyrp\",\"certificationStatus\":\"obrltt\",\"ingestionStatus\":\"sjnygqdnfwqzdzgt\",\"controls\":[{},{}]}],\"provisioningState\":\"Verifying\"},\"id\":\"fhqlyvi\",\"name\":\"ouwivkxoyzunbixx\",\"type\":\"ti\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ReportResource response
            = manager.reports().getWithResponse("uktalhsnvkcdmxz", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals(OffsetDateTime.parse("2021-03-07T07:53:09Z"), response.properties().triggerTime());
        Assertions.assertEquals("oaimlnw", response.properties().timeZone());
        Assertions.assertEquals("aomylwea", response.properties().resources().get(0).resourceId());
        Assertions.assertEquals("lcsethwwnpj", response.properties().resources().get(0).resourceType());
        Assertions.assertEquals("fz", response.properties().resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.GCP, response.properties().resources().get(0).resourceOrigin());
        Assertions.assertEquals("hwahfbousn", response.properties().resources().get(0).accountId());
        Assertions.assertEquals("vyi", response.properties().offerGuid());
        Assertions.assertEquals("vuzhyr", response.properties().storageInfo().subscriptionId());
        Assertions.assertEquals("wipmvekdxuk", response.properties().storageInfo().resourceGroup());
        Assertions.assertEquals("gsjj", response.properties().storageInfo().accountName());
        Assertions.assertEquals("n", response.properties().storageInfo().location());
    }
}
