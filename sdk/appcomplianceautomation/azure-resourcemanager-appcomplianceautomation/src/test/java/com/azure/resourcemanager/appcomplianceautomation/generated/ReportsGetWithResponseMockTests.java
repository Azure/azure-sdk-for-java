// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportResource;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceOrigin;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReportsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"triggerTime\":\"2021-10-13T17:41:15Z\",\"timeZone\":\"cjdx\",\"resources\":[{\"resourceId\":\"bzo\",\"resourceType\":\"culapzwyrpgogtq\",\"resourceKind\":\"pnylb\",\"resourceOrigin\":\"Azure\",\"accountId\":\"lyjt\"},{\"resourceId\":\"vofqzhvfc\",\"resourceType\":\"yfm\",\"resourceKind\":\"uxrkjp\",\"resourceOrigin\":\"Azure\",\"accountId\":\"fzwiivwzjbhyz\"}],\"status\":\"Disabled\",\"errors\":[\"ambtrnegvm\",\"vuqeqvldspast\",\"bkkd\",\"flvestmjlxrrilo\"],\"tenantId\":\"peewchpxlkt\",\"offerGuid\":\"uziycsl\",\"nextTriggerTime\":\"2021-06-28T05:31:47Z\",\"lastTriggerTime\":\"2021-08-14T04:43:23Z\",\"subscriptions\":[\"cktyh\",\"tqedcgzulwm\",\"rqzz\",\"rjvpglydzgkrvqee\"],\"complianceStatus\":{\"m365\":{\"passedCount\":1014603209,\"failedCount\":1266268287,\"manualCount\":108809884,\"notApplicableCount\":479918870,\"pendingCount\":2045022432}},\"storageInfo\":{\"subscriptionId\":\"dmovzvfva\",\"resourceGroup\":\"zqadf\",\"accountName\":\"z\",\"location\":\"iglaecx\"},\"certRecords\":[{\"offerGuid\":\"cokpv\",\"certificationStatus\":\"lqtmldgxob\",\"ingestionStatus\":\"rclnpkc\",\"controls\":[{},{}]}],\"provisioningState\":\"Updating\"},\"id\":\"ykhyawfvjlboxqvk\",\"name\":\"lmxhomdyn\",\"type\":\"dwdigumb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ReportResource response
            = manager.reports().getWithResponse("msgeivsiykzk", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals(OffsetDateTime.parse("2021-10-13T17:41:15Z"), response.properties().triggerTime());
        Assertions.assertEquals("cjdx", response.properties().timeZone());
        Assertions.assertEquals("bzo", response.properties().resources().get(0).resourceId());
        Assertions.assertEquals("culapzwyrpgogtq", response.properties().resources().get(0).resourceType());
        Assertions.assertEquals("pnylb", response.properties().resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.AZURE, response.properties().resources().get(0).resourceOrigin());
        Assertions.assertEquals("lyjt", response.properties().resources().get(0).accountId());
        Assertions.assertEquals("uziycsl", response.properties().offerGuid());
        Assertions.assertEquals("dmovzvfva", response.properties().storageInfo().subscriptionId());
        Assertions.assertEquals("zqadf", response.properties().storageInfo().resourceGroup());
        Assertions.assertEquals("z", response.properties().storageInfo().accountName());
        Assertions.assertEquals("iglaecx", response.properties().storageInfo().location());
    }
}
