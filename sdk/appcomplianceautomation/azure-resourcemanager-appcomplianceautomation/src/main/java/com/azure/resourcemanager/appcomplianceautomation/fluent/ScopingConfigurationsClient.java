// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.ScopingConfigurationResourceInner;

/**
 * An instance of this class provides access to all the operations defined in ScopingConfigurationsClient.
 */
public interface ScopingConfigurationsClient {
    /**
     * Returns a list format of the singleton scopingConfiguration for a specified report.
     * 
     * @param reportName Report Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ScopingConfigurationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ScopingConfigurationResourceInner> list(String reportName);

    /**
     * Returns a list format of the singleton scopingConfiguration for a specified report.
     * 
     * @param reportName Report Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ScopingConfigurationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ScopingConfigurationResourceInner> list(String reportName, Context context);

    /**
     * Get the AppComplianceAutomation scoping configuration of the specific report.
     * 
     * @param reportName Report Name.
     * @param scopingConfigurationName The scoping configuration of the specific report.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the AppComplianceAutomation scoping configuration of the specific report along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScopingConfigurationResourceInner> getWithResponse(String reportName, String scopingConfigurationName,
        Context context);

    /**
     * Get the AppComplianceAutomation scoping configuration of the specific report.
     * 
     * @param reportName Report Name.
     * @param scopingConfigurationName The scoping configuration of the specific report.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the AppComplianceAutomation scoping configuration of the specific report.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScopingConfigurationResourceInner get(String reportName, String scopingConfigurationName);

    /**
     * Get the AppComplianceAutomation scoping configuration of the specific report.
     * 
     * @param reportName Report Name.
     * @param scopingConfigurationName The scoping configuration of the specific report.
     * @param properties Parameters for the create or update operation, this is a singleton resource, so please make
     * sure you're using 'default' as the name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the AppComplianceAutomation scoping configuration of the specific report along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScopingConfigurationResourceInner> createOrUpdateWithResponse(String reportName,
        String scopingConfigurationName, ScopingConfigurationResourceInner properties, Context context);

    /**
     * Get the AppComplianceAutomation scoping configuration of the specific report.
     * 
     * @param reportName Report Name.
     * @param scopingConfigurationName The scoping configuration of the specific report.
     * @param properties Parameters for the create or update operation, this is a singleton resource, so please make
     * sure you're using 'default' as the name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the AppComplianceAutomation scoping configuration of the specific report.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScopingConfigurationResourceInner createOrUpdate(String reportName, String scopingConfigurationName,
        ScopingConfigurationResourceInner properties);

    /**
     * Clean the AppComplianceAutomation scoping configuration of the specific report.
     * 
     * @param reportName Report Name.
     * @param scopingConfigurationName The scoping configuration of the specific report.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String reportName, String scopingConfigurationName, Context context);

    /**
     * Clean the AppComplianceAutomation scoping configuration of the specific report.
     * 
     * @param reportName Report Name.
     * @param scopingConfigurationName The scoping configuration of the specific report.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String reportName, String scopingConfigurationName);
}
