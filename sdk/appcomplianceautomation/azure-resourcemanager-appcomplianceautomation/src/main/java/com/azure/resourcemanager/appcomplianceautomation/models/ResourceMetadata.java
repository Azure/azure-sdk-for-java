// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Single resource Id's metadata.
 */
@Fluent
public final class ResourceMetadata implements JsonSerializable<ResourceMetadata> {
    /*
     * Resource Id - e.g.
     * "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
     */
    private String resourceId;

    /*
     * Resource type. e.g. "Microsoft.Compute/virtualMachines"
     */
    private String resourceType;

    /*
     * Resource kind.
     */
    private String resourceKind;

    /*
     * Resource Origin.
     */
    private ResourceOrigin resourceOrigin;

    /*
     * Account Id. For example - the AWS account id.
     */
    private String accountId;

    /**
     * Creates an instance of ResourceMetadata class.
     */
    public ResourceMetadata() {
    }

    /**
     * Get the resourceId property: Resource Id - e.g.
     * "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: Resource Id - e.g.
     * "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
     * 
     * @param resourceId the resourceId value to set.
     * @return the ResourceMetadata object itself.
     */
    public ResourceMetadata withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the resourceType property: Resource type. e.g. "Microsoft.Compute/virtualMachines".
     * 
     * @return the resourceType value.
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Set the resourceType property: Resource type. e.g. "Microsoft.Compute/virtualMachines".
     * 
     * @param resourceType the resourceType value to set.
     * @return the ResourceMetadata object itself.
     */
    public ResourceMetadata withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }

    /**
     * Get the resourceKind property: Resource kind.
     * 
     * @return the resourceKind value.
     */
    public String resourceKind() {
        return this.resourceKind;
    }

    /**
     * Set the resourceKind property: Resource kind.
     * 
     * @param resourceKind the resourceKind value to set.
     * @return the ResourceMetadata object itself.
     */
    public ResourceMetadata withResourceKind(String resourceKind) {
        this.resourceKind = resourceKind;
        return this;
    }

    /**
     * Get the resourceOrigin property: Resource Origin.
     * 
     * @return the resourceOrigin value.
     */
    public ResourceOrigin resourceOrigin() {
        return this.resourceOrigin;
    }

    /**
     * Set the resourceOrigin property: Resource Origin.
     * 
     * @param resourceOrigin the resourceOrigin value to set.
     * @return the ResourceMetadata object itself.
     */
    public ResourceMetadata withResourceOrigin(ResourceOrigin resourceOrigin) {
        this.resourceOrigin = resourceOrigin;
        return this;
    }

    /**
     * Get the accountId property: Account Id. For example - the AWS account id.
     * 
     * @return the accountId value.
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * Set the accountId property: Account Id. For example - the AWS account id.
     * 
     * @param accountId the accountId value to set.
     * @return the ResourceMetadata object itself.
     */
    public ResourceMetadata withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property resourceId in model ResourceMetadata"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ResourceMetadata.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceId", this.resourceId);
        jsonWriter.writeStringField("resourceType", this.resourceType);
        jsonWriter.writeStringField("resourceKind", this.resourceKind);
        jsonWriter.writeStringField("resourceOrigin",
            this.resourceOrigin == null ? null : this.resourceOrigin.toString());
        jsonWriter.writeStringField("accountId", this.accountId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceMetadata from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceMetadata if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ResourceMetadata.
     */
    public static ResourceMetadata fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceMetadata deserializedResourceMetadata = new ResourceMetadata();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceId".equals(fieldName)) {
                    deserializedResourceMetadata.resourceId = reader.getString();
                } else if ("resourceType".equals(fieldName)) {
                    deserializedResourceMetadata.resourceType = reader.getString();
                } else if ("resourceKind".equals(fieldName)) {
                    deserializedResourceMetadata.resourceKind = reader.getString();
                } else if ("resourceOrigin".equals(fieldName)) {
                    deserializedResourceMetadata.resourceOrigin = ResourceOrigin.fromString(reader.getString());
                } else if ("accountId".equals(fieldName)) {
                    deserializedResourceMetadata.accountId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceMetadata;
        });
    }
}
