// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Resource Id.
 */
@Immutable
public final class ResourceItem implements JsonSerializable<ResourceItem> {
    /*
     * The subscription Id of this resource.
     */
    private String subscriptionId;

    /*
     * The resource group name of this resource.
     */
    private String resourceGroup;

    /*
     * The resource type of this resource. e.g. "Microsoft.SignalRService/SignalR"
     */
    private String resourceType;

    /*
     * The resource Id - e.g.
     * "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
     */
    private String resourceId;

    /**
     * Creates an instance of ResourceItem class.
     */
    private ResourceItem() {
    }

    /**
     * Get the subscriptionId property: The subscription Id of this resource.
     * 
     * @return the subscriptionId value.
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Get the resourceGroup property: The resource group name of this resource.
     * 
     * @return the resourceGroup value.
     */
    public String resourceGroup() {
        return this.resourceGroup;
    }

    /**
     * Get the resourceType property: The resource type of this resource. e.g. "Microsoft.SignalRService/SignalR".
     * 
     * @return the resourceType value.
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Get the resourceId property: The resource Id - e.g.
     * "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceItem if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceItem.
     */
    public static ResourceItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceItem deserializedResourceItem = new ResourceItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("subscriptionId".equals(fieldName)) {
                    deserializedResourceItem.subscriptionId = reader.getString();
                } else if ("resourceGroup".equals(fieldName)) {
                    deserializedResourceItem.resourceGroup = reader.getString();
                } else if ("resourceType".equals(fieldName)) {
                    deserializedResourceItem.resourceType = reader.getString();
                } else if ("resourceId".equals(fieldName)) {
                    deserializedResourceItem.resourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceItem;
        });
    }
}
