// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.appcomplianceautomation.models.Result;
import java.io.IOException;

/**
 * Report health status verification result.
 */
@Immutable
public final class ReportVerificationResultInner implements JsonSerializable<ReportVerificationResultInner> {
    /*
     * Indicates whether the report verification action is Succeeded or Failed.
     */
    private Result result;

    /*
     * If the report verification action failed, to indicate the detailed failed reason.
     */
    private String reason;

    /**
     * Creates an instance of ReportVerificationResultInner class.
     */
    private ReportVerificationResultInner() {
    }

    /**
     * Get the result property: Indicates whether the report verification action is Succeeded or Failed.
     * 
     * @return the result value.
     */
    public Result result() {
        return this.result;
    }

    /**
     * Get the reason property: If the report verification action failed, to indicate the detailed failed reason.
     * 
     * @return the reason value.
     */
    public String reason() {
        return this.reason;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReportVerificationResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReportVerificationResultInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ReportVerificationResultInner.
     */
    public static ReportVerificationResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReportVerificationResultInner deserializedReportVerificationResultInner
                = new ReportVerificationResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("result".equals(fieldName)) {
                    deserializedReportVerificationResultInner.result = Result.fromString(reader.getString());
                } else if ("reason".equals(fieldName)) {
                    deserializedReportVerificationResultInner.reason = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedReportVerificationResultInner;
        });
    }
}
