// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appcomplianceautomation.fluent.EvidencesClient;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.EvidenceFileDownloadResponseInner;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.EvidenceResourceInner;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceFileDownloadRequest;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceFileDownloadResponse;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceResource;
import com.azure.resourcemanager.appcomplianceautomation.models.Evidences;

public final class EvidencesImpl implements Evidences {
    private static final ClientLogger LOGGER = new ClientLogger(EvidencesImpl.class);

    private final EvidencesClient innerClient;

    private final com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager serviceManager;

    public EvidencesImpl(EvidencesClient innerClient,
        com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<EvidenceResource> getWithResponse(String reportName, String evidenceName, Context context) {
        Response<EvidenceResourceInner> inner = this.serviceClient().getWithResponse(reportName, evidenceName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new EvidenceResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public EvidenceResource get(String reportName, String evidenceName) {
        EvidenceResourceInner inner = this.serviceClient().get(reportName, evidenceName);
        if (inner != null) {
            return new EvidenceResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<EvidenceResource> createOrUpdateWithResponse(String reportName, String evidenceName,
        EvidenceResourceInner parameters, String offerGuid, String reportCreatorTenantId, Context context) {
        Response<EvidenceResourceInner> inner = this.serviceClient()
            .createOrUpdateWithResponse(reportName, evidenceName, parameters, offerGuid, reportCreatorTenantId,
                context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new EvidenceResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public EvidenceResource createOrUpdate(String reportName, String evidenceName, EvidenceResourceInner parameters) {
        EvidenceResourceInner inner = this.serviceClient().createOrUpdate(reportName, evidenceName, parameters);
        if (inner != null) {
            return new EvidenceResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteByResourceGroupWithResponse(String reportName, String evidenceName, Context context) {
        return this.serviceClient().deleteWithResponse(reportName, evidenceName, context);
    }

    public void deleteByResourceGroup(String reportName, String evidenceName) {
        this.serviceClient().delete(reportName, evidenceName);
    }

    public PagedIterable<EvidenceResource> listByReportResource(String reportName) {
        PagedIterable<EvidenceResourceInner> inner = this.serviceClient().listByReportResource(reportName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EvidenceResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<EvidenceResource> listByReportResource(String reportName, String skipToken, Integer top,
        String select, String filter, String orderby, String offerGuid, String reportCreatorTenantId, Context context) {
        PagedIterable<EvidenceResourceInner> inner = this.serviceClient()
            .listByReportResource(reportName, skipToken, top, select, filter, orderby, offerGuid, reportCreatorTenantId,
                context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EvidenceResourceImpl(inner1, this.manager()));
    }

    public Response<EvidenceFileDownloadResponse> downloadWithResponse(String reportName, String evidenceName,
        EvidenceFileDownloadRequest body, Context context) {
        Response<EvidenceFileDownloadResponseInner> inner
            = this.serviceClient().downloadWithResponse(reportName, evidenceName, body, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new EvidenceFileDownloadResponseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public EvidenceFileDownloadResponse download(String reportName, String evidenceName,
        EvidenceFileDownloadRequest body) {
        EvidenceFileDownloadResponseInner inner = this.serviceClient().download(reportName, evidenceName, body);
        if (inner != null) {
            return new EvidenceFileDownloadResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private EvidencesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager manager() {
        return this.serviceManager;
    }
}
