// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appcomplianceautomation.fluent.SnapshotsClient;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.DownloadResponseInner;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.SnapshotResourceInner;
import com.azure.resourcemanager.appcomplianceautomation.models.DownloadResponse;
import com.azure.resourcemanager.appcomplianceautomation.models.SnapshotDownloadRequest;
import com.azure.resourcemanager.appcomplianceautomation.models.SnapshotResource;
import com.azure.resourcemanager.appcomplianceautomation.models.Snapshots;

public final class SnapshotsImpl implements Snapshots {
    private static final ClientLogger LOGGER = new ClientLogger(SnapshotsImpl.class);

    private final SnapshotsClient innerClient;

    private final com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager serviceManager;

    public SnapshotsImpl(SnapshotsClient innerClient,
        com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<SnapshotResource> list(String reportName) {
        PagedIterable<SnapshotResourceInner> inner = this.serviceClient().list(reportName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SnapshotResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SnapshotResource> list(String reportName, String skipToken, Integer top, String select,
        String filter, String orderby, String offerGuid, String reportCreatorTenantId, Context context) {
        PagedIterable<SnapshotResourceInner> inner = this.serviceClient()
            .list(reportName, skipToken, top, select, filter, orderby, offerGuid, reportCreatorTenantId, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SnapshotResourceImpl(inner1, this.manager()));
    }

    public Response<SnapshotResource> getWithResponse(String reportName, String snapshotName, Context context) {
        Response<SnapshotResourceInner> inner = this.serviceClient().getWithResponse(reportName, snapshotName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SnapshotResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SnapshotResource get(String reportName, String snapshotName) {
        SnapshotResourceInner inner = this.serviceClient().get(reportName, snapshotName);
        if (inner != null) {
            return new SnapshotResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public DownloadResponse download(String reportName, String snapshotName, SnapshotDownloadRequest body) {
        DownloadResponseInner inner = this.serviceClient().download(reportName, snapshotName, body);
        if (inner != null) {
            return new DownloadResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public DownloadResponse download(String reportName, String snapshotName, SnapshotDownloadRequest body,
        Context context) {
        DownloadResponseInner inner = this.serviceClient().download(reportName, snapshotName, body, context);
        if (inner != null) {
            return new DownloadResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private SnapshotsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager manager() {
        return this.serviceManager;
    }
}
