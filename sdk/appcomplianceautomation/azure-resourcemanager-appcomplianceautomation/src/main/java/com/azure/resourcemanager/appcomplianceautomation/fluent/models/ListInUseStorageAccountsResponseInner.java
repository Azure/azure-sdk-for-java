// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.appcomplianceautomation.models.StorageInfo;
import java.io.IOException;
import java.util.List;

/**
 * Parameters for listing in use storage accounts operation. If subscription list is null, it will check the user's all
 * subscriptions.
 */
@Immutable
public final class ListInUseStorageAccountsResponseInner
    implements JsonSerializable<ListInUseStorageAccountsResponseInner> {
    /*
     * The storage account list which in use in related reports.
     */
    private List<StorageInfo> storageAccountList;

    /**
     * Creates an instance of ListInUseStorageAccountsResponseInner class.
     */
    private ListInUseStorageAccountsResponseInner() {
    }

    /**
     * Get the storageAccountList property: The storage account list which in use in related reports.
     * 
     * @return the storageAccountList value.
     */
    public List<StorageInfo> storageAccountList() {
        return this.storageAccountList;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (storageAccountList() != null) {
            storageAccountList().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("storageAccountList", this.storageAccountList,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ListInUseStorageAccountsResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ListInUseStorageAccountsResponseInner if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ListInUseStorageAccountsResponseInner.
     */
    public static ListInUseStorageAccountsResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ListInUseStorageAccountsResponseInner deserializedListInUseStorageAccountsResponseInner
                = new ListInUseStorageAccountsResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("storageAccountList".equals(fieldName)) {
                    List<StorageInfo> storageAccountList = reader.readArray(reader1 -> StorageInfo.fromJson(reader1));
                    deserializedListInUseStorageAccountsResponseInner.storageAccountList = storageAccountList;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedListInUseStorageAccountsResponseInner;
        });
    }
}
