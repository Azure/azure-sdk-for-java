// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * notification event.
 */
public final class NotificationEvent extends ExpandableStringEnum<NotificationEvent> {
    /**
     * Static value generate_snapshot_success for NotificationEvent.
     */
    public static final NotificationEvent GENERATE_SNAPSHOT_SUCCESS = fromString("generate_snapshot_success");

    /**
     * Static value generate_snapshot_failed for NotificationEvent.
     */
    public static final NotificationEvent GENERATE_SNAPSHOT_FAILED = fromString("generate_snapshot_failed");

    /**
     * Static value assessment_failure for NotificationEvent.
     */
    public static final NotificationEvent ASSESSMENT_FAILURE = fromString("assessment_failure");

    /**
     * Static value report_configuration_changes for NotificationEvent.
     */
    public static final NotificationEvent REPORT_CONFIGURATION_CHANGES = fromString("report_configuration_changes");

    /**
     * Static value report_deletion for NotificationEvent.
     */
    public static final NotificationEvent REPORT_DELETION = fromString("report_deletion");

    /**
     * Creates a new instance of NotificationEvent value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public NotificationEvent() {
    }

    /**
     * Creates or finds a NotificationEvent from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding NotificationEvent.
     */
    public static NotificationEvent fromString(String name) {
        return fromString(name, NotificationEvent.class);
    }

    /**
     * Gets known NotificationEvent values.
     * 
     * @return known NotificationEvent values.
     */
    public static Collection<NotificationEvent> values() {
        return values(NotificationEvent.class);
    }
}
