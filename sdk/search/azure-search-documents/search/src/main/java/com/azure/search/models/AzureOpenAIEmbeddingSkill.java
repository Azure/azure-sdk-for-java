// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package com.azure.search.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Allows you to generate a vector embedding for a given text input using the Azure OpenAI resource.
 */
@Fluent
public final class AzureOpenAIEmbeddingSkill extends SearchIndexerSkill {
    /*
     * A URI fragment specifying the type of skill.
     */
    @Generated
    private String odataType = "#Microsoft.Skills.Text.AzureOpenAIEmbeddingSkill";

    /*
     * The number of dimensions the resulting output embeddings should have. Only supported in text-embedding-3 and
     * later models.
     */
    @Generated
    private Integer dimensions;

    /*
     * The resource URI of the Azure OpenAI resource.
     */
    @Generated
    private String resourceUri;

    /*
     * ID of the Azure OpenAI model deployment on the designated resource.
     */
    @Generated
    private String deploymentName;

    /*
     * API key of the designated Azure OpenAI resource.
     */
    @Generated
    private String apiKey;

    /*
     * The user-assigned managed identity used for outbound connections.
     */
    @Generated
    private SearchIndexerDataIdentity authIdentity;

    /*
     * The name of the embedding model that is deployed at the provided deploymentId path.
     */
    @Generated
    private AzureOpenAIModelName modelName;

    /**
     * Creates an instance of AzureOpenAIEmbeddingSkill class.
     */
    @Generated
    public AzureOpenAIEmbeddingSkill() {
    }

    /**
     * Get the odataType property: A URI fragment specifying the type of skill.
     * 
     * @return the odataType value.
     */
    @Generated
    @Override
    public String getOdataType() {
        return this.odataType;
    }

    /**
     * Get the dimensions property: The number of dimensions the resulting output embeddings should have. Only supported
     * in text-embedding-3 and later models.
     * 
     * @return the dimensions value.
     */
    @Generated
    public Integer getDimensions() {
        return this.dimensions;
    }

    /**
     * Set the dimensions property: The number of dimensions the resulting output embeddings should have. Only supported
     * in text-embedding-3 and later models.
     * 
     * @param dimensions the dimensions value to set.
     * @return the AzureOpenAIEmbeddingSkill object itself.
     */
    @Generated
    public AzureOpenAIEmbeddingSkill setDimensions(Integer dimensions) {
        this.dimensions = dimensions;
        return this;
    }

    /**
     * Get the resourceUri property: The resource URI of the Azure OpenAI resource.
     * 
     * @return the resourceUri value.
     */
    @Generated
    public String getResourceUri() {
        return this.resourceUri;
    }

    /**
     * Set the resourceUri property: The resource URI of the Azure OpenAI resource.
     * 
     * @param resourceUri the resourceUri value to set.
     * @return the AzureOpenAIEmbeddingSkill object itself.
     */
    @Generated
    public AzureOpenAIEmbeddingSkill setResourceUri(String resourceUri) {
        this.resourceUri = resourceUri;
        return this;
    }

    /**
     * Get the deploymentName property: ID of the Azure OpenAI model deployment on the designated resource.
     * 
     * @return the deploymentName value.
     */
    @Generated
    public String getDeploymentName() {
        return this.deploymentName;
    }

    /**
     * Set the deploymentName property: ID of the Azure OpenAI model deployment on the designated resource.
     * 
     * @param deploymentName the deploymentName value to set.
     * @return the AzureOpenAIEmbeddingSkill object itself.
     */
    @Generated
    public AzureOpenAIEmbeddingSkill setDeploymentName(String deploymentName) {
        this.deploymentName = deploymentName;
        return this;
    }

    /**
     * Get the apiKey property: API key of the designated Azure OpenAI resource.
     * 
     * @return the apiKey value.
     */
    @Generated
    public String getApiKey() {
        return this.apiKey;
    }

    /**
     * Set the apiKey property: API key of the designated Azure OpenAI resource.
     * 
     * @param apiKey the apiKey value to set.
     * @return the AzureOpenAIEmbeddingSkill object itself.
     */
    @Generated
    public AzureOpenAIEmbeddingSkill setApiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }

    /**
     * Get the authIdentity property: The user-assigned managed identity used for outbound connections.
     * 
     * @return the authIdentity value.
     */
    @Generated
    public SearchIndexerDataIdentity getAuthIdentity() {
        return this.authIdentity;
    }

    /**
     * Set the authIdentity property: The user-assigned managed identity used for outbound connections.
     * 
     * @param authIdentity the authIdentity value to set.
     * @return the AzureOpenAIEmbeddingSkill object itself.
     */
    @Generated
    public AzureOpenAIEmbeddingSkill setAuthIdentity(SearchIndexerDataIdentity authIdentity) {
        this.authIdentity = authIdentity;
        return this;
    }

    /**
     * Get the modelName property: The name of the embedding model that is deployed at the provided deploymentId path.
     * 
     * @return the modelName value.
     */
    @Generated
    public AzureOpenAIModelName getModelName() {
        return this.modelName;
    }

    /**
     * Set the modelName property: The name of the embedding model that is deployed at the provided deploymentId path.
     * 
     * @param modelName the modelName value to set.
     * @return the AzureOpenAIEmbeddingSkill object itself.
     */
    @Generated
    public AzureOpenAIEmbeddingSkill setModelName(AzureOpenAIModelName modelName) {
        this.modelName = modelName;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureOpenAIEmbeddingSkill setName(String name) {
        super.setName(name);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureOpenAIEmbeddingSkill setDescription(String description) {
        super.setDescription(description);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureOpenAIEmbeddingSkill setContext(String context) {
        super.setContext(context);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureOpenAIEmbeddingSkill setInputs(List<InputFieldMappingEntry> inputs) {
        super.setInputs(inputs);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureOpenAIEmbeddingSkill setOutputs(List<OutputFieldMappingEntry> outputs) {
        super.setOutputs(outputs);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("inputs", getInputs(), (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("outputs", getOutputs(), (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("name", getName());
        jsonWriter.writeStringField("description", getDescription());
        jsonWriter.writeStringField("context", getContext());
        jsonWriter.writeStringField("@odata.type", this.odataType);
        jsonWriter.writeNumberField("dimensions", this.dimensions);
        jsonWriter.writeStringField("resourceUri", this.resourceUri);
        jsonWriter.writeStringField("deploymentId", this.deploymentName);
        jsonWriter.writeStringField("apiKey", this.apiKey);
        jsonWriter.writeJsonField("authIdentity", this.authIdentity);
        jsonWriter.writeStringField("modelName", this.modelName == null ? null : this.modelName.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureOpenAIEmbeddingSkill from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureOpenAIEmbeddingSkill if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureOpenAIEmbeddingSkill.
     */
    @Generated
    public static AzureOpenAIEmbeddingSkill fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureOpenAIEmbeddingSkill deserializedAzureOpenAIEmbeddingSkill = new AzureOpenAIEmbeddingSkill();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("inputs".equals(fieldName)) {
                    List<InputFieldMappingEntry> inputs
                        = reader.readArray(reader1 -> InputFieldMappingEntry.fromJson(reader1));
                    deserializedAzureOpenAIEmbeddingSkill.setInputs(inputs);
                } else if ("outputs".equals(fieldName)) {
                    List<OutputFieldMappingEntry> outputs
                        = reader.readArray(reader1 -> OutputFieldMappingEntry.fromJson(reader1));
                    deserializedAzureOpenAIEmbeddingSkill.setOutputs(outputs);
                } else if ("name".equals(fieldName)) {
                    deserializedAzureOpenAIEmbeddingSkill.setName(reader.getString());
                } else if ("description".equals(fieldName)) {
                    deserializedAzureOpenAIEmbeddingSkill.setDescription(reader.getString());
                } else if ("context".equals(fieldName)) {
                    deserializedAzureOpenAIEmbeddingSkill.setContext(reader.getString());
                } else if ("@odata.type".equals(fieldName)) {
                    deserializedAzureOpenAIEmbeddingSkill.odataType = reader.getString();
                } else if ("dimensions".equals(fieldName)) {
                    deserializedAzureOpenAIEmbeddingSkill.dimensions = reader.getNullable(JsonReader::getInt);
                } else if ("resourceUri".equals(fieldName)) {
                    deserializedAzureOpenAIEmbeddingSkill.resourceUri = reader.getString();
                } else if ("deploymentId".equals(fieldName)) {
                    deserializedAzureOpenAIEmbeddingSkill.deploymentName = reader.getString();
                } else if ("apiKey".equals(fieldName)) {
                    deserializedAzureOpenAIEmbeddingSkill.apiKey = reader.getString();
                } else if ("authIdentity".equals(fieldName)) {
                    deserializedAzureOpenAIEmbeddingSkill.authIdentity = SearchIndexerDataIdentity.fromJson(reader);
                } else if ("modelName".equals(fieldName)) {
                    deserializedAzureOpenAIEmbeddingSkill.modelName
                        = AzureOpenAIModelName.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureOpenAIEmbeddingSkill;
        });
    }
}
