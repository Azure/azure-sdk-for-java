// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package com.azure.search.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Parameters for SharePoint knowledge source.
 */
@Fluent
public final class IndexedSharePointKnowledgeSourceParameters
    implements JsonSerializable<IndexedSharePointKnowledgeSourceParameters> {
    /*
     * SharePoint connection string with format: SharePointOnlineEndpoint=[SharePoint site url];ApplicationId=[Azure AD
     * App ID];ApplicationSecret=[Azure AD App client secret];TenantId=[SharePoint site tenant id]
     */
    @Generated
    private String connectionString;

    /*
     * Specifies which SharePoint libraries to access.
     */
    @Generated
    private IndexedSharePointContainerName containerName;

    /*
     * Optional query to filter SharePoint content.
     */
    @Generated
    private String query;

    /*
     * Consolidates all general ingestion settings.
     */
    @Generated
    private KnowledgeSourceIngestionParameters ingestionParameters;

    /*
     * Resources created by the knowledge source.
     */
    @Generated
    private Map<String, String> createdResources;

    /**
     * Creates an instance of IndexedSharePointKnowledgeSourceParameters class.
     */
    @Generated
    public IndexedSharePointKnowledgeSourceParameters() {
    }

    /**
     * Get the connectionString property: SharePoint connection string with format: SharePointOnlineEndpoint=[SharePoint
     * site url];ApplicationId=[Azure AD App ID];ApplicationSecret=[Azure AD App client secret];TenantId=[SharePoint
     * site tenant id].
     * 
     * @return the connectionString value.
     */
    @Generated
    public String getConnectionString() {
        return this.connectionString;
    }

    /**
     * Set the connectionString property: SharePoint connection string with format: SharePointOnlineEndpoint=[SharePoint
     * site url];ApplicationId=[Azure AD App ID];ApplicationSecret=[Azure AD App client secret];TenantId=[SharePoint
     * site tenant id].
     * 
     * @param connectionString the connectionString value to set.
     * @return the IndexedSharePointKnowledgeSourceParameters object itself.
     */
    @Generated
    public IndexedSharePointKnowledgeSourceParameters setConnectionString(String connectionString) {
        this.connectionString = connectionString;
        return this;
    }

    /**
     * Get the containerName property: Specifies which SharePoint libraries to access.
     * 
     * @return the containerName value.
     */
    @Generated
    public IndexedSharePointContainerName getContainerName() {
        return this.containerName;
    }

    /**
     * Set the containerName property: Specifies which SharePoint libraries to access.
     * 
     * @param containerName the containerName value to set.
     * @return the IndexedSharePointKnowledgeSourceParameters object itself.
     */
    @Generated
    public IndexedSharePointKnowledgeSourceParameters setContainerName(IndexedSharePointContainerName containerName) {
        this.containerName = containerName;
        return this;
    }

    /**
     * Get the query property: Optional query to filter SharePoint content.
     * 
     * @return the query value.
     */
    @Generated
    public String getQuery() {
        return this.query;
    }

    /**
     * Set the query property: Optional query to filter SharePoint content.
     * 
     * @param query the query value to set.
     * @return the IndexedSharePointKnowledgeSourceParameters object itself.
     */
    @Generated
    public IndexedSharePointKnowledgeSourceParameters setQuery(String query) {
        this.query = query;
        return this;
    }

    /**
     * Get the ingestionParameters property: Consolidates all general ingestion settings.
     * 
     * @return the ingestionParameters value.
     */
    @Generated
    public KnowledgeSourceIngestionParameters getIngestionParameters() {
        return this.ingestionParameters;
    }

    /**
     * Set the ingestionParameters property: Consolidates all general ingestion settings.
     * 
     * @param ingestionParameters the ingestionParameters value to set.
     * @return the IndexedSharePointKnowledgeSourceParameters object itself.
     */
    @Generated
    public IndexedSharePointKnowledgeSourceParameters
        setIngestionParameters(KnowledgeSourceIngestionParameters ingestionParameters) {
        this.ingestionParameters = ingestionParameters;
        return this;
    }

    /**
     * Get the createdResources property: Resources created by the knowledge source.
     * 
     * @return the createdResources value.
     */
    @Generated
    public Map<String, String> getCreatedResources() {
        return this.createdResources;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("connectionString", this.connectionString);
        jsonWriter.writeStringField("containerName", this.containerName == null ? null : this.containerName.toString());
        jsonWriter.writeStringField("query", this.query);
        jsonWriter.writeJsonField("ingestionParameters", this.ingestionParameters);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IndexedSharePointKnowledgeSourceParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IndexedSharePointKnowledgeSourceParameters if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the IndexedSharePointKnowledgeSourceParameters.
     */
    @Generated
    public static IndexedSharePointKnowledgeSourceParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IndexedSharePointKnowledgeSourceParameters deserializedIndexedSharePointKnowledgeSourceParameters
                = new IndexedSharePointKnowledgeSourceParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("connectionString".equals(fieldName)) {
                    deserializedIndexedSharePointKnowledgeSourceParameters.connectionString = reader.getString();
                } else if ("containerName".equals(fieldName)) {
                    deserializedIndexedSharePointKnowledgeSourceParameters.containerName
                        = IndexedSharePointContainerName.fromString(reader.getString());
                } else if ("query".equals(fieldName)) {
                    deserializedIndexedSharePointKnowledgeSourceParameters.query = reader.getString();
                } else if ("ingestionParameters".equals(fieldName)) {
                    deserializedIndexedSharePointKnowledgeSourceParameters.ingestionParameters
                        = KnowledgeSourceIngestionParameters.fromJson(reader);
                } else if ("createdResources".equals(fieldName)) {
                    Map<String, String> createdResources = reader.readMap(reader1 -> reader1.getString());
                    deserializedIndexedSharePointKnowledgeSourceParameters.createdResources = createdResources;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIndexedSharePointKnowledgeSourceParameters;
        });
    }
}
