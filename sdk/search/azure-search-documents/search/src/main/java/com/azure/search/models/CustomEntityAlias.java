// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package com.azure.search.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A complex object that can be used to specify alternative spellings or synonyms to the root entity name.
 */
@Fluent
public final class CustomEntityAlias implements JsonSerializable<CustomEntityAlias> {
    /*
     * The text of the alias.
     */
    @Generated
    private String text;

    /*
     * Determine if the alias is case sensitive.
     */
    @Generated
    private Boolean caseSensitive;

    /*
     * Determine if the alias is accent sensitive.
     */
    @Generated
    private Boolean accentSensitive;

    /*
     * Determine the fuzzy edit distance of the alias.
     */
    @Generated
    private Integer fuzzyEditDistance;

    /**
     * Creates an instance of CustomEntityAlias class.
     */
    @Generated
    public CustomEntityAlias() {
    }

    /**
     * Get the text property: The text of the alias.
     * 
     * @return the text value.
     */
    @Generated
    public String getText() {
        return this.text;
    }

    /**
     * Set the text property: The text of the alias.
     * 
     * @param text the text value to set.
     * @return the CustomEntityAlias object itself.
     */
    @Generated
    public CustomEntityAlias setText(String text) {
        this.text = text;
        return this;
    }

    /**
     * Get the caseSensitive property: Determine if the alias is case sensitive.
     * 
     * @return the caseSensitive value.
     */
    @Generated
    public Boolean isCaseSensitive() {
        return this.caseSensitive;
    }

    /**
     * Set the caseSensitive property: Determine if the alias is case sensitive.
     * 
     * @param caseSensitive the caseSensitive value to set.
     * @return the CustomEntityAlias object itself.
     */
    @Generated
    public CustomEntityAlias setCaseSensitive(Boolean caseSensitive) {
        this.caseSensitive = caseSensitive;
        return this;
    }

    /**
     * Get the accentSensitive property: Determine if the alias is accent sensitive.
     * 
     * @return the accentSensitive value.
     */
    @Generated
    public Boolean isAccentSensitive() {
        return this.accentSensitive;
    }

    /**
     * Set the accentSensitive property: Determine if the alias is accent sensitive.
     * 
     * @param accentSensitive the accentSensitive value to set.
     * @return the CustomEntityAlias object itself.
     */
    @Generated
    public CustomEntityAlias setAccentSensitive(Boolean accentSensitive) {
        this.accentSensitive = accentSensitive;
        return this;
    }

    /**
     * Get the fuzzyEditDistance property: Determine the fuzzy edit distance of the alias.
     * 
     * @return the fuzzyEditDistance value.
     */
    @Generated
    public Integer getFuzzyEditDistance() {
        return this.fuzzyEditDistance;
    }

    /**
     * Set the fuzzyEditDistance property: Determine the fuzzy edit distance of the alias.
     * 
     * @param fuzzyEditDistance the fuzzyEditDistance value to set.
     * @return the CustomEntityAlias object itself.
     */
    @Generated
    public CustomEntityAlias setFuzzyEditDistance(Integer fuzzyEditDistance) {
        this.fuzzyEditDistance = fuzzyEditDistance;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("text", this.text);
        jsonWriter.writeBooleanField("caseSensitive", this.caseSensitive);
        jsonWriter.writeBooleanField("accentSensitive", this.accentSensitive);
        jsonWriter.writeNumberField("fuzzyEditDistance", this.fuzzyEditDistance);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomEntityAlias from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomEntityAlias if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CustomEntityAlias.
     */
    @Generated
    public static CustomEntityAlias fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomEntityAlias deserializedCustomEntityAlias = new CustomEntityAlias();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("text".equals(fieldName)) {
                    deserializedCustomEntityAlias.text = reader.getString();
                } else if ("caseSensitive".equals(fieldName)) {
                    deserializedCustomEntityAlias.caseSensitive = reader.getNullable(JsonReader::getBoolean);
                } else if ("accentSensitive".equals(fieldName)) {
                    deserializedCustomEntityAlias.accentSensitive = reader.getNullable(JsonReader::getBoolean);
                } else if ("fuzzyEditDistance".equals(fieldName)) {
                    deserializedCustomEntityAlias.fuzzyEditDistance = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomEntityAlias;
        });
    }
}
