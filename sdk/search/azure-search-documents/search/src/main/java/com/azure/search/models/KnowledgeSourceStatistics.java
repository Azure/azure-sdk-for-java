// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package com.azure.search.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Statistical information about knowledge source synchronization history.
 */
@Fluent
public final class KnowledgeSourceStatistics implements JsonSerializable<KnowledgeSourceStatistics> {
    /*
     * The total number of synchronizations completed.
     */
    @Generated
    private int totalSynchronization;

    /*
     * The average duration of synchronizations in HH:MM:SS format.
     */
    @Generated
    private String averageSynchronizationDuration;

    /*
     * The average number of items processed per synchronization.
     */
    @Generated
    private int averageItemsProcessedPerSynchronization;

    /**
     * Creates an instance of KnowledgeSourceStatistics class.
     */
    @Generated
    public KnowledgeSourceStatistics() {
    }

    /**
     * Get the totalSynchronization property: The total number of synchronizations completed.
     * 
     * @return the totalSynchronization value.
     */
    @Generated
    public int getTotalSynchronization() {
        return this.totalSynchronization;
    }

    /**
     * Set the totalSynchronization property: The total number of synchronizations completed.
     * 
     * @param totalSynchronization the totalSynchronization value to set.
     * @return the KnowledgeSourceStatistics object itself.
     */
    @Generated
    public KnowledgeSourceStatistics setTotalSynchronization(int totalSynchronization) {
        this.totalSynchronization = totalSynchronization;
        return this;
    }

    /**
     * Get the averageSynchronizationDuration property: The average duration of synchronizations in HH:MM:SS format.
     * 
     * @return the averageSynchronizationDuration value.
     */
    @Generated
    public String getAverageSynchronizationDuration() {
        return this.averageSynchronizationDuration;
    }

    /**
     * Set the averageSynchronizationDuration property: The average duration of synchronizations in HH:MM:SS format.
     * 
     * @param averageSynchronizationDuration the averageSynchronizationDuration value to set.
     * @return the KnowledgeSourceStatistics object itself.
     */
    @Generated
    public KnowledgeSourceStatistics setAverageSynchronizationDuration(String averageSynchronizationDuration) {
        this.averageSynchronizationDuration = averageSynchronizationDuration;
        return this;
    }

    /**
     * Get the averageItemsProcessedPerSynchronization property: The average number of items processed per
     * synchronization.
     * 
     * @return the averageItemsProcessedPerSynchronization value.
     */
    @Generated
    public int getAverageItemsProcessedPerSynchronization() {
        return this.averageItemsProcessedPerSynchronization;
    }

    /**
     * Set the averageItemsProcessedPerSynchronization property: The average number of items processed per
     * synchronization.
     * 
     * @param averageItemsProcessedPerSynchronization the averageItemsProcessedPerSynchronization value to set.
     * @return the KnowledgeSourceStatistics object itself.
     */
    @Generated
    public KnowledgeSourceStatistics
        setAverageItemsProcessedPerSynchronization(int averageItemsProcessedPerSynchronization) {
        this.averageItemsProcessedPerSynchronization = averageItemsProcessedPerSynchronization;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("totalSynchronization", this.totalSynchronization);
        jsonWriter.writeStringField("averageSynchronizationDuration", this.averageSynchronizationDuration);
        jsonWriter.writeIntField("averageItemsProcessedPerSynchronization",
            this.averageItemsProcessedPerSynchronization);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KnowledgeSourceStatistics from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KnowledgeSourceStatistics if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the KnowledgeSourceStatistics.
     */
    @Generated
    public static KnowledgeSourceStatistics fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            KnowledgeSourceStatistics deserializedKnowledgeSourceStatistics = new KnowledgeSourceStatistics();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("totalSynchronization".equals(fieldName)) {
                    deserializedKnowledgeSourceStatistics.totalSynchronization = reader.getInt();
                } else if ("averageSynchronizationDuration".equals(fieldName)) {
                    deserializedKnowledgeSourceStatistics.averageSynchronizationDuration = reader.getString();
                } else if ("averageItemsProcessedPerSynchronization".equals(fieldName)) {
                    deserializedKnowledgeSourceStatistics.averageItemsProcessedPerSynchronization = reader.getInt();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedKnowledgeSourceStatistics;
        });
    }
}
