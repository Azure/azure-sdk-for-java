// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.azure.search.documents.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/**
 * Defines values for TokenizerName.
 */
public final class TokenizerName extends ExpandableStringEnum<TokenizerName> {
    /**
     * Static value classic for TokenizerName.
     */
    public static final TokenizerName CLASSIC = fromString("classic");

    /**
     * Static value edgeNGram for TokenizerName.
     */
    public static final TokenizerName EDGE_NGRAM = fromString("edgeNGram");

    /**
     * Static value keyword_v2 for TokenizerName.
     */
    public static final TokenizerName KEYWORD = fromString("keyword_v2");

    /**
     * Static value letter for TokenizerName.
     */
    public static final TokenizerName LETTER = fromString("letter");

    /**
     * Static value lowercase for TokenizerName.
     */
    public static final TokenizerName LOWERCASE = fromString("lowercase");

    /**
     * Static value microsoft_language_tokenizer for TokenizerName.
     */
    public static final TokenizerName MICROSOFT_LANGUAGE_TOKENIZER = fromString("microsoft_language_tokenizer");

    /**
     * Static value microsoft_language_stemming_tokenizer for TokenizerName.
     */
    public static final TokenizerName MICROSOFT_LANGUAGE_STEMMING_TOKENIZER = fromString("microsoft_language_stemming_tokenizer");

    /**
     * Static value nGram for TokenizerName.
     */
    public static final TokenizerName NGRAM = fromString("nGram");

    /**
     * Static value path_hierarchy_v2 for TokenizerName.
     */
    public static final TokenizerName PATH_HIERARCHY = fromString("path_hierarchy_v2");

    /**
     * Static value pattern for TokenizerName.
     */
    public static final TokenizerName PATTERN = fromString("pattern");

    /**
     * Static value standard_v2 for TokenizerName.
     */
    public static final TokenizerName STANDARD = fromString("standard_v2");

    /**
     * Static value uax_url_email for TokenizerName.
     */
    public static final TokenizerName UAX_URL_EMAIL = fromString("uax_url_email");

    /**
     * Static value whitespace for TokenizerName.
     */
    public static final TokenizerName WHITESPACE = fromString("whitespace");

    /**
     * Creates or finds a TokenizerName from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding TokenizerName.
     */
    @JsonCreator
    public static TokenizerName fromString(String name) {
        return fromString(name, TokenizerName.class);
    }

    /**
     * @return known TokenizerName values.
     */
    public static Collection<TokenizerName> values() {
        return values(TokenizerName.class);
    }
}
