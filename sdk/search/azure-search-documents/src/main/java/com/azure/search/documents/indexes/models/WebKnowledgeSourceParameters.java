// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package com.azure.search.documents.indexes.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Parameters for web knowledge source.
 */
@Fluent
public final class WebKnowledgeSourceParameters implements JsonSerializable<WebKnowledgeSourceParameters> {
    /*
     * An explicit identity to use for this knowledge source.
     */
    @Generated
    private SearchIndexerDataIdentity identity;

    /*
     * The ResourceId of the Bing Search resource to use for web results.
     */
    @Generated
    private String bingResourceId;

    /*
     * The language of the web results.
     */
    @Generated
    private String language;

    /*
     * The market of the web results.
     */
    @Generated
    private String market;

    /*
     * The freshness of web results.
     */
    @Generated
    private String freshness;

    /*
     * Domains that are allowed for web results
     */
    @Generated
    private List<WebKnowledgeSourceAllowedDomain> allowedDomains;

    /*
     * Domains that are blocked from web results
     */
    @Generated
    private List<WebKnowledgeSourceBlockedDomain> blockedDomains;

    /**
     * Creates an instance of WebKnowledgeSourceParameters class.
     */
    @Generated
    public WebKnowledgeSourceParameters() {
    }

    /**
     * Get the identity property: An explicit identity to use for this knowledge source.
     * 
     * @return the identity value.
     */
    @Generated
    public SearchIndexerDataIdentity getIdentity() {
        return this.identity;
    }

    /**
     * Set the identity property: An explicit identity to use for this knowledge source.
     * 
     * @param identity the identity value to set.
     * @return the WebKnowledgeSourceParameters object itself.
     */
    @Generated
    public WebKnowledgeSourceParameters setIdentity(SearchIndexerDataIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the bingResourceId property: The ResourceId of the Bing Search resource to use for web results.
     * 
     * @return the bingResourceId value.
     */
    @Generated
    public String getBingResourceId() {
        return this.bingResourceId;
    }

    /**
     * Set the bingResourceId property: The ResourceId of the Bing Search resource to use for web results.
     * 
     * @param bingResourceId the bingResourceId value to set.
     * @return the WebKnowledgeSourceParameters object itself.
     */
    @Generated
    public WebKnowledgeSourceParameters setBingResourceId(String bingResourceId) {
        this.bingResourceId = bingResourceId;
        return this;
    }

    /**
     * Get the language property: The language of the web results.
     * 
     * @return the language value.
     */
    @Generated
    public String getLanguage() {
        return this.language;
    }

    /**
     * Set the language property: The language of the web results.
     * 
     * @param language the language value to set.
     * @return the WebKnowledgeSourceParameters object itself.
     */
    @Generated
    public WebKnowledgeSourceParameters setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Get the market property: The market of the web results.
     * 
     * @return the market value.
     */
    @Generated
    public String getMarket() {
        return this.market;
    }

    /**
     * Set the market property: The market of the web results.
     * 
     * @param market the market value to set.
     * @return the WebKnowledgeSourceParameters object itself.
     */
    @Generated
    public WebKnowledgeSourceParameters setMarket(String market) {
        this.market = market;
        return this;
    }

    /**
     * Get the freshness property: The freshness of web results.
     * 
     * @return the freshness value.
     */
    @Generated
    public String getFreshness() {
        return this.freshness;
    }

    /**
     * Set the freshness property: The freshness of web results.
     * 
     * @param freshness the freshness value to set.
     * @return the WebKnowledgeSourceParameters object itself.
     */
    @Generated
    public WebKnowledgeSourceParameters setFreshness(String freshness) {
        this.freshness = freshness;
        return this;
    }

    /**
     * Get the allowedDomains property: Domains that are allowed for web results.
     * 
     * @return the allowedDomains value.
     */
    @Generated
    public List<WebKnowledgeSourceAllowedDomain> getAllowedDomains() {
        return this.allowedDomains;
    }

    /**
     * Set the allowedDomains property: Domains that are allowed for web results.
     * 
     * @param allowedDomains the allowedDomains value to set.
     * @return the WebKnowledgeSourceParameters object itself.
     */
    @Generated
    public WebKnowledgeSourceParameters setAllowedDomains(List<WebKnowledgeSourceAllowedDomain> allowedDomains) {
        this.allowedDomains = allowedDomains;
        return this;
    }

    /**
     * Get the blockedDomains property: Domains that are blocked from web results.
     * 
     * @return the blockedDomains value.
     */
    @Generated
    public List<WebKnowledgeSourceBlockedDomain> getBlockedDomains() {
        return this.blockedDomains;
    }

    /**
     * Set the blockedDomains property: Domains that are blocked from web results.
     * 
     * @param blockedDomains the blockedDomains value to set.
     * @return the WebKnowledgeSourceParameters object itself.
     */
    @Generated
    public WebKnowledgeSourceParameters setBlockedDomains(List<WebKnowledgeSourceBlockedDomain> blockedDomains) {
        this.blockedDomains = blockedDomains;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("identity", this.identity);
        jsonWriter.writeStringField("bingResourceId", this.bingResourceId);
        jsonWriter.writeStringField("language", this.language);
        jsonWriter.writeStringField("market", this.market);
        jsonWriter.writeStringField("freshness", this.freshness);
        jsonWriter.writeArrayField("allowedDomains", this.allowedDomains,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("blockedDomains", this.blockedDomains,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WebKnowledgeSourceParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WebKnowledgeSourceParameters if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WebKnowledgeSourceParameters.
     */
    @Generated
    public static WebKnowledgeSourceParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WebKnowledgeSourceParameters deserializedWebKnowledgeSourceParameters = new WebKnowledgeSourceParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("identity".equals(fieldName)) {
                    deserializedWebKnowledgeSourceParameters.identity = SearchIndexerDataIdentity.fromJson(reader);
                } else if ("bingResourceId".equals(fieldName)) {
                    deserializedWebKnowledgeSourceParameters.bingResourceId = reader.getString();
                } else if ("language".equals(fieldName)) {
                    deserializedWebKnowledgeSourceParameters.language = reader.getString();
                } else if ("market".equals(fieldName)) {
                    deserializedWebKnowledgeSourceParameters.market = reader.getString();
                } else if ("freshness".equals(fieldName)) {
                    deserializedWebKnowledgeSourceParameters.freshness = reader.getString();
                } else if ("allowedDomains".equals(fieldName)) {
                    List<WebKnowledgeSourceAllowedDomain> allowedDomains
                        = reader.readArray(reader1 -> WebKnowledgeSourceAllowedDomain.fromJson(reader1));
                    deserializedWebKnowledgeSourceParameters.allowedDomains = allowedDomains;
                } else if ("blockedDomains".equals(fieldName)) {
                    List<WebKnowledgeSourceBlockedDomain> blockedDomains
                        = reader.readArray(reader1 -> WebKnowledgeSourceBlockedDomain.fromJson(reader1));
                    deserializedWebKnowledgeSourceParameters.blockedDomains = blockedDomains;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWebKnowledgeSourceParameters;
        });
    }
}
