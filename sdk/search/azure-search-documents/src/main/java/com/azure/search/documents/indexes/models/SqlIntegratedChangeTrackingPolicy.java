// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package com.azure.search.documents.indexes.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

/**
 * Defines a data change detection policy that captures changes using the Integrated Change Tracking feature of Azure
 * SQL Database.
 */
@Immutable
public final class SqlIntegratedChangeTrackingPolicy extends DataChangeDetectionPolicy {
    /*
     * Identifies the concrete type of the data change detection policy.
     */
    private String odataType = "#Microsoft.Azure.Search.SqlIntegratedChangeTrackingPolicy";

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("@odata.type", odataType);
        return jsonWriter.writeEndObject().flush();
    }

    /**
     * Reads an instance of SqlIntegratedChangeTrackingPolicy from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of SqlIntegratedChangeTrackingPolicy if the JsonReader was pointing to an instance of it, or
     *     null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing the polymorphic discriminator.
     */
    public static SqlIntegratedChangeTrackingPolicy fromJson(JsonReader jsonReader) {
        return jsonReader.readObject(
                reader -> {
                    String odataType = "#Microsoft.Azure.Search.SqlIntegratedChangeTrackingPolicy";
                    while (reader.nextToken() != JsonToken.END_OBJECT) {
                        String fieldName = reader.getFieldName();
                        reader.nextToken();

                        if ("@odata.type".equals(fieldName)) {
                            odataType = reader.getStringValue();
                        } else {
                            reader.skipChildren();
                        }
                    }

                    if (!"#Microsoft.Azure.Search.SqlIntegratedChangeTrackingPolicy".equals(odataType)) {
                        throw new IllegalStateException(
                                "'@odata.type' was expected to be non-null and equal to '#Microsoft.Azure.Search.SqlIntegratedChangeTrackingPolicy'. The found '@odata.type' was '"
                                        + odataType
                                        + "'.");
                    }

                    SqlIntegratedChangeTrackingPolicy deserializedValue = new SqlIntegratedChangeTrackingPolicy();
                    deserializedValue.odataType = odataType;

                    return deserializedValue;
                });
    }
}
