// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package com.azure.search.documents.indexes.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Defines the type of a datasource.
 */
public final class SearchIndexerDataSourceType extends ExpandableStringEnum<SearchIndexerDataSourceType> {
    /**
     * Definition of an Azure SQL datasource whose credentials can either be a standard SQL connection string or the
     * ResourceId of the SQL resource. The container property refers to the table or view to be indexed. Query parameter
     * is not supported for this datasource.
     */
    @Generated
    public static final SearchIndexerDataSourceType AZURE_SQL = fromString("azuresql");

    /**
     * Definition of an CosmosDB datasource whose credentials can either be a formatted connection string containing
     * details for AccountEndpoint, AccountKey, and Database for a key based connection or details for ResourceID and
     * ApiKind for keyless connection. The container property refers to cosmosdb collection to be indexed and the
     * optional query property refers to a SQL query on the collection.
     */
    @Generated
    public static final SearchIndexerDataSourceType COSMOS_DB = fromString("cosmosdb");

    /**
     * Definition of an Azure Blob datasource whose credentials can either be a storage connection string or the
     * ResourceId of the storage account. The container property refers to the blob container to be indexed and the
     * optional query property refers to a specific sub-folder in the container.
     */
    @Generated
    public static final SearchIndexerDataSourceType AZURE_BLOB = fromString("azureblob");

    /**
     * Definition of an Azure Table datasource whose credentials can either be a table connection string or the
     * ResourceId of the storage account. The container property refers to the blob container to be indexed and the
     * optional query property can be used to filter rows.
     */
    @Generated
    public static final SearchIndexerDataSourceType AZURE_TABLE = fromString("azuretable");

    /**
     * Definition of an Azure SQL datasource whose credentials can either be a standard ADO.NET formatted SQL connection
     * string or the ResourceId of the SQL resource. The container property refers to the table or view to be indexed.
     * Query parameter is not supported for this datasource.
     */
    @Generated
    public static final SearchIndexerDataSourceType MY_SQL = fromString("mysql");

    /**
     * Definition of an Azure ADLS Gen 2 datasource whose credentials can either be a storage connection string or the
     * ResourceId of the storage account. The container property refers to the blob container to be indexed and the
     * optional query property refers to a specific sub-folder in the container.
     */
    @Generated
    public static final SearchIndexerDataSourceType ADLS_GEN2 = fromString("adlsgen2");

    /**
     * Definition of an Microsoft Fabric Onelake datasource whose credentials can either be the Fabric workspace GUID or
     * a workspace FQDN. The container property refers to the lakehouse GUID and the optional query property refers to
     * folders or shortcuts in the lakehouse.
     */
    @Generated
    public static final SearchIndexerDataSourceType ONE_LAKE = fromString("onelake");

    /**
     * Creates a new instance of SearchIndexerDataSourceType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public SearchIndexerDataSourceType() {
    }

    /**
     * Creates or finds a SearchIndexerDataSourceType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding SearchIndexerDataSourceType.
     */
    @Generated
    public static SearchIndexerDataSourceType fromString(String name) {
        return fromString(name, SearchIndexerDataSourceType.class);
    }

    /**
     * Gets known SearchIndexerDataSourceType values.
     * 
     * @return known SearchIndexerDataSourceType values.
     */
    @Generated
    public static Collection<SearchIndexerDataSourceType> values() {
        return values(SearchIndexerDataSourceType.class);
    }
}
