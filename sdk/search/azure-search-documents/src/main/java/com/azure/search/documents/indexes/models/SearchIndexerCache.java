// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.azure.search.documents.indexes.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The SearchIndexerCache model. */
@Fluent
public final class SearchIndexerCache {
    /*
     * The connection string to the storage account where the cache data will
     * be persisted.
     */
    @JsonProperty(value = "storageConnectionString")
    private String storageConnectionString;

    /*
     * Specifies whether incremental reprocessing is enabled.
     */
    @JsonProperty(value = "enableReprocessing")
    private Boolean enableReprocessing;

    /**
     * Get the storageConnectionString property: The connection string to the storage account where the cache data will
     * be persisted.
     *
     * @return the storageConnectionString value.
     */
    public String getStorageConnectionString() {
        return this.storageConnectionString;
    }

    /**
     * Set the storageConnectionString property: The connection string to the storage account where the cache data will
     * be persisted.
     *
     * @param storageConnectionString the storageConnectionString value to set.
     * @return the SearchIndexerCache object itself.
     */
    public SearchIndexerCache setStorageConnectionString(String storageConnectionString) {
        this.storageConnectionString = storageConnectionString;
        return this;
    }

    /**
     * Get the enableReprocessing property: Specifies whether incremental reprocessing is enabled.
     *
     * @return the enableReprocessing value.
     */
    public Boolean isEnableReprocessing() {
        return this.enableReprocessing;
    }

    /**
     * Set the enableReprocessing property: Specifies whether incremental reprocessing is enabled.
     *
     * @param enableReprocessing the enableReprocessing value to set.
     * @return the SearchIndexerCache object itself.
     */
    public SearchIndexerCache setEnableReprocessing(Boolean enableReprocessing) {
        this.enableReprocessing = enableReprocessing;
        return this;
    }
}
