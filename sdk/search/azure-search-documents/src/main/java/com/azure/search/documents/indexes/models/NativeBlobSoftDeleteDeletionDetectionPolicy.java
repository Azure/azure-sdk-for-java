// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package com.azure.search.documents.indexes.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines a data deletion detection policy utilizing Azure Blob Storage's native soft delete feature for deletion
 * detection.
 */
@Immutable
public final class NativeBlobSoftDeleteDeletionDetectionPolicy extends DataDeletionDetectionPolicy {
    /*
     * A URI fragment specifying the type of data deletion detection policy.
     */
    private String odataType = "#Microsoft.Azure.Search.NativeBlobSoftDeleteDeletionDetectionPolicy";

    /**
     * Creates an instance of NativeBlobSoftDeleteDeletionDetectionPolicy class.
     */
    public NativeBlobSoftDeleteDeletionDetectionPolicy() {
    }

    /**
     * Get the odataType property: A URI fragment specifying the type of data deletion detection policy.
     * 
     * @return the odataType value.
     */
    @Override
    public String getOdataType() {
        return this.odataType;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("@odata.type", this.odataType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NativeBlobSoftDeleteDeletionDetectionPolicy from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NativeBlobSoftDeleteDeletionDetectionPolicy if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the NativeBlobSoftDeleteDeletionDetectionPolicy.
     */
    public static NativeBlobSoftDeleteDeletionDetectionPolicy fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NativeBlobSoftDeleteDeletionDetectionPolicy deserializedNativeBlobSoftDeleteDeletionDetectionPolicy
                = new NativeBlobSoftDeleteDeletionDetectionPolicy();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("@odata.type".equals(fieldName)) {
                    deserializedNativeBlobSoftDeleteDeletionDetectionPolicy.odataType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNativeBlobSoftDeleteDeletionDetectionPolicy;
        });
    }
}
