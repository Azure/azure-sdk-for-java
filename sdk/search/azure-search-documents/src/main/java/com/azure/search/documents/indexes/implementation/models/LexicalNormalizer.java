// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.azure.search.documents.indexes.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Base type for normalizers. */
@Fluent
public class LexicalNormalizer {
    /*
     * Identifies the concrete type of the normalizer.
     */
    @JsonProperty(value = "@odata.type", required = true)
    private String odataType;

    /*
     * The name of the normalizer. It must only contain letters, digits,
     * spaces, dashes or underscores, can only start and end with alphanumeric
     * characters, and is limited to 128 characters. It cannot end in
     * '.microsoft' nor '.lucene', nor be named 'asciifolding', 'standard',
     * 'lowercase', 'uppercase', or 'elision'.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * Creates an instance of LexicalNormalizer class.
     *
     * @param odataType the odataType value to set.
     * @param name the name value to set.
     */
    @JsonCreator
    public LexicalNormalizer(
            @JsonProperty(value = "@odata.type", required = true) String odataType,
            @JsonProperty(value = "name", required = true) String name) {
        this.odataType = odataType;
        this.name = name;
    }

    /**
     * Get the odataType property: Identifies the concrete type of the normalizer.
     *
     * @return the odataType value.
     */
    public String getOdataType() {
        return this.odataType;
    }

    /**
     * Get the name property: The name of the normalizer. It must only contain letters, digits, spaces, dashes or
     * underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. It cannot end
     * in '.microsoft' nor '.lucene', nor be named 'asciifolding', 'standard', 'lowercase', 'uppercase', or 'elision'.
     *
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }
}
