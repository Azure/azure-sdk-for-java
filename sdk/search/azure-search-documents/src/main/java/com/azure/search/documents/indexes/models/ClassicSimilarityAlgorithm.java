// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.azure.search.documents.indexes.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.serializer.JsonUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.util.Objects;

/**
 * Legacy similarity algorithm which uses the Lucene TFIDFSimilarity implementation of TF-IDF. This variation of TF-IDF
 * introduces static document length normalization as well as coordinating factors that penalize documents that only
 * partially match the searched queries.
 */
@Immutable
public final class ClassicSimilarityAlgorithm extends SimilarityAlgorithm {
    private String odataType = "#Microsoft.Azure.Search.ClassicSimilarity";

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("@odata.type", odataType);
        return jsonWriter.writeEndObject().flush();
    }

    public static ClassicSimilarityAlgorithm fromJson(JsonReader jsonReader) {
        return JsonUtils.readObject(
                jsonReader,
                reader -> {
                    boolean odataTypeFound = false;
                    String odataType = null;
                    while (reader.nextToken() != JsonToken.END_OBJECT) {
                        String fieldName = reader.getFieldName();
                        reader.nextToken();

                        if ("@odata.type".equals(fieldName)) {
                            odataTypeFound = true;
                            odataType = reader.getStringValue();
                        } else {
                            reader.skipChildren();
                        }
                    }

                    if (!odataTypeFound || !Objects.equals(odataType, "#Microsoft.Azure.Search.ClassicSimilarity")) {
                        throw new IllegalStateException(
                                "'@odata.type' was expected to be non-null and equal to '#Microsoft.Azure.Search.ClassicSimilarity'. The found '@odata.type' was '"
                                        + odataType
                                        + "'.");
                    }

                    ClassicSimilarityAlgorithm deserializedValue = new ClassicSimilarityAlgorithm();

                    return deserializedValue;
                });
    }
}
