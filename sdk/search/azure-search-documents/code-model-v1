{
 "$id": "1",
 "modelTypes": [
  {
   "$id": "2",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "3",
     "isReadOnly": false,
     "realPath": [
      "text"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "4",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "5",
      "fixed": false,
      "raw": "The text to break into tokens."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "6",
      "fixed": false,
      "raw": "text"
     },
     "serializedName": "text",
     "modelType": {
      "$id": "7",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "8",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "9",
     "isReadOnly": false,
     "realPath": [
      "analyzer"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "10",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "11",
      "fixed": false,
      "raw": "The name of the analyzer to use to break the given text. If this parameter is not specified, you must specify a tokenizer instead. The tokenizer and analyzer parameters are mutually exclusive."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "LexicalAnalyzerName",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LexicalAnalyzerName"
       ]
      },
      "x-ms-enum": {
       "name": "LexicalAnalyzerName",
       "modelAsString": true,
       "values": [
        {
         "value": "ar.microsoft",
         "name": "ArMicrosoft",
         "description": "Microsoft analyzer for Arabic."
        },
        {
         "value": "ar.lucene",
         "name": "ArLucene",
         "description": "Lucene analyzer for Arabic."
        },
        {
         "value": "hy.lucene",
         "name": "HyLucene",
         "description": "Lucene analyzer for Armenian."
        },
        {
         "value": "bn.microsoft",
         "name": "BnMicrosoft",
         "description": "Microsoft analyzer for Bangla."
        },
        {
         "value": "eu.lucene",
         "name": "EuLucene",
         "description": "Lucene analyzer for Basque."
        },
        {
         "value": "bg.microsoft",
         "name": "BgMicrosoft",
         "description": "Microsoft analyzer for Bulgarian."
        },
        {
         "value": "bg.lucene",
         "name": "BgLucene",
         "description": "Lucene analyzer for Bulgarian."
        },
        {
         "value": "ca.microsoft",
         "name": "CaMicrosoft",
         "description": "Microsoft analyzer for Catalan."
        },
        {
         "value": "ca.lucene",
         "name": "CaLucene",
         "description": "Lucene analyzer for Catalan."
        },
        {
         "value": "zh-Hans.microsoft",
         "name": "ZhHansMicrosoft",
         "description": "Microsoft analyzer for Chinese (Simplified)."
        },
        {
         "value": "zh-Hans.lucene",
         "name": "ZhHansLucene",
         "description": "Lucene analyzer for Chinese (Simplified)."
        },
        {
         "value": "zh-Hant.microsoft",
         "name": "ZhHantMicrosoft",
         "description": "Microsoft analyzer for Chinese (Traditional)."
        },
        {
         "value": "zh-Hant.lucene",
         "name": "ZhHantLucene",
         "description": "Lucene analyzer for Chinese (Traditional)."
        },
        {
         "value": "hr.microsoft",
         "name": "HrMicrosoft",
         "description": "Microsoft analyzer for Croatian."
        },
        {
         "value": "cs.microsoft",
         "name": "CsMicrosoft",
         "description": "Microsoft analyzer for Czech."
        },
        {
         "value": "cs.lucene",
         "name": "CsLucene",
         "description": "Lucene analyzer for Czech."
        },
        {
         "value": "da.microsoft",
         "name": "DaMicrosoft",
         "description": "Microsoft analyzer for Danish."
        },
        {
         "value": "da.lucene",
         "name": "DaLucene",
         "description": "Lucene analyzer for Danish."
        },
        {
         "value": "nl.microsoft",
         "name": "NlMicrosoft",
         "description": "Microsoft analyzer for Dutch."
        },
        {
         "value": "nl.lucene",
         "name": "NlLucene",
         "description": "Lucene analyzer for Dutch."
        },
        {
         "value": "en.microsoft",
         "name": "EnMicrosoft",
         "description": "Microsoft analyzer for English."
        },
        {
         "value": "en.lucene",
         "name": "EnLucene",
         "description": "Lucene analyzer for English."
        },
        {
         "value": "et.microsoft",
         "name": "EtMicrosoft",
         "description": "Microsoft analyzer for Estonian."
        },
        {
         "value": "fi.microsoft",
         "name": "FiMicrosoft",
         "description": "Microsoft analyzer for Finnish."
        },
        {
         "value": "fi.lucene",
         "name": "FiLucene",
         "description": "Lucene analyzer for Finnish."
        },
        {
         "value": "fr.microsoft",
         "name": "FrMicrosoft",
         "description": "Microsoft analyzer for French."
        },
        {
         "value": "fr.lucene",
         "name": "FrLucene",
         "description": "Lucene analyzer for French."
        },
        {
         "value": "gl.lucene",
         "name": "GlLucene",
         "description": "Lucene analyzer for Galician."
        },
        {
         "value": "de.microsoft",
         "name": "DeMicrosoft",
         "description": "Microsoft analyzer for German."
        },
        {
         "value": "de.lucene",
         "name": "DeLucene",
         "description": "Lucene analyzer for German."
        },
        {
         "value": "el.microsoft",
         "name": "ElMicrosoft",
         "description": "Microsoft analyzer for Greek."
        },
        {
         "value": "el.lucene",
         "name": "ElLucene",
         "description": "Lucene analyzer for Greek."
        },
        {
         "value": "gu.microsoft",
         "name": "GuMicrosoft",
         "description": "Microsoft analyzer for Gujarati."
        },
        {
         "value": "he.microsoft",
         "name": "HeMicrosoft",
         "description": "Microsoft analyzer for Hebrew."
        },
        {
         "value": "hi.microsoft",
         "name": "HiMicrosoft",
         "description": "Microsoft analyzer for Hindi."
        },
        {
         "value": "hi.lucene",
         "name": "HiLucene",
         "description": "Lucene analyzer for Hindi."
        },
        {
         "value": "hu.microsoft",
         "name": "HuMicrosoft",
         "description": "Microsoft analyzer for Hungarian."
        },
        {
         "value": "hu.lucene",
         "name": "HuLucene",
         "description": "Lucene analyzer for Hungarian."
        },
        {
         "value": "is.microsoft",
         "name": "IsMicrosoft",
         "description": "Microsoft analyzer for Icelandic."
        },
        {
         "value": "id.microsoft",
         "name": "IdMicrosoft",
         "description": "Microsoft analyzer for Indonesian (Bahasa)."
        },
        {
         "value": "id.lucene",
         "name": "IdLucene",
         "description": "Lucene analyzer for Indonesian."
        },
        {
         "value": "ga.lucene",
         "name": "GaLucene",
         "description": "Lucene analyzer for Irish."
        },
        {
         "value": "it.microsoft",
         "name": "ItMicrosoft",
         "description": "Microsoft analyzer for Italian."
        },
        {
         "value": "it.lucene",
         "name": "ItLucene",
         "description": "Lucene analyzer for Italian."
        },
        {
         "value": "ja.microsoft",
         "name": "JaMicrosoft",
         "description": "Microsoft analyzer for Japanese."
        },
        {
         "value": "ja.lucene",
         "name": "JaLucene",
         "description": "Lucene analyzer for Japanese."
        },
        {
         "value": "kn.microsoft",
         "name": "KnMicrosoft",
         "description": "Microsoft analyzer for Kannada."
        },
        {
         "value": "ko.microsoft",
         "name": "KoMicrosoft",
         "description": "Microsoft analyzer for Korean."
        },
        {
         "value": "ko.lucene",
         "name": "KoLucene",
         "description": "Lucene analyzer for Korean."
        },
        {
         "value": "lv.microsoft",
         "name": "LvMicrosoft",
         "description": "Microsoft analyzer for Latvian."
        },
        {
         "value": "lv.lucene",
         "name": "LvLucene",
         "description": "Lucene analyzer for Latvian."
        },
        {
         "value": "lt.microsoft",
         "name": "LtMicrosoft",
         "description": "Microsoft analyzer for Lithuanian."
        },
        {
         "value": "ml.microsoft",
         "name": "MlMicrosoft",
         "description": "Microsoft analyzer for Malayalam."
        },
        {
         "value": "ms.microsoft",
         "name": "MsMicrosoft",
         "description": "Microsoft analyzer for Malay (Latin)."
        },
        {
         "value": "mr.microsoft",
         "name": "MrMicrosoft",
         "description": "Microsoft analyzer for Marathi."
        },
        {
         "value": "nb.microsoft",
         "name": "NbMicrosoft",
         "description": "Microsoft analyzer for Norwegian (Bokm√•l)."
        },
        {
         "value": "no.lucene",
         "name": "NoLucene",
         "description": "Lucene analyzer for Norwegian."
        },
        {
         "value": "fa.lucene",
         "name": "FaLucene",
         "description": "Lucene analyzer for Persian."
        },
        {
         "value": "pl.microsoft",
         "name": "PlMicrosoft",
         "description": "Microsoft analyzer for Polish."
        },
        {
         "value": "pl.lucene",
         "name": "PlLucene",
         "description": "Lucene analyzer for Polish."
        },
        {
         "value": "pt-BR.microsoft",
         "name": "PtBrMicrosoft",
         "description": "Microsoft analyzer for Portuguese (Brazil)."
        },
        {
         "value": "pt-BR.lucene",
         "name": "PtBrLucene",
         "description": "Lucene analyzer for Portuguese (Brazil)."
        },
        {
         "value": "pt-PT.microsoft",
         "name": "PtPtMicrosoft",
         "description": "Microsoft analyzer for Portuguese (Portugal)."
        },
        {
         "value": "pt-PT.lucene",
         "name": "PtPtLucene",
         "description": "Lucene analyzer for Portuguese (Portugal)."
        },
        {
         "value": "pa.microsoft",
         "name": "PaMicrosoft",
         "description": "Microsoft analyzer for Punjabi."
        },
        {
         "value": "ro.microsoft",
         "name": "RoMicrosoft",
         "description": "Microsoft analyzer for Romanian."
        },
        {
         "value": "ro.lucene",
         "name": "RoLucene",
         "description": "Lucene analyzer for Romanian."
        },
        {
         "value": "ru.microsoft",
         "name": "RuMicrosoft",
         "description": "Microsoft analyzer for Russian."
        },
        {
         "value": "ru.lucene",
         "name": "RuLucene",
         "description": "Lucene analyzer for Russian."
        },
        {
         "value": "sr-cyrillic.microsoft",
         "name": "SrCyrillicMicrosoft",
         "description": "Microsoft analyzer for Serbian (Cyrillic)."
        },
        {
         "value": "sr-latin.microsoft",
         "name": "SrLatinMicrosoft",
         "description": "Microsoft analyzer for Serbian (Latin)."
        },
        {
         "value": "sk.microsoft",
         "name": "SkMicrosoft",
         "description": "Microsoft analyzer for Slovak."
        },
        {
         "value": "sl.microsoft",
         "name": "SlMicrosoft",
         "description": "Microsoft analyzer for Slovenian."
        },
        {
         "value": "es.microsoft",
         "name": "EsMicrosoft",
         "description": "Microsoft analyzer for Spanish."
        },
        {
         "value": "es.lucene",
         "name": "EsLucene",
         "description": "Lucene analyzer for Spanish."
        },
        {
         "value": "sv.microsoft",
         "name": "SvMicrosoft",
         "description": "Microsoft analyzer for Swedish."
        },
        {
         "value": "sv.lucene",
         "name": "SvLucene",
         "description": "Lucene analyzer for Swedish."
        },
        {
         "value": "ta.microsoft",
         "name": "TaMicrosoft",
         "description": "Microsoft analyzer for Tamil."
        },
        {
         "value": "te.microsoft",
         "name": "TeMicrosoft",
         "description": "Microsoft analyzer for Telugu."
        },
        {
         "value": "th.microsoft",
         "name": "ThMicrosoft",
         "description": "Microsoft analyzer for Thai."
        },
        {
         "value": "th.lucene",
         "name": "ThLucene",
         "description": "Lucene analyzer for Thai."
        },
        {
         "value": "tr.microsoft",
         "name": "TrMicrosoft",
         "description": "Microsoft analyzer for Turkish."
        },
        {
         "value": "tr.lucene",
         "name": "TrLucene",
         "description": "Lucene analyzer for Turkish."
        },
        {
         "value": "uk.microsoft",
         "name": "UkMicrosoft",
         "description": "Microsoft analyzer for Ukrainian."
        },
        {
         "value": "ur.microsoft",
         "name": "UrMicrosoft",
         "description": "Microsoft analyzer for Urdu."
        },
        {
         "value": "vi.microsoft",
         "name": "ViMicrosoft",
         "description": "Microsoft analyzer for Vietnamese."
        },
        {
         "value": "standard.lucene",
         "name": "StandardLucene",
         "description": "Standard Lucene analyzer."
        },
        {
         "value": "standardasciifolding.lucene",
         "name": "StandardAsciiFoldingLucene",
         "description": "Standard ASCII Folding Lucene analyzer. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#Analyzers"
        },
        {
         "value": "keyword",
         "name": "Keyword",
         "description": "Treats the entire content of a field as a single token. This is useful for data like zip codes, ids, and some product names. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordAnalyzer.html"
        },
        {
         "value": "pattern",
         "name": "Pattern",
         "description": "Flexibly separates text into terms via a regular expression pattern. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.html"
        },
        {
         "value": "simple",
         "name": "Simple",
         "description": "Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/SimpleAnalyzer.html"
        },
        {
         "value": "stop",
         "name": "Stop",
         "description": "Divides text at non-letters; Applies the lowercase and stopword token filters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopAnalyzer.html"
        },
        {
         "value": "whitespace",
         "name": "Whitespace",
         "description": "An analyzer that uses the whitespace tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceAnalyzer.html"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "12",
      "fixed": false,
      "raw": "analyzer"
     },
     "serializedName": "analyzer",
     "modelType": {
      "$id": "13",
      "$type": "EnumType",
      "values": [
       {
        "$id": "14",
        "description": "Microsoft analyzer for Arabic.",
        "name": "ArMicrosoft",
        "serializedName": "ar.microsoft"
       },
       {
        "$id": "15",
        "description": "Lucene analyzer for Arabic.",
        "name": "ArLucene",
        "serializedName": "ar.lucene"
       },
       {
        "$id": "16",
        "description": "Lucene analyzer for Armenian.",
        "name": "HyLucene",
        "serializedName": "hy.lucene"
       },
       {
        "$id": "17",
        "description": "Microsoft analyzer for Bangla.",
        "name": "BnMicrosoft",
        "serializedName": "bn.microsoft"
       },
       {
        "$id": "18",
        "description": "Lucene analyzer for Basque.",
        "name": "EuLucene",
        "serializedName": "eu.lucene"
       },
       {
        "$id": "19",
        "description": "Microsoft analyzer for Bulgarian.",
        "name": "BgMicrosoft",
        "serializedName": "bg.microsoft"
       },
       {
        "$id": "20",
        "description": "Lucene analyzer for Bulgarian.",
        "name": "BgLucene",
        "serializedName": "bg.lucene"
       },
       {
        "$id": "21",
        "description": "Microsoft analyzer for Catalan.",
        "name": "CaMicrosoft",
        "serializedName": "ca.microsoft"
       },
       {
        "$id": "22",
        "description": "Lucene analyzer for Catalan.",
        "name": "CaLucene",
        "serializedName": "ca.lucene"
       },
       {
        "$id": "23",
        "description": "Microsoft analyzer for Chinese (Simplified).",
        "name": "ZhHansMicrosoft",
        "serializedName": "zh-Hans.microsoft"
       },
       {
        "$id": "24",
        "description": "Lucene analyzer for Chinese (Simplified).",
        "name": "ZhHansLucene",
        "serializedName": "zh-Hans.lucene"
       },
       {
        "$id": "25",
        "description": "Microsoft analyzer for Chinese (Traditional).",
        "name": "ZhHantMicrosoft",
        "serializedName": "zh-Hant.microsoft"
       },
       {
        "$id": "26",
        "description": "Lucene analyzer for Chinese (Traditional).",
        "name": "ZhHantLucene",
        "serializedName": "zh-Hant.lucene"
       },
       {
        "$id": "27",
        "description": "Microsoft analyzer for Croatian.",
        "name": "HrMicrosoft",
        "serializedName": "hr.microsoft"
       },
       {
        "$id": "28",
        "description": "Microsoft analyzer for Czech.",
        "name": "CsMicrosoft",
        "serializedName": "cs.microsoft"
       },
       {
        "$id": "29",
        "description": "Lucene analyzer for Czech.",
        "name": "CsLucene",
        "serializedName": "cs.lucene"
       },
       {
        "$id": "30",
        "description": "Microsoft analyzer for Danish.",
        "name": "DaMicrosoft",
        "serializedName": "da.microsoft"
       },
       {
        "$id": "31",
        "description": "Lucene analyzer for Danish.",
        "name": "DaLucene",
        "serializedName": "da.lucene"
       },
       {
        "$id": "32",
        "description": "Microsoft analyzer for Dutch.",
        "name": "NlMicrosoft",
        "serializedName": "nl.microsoft"
       },
       {
        "$id": "33",
        "description": "Lucene analyzer for Dutch.",
        "name": "NlLucene",
        "serializedName": "nl.lucene"
       },
       {
        "$id": "34",
        "description": "Microsoft analyzer for English.",
        "name": "EnMicrosoft",
        "serializedName": "en.microsoft"
       },
       {
        "$id": "35",
        "description": "Lucene analyzer for English.",
        "name": "EnLucene",
        "serializedName": "en.lucene"
       },
       {
        "$id": "36",
        "description": "Microsoft analyzer for Estonian.",
        "name": "EtMicrosoft",
        "serializedName": "et.microsoft"
       },
       {
        "$id": "37",
        "description": "Microsoft analyzer for Finnish.",
        "name": "FiMicrosoft",
        "serializedName": "fi.microsoft"
       },
       {
        "$id": "38",
        "description": "Lucene analyzer for Finnish.",
        "name": "FiLucene",
        "serializedName": "fi.lucene"
       },
       {
        "$id": "39",
        "description": "Microsoft analyzer for French.",
        "name": "FrMicrosoft",
        "serializedName": "fr.microsoft"
       },
       {
        "$id": "40",
        "description": "Lucene analyzer for French.",
        "name": "FrLucene",
        "serializedName": "fr.lucene"
       },
       {
        "$id": "41",
        "description": "Lucene analyzer for Galician.",
        "name": "GlLucene",
        "serializedName": "gl.lucene"
       },
       {
        "$id": "42",
        "description": "Microsoft analyzer for German.",
        "name": "DeMicrosoft",
        "serializedName": "de.microsoft"
       },
       {
        "$id": "43",
        "description": "Lucene analyzer for German.",
        "name": "DeLucene",
        "serializedName": "de.lucene"
       },
       {
        "$id": "44",
        "description": "Microsoft analyzer for Greek.",
        "name": "ElMicrosoft",
        "serializedName": "el.microsoft"
       },
       {
        "$id": "45",
        "description": "Lucene analyzer for Greek.",
        "name": "ElLucene",
        "serializedName": "el.lucene"
       },
       {
        "$id": "46",
        "description": "Microsoft analyzer for Gujarati.",
        "name": "GuMicrosoft",
        "serializedName": "gu.microsoft"
       },
       {
        "$id": "47",
        "description": "Microsoft analyzer for Hebrew.",
        "name": "HeMicrosoft",
        "serializedName": "he.microsoft"
       },
       {
        "$id": "48",
        "description": "Microsoft analyzer for Hindi.",
        "name": "HiMicrosoft",
        "serializedName": "hi.microsoft"
       },
       {
        "$id": "49",
        "description": "Lucene analyzer for Hindi.",
        "name": "HiLucene",
        "serializedName": "hi.lucene"
       },
       {
        "$id": "50",
        "description": "Microsoft analyzer for Hungarian.",
        "name": "HuMicrosoft",
        "serializedName": "hu.microsoft"
       },
       {
        "$id": "51",
        "description": "Lucene analyzer for Hungarian.",
        "name": "HuLucene",
        "serializedName": "hu.lucene"
       },
       {
        "$id": "52",
        "description": "Microsoft analyzer for Icelandic.",
        "name": "IsMicrosoft",
        "serializedName": "is.microsoft"
       },
       {
        "$id": "53",
        "description": "Microsoft analyzer for Indonesian (Bahasa).",
        "name": "IdMicrosoft",
        "serializedName": "id.microsoft"
       },
       {
        "$id": "54",
        "description": "Lucene analyzer for Indonesian.",
        "name": "IdLucene",
        "serializedName": "id.lucene"
       },
       {
        "$id": "55",
        "description": "Lucene analyzer for Irish.",
        "name": "GaLucene",
        "serializedName": "ga.lucene"
       },
       {
        "$id": "56",
        "description": "Microsoft analyzer for Italian.",
        "name": "ItMicrosoft",
        "serializedName": "it.microsoft"
       },
       {
        "$id": "57",
        "description": "Lucene analyzer for Italian.",
        "name": "ItLucene",
        "serializedName": "it.lucene"
       },
       {
        "$id": "58",
        "description": "Microsoft analyzer for Japanese.",
        "name": "JaMicrosoft",
        "serializedName": "ja.microsoft"
       },
       {
        "$id": "59",
        "description": "Lucene analyzer for Japanese.",
        "name": "JaLucene",
        "serializedName": "ja.lucene"
       },
       {
        "$id": "60",
        "description": "Microsoft analyzer for Kannada.",
        "name": "KnMicrosoft",
        "serializedName": "kn.microsoft"
       },
       {
        "$id": "61",
        "description": "Microsoft analyzer for Korean.",
        "name": "KoMicrosoft",
        "serializedName": "ko.microsoft"
       },
       {
        "$id": "62",
        "description": "Lucene analyzer for Korean.",
        "name": "KoLucene",
        "serializedName": "ko.lucene"
       },
       {
        "$id": "63",
        "description": "Microsoft analyzer for Latvian.",
        "name": "LvMicrosoft",
        "serializedName": "lv.microsoft"
       },
       {
        "$id": "64",
        "description": "Lucene analyzer for Latvian.",
        "name": "LvLucene",
        "serializedName": "lv.lucene"
       },
       {
        "$id": "65",
        "description": "Microsoft analyzer for Lithuanian.",
        "name": "LtMicrosoft",
        "serializedName": "lt.microsoft"
       },
       {
        "$id": "66",
        "description": "Microsoft analyzer for Malayalam.",
        "name": "MlMicrosoft",
        "serializedName": "ml.microsoft"
       },
       {
        "$id": "67",
        "description": "Microsoft analyzer for Malay (Latin).",
        "name": "MsMicrosoft",
        "serializedName": "ms.microsoft"
       },
       {
        "$id": "68",
        "description": "Microsoft analyzer for Marathi.",
        "name": "MrMicrosoft",
        "serializedName": "mr.microsoft"
       },
       {
        "$id": "69",
        "description": "Microsoft analyzer for Norwegian (Bokm√•l).",
        "name": "NbMicrosoft",
        "serializedName": "nb.microsoft"
       },
       {
        "$id": "70",
        "description": "Lucene analyzer for Norwegian.",
        "name": "NoLucene",
        "serializedName": "no.lucene"
       },
       {
        "$id": "71",
        "description": "Lucene analyzer for Persian.",
        "name": "FaLucene",
        "serializedName": "fa.lucene"
       },
       {
        "$id": "72",
        "description": "Microsoft analyzer for Polish.",
        "name": "PlMicrosoft",
        "serializedName": "pl.microsoft"
       },
       {
        "$id": "73",
        "description": "Lucene analyzer for Polish.",
        "name": "PlLucene",
        "serializedName": "pl.lucene"
       },
       {
        "$id": "74",
        "description": "Microsoft analyzer for Portuguese (Brazil).",
        "name": "PtBrMicrosoft",
        "serializedName": "pt-BR.microsoft"
       },
       {
        "$id": "75",
        "description": "Lucene analyzer for Portuguese (Brazil).",
        "name": "PtBrLucene",
        "serializedName": "pt-BR.lucene"
       },
       {
        "$id": "76",
        "description": "Microsoft analyzer for Portuguese (Portugal).",
        "name": "PtPtMicrosoft",
        "serializedName": "pt-PT.microsoft"
       },
       {
        "$id": "77",
        "description": "Lucene analyzer for Portuguese (Portugal).",
        "name": "PtPtLucene",
        "serializedName": "pt-PT.lucene"
       },
       {
        "$id": "78",
        "description": "Microsoft analyzer for Punjabi.",
        "name": "PaMicrosoft",
        "serializedName": "pa.microsoft"
       },
       {
        "$id": "79",
        "description": "Microsoft analyzer for Romanian.",
        "name": "RoMicrosoft",
        "serializedName": "ro.microsoft"
       },
       {
        "$id": "80",
        "description": "Lucene analyzer for Romanian.",
        "name": "RoLucene",
        "serializedName": "ro.lucene"
       },
       {
        "$id": "81",
        "description": "Microsoft analyzer for Russian.",
        "name": "RuMicrosoft",
        "serializedName": "ru.microsoft"
       },
       {
        "$id": "82",
        "description": "Lucene analyzer for Russian.",
        "name": "RuLucene",
        "serializedName": "ru.lucene"
       },
       {
        "$id": "83",
        "description": "Microsoft analyzer for Serbian (Cyrillic).",
        "name": "SrCyrillicMicrosoft",
        "serializedName": "sr-cyrillic.microsoft"
       },
       {
        "$id": "84",
        "description": "Microsoft analyzer for Serbian (Latin).",
        "name": "SrLatinMicrosoft",
        "serializedName": "sr-latin.microsoft"
       },
       {
        "$id": "85",
        "description": "Microsoft analyzer for Slovak.",
        "name": "SkMicrosoft",
        "serializedName": "sk.microsoft"
       },
       {
        "$id": "86",
        "description": "Microsoft analyzer for Slovenian.",
        "name": "SlMicrosoft",
        "serializedName": "sl.microsoft"
       },
       {
        "$id": "87",
        "description": "Microsoft analyzer for Spanish.",
        "name": "EsMicrosoft",
        "serializedName": "es.microsoft"
       },
       {
        "$id": "88",
        "description": "Lucene analyzer for Spanish.",
        "name": "EsLucene",
        "serializedName": "es.lucene"
       },
       {
        "$id": "89",
        "description": "Microsoft analyzer for Swedish.",
        "name": "SvMicrosoft",
        "serializedName": "sv.microsoft"
       },
       {
        "$id": "90",
        "description": "Lucene analyzer for Swedish.",
        "name": "SvLucene",
        "serializedName": "sv.lucene"
       },
       {
        "$id": "91",
        "description": "Microsoft analyzer for Tamil.",
        "name": "TaMicrosoft",
        "serializedName": "ta.microsoft"
       },
       {
        "$id": "92",
        "description": "Microsoft analyzer for Telugu.",
        "name": "TeMicrosoft",
        "serializedName": "te.microsoft"
       },
       {
        "$id": "93",
        "description": "Microsoft analyzer for Thai.",
        "name": "ThMicrosoft",
        "serializedName": "th.microsoft"
       },
       {
        "$id": "94",
        "description": "Lucene analyzer for Thai.",
        "name": "ThLucene",
        "serializedName": "th.lucene"
       },
       {
        "$id": "95",
        "description": "Microsoft analyzer for Turkish.",
        "name": "TrMicrosoft",
        "serializedName": "tr.microsoft"
       },
       {
        "$id": "96",
        "description": "Lucene analyzer for Turkish.",
        "name": "TrLucene",
        "serializedName": "tr.lucene"
       },
       {
        "$id": "97",
        "description": "Microsoft analyzer for Ukrainian.",
        "name": "UkMicrosoft",
        "serializedName": "uk.microsoft"
       },
       {
        "$id": "98",
        "description": "Microsoft analyzer for Urdu.",
        "name": "UrMicrosoft",
        "serializedName": "ur.microsoft"
       },
       {
        "$id": "99",
        "description": "Microsoft analyzer for Vietnamese.",
        "name": "ViMicrosoft",
        "serializedName": "vi.microsoft"
       },
       {
        "$id": "100",
        "description": "Standard Lucene analyzer.",
        "name": "StandardLucene",
        "serializedName": "standard.lucene"
       },
       {
        "$id": "101",
        "description": "Standard ASCII Folding Lucene analyzer. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#Analyzers",
        "name": "StandardAsciiFoldingLucene",
        "serializedName": "standardasciifolding.lucene"
       },
       {
        "$id": "102",
        "description": "Treats the entire content of a field as a single token. This is useful for data like zip codes, ids, and some product names. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordAnalyzer.html",
        "name": "Keyword",
        "serializedName": "keyword"
       },
       {
        "$id": "103",
        "description": "Flexibly separates text into terms via a regular expression pattern. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.html",
        "name": "Pattern",
        "serializedName": "pattern"
       },
       {
        "$id": "104",
        "description": "Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/SimpleAnalyzer.html",
        "name": "Simple",
        "serializedName": "simple"
       },
       {
        "$id": "105",
        "description": "Divides text at non-letters; Applies the lowercase and stopword token filters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopAnalyzer.html",
        "name": "Stop",
        "serializedName": "stop"
       },
       {
        "$id": "106",
        "description": "An analyzer that uses the whitespace tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceAnalyzer.html",
        "name": "Whitespace",
        "serializedName": "whitespace"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "107",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "108",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "109",
       "fixed": false,
       "raw": "LexicalAnalyzerName"
      },
      "deprecated": false
     }
    },
    {
     "$id": "110",
     "isReadOnly": false,
     "realPath": [
      "tokenizer"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "111",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "112",
      "fixed": false,
      "raw": "The name of the tokenizer to use to break the given text. If this parameter is not specified, you must specify an analyzer instead. The tokenizer and analyzer parameters are mutually exclusive."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "LexicalTokenizerName",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LexicalTokenizerName"
       ]
      },
      "x-ms-enum": {
       "name": "LexicalTokenizerName",
       "modelAsString": true,
       "values": [
        {
         "value": "classic",
         "name": "Classic",
         "description": "Grammar-based tokenizer that is suitable for processing most European-language documents. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html"
        },
        {
         "value": "edgeNGram",
         "name": "EdgeNGram",
         "description": "Tokenizes the input from an edge into n-grams of the given size(s). See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html"
        },
        {
         "value": "keyword_v2",
         "name": "Keyword",
         "description": "Emits the entire input as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html"
        },
        {
         "value": "letter",
         "name": "Letter",
         "description": "Divides text at non-letters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LetterTokenizer.html"
        },
        {
         "value": "lowercase",
         "name": "Lowercase",
         "description": "Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseTokenizer.html"
        },
        {
         "value": "microsoft_language_tokenizer",
         "name": "MicrosoftLanguageTokenizer",
         "description": "Divides text using language-specific rules."
        },
        {
         "value": "microsoft_language_stemming_tokenizer",
         "name": "MicrosoftLanguageStemmingTokenizer",
         "description": "Divides text using language-specific rules and reduces words to their base forms."
        },
        {
         "value": "nGram",
         "name": "NGram",
         "description": "Tokenizes the input into n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html"
        },
        {
         "value": "path_hierarchy_v2",
         "name": "PathHierarchy",
         "description": "Tokenizer for path-like hierarchies. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html"
        },
        {
         "value": "pattern",
         "name": "Pattern",
         "description": "Tokenizer that uses regex pattern matching to construct distinct tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html"
        },
        {
         "value": "standard_v2",
         "name": "Standard",
         "description": "Standard Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html"
        },
        {
         "value": "uax_url_email",
         "name": "UaxUrlEmail",
         "description": "Tokenizes urls and emails as one token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html"
        },
        {
         "value": "whitespace",
         "name": "Whitespace",
         "description": "Divides text at whitespace. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceTokenizer.html"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "113",
      "fixed": false,
      "raw": "tokenizer"
     },
     "serializedName": "tokenizer",
     "modelType": {
      "$id": "114",
      "$type": "EnumType",
      "values": [
       {
        "$id": "115",
        "description": "Grammar-based tokenizer that is suitable for processing most European-language documents. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html",
        "name": "Classic",
        "serializedName": "classic"
       },
       {
        "$id": "116",
        "description": "Tokenizes the input from an edge into n-grams of the given size(s). See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html",
        "name": "EdgeNGram",
        "serializedName": "edgeNGram"
       },
       {
        "$id": "117",
        "description": "Emits the entire input as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html",
        "name": "Keyword",
        "serializedName": "keyword_v2"
       },
       {
        "$id": "118",
        "description": "Divides text at non-letters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LetterTokenizer.html",
        "name": "Letter",
        "serializedName": "letter"
       },
       {
        "$id": "119",
        "description": "Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseTokenizer.html",
        "name": "Lowercase",
        "serializedName": "lowercase"
       },
       {
        "$id": "120",
        "description": "Divides text using language-specific rules.",
        "name": "MicrosoftLanguageTokenizer",
        "serializedName": "microsoft_language_tokenizer"
       },
       {
        "$id": "121",
        "description": "Divides text using language-specific rules and reduces words to their base forms.",
        "name": "MicrosoftLanguageStemmingTokenizer",
        "serializedName": "microsoft_language_stemming_tokenizer"
       },
       {
        "$id": "122",
        "description": "Tokenizes the input into n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html",
        "name": "NGram",
        "serializedName": "nGram"
       },
       {
        "$id": "123",
        "description": "Tokenizer for path-like hierarchies. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html",
        "name": "PathHierarchy",
        "serializedName": "path_hierarchy_v2"
       },
       {
        "$id": "124",
        "description": "Tokenizer that uses regex pattern matching to construct distinct tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html",
        "name": "Pattern",
        "serializedName": "pattern"
       },
       {
        "$id": "125",
        "description": "Standard Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html",
        "name": "Standard",
        "serializedName": "standard_v2"
       },
       {
        "$id": "126",
        "description": "Tokenizes urls and emails as one token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html",
        "name": "UaxUrlEmail",
        "serializedName": "uax_url_email"
       },
       {
        "$id": "127",
        "description": "Divides text at whitespace. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceTokenizer.html",
        "name": "Whitespace",
        "serializedName": "whitespace"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "128",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "129",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "130",
       "fixed": false,
       "raw": "LexicalTokenizerName"
      },
      "deprecated": false
     }
    },
    {
     "$id": "131",
     "isReadOnly": false,
     "realPath": [
      "tokenFilters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "132",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "133",
      "fixed": false,
      "raw": "An optional list of token filters to use when breaking the given text. This parameter can only be set when using the tokenizer parameter."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "134",
      "fixed": false,
      "raw": "tokenFilters"
     },
     "serializedName": "tokenFilters",
     "modelType": {
      "$id": "135",
      "$type": "SequenceType",
      "elementType": {
       "$id": "136",
       "$type": "EnumType",
       "values": [
        {
         "$id": "137",
         "description": "A token filter that applies the Arabic normalizer to normalize the orthography. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ar/ArabicNormalizationFilter.html",
         "name": "ArabicNormalization",
         "serializedName": "arabic_normalization"
        },
        {
         "$id": "138",
         "description": "Strips all characters after an apostrophe (including the apostrophe itself). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/tr/ApostropheFilter.html",
         "name": "Apostrophe",
         "serializedName": "apostrophe"
        },
        {
         "$id": "139",
         "description": "Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \"Basic Latin\" Unicode block) into their ASCII equivalents, if such equivalents exist. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html",
         "name": "AsciiFolding",
         "serializedName": "asciifolding"
        },
        {
         "$id": "140",
         "description": "Forms bigrams of CJK terms that are generated from the standard tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKBigramFilter.html",
         "name": "CjkBigram",
         "serializedName": "cjk_bigram"
        },
        {
         "$id": "141",
         "description": "Normalizes CJK width differences. Folds fullwidth ASCII variants into the equivalent basic Latin, and half-width Katakana variants into the equivalent Kana. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKWidthFilter.html",
         "name": "CjkWidth",
         "serializedName": "cjk_width"
        },
        {
         "$id": "142",
         "description": "Removes English possessives, and dots from acronyms. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicFilter.html",
         "name": "Classic",
         "serializedName": "classic"
        },
        {
         "$id": "143",
         "description": "Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/commongrams/CommonGramsFilter.html",
         "name": "CommonGram",
         "serializedName": "common_grams"
        },
        {
         "$id": "144",
         "description": "Generates n-grams of the given size(s) starting from the front or the back of an input token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.html",
         "name": "EdgeNGram",
         "serializedName": "edgeNGram_v2"
        },
        {
         "$id": "145",
         "description": "Removes elisions. For example, \"l'avion\" (the plane) will be converted to \"avion\" (plane). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html",
         "name": "Elision",
         "serializedName": "elision"
        },
        {
         "$id": "146",
         "description": "Normalizes German characters according to the heuristics of the German2 snowball algorithm. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/de/GermanNormalizationFilter.html",
         "name": "GermanNormalization",
         "serializedName": "german_normalization"
        },
        {
         "$id": "147",
         "description": "Normalizes text in Hindi to remove some differences in spelling variations. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/hi/HindiNormalizationFilter.html",
         "name": "HindiNormalization",
         "serializedName": "hindi_normalization"
        },
        {
         "$id": "148",
         "description": "Normalizes the Unicode representation of text in Indian languages. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/in/IndicNormalizationFilter.html",
         "name": "IndicNormalization",
         "serializedName": "indic_normalization"
        },
        {
         "$id": "149",
         "description": "Emits each incoming token twice, once as keyword and once as non-keyword. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordRepeatFilter.html",
         "name": "KeywordRepeat",
         "serializedName": "keyword_repeat"
        },
        {
         "$id": "150",
         "description": "A high-performance kstem filter for English. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/en/KStemFilter.html",
         "name": "KStem",
         "serializedName": "kstem"
        },
        {
         "$id": "151",
         "description": "Removes words that are too long or too short. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LengthFilter.html",
         "name": "Length",
         "serializedName": "length"
        },
        {
         "$id": "152",
         "description": "Limits the number of tokens while indexing. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter.html",
         "name": "Limit",
         "serializedName": "limit"
        },
        {
         "$id": "153",
         "description": "Normalizes token text to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseFilter.htm",
         "name": "Lowercase",
         "serializedName": "lowercase"
        },
        {
         "$id": "154",
         "description": "Generates n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenFilter.html",
         "name": "NGram",
         "serializedName": "nGram_v2"
        },
        {
         "$id": "155",
         "description": "Applies normalization for Persian. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/fa/PersianNormalizationFilter.html",
         "name": "PersianNormalization",
         "serializedName": "persian_normalization"
        },
        {
         "$id": "156",
         "description": "Create tokens for phonetic matches. See https://lucene.apache.org/core/4_10_3/analyzers-phonetic/org/apache/lucene/analysis/phonetic/package-tree.html",
         "name": "Phonetic",
         "serializedName": "phonetic"
        },
        {
         "$id": "157",
         "description": "Uses the Porter stemming algorithm to transform the token stream. See http://tartarus.org/~martin/PorterStemmer",
         "name": "PorterStem",
         "serializedName": "porter_stem"
        },
        {
         "$id": "158",
         "description": "Reverses the token string. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/reverse/ReverseStringFilter.html",
         "name": "Reverse",
         "serializedName": "reverse"
        },
        {
         "$id": "159",
         "description": "Normalizes use of the interchangeable Scandinavian characters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianNormalizationFilter.html",
         "name": "ScandinavianNormalization",
         "serializedName": "scandinavian_normalization"
        },
        {
         "$id": "160",
         "description": "Folds Scandinavian characters √•√Ö√§√¶√Ñ√Ü-&gt;a and √∂√ñ√∏√ò-&gt;o. It also discriminates against use of double vowels aa, ae, ao, oe and oo, leaving just the first one. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianFoldingFilter.html",
         "name": "ScandinavianFoldingNormalization",
         "serializedName": "scandinavian_folding"
        },
        {
         "$id": "161",
         "description": "Creates combinations of tokens as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/shingle/ShingleFilter.html",
         "name": "Shingle",
         "serializedName": "shingle"
        },
        {
         "$id": "162",
         "description": "A filter that stems words using a Snowball-generated stemmer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/snowball/SnowballFilter.html",
         "name": "Snowball",
         "serializedName": "snowball"
        },
        {
         "$id": "163",
         "description": "Normalizes the Unicode representation of Sorani text. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ckb/SoraniNormalizationFilter.html",
         "name": "SoraniNormalization",
         "serializedName": "sorani_normalization"
        },
        {
         "$id": "164",
         "description": "Language specific stemming filter. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#TokenFilters",
         "name": "Stemmer",
         "serializedName": "stemmer"
        },
        {
         "$id": "165",
         "description": "Removes stop words from a token stream. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopFilter.html",
         "name": "Stopwords",
         "serializedName": "stopwords"
        },
        {
         "$id": "166",
         "description": "Trims leading and trailing whitespace from tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TrimFilter.html",
         "name": "Trim",
         "serializedName": "trim"
        },
        {
         "$id": "167",
         "description": "Truncates the terms to a specific length. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilter.html",
         "name": "Truncate",
         "serializedName": "truncate"
        },
        {
         "$id": "168",
         "description": "Filters out tokens with same text as the previous token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.html",
         "name": "Unique",
         "serializedName": "unique"
        },
        {
         "$id": "169",
         "description": "Normalizes token text to upper case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/UpperCaseFilter.html",
         "name": "Uppercase",
         "serializedName": "uppercase"
        },
        {
         "$id": "170",
         "description": "Splits words into subwords and performs optional transformations on subword groups.",
         "name": "WordDelimiter",
         "serializedName": "word_delimiter"
        }
       ],
       "oldModelAsString": false,
       "modelAsString": true,
       "underlyingType": {
        "$id": "171",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "172",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       },
       "name": {
        "$id": "173",
        "fixed": false,
        "raw": "TokenFilterName"
       },
       "deprecated": false
      },
      "name": {
       "$id": "174",
       "fixed": false
      },
      "extensions": {
       "x-nullable": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "175",
     "isReadOnly": false,
     "realPath": [
      "charFilters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "176",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "177",
      "fixed": false,
      "raw": "An optional list of character filters to use when breaking the given text. This parameter can only be set when using the tokenizer parameter."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "178",
      "fixed": false,
      "raw": "charFilters"
     },
     "serializedName": "charFilters",
     "modelType": {
      "$id": "179",
      "$type": "SequenceType",
      "elementType": {
       "$id": "180",
       "$type": "EnumType",
       "values": [
        {
         "$id": "181",
         "description": "A character filter that attempts to strip out HTML constructs. See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.html",
         "name": "HtmlStrip",
         "serializedName": "html_strip"
        }
       ],
       "oldModelAsString": false,
       "modelAsString": true,
       "underlyingType": {
        "$id": "182",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "183",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       },
       "name": {
        "$id": "184",
        "fixed": false,
        "raw": "CharFilterName"
       },
       "deprecated": false
      },
      "name": {
       "$id": "185",
       "fixed": false
      },
      "extensions": {
       "x-nullable": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "AnalyzeRequest",
   "documentation": "Specifies some text and analysis components used to break that text into tokens.",
   "containsConstantProperties": false,
   "name": {
    "$id": "186",
    "fixed": false,
    "raw": "AnalyzeRequest"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "AnalyzeRequest",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/AnalyzeRequest"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "187",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "188",
     "isReadOnly": true,
     "realPath": [
      "token"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "189",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "190",
      "fixed": false,
      "raw": "The token returned by the analyzer."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "191",
      "fixed": false,
      "raw": "token"
     },
     "serializedName": "token",
     "modelType": {
      "$id": "192",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "193",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "194",
     "isReadOnly": true,
     "realPath": [
      "startOffset"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "195",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "196",
      "fixed": false,
      "raw": "The index of the first character of the token in the input text."
     },
     "extensions": {
      "x-nullable": false
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "197",
      "fixed": false,
      "raw": "startOffset"
     },
     "serializedName": "startOffset",
     "modelType": {
      "$id": "198",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "199",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "200",
     "isReadOnly": true,
     "realPath": [
      "endOffset"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "201",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "202",
      "fixed": false,
      "raw": "The index of the last character of the token in the input text."
     },
     "extensions": {
      "x-nullable": false
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "203",
      "fixed": false,
      "raw": "endOffset"
     },
     "serializedName": "endOffset",
     "modelType": {
      "$id": "204",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "205",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "206",
     "isReadOnly": true,
     "realPath": [
      "position"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "207",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "208",
      "fixed": false,
      "raw": "The position of the token in the input text relative to other tokens. The first token in the input text has position 0, the next has position 1, and so on. Depending on the analyzer used, some tokens might have the same position, for example if they are synonyms of each other."
     },
     "extensions": {
      "x-nullable": false
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "209",
      "fixed": false,
      "raw": "position"
     },
     "serializedName": "position",
     "modelType": {
      "$id": "210",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "211",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "AnalyzedTokenInfo",
   "documentation": "Information about a token returned by an analyzer.",
   "containsConstantProperties": false,
   "name": {
    "$id": "212",
    "fixed": false,
    "raw": "AnalyzedTokenInfo"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "AnalyzedTokenInfo",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/AnalyzedTokenInfo"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "213",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "214",
     "isReadOnly": false,
     "realPath": [
      "tokens"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "215",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "216",
      "fixed": false,
      "raw": "The list of tokens returned by the analyzer specified in the request."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "217",
      "fixed": false,
      "raw": "tokens"
     },
     "serializedName": "tokens",
     "modelType": {
      "$id": "218",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "187"
      },
      "name": {
       "$id": "219",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "AnalyzeResult",
   "documentation": "The result of testing an analyzer on text.",
   "containsConstantProperties": false,
   "name": {
    "$id": "220",
    "fixed": false,
    "raw": "AnalyzeResult"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "AnalyzeResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/AnalyzeResult"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "221",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "222",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "223",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "224",
      "fixed": false,
      "raw": "The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "225",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "226",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "227",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "LexicalAnalyzer",
   "polymorphicDiscriminator": "@odata.type",
   "documentation": "Base type for analyzers.",
   "containsConstantProperties": false,
   "name": {
    "$id": "228",
    "fixed": false,
    "raw": "LexicalAnalyzer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "LexicalAnalyzer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LexicalAnalyzer"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "229",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "230",
     "isReadOnly": false,
     "realPath": [
      "tokenizer"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "231",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "232",
      "fixed": false,
      "raw": "The name of the tokenizer to use to divide continuous text into a sequence of tokens, such as breaking a sentence into words."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "LexicalTokenizerName",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LexicalTokenizerName"
       ]
      },
      "x-ms-enum": {
       "name": "LexicalTokenizerName",
       "modelAsString": true,
       "values": [
        {
         "value": "classic",
         "name": "Classic",
         "description": "Grammar-based tokenizer that is suitable for processing most European-language documents. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html"
        },
        {
         "value": "edgeNGram",
         "name": "EdgeNGram",
         "description": "Tokenizes the input from an edge into n-grams of the given size(s). See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html"
        },
        {
         "value": "keyword_v2",
         "name": "Keyword",
         "description": "Emits the entire input as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html"
        },
        {
         "value": "letter",
         "name": "Letter",
         "description": "Divides text at non-letters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LetterTokenizer.html"
        },
        {
         "value": "lowercase",
         "name": "Lowercase",
         "description": "Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseTokenizer.html"
        },
        {
         "value": "microsoft_language_tokenizer",
         "name": "MicrosoftLanguageTokenizer",
         "description": "Divides text using language-specific rules."
        },
        {
         "value": "microsoft_language_stemming_tokenizer",
         "name": "MicrosoftLanguageStemmingTokenizer",
         "description": "Divides text using language-specific rules and reduces words to their base forms."
        },
        {
         "value": "nGram",
         "name": "NGram",
         "description": "Tokenizes the input into n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html"
        },
        {
         "value": "path_hierarchy_v2",
         "name": "PathHierarchy",
         "description": "Tokenizer for path-like hierarchies. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html"
        },
        {
         "value": "pattern",
         "name": "Pattern",
         "description": "Tokenizer that uses regex pattern matching to construct distinct tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html"
        },
        {
         "value": "standard_v2",
         "name": "Standard",
         "description": "Standard Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html"
        },
        {
         "value": "uax_url_email",
         "name": "UaxUrlEmail",
         "description": "Tokenizes urls and emails as one token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html"
        },
        {
         "value": "whitespace",
         "name": "Whitespace",
         "description": "Divides text at whitespace. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceTokenizer.html"
        }
       ]
      }
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "233",
      "fixed": false,
      "raw": "tokenizer"
     },
     "serializedName": "tokenizer",
     "modelType": {
      "$ref": "114"
     }
    },
    {
     "$id": "234",
     "isReadOnly": false,
     "realPath": [
      "tokenFilters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "235",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "236",
      "fixed": false,
      "raw": "A list of token filters used to filter out or modify the tokens generated by a tokenizer. For example, you can specify a lowercase filter that converts all characters to lowercase. The filters are run in the order in which they are listed."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "237",
      "fixed": false,
      "raw": "tokenFilters"
     },
     "serializedName": "tokenFilters",
     "modelType": {
      "$id": "238",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "136"
      },
      "name": {
       "$id": "239",
       "fixed": false
      },
      "extensions": {
       "x-nullable": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "240",
     "isReadOnly": false,
     "realPath": [
      "charFilters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "241",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "242",
      "fixed": false,
      "raw": "A list of character filters used to prepare input text before it is processed by the tokenizer. For instance, they can replace certain characters or symbols. The filters are run in the order in which they are listed."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "243",
      "fixed": false,
      "raw": "charFilters"
     },
     "serializedName": "charFilters",
     "modelType": {
      "$id": "244",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "180"
      },
      "name": {
       "$id": "245",
       "fixed": false
      },
      "extensions": {
       "x-nullable": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.CustomAnalyzer",
   "baseModelType": {
    "$ref": "221"
   },
   "documentation": "Allows you to take control over the process of converting text into indexable/searchable tokens. It's a user-defined configuration consisting of a single predefined tokenizer and one or more filters. The tokenizer is responsible for breaking text into tokens, and the filters for modifying tokens emitted by the tokenizer.",
   "containsConstantProperties": false,
   "name": {
    "$id": "246",
    "fixed": false,
    "raw": "CustomAnalyzer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "CustomAnalyzer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/CustomAnalyzer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.CustomAnalyzer"
   },
   "deprecated": false
  },
  {
   "$id": "247",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "248",
     "isReadOnly": false,
     "realPath": [
      "lowercase"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "249",
      "fixed": false,
      "raw": "true"
     },
     "deprecated": false,
     "documentation": {
      "$id": "250",
      "fixed": false,
      "raw": "A value indicating whether terms should be lower-cased. Default is true."
     },
     "extensions": {
      "x-ms-client-name": "LowerCaseTerms"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "251",
      "fixed": false,
      "raw": "lowercase"
     },
     "serializedName": "lowercase",
     "modelType": {
      "$id": "252",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "253",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "254",
     "isReadOnly": false,
     "realPath": [
      "pattern"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "255",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "256",
      "fixed": false,
      "raw": "A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "257",
      "fixed": false,
      "raw": "pattern"
     },
     "serializedName": "pattern",
     "modelType": {
      "$id": "258",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "259",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "260",
     "isReadOnly": false,
     "realPath": [
      "flags"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "261",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "262",
      "fixed": false,
      "raw": "Regular expression flags."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "RegexFlags",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/RegexFlags"
       ]
      },
      "x-ms-enum": {
       "name": "RegexFlags",
       "modelAsString": true,
       "values": [
        {
         "value": "CANON_EQ",
         "name": "CanonEq",
         "description": "Enables canonical equivalence."
        },
        {
         "value": "CASE_INSENSITIVE",
         "name": "CaseInsensitive",
         "description": "Enables case-insensitive matching."
        },
        {
         "value": "COMMENTS",
         "name": "Comments",
         "description": "Permits whitespace and comments in the pattern."
        },
        {
         "value": "DOTALL",
         "name": "DotAll",
         "description": "Enables dotall mode."
        },
        {
         "value": "LITERAL",
         "name": "Literal",
         "description": "Enables literal parsing of the pattern."
        },
        {
         "value": "MULTILINE",
         "name": "Multiline",
         "description": "Enables multiline mode."
        },
        {
         "value": "UNICODE_CASE",
         "name": "UnicodeCase",
         "description": "Enables Unicode-aware case folding."
        },
        {
         "value": "UNIX_LINES",
         "name": "UnixLines",
         "description": "Enables Unix lines mode."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "263",
      "fixed": false,
      "raw": "flags"
     },
     "serializedName": "flags",
     "modelType": {
      "$id": "264",
      "$type": "EnumType",
      "values": [
       {
        "$id": "265",
        "description": "Enables canonical equivalence.",
        "name": "CanonEq",
        "serializedName": "CANON_EQ"
       },
       {
        "$id": "266",
        "description": "Enables case-insensitive matching.",
        "name": "CaseInsensitive",
        "serializedName": "CASE_INSENSITIVE"
       },
       {
        "$id": "267",
        "description": "Permits whitespace and comments in the pattern.",
        "name": "Comments",
        "serializedName": "COMMENTS"
       },
       {
        "$id": "268",
        "description": "Enables dotall mode.",
        "name": "DotAll",
        "serializedName": "DOTALL"
       },
       {
        "$id": "269",
        "description": "Enables literal parsing of the pattern.",
        "name": "Literal",
        "serializedName": "LITERAL"
       },
       {
        "$id": "270",
        "description": "Enables multiline mode.",
        "name": "Multiline",
        "serializedName": "MULTILINE"
       },
       {
        "$id": "271",
        "description": "Enables Unicode-aware case folding.",
        "name": "UnicodeCase",
        "serializedName": "UNICODE_CASE"
       },
       {
        "$id": "272",
        "description": "Enables Unix lines mode.",
        "name": "UnixLines",
        "serializedName": "UNIX_LINES"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "273",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "274",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "275",
       "fixed": false,
       "raw": "RegexFlags"
      },
      "deprecated": false
     }
    },
    {
     "$id": "276",
     "isReadOnly": false,
     "realPath": [
      "stopwords"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "277",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "278",
      "fixed": false,
      "raw": "A list of stopwords."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "279",
      "fixed": false,
      "raw": "stopwords"
     },
     "serializedName": "stopwords",
     "modelType": {
      "$id": "280",
      "$type": "SequenceType",
      "elementType": {
       "$id": "281",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "282",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "283",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.PatternAnalyzer",
   "baseModelType": {
    "$ref": "221"
   },
   "documentation": "Flexibly separates text into terms via a regular expression pattern. This analyzer is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "284",
    "fixed": false,
    "raw": "PatternAnalyzer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "PatternAnalyzer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/PatternAnalyzer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.PatternAnalyzer"
   },
   "deprecated": false
  },
  {
   "$id": "285",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "286",
     "isReadOnly": false,
     "realPath": [
      "maxTokenLength"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "287",
      "fixed": false,
      "raw": "255"
     },
     "deprecated": false,
     "documentation": {
      "$id": "288",
      "fixed": false,
      "raw": "The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "289",
      "fixed": false,
      "raw": "maxTokenLength"
     },
     "serializedName": "maxTokenLength",
     "modelType": {
      "$id": "290",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "291",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "292",
     "isReadOnly": false,
     "realPath": [
      "stopwords"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "293",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "294",
      "fixed": false,
      "raw": "A list of stopwords."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "295",
      "fixed": false,
      "raw": "stopwords"
     },
     "serializedName": "stopwords",
     "modelType": {
      "$id": "296",
      "$type": "SequenceType",
      "elementType": {
       "$id": "297",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "298",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "299",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.StandardAnalyzer",
   "baseModelType": {
    "$ref": "221"
   },
   "documentation": "Standard Apache Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardAnalyzer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "300",
    "fixed": false,
    "raw": "LuceneStandardAnalyzer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "LuceneStandardAnalyzer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LuceneStandardAnalyzer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.StandardAnalyzer"
   },
   "deprecated": false
  },
  {
   "$id": "301",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "302",
     "isReadOnly": false,
     "realPath": [
      "stopwords"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "303",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "304",
      "fixed": false,
      "raw": "A list of stopwords."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "305",
      "fixed": false,
      "raw": "stopwords"
     },
     "serializedName": "stopwords",
     "modelType": {
      "$id": "306",
      "$type": "SequenceType",
      "elementType": {
       "$id": "307",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "308",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "309",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.StopAnalyzer",
   "baseModelType": {
    "$ref": "221"
   },
   "documentation": "Divides text at non-letters; Applies the lowercase and stopword token filters. This analyzer is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopAnalyzer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "310",
    "fixed": false,
    "raw": "StopAnalyzer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "StopAnalyzer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/StopAnalyzer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.StopAnalyzer"
   },
   "deprecated": false
  },
  {
   "$id": "311",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "312",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "313",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "314",
      "fixed": false,
      "raw": "The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "315",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "316",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "317",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "LexicalTokenizer",
   "polymorphicDiscriminator": "@odata.type",
   "documentation": "Base type for tokenizers.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search",
   "containsConstantProperties": false,
   "name": {
    "$id": "318",
    "fixed": false,
    "raw": "LexicalTokenizer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "LexicalTokenizer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LexicalTokenizer"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "319",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "320",
     "isReadOnly": false,
     "realPath": [
      "maxTokenLength"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "321",
      "fixed": false,
      "raw": "255"
     },
     "deprecated": false,
     "documentation": {
      "$id": "322",
      "fixed": false,
      "raw": "The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "323",
      "fixed": false,
      "raw": "maxTokenLength"
     },
     "serializedName": "maxTokenLength",
     "modelType": {
      "$id": "324",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "325",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.ClassicTokenizer",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Grammar-based tokenizer that is suitable for processing most European-language documents. This tokenizer is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "326",
    "fixed": false,
    "raw": "ClassicTokenizer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ClassicTokenizer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ClassicTokenizer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.ClassicTokenizer"
   },
   "deprecated": false
  },
  {
   "$id": "327",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "328",
     "isReadOnly": false,
     "realPath": [
      "minGram"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "329",
      "fixed": false,
      "raw": "1"
     },
     "deprecated": false,
     "documentation": {
      "$id": "330",
      "fixed": false,
      "raw": "The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "331",
      "fixed": false,
      "raw": "minGram"
     },
     "serializedName": "minGram",
     "modelType": {
      "$id": "332",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "333",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "334",
     "isReadOnly": false,
     "realPath": [
      "maxGram"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "335",
      "fixed": false,
      "raw": "2"
     },
     "deprecated": false,
     "documentation": {
      "$id": "336",
      "fixed": false,
      "raw": "The maximum n-gram length. Default is 2. Maximum is 300."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "337",
      "fixed": false,
      "raw": "maxGram"
     },
     "serializedName": "maxGram",
     "modelType": {
      "$id": "338",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "339",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "340",
     "isReadOnly": false,
     "realPath": [
      "tokenChars"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "341",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "342",
      "fixed": false,
      "raw": "Character classes to keep in the tokens."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "343",
      "fixed": false,
      "raw": "tokenChars"
     },
     "serializedName": "tokenChars",
     "modelType": {
      "$id": "344",
      "$type": "SequenceType",
      "elementType": {
       "$id": "345",
       "$type": "EnumType",
       "values": [
        {
         "$id": "346",
         "description": "Keeps letters in tokens.",
         "name": "Letter",
         "serializedName": "letter"
        },
        {
         "$id": "347",
         "description": "Keeps digits in tokens.",
         "name": "Digit",
         "serializedName": "digit"
        },
        {
         "$id": "348",
         "description": "Keeps whitespace in tokens.",
         "name": "Whitespace",
         "serializedName": "whitespace"
        },
        {
         "$id": "349",
         "description": "Keeps punctuation in tokens.",
         "name": "Punctuation",
         "serializedName": "punctuation"
        },
        {
         "$id": "350",
         "description": "Keeps symbols in tokens.",
         "name": "Symbol",
         "serializedName": "symbol"
        }
       ],
       "oldModelAsString": false,
       "modelAsString": false,
       "underlyingType": {
        "$id": "351",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "352",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       },
       "name": {
        "$id": "353",
        "fixed": false,
        "raw": "TokenCharacterKind"
       },
       "deprecated": false
      },
      "name": {
       "$id": "354",
       "fixed": false
      },
      "extensions": {
       "x-nullable": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.EdgeNGramTokenizer",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Tokenizes the input from an edge into n-grams of the given size(s). This tokenizer is implemented using Apache Lucene.",
   "externalDocsUrl": "https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "355",
    "fixed": false,
    "raw": "EdgeNGramTokenizer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "EdgeNGramTokenizer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/EdgeNGramTokenizer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.EdgeNGramTokenizer"
   },
   "deprecated": false
  },
  {
   "$id": "356",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "357",
     "isReadOnly": false,
     "realPath": [
      "bufferSize"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "358",
      "fixed": false,
      "raw": "256"
     },
     "deprecated": false,
     "documentation": {
      "$id": "359",
      "fixed": false,
      "raw": "The read buffer size in bytes. Default is 256."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "360",
      "fixed": false,
      "raw": "bufferSize"
     },
     "serializedName": "bufferSize",
     "modelType": {
      "$id": "361",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "362",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.KeywordTokenizer",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Emits the entire input as a single token. This tokenizer is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "363",
    "fixed": false,
    "raw": "KeywordTokenizer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "KeywordTokenizer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/KeywordTokenizer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.KeywordTokenizer",
    "x-az-search-deprecated": true
   },
   "deprecated": false
  },
  {
   "$id": "364",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "365",
     "isReadOnly": false,
     "realPath": [
      "maxTokenLength"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "366",
      "fixed": false,
      "raw": "256"
     },
     "deprecated": false,
     "documentation": {
      "$id": "367",
      "fixed": false,
      "raw": "The maximum token length. Default is 256. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "368",
      "fixed": false,
      "raw": "maxTokenLength"
     },
     "serializedName": "maxTokenLength",
     "modelType": {
      "$id": "369",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "370",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.KeywordTokenizerV2",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Emits the entire input as a single token. This tokenizer is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "371",
    "fixed": false,
    "raw": "KeywordTokenizerV2"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "KeywordTokenizerV2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/KeywordTokenizerV2"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.KeywordTokenizerV2"
   },
   "deprecated": false
  },
  {
   "$id": "372",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "373",
     "isReadOnly": false,
     "realPath": [
      "maxTokenLength"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "374",
      "fixed": false,
      "raw": "255"
     },
     "deprecated": false,
     "documentation": {
      "$id": "375",
      "fixed": false,
      "raw": "The maximum token length. Tokens longer than the maximum length are split. Maximum token length that can be used is 300 characters. Tokens longer than 300 characters are first split into tokens of length 300 and then each of those tokens is split based on the max token length set. Default is 255."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "376",
      "fixed": false,
      "raw": "maxTokenLength"
     },
     "serializedName": "maxTokenLength",
     "modelType": {
      "$id": "377",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "378",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "379",
     "isReadOnly": false,
     "realPath": [
      "isSearchTokenizer"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "380",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "381",
      "fixed": false,
      "raw": "A value indicating how the tokenizer is used. Set to true if used as the search tokenizer, set to false if used as the indexing tokenizer. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "382",
      "fixed": false,
      "raw": "isSearchTokenizer"
     },
     "serializedName": "isSearchTokenizer",
     "modelType": {
      "$id": "383",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "384",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "385",
     "isReadOnly": false,
     "realPath": [
      "language"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "386",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "387",
      "fixed": false,
      "raw": "The language to use. The default is English."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "MicrosoftTokenizerLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/MicrosoftTokenizerLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "MicrosoftTokenizerLanguage",
       "modelAsString": false,
       "values": [
        {
         "value": "bangla",
         "name": "Bangla",
         "description": "Selects the Microsoft tokenizer for Bangla."
        },
        {
         "value": "bulgarian",
         "name": "Bulgarian",
         "description": "Selects the Microsoft tokenizer for Bulgarian."
        },
        {
         "value": "catalan",
         "name": "Catalan",
         "description": "Selects the Microsoft tokenizer for Catalan."
        },
        {
         "value": "chineseSimplified",
         "name": "ChineseSimplified",
         "description": "Selects the Microsoft tokenizer for Chinese (Simplified)."
        },
        {
         "value": "chineseTraditional",
         "name": "ChineseTraditional",
         "description": "Selects the Microsoft tokenizer for Chinese (Traditional)."
        },
        {
         "value": "croatian",
         "name": "Croatian",
         "description": "Selects the Microsoft tokenizer for Croatian."
        },
        {
         "value": "czech",
         "name": "Czech",
         "description": "Selects the Microsoft tokenizer for Czech."
        },
        {
         "value": "danish",
         "name": "Danish",
         "description": "Selects the Microsoft tokenizer for Danish."
        },
        {
         "value": "dutch",
         "name": "Dutch",
         "description": "Selects the Microsoft tokenizer for Dutch."
        },
        {
         "value": "english",
         "name": "English",
         "description": "Selects the Microsoft tokenizer for English."
        },
        {
         "value": "french",
         "name": "French",
         "description": "Selects the Microsoft tokenizer for French."
        },
        {
         "value": "german",
         "name": "German",
         "description": "Selects the Microsoft tokenizer for German."
        },
        {
         "value": "greek",
         "name": "Greek",
         "description": "Selects the Microsoft tokenizer for Greek."
        },
        {
         "value": "gujarati",
         "name": "Gujarati",
         "description": "Selects the Microsoft tokenizer for Gujarati."
        },
        {
         "value": "hindi",
         "name": "Hindi",
         "description": "Selects the Microsoft tokenizer for Hindi."
        },
        {
         "value": "icelandic",
         "name": "Icelandic",
         "description": "Selects the Microsoft tokenizer for Icelandic."
        },
        {
         "value": "indonesian",
         "name": "Indonesian",
         "description": "Selects the Microsoft tokenizer for Indonesian."
        },
        {
         "value": "italian",
         "name": "Italian",
         "description": "Selects the Microsoft tokenizer for Italian."
        },
        {
         "value": "japanese",
         "name": "Japanese",
         "description": "Selects the Microsoft tokenizer for Japanese."
        },
        {
         "value": "kannada",
         "name": "Kannada",
         "description": "Selects the Microsoft tokenizer for Kannada."
        },
        {
         "value": "korean",
         "name": "Korean",
         "description": "Selects the Microsoft tokenizer for Korean."
        },
        {
         "value": "malay",
         "name": "Malay",
         "description": "Selects the Microsoft tokenizer for Malay."
        },
        {
         "value": "malayalam",
         "name": "Malayalam",
         "description": "Selects the Microsoft tokenizer for Malayalam."
        },
        {
         "value": "marathi",
         "name": "Marathi",
         "description": "Selects the Microsoft tokenizer for Marathi."
        },
        {
         "value": "norwegianBokmaal",
         "name": "NorwegianBokmaal",
         "description": "Selects the Microsoft tokenizer for Norwegian (Bokm√•l)."
        },
        {
         "value": "polish",
         "name": "Polish",
         "description": "Selects the Microsoft tokenizer for Polish."
        },
        {
         "value": "portuguese",
         "name": "Portuguese",
         "description": "Selects the Microsoft tokenizer for Portuguese."
        },
        {
         "value": "portugueseBrazilian",
         "name": "PortugueseBrazilian",
         "description": "Selects the Microsoft tokenizer for Portuguese (Brazil)."
        },
        {
         "value": "punjabi",
         "name": "Punjabi",
         "description": "Selects the Microsoft tokenizer for Punjabi."
        },
        {
         "value": "romanian",
         "name": "Romanian",
         "description": "Selects the Microsoft tokenizer for Romanian."
        },
        {
         "value": "russian",
         "name": "Russian",
         "description": "Selects the Microsoft tokenizer for Russian."
        },
        {
         "value": "serbianCyrillic",
         "name": "SerbianCyrillic",
         "description": "Selects the Microsoft tokenizer for Serbian (Cyrillic)."
        },
        {
         "value": "serbianLatin",
         "name": "SerbianLatin",
         "description": "Selects the Microsoft tokenizer for Serbian (Latin)."
        },
        {
         "value": "slovenian",
         "name": "Slovenian",
         "description": "Selects the Microsoft tokenizer for Slovenian."
        },
        {
         "value": "spanish",
         "name": "Spanish",
         "description": "Selects the Microsoft tokenizer for Spanish."
        },
        {
         "value": "swedish",
         "name": "Swedish",
         "description": "Selects the Microsoft tokenizer for Swedish."
        },
        {
         "value": "tamil",
         "name": "Tamil",
         "description": "Selects the Microsoft tokenizer for Tamil."
        },
        {
         "value": "telugu",
         "name": "Telugu",
         "description": "Selects the Microsoft tokenizer for Telugu."
        },
        {
         "value": "thai",
         "name": "Thai",
         "description": "Selects the Microsoft tokenizer for Thai."
        },
        {
         "value": "ukrainian",
         "name": "Ukrainian",
         "description": "Selects the Microsoft tokenizer for Ukrainian."
        },
        {
         "value": "urdu",
         "name": "Urdu",
         "description": "Selects the Microsoft tokenizer for Urdu."
        },
        {
         "value": "vietnamese",
         "name": "Vietnamese",
         "description": "Selects the Microsoft tokenizer for Vietnamese."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "388",
      "fixed": false,
      "raw": "language"
     },
     "serializedName": "language",
     "modelType": {
      "$id": "389",
      "$type": "EnumType",
      "values": [
       {
        "$id": "390",
        "description": "Selects the Microsoft tokenizer for Bangla.",
        "name": "Bangla",
        "serializedName": "bangla"
       },
       {
        "$id": "391",
        "description": "Selects the Microsoft tokenizer for Bulgarian.",
        "name": "Bulgarian",
        "serializedName": "bulgarian"
       },
       {
        "$id": "392",
        "description": "Selects the Microsoft tokenizer for Catalan.",
        "name": "Catalan",
        "serializedName": "catalan"
       },
       {
        "$id": "393",
        "description": "Selects the Microsoft tokenizer for Chinese (Simplified).",
        "name": "ChineseSimplified",
        "serializedName": "chineseSimplified"
       },
       {
        "$id": "394",
        "description": "Selects the Microsoft tokenizer for Chinese (Traditional).",
        "name": "ChineseTraditional",
        "serializedName": "chineseTraditional"
       },
       {
        "$id": "395",
        "description": "Selects the Microsoft tokenizer for Croatian.",
        "name": "Croatian",
        "serializedName": "croatian"
       },
       {
        "$id": "396",
        "description": "Selects the Microsoft tokenizer for Czech.",
        "name": "Czech",
        "serializedName": "czech"
       },
       {
        "$id": "397",
        "description": "Selects the Microsoft tokenizer for Danish.",
        "name": "Danish",
        "serializedName": "danish"
       },
       {
        "$id": "398",
        "description": "Selects the Microsoft tokenizer for Dutch.",
        "name": "Dutch",
        "serializedName": "dutch"
       },
       {
        "$id": "399",
        "description": "Selects the Microsoft tokenizer for English.",
        "name": "English",
        "serializedName": "english"
       },
       {
        "$id": "400",
        "description": "Selects the Microsoft tokenizer for French.",
        "name": "French",
        "serializedName": "french"
       },
       {
        "$id": "401",
        "description": "Selects the Microsoft tokenizer for German.",
        "name": "German",
        "serializedName": "german"
       },
       {
        "$id": "402",
        "description": "Selects the Microsoft tokenizer for Greek.",
        "name": "Greek",
        "serializedName": "greek"
       },
       {
        "$id": "403",
        "description": "Selects the Microsoft tokenizer for Gujarati.",
        "name": "Gujarati",
        "serializedName": "gujarati"
       },
       {
        "$id": "404",
        "description": "Selects the Microsoft tokenizer for Hindi.",
        "name": "Hindi",
        "serializedName": "hindi"
       },
       {
        "$id": "405",
        "description": "Selects the Microsoft tokenizer for Icelandic.",
        "name": "Icelandic",
        "serializedName": "icelandic"
       },
       {
        "$id": "406",
        "description": "Selects the Microsoft tokenizer for Indonesian.",
        "name": "Indonesian",
        "serializedName": "indonesian"
       },
       {
        "$id": "407",
        "description": "Selects the Microsoft tokenizer for Italian.",
        "name": "Italian",
        "serializedName": "italian"
       },
       {
        "$id": "408",
        "description": "Selects the Microsoft tokenizer for Japanese.",
        "name": "Japanese",
        "serializedName": "japanese"
       },
       {
        "$id": "409",
        "description": "Selects the Microsoft tokenizer for Kannada.",
        "name": "Kannada",
        "serializedName": "kannada"
       },
       {
        "$id": "410",
        "description": "Selects the Microsoft tokenizer for Korean.",
        "name": "Korean",
        "serializedName": "korean"
       },
       {
        "$id": "411",
        "description": "Selects the Microsoft tokenizer for Malay.",
        "name": "Malay",
        "serializedName": "malay"
       },
       {
        "$id": "412",
        "description": "Selects the Microsoft tokenizer for Malayalam.",
        "name": "Malayalam",
        "serializedName": "malayalam"
       },
       {
        "$id": "413",
        "description": "Selects the Microsoft tokenizer for Marathi.",
        "name": "Marathi",
        "serializedName": "marathi"
       },
       {
        "$id": "414",
        "description": "Selects the Microsoft tokenizer for Norwegian (Bokm√•l).",
        "name": "NorwegianBokmaal",
        "serializedName": "norwegianBokmaal"
       },
       {
        "$id": "415",
        "description": "Selects the Microsoft tokenizer for Polish.",
        "name": "Polish",
        "serializedName": "polish"
       },
       {
        "$id": "416",
        "description": "Selects the Microsoft tokenizer for Portuguese.",
        "name": "Portuguese",
        "serializedName": "portuguese"
       },
       {
        "$id": "417",
        "description": "Selects the Microsoft tokenizer for Portuguese (Brazil).",
        "name": "PortugueseBrazilian",
        "serializedName": "portugueseBrazilian"
       },
       {
        "$id": "418",
        "description": "Selects the Microsoft tokenizer for Punjabi.",
        "name": "Punjabi",
        "serializedName": "punjabi"
       },
       {
        "$id": "419",
        "description": "Selects the Microsoft tokenizer for Romanian.",
        "name": "Romanian",
        "serializedName": "romanian"
       },
       {
        "$id": "420",
        "description": "Selects the Microsoft tokenizer for Russian.",
        "name": "Russian",
        "serializedName": "russian"
       },
       {
        "$id": "421",
        "description": "Selects the Microsoft tokenizer for Serbian (Cyrillic).",
        "name": "SerbianCyrillic",
        "serializedName": "serbianCyrillic"
       },
       {
        "$id": "422",
        "description": "Selects the Microsoft tokenizer for Serbian (Latin).",
        "name": "SerbianLatin",
        "serializedName": "serbianLatin"
       },
       {
        "$id": "423",
        "description": "Selects the Microsoft tokenizer for Slovenian.",
        "name": "Slovenian",
        "serializedName": "slovenian"
       },
       {
        "$id": "424",
        "description": "Selects the Microsoft tokenizer for Spanish.",
        "name": "Spanish",
        "serializedName": "spanish"
       },
       {
        "$id": "425",
        "description": "Selects the Microsoft tokenizer for Swedish.",
        "name": "Swedish",
        "serializedName": "swedish"
       },
       {
        "$id": "426",
        "description": "Selects the Microsoft tokenizer for Tamil.",
        "name": "Tamil",
        "serializedName": "tamil"
       },
       {
        "$id": "427",
        "description": "Selects the Microsoft tokenizer for Telugu.",
        "name": "Telugu",
        "serializedName": "telugu"
       },
       {
        "$id": "428",
        "description": "Selects the Microsoft tokenizer for Thai.",
        "name": "Thai",
        "serializedName": "thai"
       },
       {
        "$id": "429",
        "description": "Selects the Microsoft tokenizer for Ukrainian.",
        "name": "Ukrainian",
        "serializedName": "ukrainian"
       },
       {
        "$id": "430",
        "description": "Selects the Microsoft tokenizer for Urdu.",
        "name": "Urdu",
        "serializedName": "urdu"
       },
       {
        "$id": "431",
        "description": "Selects the Microsoft tokenizer for Vietnamese.",
        "name": "Vietnamese",
        "serializedName": "vietnamese"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "432",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "433",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "434",
       "fixed": false,
       "raw": "MicrosoftTokenizerLanguage"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.MicrosoftLanguageTokenizer",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Divides text using language-specific rules.",
   "containsConstantProperties": false,
   "name": {
    "$id": "435",
    "fixed": false,
    "raw": "MicrosoftLanguageTokenizer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "MicrosoftLanguageTokenizer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/MicrosoftLanguageTokenizer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.MicrosoftLanguageTokenizer"
   },
   "deprecated": false
  },
  {
   "$id": "436",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "437",
     "isReadOnly": false,
     "realPath": [
      "maxTokenLength"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "438",
      "fixed": false,
      "raw": "255"
     },
     "deprecated": false,
     "documentation": {
      "$id": "439",
      "fixed": false,
      "raw": "The maximum token length. Tokens longer than the maximum length are split. Maximum token length that can be used is 300 characters. Tokens longer than 300 characters are first split into tokens of length 300 and then each of those tokens is split based on the max token length set. Default is 255."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "440",
      "fixed": false,
      "raw": "maxTokenLength"
     },
     "serializedName": "maxTokenLength",
     "modelType": {
      "$id": "441",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "442",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "443",
     "isReadOnly": false,
     "realPath": [
      "isSearchTokenizer"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "444",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "445",
      "fixed": false,
      "raw": "A value indicating how the tokenizer is used. Set to true if used as the search tokenizer, set to false if used as the indexing tokenizer. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "446",
      "fixed": false,
      "raw": "isSearchTokenizer"
     },
     "serializedName": "isSearchTokenizer",
     "modelType": {
      "$id": "447",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "448",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "449",
     "isReadOnly": false,
     "realPath": [
      "language"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "450",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "451",
      "fixed": false,
      "raw": "The language to use. The default is English."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "MicrosoftStemmingTokenizerLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/MicrosoftStemmingTokenizerLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "MicrosoftStemmingTokenizerLanguage",
       "modelAsString": false,
       "values": [
        {
         "value": "arabic",
         "name": "Arabic",
         "description": "Selects the Microsoft stemming tokenizer for Arabic."
        },
        {
         "value": "bangla",
         "name": "Bangla",
         "description": "Selects the Microsoft stemming tokenizer for Bangla."
        },
        {
         "value": "bulgarian",
         "name": "Bulgarian",
         "description": "Selects the Microsoft stemming tokenizer for Bulgarian."
        },
        {
         "value": "catalan",
         "name": "Catalan",
         "description": "Selects the Microsoft stemming tokenizer for Catalan."
        },
        {
         "value": "croatian",
         "name": "Croatian",
         "description": "Selects the Microsoft stemming tokenizer for Croatian."
        },
        {
         "value": "czech",
         "name": "Czech",
         "description": "Selects the Microsoft stemming tokenizer for Czech."
        },
        {
         "value": "danish",
         "name": "Danish",
         "description": "Selects the Microsoft stemming tokenizer for Danish."
        },
        {
         "value": "dutch",
         "name": "Dutch",
         "description": "Selects the Microsoft stemming tokenizer for Dutch."
        },
        {
         "value": "english",
         "name": "English",
         "description": "Selects the Microsoft stemming tokenizer for English."
        },
        {
         "value": "estonian",
         "name": "Estonian",
         "description": "Selects the Microsoft stemming tokenizer for Estonian."
        },
        {
         "value": "finnish",
         "name": "Finnish",
         "description": "Selects the Microsoft stemming tokenizer for Finnish."
        },
        {
         "value": "french",
         "name": "French",
         "description": "Selects the Microsoft stemming tokenizer for French."
        },
        {
         "value": "german",
         "name": "German",
         "description": "Selects the Microsoft stemming tokenizer for German."
        },
        {
         "value": "greek",
         "name": "Greek",
         "description": "Selects the Microsoft stemming tokenizer for Greek."
        },
        {
         "value": "gujarati",
         "name": "Gujarati",
         "description": "Selects the Microsoft stemming tokenizer for Gujarati."
        },
        {
         "value": "hebrew",
         "name": "Hebrew",
         "description": "Selects the Microsoft stemming tokenizer for Hebrew."
        },
        {
         "value": "hindi",
         "name": "Hindi",
         "description": "Selects the Microsoft stemming tokenizer for Hindi."
        },
        {
         "value": "hungarian",
         "name": "Hungarian",
         "description": "Selects the Microsoft stemming tokenizer for Hungarian."
        },
        {
         "value": "icelandic",
         "name": "Icelandic",
         "description": "Selects the Microsoft stemming tokenizer for Icelandic."
        },
        {
         "value": "indonesian",
         "name": "Indonesian",
         "description": "Selects the Microsoft stemming tokenizer for Indonesian."
        },
        {
         "value": "italian",
         "name": "Italian",
         "description": "Selects the Microsoft stemming tokenizer for Italian."
        },
        {
         "value": "kannada",
         "name": "Kannada",
         "description": "Selects the Microsoft stemming tokenizer for Kannada."
        },
        {
         "value": "latvian",
         "name": "Latvian",
         "description": "Selects the Microsoft stemming tokenizer for Latvian."
        },
        {
         "value": "lithuanian",
         "name": "Lithuanian",
         "description": "Selects the Microsoft stemming tokenizer for Lithuanian."
        },
        {
         "value": "malay",
         "name": "Malay",
         "description": "Selects the Microsoft stemming tokenizer for Malay."
        },
        {
         "value": "malayalam",
         "name": "Malayalam",
         "description": "Selects the Microsoft stemming tokenizer for Malayalam."
        },
        {
         "value": "marathi",
         "name": "Marathi",
         "description": "Selects the Microsoft stemming tokenizer for Marathi."
        },
        {
         "value": "norwegianBokmaal",
         "name": "NorwegianBokmaal",
         "description": "Selects the Microsoft stemming tokenizer for Norwegian (Bokm√•l)."
        },
        {
         "value": "polish",
         "name": "Polish",
         "description": "Selects the Microsoft stemming tokenizer for Polish."
        },
        {
         "value": "portuguese",
         "name": "Portuguese",
         "description": "Selects the Microsoft stemming tokenizer for Portuguese."
        },
        {
         "value": "portugueseBrazilian",
         "name": "PortugueseBrazilian",
         "description": "Selects the Microsoft stemming tokenizer for Portuguese (Brazil)."
        },
        {
         "value": "punjabi",
         "name": "Punjabi",
         "description": "Selects the Microsoft stemming tokenizer for Punjabi."
        },
        {
         "value": "romanian",
         "name": "Romanian",
         "description": "Selects the Microsoft stemming tokenizer for Romanian."
        },
        {
         "value": "russian",
         "name": "Russian",
         "description": "Selects the Microsoft stemming tokenizer for Russian."
        },
        {
         "value": "serbianCyrillic",
         "name": "SerbianCyrillic",
         "description": "Selects the Microsoft stemming tokenizer for Serbian (Cyrillic)."
        },
        {
         "value": "serbianLatin",
         "name": "SerbianLatin",
         "description": "Selects the Microsoft stemming tokenizer for Serbian (Latin)."
        },
        {
         "value": "slovak",
         "name": "Slovak",
         "description": "Selects the Microsoft stemming tokenizer for Slovak."
        },
        {
         "value": "slovenian",
         "name": "Slovenian",
         "description": "Selects the Microsoft stemming tokenizer for Slovenian."
        },
        {
         "value": "spanish",
         "name": "Spanish",
         "description": "Selects the Microsoft stemming tokenizer for Spanish."
        },
        {
         "value": "swedish",
         "name": "Swedish",
         "description": "Selects the Microsoft stemming tokenizer for Swedish."
        },
        {
         "value": "tamil",
         "name": "Tamil",
         "description": "Selects the Microsoft stemming tokenizer for Tamil."
        },
        {
         "value": "telugu",
         "name": "Telugu",
         "description": "Selects the Microsoft stemming tokenizer for Telugu."
        },
        {
         "value": "turkish",
         "name": "Turkish",
         "description": "Selects the Microsoft stemming tokenizer for Turkish."
        },
        {
         "value": "ukrainian",
         "name": "Ukrainian",
         "description": "Selects the Microsoft stemming tokenizer for Ukrainian."
        },
        {
         "value": "urdu",
         "name": "Urdu",
         "description": "Selects the Microsoft stemming tokenizer for Urdu."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "452",
      "fixed": false,
      "raw": "language"
     },
     "serializedName": "language",
     "modelType": {
      "$id": "453",
      "$type": "EnumType",
      "values": [
       {
        "$id": "454",
        "description": "Selects the Microsoft stemming tokenizer for Arabic.",
        "name": "Arabic",
        "serializedName": "arabic"
       },
       {
        "$id": "455",
        "description": "Selects the Microsoft stemming tokenizer for Bangla.",
        "name": "Bangla",
        "serializedName": "bangla"
       },
       {
        "$id": "456",
        "description": "Selects the Microsoft stemming tokenizer for Bulgarian.",
        "name": "Bulgarian",
        "serializedName": "bulgarian"
       },
       {
        "$id": "457",
        "description": "Selects the Microsoft stemming tokenizer for Catalan.",
        "name": "Catalan",
        "serializedName": "catalan"
       },
       {
        "$id": "458",
        "description": "Selects the Microsoft stemming tokenizer for Croatian.",
        "name": "Croatian",
        "serializedName": "croatian"
       },
       {
        "$id": "459",
        "description": "Selects the Microsoft stemming tokenizer for Czech.",
        "name": "Czech",
        "serializedName": "czech"
       },
       {
        "$id": "460",
        "description": "Selects the Microsoft stemming tokenizer for Danish.",
        "name": "Danish",
        "serializedName": "danish"
       },
       {
        "$id": "461",
        "description": "Selects the Microsoft stemming tokenizer for Dutch.",
        "name": "Dutch",
        "serializedName": "dutch"
       },
       {
        "$id": "462",
        "description": "Selects the Microsoft stemming tokenizer for English.",
        "name": "English",
        "serializedName": "english"
       },
       {
        "$id": "463",
        "description": "Selects the Microsoft stemming tokenizer for Estonian.",
        "name": "Estonian",
        "serializedName": "estonian"
       },
       {
        "$id": "464",
        "description": "Selects the Microsoft stemming tokenizer for Finnish.",
        "name": "Finnish",
        "serializedName": "finnish"
       },
       {
        "$id": "465",
        "description": "Selects the Microsoft stemming tokenizer for French.",
        "name": "French",
        "serializedName": "french"
       },
       {
        "$id": "466",
        "description": "Selects the Microsoft stemming tokenizer for German.",
        "name": "German",
        "serializedName": "german"
       },
       {
        "$id": "467",
        "description": "Selects the Microsoft stemming tokenizer for Greek.",
        "name": "Greek",
        "serializedName": "greek"
       },
       {
        "$id": "468",
        "description": "Selects the Microsoft stemming tokenizer for Gujarati.",
        "name": "Gujarati",
        "serializedName": "gujarati"
       },
       {
        "$id": "469",
        "description": "Selects the Microsoft stemming tokenizer for Hebrew.",
        "name": "Hebrew",
        "serializedName": "hebrew"
       },
       {
        "$id": "470",
        "description": "Selects the Microsoft stemming tokenizer for Hindi.",
        "name": "Hindi",
        "serializedName": "hindi"
       },
       {
        "$id": "471",
        "description": "Selects the Microsoft stemming tokenizer for Hungarian.",
        "name": "Hungarian",
        "serializedName": "hungarian"
       },
       {
        "$id": "472",
        "description": "Selects the Microsoft stemming tokenizer for Icelandic.",
        "name": "Icelandic",
        "serializedName": "icelandic"
       },
       {
        "$id": "473",
        "description": "Selects the Microsoft stemming tokenizer for Indonesian.",
        "name": "Indonesian",
        "serializedName": "indonesian"
       },
       {
        "$id": "474",
        "description": "Selects the Microsoft stemming tokenizer for Italian.",
        "name": "Italian",
        "serializedName": "italian"
       },
       {
        "$id": "475",
        "description": "Selects the Microsoft stemming tokenizer for Kannada.",
        "name": "Kannada",
        "serializedName": "kannada"
       },
       {
        "$id": "476",
        "description": "Selects the Microsoft stemming tokenizer for Latvian.",
        "name": "Latvian",
        "serializedName": "latvian"
       },
       {
        "$id": "477",
        "description": "Selects the Microsoft stemming tokenizer for Lithuanian.",
        "name": "Lithuanian",
        "serializedName": "lithuanian"
       },
       {
        "$id": "478",
        "description": "Selects the Microsoft stemming tokenizer for Malay.",
        "name": "Malay",
        "serializedName": "malay"
       },
       {
        "$id": "479",
        "description": "Selects the Microsoft stemming tokenizer for Malayalam.",
        "name": "Malayalam",
        "serializedName": "malayalam"
       },
       {
        "$id": "480",
        "description": "Selects the Microsoft stemming tokenizer for Marathi.",
        "name": "Marathi",
        "serializedName": "marathi"
       },
       {
        "$id": "481",
        "description": "Selects the Microsoft stemming tokenizer for Norwegian (Bokm√•l).",
        "name": "NorwegianBokmaal",
        "serializedName": "norwegianBokmaal"
       },
       {
        "$id": "482",
        "description": "Selects the Microsoft stemming tokenizer for Polish.",
        "name": "Polish",
        "serializedName": "polish"
       },
       {
        "$id": "483",
        "description": "Selects the Microsoft stemming tokenizer for Portuguese.",
        "name": "Portuguese",
        "serializedName": "portuguese"
       },
       {
        "$id": "484",
        "description": "Selects the Microsoft stemming tokenizer for Portuguese (Brazil).",
        "name": "PortugueseBrazilian",
        "serializedName": "portugueseBrazilian"
       },
       {
        "$id": "485",
        "description": "Selects the Microsoft stemming tokenizer for Punjabi.",
        "name": "Punjabi",
        "serializedName": "punjabi"
       },
       {
        "$id": "486",
        "description": "Selects the Microsoft stemming tokenizer for Romanian.",
        "name": "Romanian",
        "serializedName": "romanian"
       },
       {
        "$id": "487",
        "description": "Selects the Microsoft stemming tokenizer for Russian.",
        "name": "Russian",
        "serializedName": "russian"
       },
       {
        "$id": "488",
        "description": "Selects the Microsoft stemming tokenizer for Serbian (Cyrillic).",
        "name": "SerbianCyrillic",
        "serializedName": "serbianCyrillic"
       },
       {
        "$id": "489",
        "description": "Selects the Microsoft stemming tokenizer for Serbian (Latin).",
        "name": "SerbianLatin",
        "serializedName": "serbianLatin"
       },
       {
        "$id": "490",
        "description": "Selects the Microsoft stemming tokenizer for Slovak.",
        "name": "Slovak",
        "serializedName": "slovak"
       },
       {
        "$id": "491",
        "description": "Selects the Microsoft stemming tokenizer for Slovenian.",
        "name": "Slovenian",
        "serializedName": "slovenian"
       },
       {
        "$id": "492",
        "description": "Selects the Microsoft stemming tokenizer for Spanish.",
        "name": "Spanish",
        "serializedName": "spanish"
       },
       {
        "$id": "493",
        "description": "Selects the Microsoft stemming tokenizer for Swedish.",
        "name": "Swedish",
        "serializedName": "swedish"
       },
       {
        "$id": "494",
        "description": "Selects the Microsoft stemming tokenizer for Tamil.",
        "name": "Tamil",
        "serializedName": "tamil"
       },
       {
        "$id": "495",
        "description": "Selects the Microsoft stemming tokenizer for Telugu.",
        "name": "Telugu",
        "serializedName": "telugu"
       },
       {
        "$id": "496",
        "description": "Selects the Microsoft stemming tokenizer for Turkish.",
        "name": "Turkish",
        "serializedName": "turkish"
       },
       {
        "$id": "497",
        "description": "Selects the Microsoft stemming tokenizer for Ukrainian.",
        "name": "Ukrainian",
        "serializedName": "ukrainian"
       },
       {
        "$id": "498",
        "description": "Selects the Microsoft stemming tokenizer for Urdu.",
        "name": "Urdu",
        "serializedName": "urdu"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "499",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "500",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "501",
       "fixed": false,
       "raw": "MicrosoftStemmingTokenizerLanguage"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.MicrosoftLanguageStemmingTokenizer",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Divides text using language-specific rules and reduces words to their base forms.",
   "containsConstantProperties": false,
   "name": {
    "$id": "502",
    "fixed": false,
    "raw": "MicrosoftLanguageStemmingTokenizer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "MicrosoftLanguageStemmingTokenizer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/MicrosoftLanguageStemmingTokenizer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.MicrosoftLanguageStemmingTokenizer"
   },
   "deprecated": false
  },
  {
   "$id": "503",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "504",
     "isReadOnly": false,
     "realPath": [
      "minGram"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "505",
      "fixed": false,
      "raw": "1"
     },
     "deprecated": false,
     "documentation": {
      "$id": "506",
      "fixed": false,
      "raw": "The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "507",
      "fixed": false,
      "raw": "minGram"
     },
     "serializedName": "minGram",
     "modelType": {
      "$id": "508",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "509",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "510",
     "isReadOnly": false,
     "realPath": [
      "maxGram"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "511",
      "fixed": false,
      "raw": "2"
     },
     "deprecated": false,
     "documentation": {
      "$id": "512",
      "fixed": false,
      "raw": "The maximum n-gram length. Default is 2. Maximum is 300."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "513",
      "fixed": false,
      "raw": "maxGram"
     },
     "serializedName": "maxGram",
     "modelType": {
      "$id": "514",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "515",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "516",
     "isReadOnly": false,
     "realPath": [
      "tokenChars"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "517",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "518",
      "fixed": false,
      "raw": "Character classes to keep in the tokens."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "519",
      "fixed": false,
      "raw": "tokenChars"
     },
     "serializedName": "tokenChars",
     "modelType": {
      "$id": "520",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "345"
      },
      "name": {
       "$id": "521",
       "fixed": false
      },
      "extensions": {
       "x-nullable": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.NGramTokenizer",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Tokenizes the input into n-grams of the given size(s). This tokenizer is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "522",
    "fixed": false,
    "raw": "NGramTokenizer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "NGramTokenizer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/NGramTokenizer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.NGramTokenizer"
   },
   "deprecated": false
  },
  {
   "$id": "523",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "524",
     "isReadOnly": false,
     "realPath": [
      "delimiter"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "525",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "526",
      "fixed": false,
      "raw": "The delimiter character to use. Default is \"/\"."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "527",
      "fixed": false,
      "raw": "delimiter"
     },
     "serializedName": "delimiter",
     "modelType": {
      "$id": "528",
      "$type": "PrimaryType",
      "format": "char",
      "knownPrimaryType": "string",
      "name": {
       "$id": "529",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "530",
     "isReadOnly": false,
     "realPath": [
      "replacement"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "531",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "532",
      "fixed": false,
      "raw": "A value that, if set, replaces the delimiter character. Default is \"/\"."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "533",
      "fixed": false,
      "raw": "replacement"
     },
     "serializedName": "replacement",
     "modelType": {
      "$id": "534",
      "$type": "PrimaryType",
      "format": "char",
      "knownPrimaryType": "string",
      "name": {
       "$id": "535",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "536",
     "isReadOnly": false,
     "realPath": [
      "maxTokenLength"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "537",
      "fixed": false,
      "raw": "300"
     },
     "deprecated": false,
     "documentation": {
      "$id": "538",
      "fixed": false,
      "raw": "The maximum token length. Default and maximum is 300."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "539",
      "fixed": false,
      "raw": "maxTokenLength"
     },
     "serializedName": "maxTokenLength",
     "modelType": {
      "$id": "540",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "541",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "542",
     "isReadOnly": false,
     "realPath": [
      "reverse"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "543",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "544",
      "fixed": false,
      "raw": "A value indicating whether to generate tokens in reverse order. Default is false."
     },
     "extensions": {
      "x-ms-client-name": "ReverseTokenOrder"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "545",
      "fixed": false,
      "raw": "reverse"
     },
     "serializedName": "reverse",
     "modelType": {
      "$id": "546",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "547",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "548",
     "isReadOnly": false,
     "realPath": [
      "skip"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "549",
      "fixed": false,
      "raw": "0"
     },
     "deprecated": false,
     "documentation": {
      "$id": "550",
      "fixed": false,
      "raw": "The number of initial tokens to skip. Default is 0."
     },
     "extensions": {
      "x-ms-client-name": "NumberOfTokensToSkip"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "551",
      "fixed": false,
      "raw": "skip"
     },
     "serializedName": "skip",
     "modelType": {
      "$id": "552",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "553",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.PathHierarchyTokenizerV2",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Tokenizer for path-like hierarchies. This tokenizer is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "554",
    "fixed": false,
    "raw": "PathHierarchyTokenizerV2"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "PathHierarchyTokenizerV2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/PathHierarchyTokenizerV2"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.PathHierarchyTokenizerV2"
   },
   "deprecated": false
  },
  {
   "$id": "555",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "556",
     "isReadOnly": false,
     "realPath": [
      "pattern"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "557",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "558",
      "fixed": false,
      "raw": "A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "559",
      "fixed": false,
      "raw": "pattern"
     },
     "serializedName": "pattern",
     "modelType": {
      "$id": "560",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "561",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "562",
     "isReadOnly": false,
     "realPath": [
      "flags"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "563",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "564",
      "fixed": false,
      "raw": "Regular expression flags."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "RegexFlags",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/RegexFlags"
       ]
      },
      "x-ms-enum": {
       "name": "RegexFlags",
       "modelAsString": true,
       "values": [
        {
         "value": "CANON_EQ",
         "name": "CanonEq",
         "description": "Enables canonical equivalence."
        },
        {
         "value": "CASE_INSENSITIVE",
         "name": "CaseInsensitive",
         "description": "Enables case-insensitive matching."
        },
        {
         "value": "COMMENTS",
         "name": "Comments",
         "description": "Permits whitespace and comments in the pattern."
        },
        {
         "value": "DOTALL",
         "name": "DotAll",
         "description": "Enables dotall mode."
        },
        {
         "value": "LITERAL",
         "name": "Literal",
         "description": "Enables literal parsing of the pattern."
        },
        {
         "value": "MULTILINE",
         "name": "Multiline",
         "description": "Enables multiline mode."
        },
        {
         "value": "UNICODE_CASE",
         "name": "UnicodeCase",
         "description": "Enables Unicode-aware case folding."
        },
        {
         "value": "UNIX_LINES",
         "name": "UnixLines",
         "description": "Enables Unix lines mode."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "565",
      "fixed": false,
      "raw": "flags"
     },
     "serializedName": "flags",
     "modelType": {
      "$ref": "264"
     }
    },
    {
     "$id": "566",
     "isReadOnly": false,
     "realPath": [
      "group"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "567",
      "fixed": false,
      "raw": "-1"
     },
     "deprecated": false,
     "documentation": {
      "$id": "568",
      "fixed": false,
      "raw": "The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens. Use -1 if you want to use the entire pattern to split the input into tokens, irrespective of matching groups. Default is -1."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "569",
      "fixed": false,
      "raw": "group"
     },
     "serializedName": "group",
     "modelType": {
      "$id": "570",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "571",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.PatternTokenizer",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Tokenizer that uses regex pattern matching to construct distinct tokens. This tokenizer is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "572",
    "fixed": false,
    "raw": "PatternTokenizer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "PatternTokenizer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/PatternTokenizer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.PatternTokenizer"
   },
   "deprecated": false
  },
  {
   "$id": "573",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "574",
     "isReadOnly": false,
     "realPath": [
      "maxTokenLength"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "575",
      "fixed": false,
      "raw": "255"
     },
     "deprecated": false,
     "documentation": {
      "$id": "576",
      "fixed": false,
      "raw": "The maximum token length. Default is 255. Tokens longer than the maximum length are split."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "577",
      "fixed": false,
      "raw": "maxTokenLength"
     },
     "serializedName": "maxTokenLength",
     "modelType": {
      "$id": "578",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "579",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.StandardTokenizer",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Breaks text following the Unicode Text Segmentation rules. This tokenizer is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "580",
    "fixed": false,
    "raw": "LuceneStandardTokenizer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "LuceneStandardTokenizer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LuceneStandardTokenizer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.StandardTokenizer",
    "x-az-search-deprecated": true
   },
   "deprecated": false
  },
  {
   "$id": "581",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "582",
     "isReadOnly": false,
     "realPath": [
      "maxTokenLength"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "583",
      "fixed": false,
      "raw": "255"
     },
     "deprecated": false,
     "documentation": {
      "$id": "584",
      "fixed": false,
      "raw": "The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "585",
      "fixed": false,
      "raw": "maxTokenLength"
     },
     "serializedName": "maxTokenLength",
     "modelType": {
      "$id": "586",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "587",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.StandardTokenizerV2",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Breaks text following the Unicode Text Segmentation rules. This tokenizer is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "588",
    "fixed": false,
    "raw": "LuceneStandardTokenizerV2"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "LuceneStandardTokenizerV2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LuceneStandardTokenizerV2"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.StandardTokenizerV2"
   },
   "deprecated": false
  },
  {
   "$id": "589",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "590",
     "isReadOnly": false,
     "realPath": [
      "maxTokenLength"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "591",
      "fixed": false,
      "raw": "255"
     },
     "deprecated": false,
     "documentation": {
      "$id": "592",
      "fixed": false,
      "raw": "The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "593",
      "fixed": false,
      "raw": "maxTokenLength"
     },
     "serializedName": "maxTokenLength",
     "modelType": {
      "$id": "594",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "595",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.UaxUrlEmailTokenizer",
   "baseModelType": {
    "$ref": "311"
   },
   "documentation": "Tokenizes urls and emails as one token. This tokenizer is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "596",
    "fixed": false,
    "raw": "UaxUrlEmailTokenizer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "UaxUrlEmailTokenizer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/UaxUrlEmailTokenizer"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.UaxUrlEmailTokenizer"
   },
   "deprecated": false
  },
  {
   "$id": "597",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "598",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "599",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "600",
      "fixed": false,
      "raw": "The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "601",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "602",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "603",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "TokenFilter",
   "polymorphicDiscriminator": "@odata.type",
   "documentation": "Base type for token filters.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search",
   "containsConstantProperties": false,
   "name": {
    "$id": "604",
    "fixed": false,
    "raw": "TokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "TokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/TokenFilter"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "605",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "606",
     "isReadOnly": false,
     "realPath": [
      "preserveOriginal"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "607",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "608",
      "fixed": false,
      "raw": "A value indicating whether the original token will be kept. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "609",
      "fixed": false,
      "raw": "preserveOriginal"
     },
     "serializedName": "preserveOriginal",
     "modelType": {
      "$id": "610",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "611",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.AsciiFoldingTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \"Basic Latin\" Unicode block) into their ASCII equivalents, if such equivalents exist. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "612",
    "fixed": false,
    "raw": "AsciiFoldingTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "AsciiFoldingTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/AsciiFoldingTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.AsciiFoldingTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "613",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "614",
     "isReadOnly": false,
     "realPath": [
      "ignoreScripts"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "615",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "616",
      "fixed": false,
      "raw": "The scripts to ignore."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "617",
      "fixed": false,
      "raw": "ignoreScripts"
     },
     "serializedName": "ignoreScripts",
     "modelType": {
      "$id": "618",
      "$type": "SequenceType",
      "elementType": {
       "$id": "619",
       "$type": "EnumType",
       "values": [
        {
         "$id": "620",
         "description": "Ignore Han script when forming bigrams of CJK terms.",
         "name": "Han",
         "serializedName": "han"
        },
        {
         "$id": "621",
         "description": "Ignore Hiragana script when forming bigrams of CJK terms.",
         "name": "Hiragana",
         "serializedName": "hiragana"
        },
        {
         "$id": "622",
         "description": "Ignore Katakana script when forming bigrams of CJK terms.",
         "name": "Katakana",
         "serializedName": "katakana"
        },
        {
         "$id": "623",
         "description": "Ignore Hangul script when forming bigrams of CJK terms.",
         "name": "Hangul",
         "serializedName": "hangul"
        }
       ],
       "oldModelAsString": false,
       "modelAsString": false,
       "underlyingType": {
        "$id": "624",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "625",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       },
       "name": {
        "$id": "626",
        "fixed": false,
        "raw": "CjkBigramTokenFilterScripts"
       },
       "deprecated": false
      },
      "name": {
       "$id": "627",
       "fixed": false
      },
      "extensions": {
       "x-nullable": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "628",
     "isReadOnly": false,
     "realPath": [
      "outputUnigrams"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "629",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "630",
      "fixed": false,
      "raw": "A value indicating whether to output both unigrams and bigrams (if true), or just bigrams (if false). Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "631",
      "fixed": false,
      "raw": "outputUnigrams"
     },
     "serializedName": "outputUnigrams",
     "modelType": {
      "$id": "632",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "633",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.CjkBigramTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Forms bigrams of CJK terms that are generated from the standard tokenizer. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKBigramFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "634",
    "fixed": false,
    "raw": "CjkBigramTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "CjkBigramTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/CjkBigramTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.CjkBigramTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "635",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "636",
     "isReadOnly": false,
     "realPath": [
      "commonWords"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "637",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "638",
      "fixed": false,
      "raw": "The set of common words."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "639",
      "fixed": false,
      "raw": "commonWords"
     },
     "serializedName": "commonWords",
     "modelType": {
      "$id": "640",
      "$type": "SequenceType",
      "elementType": {
       "$id": "641",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "642",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "643",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "644",
     "isReadOnly": false,
     "realPath": [
      "ignoreCase"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "645",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "646",
      "fixed": false,
      "raw": "A value indicating whether common words matching will be case insensitive. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "647",
      "fixed": false,
      "raw": "ignoreCase"
     },
     "serializedName": "ignoreCase",
     "modelType": {
      "$id": "648",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "649",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "650",
     "isReadOnly": false,
     "realPath": [
      "queryMode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "651",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "652",
      "fixed": false,
      "raw": "A value that indicates whether the token filter is in query mode. When in query mode, the token filter generates bigrams and then removes common words and single terms followed by a common word. Default is false."
     },
     "extensions": {
      "x-ms-client-name": "UseQueryMode"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "653",
      "fixed": false,
      "raw": "queryMode"
     },
     "serializedName": "queryMode",
     "modelType": {
      "$id": "654",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "655",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.CommonGramTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/commongrams/CommonGramsFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "656",
    "fixed": false,
    "raw": "CommonGramTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "CommonGramTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/CommonGramTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.CommonGramTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "657",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "658",
     "isReadOnly": false,
     "realPath": [
      "wordList"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "659",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "660",
      "fixed": false,
      "raw": "The list of words to match against."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "661",
      "fixed": false,
      "raw": "wordList"
     },
     "serializedName": "wordList",
     "modelType": {
      "$id": "662",
      "$type": "SequenceType",
      "elementType": {
       "$id": "663",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "664",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "665",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "666",
     "isReadOnly": false,
     "realPath": [
      "minWordSize"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "667",
      "fixed": false,
      "raw": "5"
     },
     "deprecated": false,
     "documentation": {
      "$id": "668",
      "fixed": false,
      "raw": "The minimum word size. Only words longer than this get processed. Default is 5. Maximum is 300."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "669",
      "fixed": false,
      "raw": "minWordSize"
     },
     "serializedName": "minWordSize",
     "modelType": {
      "$id": "670",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "671",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "672",
     "isReadOnly": false,
     "realPath": [
      "minSubwordSize"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "673",
      "fixed": false,
      "raw": "2"
     },
     "deprecated": false,
     "documentation": {
      "$id": "674",
      "fixed": false,
      "raw": "The minimum subword size. Only subwords longer than this are outputted. Default is 2. Maximum is 300."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "675",
      "fixed": false,
      "raw": "minSubwordSize"
     },
     "serializedName": "minSubwordSize",
     "modelType": {
      "$id": "676",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "677",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "678",
     "isReadOnly": false,
     "realPath": [
      "maxSubwordSize"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "679",
      "fixed": false,
      "raw": "15"
     },
     "deprecated": false,
     "documentation": {
      "$id": "680",
      "fixed": false,
      "raw": "The maximum subword size. Only subwords shorter than this are outputted. Default is 15. Maximum is 300."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "681",
      "fixed": false,
      "raw": "maxSubwordSize"
     },
     "serializedName": "maxSubwordSize",
     "modelType": {
      "$id": "682",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "683",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "684",
     "isReadOnly": false,
     "realPath": [
      "onlyLongestMatch"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "685",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "686",
      "fixed": false,
      "raw": "A value indicating whether to add only the longest matching subword to the output. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "687",
      "fixed": false,
      "raw": "onlyLongestMatch"
     },
     "serializedName": "onlyLongestMatch",
     "modelType": {
      "$id": "688",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "689",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.DictionaryDecompounderTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Decomposes compound words found in many Germanic languages. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/compound/DictionaryCompoundWordTokenFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "690",
    "fixed": false,
    "raw": "DictionaryDecompounderTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "DictionaryDecompounderTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/DictionaryDecompounderTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.DictionaryDecompounderTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "691",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "692",
     "isReadOnly": false,
     "realPath": [
      "minGram"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "693",
      "fixed": false,
      "raw": "1"
     },
     "deprecated": false,
     "documentation": {
      "$id": "694",
      "fixed": false,
      "raw": "The minimum n-gram length. Default is 1. Must be less than the value of maxGram."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "695",
      "fixed": false,
      "raw": "minGram"
     },
     "serializedName": "minGram",
     "modelType": {
      "$id": "696",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "697",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "698",
     "isReadOnly": false,
     "realPath": [
      "maxGram"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "699",
      "fixed": false,
      "raw": "2"
     },
     "deprecated": false,
     "documentation": {
      "$id": "700",
      "fixed": false,
      "raw": "The maximum n-gram length. Default is 2."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "701",
      "fixed": false,
      "raw": "maxGram"
     },
     "serializedName": "maxGram",
     "modelType": {
      "$id": "702",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "703",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "704",
     "isReadOnly": false,
     "realPath": [
      "side"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "705",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "706",
      "fixed": false,
      "raw": "Specifies which side of the input the n-gram should be generated from. Default is \"front\"."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "EdgeNGramTokenFilterSide",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/EdgeNGramTokenFilterSide"
       ]
      },
      "x-ms-enum": {
       "name": "EdgeNGramTokenFilterSide",
       "modelAsString": false,
       "values": [
        {
         "value": "front",
         "name": "Front",
         "description": "Specifies that the n-gram should be generated from the front of the input."
        },
        {
         "value": "back",
         "name": "Back",
         "description": "Specifies that the n-gram should be generated from the back of the input."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "707",
      "fixed": false,
      "raw": "side"
     },
     "serializedName": "side",
     "modelType": {
      "$id": "708",
      "$type": "EnumType",
      "values": [
       {
        "$id": "709",
        "description": "Specifies that the n-gram should be generated from the front of the input.",
        "name": "Front",
        "serializedName": "front"
       },
       {
        "$id": "710",
        "description": "Specifies that the n-gram should be generated from the back of the input.",
        "name": "Back",
        "serializedName": "back"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "711",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "712",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "713",
       "fixed": false,
       "raw": "EdgeNGramTokenFilterSide"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.EdgeNGramTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Generates n-grams of the given size(s) starting from the front or the back of an input token. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "714",
    "fixed": false,
    "raw": "EdgeNGramTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "EdgeNGramTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/EdgeNGramTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.EdgeNGramTokenFilter",
    "x-az-search-deprecated": true
   },
   "deprecated": false
  },
  {
   "$id": "715",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "716",
     "isReadOnly": false,
     "realPath": [
      "minGram"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "717",
      "fixed": false,
      "raw": "1"
     },
     "deprecated": false,
     "documentation": {
      "$id": "718",
      "fixed": false,
      "raw": "The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "719",
      "fixed": false,
      "raw": "minGram"
     },
     "serializedName": "minGram",
     "modelType": {
      "$id": "720",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "721",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "722",
     "isReadOnly": false,
     "realPath": [
      "maxGram"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "723",
      "fixed": false,
      "raw": "2"
     },
     "deprecated": false,
     "documentation": {
      "$id": "724",
      "fixed": false,
      "raw": "The maximum n-gram length. Default is 2. Maximum is 300."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "725",
      "fixed": false,
      "raw": "maxGram"
     },
     "serializedName": "maxGram",
     "modelType": {
      "$id": "726",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "727",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "728",
     "isReadOnly": false,
     "realPath": [
      "side"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "729",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "730",
      "fixed": false,
      "raw": "Specifies which side of the input the n-gram should be generated from. Default is \"front\"."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "EdgeNGramTokenFilterSide",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/EdgeNGramTokenFilterSide"
       ]
      },
      "x-ms-enum": {
       "name": "EdgeNGramTokenFilterSide",
       "modelAsString": false,
       "values": [
        {
         "value": "front",
         "name": "Front",
         "description": "Specifies that the n-gram should be generated from the front of the input."
        },
        {
         "value": "back",
         "name": "Back",
         "description": "Specifies that the n-gram should be generated from the back of the input."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "731",
      "fixed": false,
      "raw": "side"
     },
     "serializedName": "side",
     "modelType": {
      "$ref": "708"
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.EdgeNGramTokenFilterV2",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Generates n-grams of the given size(s) starting from the front or the back of an input token. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "732",
    "fixed": false,
    "raw": "EdgeNGramTokenFilterV2"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "EdgeNGramTokenFilterV2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/EdgeNGramTokenFilterV2"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.EdgeNGramTokenFilterV2"
   },
   "deprecated": false
  },
  {
   "$id": "733",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "734",
     "isReadOnly": false,
     "realPath": [
      "articles"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "735",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "736",
      "fixed": false,
      "raw": "The set of articles to remove."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "737",
      "fixed": false,
      "raw": "articles"
     },
     "serializedName": "articles",
     "modelType": {
      "$id": "738",
      "$type": "SequenceType",
      "elementType": {
       "$id": "739",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "740",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "741",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.ElisionTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Removes elisions. For example, \"l'avion\" (the plane) will be converted to \"avion\" (plane). This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "742",
    "fixed": false,
    "raw": "ElisionTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ElisionTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ElisionTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.ElisionTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "743",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "744",
     "isReadOnly": false,
     "realPath": [
      "keepWords"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "745",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "746",
      "fixed": false,
      "raw": "The list of words to keep."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "747",
      "fixed": false,
      "raw": "keepWords"
     },
     "serializedName": "keepWords",
     "modelType": {
      "$id": "748",
      "$type": "SequenceType",
      "elementType": {
       "$id": "749",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "750",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "751",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "752",
     "isReadOnly": false,
     "realPath": [
      "keepWordsCase"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "753",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "754",
      "fixed": false,
      "raw": "A value indicating whether to lower case all words first. Default is false."
     },
     "extensions": {
      "x-ms-client-name": "LowerCaseKeepWords"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "755",
      "fixed": false,
      "raw": "keepWordsCase"
     },
     "serializedName": "keepWordsCase",
     "modelType": {
      "$id": "756",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "757",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.KeepTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "A token filter that only keeps tokens with text contained in a specified list of words. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeepWordFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "758",
    "fixed": false,
    "raw": "KeepTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "KeepTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/KeepTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.KeepTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "759",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "760",
     "isReadOnly": false,
     "realPath": [
      "keywords"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "761",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "762",
      "fixed": false,
      "raw": "A list of words to mark as keywords."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "763",
      "fixed": false,
      "raw": "keywords"
     },
     "serializedName": "keywords",
     "modelType": {
      "$id": "764",
      "$type": "SequenceType",
      "elementType": {
       "$id": "765",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "766",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "767",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "768",
     "isReadOnly": false,
     "realPath": [
      "ignoreCase"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "769",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "770",
      "fixed": false,
      "raw": "A value indicating whether to ignore case. If true, all words are converted to lower case first. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "771",
      "fixed": false,
      "raw": "ignoreCase"
     },
     "serializedName": "ignoreCase",
     "modelType": {
      "$id": "772",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "773",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.KeywordMarkerTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Marks terms as keywords. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordMarkerFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "774",
    "fixed": false,
    "raw": "KeywordMarkerTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "KeywordMarkerTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/KeywordMarkerTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.KeywordMarkerTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "775",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "776",
     "isReadOnly": false,
     "realPath": [
      "min"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "777",
      "fixed": false,
      "raw": "0"
     },
     "deprecated": false,
     "documentation": {
      "$id": "778",
      "fixed": false,
      "raw": "The minimum length in characters. Default is 0. Maximum is 300. Must be less than the value of max."
     },
     "extensions": {
      "x-ms-client-name": "minLength"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "779",
      "fixed": false,
      "raw": "min"
     },
     "serializedName": "min",
     "modelType": {
      "$id": "780",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "781",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "782",
     "isReadOnly": false,
     "realPath": [
      "max"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "783",
      "fixed": false,
      "raw": "300"
     },
     "deprecated": false,
     "documentation": {
      "$id": "784",
      "fixed": false,
      "raw": "The maximum length in characters. Default and maximum is 300."
     },
     "extensions": {
      "x-ms-client-name": "maxLength"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "785",
      "fixed": false,
      "raw": "max"
     },
     "serializedName": "max",
     "modelType": {
      "$id": "786",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "787",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.LengthTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Removes words that are too long or too short. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LengthFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "788",
    "fixed": false,
    "raw": "LengthTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "LengthTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LengthTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.LengthTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "789",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "790",
     "isReadOnly": false,
     "realPath": [
      "maxTokenCount"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "791",
      "fixed": false,
      "raw": "1"
     },
     "deprecated": false,
     "documentation": {
      "$id": "792",
      "fixed": false,
      "raw": "The maximum number of tokens to produce. Default is 1."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "793",
      "fixed": false,
      "raw": "maxTokenCount"
     },
     "serializedName": "maxTokenCount",
     "modelType": {
      "$id": "794",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "795",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "796",
     "isReadOnly": false,
     "realPath": [
      "consumeAllTokens"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "797",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "798",
      "fixed": false,
      "raw": "A value indicating whether all tokens from the input must be consumed even if maxTokenCount is reached. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "799",
      "fixed": false,
      "raw": "consumeAllTokens"
     },
     "serializedName": "consumeAllTokens",
     "modelType": {
      "$id": "800",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "801",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.LimitTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Limits the number of tokens while indexing. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "802",
    "fixed": false,
    "raw": "LimitTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "LimitTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LimitTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.LimitTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "803",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "804",
     "isReadOnly": false,
     "realPath": [
      "minGram"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "805",
      "fixed": false,
      "raw": "1"
     },
     "deprecated": false,
     "documentation": {
      "$id": "806",
      "fixed": false,
      "raw": "The minimum n-gram length. Default is 1. Must be less than the value of maxGram."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "807",
      "fixed": false,
      "raw": "minGram"
     },
     "serializedName": "minGram",
     "modelType": {
      "$id": "808",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "809",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "810",
     "isReadOnly": false,
     "realPath": [
      "maxGram"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "811",
      "fixed": false,
      "raw": "2"
     },
     "deprecated": false,
     "documentation": {
      "$id": "812",
      "fixed": false,
      "raw": "The maximum n-gram length. Default is 2."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "813",
      "fixed": false,
      "raw": "maxGram"
     },
     "serializedName": "maxGram",
     "modelType": {
      "$id": "814",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "815",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.NGramTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Generates n-grams of the given size(s). This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "816",
    "fixed": false,
    "raw": "NGramTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "NGramTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/NGramTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.NGramTokenFilter",
    "x-az-search-deprecated": true
   },
   "deprecated": false
  },
  {
   "$id": "817",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "818",
     "isReadOnly": false,
     "realPath": [
      "minGram"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "819",
      "fixed": false,
      "raw": "1"
     },
     "deprecated": false,
     "documentation": {
      "$id": "820",
      "fixed": false,
      "raw": "The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "821",
      "fixed": false,
      "raw": "minGram"
     },
     "serializedName": "minGram",
     "modelType": {
      "$id": "822",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "823",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "824",
     "isReadOnly": false,
     "realPath": [
      "maxGram"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "825",
      "fixed": false,
      "raw": "2"
     },
     "deprecated": false,
     "documentation": {
      "$id": "826",
      "fixed": false,
      "raw": "The maximum n-gram length. Default is 2. Maximum is 300."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "827",
      "fixed": false,
      "raw": "maxGram"
     },
     "serializedName": "maxGram",
     "modelType": {
      "$id": "828",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "829",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.NGramTokenFilterV2",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Generates n-grams of the given size(s). This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "830",
    "fixed": false,
    "raw": "NGramTokenFilterV2"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "NGramTokenFilterV2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/NGramTokenFilterV2"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.NGramTokenFilterV2"
   },
   "deprecated": false
  },
  {
   "$id": "831",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "832",
     "isReadOnly": false,
     "realPath": [
      "patterns"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "833",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "834",
      "fixed": false,
      "raw": "A list of patterns to match against each token."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "835",
      "fixed": false,
      "raw": "patterns"
     },
     "serializedName": "patterns",
     "modelType": {
      "$id": "836",
      "$type": "SequenceType",
      "elementType": {
       "$id": "837",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "838",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "839",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "840",
     "isReadOnly": false,
     "realPath": [
      "preserveOriginal"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "841",
      "fixed": false,
      "raw": "true"
     },
     "deprecated": false,
     "documentation": {
      "$id": "842",
      "fixed": false,
      "raw": "A value indicating whether to return the original token even if one of the patterns matches. Default is true."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "843",
      "fixed": false,
      "raw": "preserveOriginal"
     },
     "serializedName": "preserveOriginal",
     "modelType": {
      "$id": "844",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "845",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.PatternCaptureTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Uses Java regexes to emit multiple tokens - one for each capture group in one or more patterns. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternCaptureGroupTokenFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "846",
    "fixed": false,
    "raw": "PatternCaptureTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "PatternCaptureTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/PatternCaptureTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.PatternCaptureTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "847",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "848",
     "isReadOnly": false,
     "realPath": [
      "pattern"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "849",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "850",
      "fixed": false,
      "raw": "A regular expression pattern."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "851",
      "fixed": false,
      "raw": "pattern"
     },
     "serializedName": "pattern",
     "modelType": {
      "$id": "852",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "853",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "854",
     "isReadOnly": false,
     "realPath": [
      "replacement"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "855",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "856",
      "fixed": false,
      "raw": "The replacement text."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "857",
      "fixed": false,
      "raw": "replacement"
     },
     "serializedName": "replacement",
     "modelType": {
      "$id": "858",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "859",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.PatternReplaceTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "A character filter that replaces characters in the input string. It uses a regular expression to identify character sequences to preserve and a replacement pattern to identify characters to replace. For example, given the input text \"aa bb aa bb\", pattern \"(aa)\\s+(bb)\", and replacement \"$1#$2\", the result would be \"aa#bb aa#bb\". This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternReplaceFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "860",
    "fixed": false,
    "raw": "PatternReplaceTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "PatternReplaceTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/PatternReplaceTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.PatternReplaceTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "861",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "862",
     "isReadOnly": false,
     "realPath": [
      "encoder"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "863",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "864",
      "fixed": false,
      "raw": "The phonetic encoder to use. Default is \"metaphone\"."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "PhoneticEncoder",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/PhoneticEncoder"
       ]
      },
      "x-ms-enum": {
       "name": "PhoneticEncoder",
       "modelAsString": false,
       "values": [
        {
         "value": "metaphone",
         "name": "Metaphone",
         "description": "Encodes a token into a Metaphone value."
        },
        {
         "value": "doubleMetaphone",
         "name": "DoubleMetaphone",
         "description": "Encodes a token into a double metaphone value."
        },
        {
         "value": "soundex",
         "name": "Soundex",
         "description": "Encodes a token into a Soundex value."
        },
        {
         "value": "refinedSoundex",
         "name": "RefinedSoundex",
         "description": "Encodes a token into a Refined Soundex value."
        },
        {
         "value": "caverphone1",
         "name": "Caverphone1",
         "description": "Encodes a token into a Caverphone 1.0 value."
        },
        {
         "value": "caverphone2",
         "name": "Caverphone2",
         "description": "Encodes a token into a Caverphone 2.0 value."
        },
        {
         "value": "cologne",
         "name": "Cologne",
         "description": "Encodes a token into a Cologne Phonetic value."
        },
        {
         "value": "nysiis",
         "name": "Nysiis",
         "description": "Encodes a token into a NYSIIS value."
        },
        {
         "value": "koelnerPhonetik",
         "name": "KoelnerPhonetik",
         "description": "Encodes a token using the K√∂lner Phonetik algorithm."
        },
        {
         "value": "haasePhonetik",
         "name": "HaasePhonetik",
         "description": "Encodes a token using the Haase refinement of the K√∂lner Phonetik algorithm."
        },
        {
         "value": "beiderMorse",
         "name": "BeiderMorse",
         "description": "Encodes a token into a Beider-Morse value."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "865",
      "fixed": false,
      "raw": "encoder"
     },
     "serializedName": "encoder",
     "modelType": {
      "$id": "866",
      "$type": "EnumType",
      "values": [
       {
        "$id": "867",
        "description": "Encodes a token into a Metaphone value.",
        "name": "Metaphone",
        "serializedName": "metaphone"
       },
       {
        "$id": "868",
        "description": "Encodes a token into a double metaphone value.",
        "name": "DoubleMetaphone",
        "serializedName": "doubleMetaphone"
       },
       {
        "$id": "869",
        "description": "Encodes a token into a Soundex value.",
        "name": "Soundex",
        "serializedName": "soundex"
       },
       {
        "$id": "870",
        "description": "Encodes a token into a Refined Soundex value.",
        "name": "RefinedSoundex",
        "serializedName": "refinedSoundex"
       },
       {
        "$id": "871",
        "description": "Encodes a token into a Caverphone 1.0 value.",
        "name": "Caverphone1",
        "serializedName": "caverphone1"
       },
       {
        "$id": "872",
        "description": "Encodes a token into a Caverphone 2.0 value.",
        "name": "Caverphone2",
        "serializedName": "caverphone2"
       },
       {
        "$id": "873",
        "description": "Encodes a token into a Cologne Phonetic value.",
        "name": "Cologne",
        "serializedName": "cologne"
       },
       {
        "$id": "874",
        "description": "Encodes a token into a NYSIIS value.",
        "name": "Nysiis",
        "serializedName": "nysiis"
       },
       {
        "$id": "875",
        "description": "Encodes a token using the K√∂lner Phonetik algorithm.",
        "name": "KoelnerPhonetik",
        "serializedName": "koelnerPhonetik"
       },
       {
        "$id": "876",
        "description": "Encodes a token using the Haase refinement of the K√∂lner Phonetik algorithm.",
        "name": "HaasePhonetik",
        "serializedName": "haasePhonetik"
       },
       {
        "$id": "877",
        "description": "Encodes a token into a Beider-Morse value.",
        "name": "BeiderMorse",
        "serializedName": "beiderMorse"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "878",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "879",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "880",
       "fixed": false,
       "raw": "PhoneticEncoder"
      },
      "deprecated": false
     }
    },
    {
     "$id": "881",
     "isReadOnly": false,
     "realPath": [
      "replace"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "882",
      "fixed": false,
      "raw": "true"
     },
     "deprecated": false,
     "documentation": {
      "$id": "883",
      "fixed": false,
      "raw": "A value indicating whether encoded tokens should replace original tokens. If false, encoded tokens are added as synonyms. Default is true."
     },
     "extensions": {
      "x-ms-client-name": "ReplaceOriginalTokens"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "884",
      "fixed": false,
      "raw": "replace"
     },
     "serializedName": "replace",
     "modelType": {
      "$id": "885",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "886",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.PhoneticTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Create tokens for phonetic matches. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "https://lucene.apache.org/core/4_10_3/analyzers-phonetic/org/apache/lucene/analysis/phonetic/package-tree.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "887",
    "fixed": false,
    "raw": "PhoneticTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "PhoneticTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/PhoneticTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.PhoneticTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "888",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "889",
     "isReadOnly": false,
     "realPath": [
      "maxShingleSize"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMinimum": "2"
     },
     "defaultValue": {
      "$id": "890",
      "fixed": false,
      "raw": "2"
     },
     "deprecated": false,
     "documentation": {
      "$id": "891",
      "fixed": false,
      "raw": "The maximum shingle size. Default and minimum value is 2."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "892",
      "fixed": false,
      "raw": "maxShingleSize"
     },
     "serializedName": "maxShingleSize",
     "modelType": {
      "$id": "893",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "894",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "895",
     "isReadOnly": false,
     "realPath": [
      "minShingleSize"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMinimum": "2"
     },
     "defaultValue": {
      "$id": "896",
      "fixed": false,
      "raw": "2"
     },
     "deprecated": false,
     "documentation": {
      "$id": "897",
      "fixed": false,
      "raw": "The minimum shingle size. Default and minimum value is 2. Must be less than the value of maxShingleSize."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "898",
      "fixed": false,
      "raw": "minShingleSize"
     },
     "serializedName": "minShingleSize",
     "modelType": {
      "$id": "899",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "900",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "901",
     "isReadOnly": false,
     "realPath": [
      "outputUnigrams"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "902",
      "fixed": false,
      "raw": "true"
     },
     "deprecated": false,
     "documentation": {
      "$id": "903",
      "fixed": false,
      "raw": "A value indicating whether the output stream will contain the input tokens (unigrams) as well as shingles. Default is true."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "904",
      "fixed": false,
      "raw": "outputUnigrams"
     },
     "serializedName": "outputUnigrams",
     "modelType": {
      "$id": "905",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "906",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "907",
     "isReadOnly": false,
     "realPath": [
      "outputUnigramsIfNoShingles"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "908",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "909",
      "fixed": false,
      "raw": "A value indicating whether to output unigrams for those times when no shingles are available. This property takes precedence when outputUnigrams is set to false. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "910",
      "fixed": false,
      "raw": "outputUnigramsIfNoShingles"
     },
     "serializedName": "outputUnigramsIfNoShingles",
     "modelType": {
      "$id": "911",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "912",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "913",
     "isReadOnly": false,
     "realPath": [
      "tokenSeparator"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "914",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "915",
      "fixed": false,
      "raw": "The string to use when joining adjacent tokens to form a shingle. Default is a single space (\" \")."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "916",
      "fixed": false,
      "raw": "tokenSeparator"
     },
     "serializedName": "tokenSeparator",
     "modelType": {
      "$id": "917",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "918",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "919",
     "isReadOnly": false,
     "realPath": [
      "filterToken"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "920",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "921",
      "fixed": false,
      "raw": "The string to insert for each position at which there is no token. Default is an underscore (\"_\")."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "922",
      "fixed": false,
      "raw": "filterToken"
     },
     "serializedName": "filterToken",
     "modelType": {
      "$id": "923",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "924",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.ShingleTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Creates combinations of tokens as a single token. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/shingle/ShingleFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "925",
    "fixed": false,
    "raw": "ShingleTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ShingleTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ShingleTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.ShingleTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "926",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "927",
     "isReadOnly": false,
     "realPath": [
      "language"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "928",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "929",
      "fixed": false,
      "raw": "The language to use."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "SnowballTokenFilterLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SnowballTokenFilterLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "SnowballTokenFilterLanguage",
       "modelAsString": false,
       "values": [
        {
         "value": "armenian",
         "name": "Armenian",
         "description": "Selects the Lucene Snowball stemming tokenizer for Armenian."
        },
        {
         "value": "basque",
         "name": "Basque",
         "description": "Selects the Lucene Snowball stemming tokenizer for Basque."
        },
        {
         "value": "catalan",
         "name": "Catalan",
         "description": "Selects the Lucene Snowball stemming tokenizer for Catalan."
        },
        {
         "value": "danish",
         "name": "Danish",
         "description": "Selects the Lucene Snowball stemming tokenizer for Danish."
        },
        {
         "value": "dutch",
         "name": "Dutch",
         "description": "Selects the Lucene Snowball stemming tokenizer for Dutch."
        },
        {
         "value": "english",
         "name": "English",
         "description": "Selects the Lucene Snowball stemming tokenizer for English."
        },
        {
         "value": "finnish",
         "name": "Finnish",
         "description": "Selects the Lucene Snowball stemming tokenizer for Finnish."
        },
        {
         "value": "french",
         "name": "French",
         "description": "Selects the Lucene Snowball stemming tokenizer for French."
        },
        {
         "value": "german",
         "name": "German",
         "description": "Selects the Lucene Snowball stemming tokenizer for German."
        },
        {
         "value": "german2",
         "name": "German2",
         "description": "Selects the Lucene Snowball stemming tokenizer that uses the German variant algorithm."
        },
        {
         "value": "hungarian",
         "name": "Hungarian",
         "description": "Selects the Lucene Snowball stemming tokenizer for Hungarian."
        },
        {
         "value": "italian",
         "name": "Italian",
         "description": "Selects the Lucene Snowball stemming tokenizer for Italian."
        },
        {
         "value": "kp",
         "name": "Kp",
         "description": "Selects the Lucene Snowball stemming tokenizer for Dutch that uses the Kraaij-Pohlmann stemming algorithm."
        },
        {
         "value": "lovins",
         "name": "Lovins",
         "description": "Selects the Lucene Snowball stemming tokenizer for English that uses the Lovins stemming algorithm."
        },
        {
         "value": "norwegian",
         "name": "Norwegian",
         "description": "Selects the Lucene Snowball stemming tokenizer for Norwegian."
        },
        {
         "value": "porter",
         "name": "Porter",
         "description": "Selects the Lucene Snowball stemming tokenizer for English that uses the Porter stemming algorithm."
        },
        {
         "value": "portuguese",
         "name": "Portuguese",
         "description": "Selects the Lucene Snowball stemming tokenizer for Portuguese."
        },
        {
         "value": "romanian",
         "name": "Romanian",
         "description": "Selects the Lucene Snowball stemming tokenizer for Romanian."
        },
        {
         "value": "russian",
         "name": "Russian",
         "description": "Selects the Lucene Snowball stemming tokenizer for Russian."
        },
        {
         "value": "spanish",
         "name": "Spanish",
         "description": "Selects the Lucene Snowball stemming tokenizer for Spanish."
        },
        {
         "value": "swedish",
         "name": "Swedish",
         "description": "Selects the Lucene Snowball stemming tokenizer for Swedish."
        },
        {
         "value": "turkish",
         "name": "Turkish",
         "description": "Selects the Lucene Snowball stemming tokenizer for Turkish."
        }
       ]
      }
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "930",
      "fixed": false,
      "raw": "language"
     },
     "serializedName": "language",
     "modelType": {
      "$id": "931",
      "$type": "EnumType",
      "values": [
       {
        "$id": "932",
        "description": "Selects the Lucene Snowball stemming tokenizer for Armenian.",
        "name": "Armenian",
        "serializedName": "armenian"
       },
       {
        "$id": "933",
        "description": "Selects the Lucene Snowball stemming tokenizer for Basque.",
        "name": "Basque",
        "serializedName": "basque"
       },
       {
        "$id": "934",
        "description": "Selects the Lucene Snowball stemming tokenizer for Catalan.",
        "name": "Catalan",
        "serializedName": "catalan"
       },
       {
        "$id": "935",
        "description": "Selects the Lucene Snowball stemming tokenizer for Danish.",
        "name": "Danish",
        "serializedName": "danish"
       },
       {
        "$id": "936",
        "description": "Selects the Lucene Snowball stemming tokenizer for Dutch.",
        "name": "Dutch",
        "serializedName": "dutch"
       },
       {
        "$id": "937",
        "description": "Selects the Lucene Snowball stemming tokenizer for English.",
        "name": "English",
        "serializedName": "english"
       },
       {
        "$id": "938",
        "description": "Selects the Lucene Snowball stemming tokenizer for Finnish.",
        "name": "Finnish",
        "serializedName": "finnish"
       },
       {
        "$id": "939",
        "description": "Selects the Lucene Snowball stemming tokenizer for French.",
        "name": "French",
        "serializedName": "french"
       },
       {
        "$id": "940",
        "description": "Selects the Lucene Snowball stemming tokenizer for German.",
        "name": "German",
        "serializedName": "german"
       },
       {
        "$id": "941",
        "description": "Selects the Lucene Snowball stemming tokenizer that uses the German variant algorithm.",
        "name": "German2",
        "serializedName": "german2"
       },
       {
        "$id": "942",
        "description": "Selects the Lucene Snowball stemming tokenizer for Hungarian.",
        "name": "Hungarian",
        "serializedName": "hungarian"
       },
       {
        "$id": "943",
        "description": "Selects the Lucene Snowball stemming tokenizer for Italian.",
        "name": "Italian",
        "serializedName": "italian"
       },
       {
        "$id": "944",
        "description": "Selects the Lucene Snowball stemming tokenizer for Dutch that uses the Kraaij-Pohlmann stemming algorithm.",
        "name": "Kp",
        "serializedName": "kp"
       },
       {
        "$id": "945",
        "description": "Selects the Lucene Snowball stemming tokenizer for English that uses the Lovins stemming algorithm.",
        "name": "Lovins",
        "serializedName": "lovins"
       },
       {
        "$id": "946",
        "description": "Selects the Lucene Snowball stemming tokenizer for Norwegian.",
        "name": "Norwegian",
        "serializedName": "norwegian"
       },
       {
        "$id": "947",
        "description": "Selects the Lucene Snowball stemming tokenizer for English that uses the Porter stemming algorithm.",
        "name": "Porter",
        "serializedName": "porter"
       },
       {
        "$id": "948",
        "description": "Selects the Lucene Snowball stemming tokenizer for Portuguese.",
        "name": "Portuguese",
        "serializedName": "portuguese"
       },
       {
        "$id": "949",
        "description": "Selects the Lucene Snowball stemming tokenizer for Romanian.",
        "name": "Romanian",
        "serializedName": "romanian"
       },
       {
        "$id": "950",
        "description": "Selects the Lucene Snowball stemming tokenizer for Russian.",
        "name": "Russian",
        "serializedName": "russian"
       },
       {
        "$id": "951",
        "description": "Selects the Lucene Snowball stemming tokenizer for Spanish.",
        "name": "Spanish",
        "serializedName": "spanish"
       },
       {
        "$id": "952",
        "description": "Selects the Lucene Snowball stemming tokenizer for Swedish.",
        "name": "Swedish",
        "serializedName": "swedish"
       },
       {
        "$id": "953",
        "description": "Selects the Lucene Snowball stemming tokenizer for Turkish.",
        "name": "Turkish",
        "serializedName": "turkish"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "954",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "955",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "956",
       "fixed": false,
       "raw": "SnowballTokenFilterLanguage"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.SnowballTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "A filter that stems words using a Snowball-generated stemmer. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/snowball/SnowballFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "957",
    "fixed": false,
    "raw": "SnowballTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SnowballTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SnowballTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.SnowballTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "958",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "959",
     "isReadOnly": false,
     "realPath": [
      "language"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "960",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "961",
      "fixed": false,
      "raw": "The language to use."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "StemmerTokenFilterLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/StemmerTokenFilterLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "StemmerTokenFilterLanguage",
       "modelAsString": false,
       "values": [
        {
         "value": "arabic",
         "name": "Arabic",
         "description": "Selects the Lucene stemming tokenizer for Arabic."
        },
        {
         "value": "armenian",
         "name": "Armenian",
         "description": "Selects the Lucene stemming tokenizer for Armenian."
        },
        {
         "value": "basque",
         "name": "Basque",
         "description": "Selects the Lucene stemming tokenizer for Basque."
        },
        {
         "value": "brazilian",
         "name": "Brazilian",
         "description": "Selects the Lucene stemming tokenizer for Portuguese (Brazil)."
        },
        {
         "value": "bulgarian",
         "name": "Bulgarian",
         "description": "Selects the Lucene stemming tokenizer for Bulgarian."
        },
        {
         "value": "catalan",
         "name": "Catalan",
         "description": "Selects the Lucene stemming tokenizer for Catalan."
        },
        {
         "value": "czech",
         "name": "Czech",
         "description": "Selects the Lucene stemming tokenizer for Czech."
        },
        {
         "value": "danish",
         "name": "Danish",
         "description": "Selects the Lucene stemming tokenizer for Danish."
        },
        {
         "value": "dutch",
         "name": "Dutch",
         "description": "Selects the Lucene stemming tokenizer for Dutch."
        },
        {
         "value": "dutchKp",
         "name": "DutchKp",
         "description": "Selects the Lucene stemming tokenizer for Dutch that uses the Kraaij-Pohlmann stemming algorithm."
        },
        {
         "value": "english",
         "name": "English",
         "description": "Selects the Lucene stemming tokenizer for English."
        },
        {
         "value": "lightEnglish",
         "name": "LightEnglish",
         "description": "Selects the Lucene stemming tokenizer for English that does light stemming."
        },
        {
         "value": "minimalEnglish",
         "name": "MinimalEnglish",
         "description": "Selects the Lucene stemming tokenizer for English that does minimal stemming."
        },
        {
         "value": "possessiveEnglish",
         "name": "PossessiveEnglish",
         "description": "Selects the Lucene stemming tokenizer for English that removes trailing possessives from words."
        },
        {
         "value": "porter2",
         "name": "Porter2",
         "description": "Selects the Lucene stemming tokenizer for English that uses the Porter2 stemming algorithm."
        },
        {
         "value": "lovins",
         "name": "Lovins",
         "description": "Selects the Lucene stemming tokenizer for English that uses the Lovins stemming algorithm."
        },
        {
         "value": "finnish",
         "name": "Finnish",
         "description": "Selects the Lucene stemming tokenizer for Finnish."
        },
        {
         "value": "lightFinnish",
         "name": "LightFinnish",
         "description": "Selects the Lucene stemming tokenizer for Finnish that does light stemming."
        },
        {
         "value": "french",
         "name": "French",
         "description": "Selects the Lucene stemming tokenizer for French."
        },
        {
         "value": "lightFrench",
         "name": "LightFrench",
         "description": "Selects the Lucene stemming tokenizer for French that does light stemming."
        },
        {
         "value": "minimalFrench",
         "name": "MinimalFrench",
         "description": "Selects the Lucene stemming tokenizer for French that does minimal stemming."
        },
        {
         "value": "galician",
         "name": "Galician",
         "description": "Selects the Lucene stemming tokenizer for Galician."
        },
        {
         "value": "minimalGalician",
         "name": "MinimalGalician",
         "description": "Selects the Lucene stemming tokenizer for Galician that does minimal stemming."
        },
        {
         "value": "german",
         "name": "German",
         "description": "Selects the Lucene stemming tokenizer for German."
        },
        {
         "value": "german2",
         "name": "German2",
         "description": "Selects the Lucene stemming tokenizer that uses the German variant algorithm."
        },
        {
         "value": "lightGerman",
         "name": "LightGerman",
         "description": "Selects the Lucene stemming tokenizer for German that does light stemming."
        },
        {
         "value": "minimalGerman",
         "name": "MinimalGerman",
         "description": "Selects the Lucene stemming tokenizer for German that does minimal stemming."
        },
        {
         "value": "greek",
         "name": "Greek",
         "description": "Selects the Lucene stemming tokenizer for Greek."
        },
        {
         "value": "hindi",
         "name": "Hindi",
         "description": "Selects the Lucene stemming tokenizer for Hindi."
        },
        {
         "value": "hungarian",
         "name": "Hungarian",
         "description": "Selects the Lucene stemming tokenizer for Hungarian."
        },
        {
         "value": "lightHungarian",
         "name": "LightHungarian",
         "description": "Selects the Lucene stemming tokenizer for Hungarian that does light stemming."
        },
        {
         "value": "indonesian",
         "name": "Indonesian",
         "description": "Selects the Lucene stemming tokenizer for Indonesian."
        },
        {
         "value": "irish",
         "name": "Irish",
         "description": "Selects the Lucene stemming tokenizer for Irish."
        },
        {
         "value": "italian",
         "name": "Italian",
         "description": "Selects the Lucene stemming tokenizer for Italian."
        },
        {
         "value": "lightItalian",
         "name": "LightItalian",
         "description": "Selects the Lucene stemming tokenizer for Italian that does light stemming."
        },
        {
         "value": "sorani",
         "name": "Sorani",
         "description": "Selects the Lucene stemming tokenizer for Sorani."
        },
        {
         "value": "latvian",
         "name": "Latvian",
         "description": "Selects the Lucene stemming tokenizer for Latvian."
        },
        {
         "value": "norwegian",
         "name": "Norwegian",
         "description": "Selects the Lucene stemming tokenizer for Norwegian (Bokm√•l)."
        },
        {
         "value": "lightNorwegian",
         "name": "LightNorwegian",
         "description": "Selects the Lucene stemming tokenizer for Norwegian (Bokm√•l) that does light stemming."
        },
        {
         "value": "minimalNorwegian",
         "name": "MinimalNorwegian",
         "description": "Selects the Lucene stemming tokenizer for Norwegian (Bokm√•l) that does minimal stemming."
        },
        {
         "value": "lightNynorsk",
         "name": "LightNynorsk",
         "description": "Selects the Lucene stemming tokenizer for Norwegian (Nynorsk) that does light stemming."
        },
        {
         "value": "minimalNynorsk",
         "name": "MinimalNynorsk",
         "description": "Selects the Lucene stemming tokenizer for Norwegian (Nynorsk) that does minimal stemming."
        },
        {
         "value": "portuguese",
         "name": "Portuguese",
         "description": "Selects the Lucene stemming tokenizer for Portuguese."
        },
        {
         "value": "lightPortuguese",
         "name": "LightPortuguese",
         "description": "Selects the Lucene stemming tokenizer for Portuguese that does light stemming."
        },
        {
         "value": "minimalPortuguese",
         "name": "MinimalPortuguese",
         "description": "Selects the Lucene stemming tokenizer for Portuguese that does minimal stemming."
        },
        {
         "value": "portugueseRslp",
         "name": "PortugueseRslp",
         "description": "Selects the Lucene stemming tokenizer for Portuguese that uses the RSLP stemming algorithm."
        },
        {
         "value": "romanian",
         "name": "Romanian",
         "description": "Selects the Lucene stemming tokenizer for Romanian."
        },
        {
         "value": "russian",
         "name": "Russian",
         "description": "Selects the Lucene stemming tokenizer for Russian."
        },
        {
         "value": "lightRussian",
         "name": "LightRussian",
         "description": "Selects the Lucene stemming tokenizer for Russian that does light stemming."
        },
        {
         "value": "spanish",
         "name": "Spanish",
         "description": "Selects the Lucene stemming tokenizer for Spanish."
        },
        {
         "value": "lightSpanish",
         "name": "LightSpanish",
         "description": "Selects the Lucene stemming tokenizer for Spanish that does light stemming."
        },
        {
         "value": "swedish",
         "name": "Swedish",
         "description": "Selects the Lucene stemming tokenizer for Swedish."
        },
        {
         "value": "lightSwedish",
         "name": "LightSwedish",
         "description": "Selects the Lucene stemming tokenizer for Swedish that does light stemming."
        },
        {
         "value": "turkish",
         "name": "Turkish",
         "description": "Selects the Lucene stemming tokenizer for Turkish."
        }
       ]
      }
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "962",
      "fixed": false,
      "raw": "language"
     },
     "serializedName": "language",
     "modelType": {
      "$id": "963",
      "$type": "EnumType",
      "values": [
       {
        "$id": "964",
        "description": "Selects the Lucene stemming tokenizer for Arabic.",
        "name": "Arabic",
        "serializedName": "arabic"
       },
       {
        "$id": "965",
        "description": "Selects the Lucene stemming tokenizer for Armenian.",
        "name": "Armenian",
        "serializedName": "armenian"
       },
       {
        "$id": "966",
        "description": "Selects the Lucene stemming tokenizer for Basque.",
        "name": "Basque",
        "serializedName": "basque"
       },
       {
        "$id": "967",
        "description": "Selects the Lucene stemming tokenizer for Portuguese (Brazil).",
        "name": "Brazilian",
        "serializedName": "brazilian"
       },
       {
        "$id": "968",
        "description": "Selects the Lucene stemming tokenizer for Bulgarian.",
        "name": "Bulgarian",
        "serializedName": "bulgarian"
       },
       {
        "$id": "969",
        "description": "Selects the Lucene stemming tokenizer for Catalan.",
        "name": "Catalan",
        "serializedName": "catalan"
       },
       {
        "$id": "970",
        "description": "Selects the Lucene stemming tokenizer for Czech.",
        "name": "Czech",
        "serializedName": "czech"
       },
       {
        "$id": "971",
        "description": "Selects the Lucene stemming tokenizer for Danish.",
        "name": "Danish",
        "serializedName": "danish"
       },
       {
        "$id": "972",
        "description": "Selects the Lucene stemming tokenizer for Dutch.",
        "name": "Dutch",
        "serializedName": "dutch"
       },
       {
        "$id": "973",
        "description": "Selects the Lucene stemming tokenizer for Dutch that uses the Kraaij-Pohlmann stemming algorithm.",
        "name": "DutchKp",
        "serializedName": "dutchKp"
       },
       {
        "$id": "974",
        "description": "Selects the Lucene stemming tokenizer for English.",
        "name": "English",
        "serializedName": "english"
       },
       {
        "$id": "975",
        "description": "Selects the Lucene stemming tokenizer for English that does light stemming.",
        "name": "LightEnglish",
        "serializedName": "lightEnglish"
       },
       {
        "$id": "976",
        "description": "Selects the Lucene stemming tokenizer for English that does minimal stemming.",
        "name": "MinimalEnglish",
        "serializedName": "minimalEnglish"
       },
       {
        "$id": "977",
        "description": "Selects the Lucene stemming tokenizer for English that removes trailing possessives from words.",
        "name": "PossessiveEnglish",
        "serializedName": "possessiveEnglish"
       },
       {
        "$id": "978",
        "description": "Selects the Lucene stemming tokenizer for English that uses the Porter2 stemming algorithm.",
        "name": "Porter2",
        "serializedName": "porter2"
       },
       {
        "$id": "979",
        "description": "Selects the Lucene stemming tokenizer for English that uses the Lovins stemming algorithm.",
        "name": "Lovins",
        "serializedName": "lovins"
       },
       {
        "$id": "980",
        "description": "Selects the Lucene stemming tokenizer for Finnish.",
        "name": "Finnish",
        "serializedName": "finnish"
       },
       {
        "$id": "981",
        "description": "Selects the Lucene stemming tokenizer for Finnish that does light stemming.",
        "name": "LightFinnish",
        "serializedName": "lightFinnish"
       },
       {
        "$id": "982",
        "description": "Selects the Lucene stemming tokenizer for French.",
        "name": "French",
        "serializedName": "french"
       },
       {
        "$id": "983",
        "description": "Selects the Lucene stemming tokenizer for French that does light stemming.",
        "name": "LightFrench",
        "serializedName": "lightFrench"
       },
       {
        "$id": "984",
        "description": "Selects the Lucene stemming tokenizer for French that does minimal stemming.",
        "name": "MinimalFrench",
        "serializedName": "minimalFrench"
       },
       {
        "$id": "985",
        "description": "Selects the Lucene stemming tokenizer for Galician.",
        "name": "Galician",
        "serializedName": "galician"
       },
       {
        "$id": "986",
        "description": "Selects the Lucene stemming tokenizer for Galician that does minimal stemming.",
        "name": "MinimalGalician",
        "serializedName": "minimalGalician"
       },
       {
        "$id": "987",
        "description": "Selects the Lucene stemming tokenizer for German.",
        "name": "German",
        "serializedName": "german"
       },
       {
        "$id": "988",
        "description": "Selects the Lucene stemming tokenizer that uses the German variant algorithm.",
        "name": "German2",
        "serializedName": "german2"
       },
       {
        "$id": "989",
        "description": "Selects the Lucene stemming tokenizer for German that does light stemming.",
        "name": "LightGerman",
        "serializedName": "lightGerman"
       },
       {
        "$id": "990",
        "description": "Selects the Lucene stemming tokenizer for German that does minimal stemming.",
        "name": "MinimalGerman",
        "serializedName": "minimalGerman"
       },
       {
        "$id": "991",
        "description": "Selects the Lucene stemming tokenizer for Greek.",
        "name": "Greek",
        "serializedName": "greek"
       },
       {
        "$id": "992",
        "description": "Selects the Lucene stemming tokenizer for Hindi.",
        "name": "Hindi",
        "serializedName": "hindi"
       },
       {
        "$id": "993",
        "description": "Selects the Lucene stemming tokenizer for Hungarian.",
        "name": "Hungarian",
        "serializedName": "hungarian"
       },
       {
        "$id": "994",
        "description": "Selects the Lucene stemming tokenizer for Hungarian that does light stemming.",
        "name": "LightHungarian",
        "serializedName": "lightHungarian"
       },
       {
        "$id": "995",
        "description": "Selects the Lucene stemming tokenizer for Indonesian.",
        "name": "Indonesian",
        "serializedName": "indonesian"
       },
       {
        "$id": "996",
        "description": "Selects the Lucene stemming tokenizer for Irish.",
        "name": "Irish",
        "serializedName": "irish"
       },
       {
        "$id": "997",
        "description": "Selects the Lucene stemming tokenizer for Italian.",
        "name": "Italian",
        "serializedName": "italian"
       },
       {
        "$id": "998",
        "description": "Selects the Lucene stemming tokenizer for Italian that does light stemming.",
        "name": "LightItalian",
        "serializedName": "lightItalian"
       },
       {
        "$id": "999",
        "description": "Selects the Lucene stemming tokenizer for Sorani.",
        "name": "Sorani",
        "serializedName": "sorani"
       },
       {
        "$id": "1000",
        "description": "Selects the Lucene stemming tokenizer for Latvian.",
        "name": "Latvian",
        "serializedName": "latvian"
       },
       {
        "$id": "1001",
        "description": "Selects the Lucene stemming tokenizer for Norwegian (Bokm√•l).",
        "name": "Norwegian",
        "serializedName": "norwegian"
       },
       {
        "$id": "1002",
        "description": "Selects the Lucene stemming tokenizer for Norwegian (Bokm√•l) that does light stemming.",
        "name": "LightNorwegian",
        "serializedName": "lightNorwegian"
       },
       {
        "$id": "1003",
        "description": "Selects the Lucene stemming tokenizer for Norwegian (Bokm√•l) that does minimal stemming.",
        "name": "MinimalNorwegian",
        "serializedName": "minimalNorwegian"
       },
       {
        "$id": "1004",
        "description": "Selects the Lucene stemming tokenizer for Norwegian (Nynorsk) that does light stemming.",
        "name": "LightNynorsk",
        "serializedName": "lightNynorsk"
       },
       {
        "$id": "1005",
        "description": "Selects the Lucene stemming tokenizer for Norwegian (Nynorsk) that does minimal stemming.",
        "name": "MinimalNynorsk",
        "serializedName": "minimalNynorsk"
       },
       {
        "$id": "1006",
        "description": "Selects the Lucene stemming tokenizer for Portuguese.",
        "name": "Portuguese",
        "serializedName": "portuguese"
       },
       {
        "$id": "1007",
        "description": "Selects the Lucene stemming tokenizer for Portuguese that does light stemming.",
        "name": "LightPortuguese",
        "serializedName": "lightPortuguese"
       },
       {
        "$id": "1008",
        "description": "Selects the Lucene stemming tokenizer for Portuguese that does minimal stemming.",
        "name": "MinimalPortuguese",
        "serializedName": "minimalPortuguese"
       },
       {
        "$id": "1009",
        "description": "Selects the Lucene stemming tokenizer for Portuguese that uses the RSLP stemming algorithm.",
        "name": "PortugueseRslp",
        "serializedName": "portugueseRslp"
       },
       {
        "$id": "1010",
        "description": "Selects the Lucene stemming tokenizer for Romanian.",
        "name": "Romanian",
        "serializedName": "romanian"
       },
       {
        "$id": "1011",
        "description": "Selects the Lucene stemming tokenizer for Russian.",
        "name": "Russian",
        "serializedName": "russian"
       },
       {
        "$id": "1012",
        "description": "Selects the Lucene stemming tokenizer for Russian that does light stemming.",
        "name": "LightRussian",
        "serializedName": "lightRussian"
       },
       {
        "$id": "1013",
        "description": "Selects the Lucene stemming tokenizer for Spanish.",
        "name": "Spanish",
        "serializedName": "spanish"
       },
       {
        "$id": "1014",
        "description": "Selects the Lucene stemming tokenizer for Spanish that does light stemming.",
        "name": "LightSpanish",
        "serializedName": "lightSpanish"
       },
       {
        "$id": "1015",
        "description": "Selects the Lucene stemming tokenizer for Swedish.",
        "name": "Swedish",
        "serializedName": "swedish"
       },
       {
        "$id": "1016",
        "description": "Selects the Lucene stemming tokenizer for Swedish that does light stemming.",
        "name": "LightSwedish",
        "serializedName": "lightSwedish"
       },
       {
        "$id": "1017",
        "description": "Selects the Lucene stemming tokenizer for Turkish.",
        "name": "Turkish",
        "serializedName": "turkish"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "1018",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1019",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1020",
       "fixed": false,
       "raw": "StemmerTokenFilterLanguage"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.StemmerTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Language specific stemming filter. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#TokenFilters",
   "containsConstantProperties": false,
   "name": {
    "$id": "1021",
    "fixed": false,
    "raw": "StemmerTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "StemmerTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/StemmerTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.StemmerTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "1022",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1023",
     "isReadOnly": false,
     "realPath": [
      "rules"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1024",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1025",
      "fixed": false,
      "raw": "A list of stemming rules in the following format: \"word => stem\", for example: \"ran => run\"."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1026",
      "fixed": false,
      "raw": "rules"
     },
     "serializedName": "rules",
     "modelType": {
      "$id": "1027",
      "$type": "SequenceType",
      "elementType": {
       "$id": "1028",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1029",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1030",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.StemmerOverrideTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Provides the ability to override other stemming filters with custom dictionary-based stemming. Any dictionary-stemmed terms will be marked as keywords so that they will not be stemmed with stemmers down the chain. Must be placed before any stemming filters. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/StemmerOverrideFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "1031",
    "fixed": false,
    "raw": "StemmerOverrideTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "StemmerOverrideTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/StemmerOverrideTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.StemmerOverrideTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "1032",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1033",
     "isReadOnly": false,
     "realPath": [
      "stopwords"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1034",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1035",
      "fixed": false,
      "raw": "The list of stopwords. This property and the stopwords list property cannot both be set."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1036",
      "fixed": false,
      "raw": "stopwords"
     },
     "serializedName": "stopwords",
     "modelType": {
      "$id": "1037",
      "$type": "SequenceType",
      "elementType": {
       "$id": "1038",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1039",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1040",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "1041",
     "isReadOnly": false,
     "realPath": [
      "stopwordsList"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1042",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1043",
      "fixed": false,
      "raw": "A predefined list of stopwords to use. This property and the stopwords property cannot both be set. Default is English."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "StopwordsList",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/StopwordsList"
       ]
      },
      "x-ms-enum": {
       "name": "StopwordsList",
       "modelAsString": false,
       "values": [
        {
         "value": "arabic",
         "name": "Arabic",
         "description": "Selects the stopword list for Arabic."
        },
        {
         "value": "armenian",
         "name": "Armenian",
         "description": "Selects the stopword list for Armenian."
        },
        {
         "value": "basque",
         "name": "Basque",
         "description": "Selects the stopword list for Basque."
        },
        {
         "value": "brazilian",
         "name": "Brazilian",
         "description": "Selects the stopword list for Portuguese (Brazil)."
        },
        {
         "value": "bulgarian",
         "name": "Bulgarian",
         "description": "Selects the stopword list for Bulgarian."
        },
        {
         "value": "catalan",
         "name": "Catalan",
         "description": "Selects the stopword list for Catalan."
        },
        {
         "value": "czech",
         "name": "Czech",
         "description": "Selects the stopword list for Czech."
        },
        {
         "value": "danish",
         "name": "Danish",
         "description": "Selects the stopword list for Danish."
        },
        {
         "value": "dutch",
         "name": "Dutch",
         "description": "Selects the stopword list for Dutch."
        },
        {
         "value": "english",
         "name": "English",
         "description": "Selects the stopword list for English."
        },
        {
         "value": "finnish",
         "name": "Finnish",
         "description": "Selects the stopword list for Finnish."
        },
        {
         "value": "french",
         "name": "French",
         "description": "Selects the stopword list for French."
        },
        {
         "value": "galician",
         "name": "Galician",
         "description": "Selects the stopword list for Galician."
        },
        {
         "value": "german",
         "name": "German",
         "description": "Selects the stopword list for German."
        },
        {
         "value": "greek",
         "name": "Greek",
         "description": "Selects the stopword list for Greek."
        },
        {
         "value": "hindi",
         "name": "Hindi",
         "description": "Selects the stopword list for Hindi."
        },
        {
         "value": "hungarian",
         "name": "Hungarian",
         "description": "Selects the stopword list for Hungarian."
        },
        {
         "value": "indonesian",
         "name": "Indonesian",
         "description": "Selects the stopword list for Indonesian."
        },
        {
         "value": "irish",
         "name": "Irish",
         "description": "Selects the stopword list for Irish."
        },
        {
         "value": "italian",
         "name": "Italian",
         "description": "Selects the stopword list for Italian."
        },
        {
         "value": "latvian",
         "name": "Latvian",
         "description": "Selects the stopword list for Latvian."
        },
        {
         "value": "norwegian",
         "name": "Norwegian",
         "description": "Selects the stopword list for Norwegian."
        },
        {
         "value": "persian",
         "name": "Persian",
         "description": "Selects the stopword list for Persian."
        },
        {
         "value": "portuguese",
         "name": "Portuguese",
         "description": "Selects the stopword list for Portuguese."
        },
        {
         "value": "romanian",
         "name": "Romanian",
         "description": "Selects the stopword list for Romanian."
        },
        {
         "value": "russian",
         "name": "Russian",
         "description": "Selects the stopword list for Russian."
        },
        {
         "value": "sorani",
         "name": "Sorani",
         "description": "Selects the stopword list for Sorani."
        },
        {
         "value": "spanish",
         "name": "Spanish",
         "description": "Selects the stopword list for Spanish."
        },
        {
         "value": "swedish",
         "name": "Swedish",
         "description": "Selects the stopword list for Swedish."
        },
        {
         "value": "thai",
         "name": "Thai",
         "description": "Selects the stopword list for Thai."
        },
        {
         "value": "turkish",
         "name": "Turkish",
         "description": "Selects the stopword list for Turkish."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1044",
      "fixed": false,
      "raw": "stopwordsList"
     },
     "serializedName": "stopwordsList",
     "modelType": {
      "$id": "1045",
      "$type": "EnumType",
      "values": [
       {
        "$id": "1046",
        "description": "Selects the stopword list for Arabic.",
        "name": "Arabic",
        "serializedName": "arabic"
       },
       {
        "$id": "1047",
        "description": "Selects the stopword list for Armenian.",
        "name": "Armenian",
        "serializedName": "armenian"
       },
       {
        "$id": "1048",
        "description": "Selects the stopword list for Basque.",
        "name": "Basque",
        "serializedName": "basque"
       },
       {
        "$id": "1049",
        "description": "Selects the stopword list for Portuguese (Brazil).",
        "name": "Brazilian",
        "serializedName": "brazilian"
       },
       {
        "$id": "1050",
        "description": "Selects the stopword list for Bulgarian.",
        "name": "Bulgarian",
        "serializedName": "bulgarian"
       },
       {
        "$id": "1051",
        "description": "Selects the stopword list for Catalan.",
        "name": "Catalan",
        "serializedName": "catalan"
       },
       {
        "$id": "1052",
        "description": "Selects the stopword list for Czech.",
        "name": "Czech",
        "serializedName": "czech"
       },
       {
        "$id": "1053",
        "description": "Selects the stopword list for Danish.",
        "name": "Danish",
        "serializedName": "danish"
       },
       {
        "$id": "1054",
        "description": "Selects the stopword list for Dutch.",
        "name": "Dutch",
        "serializedName": "dutch"
       },
       {
        "$id": "1055",
        "description": "Selects the stopword list for English.",
        "name": "English",
        "serializedName": "english"
       },
       {
        "$id": "1056",
        "description": "Selects the stopword list for Finnish.",
        "name": "Finnish",
        "serializedName": "finnish"
       },
       {
        "$id": "1057",
        "description": "Selects the stopword list for French.",
        "name": "French",
        "serializedName": "french"
       },
       {
        "$id": "1058",
        "description": "Selects the stopword list for Galician.",
        "name": "Galician",
        "serializedName": "galician"
       },
       {
        "$id": "1059",
        "description": "Selects the stopword list for German.",
        "name": "German",
        "serializedName": "german"
       },
       {
        "$id": "1060",
        "description": "Selects the stopword list for Greek.",
        "name": "Greek",
        "serializedName": "greek"
       },
       {
        "$id": "1061",
        "description": "Selects the stopword list for Hindi.",
        "name": "Hindi",
        "serializedName": "hindi"
       },
       {
        "$id": "1062",
        "description": "Selects the stopword list for Hungarian.",
        "name": "Hungarian",
        "serializedName": "hungarian"
       },
       {
        "$id": "1063",
        "description": "Selects the stopword list for Indonesian.",
        "name": "Indonesian",
        "serializedName": "indonesian"
       },
       {
        "$id": "1064",
        "description": "Selects the stopword list for Irish.",
        "name": "Irish",
        "serializedName": "irish"
       },
       {
        "$id": "1065",
        "description": "Selects the stopword list for Italian.",
        "name": "Italian",
        "serializedName": "italian"
       },
       {
        "$id": "1066",
        "description": "Selects the stopword list for Latvian.",
        "name": "Latvian",
        "serializedName": "latvian"
       },
       {
        "$id": "1067",
        "description": "Selects the stopword list for Norwegian.",
        "name": "Norwegian",
        "serializedName": "norwegian"
       },
       {
        "$id": "1068",
        "description": "Selects the stopword list for Persian.",
        "name": "Persian",
        "serializedName": "persian"
       },
       {
        "$id": "1069",
        "description": "Selects the stopword list for Portuguese.",
        "name": "Portuguese",
        "serializedName": "portuguese"
       },
       {
        "$id": "1070",
        "description": "Selects the stopword list for Romanian.",
        "name": "Romanian",
        "serializedName": "romanian"
       },
       {
        "$id": "1071",
        "description": "Selects the stopword list for Russian.",
        "name": "Russian",
        "serializedName": "russian"
       },
       {
        "$id": "1072",
        "description": "Selects the stopword list for Sorani.",
        "name": "Sorani",
        "serializedName": "sorani"
       },
       {
        "$id": "1073",
        "description": "Selects the stopword list for Spanish.",
        "name": "Spanish",
        "serializedName": "spanish"
       },
       {
        "$id": "1074",
        "description": "Selects the stopword list for Swedish.",
        "name": "Swedish",
        "serializedName": "swedish"
       },
       {
        "$id": "1075",
        "description": "Selects the stopword list for Thai.",
        "name": "Thai",
        "serializedName": "thai"
       },
       {
        "$id": "1076",
        "description": "Selects the stopword list for Turkish.",
        "name": "Turkish",
        "serializedName": "turkish"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "1077",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1078",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1079",
       "fixed": false,
       "raw": "StopwordsList"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1080",
     "isReadOnly": false,
     "realPath": [
      "ignoreCase"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1081",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1082",
      "fixed": false,
      "raw": "A value indicating whether to ignore case. If true, all words are converted to lower case first. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1083",
      "fixed": false,
      "raw": "ignoreCase"
     },
     "serializedName": "ignoreCase",
     "modelType": {
      "$id": "1084",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1085",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1086",
     "isReadOnly": false,
     "realPath": [
      "removeTrailing"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1087",
      "fixed": false,
      "raw": "true"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1088",
      "fixed": false,
      "raw": "A value indicating whether to ignore the last search term if it's a stop word. Default is true."
     },
     "extensions": {
      "x-ms-client-name": "RemoveTrailingStopWords"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1089",
      "fixed": false,
      "raw": "removeTrailing"
     },
     "serializedName": "removeTrailing",
     "modelType": {
      "$id": "1090",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1091",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.StopwordsTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Removes stop words from a token stream. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "1092",
    "fixed": false,
    "raw": "StopwordsTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "StopwordsTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/StopwordsTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.StopwordsTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "1093",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1094",
     "isReadOnly": false,
     "realPath": [
      "synonyms"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1095",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1096",
      "fixed": false,
      "raw": "A list of synonyms in following one of two formats: 1. incredible, unbelievable, fabulous => amazing - all terms on the left side of => symbol will be replaced with all terms on its right side; 2. incredible, unbelievable, fabulous, amazing - comma separated list of equivalent words. Set the expand option to change how this list is interpreted."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1097",
      "fixed": false,
      "raw": "synonyms"
     },
     "serializedName": "synonyms",
     "modelType": {
      "$id": "1098",
      "$type": "SequenceType",
      "elementType": {
       "$id": "1099",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1100",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1101",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "1102",
     "isReadOnly": false,
     "realPath": [
      "ignoreCase"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1103",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1104",
      "fixed": false,
      "raw": "A value indicating whether to case-fold input for matching. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1105",
      "fixed": false,
      "raw": "ignoreCase"
     },
     "serializedName": "ignoreCase",
     "modelType": {
      "$id": "1106",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1107",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1108",
     "isReadOnly": false,
     "realPath": [
      "expand"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1109",
      "fixed": false,
      "raw": "true"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1110",
      "fixed": false,
      "raw": "A value indicating whether all words in the list of synonyms (if => notation is not used) will map to one another. If true, all words in the list of synonyms (if => notation is not used) will map to one another. The following list: incredible, unbelievable, fabulous, amazing is equivalent to: incredible, unbelievable, fabulous, amazing => incredible, unbelievable, fabulous, amazing. If false, the following list: incredible, unbelievable, fabulous, amazing will be equivalent to: incredible, unbelievable, fabulous, amazing => incredible. Default is true."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1111",
      "fixed": false,
      "raw": "expand"
     },
     "serializedName": "expand",
     "modelType": {
      "$id": "1112",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1113",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.SynonymTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Matches single or multi-word synonyms in a token stream. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/synonym/SynonymFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "1114",
    "fixed": false,
    "raw": "SynonymTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SynonymTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SynonymTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.SynonymTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "1115",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1116",
     "isReadOnly": false,
     "realPath": [
      "length"
     ],
     "collectionFormat": "none",
     "constraints": {
      "InclusiveMaximum": "300"
     },
     "defaultValue": {
      "$id": "1117",
      "fixed": false,
      "raw": "300"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1118",
      "fixed": false,
      "raw": "The length at which terms will be truncated. Default and maximum is 300."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1119",
      "fixed": false,
      "raw": "length"
     },
     "serializedName": "length",
     "modelType": {
      "$id": "1120",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "1121",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.TruncateTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Truncates the terms to a specific length. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "1122",
    "fixed": false,
    "raw": "TruncateTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "TruncateTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/TruncateTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.TruncateTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "1123",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1124",
     "isReadOnly": false,
     "realPath": [
      "onlyOnSamePosition"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1125",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1126",
      "fixed": false,
      "raw": "A value indicating whether to remove duplicates only at the same position. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1127",
      "fixed": false,
      "raw": "onlyOnSamePosition"
     },
     "serializedName": "onlyOnSamePosition",
     "modelType": {
      "$id": "1128",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1129",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.UniqueTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Filters out tokens with same text as the previous token. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "1130",
    "fixed": false,
    "raw": "UniqueTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "UniqueTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/UniqueTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.UniqueTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "1131",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1132",
     "isReadOnly": false,
     "realPath": [
      "generateWordParts"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1133",
      "fixed": false,
      "raw": "true"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1134",
      "fixed": false,
      "raw": "A value indicating whether to generate part words. If set, causes parts of words to be generated; for example \"AzureSearch\" becomes \"Azure\" \"Search\". Default is true."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1135",
      "fixed": false,
      "raw": "generateWordParts"
     },
     "serializedName": "generateWordParts",
     "modelType": {
      "$id": "1136",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1137",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1138",
     "isReadOnly": false,
     "realPath": [
      "generateNumberParts"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1139",
      "fixed": false,
      "raw": "true"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1140",
      "fixed": false,
      "raw": "A value indicating whether to generate number subwords. Default is true."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1141",
      "fixed": false,
      "raw": "generateNumberParts"
     },
     "serializedName": "generateNumberParts",
     "modelType": {
      "$id": "1142",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1143",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1144",
     "isReadOnly": false,
     "realPath": [
      "catenateWords"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1145",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1146",
      "fixed": false,
      "raw": "A value indicating whether maximum runs of word parts will be catenated. For example, if this is set to true, \"Azure-Search\" becomes \"AzureSearch\". Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1147",
      "fixed": false,
      "raw": "catenateWords"
     },
     "serializedName": "catenateWords",
     "modelType": {
      "$id": "1148",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1149",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1150",
     "isReadOnly": false,
     "realPath": [
      "catenateNumbers"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1151",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1152",
      "fixed": false,
      "raw": "A value indicating whether maximum runs of number parts will be catenated. For example, if this is set to true, \"1-2\" becomes \"12\". Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1153",
      "fixed": false,
      "raw": "catenateNumbers"
     },
     "serializedName": "catenateNumbers",
     "modelType": {
      "$id": "1154",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1155",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1156",
     "isReadOnly": false,
     "realPath": [
      "catenateAll"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1157",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1158",
      "fixed": false,
      "raw": "A value indicating whether all subword parts will be catenated. For example, if this is set to true, \"Azure-Search-1\" becomes \"AzureSearch1\". Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1159",
      "fixed": false,
      "raw": "catenateAll"
     },
     "serializedName": "catenateAll",
     "modelType": {
      "$id": "1160",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1161",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1162",
     "isReadOnly": false,
     "realPath": [
      "splitOnCaseChange"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1163",
      "fixed": false,
      "raw": "true"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1164",
      "fixed": false,
      "raw": "A value indicating whether to split words on caseChange. For example, if this is set to true, \"AzureSearch\" becomes \"Azure\" \"Search\". Default is true."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1165",
      "fixed": false,
      "raw": "splitOnCaseChange"
     },
     "serializedName": "splitOnCaseChange",
     "modelType": {
      "$id": "1166",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1167",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1168",
     "isReadOnly": false,
     "realPath": [
      "preserveOriginal"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1169",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1170",
      "fixed": false,
      "raw": "A value indicating whether original words will be preserved and added to the subword list. Default is false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1171",
      "fixed": false,
      "raw": "preserveOriginal"
     },
     "serializedName": "preserveOriginal",
     "modelType": {
      "$id": "1172",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1173",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1174",
     "isReadOnly": false,
     "realPath": [
      "splitOnNumerics"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1175",
      "fixed": false,
      "raw": "true"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1176",
      "fixed": false,
      "raw": "A value indicating whether to split on numbers. For example, if this is set to true, \"Azure1Search\" becomes \"Azure\" \"1\" \"Search\". Default is true."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1177",
      "fixed": false,
      "raw": "splitOnNumerics"
     },
     "serializedName": "splitOnNumerics",
     "modelType": {
      "$id": "1178",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1179",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1180",
     "isReadOnly": false,
     "realPath": [
      "stemEnglishPossessive"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1181",
      "fixed": false,
      "raw": "true"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1182",
      "fixed": false,
      "raw": "A value indicating whether to remove trailing \"'s\" for each subword. Default is true."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1183",
      "fixed": false,
      "raw": "stemEnglishPossessive"
     },
     "serializedName": "stemEnglishPossessive",
     "modelType": {
      "$id": "1184",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1185",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1186",
     "isReadOnly": false,
     "realPath": [
      "protectedWords"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1187",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1188",
      "fixed": false,
      "raw": "A list of tokens to protect from being delimited."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1189",
      "fixed": false,
      "raw": "protectedWords"
     },
     "serializedName": "protectedWords",
     "modelType": {
      "$id": "1190",
      "$type": "SequenceType",
      "elementType": {
       "$id": "1191",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1192",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1193",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.WordDelimiterTokenFilter",
   "baseModelType": {
    "$ref": "597"
   },
   "documentation": "Splits words into subwords and performs optional transformations on subword groups. This token filter is implemented using Apache Lucene.",
   "externalDocsUrl": "http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "1194",
    "fixed": false,
    "raw": "WordDelimiterTokenFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "WordDelimiterTokenFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/WordDelimiterTokenFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.WordDelimiterTokenFilter"
   },
   "deprecated": false
  },
  {
   "$id": "1195",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1196",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1197",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1198",
      "fixed": false,
      "raw": "The name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1199",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "1200",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1201",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "CharFilter",
   "polymorphicDiscriminator": "@odata.type",
   "documentation": "Base type for character filters.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search",
   "containsConstantProperties": false,
   "name": {
    "$id": "1202",
    "fixed": false,
    "raw": "CharFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "CharFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/CharFilter"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1203",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1204",
     "isReadOnly": false,
     "realPath": [
      "mappings"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1205",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1206",
      "fixed": false,
      "raw": "A list of mappings of the following format: \"a=>b\" (all occurrences of the character \"a\" will be replaced with character \"b\")."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1207",
      "fixed": false,
      "raw": "mappings"
     },
     "serializedName": "mappings",
     "modelType": {
      "$id": "1208",
      "$type": "SequenceType",
      "elementType": {
       "$id": "1209",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1210",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1211",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.MappingCharFilter",
   "baseModelType": {
    "$ref": "1195"
   },
   "documentation": "A character filter that applies mappings defined with the mappings option. Matching is greedy (longest pattern matching at a given point wins). Replacement is allowed to be the empty string. This character filter is implemented using Apache Lucene.",
   "externalDocsUrl": "https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/charfilter/MappingCharFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "1212",
    "fixed": false,
    "raw": "MappingCharFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "MappingCharFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/MappingCharFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.MappingCharFilter"
   },
   "deprecated": false
  },
  {
   "$id": "1213",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1214",
     "isReadOnly": false,
     "realPath": [
      "pattern"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1215",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1216",
      "fixed": false,
      "raw": "A regular expression pattern."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1217",
      "fixed": false,
      "raw": "pattern"
     },
     "serializedName": "pattern",
     "modelType": {
      "$id": "1218",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1219",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1220",
     "isReadOnly": false,
     "realPath": [
      "replacement"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1221",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1222",
      "fixed": false,
      "raw": "The replacement text."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1223",
      "fixed": false,
      "raw": "replacement"
     },
     "serializedName": "replacement",
     "modelType": {
      "$id": "1224",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1225",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.PatternReplaceCharFilter",
   "baseModelType": {
    "$ref": "1195"
   },
   "documentation": "A character filter that replaces characters in the input string. It uses a regular expression to identify character sequences to preserve and a replacement pattern to identify characters to replace. For example, given the input text \"aa bb aa bb\", pattern \"(aa)\\s+(bb)\", and replacement \"$1#$2\", the result would be \"aa#bb aa#bb\". This character filter is implemented using Apache Lucene.",
   "externalDocsUrl": "https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternReplaceCharFilter.html",
   "containsConstantProperties": false,
   "name": {
    "$id": "1226",
    "fixed": false,
    "raw": "PatternReplaceCharFilter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "PatternReplaceCharFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/PatternReplaceCharFilter"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.PatternReplaceCharFilter"
   },
   "deprecated": false
  },
  {
   "$id": "1227",
   "$type": "CompositeType",
   "serializedName": "Similarity",
   "polymorphicDiscriminator": "@odata.type",
   "documentation": "Base type for similarity algorithms. Similarity algorithms are used to calculate scores that tie queries to documents. The higher the score, the more relevant the document is to that specific query. Those scores are used to rank the search results.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/index-ranking-similarity",
   "containsConstantProperties": false,
   "name": {
    "$id": "1228",
    "fixed": false,
    "raw": "Similarity"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "Similarity",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/Similarity"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1229",
   "$type": "CompositeType",
   "serializedName": "#Microsoft.Azure.Search.ClassicSimilarity",
   "baseModelType": {
    "$ref": "1227"
   },
   "documentation": "Legacy similarity algorithm which uses the Lucene TFIDFSimilarity implementation of TF-IDF. This variation of TF-IDF introduces static document length normalization as well as coordinating factors that penalize documents that only partially match the searched queries.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1230",
    "fixed": false,
    "raw": "ClassicSimilarity"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ClassicSimilarity",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ClassicSimilarity"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.ClassicSimilarity"
   },
   "deprecated": false
  },
  {
   "$id": "1231",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1232",
     "isReadOnly": false,
     "realPath": [
      "k1"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1233",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1234",
      "fixed": false,
      "raw": "This property controls the scaling function between the term frequency of each matching terms and the final relevance score of a document-query pair. By default, a value of 1.2 is used. A value of 0.0 means the score does not scale with an increase in term frequency."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1235",
      "fixed": false,
      "raw": "k1"
     },
     "serializedName": "k1",
     "modelType": {
      "$id": "1236",
      "$type": "PrimaryType",
      "format": "double",
      "knownPrimaryType": "double",
      "name": {
       "$id": "1237",
       "fixed": false,
       "raw": "Double"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1238",
     "isReadOnly": false,
     "realPath": [
      "b"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1239",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1240",
      "fixed": false,
      "raw": "This property controls how the length of a document affects the relevance score. By default, a value of 0.75 is used. A value of 0.0 means no length normalization is applied, while a value of 1.0 means the score is fully normalized by the length of the document."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1241",
      "fixed": false,
      "raw": "b"
     },
     "serializedName": "b",
     "modelType": {
      "$id": "1242",
      "$type": "PrimaryType",
      "format": "double",
      "knownPrimaryType": "double",
      "name": {
       "$id": "1243",
       "fixed": false,
       "raw": "Double"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.BM25Similarity",
   "baseModelType": {
    "$ref": "1227"
   },
   "documentation": "Ranking function based on the Okapi BM25 similarity algorithm. BM25 is a TF-IDF-like algorithm that includes length normalization (controlled by the 'b' parameter) as well as term frequency saturation (controlled by the 'k1' parameter).",
   "containsConstantProperties": false,
   "name": {
    "$id": "1244",
    "fixed": false,
    "raw": "BM25Similarity"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "BM25Similarity",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/BM25Similarity"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.BM25Similarity"
   },
   "deprecated": false
  },
  {
   "$id": "1245",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1246",
     "isReadOnly": false,
     "realPath": [
      "connectionString"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1247",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1248",
      "fixed": false,
      "raw": "The connection string for the datasource."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1249",
      "fixed": false,
      "raw": "connectionString"
     },
     "serializedName": "connectionString",
     "modelType": {
      "$id": "1250",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1251",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "DataSourceCredentials",
   "documentation": "Represents credentials that can be used to connect to a datasource.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1252",
    "fixed": false,
    "raw": "DataSourceCredentials"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "DataSourceCredentials",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/DataSourceCredentials"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1253",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1254",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1255",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1256",
      "fixed": false,
      "raw": "The name of the table or view (for Azure SQL data source) or collection (for CosmosDB data source) that will be indexed."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1257",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "1258",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1259",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1260",
     "isReadOnly": false,
     "realPath": [
      "query"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1261",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1262",
      "fixed": false,
      "raw": "A query that is applied to this data container. The syntax and meaning of this parameter is datasource-specific. Not supported by Azure SQL datasources."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1263",
      "fixed": false,
      "raw": "query"
     },
     "serializedName": "query",
     "modelType": {
      "$id": "1264",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1265",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SearchIndexerDataContainer",
   "documentation": "Represents information about the entity (such as Azure SQL table or CosmosDB collection) that will be indexed.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1266",
    "fixed": false,
    "raw": "SearchIndexerDataContainer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchIndexerDataContainer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchIndexerDataContainer"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1267",
   "$type": "CompositeType",
   "serializedName": "DataChangeDetectionPolicy",
   "polymorphicDiscriminator": "@odata.type",
   "documentation": "Base type for data change detection policies.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1268",
    "fixed": false,
    "raw": "DataChangeDetectionPolicy"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "DataChangeDetectionPolicy",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/DataChangeDetectionPolicy"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1269",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1270",
     "isReadOnly": false,
     "realPath": [
      "highWaterMarkColumnName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1271",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1272",
      "fixed": false,
      "raw": "The name of the high water mark column."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1273",
      "fixed": false,
      "raw": "highWaterMarkColumnName"
     },
     "serializedName": "highWaterMarkColumnName",
     "modelType": {
      "$id": "1274",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1275",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
   "baseModelType": {
    "$ref": "1267"
   },
   "documentation": "Defines a data change detection policy that captures changes based on the value of a high water mark column.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1276",
    "fixed": false,
    "raw": "HighWaterMarkChangeDetectionPolicy"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "HighWaterMarkChangeDetectionPolicy",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/HighWaterMarkChangeDetectionPolicy"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy"
   },
   "deprecated": false
  },
  {
   "$id": "1277",
   "$type": "CompositeType",
   "serializedName": "#Microsoft.Azure.Search.SqlIntegratedChangeTrackingPolicy",
   "baseModelType": {
    "$ref": "1267"
   },
   "documentation": "Defines a data change detection policy that captures changes using the Integrated Change Tracking feature of Azure SQL Database.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1278",
    "fixed": false,
    "raw": "SqlIntegratedChangeTrackingPolicy"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SqlIntegratedChangeTrackingPolicy",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SqlIntegratedChangeTrackingPolicy"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.SqlIntegratedChangeTrackingPolicy"
   },
   "deprecated": false
  },
  {
   "$id": "1279",
   "$type": "CompositeType",
   "serializedName": "DataDeletionDetectionPolicy",
   "polymorphicDiscriminator": "@odata.type",
   "documentation": "Base type for data deletion detection policies.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1280",
    "fixed": false,
    "raw": "DataDeletionDetectionPolicy"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "DataDeletionDetectionPolicy",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/DataDeletionDetectionPolicy"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1281",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1282",
     "isReadOnly": false,
     "realPath": [
      "softDeleteColumnName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1283",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1284",
      "fixed": false,
      "raw": "The name of the column to use for soft-deletion detection."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1285",
      "fixed": false,
      "raw": "softDeleteColumnName"
     },
     "serializedName": "softDeleteColumnName",
     "modelType": {
      "$id": "1286",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1287",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1288",
     "isReadOnly": false,
     "realPath": [
      "softDeleteMarkerValue"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1289",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1290",
      "fixed": false,
      "raw": "The marker value that identifies an item as deleted."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1291",
      "fixed": false,
      "raw": "softDeleteMarkerValue"
     },
     "serializedName": "softDeleteMarkerValue",
     "modelType": {
      "$id": "1292",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1293",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
   "baseModelType": {
    "$ref": "1279"
   },
   "documentation": "Defines a data deletion detection policy that implements a soft-deletion strategy. It determines whether an item should be deleted based on the value of a designated 'soft delete' column.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1294",
    "fixed": false,
    "raw": "SoftDeleteColumnDeletionDetectionPolicy"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SoftDeleteColumnDeletionDetectionPolicy",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SoftDeleteColumnDeletionDetectionPolicy"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy"
   },
   "deprecated": false
  },
  {
   "$id": "1295",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1296",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1297",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1298",
      "fixed": false,
      "raw": "The name of the datasource."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1299",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "1300",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1301",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1302",
     "isReadOnly": false,
     "realPath": [
      "description"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1303",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1304",
      "fixed": false,
      "raw": "The description of the datasource."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1305",
      "fixed": false,
      "raw": "description"
     },
     "serializedName": "description",
     "modelType": {
      "$id": "1306",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1307",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1308",
     "isReadOnly": false,
     "realPath": [
      "type"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1309",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1310",
      "fixed": false,
      "raw": "The type of the datasource."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "SearchIndexerDataSourceType",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchIndexerDataSourceType"
       ]
      },
      "x-ms-enum": {
       "name": "SearchIndexerDataSourceType",
       "modelAsString": true,
       "values": [
        {
         "value": "azuresql",
         "name": "AzureSql",
         "description": "Indicates an Azure SQL datasource."
        },
        {
         "value": "cosmosdb",
         "name": "CosmosDb",
         "description": "Indicates a CosmosDB datasource."
        },
        {
         "value": "azureblob",
         "name": "AzureBlob",
         "description": "Indicates a Azure Blob datasource."
        },
        {
         "value": "azuretable",
         "name": "AzureTable",
         "description": "Indicates a Azure Table datasource."
        },
        {
         "value": "mysql",
         "name": "MySql",
         "description": "Indicates a MySql datasource."
        }
       ]
      }
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1311",
      "fixed": false,
      "raw": "type"
     },
     "serializedName": "type",
     "modelType": {
      "$id": "1312",
      "$type": "EnumType",
      "values": [
       {
        "$id": "1313",
        "description": "Indicates an Azure SQL datasource.",
        "name": "AzureSql",
        "serializedName": "azuresql"
       },
       {
        "$id": "1314",
        "description": "Indicates a CosmosDB datasource.",
        "name": "CosmosDb",
        "serializedName": "cosmosdb"
       },
       {
        "$id": "1315",
        "description": "Indicates a Azure Blob datasource.",
        "name": "AzureBlob",
        "serializedName": "azureblob"
       },
       {
        "$id": "1316",
        "description": "Indicates a Azure Table datasource.",
        "name": "AzureTable",
        "serializedName": "azuretable"
       },
       {
        "$id": "1317",
        "description": "Indicates a MySql datasource.",
        "name": "MySql",
        "serializedName": "mysql"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "1318",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1319",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1320",
       "fixed": false,
       "raw": "SearchIndexerDataSourceType"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1321",
     "isReadOnly": false,
     "realPath": [
      "credentials"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1322",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1323",
      "fixed": false,
      "raw": "Credentials for the datasource."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1324",
      "fixed": false,
      "raw": "credentials"
     },
     "serializedName": "credentials",
     "modelType": {
      "$ref": "1245"
     }
    },
    {
     "$id": "1325",
     "isReadOnly": false,
     "realPath": [
      "container"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1326",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1327",
      "fixed": false,
      "raw": "The data container for the datasource."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1328",
      "fixed": false,
      "raw": "container"
     },
     "serializedName": "container",
     "modelType": {
      "$ref": "1253"
     }
    },
    {
     "$id": "1329",
     "isReadOnly": false,
     "realPath": [
      "dataChangeDetectionPolicy"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1330",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1331",
      "fixed": false,
      "raw": "The data change detection policy for the datasource."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1332",
      "fixed": false,
      "raw": "dataChangeDetectionPolicy"
     },
     "serializedName": "dataChangeDetectionPolicy",
     "modelType": {
      "$ref": "1267"
     }
    },
    {
     "$id": "1333",
     "isReadOnly": false,
     "realPath": [
      "dataDeletionDetectionPolicy"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1334",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1335",
      "fixed": false,
      "raw": "The data deletion detection policy for the datasource."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1336",
      "fixed": false,
      "raw": "dataDeletionDetectionPolicy"
     },
     "serializedName": "dataDeletionDetectionPolicy",
     "modelType": {
      "$ref": "1279"
     }
    },
    {
     "$id": "1337",
     "isReadOnly": false,
     "realPath": [
      "@odata.etag"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1338",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1339",
      "fixed": false,
      "raw": "The ETag of the data source."
     },
     "extensions": {
      "x-ms-client-name": "ETag"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1340",
      "fixed": false,
      "raw": "@odata.etag"
     },
     "serializedName": "@odata.etag",
     "modelType": {
      "$id": "1341",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1342",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SearchIndexerDataSource",
   "documentation": "Represents a datasource definition, which can be used to configure an indexer.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1343",
    "fixed": false,
    "raw": "SearchIndexerDataSource"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchIndexerDataSource",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchIndexerDataSource"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1344",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1345",
     "isReadOnly": true,
     "realPath": [
      "value"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1346",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1347",
      "fixed": false,
      "raw": "The datasources in the Search service."
     },
     "extensions": {
      "x-ms-client-name": "DataSources"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1348",
      "fixed": false,
      "raw": "value"
     },
     "serializedName": "value",
     "modelType": {
      "$id": "1349",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1295"
      },
      "name": {
       "$id": "1350",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "ListDataSourcesResult",
   "documentation": "Response from a List Datasources request. If successful, it includes the full definitions of all datasources.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1351",
    "fixed": false,
    "raw": "ListDataSourcesResult"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ListDataSourcesResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ListDataSourcesResult"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1352",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1353",
     "isReadOnly": false,
     "realPath": [
      "interval"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1354",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1355",
      "fixed": false,
      "raw": "The interval of time between indexer executions."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1356",
      "fixed": false,
      "raw": "interval"
     },
     "serializedName": "interval",
     "modelType": {
      "$id": "1357",
      "$type": "PrimaryType",
      "format": "duration",
      "knownPrimaryType": "timeSpan",
      "name": {
       "$id": "1358",
       "fixed": false,
       "raw": "TimeSpan"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1359",
     "isReadOnly": false,
     "realPath": [
      "startTime"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1360",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1361",
      "fixed": false,
      "raw": "The time when an indexer should start running."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1362",
      "fixed": false,
      "raw": "startTime"
     },
     "serializedName": "startTime",
     "modelType": {
      "$id": "1363",
      "$type": "PrimaryType",
      "format": "date-time",
      "knownPrimaryType": "dateTime",
      "name": {
       "$id": "1364",
       "fixed": false,
       "raw": "DateTime"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "IndexingSchedule",
   "documentation": "Represents a schedule for indexer execution.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1365",
    "fixed": false,
    "raw": "IndexingSchedule"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "IndexingSchedule",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/IndexingSchedule"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1366",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1367",
     "isReadOnly": false,
     "realPath": [
      "batchSize"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1368",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1369",
      "fixed": false,
      "raw": "The number of items that are read from the data source and indexed as a single batch in order to improve performance. The default depends on the data source type."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1370",
      "fixed": false,
      "raw": "batchSize"
     },
     "serializedName": "batchSize",
     "modelType": {
      "$id": "1371",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "1372",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1373",
     "isReadOnly": false,
     "realPath": [
      "maxFailedItems"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1374",
      "fixed": false,
      "raw": "0"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1375",
      "fixed": false,
      "raw": "The maximum number of items that can fail indexing for indexer execution to still be considered successful. -1 means no limit. Default is 0."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1376",
      "fixed": false,
      "raw": "maxFailedItems"
     },
     "serializedName": "maxFailedItems",
     "modelType": {
      "$id": "1377",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "1378",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1379",
     "isReadOnly": false,
     "realPath": [
      "maxFailedItemsPerBatch"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1380",
      "fixed": false,
      "raw": "0"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1381",
      "fixed": false,
      "raw": "The maximum number of items in a single batch that can fail indexing for the batch to still be considered successful. -1 means no limit. Default is 0."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1382",
      "fixed": false,
      "raw": "maxFailedItemsPerBatch"
     },
     "serializedName": "maxFailedItemsPerBatch",
     "modelType": {
      "$id": "1383",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "1384",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1385",
     "isReadOnly": false,
     "realPath": [
      "configuration"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1386",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1387",
      "fixed": false,
      "raw": "A dictionary of indexer-specific configuration properties. Each name is the name of a specific property. Each value must be of a primitive type."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1388",
      "fixed": false,
      "raw": "configuration"
     },
     "serializedName": "configuration",
     "modelType": {
      "$id": "1389",
      "$type": "DictionaryType",
      "valueType": {
       "$id": "1390",
       "$type": "PrimaryType",
       "knownPrimaryType": "object",
       "name": {
        "$id": "1391",
        "fixed": false,
        "raw": "Object"
       },
       "deprecated": false
      },
      "supportsAdditionalProperties": false,
      "name": {
       "$id": "1392",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "IndexingParameters",
   "documentation": "Represents parameters for indexer execution.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1393",
    "fixed": false,
    "raw": "IndexingParameters"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "IndexingParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/IndexingParameters"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1394",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1395",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1396",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1397",
      "fixed": false,
      "raw": "The name of the field mapping function."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1398",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "1399",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1400",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1401",
     "isReadOnly": false,
     "realPath": [
      "parameters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1402",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1403",
      "fixed": false,
      "raw": "A dictionary of parameter name/value pairs to pass to the function. Each value must be of a primitive type."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1404",
      "fixed": false,
      "raw": "parameters"
     },
     "serializedName": "parameters",
     "modelType": {
      "$id": "1405",
      "$type": "DictionaryType",
      "valueType": {
       "$id": "1406",
       "$type": "PrimaryType",
       "knownPrimaryType": "object",
       "name": {
        "$id": "1407",
        "fixed": false,
        "raw": "Object"
       },
       "deprecated": false
      },
      "supportsAdditionalProperties": false,
      "name": {
       "$id": "1408",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "FieldMappingFunction",
   "documentation": "Represents a function that transforms a value from a data source before indexing.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/search-indexer-field-mappings",
   "containsConstantProperties": false,
   "name": {
    "$id": "1409",
    "fixed": false,
    "raw": "FieldMappingFunction"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "FieldMappingFunction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/FieldMappingFunction"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1410",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1411",
     "isReadOnly": false,
     "realPath": [
      "sourceFieldName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1412",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1413",
      "fixed": false,
      "raw": "The name of the field in the data source."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1414",
      "fixed": false,
      "raw": "sourceFieldName"
     },
     "serializedName": "sourceFieldName",
     "modelType": {
      "$id": "1415",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1416",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1417",
     "isReadOnly": false,
     "realPath": [
      "targetFieldName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1418",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1419",
      "fixed": false,
      "raw": "The name of the target field in the index. Same as the source field name by default."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1420",
      "fixed": false,
      "raw": "targetFieldName"
     },
     "serializedName": "targetFieldName",
     "modelType": {
      "$id": "1421",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1422",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1423",
     "isReadOnly": false,
     "realPath": [
      "mappingFunction"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1424",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1425",
      "fixed": false,
      "raw": "A function to apply to each source field value before indexing."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1426",
      "fixed": false,
      "raw": "mappingFunction"
     },
     "serializedName": "mappingFunction",
     "modelType": {
      "$ref": "1394"
     }
    }
   ],
   "serializedName": "FieldMapping",
   "documentation": "Defines a mapping between a field in a data source and a target field in an index.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/search-indexer-field-mappings",
   "containsConstantProperties": false,
   "name": {
    "$id": "1427",
    "fixed": false,
    "raw": "FieldMapping"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "FieldMapping",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/FieldMapping"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1428",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1429",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1430",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1431",
      "fixed": false,
      "raw": "The name of the indexer."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1432",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "1433",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1434",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1435",
     "isReadOnly": false,
     "realPath": [
      "description"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1436",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1437",
      "fixed": false,
      "raw": "The description of the indexer."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1438",
      "fixed": false,
      "raw": "description"
     },
     "serializedName": "description",
     "modelType": {
      "$id": "1439",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1440",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1441",
     "isReadOnly": false,
     "realPath": [
      "dataSourceName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1442",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1443",
      "fixed": false,
      "raw": "The name of the datasource from which this indexer reads data."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1444",
      "fixed": false,
      "raw": "dataSourceName"
     },
     "serializedName": "dataSourceName",
     "modelType": {
      "$id": "1445",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1446",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1447",
     "isReadOnly": false,
     "realPath": [
      "skillsetName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1448",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1449",
      "fixed": false,
      "raw": "The name of the skillset executing with this indexer."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1450",
      "fixed": false,
      "raw": "skillsetName"
     },
     "serializedName": "skillsetName",
     "modelType": {
      "$id": "1451",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1452",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1453",
     "isReadOnly": false,
     "realPath": [
      "targetIndexName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1454",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1455",
      "fixed": false,
      "raw": "The name of the index to which this indexer writes data."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1456",
      "fixed": false,
      "raw": "targetIndexName"
     },
     "serializedName": "targetIndexName",
     "modelType": {
      "$id": "1457",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1458",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1459",
     "isReadOnly": false,
     "realPath": [
      "schedule"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1460",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1461",
      "fixed": false,
      "raw": "The schedule for this indexer."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1462",
      "fixed": false,
      "raw": "schedule"
     },
     "serializedName": "schedule",
     "modelType": {
      "$ref": "1352"
     }
    },
    {
     "$id": "1463",
     "isReadOnly": false,
     "realPath": [
      "parameters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1464",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1465",
      "fixed": false,
      "raw": "Parameters for indexer execution."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1466",
      "fixed": false,
      "raw": "parameters"
     },
     "serializedName": "parameters",
     "modelType": {
      "$ref": "1366"
     }
    },
    {
     "$id": "1467",
     "isReadOnly": false,
     "realPath": [
      "fieldMappings"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1468",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1469",
      "fixed": false,
      "raw": "Defines mappings between fields in the data source and corresponding target fields in the index."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1470",
      "fixed": false,
      "raw": "fieldMappings"
     },
     "serializedName": "fieldMappings",
     "modelType": {
      "$id": "1471",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1410"
      },
      "name": {
       "$id": "1472",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "1473",
     "isReadOnly": false,
     "realPath": [
      "outputFieldMappings"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1474",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1475",
      "fixed": false,
      "raw": "Output field mappings are applied after enrichment and immediately before indexing."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1476",
      "fixed": false,
      "raw": "outputFieldMappings"
     },
     "serializedName": "outputFieldMappings",
     "modelType": {
      "$id": "1477",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1410"
      },
      "name": {
       "$id": "1478",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "1479",
     "isReadOnly": false,
     "realPath": [
      "disabled"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1480",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1481",
      "fixed": false,
      "raw": "A value indicating whether the indexer is disabled. Default is false."
     },
     "extensions": {
      "x-ms-client-name": "IsDisabled"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1482",
      "fixed": false,
      "raw": "disabled"
     },
     "serializedName": "disabled",
     "modelType": {
      "$id": "1483",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1484",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1485",
     "isReadOnly": false,
     "realPath": [
      "@odata.etag"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1486",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1487",
      "fixed": false,
      "raw": "The ETag of the indexer."
     },
     "extensions": {
      "x-ms-client-name": "ETag"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1488",
      "fixed": false,
      "raw": "@odata.etag"
     },
     "serializedName": "@odata.etag",
     "modelType": {
      "$id": "1489",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1490",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SearchIndexer",
   "documentation": "Represents an indexer.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Indexer-operations",
   "containsConstantProperties": false,
   "name": {
    "$id": "1491",
    "fixed": false,
    "raw": "SearchIndexer"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchIndexer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchIndexer"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1492",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1493",
     "isReadOnly": true,
     "realPath": [
      "value"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1494",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1495",
      "fixed": false,
      "raw": "The indexers in the Search service."
     },
     "extensions": {
      "x-ms-client-name": "Indexers"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1496",
      "fixed": false,
      "raw": "value"
     },
     "serializedName": "value",
     "modelType": {
      "$id": "1497",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1428"
      },
      "name": {
       "$id": "1498",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "ListIndexersResult",
   "documentation": "Response from a List Indexers request. If successful, it includes the full definitions of all indexers.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1499",
    "fixed": false,
    "raw": "ListIndexersResult"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ListIndexersResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ListIndexersResult"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1500",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1501",
     "isReadOnly": true,
     "realPath": [
      "key"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1502",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1503",
      "fixed": false,
      "raw": "The key of the item for which indexing failed."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1504",
      "fixed": false,
      "raw": "key"
     },
     "serializedName": "key",
     "modelType": {
      "$id": "1505",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1506",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1507",
     "isReadOnly": true,
     "realPath": [
      "errorMessage"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1508",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1509",
      "fixed": false,
      "raw": "The message describing the error that occurred while processing the item."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1510",
      "fixed": false,
      "raw": "errorMessage"
     },
     "serializedName": "errorMessage",
     "modelType": {
      "$id": "1511",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1512",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1513",
     "isReadOnly": true,
     "realPath": [
      "statusCode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1514",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1515",
      "fixed": false,
      "raw": "The status code indicating why the indexing operation failed. Possible values include: 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy."
     },
     "extensions": {
      "x-nullable": false
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1516",
      "fixed": false,
      "raw": "statusCode"
     },
     "serializedName": "statusCode",
     "modelType": {
      "$id": "1517",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "1518",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1519",
     "isReadOnly": true,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1520",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1521",
      "fixed": false,
      "raw": "The name of the source at which the error originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1522",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "1523",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1524",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1525",
     "isReadOnly": true,
     "realPath": [
      "details"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1526",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1527",
      "fixed": false,
      "raw": "Additional, verbose details about the error to assist in debugging the indexer. This may not be always available."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1528",
      "fixed": false,
      "raw": "details"
     },
     "serializedName": "details",
     "modelType": {
      "$id": "1529",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1530",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1531",
     "isReadOnly": true,
     "realPath": [
      "documentationLink"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1532",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1533",
      "fixed": false,
      "raw": "A link to a troubleshooting guide for these classes of errors. This may not be always available."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1534",
      "fixed": false,
      "raw": "documentationLink"
     },
     "serializedName": "documentationLink",
     "modelType": {
      "$id": "1535",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1536",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SearchIndexerError",
   "documentation": "Represents an item- or document-level indexing error.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1537",
    "fixed": false,
    "raw": "SearchIndexerError"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchIndexerError",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchIndexerError"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1538",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1539",
     "isReadOnly": true,
     "realPath": [
      "key"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1540",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1541",
      "fixed": false,
      "raw": "The key of the item which generated a warning."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1542",
      "fixed": false,
      "raw": "key"
     },
     "serializedName": "key",
     "modelType": {
      "$id": "1543",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1544",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1545",
     "isReadOnly": true,
     "realPath": [
      "message"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1546",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1547",
      "fixed": false,
      "raw": "The message describing the warning that occurred while processing the item."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1548",
      "fixed": false,
      "raw": "message"
     },
     "serializedName": "message",
     "modelType": {
      "$id": "1549",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1550",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1551",
     "isReadOnly": true,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1552",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1553",
      "fixed": false,
      "raw": "The name of the source at which the warning originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1554",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "1555",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1556",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1557",
     "isReadOnly": true,
     "realPath": [
      "details"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1558",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1559",
      "fixed": false,
      "raw": "Additional, verbose details about the warning to assist in debugging the indexer. This may not be always available."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1560",
      "fixed": false,
      "raw": "details"
     },
     "serializedName": "details",
     "modelType": {
      "$id": "1561",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1562",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1563",
     "isReadOnly": true,
     "realPath": [
      "documentationLink"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1564",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1565",
      "fixed": false,
      "raw": "A link to a troubleshooting guide for these classes of warnings. This may not be always available."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1566",
      "fixed": false,
      "raw": "documentationLink"
     },
     "serializedName": "documentationLink",
     "modelType": {
      "$id": "1567",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1568",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SearchIndexerWarning",
   "documentation": "Represents an item-level warning.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1569",
    "fixed": false,
    "raw": "SearchIndexerWarning"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchIndexerWarning",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchIndexerWarning"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1570",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1571",
     "isReadOnly": true,
     "realPath": [
      "status"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1572",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1573",
      "fixed": false,
      "raw": "The outcome of this indexer execution."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "IndexerExecutionStatus",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/IndexerExecutionStatus"
       ]
      },
      "x-ms-enum": {
       "name": "IndexerExecutionStatus",
       "modelAsString": false,
       "values": [
        {
         "value": "transientFailure",
         "name": "TransientFailure",
         "description": "An indexer invocation has failed, but the failure may be transient. Indexer invocations will continue per schedule."
        },
        {
         "value": "success",
         "name": "Success",
         "description": "Indexer execution completed successfully."
        },
        {
         "value": "inProgress",
         "name": "InProgress",
         "description": "Indexer execution is in progress."
        },
        {
         "value": "reset",
         "name": "Reset",
         "description": "Indexer has been reset."
        }
       ]
      },
      "x-nullable": false
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1574",
      "fixed": false,
      "raw": "status"
     },
     "serializedName": "status",
     "modelType": {
      "$id": "1575",
      "$type": "EnumType",
      "values": [
       {
        "$id": "1576",
        "description": "An indexer invocation has failed, but the failure may be transient. Indexer invocations will continue per schedule.",
        "name": "TransientFailure",
        "serializedName": "transientFailure"
       },
       {
        "$id": "1577",
        "description": "Indexer execution completed successfully.",
        "name": "Success",
        "serializedName": "success"
       },
       {
        "$id": "1578",
        "description": "Indexer execution is in progress.",
        "name": "InProgress",
        "serializedName": "inProgress"
       },
       {
        "$id": "1579",
        "description": "Indexer has been reset.",
        "name": "Reset",
        "serializedName": "reset"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "1580",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1581",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1582",
       "fixed": false,
       "raw": "IndexerExecutionStatus"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1583",
     "isReadOnly": true,
     "realPath": [
      "errorMessage"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1584",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1585",
      "fixed": false,
      "raw": "The error message indicating the top-level error, if any."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1586",
      "fixed": false,
      "raw": "errorMessage"
     },
     "serializedName": "errorMessage",
     "modelType": {
      "$id": "1587",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1588",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1589",
     "isReadOnly": true,
     "realPath": [
      "startTime"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1590",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1591",
      "fixed": false,
      "raw": "The start time of this indexer execution."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1592",
      "fixed": false,
      "raw": "startTime"
     },
     "serializedName": "startTime",
     "modelType": {
      "$id": "1593",
      "$type": "PrimaryType",
      "format": "date-time",
      "knownPrimaryType": "dateTime",
      "name": {
       "$id": "1594",
       "fixed": false,
       "raw": "DateTime"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1595",
     "isReadOnly": true,
     "realPath": [
      "endTime"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1596",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1597",
      "fixed": false,
      "raw": "The end time of this indexer execution, if the execution has already completed."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1598",
      "fixed": false,
      "raw": "endTime"
     },
     "serializedName": "endTime",
     "modelType": {
      "$id": "1599",
      "$type": "PrimaryType",
      "format": "date-time",
      "knownPrimaryType": "dateTime",
      "name": {
       "$id": "1600",
       "fixed": false,
       "raw": "DateTime"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1601",
     "isReadOnly": true,
     "realPath": [
      "errors"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1602",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1603",
      "fixed": false,
      "raw": "The item-level indexing errors."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1604",
      "fixed": false,
      "raw": "errors"
     },
     "serializedName": "errors",
     "modelType": {
      "$id": "1605",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1500"
      },
      "name": {
       "$id": "1606",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "1607",
     "isReadOnly": true,
     "realPath": [
      "warnings"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1608",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1609",
      "fixed": false,
      "raw": "The item-level indexing warnings."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1610",
      "fixed": false,
      "raw": "warnings"
     },
     "serializedName": "warnings",
     "modelType": {
      "$id": "1611",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1538"
      },
      "name": {
       "$id": "1612",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "1613",
     "isReadOnly": true,
     "realPath": [
      "itemsProcessed"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1614",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1615",
      "fixed": false,
      "raw": "The number of items that were processed during this indexer execution. This includes both successfully processed items and items where indexing was attempted but failed."
     },
     "extensions": {
      "x-ms-client-name": "ItemCount",
      "x-nullable": false
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1616",
      "fixed": false,
      "raw": "itemsProcessed"
     },
     "serializedName": "itemsProcessed",
     "modelType": {
      "$id": "1617",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "1618",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1619",
     "isReadOnly": true,
     "realPath": [
      "itemsFailed"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1620",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1621",
      "fixed": false,
      "raw": "The number of items that failed to be indexed during this indexer execution."
     },
     "extensions": {
      "x-ms-client-name": "FailedItemCount",
      "x-nullable": false
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1622",
      "fixed": false,
      "raw": "itemsFailed"
     },
     "serializedName": "itemsFailed",
     "modelType": {
      "$id": "1623",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "1624",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1625",
     "isReadOnly": true,
     "realPath": [
      "initialTrackingState"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1626",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1627",
      "fixed": false,
      "raw": "Change tracking state with which an indexer execution started."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1628",
      "fixed": false,
      "raw": "initialTrackingState"
     },
     "serializedName": "initialTrackingState",
     "modelType": {
      "$id": "1629",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1630",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1631",
     "isReadOnly": true,
     "realPath": [
      "finalTrackingState"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1632",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1633",
      "fixed": false,
      "raw": "Change tracking state with which an indexer execution finished."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1634",
      "fixed": false,
      "raw": "finalTrackingState"
     },
     "serializedName": "finalTrackingState",
     "modelType": {
      "$id": "1635",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1636",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "IndexerExecutionResult",
   "documentation": "Represents the result of an individual indexer execution.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1637",
    "fixed": false,
    "raw": "IndexerExecutionResult"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "IndexerExecutionResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/IndexerExecutionResult"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1638",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1639",
     "isReadOnly": true,
     "realPath": [
      "maxRunTime"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1640",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1641",
      "fixed": false,
      "raw": "The maximum duration that the indexer is permitted to run for one execution."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1642",
      "fixed": false,
      "raw": "maxRunTime"
     },
     "serializedName": "maxRunTime",
     "modelType": {
      "$id": "1643",
      "$type": "PrimaryType",
      "format": "duration",
      "knownPrimaryType": "timeSpan",
      "name": {
       "$id": "1644",
       "fixed": false,
       "raw": "TimeSpan"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1645",
     "isReadOnly": true,
     "realPath": [
      "maxDocumentExtractionSize"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1646",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1647",
      "fixed": false,
      "raw": "The maximum size of a document, in bytes, which will be considered valid for indexing."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1648",
      "fixed": false,
      "raw": "maxDocumentExtractionSize"
     },
     "serializedName": "maxDocumentExtractionSize",
     "modelType": {
      "$id": "1649",
      "$type": "PrimaryType",
      "format": "int64",
      "knownPrimaryType": "double",
      "name": {
       "$id": "1650",
       "fixed": false,
       "raw": "Double"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1651",
     "isReadOnly": true,
     "realPath": [
      "maxDocumentContentCharactersToExtract"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1652",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1653",
      "fixed": false,
      "raw": "The maximum number of characters that will be extracted from a document picked up for indexing."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1654",
      "fixed": false,
      "raw": "maxDocumentContentCharactersToExtract"
     },
     "serializedName": "maxDocumentContentCharactersToExtract",
     "modelType": {
      "$id": "1655",
      "$type": "PrimaryType",
      "format": "int64",
      "knownPrimaryType": "double",
      "name": {
       "$id": "1656",
       "fixed": false,
       "raw": "Double"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SearchIndexerLimits",
   "containsConstantProperties": false,
   "name": {
    "$id": "1657",
    "fixed": false,
    "raw": "SearchIndexerLimits"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchIndexerLimits",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchIndexerLimits"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1658",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1659",
     "isReadOnly": true,
     "realPath": [
      "status"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1660",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1661",
      "fixed": false,
      "raw": "Overall indexer status."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "IndexerStatus",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/IndexerStatus"
       ]
      },
      "x-ms-enum": {
       "name": "IndexerStatus",
       "modelAsString": false,
       "values": [
        {
         "value": "unknown",
         "name": "Unknown",
         "description": "Indicates that the indexer is in an unknown state."
        },
        {
         "value": "error",
         "name": "Error",
         "description": "Indicates that the indexer experienced an error that cannot be corrected without human intervention."
        },
        {
         "value": "running",
         "name": "Running",
         "description": "Indicates that the indexer is running normally."
        }
       ]
      },
      "x-nullable": false
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1662",
      "fixed": false,
      "raw": "status"
     },
     "serializedName": "status",
     "modelType": {
      "$id": "1663",
      "$type": "EnumType",
      "values": [
       {
        "$id": "1664",
        "description": "Indicates that the indexer is in an unknown state.",
        "name": "Unknown",
        "serializedName": "unknown"
       },
       {
        "$id": "1665",
        "description": "Indicates that the indexer experienced an error that cannot be corrected without human intervention.",
        "name": "Error",
        "serializedName": "error"
       },
       {
        "$id": "1666",
        "description": "Indicates that the indexer is running normally.",
        "name": "Running",
        "serializedName": "running"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "1667",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1668",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1669",
       "fixed": false,
       "raw": "IndexerStatus"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1670",
     "isReadOnly": true,
     "realPath": [
      "lastResult"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1671",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1672",
      "fixed": false,
      "raw": "The result of the most recent or an in-progress indexer execution."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1673",
      "fixed": false,
      "raw": "lastResult"
     },
     "serializedName": "lastResult",
     "modelType": {
      "$ref": "1570"
     }
    },
    {
     "$id": "1674",
     "isReadOnly": true,
     "realPath": [
      "executionHistory"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1675",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1676",
      "fixed": false,
      "raw": "History of the recent indexer executions, sorted in reverse chronological order."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1677",
      "fixed": false,
      "raw": "executionHistory"
     },
     "serializedName": "executionHistory",
     "modelType": {
      "$id": "1678",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1570"
      },
      "name": {
       "$id": "1679",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "1680",
     "isReadOnly": true,
     "realPath": [
      "limits"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1681",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1682",
      "fixed": false,
      "raw": "The execution limits for the indexer."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1683",
      "fixed": false,
      "raw": "limits"
     },
     "serializedName": "limits",
     "modelType": {
      "$ref": "1638"
     }
    }
   ],
   "serializedName": "SearchIndexerStatus",
   "documentation": "Represents the current status and execution history of an indexer.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1684",
    "fixed": false,
    "raw": "SearchIndexerStatus"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchIndexerStatus",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchIndexerStatus"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1685",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1686",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1687",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1688",
      "fixed": false,
      "raw": "The name of the field, which must be unique within the fields collection of the index or parent field."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1689",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "1690",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1691",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1692",
     "isReadOnly": false,
     "realPath": [
      "type"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1693",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1694",
      "fixed": false,
      "raw": "The data type of the field."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "SearchFieldDataType",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchFieldDataType"
       ]
      },
      "x-ms-enum": {
       "name": "SearchFieldDataType",
       "modelAsString": true,
       "values": [
        {
         "value": "Edm.String",
         "name": "String",
         "description": "Indicates that a field contains a string."
        },
        {
         "value": "Edm.Int32",
         "name": "Int32",
         "description": "Indicates that a field contains a 32-bit signed integer."
        },
        {
         "value": "Edm.Int64",
         "name": "Int64",
         "description": "Indicates that a field contains a 64-bit signed integer."
        },
        {
         "value": "Edm.Double",
         "name": "Double",
         "description": "Indicates that a field contains an IEEE double-precision floating point number."
        },
        {
         "value": "Edm.Boolean",
         "name": "Boolean",
         "description": "Indicates that a field contains a Boolean value (true or false)."
        },
        {
         "value": "Edm.DateTimeOffset",
         "name": "DateTimeOffset",
         "description": "Indicates that a field contains a date/time value, including timezone information."
        },
        {
         "value": "Edm.GeographyPoint",
         "name": "GeographyPoint",
         "description": "Indicates that a field contains a geo-location in terms of longitude and latitude."
        },
        {
         "value": "Edm.ComplexType",
         "name": "Complex",
         "description": "Indicates that a field contains one or more complex objects that in turn have sub-fields of other types."
        }
       ]
      }
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1695",
      "fixed": false,
      "raw": "type"
     },
     "serializedName": "type",
     "modelType": {
      "$id": "1696",
      "$type": "EnumType",
      "values": [
       {
        "$id": "1697",
        "description": "Indicates that a field contains a string.",
        "name": "String",
        "serializedName": "Edm.String"
       },
       {
        "$id": "1698",
        "description": "Indicates that a field contains a 32-bit signed integer.",
        "name": "Int32",
        "serializedName": "Edm.Int32"
       },
       {
        "$id": "1699",
        "description": "Indicates that a field contains a 64-bit signed integer.",
        "name": "Int64",
        "serializedName": "Edm.Int64"
       },
       {
        "$id": "1700",
        "description": "Indicates that a field contains an IEEE double-precision floating point number.",
        "name": "Double",
        "serializedName": "Edm.Double"
       },
       {
        "$id": "1701",
        "description": "Indicates that a field contains a Boolean value (true or false).",
        "name": "Boolean",
        "serializedName": "Edm.Boolean"
       },
       {
        "$id": "1702",
        "description": "Indicates that a field contains a date/time value, including timezone information.",
        "name": "DateTimeOffset",
        "serializedName": "Edm.DateTimeOffset"
       },
       {
        "$id": "1703",
        "description": "Indicates that a field contains a geo-location in terms of longitude and latitude.",
        "name": "GeographyPoint",
        "serializedName": "Edm.GeographyPoint"
       },
       {
        "$id": "1704",
        "description": "Indicates that a field contains one or more complex objects that in turn have sub-fields of other types.",
        "name": "Complex",
        "serializedName": "Edm.ComplexType"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "1705",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1706",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1707",
       "fixed": false,
       "raw": "SearchFieldDataType"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1708",
     "isReadOnly": false,
     "realPath": [
      "key"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1709",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1710",
      "fixed": false,
      "raw": "A value indicating whether the field uniquely identifies documents in the index. Exactly one top-level field in each index must be chosen as the key field and it must be of type Edm.String. Key fields can be used to look up documents directly and update or delete specific documents. Default is false for simple fields and null for complex fields."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1711",
      "fixed": false,
      "raw": "key"
     },
     "serializedName": "key",
     "modelType": {
      "$id": "1712",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1713",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1714",
     "isReadOnly": false,
     "realPath": [
      "retrievable"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1715",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1716",
      "fixed": false,
      "raw": "A value indicating whether the field can be returned in a search result. You can disable this option if you want to use a field (for example, margin) as a filter, sorting, or scoring mechanism but do not want the field to be visible to the end user. This property must be true for key fields, and it must be null for complex fields. This property can be changed on existing fields. Enabling this property does not cause any increase in index storage requirements. Default is true for simple fields and null for complex fields."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1717",
      "fixed": false,
      "raw": "retrievable"
     },
     "serializedName": "retrievable",
     "modelType": {
      "$id": "1718",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1719",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1720",
     "isReadOnly": false,
     "realPath": [
      "searchable"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1721",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1722",
      "fixed": false,
      "raw": "A value indicating whether the field is full-text searchable. This means it will undergo analysis such as word-breaking during indexing. If you set a searchable field to a value like \"sunny day\", internally it will be split into the individual tokens \"sunny\" and \"day\". This enables full-text searches for these terms. Fields of type Edm.String or Collection(Edm.String) are searchable by default. This property must be false for simple fields of other non-string data types, and it must be null for complex fields. Note: searchable fields consume extra space in your index since Azure Cognitive Search will store an additional tokenized version of the field value for full-text searches. If you want to save space in your index and you don't need a field to be included in searches, set searchable to false."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1723",
      "fixed": false,
      "raw": "searchable"
     },
     "serializedName": "searchable",
     "modelType": {
      "$id": "1724",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1725",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1726",
     "isReadOnly": false,
     "realPath": [
      "filterable"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1727",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1728",
      "fixed": false,
      "raw": "A value indicating whether to enable the field to be referenced in $filter queries. filterable differs from searchable in how strings are handled. Fields of type Edm.String or Collection(Edm.String) that are filterable do not undergo word-breaking, so comparisons are for exact matches only. For example, if you set such a field f to \"sunny day\", $filter=f eq 'sunny' will find no matches, but $filter=f eq 'sunny day' will. This property must be null for complex fields. Default is true for simple fields and null for complex fields."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1729",
      "fixed": false,
      "raw": "filterable"
     },
     "serializedName": "filterable",
     "modelType": {
      "$id": "1730",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1731",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1732",
     "isReadOnly": false,
     "realPath": [
      "sortable"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1733",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1734",
      "fixed": false,
      "raw": "A value indicating whether to enable the field to be referenced in $orderby expressions. By default Azure Cognitive Search sorts results by score, but in many experiences users will want to sort by fields in the documents. A simple field can be sortable only if it is single-valued (it has a single value in the scope of the parent document). Simple collection fields cannot be sortable, since they are multi-valued. Simple sub-fields of complex collections are also multi-valued, and therefore cannot be sortable. This is true whether it's an immediate parent field, or an ancestor field, that's the complex collection. Complex fields cannot be sortable and the sortable property must be null for such fields. The default for sortable is true for single-valued simple fields, false for multi-valued simple fields, and null for complex fields."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1735",
      "fixed": false,
      "raw": "sortable"
     },
     "serializedName": "sortable",
     "modelType": {
      "$id": "1736",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1737",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1738",
     "isReadOnly": false,
     "realPath": [
      "facetable"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1739",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1740",
      "fixed": false,
      "raw": "A value indicating whether to enable the field to be referenced in facet queries. Typically used in a presentation of search results that includes hit count by category (for example, search for digital cameras and see hits by brand, by megapixels, by price, and so on). This property must be null for complex fields. Fields of type Edm.GeographyPoint or Collection(Edm.GeographyPoint) cannot be facetable. Default is true for all other simple fields."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1741",
      "fixed": false,
      "raw": "facetable"
     },
     "serializedName": "facetable",
     "modelType": {
      "$id": "1742",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1743",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1744",
     "isReadOnly": false,
     "realPath": [
      "analyzer"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1745",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1746",
      "fixed": false,
      "raw": "The name of the analyzer to use for the field. This option can be used only with searchable fields and it can't be set together with either searchAnalyzer or indexAnalyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "LexicalAnalyzerName",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LexicalAnalyzerName"
       ]
      },
      "x-ms-enum": {
       "name": "LexicalAnalyzerName",
       "modelAsString": true,
       "values": [
        {
         "value": "ar.microsoft",
         "name": "ArMicrosoft",
         "description": "Microsoft analyzer for Arabic."
        },
        {
         "value": "ar.lucene",
         "name": "ArLucene",
         "description": "Lucene analyzer for Arabic."
        },
        {
         "value": "hy.lucene",
         "name": "HyLucene",
         "description": "Lucene analyzer for Armenian."
        },
        {
         "value": "bn.microsoft",
         "name": "BnMicrosoft",
         "description": "Microsoft analyzer for Bangla."
        },
        {
         "value": "eu.lucene",
         "name": "EuLucene",
         "description": "Lucene analyzer for Basque."
        },
        {
         "value": "bg.microsoft",
         "name": "BgMicrosoft",
         "description": "Microsoft analyzer for Bulgarian."
        },
        {
         "value": "bg.lucene",
         "name": "BgLucene",
         "description": "Lucene analyzer for Bulgarian."
        },
        {
         "value": "ca.microsoft",
         "name": "CaMicrosoft",
         "description": "Microsoft analyzer for Catalan."
        },
        {
         "value": "ca.lucene",
         "name": "CaLucene",
         "description": "Lucene analyzer for Catalan."
        },
        {
         "value": "zh-Hans.microsoft",
         "name": "ZhHansMicrosoft",
         "description": "Microsoft analyzer for Chinese (Simplified)."
        },
        {
         "value": "zh-Hans.lucene",
         "name": "ZhHansLucene",
         "description": "Lucene analyzer for Chinese (Simplified)."
        },
        {
         "value": "zh-Hant.microsoft",
         "name": "ZhHantMicrosoft",
         "description": "Microsoft analyzer for Chinese (Traditional)."
        },
        {
         "value": "zh-Hant.lucene",
         "name": "ZhHantLucene",
         "description": "Lucene analyzer for Chinese (Traditional)."
        },
        {
         "value": "hr.microsoft",
         "name": "HrMicrosoft",
         "description": "Microsoft analyzer for Croatian."
        },
        {
         "value": "cs.microsoft",
         "name": "CsMicrosoft",
         "description": "Microsoft analyzer for Czech."
        },
        {
         "value": "cs.lucene",
         "name": "CsLucene",
         "description": "Lucene analyzer for Czech."
        },
        {
         "value": "da.microsoft",
         "name": "DaMicrosoft",
         "description": "Microsoft analyzer for Danish."
        },
        {
         "value": "da.lucene",
         "name": "DaLucene",
         "description": "Lucene analyzer for Danish."
        },
        {
         "value": "nl.microsoft",
         "name": "NlMicrosoft",
         "description": "Microsoft analyzer for Dutch."
        },
        {
         "value": "nl.lucene",
         "name": "NlLucene",
         "description": "Lucene analyzer for Dutch."
        },
        {
         "value": "en.microsoft",
         "name": "EnMicrosoft",
         "description": "Microsoft analyzer for English."
        },
        {
         "value": "en.lucene",
         "name": "EnLucene",
         "description": "Lucene analyzer for English."
        },
        {
         "value": "et.microsoft",
         "name": "EtMicrosoft",
         "description": "Microsoft analyzer for Estonian."
        },
        {
         "value": "fi.microsoft",
         "name": "FiMicrosoft",
         "description": "Microsoft analyzer for Finnish."
        },
        {
         "value": "fi.lucene",
         "name": "FiLucene",
         "description": "Lucene analyzer for Finnish."
        },
        {
         "value": "fr.microsoft",
         "name": "FrMicrosoft",
         "description": "Microsoft analyzer for French."
        },
        {
         "value": "fr.lucene",
         "name": "FrLucene",
         "description": "Lucene analyzer for French."
        },
        {
         "value": "gl.lucene",
         "name": "GlLucene",
         "description": "Lucene analyzer for Galician."
        },
        {
         "value": "de.microsoft",
         "name": "DeMicrosoft",
         "description": "Microsoft analyzer for German."
        },
        {
         "value": "de.lucene",
         "name": "DeLucene",
         "description": "Lucene analyzer for German."
        },
        {
         "value": "el.microsoft",
         "name": "ElMicrosoft",
         "description": "Microsoft analyzer for Greek."
        },
        {
         "value": "el.lucene",
         "name": "ElLucene",
         "description": "Lucene analyzer for Greek."
        },
        {
         "value": "gu.microsoft",
         "name": "GuMicrosoft",
         "description": "Microsoft analyzer for Gujarati."
        },
        {
         "value": "he.microsoft",
         "name": "HeMicrosoft",
         "description": "Microsoft analyzer for Hebrew."
        },
        {
         "value": "hi.microsoft",
         "name": "HiMicrosoft",
         "description": "Microsoft analyzer for Hindi."
        },
        {
         "value": "hi.lucene",
         "name": "HiLucene",
         "description": "Lucene analyzer for Hindi."
        },
        {
         "value": "hu.microsoft",
         "name": "HuMicrosoft",
         "description": "Microsoft analyzer for Hungarian."
        },
        {
         "value": "hu.lucene",
         "name": "HuLucene",
         "description": "Lucene analyzer for Hungarian."
        },
        {
         "value": "is.microsoft",
         "name": "IsMicrosoft",
         "description": "Microsoft analyzer for Icelandic."
        },
        {
         "value": "id.microsoft",
         "name": "IdMicrosoft",
         "description": "Microsoft analyzer for Indonesian (Bahasa)."
        },
        {
         "value": "id.lucene",
         "name": "IdLucene",
         "description": "Lucene analyzer for Indonesian."
        },
        {
         "value": "ga.lucene",
         "name": "GaLucene",
         "description": "Lucene analyzer for Irish."
        },
        {
         "value": "it.microsoft",
         "name": "ItMicrosoft",
         "description": "Microsoft analyzer for Italian."
        },
        {
         "value": "it.lucene",
         "name": "ItLucene",
         "description": "Lucene analyzer for Italian."
        },
        {
         "value": "ja.microsoft",
         "name": "JaMicrosoft",
         "description": "Microsoft analyzer for Japanese."
        },
        {
         "value": "ja.lucene",
         "name": "JaLucene",
         "description": "Lucene analyzer for Japanese."
        },
        {
         "value": "kn.microsoft",
         "name": "KnMicrosoft",
         "description": "Microsoft analyzer for Kannada."
        },
        {
         "value": "ko.microsoft",
         "name": "KoMicrosoft",
         "description": "Microsoft analyzer for Korean."
        },
        {
         "value": "ko.lucene",
         "name": "KoLucene",
         "description": "Lucene analyzer for Korean."
        },
        {
         "value": "lv.microsoft",
         "name": "LvMicrosoft",
         "description": "Microsoft analyzer for Latvian."
        },
        {
         "value": "lv.lucene",
         "name": "LvLucene",
         "description": "Lucene analyzer for Latvian."
        },
        {
         "value": "lt.microsoft",
         "name": "LtMicrosoft",
         "description": "Microsoft analyzer for Lithuanian."
        },
        {
         "value": "ml.microsoft",
         "name": "MlMicrosoft",
         "description": "Microsoft analyzer for Malayalam."
        },
        {
         "value": "ms.microsoft",
         "name": "MsMicrosoft",
         "description": "Microsoft analyzer for Malay (Latin)."
        },
        {
         "value": "mr.microsoft",
         "name": "MrMicrosoft",
         "description": "Microsoft analyzer for Marathi."
        },
        {
         "value": "nb.microsoft",
         "name": "NbMicrosoft",
         "description": "Microsoft analyzer for Norwegian (Bokm√•l)."
        },
        {
         "value": "no.lucene",
         "name": "NoLucene",
         "description": "Lucene analyzer for Norwegian."
        },
        {
         "value": "fa.lucene",
         "name": "FaLucene",
         "description": "Lucene analyzer for Persian."
        },
        {
         "value": "pl.microsoft",
         "name": "PlMicrosoft",
         "description": "Microsoft analyzer for Polish."
        },
        {
         "value": "pl.lucene",
         "name": "PlLucene",
         "description": "Lucene analyzer for Polish."
        },
        {
         "value": "pt-BR.microsoft",
         "name": "PtBrMicrosoft",
         "description": "Microsoft analyzer for Portuguese (Brazil)."
        },
        {
         "value": "pt-BR.lucene",
         "name": "PtBrLucene",
         "description": "Lucene analyzer for Portuguese (Brazil)."
        },
        {
         "value": "pt-PT.microsoft",
         "name": "PtPtMicrosoft",
         "description": "Microsoft analyzer for Portuguese (Portugal)."
        },
        {
         "value": "pt-PT.lucene",
         "name": "PtPtLucene",
         "description": "Lucene analyzer for Portuguese (Portugal)."
        },
        {
         "value": "pa.microsoft",
         "name": "PaMicrosoft",
         "description": "Microsoft analyzer for Punjabi."
        },
        {
         "value": "ro.microsoft",
         "name": "RoMicrosoft",
         "description": "Microsoft analyzer for Romanian."
        },
        {
         "value": "ro.lucene",
         "name": "RoLucene",
         "description": "Lucene analyzer for Romanian."
        },
        {
         "value": "ru.microsoft",
         "name": "RuMicrosoft",
         "description": "Microsoft analyzer for Russian."
        },
        {
         "value": "ru.lucene",
         "name": "RuLucene",
         "description": "Lucene analyzer for Russian."
        },
        {
         "value": "sr-cyrillic.microsoft",
         "name": "SrCyrillicMicrosoft",
         "description": "Microsoft analyzer for Serbian (Cyrillic)."
        },
        {
         "value": "sr-latin.microsoft",
         "name": "SrLatinMicrosoft",
         "description": "Microsoft analyzer for Serbian (Latin)."
        },
        {
         "value": "sk.microsoft",
         "name": "SkMicrosoft",
         "description": "Microsoft analyzer for Slovak."
        },
        {
         "value": "sl.microsoft",
         "name": "SlMicrosoft",
         "description": "Microsoft analyzer for Slovenian."
        },
        {
         "value": "es.microsoft",
         "name": "EsMicrosoft",
         "description": "Microsoft analyzer for Spanish."
        },
        {
         "value": "es.lucene",
         "name": "EsLucene",
         "description": "Lucene analyzer for Spanish."
        },
        {
         "value": "sv.microsoft",
         "name": "SvMicrosoft",
         "description": "Microsoft analyzer for Swedish."
        },
        {
         "value": "sv.lucene",
         "name": "SvLucene",
         "description": "Lucene analyzer for Swedish."
        },
        {
         "value": "ta.microsoft",
         "name": "TaMicrosoft",
         "description": "Microsoft analyzer for Tamil."
        },
        {
         "value": "te.microsoft",
         "name": "TeMicrosoft",
         "description": "Microsoft analyzer for Telugu."
        },
        {
         "value": "th.microsoft",
         "name": "ThMicrosoft",
         "description": "Microsoft analyzer for Thai."
        },
        {
         "value": "th.lucene",
         "name": "ThLucene",
         "description": "Lucene analyzer for Thai."
        },
        {
         "value": "tr.microsoft",
         "name": "TrMicrosoft",
         "description": "Microsoft analyzer for Turkish."
        },
        {
         "value": "tr.lucene",
         "name": "TrLucene",
         "description": "Lucene analyzer for Turkish."
        },
        {
         "value": "uk.microsoft",
         "name": "UkMicrosoft",
         "description": "Microsoft analyzer for Ukrainian."
        },
        {
         "value": "ur.microsoft",
         "name": "UrMicrosoft",
         "description": "Microsoft analyzer for Urdu."
        },
        {
         "value": "vi.microsoft",
         "name": "ViMicrosoft",
         "description": "Microsoft analyzer for Vietnamese."
        },
        {
         "value": "standard.lucene",
         "name": "StandardLucene",
         "description": "Standard Lucene analyzer."
        },
        {
         "value": "standardasciifolding.lucene",
         "name": "StandardAsciiFoldingLucene",
         "description": "Standard ASCII Folding Lucene analyzer. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#Analyzers"
        },
        {
         "value": "keyword",
         "name": "Keyword",
         "description": "Treats the entire content of a field as a single token. This is useful for data like zip codes, ids, and some product names. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordAnalyzer.html"
        },
        {
         "value": "pattern",
         "name": "Pattern",
         "description": "Flexibly separates text into terms via a regular expression pattern. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.html"
        },
        {
         "value": "simple",
         "name": "Simple",
         "description": "Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/SimpleAnalyzer.html"
        },
        {
         "value": "stop",
         "name": "Stop",
         "description": "Divides text at non-letters; Applies the lowercase and stopword token filters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopAnalyzer.html"
        },
        {
         "value": "whitespace",
         "name": "Whitespace",
         "description": "An analyzer that uses the whitespace tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceAnalyzer.html"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1747",
      "fixed": false,
      "raw": "analyzer"
     },
     "serializedName": "analyzer",
     "modelType": {
      "$ref": "13"
     }
    },
    {
     "$id": "1748",
     "isReadOnly": false,
     "realPath": [
      "searchAnalyzer"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1749",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1750",
      "fixed": false,
      "raw": "The name of the analyzer used at search time for the field. This option can be used only with searchable fields. It must be set together with indexAnalyzer and it cannot be set together with the analyzer option. This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. This analyzer can be updated on an existing field. Must be null for complex fields."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "LexicalAnalyzerName",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LexicalAnalyzerName"
       ]
      },
      "x-ms-enum": {
       "name": "LexicalAnalyzerName",
       "modelAsString": true,
       "values": [
        {
         "value": "ar.microsoft",
         "name": "ArMicrosoft",
         "description": "Microsoft analyzer for Arabic."
        },
        {
         "value": "ar.lucene",
         "name": "ArLucene",
         "description": "Lucene analyzer for Arabic."
        },
        {
         "value": "hy.lucene",
         "name": "HyLucene",
         "description": "Lucene analyzer for Armenian."
        },
        {
         "value": "bn.microsoft",
         "name": "BnMicrosoft",
         "description": "Microsoft analyzer for Bangla."
        },
        {
         "value": "eu.lucene",
         "name": "EuLucene",
         "description": "Lucene analyzer for Basque."
        },
        {
         "value": "bg.microsoft",
         "name": "BgMicrosoft",
         "description": "Microsoft analyzer for Bulgarian."
        },
        {
         "value": "bg.lucene",
         "name": "BgLucene",
         "description": "Lucene analyzer for Bulgarian."
        },
        {
         "value": "ca.microsoft",
         "name": "CaMicrosoft",
         "description": "Microsoft analyzer for Catalan."
        },
        {
         "value": "ca.lucene",
         "name": "CaLucene",
         "description": "Lucene analyzer for Catalan."
        },
        {
         "value": "zh-Hans.microsoft",
         "name": "ZhHansMicrosoft",
         "description": "Microsoft analyzer for Chinese (Simplified)."
        },
        {
         "value": "zh-Hans.lucene",
         "name": "ZhHansLucene",
         "description": "Lucene analyzer for Chinese (Simplified)."
        },
        {
         "value": "zh-Hant.microsoft",
         "name": "ZhHantMicrosoft",
         "description": "Microsoft analyzer for Chinese (Traditional)."
        },
        {
         "value": "zh-Hant.lucene",
         "name": "ZhHantLucene",
         "description": "Lucene analyzer for Chinese (Traditional)."
        },
        {
         "value": "hr.microsoft",
         "name": "HrMicrosoft",
         "description": "Microsoft analyzer for Croatian."
        },
        {
         "value": "cs.microsoft",
         "name": "CsMicrosoft",
         "description": "Microsoft analyzer for Czech."
        },
        {
         "value": "cs.lucene",
         "name": "CsLucene",
         "description": "Lucene analyzer for Czech."
        },
        {
         "value": "da.microsoft",
         "name": "DaMicrosoft",
         "description": "Microsoft analyzer for Danish."
        },
        {
         "value": "da.lucene",
         "name": "DaLucene",
         "description": "Lucene analyzer for Danish."
        },
        {
         "value": "nl.microsoft",
         "name": "NlMicrosoft",
         "description": "Microsoft analyzer for Dutch."
        },
        {
         "value": "nl.lucene",
         "name": "NlLucene",
         "description": "Lucene analyzer for Dutch."
        },
        {
         "value": "en.microsoft",
         "name": "EnMicrosoft",
         "description": "Microsoft analyzer for English."
        },
        {
         "value": "en.lucene",
         "name": "EnLucene",
         "description": "Lucene analyzer for English."
        },
        {
         "value": "et.microsoft",
         "name": "EtMicrosoft",
         "description": "Microsoft analyzer for Estonian."
        },
        {
         "value": "fi.microsoft",
         "name": "FiMicrosoft",
         "description": "Microsoft analyzer for Finnish."
        },
        {
         "value": "fi.lucene",
         "name": "FiLucene",
         "description": "Lucene analyzer for Finnish."
        },
        {
         "value": "fr.microsoft",
         "name": "FrMicrosoft",
         "description": "Microsoft analyzer for French."
        },
        {
         "value": "fr.lucene",
         "name": "FrLucene",
         "description": "Lucene analyzer for French."
        },
        {
         "value": "gl.lucene",
         "name": "GlLucene",
         "description": "Lucene analyzer for Galician."
        },
        {
         "value": "de.microsoft",
         "name": "DeMicrosoft",
         "description": "Microsoft analyzer for German."
        },
        {
         "value": "de.lucene",
         "name": "DeLucene",
         "description": "Lucene analyzer for German."
        },
        {
         "value": "el.microsoft",
         "name": "ElMicrosoft",
         "description": "Microsoft analyzer for Greek."
        },
        {
         "value": "el.lucene",
         "name": "ElLucene",
         "description": "Lucene analyzer for Greek."
        },
        {
         "value": "gu.microsoft",
         "name": "GuMicrosoft",
         "description": "Microsoft analyzer for Gujarati."
        },
        {
         "value": "he.microsoft",
         "name": "HeMicrosoft",
         "description": "Microsoft analyzer for Hebrew."
        },
        {
         "value": "hi.microsoft",
         "name": "HiMicrosoft",
         "description": "Microsoft analyzer for Hindi."
        },
        {
         "value": "hi.lucene",
         "name": "HiLucene",
         "description": "Lucene analyzer for Hindi."
        },
        {
         "value": "hu.microsoft",
         "name": "HuMicrosoft",
         "description": "Microsoft analyzer for Hungarian."
        },
        {
         "value": "hu.lucene",
         "name": "HuLucene",
         "description": "Lucene analyzer for Hungarian."
        },
        {
         "value": "is.microsoft",
         "name": "IsMicrosoft",
         "description": "Microsoft analyzer for Icelandic."
        },
        {
         "value": "id.microsoft",
         "name": "IdMicrosoft",
         "description": "Microsoft analyzer for Indonesian (Bahasa)."
        },
        {
         "value": "id.lucene",
         "name": "IdLucene",
         "description": "Lucene analyzer for Indonesian."
        },
        {
         "value": "ga.lucene",
         "name": "GaLucene",
         "description": "Lucene analyzer for Irish."
        },
        {
         "value": "it.microsoft",
         "name": "ItMicrosoft",
         "description": "Microsoft analyzer for Italian."
        },
        {
         "value": "it.lucene",
         "name": "ItLucene",
         "description": "Lucene analyzer for Italian."
        },
        {
         "value": "ja.microsoft",
         "name": "JaMicrosoft",
         "description": "Microsoft analyzer for Japanese."
        },
        {
         "value": "ja.lucene",
         "name": "JaLucene",
         "description": "Lucene analyzer for Japanese."
        },
        {
         "value": "kn.microsoft",
         "name": "KnMicrosoft",
         "description": "Microsoft analyzer for Kannada."
        },
        {
         "value": "ko.microsoft",
         "name": "KoMicrosoft",
         "description": "Microsoft analyzer for Korean."
        },
        {
         "value": "ko.lucene",
         "name": "KoLucene",
         "description": "Lucene analyzer for Korean."
        },
        {
         "value": "lv.microsoft",
         "name": "LvMicrosoft",
         "description": "Microsoft analyzer for Latvian."
        },
        {
         "value": "lv.lucene",
         "name": "LvLucene",
         "description": "Lucene analyzer for Latvian."
        },
        {
         "value": "lt.microsoft",
         "name": "LtMicrosoft",
         "description": "Microsoft analyzer for Lithuanian."
        },
        {
         "value": "ml.microsoft",
         "name": "MlMicrosoft",
         "description": "Microsoft analyzer for Malayalam."
        },
        {
         "value": "ms.microsoft",
         "name": "MsMicrosoft",
         "description": "Microsoft analyzer for Malay (Latin)."
        },
        {
         "value": "mr.microsoft",
         "name": "MrMicrosoft",
         "description": "Microsoft analyzer for Marathi."
        },
        {
         "value": "nb.microsoft",
         "name": "NbMicrosoft",
         "description": "Microsoft analyzer for Norwegian (Bokm√•l)."
        },
        {
         "value": "no.lucene",
         "name": "NoLucene",
         "description": "Lucene analyzer for Norwegian."
        },
        {
         "value": "fa.lucene",
         "name": "FaLucene",
         "description": "Lucene analyzer for Persian."
        },
        {
         "value": "pl.microsoft",
         "name": "PlMicrosoft",
         "description": "Microsoft analyzer for Polish."
        },
        {
         "value": "pl.lucene",
         "name": "PlLucene",
         "description": "Lucene analyzer for Polish."
        },
        {
         "value": "pt-BR.microsoft",
         "name": "PtBrMicrosoft",
         "description": "Microsoft analyzer for Portuguese (Brazil)."
        },
        {
         "value": "pt-BR.lucene",
         "name": "PtBrLucene",
         "description": "Lucene analyzer for Portuguese (Brazil)."
        },
        {
         "value": "pt-PT.microsoft",
         "name": "PtPtMicrosoft",
         "description": "Microsoft analyzer for Portuguese (Portugal)."
        },
        {
         "value": "pt-PT.lucene",
         "name": "PtPtLucene",
         "description": "Lucene analyzer for Portuguese (Portugal)."
        },
        {
         "value": "pa.microsoft",
         "name": "PaMicrosoft",
         "description": "Microsoft analyzer for Punjabi."
        },
        {
         "value": "ro.microsoft",
         "name": "RoMicrosoft",
         "description": "Microsoft analyzer for Romanian."
        },
        {
         "value": "ro.lucene",
         "name": "RoLucene",
         "description": "Lucene analyzer for Romanian."
        },
        {
         "value": "ru.microsoft",
         "name": "RuMicrosoft",
         "description": "Microsoft analyzer for Russian."
        },
        {
         "value": "ru.lucene",
         "name": "RuLucene",
         "description": "Lucene analyzer for Russian."
        },
        {
         "value": "sr-cyrillic.microsoft",
         "name": "SrCyrillicMicrosoft",
         "description": "Microsoft analyzer for Serbian (Cyrillic)."
        },
        {
         "value": "sr-latin.microsoft",
         "name": "SrLatinMicrosoft",
         "description": "Microsoft analyzer for Serbian (Latin)."
        },
        {
         "value": "sk.microsoft",
         "name": "SkMicrosoft",
         "description": "Microsoft analyzer for Slovak."
        },
        {
         "value": "sl.microsoft",
         "name": "SlMicrosoft",
         "description": "Microsoft analyzer for Slovenian."
        },
        {
         "value": "es.microsoft",
         "name": "EsMicrosoft",
         "description": "Microsoft analyzer for Spanish."
        },
        {
         "value": "es.lucene",
         "name": "EsLucene",
         "description": "Lucene analyzer for Spanish."
        },
        {
         "value": "sv.microsoft",
         "name": "SvMicrosoft",
         "description": "Microsoft analyzer for Swedish."
        },
        {
         "value": "sv.lucene",
         "name": "SvLucene",
         "description": "Lucene analyzer for Swedish."
        },
        {
         "value": "ta.microsoft",
         "name": "TaMicrosoft",
         "description": "Microsoft analyzer for Tamil."
        },
        {
         "value": "te.microsoft",
         "name": "TeMicrosoft",
         "description": "Microsoft analyzer for Telugu."
        },
        {
         "value": "th.microsoft",
         "name": "ThMicrosoft",
         "description": "Microsoft analyzer for Thai."
        },
        {
         "value": "th.lucene",
         "name": "ThLucene",
         "description": "Lucene analyzer for Thai."
        },
        {
         "value": "tr.microsoft",
         "name": "TrMicrosoft",
         "description": "Microsoft analyzer for Turkish."
        },
        {
         "value": "tr.lucene",
         "name": "TrLucene",
         "description": "Lucene analyzer for Turkish."
        },
        {
         "value": "uk.microsoft",
         "name": "UkMicrosoft",
         "description": "Microsoft analyzer for Ukrainian."
        },
        {
         "value": "ur.microsoft",
         "name": "UrMicrosoft",
         "description": "Microsoft analyzer for Urdu."
        },
        {
         "value": "vi.microsoft",
         "name": "ViMicrosoft",
         "description": "Microsoft analyzer for Vietnamese."
        },
        {
         "value": "standard.lucene",
         "name": "StandardLucene",
         "description": "Standard Lucene analyzer."
        },
        {
         "value": "standardasciifolding.lucene",
         "name": "StandardAsciiFoldingLucene",
         "description": "Standard ASCII Folding Lucene analyzer. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#Analyzers"
        },
        {
         "value": "keyword",
         "name": "Keyword",
         "description": "Treats the entire content of a field as a single token. This is useful for data like zip codes, ids, and some product names. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordAnalyzer.html"
        },
        {
         "value": "pattern",
         "name": "Pattern",
         "description": "Flexibly separates text into terms via a regular expression pattern. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.html"
        },
        {
         "value": "simple",
         "name": "Simple",
         "description": "Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/SimpleAnalyzer.html"
        },
        {
         "value": "stop",
         "name": "Stop",
         "description": "Divides text at non-letters; Applies the lowercase and stopword token filters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopAnalyzer.html"
        },
        {
         "value": "whitespace",
         "name": "Whitespace",
         "description": "An analyzer that uses the whitespace tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceAnalyzer.html"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1751",
      "fixed": false,
      "raw": "searchAnalyzer"
     },
     "serializedName": "searchAnalyzer",
     "modelType": {
      "$ref": "13"
     }
    },
    {
     "$id": "1752",
     "isReadOnly": false,
     "realPath": [
      "indexAnalyzer"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1753",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1754",
      "fixed": false,
      "raw": "The name of the analyzer used at indexing time for the field. This option can be used only with searchable fields. It must be set together with searchAnalyzer and it cannot be set together with the analyzer option.  This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "LexicalAnalyzerName",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LexicalAnalyzerName"
       ]
      },
      "x-ms-enum": {
       "name": "LexicalAnalyzerName",
       "modelAsString": true,
       "values": [
        {
         "value": "ar.microsoft",
         "name": "ArMicrosoft",
         "description": "Microsoft analyzer for Arabic."
        },
        {
         "value": "ar.lucene",
         "name": "ArLucene",
         "description": "Lucene analyzer for Arabic."
        },
        {
         "value": "hy.lucene",
         "name": "HyLucene",
         "description": "Lucene analyzer for Armenian."
        },
        {
         "value": "bn.microsoft",
         "name": "BnMicrosoft",
         "description": "Microsoft analyzer for Bangla."
        },
        {
         "value": "eu.lucene",
         "name": "EuLucene",
         "description": "Lucene analyzer for Basque."
        },
        {
         "value": "bg.microsoft",
         "name": "BgMicrosoft",
         "description": "Microsoft analyzer for Bulgarian."
        },
        {
         "value": "bg.lucene",
         "name": "BgLucene",
         "description": "Lucene analyzer for Bulgarian."
        },
        {
         "value": "ca.microsoft",
         "name": "CaMicrosoft",
         "description": "Microsoft analyzer for Catalan."
        },
        {
         "value": "ca.lucene",
         "name": "CaLucene",
         "description": "Lucene analyzer for Catalan."
        },
        {
         "value": "zh-Hans.microsoft",
         "name": "ZhHansMicrosoft",
         "description": "Microsoft analyzer for Chinese (Simplified)."
        },
        {
         "value": "zh-Hans.lucene",
         "name": "ZhHansLucene",
         "description": "Lucene analyzer for Chinese (Simplified)."
        },
        {
         "value": "zh-Hant.microsoft",
         "name": "ZhHantMicrosoft",
         "description": "Microsoft analyzer for Chinese (Traditional)."
        },
        {
         "value": "zh-Hant.lucene",
         "name": "ZhHantLucene",
         "description": "Lucene analyzer for Chinese (Traditional)."
        },
        {
         "value": "hr.microsoft",
         "name": "HrMicrosoft",
         "description": "Microsoft analyzer for Croatian."
        },
        {
         "value": "cs.microsoft",
         "name": "CsMicrosoft",
         "description": "Microsoft analyzer for Czech."
        },
        {
         "value": "cs.lucene",
         "name": "CsLucene",
         "description": "Lucene analyzer for Czech."
        },
        {
         "value": "da.microsoft",
         "name": "DaMicrosoft",
         "description": "Microsoft analyzer for Danish."
        },
        {
         "value": "da.lucene",
         "name": "DaLucene",
         "description": "Lucene analyzer for Danish."
        },
        {
         "value": "nl.microsoft",
         "name": "NlMicrosoft",
         "description": "Microsoft analyzer for Dutch."
        },
        {
         "value": "nl.lucene",
         "name": "NlLucene",
         "description": "Lucene analyzer for Dutch."
        },
        {
         "value": "en.microsoft",
         "name": "EnMicrosoft",
         "description": "Microsoft analyzer for English."
        },
        {
         "value": "en.lucene",
         "name": "EnLucene",
         "description": "Lucene analyzer for English."
        },
        {
         "value": "et.microsoft",
         "name": "EtMicrosoft",
         "description": "Microsoft analyzer for Estonian."
        },
        {
         "value": "fi.microsoft",
         "name": "FiMicrosoft",
         "description": "Microsoft analyzer for Finnish."
        },
        {
         "value": "fi.lucene",
         "name": "FiLucene",
         "description": "Lucene analyzer for Finnish."
        },
        {
         "value": "fr.microsoft",
         "name": "FrMicrosoft",
         "description": "Microsoft analyzer for French."
        },
        {
         "value": "fr.lucene",
         "name": "FrLucene",
         "description": "Lucene analyzer for French."
        },
        {
         "value": "gl.lucene",
         "name": "GlLucene",
         "description": "Lucene analyzer for Galician."
        },
        {
         "value": "de.microsoft",
         "name": "DeMicrosoft",
         "description": "Microsoft analyzer for German."
        },
        {
         "value": "de.lucene",
         "name": "DeLucene",
         "description": "Lucene analyzer for German."
        },
        {
         "value": "el.microsoft",
         "name": "ElMicrosoft",
         "description": "Microsoft analyzer for Greek."
        },
        {
         "value": "el.lucene",
         "name": "ElLucene",
         "description": "Lucene analyzer for Greek."
        },
        {
         "value": "gu.microsoft",
         "name": "GuMicrosoft",
         "description": "Microsoft analyzer for Gujarati."
        },
        {
         "value": "he.microsoft",
         "name": "HeMicrosoft",
         "description": "Microsoft analyzer for Hebrew."
        },
        {
         "value": "hi.microsoft",
         "name": "HiMicrosoft",
         "description": "Microsoft analyzer for Hindi."
        },
        {
         "value": "hi.lucene",
         "name": "HiLucene",
         "description": "Lucene analyzer for Hindi."
        },
        {
         "value": "hu.microsoft",
         "name": "HuMicrosoft",
         "description": "Microsoft analyzer for Hungarian."
        },
        {
         "value": "hu.lucene",
         "name": "HuLucene",
         "description": "Lucene analyzer for Hungarian."
        },
        {
         "value": "is.microsoft",
         "name": "IsMicrosoft",
         "description": "Microsoft analyzer for Icelandic."
        },
        {
         "value": "id.microsoft",
         "name": "IdMicrosoft",
         "description": "Microsoft analyzer for Indonesian (Bahasa)."
        },
        {
         "value": "id.lucene",
         "name": "IdLucene",
         "description": "Lucene analyzer for Indonesian."
        },
        {
         "value": "ga.lucene",
         "name": "GaLucene",
         "description": "Lucene analyzer for Irish."
        },
        {
         "value": "it.microsoft",
         "name": "ItMicrosoft",
         "description": "Microsoft analyzer for Italian."
        },
        {
         "value": "it.lucene",
         "name": "ItLucene",
         "description": "Lucene analyzer for Italian."
        },
        {
         "value": "ja.microsoft",
         "name": "JaMicrosoft",
         "description": "Microsoft analyzer for Japanese."
        },
        {
         "value": "ja.lucene",
         "name": "JaLucene",
         "description": "Lucene analyzer for Japanese."
        },
        {
         "value": "kn.microsoft",
         "name": "KnMicrosoft",
         "description": "Microsoft analyzer for Kannada."
        },
        {
         "value": "ko.microsoft",
         "name": "KoMicrosoft",
         "description": "Microsoft analyzer for Korean."
        },
        {
         "value": "ko.lucene",
         "name": "KoLucene",
         "description": "Lucene analyzer for Korean."
        },
        {
         "value": "lv.microsoft",
         "name": "LvMicrosoft",
         "description": "Microsoft analyzer for Latvian."
        },
        {
         "value": "lv.lucene",
         "name": "LvLucene",
         "description": "Lucene analyzer for Latvian."
        },
        {
         "value": "lt.microsoft",
         "name": "LtMicrosoft",
         "description": "Microsoft analyzer for Lithuanian."
        },
        {
         "value": "ml.microsoft",
         "name": "MlMicrosoft",
         "description": "Microsoft analyzer for Malayalam."
        },
        {
         "value": "ms.microsoft",
         "name": "MsMicrosoft",
         "description": "Microsoft analyzer for Malay (Latin)."
        },
        {
         "value": "mr.microsoft",
         "name": "MrMicrosoft",
         "description": "Microsoft analyzer for Marathi."
        },
        {
         "value": "nb.microsoft",
         "name": "NbMicrosoft",
         "description": "Microsoft analyzer for Norwegian (Bokm√•l)."
        },
        {
         "value": "no.lucene",
         "name": "NoLucene",
         "description": "Lucene analyzer for Norwegian."
        },
        {
         "value": "fa.lucene",
         "name": "FaLucene",
         "description": "Lucene analyzer for Persian."
        },
        {
         "value": "pl.microsoft",
         "name": "PlMicrosoft",
         "description": "Microsoft analyzer for Polish."
        },
        {
         "value": "pl.lucene",
         "name": "PlLucene",
         "description": "Lucene analyzer for Polish."
        },
        {
         "value": "pt-BR.microsoft",
         "name": "PtBrMicrosoft",
         "description": "Microsoft analyzer for Portuguese (Brazil)."
        },
        {
         "value": "pt-BR.lucene",
         "name": "PtBrLucene",
         "description": "Lucene analyzer for Portuguese (Brazil)."
        },
        {
         "value": "pt-PT.microsoft",
         "name": "PtPtMicrosoft",
         "description": "Microsoft analyzer for Portuguese (Portugal)."
        },
        {
         "value": "pt-PT.lucene",
         "name": "PtPtLucene",
         "description": "Lucene analyzer for Portuguese (Portugal)."
        },
        {
         "value": "pa.microsoft",
         "name": "PaMicrosoft",
         "description": "Microsoft analyzer for Punjabi."
        },
        {
         "value": "ro.microsoft",
         "name": "RoMicrosoft",
         "description": "Microsoft analyzer for Romanian."
        },
        {
         "value": "ro.lucene",
         "name": "RoLucene",
         "description": "Lucene analyzer for Romanian."
        },
        {
         "value": "ru.microsoft",
         "name": "RuMicrosoft",
         "description": "Microsoft analyzer for Russian."
        },
        {
         "value": "ru.lucene",
         "name": "RuLucene",
         "description": "Lucene analyzer for Russian."
        },
        {
         "value": "sr-cyrillic.microsoft",
         "name": "SrCyrillicMicrosoft",
         "description": "Microsoft analyzer for Serbian (Cyrillic)."
        },
        {
         "value": "sr-latin.microsoft",
         "name": "SrLatinMicrosoft",
         "description": "Microsoft analyzer for Serbian (Latin)."
        },
        {
         "value": "sk.microsoft",
         "name": "SkMicrosoft",
         "description": "Microsoft analyzer for Slovak."
        },
        {
         "value": "sl.microsoft",
         "name": "SlMicrosoft",
         "description": "Microsoft analyzer for Slovenian."
        },
        {
         "value": "es.microsoft",
         "name": "EsMicrosoft",
         "description": "Microsoft analyzer for Spanish."
        },
        {
         "value": "es.lucene",
         "name": "EsLucene",
         "description": "Lucene analyzer for Spanish."
        },
        {
         "value": "sv.microsoft",
         "name": "SvMicrosoft",
         "description": "Microsoft analyzer for Swedish."
        },
        {
         "value": "sv.lucene",
         "name": "SvLucene",
         "description": "Lucene analyzer for Swedish."
        },
        {
         "value": "ta.microsoft",
         "name": "TaMicrosoft",
         "description": "Microsoft analyzer for Tamil."
        },
        {
         "value": "te.microsoft",
         "name": "TeMicrosoft",
         "description": "Microsoft analyzer for Telugu."
        },
        {
         "value": "th.microsoft",
         "name": "ThMicrosoft",
         "description": "Microsoft analyzer for Thai."
        },
        {
         "value": "th.lucene",
         "name": "ThLucene",
         "description": "Lucene analyzer for Thai."
        },
        {
         "value": "tr.microsoft",
         "name": "TrMicrosoft",
         "description": "Microsoft analyzer for Turkish."
        },
        {
         "value": "tr.lucene",
         "name": "TrLucene",
         "description": "Lucene analyzer for Turkish."
        },
        {
         "value": "uk.microsoft",
         "name": "UkMicrosoft",
         "description": "Microsoft analyzer for Ukrainian."
        },
        {
         "value": "ur.microsoft",
         "name": "UrMicrosoft",
         "description": "Microsoft analyzer for Urdu."
        },
        {
         "value": "vi.microsoft",
         "name": "ViMicrosoft",
         "description": "Microsoft analyzer for Vietnamese."
        },
        {
         "value": "standard.lucene",
         "name": "StandardLucene",
         "description": "Standard Lucene analyzer."
        },
        {
         "value": "standardasciifolding.lucene",
         "name": "StandardAsciiFoldingLucene",
         "description": "Standard ASCII Folding Lucene analyzer. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#Analyzers"
        },
        {
         "value": "keyword",
         "name": "Keyword",
         "description": "Treats the entire content of a field as a single token. This is useful for data like zip codes, ids, and some product names. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordAnalyzer.html"
        },
        {
         "value": "pattern",
         "name": "Pattern",
         "description": "Flexibly separates text into terms via a regular expression pattern. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.html"
        },
        {
         "value": "simple",
         "name": "Simple",
         "description": "Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/SimpleAnalyzer.html"
        },
        {
         "value": "stop",
         "name": "Stop",
         "description": "Divides text at non-letters; Applies the lowercase and stopword token filters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopAnalyzer.html"
        },
        {
         "value": "whitespace",
         "name": "Whitespace",
         "description": "An analyzer that uses the whitespace tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceAnalyzer.html"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1755",
      "fixed": false,
      "raw": "indexAnalyzer"
     },
     "serializedName": "indexAnalyzer",
     "modelType": {
      "$ref": "13"
     }
    },
    {
     "$id": "1756",
     "isReadOnly": false,
     "realPath": [
      "synonymMaps"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1757",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1758",
      "fixed": false,
      "raw": "A list of the names of synonym maps to associate with this field. This option can be used only with searchable fields. Currently only one synonym map per field is supported. Assigning a synonym map to a field ensures that query terms targeting that field are expanded at query-time using the rules in the synonym map. This attribute can be changed on existing fields. Must be null or an empty collection for complex fields."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1759",
      "fixed": false,
      "raw": "synonymMaps"
     },
     "serializedName": "synonymMaps",
     "modelType": {
      "$id": "1760",
      "$type": "SequenceType",
      "elementType": {
       "$id": "1761",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1762",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1763",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "1764",
     "isReadOnly": false,
     "realPath": [
      "fields"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1765",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1766",
      "fixed": false,
      "raw": "A list of sub-fields if this is a field of type Edm.ComplexType or Collection(Edm.ComplexType). Must be null or empty for simple fields."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1767",
      "fixed": false,
      "raw": "fields"
     },
     "serializedName": "fields",
     "modelType": {
      "$id": "1768",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1685"
      },
      "name": {
       "$id": "1769",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SearchField",
   "documentation": "Represents a field in an index definition, which describes the name, data type, and search behavior of a field.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Create-Index",
   "containsConstantProperties": false,
   "name": {
    "$id": "1770",
    "fixed": false,
    "raw": "SearchField"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchField",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchField"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1771",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1772",
     "isReadOnly": false,
     "realPath": [
      "weights"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1773",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1774",
      "fixed": false,
      "raw": "The dictionary of per-field weights to boost document scoring. The keys are field names and the values are the weights for each field."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1775",
      "fixed": false,
      "raw": "weights"
     },
     "serializedName": "weights",
     "modelType": {
      "$id": "1776",
      "$type": "DictionaryType",
      "valueType": {
       "$id": "1777",
       "$type": "PrimaryType",
       "format": "double",
       "knownPrimaryType": "double",
       "name": {
        "$id": "1778",
        "fixed": false,
        "raw": "Double"
       },
       "deprecated": false
      },
      "supportsAdditionalProperties": false,
      "name": {
       "$id": "1779",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "TextWeights",
   "documentation": "Defines weights on index fields for which matches should boost scoring in search queries.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1780",
    "fixed": false,
    "raw": "TextWeights"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "TextWeights",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/TextWeights"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1781",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1782",
     "isReadOnly": false,
     "realPath": [
      "fieldName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1783",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1784",
      "fixed": false,
      "raw": "The name of the field used as input to the scoring function."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1785",
      "fixed": false,
      "raw": "fieldName"
     },
     "serializedName": "fieldName",
     "modelType": {
      "$id": "1786",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1787",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1788",
     "isReadOnly": false,
     "realPath": [
      "boost"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1789",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1790",
      "fixed": false,
      "raw": "A multiplier for the raw score. Must be a positive number not equal to 1.0."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1791",
      "fixed": false,
      "raw": "boost"
     },
     "serializedName": "boost",
     "modelType": {
      "$id": "1792",
      "$type": "PrimaryType",
      "format": "double",
      "knownPrimaryType": "double",
      "name": {
       "$id": "1793",
       "fixed": false,
       "raw": "Double"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1794",
     "isReadOnly": false,
     "realPath": [
      "interpolation"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1795",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1796",
      "fixed": false,
      "raw": "A value indicating how boosting will be interpolated across document scores; defaults to \"Linear\"."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "ScoringFunctionInterpolation",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ScoringFunctionInterpolation"
       ]
      },
      "x-ms-enum": {
       "name": "ScoringFunctionInterpolation",
       "modelAsString": false,
       "values": [
        {
         "value": "linear",
         "name": "Linear",
         "description": "Boosts scores by a linearly decreasing amount. This is the default interpolation for scoring functions."
        },
        {
         "value": "constant",
         "name": "Constant",
         "description": "Boosts scores by a constant factor."
        },
        {
         "value": "quadratic",
         "name": "Quadratic",
         "description": "Boosts scores by an amount that decreases quadratically. Boosts decrease slowly for higher scores, and more quickly as the scores decrease. This interpolation option is not allowed in tag scoring functions."
        },
        {
         "value": "logarithmic",
         "name": "Logarithmic",
         "description": "Boosts scores by an amount that decreases logarithmically. Boosts decrease quickly for higher scores, and more slowly as the scores decrease. This interpolation option is not allowed in tag scoring functions."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1797",
      "fixed": false,
      "raw": "interpolation"
     },
     "serializedName": "interpolation",
     "modelType": {
      "$id": "1798",
      "$type": "EnumType",
      "values": [
       {
        "$id": "1799",
        "description": "Boosts scores by a linearly decreasing amount. This is the default interpolation for scoring functions.",
        "name": "Linear",
        "serializedName": "linear"
       },
       {
        "$id": "1800",
        "description": "Boosts scores by a constant factor.",
        "name": "Constant",
        "serializedName": "constant"
       },
       {
        "$id": "1801",
        "description": "Boosts scores by an amount that decreases quadratically. Boosts decrease slowly for higher scores, and more quickly as the scores decrease. This interpolation option is not allowed in tag scoring functions.",
        "name": "Quadratic",
        "serializedName": "quadratic"
       },
       {
        "$id": "1802",
        "description": "Boosts scores by an amount that decreases logarithmically. Boosts decrease quickly for higher scores, and more slowly as the scores decrease. This interpolation option is not allowed in tag scoring functions.",
        "name": "Logarithmic",
        "serializedName": "logarithmic"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "1803",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1804",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1805",
       "fixed": false,
       "raw": "ScoringFunctionInterpolation"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "ScoringFunction",
   "polymorphicDiscriminator": "type",
   "documentation": "Base type for functions that can modify document scores during ranking.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Add-scoring-profiles-to-a-search-index",
   "containsConstantProperties": false,
   "name": {
    "$id": "1806",
    "fixed": false,
    "raw": "ScoringFunction"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ScoringFunction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ScoringFunction"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1807",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1808",
     "isReadOnly": false,
     "realPath": [
      "referencePointParameter"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1809",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1810",
      "fixed": false,
      "raw": "The name of the parameter passed in search queries to specify the reference location."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1811",
      "fixed": false,
      "raw": "referencePointParameter"
     },
     "serializedName": "referencePointParameter",
     "modelType": {
      "$id": "1812",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1813",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1814",
     "isReadOnly": false,
     "realPath": [
      "boostingDistance"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1815",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1816",
      "fixed": false,
      "raw": "The distance in kilometers from the reference location where the boosting range ends."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1817",
      "fixed": false,
      "raw": "boostingDistance"
     },
     "serializedName": "boostingDistance",
     "modelType": {
      "$id": "1818",
      "$type": "PrimaryType",
      "format": "double",
      "knownPrimaryType": "double",
      "name": {
       "$id": "1819",
       "fixed": false,
       "raw": "Double"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "DistanceScoringParameters",
   "documentation": "Provides parameter values to a distance scoring function.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1820",
    "fixed": false,
    "raw": "DistanceScoringParameters"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "DistanceScoringParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/DistanceScoringParameters"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1821",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1822",
     "isReadOnly": false,
     "realPath": [
      "distance"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1823",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1824",
      "fixed": false,
      "raw": "Parameter values for the distance scoring function."
     },
     "extensions": {
      "x-ms-client-name": "Parameters"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1825",
      "fixed": false,
      "raw": "distance"
     },
     "serializedName": "distance",
     "modelType": {
      "$ref": "1807"
     }
    }
   ],
   "serializedName": "distance",
   "baseModelType": {
    "$ref": "1781"
   },
   "documentation": "Defines a function that boosts scores based on distance from a geographic location.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Add-scoring-profiles-to-a-search-index",
   "containsConstantProperties": false,
   "name": {
    "$id": "1826",
    "fixed": false,
    "raw": "DistanceScoringFunction"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "DistanceScoringFunction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/DistanceScoringFunction"
     ]
    },
    "x-ms-discriminator-value": "distance"
   },
   "deprecated": false
  },
  {
   "$id": "1827",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1828",
     "isReadOnly": false,
     "realPath": [
      "boostingDuration"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1829",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1830",
      "fixed": false,
      "raw": "The expiration period after which boosting will stop for a particular document."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1831",
      "fixed": false,
      "raw": "boostingDuration"
     },
     "serializedName": "boostingDuration",
     "modelType": {
      "$id": "1832",
      "$type": "PrimaryType",
      "format": "duration",
      "knownPrimaryType": "timeSpan",
      "name": {
       "$id": "1833",
       "fixed": false,
       "raw": "TimeSpan"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "FreshnessScoringParameters",
   "documentation": "Provides parameter values to a freshness scoring function.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1834",
    "fixed": false,
    "raw": "FreshnessScoringParameters"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "FreshnessScoringParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/FreshnessScoringParameters"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1835",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1836",
     "isReadOnly": false,
     "realPath": [
      "freshness"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1837",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1838",
      "fixed": false,
      "raw": "Parameter values for the freshness scoring function."
     },
     "extensions": {
      "x-ms-client-name": "Parameters"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1839",
      "fixed": false,
      "raw": "freshness"
     },
     "serializedName": "freshness",
     "modelType": {
      "$ref": "1827"
     }
    }
   ],
   "serializedName": "freshness",
   "baseModelType": {
    "$ref": "1781"
   },
   "documentation": "Defines a function that boosts scores based on the value of a date-time field.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Add-scoring-profiles-to-a-search-index",
   "containsConstantProperties": false,
   "name": {
    "$id": "1840",
    "fixed": false,
    "raw": "FreshnessScoringFunction"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "FreshnessScoringFunction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/FreshnessScoringFunction"
     ]
    },
    "x-ms-discriminator-value": "freshness"
   },
   "deprecated": false
  },
  {
   "$id": "1841",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1842",
     "isReadOnly": false,
     "realPath": [
      "boostingRangeStart"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1843",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1844",
      "fixed": false,
      "raw": "The field value at which boosting starts."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1845",
      "fixed": false,
      "raw": "boostingRangeStart"
     },
     "serializedName": "boostingRangeStart",
     "modelType": {
      "$id": "1846",
      "$type": "PrimaryType",
      "format": "double",
      "knownPrimaryType": "double",
      "name": {
       "$id": "1847",
       "fixed": false,
       "raw": "Double"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1848",
     "isReadOnly": false,
     "realPath": [
      "boostingRangeEnd"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1849",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1850",
      "fixed": false,
      "raw": "The field value at which boosting ends."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1851",
      "fixed": false,
      "raw": "boostingRangeEnd"
     },
     "serializedName": "boostingRangeEnd",
     "modelType": {
      "$id": "1852",
      "$type": "PrimaryType",
      "format": "double",
      "knownPrimaryType": "double",
      "name": {
       "$id": "1853",
       "fixed": false,
       "raw": "Double"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1854",
     "isReadOnly": false,
     "realPath": [
      "constantBoostBeyondRange"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1855",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1856",
      "fixed": false,
      "raw": "A value indicating whether to apply a constant boost for field values beyond the range end value; default is false."
     },
     "extensions": {
      "x-ms-client-name": "ShouldBoostBeyondRangeByConstant"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1857",
      "fixed": false,
      "raw": "constantBoostBeyondRange"
     },
     "serializedName": "constantBoostBeyondRange",
     "modelType": {
      "$id": "1858",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "1859",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "MagnitudeScoringParameters",
   "documentation": "Provides parameter values to a magnitude scoring function.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1860",
    "fixed": false,
    "raw": "MagnitudeScoringParameters"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "MagnitudeScoringParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/MagnitudeScoringParameters"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1861",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1862",
     "isReadOnly": false,
     "realPath": [
      "magnitude"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1863",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1864",
      "fixed": false,
      "raw": "Parameter values for the magnitude scoring function."
     },
     "extensions": {
      "x-ms-client-name": "Parameters"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1865",
      "fixed": false,
      "raw": "magnitude"
     },
     "serializedName": "magnitude",
     "modelType": {
      "$ref": "1841"
     }
    }
   ],
   "serializedName": "magnitude",
   "baseModelType": {
    "$ref": "1781"
   },
   "documentation": "Defines a function that boosts scores based on the magnitude of a numeric field.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Add-scoring-profiles-to-a-search-index",
   "containsConstantProperties": false,
   "name": {
    "$id": "1866",
    "fixed": false,
    "raw": "MagnitudeScoringFunction"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "MagnitudeScoringFunction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/MagnitudeScoringFunction"
     ]
    },
    "x-ms-discriminator-value": "magnitude"
   },
   "deprecated": false
  },
  {
   "$id": "1867",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1868",
     "isReadOnly": false,
     "realPath": [
      "tagsParameter"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1869",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1870",
      "fixed": false,
      "raw": "The name of the parameter passed in search queries to specify the list of tags to compare against the target field."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1871",
      "fixed": false,
      "raw": "tagsParameter"
     },
     "serializedName": "tagsParameter",
     "modelType": {
      "$id": "1872",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1873",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "TagScoringParameters",
   "documentation": "Provides parameter values to a tag scoring function.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1874",
    "fixed": false,
    "raw": "TagScoringParameters"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "TagScoringParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/TagScoringParameters"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1875",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1876",
     "isReadOnly": false,
     "realPath": [
      "tag"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1877",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1878",
      "fixed": false,
      "raw": "Parameter values for the tag scoring function."
     },
     "extensions": {
      "x-ms-client-name": "Parameters"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1879",
      "fixed": false,
      "raw": "tag"
     },
     "serializedName": "tag",
     "modelType": {
      "$ref": "1867"
     }
    }
   ],
   "serializedName": "tag",
   "baseModelType": {
    "$ref": "1781"
   },
   "documentation": "Defines a function that boosts scores of documents with string values matching a given list of tags.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Add-scoring-profiles-to-a-search-index",
   "containsConstantProperties": false,
   "name": {
    "$id": "1880",
    "fixed": false,
    "raw": "TagScoringFunction"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "TagScoringFunction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/TagScoringFunction"
     ]
    },
    "x-ms-discriminator-value": "tag"
   },
   "deprecated": false
  },
  {
   "$id": "1881",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1882",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1883",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1884",
      "fixed": false,
      "raw": "The name of the scoring profile."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1885",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "1886",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1887",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1888",
     "isReadOnly": false,
     "realPath": [
      "text"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1889",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1890",
      "fixed": false,
      "raw": "Parameters that boost scoring based on text matches in certain index fields."
     },
     "extensions": {
      "x-ms-client-name": "TextWeights"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1891",
      "fixed": false,
      "raw": "text"
     },
     "serializedName": "text",
     "modelType": {
      "$ref": "1771"
     }
    },
    {
     "$id": "1892",
     "isReadOnly": false,
     "realPath": [
      "functions"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1893",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1894",
      "fixed": false,
      "raw": "The collection of functions that influence the scoring of documents."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1895",
      "fixed": false,
      "raw": "functions"
     },
     "serializedName": "functions",
     "modelType": {
      "$id": "1896",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1781"
      },
      "name": {
       "$id": "1897",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "1898",
     "isReadOnly": false,
     "realPath": [
      "functionAggregation"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1899",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1900",
      "fixed": false,
      "raw": "A value indicating how the results of individual scoring functions should be combined. Defaults to \"Sum\". Ignored if there are no scoring functions."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "ScoringFunctionAggregation",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ScoringFunctionAggregation"
       ]
      },
      "x-ms-enum": {
       "name": "ScoringFunctionAggregation",
       "modelAsString": false,
       "values": [
        {
         "value": "sum",
         "name": "Sum",
         "description": "Boost scores by the sum of all scoring function results."
        },
        {
         "value": "average",
         "name": "Average",
         "description": "Boost scores by the average of all scoring function results."
        },
        {
         "value": "minimum",
         "name": "Minimum",
         "description": "Boost scores by the minimum of all scoring function results."
        },
        {
         "value": "maximum",
         "name": "Maximum",
         "description": "Boost scores by the maximum of all scoring function results."
        },
        {
         "value": "firstMatching",
         "name": "FirstMatching",
         "description": "Boost scores using the first applicable scoring function in the scoring profile."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1901",
      "fixed": false,
      "raw": "functionAggregation"
     },
     "serializedName": "functionAggregation",
     "modelType": {
      "$id": "1902",
      "$type": "EnumType",
      "values": [
       {
        "$id": "1903",
        "description": "Boost scores by the sum of all scoring function results.",
        "name": "Sum",
        "serializedName": "sum"
       },
       {
        "$id": "1904",
        "description": "Boost scores by the average of all scoring function results.",
        "name": "Average",
        "serializedName": "average"
       },
       {
        "$id": "1905",
        "description": "Boost scores by the minimum of all scoring function results.",
        "name": "Minimum",
        "serializedName": "minimum"
       },
       {
        "$id": "1906",
        "description": "Boost scores by the maximum of all scoring function results.",
        "name": "Maximum",
        "serializedName": "maximum"
       },
       {
        "$id": "1907",
        "description": "Boost scores using the first applicable scoring function in the scoring profile.",
        "name": "FirstMatching",
        "serializedName": "firstMatching"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "1908",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1909",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1910",
       "fixed": false,
       "raw": "ScoringFunctionAggregation"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "ScoringProfile",
   "documentation": "Defines parameters for a search index that influence scoring in search queries.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Add-scoring-profiles-to-a-search-index",
   "containsConstantProperties": false,
   "name": {
    "$id": "1911",
    "fixed": false,
    "raw": "ScoringProfile"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ScoringProfile",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ScoringProfile"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1912",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1913",
     "isReadOnly": false,
     "realPath": [
      "allowedOrigins"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1914",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1915",
      "fixed": false,
      "raw": "The list of origins from which JavaScript code will be granted access to your index. Can contain a list of hosts of the form {protocol}://{fully-qualified-domain-name}[:{port#}], or a single '*' to allow all origins (not recommended)."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1916",
      "fixed": false,
      "raw": "allowedOrigins"
     },
     "serializedName": "allowedOrigins",
     "modelType": {
      "$id": "1917",
      "$type": "SequenceType",
      "elementType": {
       "$id": "1918",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1919",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1920",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "1921",
     "isReadOnly": false,
     "realPath": [
      "maxAgeInSeconds"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1922",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1923",
      "fixed": false,
      "raw": "The duration for which browsers should cache CORS preflight responses. Defaults to 5 minutes."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1924",
      "fixed": false,
      "raw": "maxAgeInSeconds"
     },
     "serializedName": "maxAgeInSeconds",
     "modelType": {
      "$id": "1925",
      "$type": "PrimaryType",
      "format": "int64",
      "knownPrimaryType": "long",
      "name": {
       "$id": "1926",
       "fixed": false,
       "raw": "Long"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "CorsOptions",
   "documentation": "Defines options to control Cross-Origin Resource Sharing (CORS) for an index.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Create-Index",
   "containsConstantProperties": false,
   "name": {
    "$id": "1927",
    "fixed": false,
    "raw": "CorsOptions"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "CorsOptions",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/CorsOptions"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1928",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1929",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1930",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1931",
      "fixed": false,
      "raw": "The name of the suggester."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1932",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "1933",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1934",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1935",
     "isReadOnly": false,
     "realPath": [
      "searchMode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1936",
      "fixed": false,
      "raw": "analyzingInfixMatching"
     },
     "deprecated": false,
     "documentation": {
      "$id": "1937",
      "fixed": false,
      "raw": "A value indicating the capabilities of the suggester."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "SuggesterSearchMode",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/Suggester-searchMode"
       ]
      },
      "x-ms-enum": {
       "name": "SuggesterSearchMode",
       "modelAsString": false,
       "values": [
        {
         "value": "analyzingInfixMatching",
         "name": "AnalyzingInfixMatching",
         "description": "Matches consecutive whole terms and prefixes in a field. For example, for the field 'The fastest brown fox', the queries 'fast' and 'fastest brow' would both match."
        }
       ]
      }
     },
     "isRequired": true,
     "isConstant": true,
     "name": {
      "$id": "1938",
      "fixed": false,
      "raw": "searchMode"
     },
     "serializedName": "searchMode",
     "modelType": {
      "$id": "1939",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1940",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1941",
     "isReadOnly": false,
     "realPath": [
      "sourceFields"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1942",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1943",
      "fixed": false,
      "raw": "The list of field names to which the suggester applies. Each field must be searchable."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1944",
      "fixed": false,
      "raw": "sourceFields"
     },
     "serializedName": "sourceFields",
     "modelType": {
      "$id": "1945",
      "$type": "SequenceType",
      "elementType": {
       "$id": "1946",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "1947",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "1948",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "Suggester",
   "documentation": "Defines how the Suggest API should apply to a group of fields in the index.",
   "containsConstantProperties": true,
   "name": {
    "$id": "1949",
    "fixed": false,
    "raw": "Suggester"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "Suggester",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/Suggester"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1950",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1951",
     "isReadOnly": false,
     "realPath": [
      "applicationId"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1952",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1953",
      "fixed": false,
      "raw": "An AAD Application ID that was granted the required access permissions to the Azure Key Vault that is to be used when encrypting your data at rest. The Application ID should not be confused with the Object ID for your AAD Application."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1954",
      "fixed": false,
      "raw": "applicationId"
     },
     "serializedName": "applicationId",
     "modelType": {
      "$id": "1955",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1956",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1957",
     "isReadOnly": false,
     "realPath": [
      "applicationSecret"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1958",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1959",
      "fixed": false,
      "raw": "The authentication key of the specified AAD application."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1960",
      "fixed": false,
      "raw": "applicationSecret"
     },
     "serializedName": "applicationSecret",
     "modelType": {
      "$id": "1961",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1962",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "AzureActiveDirectoryApplicationCredentials",
   "documentation": "Credentials of a registered application created for your search service, used for authenticated access to the encryption keys stored in Azure Key Vault.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1963",
    "fixed": false,
    "raw": "AzureActiveDirectoryApplicationCredentials"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "AzureActiveDirectoryApplicationCredentials",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/AzureActiveDirectoryApplicationCredentials"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1964",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1965",
     "isReadOnly": false,
     "realPath": [
      "keyVaultKeyName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1966",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1967",
      "fixed": false,
      "raw": "The name of your Azure Key Vault key to be used to encrypt your data at rest."
     },
     "extensions": {
      "x-ms-client-name": "keyName"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1968",
      "fixed": false,
      "raw": "keyVaultKeyName"
     },
     "serializedName": "keyVaultKeyName",
     "modelType": {
      "$id": "1969",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1970",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1971",
     "isReadOnly": false,
     "realPath": [
      "keyVaultKeyVersion"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1972",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1973",
      "fixed": false,
      "raw": "The version of your Azure Key Vault key to be used to encrypt your data at rest."
     },
     "extensions": {
      "x-ms-client-name": "keyVersion"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1974",
      "fixed": false,
      "raw": "keyVaultKeyVersion"
     },
     "serializedName": "keyVaultKeyVersion",
     "modelType": {
      "$id": "1975",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1976",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1977",
     "isReadOnly": false,
     "realPath": [
      "keyVaultUri"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1978",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1979",
      "fixed": false,
      "raw": "The URI of your Azure Key Vault, also referred to as DNS name, that contains the key to be used to encrypt your data at rest. An example URI might be https://my-keyvault-name.vault.azure.net."
     },
     "extensions": {
      "x-ms-client-name": "vaultUri"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1980",
      "fixed": false,
      "raw": "keyVaultUri"
     },
     "serializedName": "keyVaultUri",
     "modelType": {
      "$id": "1981",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1982",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1983",
     "isReadOnly": false,
     "realPath": [
      "accessCredentials"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1984",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1985",
      "fixed": false,
      "raw": "Optional Azure Active Directory credentials used for accessing your Azure Key Vault. Not required if using managed identity instead."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "1986",
      "fixed": false,
      "raw": "accessCredentials"
     },
     "serializedName": "accessCredentials",
     "modelType": {
      "$ref": "1950"
     }
    }
   ],
   "serializedName": "SearchResourceEncryptionKey",
   "documentation": "A customer-managed encryption key in Azure Key Vault. Keys that you create and manage can be used to encrypt or decrypt data-at-rest in Azure Cognitive Search, such as indexes and synonym maps.",
   "containsConstantProperties": false,
   "name": {
    "$id": "1987",
    "fixed": false,
    "raw": "SearchResourceEncryptionKey"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchResourceEncryptionKey",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchResourceEncryptionKey"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "1988",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "1989",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1990",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1991",
      "fixed": false,
      "raw": "The name of the index."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1992",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "1993",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "1994",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "1995",
     "isReadOnly": false,
     "realPath": [
      "fields"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "1996",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "1997",
      "fixed": false,
      "raw": "The fields of the index."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "1998",
      "fixed": false,
      "raw": "fields"
     },
     "serializedName": "fields",
     "modelType": {
      "$id": "1999",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1685"
      },
      "name": {
       "$id": "2000",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2001",
     "isReadOnly": false,
     "realPath": [
      "scoringProfiles"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2002",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2003",
      "fixed": false,
      "raw": "The scoring profiles for the index."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2004",
      "fixed": false,
      "raw": "scoringProfiles"
     },
     "serializedName": "scoringProfiles",
     "modelType": {
      "$id": "2005",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1881"
      },
      "name": {
       "$id": "2006",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2007",
     "isReadOnly": false,
     "realPath": [
      "defaultScoringProfile"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2008",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2009",
      "fixed": false,
      "raw": "The name of the scoring profile to use if none is specified in the query. If this property is not set and no scoring profile is specified in the query, then default scoring (tf-idf) will be used."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2010",
      "fixed": false,
      "raw": "defaultScoringProfile"
     },
     "serializedName": "defaultScoringProfile",
     "modelType": {
      "$id": "2011",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2012",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2013",
     "isReadOnly": false,
     "realPath": [
      "corsOptions"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2014",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2015",
      "fixed": false,
      "raw": "Options to control Cross-Origin Resource Sharing (CORS) for the index."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2016",
      "fixed": false,
      "raw": "corsOptions"
     },
     "serializedName": "corsOptions",
     "modelType": {
      "$ref": "1912"
     }
    },
    {
     "$id": "2017",
     "isReadOnly": false,
     "realPath": [
      "suggesters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2018",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2019",
      "fixed": false,
      "raw": "The suggesters for the index."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2020",
      "fixed": false,
      "raw": "suggesters"
     },
     "serializedName": "suggesters",
     "modelType": {
      "$id": "2021",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1928"
      },
      "name": {
       "$id": "2022",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2023",
     "isReadOnly": false,
     "realPath": [
      "analyzers"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2024",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2025",
      "fixed": false,
      "raw": "The analyzers for the index."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2026",
      "fixed": false,
      "raw": "analyzers"
     },
     "serializedName": "analyzers",
     "modelType": {
      "$id": "2027",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "221"
      },
      "name": {
       "$id": "2028",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2029",
     "isReadOnly": false,
     "realPath": [
      "tokenizers"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2030",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2031",
      "fixed": false,
      "raw": "The tokenizers for the index."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2032",
      "fixed": false,
      "raw": "tokenizers"
     },
     "serializedName": "tokenizers",
     "modelType": {
      "$id": "2033",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "311"
      },
      "name": {
       "$id": "2034",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2035",
     "isReadOnly": false,
     "realPath": [
      "tokenFilters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2036",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2037",
      "fixed": false,
      "raw": "The token filters for the index."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2038",
      "fixed": false,
      "raw": "tokenFilters"
     },
     "serializedName": "tokenFilters",
     "modelType": {
      "$id": "2039",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "597"
      },
      "name": {
       "$id": "2040",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2041",
     "isReadOnly": false,
     "realPath": [
      "charFilters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2042",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2043",
      "fixed": false,
      "raw": "The character filters for the index."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2044",
      "fixed": false,
      "raw": "charFilters"
     },
     "serializedName": "charFilters",
     "modelType": {
      "$id": "2045",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1195"
      },
      "name": {
       "$id": "2046",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2047",
     "isReadOnly": false,
     "realPath": [
      "encryptionKey"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2048",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2049",
      "fixed": false,
      "raw": "A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2050",
      "fixed": false,
      "raw": "encryptionKey"
     },
     "serializedName": "encryptionKey",
     "modelType": {
      "$ref": "1964"
     }
    },
    {
     "$id": "2051",
     "isReadOnly": false,
     "realPath": [
      "similarity"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2052",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2053",
      "fixed": false,
      "raw": "The type of similarity algorithm to be used when scoring and ranking the documents matching a search query. The similarity algorithm can only be defined at index creation time and cannot be modified on existing indexes. If null, the ClassicSimilarity algorithm is used."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2054",
      "fixed": false,
      "raw": "similarity"
     },
     "serializedName": "similarity",
     "modelType": {
      "$ref": "1227"
     }
    },
    {
     "$id": "2055",
     "isReadOnly": false,
     "realPath": [
      "@odata.etag"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2056",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2057",
      "fixed": false,
      "raw": "The ETag of the index."
     },
     "extensions": {
      "x-ms-client-name": "ETag"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2058",
      "fixed": false,
      "raw": "@odata.etag"
     },
     "serializedName": "@odata.etag",
     "modelType": {
      "$id": "2059",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2060",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SearchIndex",
   "documentation": "Represents a search index definition, which describes the fields and search behavior of an index.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2061",
    "fixed": false,
    "raw": "SearchIndex"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchIndex",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchIndex"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2062",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2063",
     "isReadOnly": true,
     "realPath": [
      "documentCount"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2064",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2065",
      "fixed": false,
      "raw": "The number of documents in the index."
     },
     "extensions": {
      "x-nullable": false
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2066",
      "fixed": false,
      "raw": "documentCount"
     },
     "serializedName": "documentCount",
     "modelType": {
      "$id": "2067",
      "$type": "PrimaryType",
      "format": "int64",
      "knownPrimaryType": "long",
      "name": {
       "$id": "2068",
       "fixed": false,
       "raw": "Long"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2069",
     "isReadOnly": true,
     "realPath": [
      "storageSize"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2070",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2071",
      "fixed": false,
      "raw": "The amount of storage in bytes consumed by the index."
     },
     "extensions": {
      "x-nullable": false
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2072",
      "fixed": false,
      "raw": "storageSize"
     },
     "serializedName": "storageSize",
     "modelType": {
      "$id": "2073",
      "$type": "PrimaryType",
      "format": "int64",
      "knownPrimaryType": "long",
      "name": {
       "$id": "2074",
       "fixed": false,
       "raw": "Long"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "GetIndexStatisticsResult",
   "documentation": "Statistics for a given index. Statistics are collected periodically and are not guaranteed to always be up-to-date.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2075",
    "fixed": false,
    "raw": "GetIndexStatisticsResult"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "GetIndexStatisticsResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/GetIndexStatisticsResult"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2076",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2077",
     "isReadOnly": true,
     "realPath": [
      "value"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2078",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2079",
      "fixed": false,
      "raw": "The indexes in the Search service."
     },
     "extensions": {
      "x-ms-client-name": "Indexes"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2080",
      "fixed": false,
      "raw": "value"
     },
     "serializedName": "value",
     "modelType": {
      "$id": "2081",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "1988"
      },
      "name": {
       "$id": "2082",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "ListIndexesResult",
   "documentation": "Response from a List Indexes request. If successful, it includes the full definitions of all indexes.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2083",
    "fixed": false,
    "raw": "ListIndexesResult"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ListIndexesResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ListIndexesResult"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2084",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2085",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2086",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2087",
      "fixed": false,
      "raw": "The name of the input."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2088",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "2089",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2090",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2091",
     "isReadOnly": false,
     "realPath": [
      "source"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2092",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2093",
      "fixed": false,
      "raw": "The source of the input."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2094",
      "fixed": false,
      "raw": "source"
     },
     "serializedName": "source",
     "modelType": {
      "$id": "2095",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2096",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2097",
     "isReadOnly": false,
     "realPath": [
      "sourceContext"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2098",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2099",
      "fixed": false,
      "raw": "The source context used for selecting recursive inputs."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2100",
      "fixed": false,
      "raw": "sourceContext"
     },
     "serializedName": "sourceContext",
     "modelType": {
      "$id": "2101",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2102",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2103",
     "isReadOnly": false,
     "realPath": [
      "inputs"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2104",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2105",
      "fixed": false,
      "raw": "The recursive inputs used when creating a complex type."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2106",
      "fixed": false,
      "raw": "inputs"
     },
     "serializedName": "inputs",
     "modelType": {
      "$id": "2107",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "2084"
      },
      "name": {
       "$id": "2108",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "InputFieldMappingEntry",
   "documentation": "Input field mapping for a skill.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2109",
    "fixed": false,
    "raw": "InputFieldMappingEntry"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "InputFieldMappingEntry",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/InputFieldMappingEntry"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2110",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2111",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2112",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2113",
      "fixed": false,
      "raw": "The name of the output defined by the skill."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2114",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "2115",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2116",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2117",
     "isReadOnly": false,
     "realPath": [
      "targetName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2118",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2119",
      "fixed": false,
      "raw": "The target name of the output. It is optional and default to name."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2120",
      "fixed": false,
      "raw": "targetName"
     },
     "serializedName": "targetName",
     "modelType": {
      "$id": "2121",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2122",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "OutputFieldMappingEntry",
   "documentation": "Output field mapping for a skill.",
   "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/naming-rules",
   "containsConstantProperties": false,
   "name": {
    "$id": "2123",
    "fixed": false,
    "raw": "OutputFieldMappingEntry"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "OutputFieldMappingEntry",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/OutputFieldMappingEntry"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2124",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2125",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2126",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2127",
      "fixed": false,
      "raw": "The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2128",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "2129",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2130",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2131",
     "isReadOnly": false,
     "realPath": [
      "description"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2132",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2133",
      "fixed": false,
      "raw": "The description of the skill which describes the inputs, outputs, and usage of the skill."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2134",
      "fixed": false,
      "raw": "description"
     },
     "serializedName": "description",
     "modelType": {
      "$id": "2135",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2136",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2137",
     "isReadOnly": false,
     "realPath": [
      "context"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2138",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2139",
      "fixed": false,
      "raw": "Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2140",
      "fixed": false,
      "raw": "context"
     },
     "serializedName": "context",
     "modelType": {
      "$id": "2141",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2142",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2143",
     "isReadOnly": false,
     "realPath": [
      "inputs"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2144",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2145",
      "fixed": false,
      "raw": "Inputs of the skills could be a column in the source data set, or the output of an upstream skill."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2146",
      "fixed": false,
      "raw": "inputs"
     },
     "serializedName": "inputs",
     "modelType": {
      "$id": "2147",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "2084"
      },
      "name": {
       "$id": "2148",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2149",
     "isReadOnly": false,
     "realPath": [
      "outputs"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2150",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2151",
      "fixed": false,
      "raw": "The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2152",
      "fixed": false,
      "raw": "outputs"
     },
     "serializedName": "outputs",
     "modelType": {
      "$id": "2153",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "2110"
      },
      "name": {
       "$id": "2154",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SearchIndexerSkill",
   "polymorphicDiscriminator": "@odata.type",
   "documentation": "Base type for skills.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-predefined-skills",
   "containsConstantProperties": false,
   "name": {
    "$id": "2155",
    "fixed": false,
    "raw": "SearchIndexerSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchIndexerSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchIndexerSkill"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2156",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2157",
     "isReadOnly": false,
     "realPath": [
      "description"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2158",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2159",
      "fixed": false,
      "raw": "Description of the cognitive service resource attached to a skillset."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2160",
      "fixed": false,
      "raw": "description"
     },
     "serializedName": "description",
     "modelType": {
      "$id": "2161",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2162",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "CognitiveServicesAccount",
   "polymorphicDiscriminator": "@odata.type",
   "documentation": "Base type for describing any cognitive service resource attached to a skillset.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2163",
    "fixed": false,
    "raw": "CognitiveServicesAccount"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "CognitiveServicesAccount",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/CognitiveServicesAccount"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2164",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2165",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2166",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2167",
      "fixed": false,
      "raw": "The name of the skillset."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2168",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "2169",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2170",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2171",
     "isReadOnly": false,
     "realPath": [
      "description"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2172",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2173",
      "fixed": false,
      "raw": "The description of the skillset."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2174",
      "fixed": false,
      "raw": "description"
     },
     "serializedName": "description",
     "modelType": {
      "$id": "2175",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2176",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2177",
     "isReadOnly": false,
     "realPath": [
      "skills"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2178",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2179",
      "fixed": false,
      "raw": "A list of skills in the skillset."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2180",
      "fixed": false,
      "raw": "skills"
     },
     "serializedName": "skills",
     "modelType": {
      "$id": "2181",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "2124"
      },
      "name": {
       "$id": "2182",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2183",
     "isReadOnly": false,
     "realPath": [
      "cognitiveServices"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2184",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2185",
      "fixed": false,
      "raw": "Details about cognitive services to be used when running skills."
     },
     "extensions": {
      "x-ms-client-name": "CognitiveServicesAccount"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2186",
      "fixed": false,
      "raw": "cognitiveServices"
     },
     "serializedName": "cognitiveServices",
     "modelType": {
      "$ref": "2156"
     }
    },
    {
     "$id": "2187",
     "isReadOnly": false,
     "realPath": [
      "@odata.etag"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2188",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2189",
      "fixed": false,
      "raw": "The ETag of the skillset."
     },
     "extensions": {
      "x-ms-client-name": "ETag"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2190",
      "fixed": false,
      "raw": "@odata.etag"
     },
     "serializedName": "@odata.etag",
     "modelType": {
      "$id": "2191",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2192",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SearchIndexerSkillset",
   "documentation": "A list of skills.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-tutorial-blob",
   "containsConstantProperties": false,
   "name": {
    "$id": "2193",
    "fixed": false,
    "raw": "SearchIndexerSkillset"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchIndexerSkillset",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchIndexerSkillset"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2194",
   "$type": "CompositeType",
   "serializedName": "#Microsoft.Azure.Search.DefaultCognitiveServices",
   "baseModelType": {
    "$ref": "2156"
   },
   "documentation": "An empty object that represents the default cognitive service resource for a skillset.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2195",
    "fixed": false,
    "raw": "DefaultCognitiveServicesAccount"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "DefaultCognitiveServicesAccount",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/DefaultCognitiveServicesAccount"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.DefaultCognitiveServices"
   },
   "deprecated": false
  },
  {
   "$id": "2196",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2197",
     "isReadOnly": false,
     "realPath": [
      "key"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2198",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2199",
      "fixed": false,
      "raw": "The key used to provision the cognitive service resource attached to a skillset."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2200",
      "fixed": false,
      "raw": "key"
     },
     "serializedName": "key",
     "modelType": {
      "$id": "2201",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2202",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Azure.Search.CognitiveServicesByKey",
   "baseModelType": {
    "$ref": "2156"
   },
   "documentation": "A cognitive service resource provisioned with a key that is attached to a skillset.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2203",
    "fixed": false,
    "raw": "CognitiveServicesAccountKey"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "CognitiveServicesAccountKey",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/CognitiveServicesAccountKey"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Azure.Search.CognitiveServicesByKey"
   },
   "deprecated": false
  },
  {
   "$id": "2204",
   "$type": "CompositeType",
   "serializedName": "#Microsoft.Skills.Util.ConditionalSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "A skill that enables scenarios that require a Boolean operation to determine the data to assign to an output.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-skill-conditional",
   "containsConstantProperties": false,
   "name": {
    "$id": "2205",
    "fixed": false,
    "raw": "ConditionalSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ConditionalSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ConditionalSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Util.ConditionalSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2206",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2207",
     "isReadOnly": false,
     "realPath": [
      "defaultLanguageCode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2208",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2209",
      "fixed": false,
      "raw": "A value indicating which language code to use. Default is en."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "KeyPhraseExtractionSkillLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/KeyPhraseExtractionSkillLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "KeyPhraseExtractionSkillLanguage",
       "modelAsString": true,
       "values": [
        {
         "value": "da",
         "description": "Danish"
        },
        {
         "value": "nl",
         "description": "Dutch"
        },
        {
         "value": "en",
         "description": "English"
        },
        {
         "value": "fi",
         "description": "Finnish"
        },
        {
         "value": "fr",
         "description": "French"
        },
        {
         "value": "de",
         "description": "German"
        },
        {
         "value": "it",
         "description": "Italian"
        },
        {
         "value": "ja",
         "description": "Japanese"
        },
        {
         "value": "ko",
         "description": "Korean"
        },
        {
         "value": "no",
         "description": "Norwegian (Bokmaal)"
        },
        {
         "value": "pl",
         "description": "Polish"
        },
        {
         "value": "pt-PT",
         "description": "Portuguese (Portugal)"
        },
        {
         "value": "pt-BR",
         "description": "Portuguese (Brazil)"
        },
        {
         "value": "ru",
         "description": "Russian"
        },
        {
         "value": "es",
         "description": "Spanish"
        },
        {
         "value": "sv",
         "description": "Swedish"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2210",
      "fixed": false,
      "raw": "defaultLanguageCode"
     },
     "serializedName": "defaultLanguageCode",
     "modelType": {
      "$id": "2211",
      "$type": "EnumType",
      "values": [
       {
        "$id": "2212",
        "description": "Danish",
        "name": "da",
        "serializedName": "da"
       },
       {
        "$id": "2213",
        "description": "Dutch",
        "name": "nl",
        "serializedName": "nl"
       },
       {
        "$id": "2214",
        "description": "English",
        "name": "en",
        "serializedName": "en"
       },
       {
        "$id": "2215",
        "description": "Finnish",
        "name": "fi",
        "serializedName": "fi"
       },
       {
        "$id": "2216",
        "description": "French",
        "name": "fr",
        "serializedName": "fr"
       },
       {
        "$id": "2217",
        "description": "German",
        "name": "de",
        "serializedName": "de"
       },
       {
        "$id": "2218",
        "description": "Italian",
        "name": "it",
        "serializedName": "it"
       },
       {
        "$id": "2219",
        "description": "Japanese",
        "name": "ja",
        "serializedName": "ja"
       },
       {
        "$id": "2220",
        "description": "Korean",
        "name": "ko",
        "serializedName": "ko"
       },
       {
        "$id": "2221",
        "description": "Norwegian (Bokmaal)",
        "name": "no",
        "serializedName": "no"
       },
       {
        "$id": "2222",
        "description": "Polish",
        "name": "pl",
        "serializedName": "pl"
       },
       {
        "$id": "2223",
        "description": "Portuguese (Portugal)",
        "name": "pt-PT",
        "serializedName": "pt-PT"
       },
       {
        "$id": "2224",
        "description": "Portuguese (Brazil)",
        "name": "pt-BR",
        "serializedName": "pt-BR"
       },
       {
        "$id": "2225",
        "description": "Russian",
        "name": "ru",
        "serializedName": "ru"
       },
       {
        "$id": "2226",
        "description": "Spanish",
        "name": "es",
        "serializedName": "es"
       },
       {
        "$id": "2227",
        "description": "Swedish",
        "name": "sv",
        "serializedName": "sv"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "2228",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "2229",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2230",
       "fixed": false,
       "raw": "KeyPhraseExtractionSkillLanguage"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2231",
     "isReadOnly": false,
     "realPath": [
      "maxKeyPhraseCount"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2232",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2233",
      "fixed": false,
      "raw": "A number indicating how many key phrases to return. If absent, all identified key phrases will be returned."
     },
     "extensions": {
      "x-nullable": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2234",
      "fixed": false,
      "raw": "maxKeyPhraseCount"
     },
     "serializedName": "maxKeyPhraseCount",
     "modelType": {
      "$id": "2235",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "2236",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Skills.Text.KeyPhraseExtractionSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "A skill that uses text analytics for key phrase extraction.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-skill-keyphrases",
   "containsConstantProperties": false,
   "name": {
    "$id": "2237",
    "fixed": false,
    "raw": "KeyPhraseExtractionSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "KeyPhraseExtractionSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/KeyPhraseExtractionSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Text.KeyPhraseExtractionSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2238",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2239",
     "isReadOnly": false,
     "realPath": [
      "textExtractionAlgorithm"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2240",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2241",
      "fixed": false,
      "raw": "A value indicating which algorithm to use for extracting text. Default is printed."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "TextExtractionAlgorithm",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/TextExtractionAlgorithm"
       ]
      },
      "x-ms-enum": {
       "name": "TextExtractionAlgorithm",
       "modelAsString": false,
       "values": [
        {
         "value": "printed",
         "name": "Printed",
         "description": "An algorithm suitable for printed text."
        },
        {
         "value": "handwritten",
         "name": "Handwritten",
         "description": "An algorithm suitable for handwritten text."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2242",
      "fixed": false,
      "raw": "textExtractionAlgorithm"
     },
     "serializedName": "textExtractionAlgorithm",
     "modelType": {
      "$id": "2243",
      "$type": "EnumType",
      "values": [
       {
        "$id": "2244",
        "description": "An algorithm suitable for printed text.",
        "name": "Printed",
        "serializedName": "printed"
       },
       {
        "$id": "2245",
        "description": "An algorithm suitable for handwritten text.",
        "name": "Handwritten",
        "serializedName": "handwritten"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "2246",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "2247",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2248",
       "fixed": false,
       "raw": "TextExtractionAlgorithm"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2249",
     "isReadOnly": false,
     "realPath": [
      "defaultLanguageCode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2250",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2251",
      "fixed": false,
      "raw": "A value indicating which language code to use. Default is en."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "OcrSkillLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/OcrSkillLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "OcrSkillLanguage",
       "modelAsString": true,
       "values": [
        {
         "value": "zh-Hans",
         "description": "Chinese-Simplified"
        },
        {
         "value": "zh-Hant",
         "description": "Chinese-Traditional"
        },
        {
         "value": "cs",
         "description": "Czech"
        },
        {
         "value": "da",
         "description": "Danish"
        },
        {
         "value": "nl",
         "description": "Dutch"
        },
        {
         "value": "en",
         "description": "English"
        },
        {
         "value": "fi",
         "description": "Finnish"
        },
        {
         "value": "fr",
         "description": "French"
        },
        {
         "value": "de",
         "description": "German"
        },
        {
         "value": "el",
         "description": "Greek"
        },
        {
         "value": "hu",
         "description": "Hungarian"
        },
        {
         "value": "it",
         "description": "Italian"
        },
        {
         "value": "ja",
         "description": "Japanese"
        },
        {
         "value": "ko",
         "description": "Korean"
        },
        {
         "value": "nb",
         "description": "Norwegian (Bokmaal)"
        },
        {
         "value": "pl",
         "description": "Polish"
        },
        {
         "value": "pt",
         "description": "Portuguese"
        },
        {
         "value": "ru",
         "description": "Russian"
        },
        {
         "value": "es",
         "description": "Spanish"
        },
        {
         "value": "sv",
         "description": "Swedish"
        },
        {
         "value": "tr",
         "description": "Turkish"
        },
        {
         "value": "ar",
         "description": "Arabic"
        },
        {
         "value": "ro",
         "description": "Romanian"
        },
        {
         "value": "sr-Cyrl",
         "description": "Serbian (Cyrillic, Serbia)"
        },
        {
         "value": "sr-Latn",
         "description": "Serbian (Latin, Serbia)"
        },
        {
         "value": "sk",
         "description": "Slovak"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2252",
      "fixed": false,
      "raw": "defaultLanguageCode"
     },
     "serializedName": "defaultLanguageCode",
     "modelType": {
      "$id": "2253",
      "$type": "EnumType",
      "values": [
       {
        "$id": "2254",
        "description": "Chinese-Simplified",
        "name": "zh-Hans",
        "serializedName": "zh-Hans"
       },
       {
        "$id": "2255",
        "description": "Chinese-Traditional",
        "name": "zh-Hant",
        "serializedName": "zh-Hant"
       },
       {
        "$id": "2256",
        "description": "Czech",
        "name": "cs",
        "serializedName": "cs"
       },
       {
        "$id": "2257",
        "description": "Danish",
        "name": "da",
        "serializedName": "da"
       },
       {
        "$id": "2258",
        "description": "Dutch",
        "name": "nl",
        "serializedName": "nl"
       },
       {
        "$id": "2259",
        "description": "English",
        "name": "en",
        "serializedName": "en"
       },
       {
        "$id": "2260",
        "description": "Finnish",
        "name": "fi",
        "serializedName": "fi"
       },
       {
        "$id": "2261",
        "description": "French",
        "name": "fr",
        "serializedName": "fr"
       },
       {
        "$id": "2262",
        "description": "German",
        "name": "de",
        "serializedName": "de"
       },
       {
        "$id": "2263",
        "description": "Greek",
        "name": "el",
        "serializedName": "el"
       },
       {
        "$id": "2264",
        "description": "Hungarian",
        "name": "hu",
        "serializedName": "hu"
       },
       {
        "$id": "2265",
        "description": "Italian",
        "name": "it",
        "serializedName": "it"
       },
       {
        "$id": "2266",
        "description": "Japanese",
        "name": "ja",
        "serializedName": "ja"
       },
       {
        "$id": "2267",
        "description": "Korean",
        "name": "ko",
        "serializedName": "ko"
       },
       {
        "$id": "2268",
        "description": "Norwegian (Bokmaal)",
        "name": "nb",
        "serializedName": "nb"
       },
       {
        "$id": "2269",
        "description": "Polish",
        "name": "pl",
        "serializedName": "pl"
       },
       {
        "$id": "2270",
        "description": "Portuguese",
        "name": "pt",
        "serializedName": "pt"
       },
       {
        "$id": "2271",
        "description": "Russian",
        "name": "ru",
        "serializedName": "ru"
       },
       {
        "$id": "2272",
        "description": "Spanish",
        "name": "es",
        "serializedName": "es"
       },
       {
        "$id": "2273",
        "description": "Swedish",
        "name": "sv",
        "serializedName": "sv"
       },
       {
        "$id": "2274",
        "description": "Turkish",
        "name": "tr",
        "serializedName": "tr"
       },
       {
        "$id": "2275",
        "description": "Arabic",
        "name": "ar",
        "serializedName": "ar"
       },
       {
        "$id": "2276",
        "description": "Romanian",
        "name": "ro",
        "serializedName": "ro"
       },
       {
        "$id": "2277",
        "description": "Serbian (Cyrillic, Serbia)",
        "name": "sr-Cyrl",
        "serializedName": "sr-Cyrl"
       },
       {
        "$id": "2278",
        "description": "Serbian (Latin, Serbia)",
        "name": "sr-Latn",
        "serializedName": "sr-Latn"
       },
       {
        "$id": "2279",
        "description": "Slovak",
        "name": "sk",
        "serializedName": "sk"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "2280",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "2281",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2282",
       "fixed": false,
       "raw": "OcrSkillLanguage"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2283",
     "isReadOnly": false,
     "realPath": [
      "detectOrientation"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2284",
      "fixed": false,
      "raw": "false"
     },
     "deprecated": false,
     "documentation": {
      "$id": "2285",
      "fixed": false,
      "raw": "A value indicating to turn orientation detection on or not. Default is false."
     },
     "extensions": {
      "x-ms-client-name": "ShouldDetectOrientation"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2286",
      "fixed": false,
      "raw": "detectOrientation"
     },
     "serializedName": "detectOrientation",
     "modelType": {
      "$id": "2287",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "2288",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Skills.Vision.OcrSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "A skill that extracts text from image files.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-skill-ocr",
   "containsConstantProperties": false,
   "name": {
    "$id": "2289",
    "fixed": false,
    "raw": "OcrSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "OcrSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/OcrSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Vision.OcrSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2290",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2291",
     "isReadOnly": false,
     "realPath": [
      "defaultLanguageCode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2292",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2293",
      "fixed": false,
      "raw": "A value indicating which language code to use. Default is en."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "ImageAnalysisSkillLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ImageAnalysisSkillLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "ImageAnalysisSkillLanguage",
       "modelAsString": true,
       "values": [
        {
         "value": "en",
         "description": "English"
        },
        {
         "value": "es",
         "description": "Spanish"
        },
        {
         "value": "ja",
         "description": "Japanese"
        },
        {
         "value": "pt",
         "description": "Portuguese"
        },
        {
         "value": "zh",
         "description": "Chinese"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2294",
      "fixed": false,
      "raw": "defaultLanguageCode"
     },
     "serializedName": "defaultLanguageCode",
     "modelType": {
      "$id": "2295",
      "$type": "EnumType",
      "values": [
       {
        "$id": "2296",
        "description": "English",
        "name": "en",
        "serializedName": "en"
       },
       {
        "$id": "2297",
        "description": "Spanish",
        "name": "es",
        "serializedName": "es"
       },
       {
        "$id": "2298",
        "description": "Japanese",
        "name": "ja",
        "serializedName": "ja"
       },
       {
        "$id": "2299",
        "description": "Portuguese",
        "name": "pt",
        "serializedName": "pt"
       },
       {
        "$id": "2300",
        "description": "Chinese",
        "name": "zh",
        "serializedName": "zh"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "2301",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "2302",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2303",
       "fixed": false,
       "raw": "ImageAnalysisSkillLanguage"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2304",
     "isReadOnly": false,
     "realPath": [
      "visualFeatures"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2305",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2306",
      "fixed": false,
      "raw": "A list of visual features."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2307",
      "fixed": false,
      "raw": "visualFeatures"
     },
     "serializedName": "visualFeatures",
     "modelType": {
      "$id": "2308",
      "$type": "SequenceType",
      "elementType": {
       "$id": "2309",
       "$type": "EnumType",
       "values": [
        {
         "$id": "2310",
         "description": "Visual features recognized as adult persons.",
         "name": "Adult",
         "serializedName": "adult"
        },
        {
         "$id": "2311",
         "description": "Visual features recognized as commercial brands.",
         "name": "Brands",
         "serializedName": "brands"
        },
        {
         "$id": "2312",
         "description": "Categories.",
         "name": "Categories",
         "serializedName": "categories"
        },
        {
         "$id": "2313",
         "description": "Description.",
         "name": "Description",
         "serializedName": "description"
        },
        {
         "$id": "2314",
         "description": "Visual features recognized as people faces.",
         "name": "Faces",
         "serializedName": "faces"
        },
        {
         "$id": "2315",
         "description": "Visual features recognized as objects.",
         "name": "Objects",
         "serializedName": "objects"
        },
        {
         "$id": "2316",
         "description": "Tags.",
         "name": "Tags",
         "serializedName": "tags"
        }
       ],
       "oldModelAsString": false,
       "modelAsString": false,
       "underlyingType": {
        "$id": "2317",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "2318",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       },
       "name": {
        "$id": "2319",
        "fixed": false,
        "raw": "VisualFeature"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2320",
       "fixed": false
      },
      "extensions": {
       "x-nullable": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2321",
     "isReadOnly": false,
     "realPath": [
      "details"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2322",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2323",
      "fixed": false,
      "raw": "A string indicating which domain-specific details to return."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2324",
      "fixed": false,
      "raw": "details"
     },
     "serializedName": "details",
     "modelType": {
      "$id": "2325",
      "$type": "SequenceType",
      "elementType": {
       "$id": "2326",
       "$type": "EnumType",
       "values": [
        {
         "$id": "2327",
         "description": "Details recognized as celebrities.",
         "name": "Celebrities",
         "serializedName": "celebrities"
        },
        {
         "$id": "2328",
         "description": "Details recognized as landmarks.",
         "name": "Landmarks",
         "serializedName": "landmarks"
        }
       ],
       "oldModelAsString": false,
       "modelAsString": false,
       "underlyingType": {
        "$id": "2329",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "2330",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       },
       "name": {
        "$id": "2331",
        "fixed": false,
        "raw": "ImageDetail"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2332",
       "fixed": false
      },
      "extensions": {
       "x-nullable": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Skills.Vision.ImageAnalysisSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "A skill that analyzes image files. It extracts a rich set of visual features based on the image content.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-skill-image-analysis",
   "containsConstantProperties": false,
   "name": {
    "$id": "2333",
    "fixed": false,
    "raw": "ImageAnalysisSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ImageAnalysisSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ImageAnalysisSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Vision.ImageAnalysisSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2334",
   "$type": "CompositeType",
   "serializedName": "#Microsoft.Skills.Text.LanguageDetectionSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "A skill that detects the language of input text and reports a single language code for every document submitted on the request. The language code is paired with a score indicating the confidence of the analysis.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-skill-language-detection",
   "containsConstantProperties": false,
   "name": {
    "$id": "2335",
    "fixed": false,
    "raw": "LanguageDetectionSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "LanguageDetectionSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/LanguageDetectionSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Text.LanguageDetectionSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2336",
   "$type": "CompositeType",
   "serializedName": "#Microsoft.Skills.Util.ShaperSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "A skill for reshaping the outputs. It creates a complex type to support composite fields (also known as multipart fields).",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-skill-shaper",
   "containsConstantProperties": false,
   "name": {
    "$id": "2337",
    "fixed": false,
    "raw": "ShaperSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ShaperSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ShaperSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Util.ShaperSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2338",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2339",
     "isReadOnly": false,
     "realPath": [
      "insertPreTag"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2340",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2341",
      "fixed": false,
      "raw": "The tag indicates the start of the merged text. By default, the tag is an empty space."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2342",
      "fixed": false,
      "raw": "insertPreTag"
     },
     "serializedName": "insertPreTag",
     "modelType": {
      "$id": "2343",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2344",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2345",
     "isReadOnly": false,
     "realPath": [
      "insertPostTag"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2346",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2347",
      "fixed": false,
      "raw": "The tag indicates the end of the merged text. By default, the tag is an empty space."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2348",
      "fixed": false,
      "raw": "insertPostTag"
     },
     "serializedName": "insertPostTag",
     "modelType": {
      "$id": "2349",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2350",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Skills.Text.MergeSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "A skill for merging two or more strings into a single unified string, with an optional user-defined delimiter separating each component part.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-skill-textmerger",
   "containsConstantProperties": false,
   "name": {
    "$id": "2351",
    "fixed": false,
    "raw": "MergeSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "MergeSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/MergeSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Text.MergeSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2352",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2353",
     "isReadOnly": false,
     "realPath": [
      "categories"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2354",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2355",
      "fixed": false,
      "raw": "A list of entity categories that should be extracted."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2356",
      "fixed": false,
      "raw": "categories"
     },
     "serializedName": "categories",
     "modelType": {
      "$id": "2357",
      "$type": "SequenceType",
      "elementType": {
       "$id": "2358",
       "$type": "EnumType",
       "values": [
        {
         "$id": "2359",
         "description": "Entities describing a physical location.",
         "name": "Location",
         "serializedName": "location"
        },
        {
         "$id": "2360",
         "description": "Entities describing an organization.",
         "name": "Organization",
         "serializedName": "organization"
        },
        {
         "$id": "2361",
         "description": "Entities describing a person.",
         "name": "Person",
         "serializedName": "person"
        },
        {
         "$id": "2362",
         "description": "Entities describing a quantity.",
         "name": "Quantity",
         "serializedName": "quantity"
        },
        {
         "$id": "2363",
         "description": "Entities describing a date and time.",
         "name": "Datetime",
         "serializedName": "datetime"
        },
        {
         "$id": "2364",
         "description": "Entities describing a URL.",
         "name": "Url",
         "serializedName": "url"
        },
        {
         "$id": "2365",
         "description": "Entities describing an email address.",
         "name": "Email",
         "serializedName": "email"
        }
       ],
       "oldModelAsString": false,
       "modelAsString": false,
       "underlyingType": {
        "$id": "2366",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "2367",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       },
       "name": {
        "$id": "2368",
        "fixed": false,
        "raw": "EntityCategory"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2369",
       "fixed": false
      },
      "extensions": {
       "x-nullable": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2370",
     "isReadOnly": false,
     "realPath": [
      "defaultLanguageCode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2371",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2372",
      "fixed": false,
      "raw": "A value indicating which language code to use. Default is en."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "EntityRecognitionSkillLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/EntityRecognitionSkillLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "EntityRecognitionSkillLanguage",
       "modelAsString": true,
       "values": [
        {
         "value": "ar",
         "description": "Arabic"
        },
        {
         "value": "cs",
         "description": "Czech"
        },
        {
         "value": "zh-Hans",
         "description": "Chinese-Simplified"
        },
        {
         "value": "zh-Hant",
         "description": "Chinese-Traditional"
        },
        {
         "value": "da",
         "description": "Danish"
        },
        {
         "value": "nl",
         "description": "Dutch"
        },
        {
         "value": "en",
         "description": "English"
        },
        {
         "value": "fi",
         "description": "Finnish"
        },
        {
         "value": "fr",
         "description": "French"
        },
        {
         "value": "de",
         "description": "German"
        },
        {
         "value": "el",
         "description": "Greek"
        },
        {
         "value": "hu",
         "description": "Hungarian"
        },
        {
         "value": "it",
         "description": "Italian"
        },
        {
         "value": "ja",
         "description": "Japanese"
        },
        {
         "value": "ko",
         "description": "Korean"
        },
        {
         "value": "no",
         "description": "Norwegian (Bokmaal)"
        },
        {
         "value": "pl",
         "description": "Polish"
        },
        {
         "value": "pt-PT",
         "description": "Portuguese (Portugal)"
        },
        {
         "value": "pt-BR",
         "description": "Portuguese (Brazil)"
        },
        {
         "value": "ru",
         "description": "Russian"
        },
        {
         "value": "es",
         "description": "Spanish"
        },
        {
         "value": "sv",
         "description": "Swedish"
        },
        {
         "value": "tr",
         "description": "Turkish"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2373",
      "fixed": false,
      "raw": "defaultLanguageCode"
     },
     "serializedName": "defaultLanguageCode",
     "modelType": {
      "$id": "2374",
      "$type": "EnumType",
      "values": [
       {
        "$id": "2375",
        "description": "Arabic",
        "name": "ar",
        "serializedName": "ar"
       },
       {
        "$id": "2376",
        "description": "Czech",
        "name": "cs",
        "serializedName": "cs"
       },
       {
        "$id": "2377",
        "description": "Chinese-Simplified",
        "name": "zh-Hans",
        "serializedName": "zh-Hans"
       },
       {
        "$id": "2378",
        "description": "Chinese-Traditional",
        "name": "zh-Hant",
        "serializedName": "zh-Hant"
       },
       {
        "$id": "2379",
        "description": "Danish",
        "name": "da",
        "serializedName": "da"
       },
       {
        "$id": "2380",
        "description": "Dutch",
        "name": "nl",
        "serializedName": "nl"
       },
       {
        "$id": "2381",
        "description": "English",
        "name": "en",
        "serializedName": "en"
       },
       {
        "$id": "2382",
        "description": "Finnish",
        "name": "fi",
        "serializedName": "fi"
       },
       {
        "$id": "2383",
        "description": "French",
        "name": "fr",
        "serializedName": "fr"
       },
       {
        "$id": "2384",
        "description": "German",
        "name": "de",
        "serializedName": "de"
       },
       {
        "$id": "2385",
        "description": "Greek",
        "name": "el",
        "serializedName": "el"
       },
       {
        "$id": "2386",
        "description": "Hungarian",
        "name": "hu",
        "serializedName": "hu"
       },
       {
        "$id": "2387",
        "description": "Italian",
        "name": "it",
        "serializedName": "it"
       },
       {
        "$id": "2388",
        "description": "Japanese",
        "name": "ja",
        "serializedName": "ja"
       },
       {
        "$id": "2389",
        "description": "Korean",
        "name": "ko",
        "serializedName": "ko"
       },
       {
        "$id": "2390",
        "description": "Norwegian (Bokmaal)",
        "name": "no",
        "serializedName": "no"
       },
       {
        "$id": "2391",
        "description": "Polish",
        "name": "pl",
        "serializedName": "pl"
       },
       {
        "$id": "2392",
        "description": "Portuguese (Portugal)",
        "name": "pt-PT",
        "serializedName": "pt-PT"
       },
       {
        "$id": "2393",
        "description": "Portuguese (Brazil)",
        "name": "pt-BR",
        "serializedName": "pt-BR"
       },
       {
        "$id": "2394",
        "description": "Russian",
        "name": "ru",
        "serializedName": "ru"
       },
       {
        "$id": "2395",
        "description": "Spanish",
        "name": "es",
        "serializedName": "es"
       },
       {
        "$id": "2396",
        "description": "Swedish",
        "name": "sv",
        "serializedName": "sv"
       },
       {
        "$id": "2397",
        "description": "Turkish",
        "name": "tr",
        "serializedName": "tr"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "2398",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "2399",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2400",
       "fixed": false,
       "raw": "EntityRecognitionSkillLanguage"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2401",
     "isReadOnly": false,
     "realPath": [
      "includeTypelessEntities"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2402",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2403",
      "fixed": false,
      "raw": "Determines whether or not to include entities which are well known but don't conform to a pre-defined type. If this configuration is not set (default), set to null or set to false, entities which don't conform to one of the pre-defined types will not be surfaced."
     },
     "extensions": {
      "x-nullable": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2404",
      "fixed": false,
      "raw": "includeTypelessEntities"
     },
     "serializedName": "includeTypelessEntities",
     "modelType": {
      "$id": "2405",
      "$type": "PrimaryType",
      "knownPrimaryType": "boolean",
      "name": {
       "$id": "2406",
       "fixed": false,
       "raw": "Boolean"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2407",
     "isReadOnly": false,
     "realPath": [
      "minimumPrecision"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2408",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2409",
      "fixed": false,
      "raw": "A value between 0 and 1 that be used to only include entities whose confidence score is greater than the value specified. If not set (default), or if explicitly set to null, all entities will be included."
     },
     "extensions": {
      "x-nullable": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2410",
      "fixed": false,
      "raw": "minimumPrecision"
     },
     "serializedName": "minimumPrecision",
     "modelType": {
      "$id": "2411",
      "$type": "PrimaryType",
      "format": "double",
      "knownPrimaryType": "double",
      "name": {
       "$id": "2412",
       "fixed": false,
       "raw": "Double"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Skills.Text.EntityRecognitionSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "Text analytics entity recognition.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-skill-entity-recognition",
   "containsConstantProperties": false,
   "name": {
    "$id": "2413",
    "fixed": false,
    "raw": "EntityRecognitionSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "EntityRecognitionSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/EntityRecognitionSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Text.EntityRecognitionSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2414",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2415",
     "isReadOnly": false,
     "realPath": [
      "defaultLanguageCode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2416",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2417",
      "fixed": false,
      "raw": "A value indicating which language code to use. Default is en."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "SentimentSkillLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SentimentSkillLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "SentimentSkillLanguage",
       "modelAsString": true,
       "values": [
        {
         "value": "da",
         "description": "Danish"
        },
        {
         "value": "nl",
         "description": "Dutch"
        },
        {
         "value": "en",
         "description": "English"
        },
        {
         "value": "fi",
         "description": "Finnish"
        },
        {
         "value": "fr",
         "description": "French"
        },
        {
         "value": "de",
         "description": "German"
        },
        {
         "value": "el",
         "description": "Greek"
        },
        {
         "value": "it",
         "description": "Italian"
        },
        {
         "value": "no",
         "description": "Norwegian (Bokmaal)"
        },
        {
         "value": "pl",
         "description": "Polish"
        },
        {
         "value": "pt-PT",
         "description": "Portuguese (Portugal)"
        },
        {
         "value": "ru",
         "description": "Russian"
        },
        {
         "value": "es",
         "description": "Spanish"
        },
        {
         "value": "sv",
         "description": "Swedish"
        },
        {
         "value": "tr",
         "description": "Turkish"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2418",
      "fixed": false,
      "raw": "defaultLanguageCode"
     },
     "serializedName": "defaultLanguageCode",
     "modelType": {
      "$id": "2419",
      "$type": "EnumType",
      "values": [
       {
        "$id": "2420",
        "description": "Danish",
        "name": "da",
        "serializedName": "da"
       },
       {
        "$id": "2421",
        "description": "Dutch",
        "name": "nl",
        "serializedName": "nl"
       },
       {
        "$id": "2422",
        "description": "English",
        "name": "en",
        "serializedName": "en"
       },
       {
        "$id": "2423",
        "description": "Finnish",
        "name": "fi",
        "serializedName": "fi"
       },
       {
        "$id": "2424",
        "description": "French",
        "name": "fr",
        "serializedName": "fr"
       },
       {
        "$id": "2425",
        "description": "German",
        "name": "de",
        "serializedName": "de"
       },
       {
        "$id": "2426",
        "description": "Greek",
        "name": "el",
        "serializedName": "el"
       },
       {
        "$id": "2427",
        "description": "Italian",
        "name": "it",
        "serializedName": "it"
       },
       {
        "$id": "2428",
        "description": "Norwegian (Bokmaal)",
        "name": "no",
        "serializedName": "no"
       },
       {
        "$id": "2429",
        "description": "Polish",
        "name": "pl",
        "serializedName": "pl"
       },
       {
        "$id": "2430",
        "description": "Portuguese (Portugal)",
        "name": "pt-PT",
        "serializedName": "pt-PT"
       },
       {
        "$id": "2431",
        "description": "Russian",
        "name": "ru",
        "serializedName": "ru"
       },
       {
        "$id": "2432",
        "description": "Spanish",
        "name": "es",
        "serializedName": "es"
       },
       {
        "$id": "2433",
        "description": "Swedish",
        "name": "sv",
        "serializedName": "sv"
       },
       {
        "$id": "2434",
        "description": "Turkish",
        "name": "tr",
        "serializedName": "tr"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "2435",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "2436",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2437",
       "fixed": false,
       "raw": "SentimentSkillLanguage"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Skills.Text.SentimentSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "Text analytics positive-negative sentiment analysis, scored as a floating point value in a range of zero to 1.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-skill-sentiment",
   "containsConstantProperties": false,
   "name": {
    "$id": "2438",
    "fixed": false,
    "raw": "SentimentSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SentimentSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SentimentSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Text.SentimentSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2439",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2440",
     "isReadOnly": false,
     "realPath": [
      "defaultLanguageCode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2441",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2442",
      "fixed": false,
      "raw": "A value indicating which language code to use. Default is en."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "SplitSkillLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SplitSkillLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "SplitSkillLanguage",
       "modelAsString": true,
       "values": [
        {
         "value": "da",
         "description": "Danish"
        },
        {
         "value": "de",
         "description": "German"
        },
        {
         "value": "en",
         "description": "English"
        },
        {
         "value": "es",
         "description": "Spanish"
        },
        {
         "value": "fi",
         "description": "Finnish"
        },
        {
         "value": "fr",
         "description": "French"
        },
        {
         "value": "it",
         "description": "Italian"
        },
        {
         "value": "ko",
         "description": "Korean"
        },
        {
         "value": "pt",
         "description": "Portuguese"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2443",
      "fixed": false,
      "raw": "defaultLanguageCode"
     },
     "serializedName": "defaultLanguageCode",
     "modelType": {
      "$id": "2444",
      "$type": "EnumType",
      "values": [
       {
        "$id": "2445",
        "description": "Danish",
        "name": "da",
        "serializedName": "da"
       },
       {
        "$id": "2446",
        "description": "German",
        "name": "de",
        "serializedName": "de"
       },
       {
        "$id": "2447",
        "description": "English",
        "name": "en",
        "serializedName": "en"
       },
       {
        "$id": "2448",
        "description": "Spanish",
        "name": "es",
        "serializedName": "es"
       },
       {
        "$id": "2449",
        "description": "Finnish",
        "name": "fi",
        "serializedName": "fi"
       },
       {
        "$id": "2450",
        "description": "French",
        "name": "fr",
        "serializedName": "fr"
       },
       {
        "$id": "2451",
        "description": "Italian",
        "name": "it",
        "serializedName": "it"
       },
       {
        "$id": "2452",
        "description": "Korean",
        "name": "ko",
        "serializedName": "ko"
       },
       {
        "$id": "2453",
        "description": "Portuguese",
        "name": "pt",
        "serializedName": "pt"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "2454",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "2455",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2456",
       "fixed": false,
       "raw": "SplitSkillLanguage"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2457",
     "isReadOnly": false,
     "realPath": [
      "textSplitMode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2458",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2459",
      "fixed": false,
      "raw": "A value indicating which split mode to perform."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "TextSplitMode",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/TextSplitMode"
       ]
      },
      "x-ms-enum": {
       "name": "TextSplitMode",
       "modelAsString": false,
       "values": [
        {
         "value": "pages",
         "name": "Pages",
         "description": "Split the text into individual pages."
        },
        {
         "value": "sentences",
         "name": "Sentences",
         "description": "Split the text into individual sentences."
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2460",
      "fixed": false,
      "raw": "textSplitMode"
     },
     "serializedName": "textSplitMode",
     "modelType": {
      "$id": "2461",
      "$type": "EnumType",
      "values": [
       {
        "$id": "2462",
        "description": "Split the text into individual pages.",
        "name": "Pages",
        "serializedName": "pages"
       },
       {
        "$id": "2463",
        "description": "Split the text into individual sentences.",
        "name": "Sentences",
        "serializedName": "sentences"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": false,
      "underlyingType": {
       "$id": "2464",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "2465",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2466",
       "fixed": false,
       "raw": "TextSplitMode"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2467",
     "isReadOnly": false,
     "realPath": [
      "maximumPageLength"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2468",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2469",
      "fixed": false,
      "raw": "The desired maximum page length. Default is 10000."
     },
     "extensions": {
      "x-nullable": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2470",
      "fixed": false,
      "raw": "maximumPageLength"
     },
     "serializedName": "maximumPageLength",
     "modelType": {
      "$id": "2471",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "2472",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Skills.Text.SplitSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "A skill to split a string into chunks of text.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-skill-textsplit",
   "containsConstantProperties": false,
   "name": {
    "$id": "2473",
    "fixed": false,
    "raw": "SplitSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SplitSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SplitSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Text.SplitSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2474",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2475",
     "isReadOnly": false,
     "realPath": [
      "defaultToLanguageCode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2476",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2477",
      "fixed": false,
      "raw": "The language code to translate documents into for documents that don't specify the to language explicitly. "
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "TextTranslationSkillLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/TextTranslationSkillLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "TextTranslationSkillLanguage",
       "modelAsString": true,
       "values": [
        {
         "value": "af",
         "description": "Afrikaans"
        },
        {
         "value": "ar",
         "description": "Arabic"
        },
        {
         "value": "bn",
         "description": "Bangla"
        },
        {
         "value": "bs",
         "description": "Bosnian (Latin)"
        },
        {
         "value": "bg",
         "description": "Bulgarian"
        },
        {
         "value": "yue",
         "description": "Cantonese (Traditional)"
        },
        {
         "value": "ca",
         "description": "Catalan"
        },
        {
         "value": "zh-Hans",
         "description": "Chinese Simplified"
        },
        {
         "value": "zh-Hant",
         "description": "Chinese Traditional"
        },
        {
         "value": "hr",
         "description": "Croatian"
        },
        {
         "value": "cs",
         "description": "Czech"
        },
        {
         "value": "da",
         "description": "Danish"
        },
        {
         "value": "nl",
         "description": "Dutch"
        },
        {
         "value": "en",
         "description": "English"
        },
        {
         "value": "et",
         "description": "Estonian"
        },
        {
         "value": "fj",
         "description": "Fijian"
        },
        {
         "value": "fil",
         "description": "Filipino"
        },
        {
         "value": "fi",
         "description": "Finnish"
        },
        {
         "value": "fr",
         "description": "French"
        },
        {
         "value": "de",
         "description": "German"
        },
        {
         "value": "el",
         "description": "Greek"
        },
        {
         "value": "ht",
         "description": "Haitian Creole"
        },
        {
         "value": "he",
         "description": "Hebrew"
        },
        {
         "value": "hi",
         "description": "Hindi"
        },
        {
         "value": "mww",
         "description": "Hmong Daw"
        },
        {
         "value": "hu",
         "description": "Hungarian"
        },
        {
         "value": "is",
         "description": "Icelandic"
        },
        {
         "value": "id",
         "description": "Indonesian"
        },
        {
         "value": "it",
         "description": "Italian"
        },
        {
         "value": "ja",
         "description": "Japanese"
        },
        {
         "value": "sw",
         "description": "Kiswahili"
        },
        {
         "value": "tlh",
         "description": "Klingon"
        },
        {
         "value": "ko",
         "description": "Korean"
        },
        {
         "value": "lv",
         "description": "Latvian"
        },
        {
         "value": "lt",
         "description": "Lithuanian"
        },
        {
         "value": "mg",
         "description": "Malagasy"
        },
        {
         "value": "ms",
         "description": "Malay"
        },
        {
         "value": "mt",
         "description": "Maltese"
        },
        {
         "value": "nb",
         "description": "Norwegian"
        },
        {
         "value": "fa",
         "description": "Persian"
        },
        {
         "value": "pl",
         "description": "Polish"
        },
        {
         "value": "pt",
         "description": "Portuguese"
        },
        {
         "value": "otq",
         "description": "Queretaro Otomi"
        },
        {
         "value": "ro",
         "description": "Romanian"
        },
        {
         "value": "ru",
         "description": "Russian"
        },
        {
         "value": "sm",
         "description": "Samoan"
        },
        {
         "value": "sr-Cyrl",
         "description": "Serbian (Cyrillic)"
        },
        {
         "value": "sr-Latn",
         "description": "Serbian (Latin)"
        },
        {
         "value": "sk",
         "description": "Slovak"
        },
        {
         "value": "sl",
         "description": "Slovenian"
        },
        {
         "value": "es",
         "description": "Spanish"
        },
        {
         "value": "sv",
         "description": "Swedish"
        },
        {
         "value": "ty",
         "description": "Tahitian"
        },
        {
         "value": "ta",
         "description": "Tamil"
        },
        {
         "value": "te",
         "description": "Telugu"
        },
        {
         "value": "th",
         "description": "Thai"
        },
        {
         "value": "to",
         "description": "Tongan"
        },
        {
         "value": "tr",
         "description": "Turkish"
        },
        {
         "value": "uk",
         "description": "Ukrainian"
        },
        {
         "value": "ur",
         "description": "Urdu"
        },
        {
         "value": "vi",
         "description": "Vietnamese"
        },
        {
         "value": "cy",
         "description": "Welsh"
        },
        {
         "value": "yua",
         "description": "Yucatec Maya"
        }
       ]
      }
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2478",
      "fixed": false,
      "raw": "defaultToLanguageCode"
     },
     "serializedName": "defaultToLanguageCode",
     "modelType": {
      "$id": "2479",
      "$type": "EnumType",
      "values": [
       {
        "$id": "2480",
        "description": "Afrikaans",
        "name": "af",
        "serializedName": "af"
       },
       {
        "$id": "2481",
        "description": "Arabic",
        "name": "ar",
        "serializedName": "ar"
       },
       {
        "$id": "2482",
        "description": "Bangla",
        "name": "bn",
        "serializedName": "bn"
       },
       {
        "$id": "2483",
        "description": "Bosnian (Latin)",
        "name": "bs",
        "serializedName": "bs"
       },
       {
        "$id": "2484",
        "description": "Bulgarian",
        "name": "bg",
        "serializedName": "bg"
       },
       {
        "$id": "2485",
        "description": "Cantonese (Traditional)",
        "name": "yue",
        "serializedName": "yue"
       },
       {
        "$id": "2486",
        "description": "Catalan",
        "name": "ca",
        "serializedName": "ca"
       },
       {
        "$id": "2487",
        "description": "Chinese Simplified",
        "name": "zh-Hans",
        "serializedName": "zh-Hans"
       },
       {
        "$id": "2488",
        "description": "Chinese Traditional",
        "name": "zh-Hant",
        "serializedName": "zh-Hant"
       },
       {
        "$id": "2489",
        "description": "Croatian",
        "name": "hr",
        "serializedName": "hr"
       },
       {
        "$id": "2490",
        "description": "Czech",
        "name": "cs",
        "serializedName": "cs"
       },
       {
        "$id": "2491",
        "description": "Danish",
        "name": "da",
        "serializedName": "da"
       },
       {
        "$id": "2492",
        "description": "Dutch",
        "name": "nl",
        "serializedName": "nl"
       },
       {
        "$id": "2493",
        "description": "English",
        "name": "en",
        "serializedName": "en"
       },
       {
        "$id": "2494",
        "description": "Estonian",
        "name": "et",
        "serializedName": "et"
       },
       {
        "$id": "2495",
        "description": "Fijian",
        "name": "fj",
        "serializedName": "fj"
       },
       {
        "$id": "2496",
        "description": "Filipino",
        "name": "fil",
        "serializedName": "fil"
       },
       {
        "$id": "2497",
        "description": "Finnish",
        "name": "fi",
        "serializedName": "fi"
       },
       {
        "$id": "2498",
        "description": "French",
        "name": "fr",
        "serializedName": "fr"
       },
       {
        "$id": "2499",
        "description": "German",
        "name": "de",
        "serializedName": "de"
       },
       {
        "$id": "2500",
        "description": "Greek",
        "name": "el",
        "serializedName": "el"
       },
       {
        "$id": "2501",
        "description": "Haitian Creole",
        "name": "ht",
        "serializedName": "ht"
       },
       {
        "$id": "2502",
        "description": "Hebrew",
        "name": "he",
        "serializedName": "he"
       },
       {
        "$id": "2503",
        "description": "Hindi",
        "name": "hi",
        "serializedName": "hi"
       },
       {
        "$id": "2504",
        "description": "Hmong Daw",
        "name": "mww",
        "serializedName": "mww"
       },
       {
        "$id": "2505",
        "description": "Hungarian",
        "name": "hu",
        "serializedName": "hu"
       },
       {
        "$id": "2506",
        "description": "Icelandic",
        "name": "is",
        "serializedName": "is"
       },
       {
        "$id": "2507",
        "description": "Indonesian",
        "name": "id",
        "serializedName": "id"
       },
       {
        "$id": "2508",
        "description": "Italian",
        "name": "it",
        "serializedName": "it"
       },
       {
        "$id": "2509",
        "description": "Japanese",
        "name": "ja",
        "serializedName": "ja"
       },
       {
        "$id": "2510",
        "description": "Kiswahili",
        "name": "sw",
        "serializedName": "sw"
       },
       {
        "$id": "2511",
        "description": "Klingon",
        "name": "tlh",
        "serializedName": "tlh"
       },
       {
        "$id": "2512",
        "description": "Korean",
        "name": "ko",
        "serializedName": "ko"
       },
       {
        "$id": "2513",
        "description": "Latvian",
        "name": "lv",
        "serializedName": "lv"
       },
       {
        "$id": "2514",
        "description": "Lithuanian",
        "name": "lt",
        "serializedName": "lt"
       },
       {
        "$id": "2515",
        "description": "Malagasy",
        "name": "mg",
        "serializedName": "mg"
       },
       {
        "$id": "2516",
        "description": "Malay",
        "name": "ms",
        "serializedName": "ms"
       },
       {
        "$id": "2517",
        "description": "Maltese",
        "name": "mt",
        "serializedName": "mt"
       },
       {
        "$id": "2518",
        "description": "Norwegian",
        "name": "nb",
        "serializedName": "nb"
       },
       {
        "$id": "2519",
        "description": "Persian",
        "name": "fa",
        "serializedName": "fa"
       },
       {
        "$id": "2520",
        "description": "Polish",
        "name": "pl",
        "serializedName": "pl"
       },
       {
        "$id": "2521",
        "description": "Portuguese",
        "name": "pt",
        "serializedName": "pt"
       },
       {
        "$id": "2522",
        "description": "Queretaro Otomi",
        "name": "otq",
        "serializedName": "otq"
       },
       {
        "$id": "2523",
        "description": "Romanian",
        "name": "ro",
        "serializedName": "ro"
       },
       {
        "$id": "2524",
        "description": "Russian",
        "name": "ru",
        "serializedName": "ru"
       },
       {
        "$id": "2525",
        "description": "Samoan",
        "name": "sm",
        "serializedName": "sm"
       },
       {
        "$id": "2526",
        "description": "Serbian (Cyrillic)",
        "name": "sr-Cyrl",
        "serializedName": "sr-Cyrl"
       },
       {
        "$id": "2527",
        "description": "Serbian (Latin)",
        "name": "sr-Latn",
        "serializedName": "sr-Latn"
       },
       {
        "$id": "2528",
        "description": "Slovak",
        "name": "sk",
        "serializedName": "sk"
       },
       {
        "$id": "2529",
        "description": "Slovenian",
        "name": "sl",
        "serializedName": "sl"
       },
       {
        "$id": "2530",
        "description": "Spanish",
        "name": "es",
        "serializedName": "es"
       },
       {
        "$id": "2531",
        "description": "Swedish",
        "name": "sv",
        "serializedName": "sv"
       },
       {
        "$id": "2532",
        "description": "Tahitian",
        "name": "ty",
        "serializedName": "ty"
       },
       {
        "$id": "2533",
        "description": "Tamil",
        "name": "ta",
        "serializedName": "ta"
       },
       {
        "$id": "2534",
        "description": "Telugu",
        "name": "te",
        "serializedName": "te"
       },
       {
        "$id": "2535",
        "description": "Thai",
        "name": "th",
        "serializedName": "th"
       },
       {
        "$id": "2536",
        "description": "Tongan",
        "name": "to",
        "serializedName": "to"
       },
       {
        "$id": "2537",
        "description": "Turkish",
        "name": "tr",
        "serializedName": "tr"
       },
       {
        "$id": "2538",
        "description": "Ukrainian",
        "name": "uk",
        "serializedName": "uk"
       },
       {
        "$id": "2539",
        "description": "Urdu",
        "name": "ur",
        "serializedName": "ur"
       },
       {
        "$id": "2540",
        "description": "Vietnamese",
        "name": "vi",
        "serializedName": "vi"
       },
       {
        "$id": "2541",
        "description": "Welsh",
        "name": "cy",
        "serializedName": "cy"
       },
       {
        "$id": "2542",
        "description": "Yucatec Maya",
        "name": "yua",
        "serializedName": "yua"
       }
      ],
      "oldModelAsString": false,
      "modelAsString": true,
      "underlyingType": {
       "$id": "2543",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "2544",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "2545",
       "fixed": false,
       "raw": "TextTranslationSkillLanguage"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2546",
     "isReadOnly": false,
     "realPath": [
      "defaultFromLanguageCode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2547",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2548",
      "fixed": false,
      "raw": "The language code to translate documents from for documents that don't specify the from language explicitly."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "TextTranslationSkillLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/TextTranslationSkillLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "TextTranslationSkillLanguage",
       "modelAsString": true,
       "values": [
        {
         "value": "af",
         "description": "Afrikaans"
        },
        {
         "value": "ar",
         "description": "Arabic"
        },
        {
         "value": "bn",
         "description": "Bangla"
        },
        {
         "value": "bs",
         "description": "Bosnian (Latin)"
        },
        {
         "value": "bg",
         "description": "Bulgarian"
        },
        {
         "value": "yue",
         "description": "Cantonese (Traditional)"
        },
        {
         "value": "ca",
         "description": "Catalan"
        },
        {
         "value": "zh-Hans",
         "description": "Chinese Simplified"
        },
        {
         "value": "zh-Hant",
         "description": "Chinese Traditional"
        },
        {
         "value": "hr",
         "description": "Croatian"
        },
        {
         "value": "cs",
         "description": "Czech"
        },
        {
         "value": "da",
         "description": "Danish"
        },
        {
         "value": "nl",
         "description": "Dutch"
        },
        {
         "value": "en",
         "description": "English"
        },
        {
         "value": "et",
         "description": "Estonian"
        },
        {
         "value": "fj",
         "description": "Fijian"
        },
        {
         "value": "fil",
         "description": "Filipino"
        },
        {
         "value": "fi",
         "description": "Finnish"
        },
        {
         "value": "fr",
         "description": "French"
        },
        {
         "value": "de",
         "description": "German"
        },
        {
         "value": "el",
         "description": "Greek"
        },
        {
         "value": "ht",
         "description": "Haitian Creole"
        },
        {
         "value": "he",
         "description": "Hebrew"
        },
        {
         "value": "hi",
         "description": "Hindi"
        },
        {
         "value": "mww",
         "description": "Hmong Daw"
        },
        {
         "value": "hu",
         "description": "Hungarian"
        },
        {
         "value": "is",
         "description": "Icelandic"
        },
        {
         "value": "id",
         "description": "Indonesian"
        },
        {
         "value": "it",
         "description": "Italian"
        },
        {
         "value": "ja",
         "description": "Japanese"
        },
        {
         "value": "sw",
         "description": "Kiswahili"
        },
        {
         "value": "tlh",
         "description": "Klingon"
        },
        {
         "value": "ko",
         "description": "Korean"
        },
        {
         "value": "lv",
         "description": "Latvian"
        },
        {
         "value": "lt",
         "description": "Lithuanian"
        },
        {
         "value": "mg",
         "description": "Malagasy"
        },
        {
         "value": "ms",
         "description": "Malay"
        },
        {
         "value": "mt",
         "description": "Maltese"
        },
        {
         "value": "nb",
         "description": "Norwegian"
        },
        {
         "value": "fa",
         "description": "Persian"
        },
        {
         "value": "pl",
         "description": "Polish"
        },
        {
         "value": "pt",
         "description": "Portuguese"
        },
        {
         "value": "otq",
         "description": "Queretaro Otomi"
        },
        {
         "value": "ro",
         "description": "Romanian"
        },
        {
         "value": "ru",
         "description": "Russian"
        },
        {
         "value": "sm",
         "description": "Samoan"
        },
        {
         "value": "sr-Cyrl",
         "description": "Serbian (Cyrillic)"
        },
        {
         "value": "sr-Latn",
         "description": "Serbian (Latin)"
        },
        {
         "value": "sk",
         "description": "Slovak"
        },
        {
         "value": "sl",
         "description": "Slovenian"
        },
        {
         "value": "es",
         "description": "Spanish"
        },
        {
         "value": "sv",
         "description": "Swedish"
        },
        {
         "value": "ty",
         "description": "Tahitian"
        },
        {
         "value": "ta",
         "description": "Tamil"
        },
        {
         "value": "te",
         "description": "Telugu"
        },
        {
         "value": "th",
         "description": "Thai"
        },
        {
         "value": "to",
         "description": "Tongan"
        },
        {
         "value": "tr",
         "description": "Turkish"
        },
        {
         "value": "uk",
         "description": "Ukrainian"
        },
        {
         "value": "ur",
         "description": "Urdu"
        },
        {
         "value": "vi",
         "description": "Vietnamese"
        },
        {
         "value": "cy",
         "description": "Welsh"
        },
        {
         "value": "yua",
         "description": "Yucatec Maya"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2549",
      "fixed": false,
      "raw": "defaultFromLanguageCode"
     },
     "serializedName": "defaultFromLanguageCode",
     "modelType": {
      "$ref": "2479"
     }
    },
    {
     "$id": "2550",
     "isReadOnly": false,
     "realPath": [
      "suggestedFrom"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2551",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2552",
      "fixed": false,
      "raw": "The language code to translate documents from when neither the fromLanguageCode input nor the defaultFromLanguageCode parameter are provided, and the automatic language detection is unsuccessful. Default is en."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "TextTranslationSkillLanguage",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/TextTranslationSkillLanguage"
       ]
      },
      "x-ms-enum": {
       "name": "TextTranslationSkillLanguage",
       "modelAsString": true,
       "values": [
        {
         "value": "af",
         "description": "Afrikaans"
        },
        {
         "value": "ar",
         "description": "Arabic"
        },
        {
         "value": "bn",
         "description": "Bangla"
        },
        {
         "value": "bs",
         "description": "Bosnian (Latin)"
        },
        {
         "value": "bg",
         "description": "Bulgarian"
        },
        {
         "value": "yue",
         "description": "Cantonese (Traditional)"
        },
        {
         "value": "ca",
         "description": "Catalan"
        },
        {
         "value": "zh-Hans",
         "description": "Chinese Simplified"
        },
        {
         "value": "zh-Hant",
         "description": "Chinese Traditional"
        },
        {
         "value": "hr",
         "description": "Croatian"
        },
        {
         "value": "cs",
         "description": "Czech"
        },
        {
         "value": "da",
         "description": "Danish"
        },
        {
         "value": "nl",
         "description": "Dutch"
        },
        {
         "value": "en",
         "description": "English"
        },
        {
         "value": "et",
         "description": "Estonian"
        },
        {
         "value": "fj",
         "description": "Fijian"
        },
        {
         "value": "fil",
         "description": "Filipino"
        },
        {
         "value": "fi",
         "description": "Finnish"
        },
        {
         "value": "fr",
         "description": "French"
        },
        {
         "value": "de",
         "description": "German"
        },
        {
         "value": "el",
         "description": "Greek"
        },
        {
         "value": "ht",
         "description": "Haitian Creole"
        },
        {
         "value": "he",
         "description": "Hebrew"
        },
        {
         "value": "hi",
         "description": "Hindi"
        },
        {
         "value": "mww",
         "description": "Hmong Daw"
        },
        {
         "value": "hu",
         "description": "Hungarian"
        },
        {
         "value": "is",
         "description": "Icelandic"
        },
        {
         "value": "id",
         "description": "Indonesian"
        },
        {
         "value": "it",
         "description": "Italian"
        },
        {
         "value": "ja",
         "description": "Japanese"
        },
        {
         "value": "sw",
         "description": "Kiswahili"
        },
        {
         "value": "tlh",
         "description": "Klingon"
        },
        {
         "value": "ko",
         "description": "Korean"
        },
        {
         "value": "lv",
         "description": "Latvian"
        },
        {
         "value": "lt",
         "description": "Lithuanian"
        },
        {
         "value": "mg",
         "description": "Malagasy"
        },
        {
         "value": "ms",
         "description": "Malay"
        },
        {
         "value": "mt",
         "description": "Maltese"
        },
        {
         "value": "nb",
         "description": "Norwegian"
        },
        {
         "value": "fa",
         "description": "Persian"
        },
        {
         "value": "pl",
         "description": "Polish"
        },
        {
         "value": "pt",
         "description": "Portuguese"
        },
        {
         "value": "otq",
         "description": "Queretaro Otomi"
        },
        {
         "value": "ro",
         "description": "Romanian"
        },
        {
         "value": "ru",
         "description": "Russian"
        },
        {
         "value": "sm",
         "description": "Samoan"
        },
        {
         "value": "sr-Cyrl",
         "description": "Serbian (Cyrillic)"
        },
        {
         "value": "sr-Latn",
         "description": "Serbian (Latin)"
        },
        {
         "value": "sk",
         "description": "Slovak"
        },
        {
         "value": "sl",
         "description": "Slovenian"
        },
        {
         "value": "es",
         "description": "Spanish"
        },
        {
         "value": "sv",
         "description": "Swedish"
        },
        {
         "value": "ty",
         "description": "Tahitian"
        },
        {
         "value": "ta",
         "description": "Tamil"
        },
        {
         "value": "te",
         "description": "Telugu"
        },
        {
         "value": "th",
         "description": "Thai"
        },
        {
         "value": "to",
         "description": "Tongan"
        },
        {
         "value": "tr",
         "description": "Turkish"
        },
        {
         "value": "uk",
         "description": "Ukrainian"
        },
        {
         "value": "ur",
         "description": "Urdu"
        },
        {
         "value": "vi",
         "description": "Vietnamese"
        },
        {
         "value": "cy",
         "description": "Welsh"
        },
        {
         "value": "yua",
         "description": "Yucatec Maya"
        }
       ]
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2553",
      "fixed": false,
      "raw": "suggestedFrom"
     },
     "serializedName": "suggestedFrom",
     "modelType": {
      "$ref": "2479"
     }
    }
   ],
   "serializedName": "#Microsoft.Skills.Text.TranslationSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "A skill to translate text from one language to another.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-skill-text-translation",
   "containsConstantProperties": false,
   "name": {
    "$id": "2554",
    "fixed": false,
    "raw": "TextTranslationSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "TextTranslationSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/TextTranslationSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Text.TranslationSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2555",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2556",
     "isReadOnly": false,
     "realPath": [
      "uri"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2557",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2558",
      "fixed": false,
      "raw": "The url for the Web API."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2559",
      "fixed": false,
      "raw": "uri"
     },
     "serializedName": "uri",
     "modelType": {
      "$id": "2560",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2561",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2562",
     "isReadOnly": false,
     "realPath": [
      "httpHeaders"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2563",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2564",
      "fixed": false,
      "raw": "The headers required to make the http request."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2565",
      "fixed": false,
      "raw": "httpHeaders"
     },
     "serializedName": "httpHeaders",
     "modelType": {
      "$id": "2566",
      "$type": "DictionaryType",
      "valueType": {
       "$id": "2567",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "2568",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "supportsAdditionalProperties": false,
      "name": {
       "$id": "2569",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "2570",
     "isReadOnly": false,
     "realPath": [
      "httpMethod"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2571",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2572",
      "fixed": false,
      "raw": "The method for the http request."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2573",
      "fixed": false,
      "raw": "httpMethod"
     },
     "serializedName": "httpMethod",
     "modelType": {
      "$id": "2574",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2575",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2576",
     "isReadOnly": false,
     "realPath": [
      "timeout"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2577",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2578",
      "fixed": false,
      "raw": "The desired timeout for the request. Default is 30 seconds."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2579",
      "fixed": false,
      "raw": "timeout"
     },
     "serializedName": "timeout",
     "modelType": {
      "$id": "2580",
      "$type": "PrimaryType",
      "format": "duration",
      "knownPrimaryType": "timeSpan",
      "name": {
       "$id": "2581",
       "fixed": false,
       "raw": "TimeSpan"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2582",
     "isReadOnly": false,
     "realPath": [
      "batchSize"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2583",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2584",
      "fixed": false,
      "raw": "The desired batch size which indicates number of documents."
     },
     "extensions": {
      "x-nullable": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2585",
      "fixed": false,
      "raw": "batchSize"
     },
     "serializedName": "batchSize",
     "modelType": {
      "$id": "2586",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "2587",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2588",
     "isReadOnly": false,
     "realPath": [
      "degreeOfParallelism"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2589",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2590",
      "fixed": false,
      "raw": "If set, the number of parallel calls that can be made to the Web API."
     },
     "extensions": {
      "x-nullable": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2591",
      "fixed": false,
      "raw": "degreeOfParallelism"
     },
     "serializedName": "degreeOfParallelism",
     "modelType": {
      "$id": "2592",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "2593",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "#Microsoft.Skills.Custom.WebApiSkill",
   "baseModelType": {
    "$ref": "2124"
   },
   "documentation": "A skill that can call a Web API endpoint, allowing you to extend a skillset by having it call your custom code.",
   "externalDocsUrl": "https://docs.microsoft.com/azure/search/cognitive-search-custom-skill-web-api",
   "containsConstantProperties": false,
   "name": {
    "$id": "2594",
    "fixed": false,
    "raw": "WebApiSkill"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "WebApiSkill",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/WebApiSkill"
     ]
    },
    "x-ms-discriminator-value": "#Microsoft.Skills.Custom.WebApiSkill"
   },
   "deprecated": false
  },
  {
   "$id": "2595",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2596",
     "isReadOnly": true,
     "realPath": [
      "value"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2597",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2598",
      "fixed": false,
      "raw": "The skillsets defined in the Search service."
     },
     "extensions": {
      "x-ms-client-name": "Skillsets"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2599",
      "fixed": false,
      "raw": "value"
     },
     "serializedName": "value",
     "modelType": {
      "$id": "2600",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "2164"
      },
      "name": {
       "$id": "2601",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "ListSkillsetsResult",
   "documentation": "Response from a list skillset request. If successful, it includes the full definitions of all skillsets.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2602",
    "fixed": false,
    "raw": "ListSkillsetsResult"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ListSkillsetsResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ListSkillsetsResult"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2603",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2604",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2605",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2606",
      "fixed": false,
      "raw": "The name of the synonym map."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2607",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "2608",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2609",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2610",
     "isReadOnly": false,
     "realPath": [
      "format"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2611",
      "fixed": false,
      "raw": "solr"
     },
     "deprecated": false,
     "documentation": {
      "$id": "2612",
      "fixed": false,
      "raw": "The format of the synonym map. Only the 'solr' format is currently supported."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2019-05-06-Preview"
       ],
       "filename": [
        "mem:///152?oai3.shaken.json"
       ],
       "name": "SynonymMapFormat",
       "originalLocations": [
        "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SynonymMap-format"
       ]
      },
      "x-ms-enum": {
       "name": "SynonymMapFormat",
       "modelAsString": false,
       "values": [
        {
         "value": "solr",
         "name": "Solr",
         "description": "Selects the SOLR format for synonym maps."
        }
       ]
      }
     },
     "isRequired": true,
     "isConstant": true,
     "name": {
      "$id": "2613",
      "fixed": false,
      "raw": "format"
     },
     "serializedName": "format",
     "modelType": {
      "$id": "2614",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2615",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2616",
     "isReadOnly": false,
     "realPath": [
      "synonyms"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2617",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2618",
      "fixed": false,
      "raw": "A series of synonym rules in the specified synonym map format. The rules must be separated by newlines."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2619",
      "fixed": false,
      "raw": "synonyms"
     },
     "serializedName": "synonyms",
     "modelType": {
      "$id": "2620",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2621",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2622",
     "isReadOnly": false,
     "realPath": [
      "encryptionKey"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2623",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2624",
      "fixed": false,
      "raw": "A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2625",
      "fixed": false,
      "raw": "encryptionKey"
     },
     "serializedName": "encryptionKey",
     "modelType": {
      "$ref": "1964"
     }
    },
    {
     "$id": "2626",
     "isReadOnly": false,
     "realPath": [
      "@odata.etag"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2627",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2628",
      "fixed": false,
      "raw": "The ETag of the synonym map."
     },
     "extensions": {
      "x-ms-client-name": "ETag"
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2629",
      "fixed": false,
      "raw": "@odata.etag"
     },
     "serializedName": "@odata.etag",
     "modelType": {
      "$id": "2630",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2631",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SynonymMap",
   "documentation": "Represents a synonym map definition.",
   "containsConstantProperties": true,
   "name": {
    "$id": "2632",
    "fixed": false,
    "raw": "SynonymMap"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SynonymMap",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SynonymMap"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2633",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2634",
     "isReadOnly": true,
     "realPath": [
      "value"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2635",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2636",
      "fixed": false,
      "raw": "The synonym maps in the Search service."
     },
     "extensions": {
      "x-ms-client-name": "SynonymMaps"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2637",
      "fixed": false,
      "raw": "value"
     },
     "serializedName": "value",
     "modelType": {
      "$id": "2638",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "2603"
      },
      "name": {
       "$id": "2639",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "ListSynonymMapsResult",
   "documentation": "Response from a List SynonymMaps request. If successful, it includes the full definitions of all synonym maps.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2640",
    "fixed": false,
    "raw": "ListSynonymMapsResult"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ListSynonymMapsResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ListSynonymMapsResult"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2641",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2642",
     "isReadOnly": false,
     "realPath": [
      "usage"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2643",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2644",
      "fixed": false,
      "raw": "The resource usage amount."
     },
     "extensions": {
      "x-nullable": false
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2645",
      "fixed": false,
      "raw": "usage"
     },
     "serializedName": "usage",
     "modelType": {
      "$id": "2646",
      "$type": "PrimaryType",
      "format": "int64",
      "knownPrimaryType": "long",
      "name": {
       "$id": "2647",
       "fixed": false,
       "raw": "Long"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2648",
     "isReadOnly": false,
     "realPath": [
      "quota"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2649",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2650",
      "fixed": false,
      "raw": "The resource amount quota."
     },
     "extensions": {
      "x-nullable": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2651",
      "fixed": false,
      "raw": "quota"
     },
     "serializedName": "quota",
     "modelType": {
      "$id": "2652",
      "$type": "PrimaryType",
      "format": "int64",
      "knownPrimaryType": "long",
      "name": {
       "$id": "2653",
       "fixed": false,
       "raw": "Long"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "ResourceCounter",
   "documentation": "Represents a resource's usage and quota.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2654",
    "fixed": false,
    "raw": "ResourceCounter"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ResourceCounter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ResourceCounter"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2655",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2656",
     "isReadOnly": false,
     "realPath": [
      "documentCount"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2657",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2658",
      "fixed": false,
      "raw": "Total number of documents across all indexes in the service."
     },
     "extensions": {
      "x-ms-client-name": "documentCounter"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2659",
      "fixed": false,
      "raw": "documentCount"
     },
     "serializedName": "documentCount",
     "modelType": {
      "$ref": "2641"
     }
    },
    {
     "$id": "2660",
     "isReadOnly": false,
     "realPath": [
      "indexesCount"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2661",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2662",
      "fixed": false,
      "raw": "Total number of indexes."
     },
     "extensions": {
      "x-ms-client-name": "indexCounter"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2663",
      "fixed": false,
      "raw": "indexesCount"
     },
     "serializedName": "indexesCount",
     "modelType": {
      "$ref": "2641"
     }
    },
    {
     "$id": "2664",
     "isReadOnly": false,
     "realPath": [
      "indexersCount"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2665",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2666",
      "fixed": false,
      "raw": "Total number of indexers."
     },
     "extensions": {
      "x-ms-client-name": "indexerCounter"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2667",
      "fixed": false,
      "raw": "indexersCount"
     },
     "serializedName": "indexersCount",
     "modelType": {
      "$ref": "2641"
     }
    },
    {
     "$id": "2668",
     "isReadOnly": false,
     "realPath": [
      "dataSourcesCount"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2669",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2670",
      "fixed": false,
      "raw": "Total number of data sources."
     },
     "extensions": {
      "x-ms-client-name": "dataSourceCounter"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2671",
      "fixed": false,
      "raw": "dataSourcesCount"
     },
     "serializedName": "dataSourcesCount",
     "modelType": {
      "$ref": "2641"
     }
    },
    {
     "$id": "2672",
     "isReadOnly": false,
     "realPath": [
      "storageSize"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2673",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2674",
      "fixed": false,
      "raw": "Total size of used storage in bytes."
     },
     "extensions": {
      "x-ms-client-name": "storageSizeCounter"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2675",
      "fixed": false,
      "raw": "storageSize"
     },
     "serializedName": "storageSize",
     "modelType": {
      "$ref": "2641"
     }
    },
    {
     "$id": "2676",
     "isReadOnly": false,
     "realPath": [
      "synonymMaps"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2677",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2678",
      "fixed": false,
      "raw": "Total number of synonym maps."
     },
     "extensions": {
      "x-ms-client-name": "synonymMapCounter"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2679",
      "fixed": false,
      "raw": "synonymMaps"
     },
     "serializedName": "synonymMaps",
     "modelType": {
      "$ref": "2641"
     }
    },
    {
     "$id": "2680",
     "isReadOnly": false,
     "realPath": [
      "skillsetCount"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2681",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2682",
      "fixed": false,
      "raw": "Total number of skillsets."
     },
     "extensions": {
      "x-ms-client-name": "skillsetCounter"
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2683",
      "fixed": false,
      "raw": "skillsetCount"
     },
     "serializedName": "skillsetCount",
     "modelType": {
      "$ref": "2641"
     }
    }
   ],
   "serializedName": "ServiceCounters",
   "documentation": "Represents service-level resource counters and quotas.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2684",
    "fixed": false,
    "raw": "ServiceCounters"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ServiceCounters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ServiceCounters"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2685",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2686",
     "isReadOnly": false,
     "realPath": [
      "maxFieldsPerIndex"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2687",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2688",
      "fixed": false,
      "raw": "The maximum allowed fields per index."
     },
     "extensions": {
      "x-nullable": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2689",
      "fixed": false,
      "raw": "maxFieldsPerIndex"
     },
     "serializedName": "maxFieldsPerIndex",
     "modelType": {
      "$id": "2690",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "2691",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2692",
     "isReadOnly": false,
     "realPath": [
      "maxFieldNestingDepthPerIndex"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2693",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2694",
      "fixed": false,
      "raw": "The maximum depth which you can nest sub-fields in an index, including the top-level complex field. For example, a/b/c has a nesting depth of 3."
     },
     "extensions": {
      "x-nullable": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2695",
      "fixed": false,
      "raw": "maxFieldNestingDepthPerIndex"
     },
     "serializedName": "maxFieldNestingDepthPerIndex",
     "modelType": {
      "$id": "2696",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "2697",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2698",
     "isReadOnly": false,
     "realPath": [
      "maxComplexCollectionFieldsPerIndex"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2699",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2700",
      "fixed": false,
      "raw": "The maximum number of fields of type Collection(Edm.ComplexType) allowed in an index."
     },
     "extensions": {
      "x-nullable": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2701",
      "fixed": false,
      "raw": "maxComplexCollectionFieldsPerIndex"
     },
     "serializedName": "maxComplexCollectionFieldsPerIndex",
     "modelType": {
      "$id": "2702",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "2703",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2704",
     "isReadOnly": false,
     "realPath": [
      "maxComplexObjectsInCollectionsPerDocument"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2705",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2706",
      "fixed": false,
      "raw": "The maximum number of objects in complex collections allowed per document."
     },
     "extensions": {
      "x-nullable": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2707",
      "fixed": false,
      "raw": "maxComplexObjectsInCollectionsPerDocument"
     },
     "serializedName": "maxComplexObjectsInCollectionsPerDocument",
     "modelType": {
      "$id": "2708",
      "$type": "PrimaryType",
      "format": "int32",
      "knownPrimaryType": "int",
      "name": {
       "$id": "2709",
       "fixed": false,
       "raw": "Int"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "ServiceLimits",
   "documentation": "Represents various service level limits.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2710",
    "fixed": false,
    "raw": "ServiceLimits"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ServiceLimits",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ServiceLimits"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2711",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2712",
     "isReadOnly": false,
     "realPath": [
      "counters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2713",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2714",
      "fixed": false,
      "raw": "Service level resource counters."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2715",
      "fixed": false,
      "raw": "counters"
     },
     "serializedName": "counters",
     "modelType": {
      "$ref": "2655"
     }
    },
    {
     "$id": "2716",
     "isReadOnly": false,
     "realPath": [
      "limits"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2717",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2718",
      "fixed": false,
      "raw": "Service level general limits."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2719",
      "fixed": false,
      "raw": "limits"
     },
     "serializedName": "limits",
     "modelType": {
      "$ref": "2685"
     }
    }
   ],
   "serializedName": "ServiceStatistics",
   "documentation": "Response from a get service statistics request. If successful, it includes service level counters and limits.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2720",
    "fixed": false,
    "raw": "ServiceStatistics"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ServiceStatistics",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/ServiceStatistics"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "2721",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "2722",
     "isReadOnly": true,
     "realPath": [
      "code"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2723",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2724",
      "fixed": false,
      "raw": "One of a server-defined set of error codes."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2725",
      "fixed": false,
      "raw": "code"
     },
     "serializedName": "code",
     "modelType": {
      "$id": "2726",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2727",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2728",
     "isReadOnly": true,
     "realPath": [
      "message"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2729",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2730",
      "fixed": false,
      "raw": "A human-readable representation of the error."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "2731",
      "fixed": false,
      "raw": "message"
     },
     "serializedName": "message",
     "modelType": {
      "$id": "2732",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "2733",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "2734",
     "isReadOnly": true,
     "realPath": [
      "details"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "2735",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "2736",
      "fixed": false,
      "raw": "An array of details about specific errors that led to this reported error."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "2737",
      "fixed": false,
      "raw": "details"
     },
     "serializedName": "details",
     "modelType": {
      "$id": "2738",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "2721"
      },
      "name": {
       "$id": "2739",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "SearchError",
   "documentation": "Describes an error condition for the Azure Cognitive Search API.",
   "containsConstantProperties": false,
   "name": {
    "$id": "2740",
    "fixed": false,
    "raw": "SearchError"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "SearchError",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/schemas/SearchError"
     ]
    }
   },
   "deprecated": false
  }
 ],
 "errorTypes": [
  {
   "$ref": "2721"
  }
 ],
 "enumTypes": [
  {
   "$ref": "13"
  },
  {
   "$ref": "114"
  },
  {
   "$ref": "136"
  },
  {
   "$ref": "180"
  },
  {
   "$ref": "264"
  },
  {
   "$ref": "1696"
  },
  {
   "$ref": "345"
  },
  {
   "$ref": "389"
  },
  {
   "$ref": "453"
  },
  {
   "$ref": "619"
  },
  {
   "$ref": "708"
  },
  {
   "$ref": "866"
  },
  {
   "$ref": "931"
  },
  {
   "$ref": "963"
  },
  {
   "$ref": "1045"
  },
  {
   "$ref": "1312"
  },
  {
   "$ref": "1575"
  },
  {
   "$ref": "1663"
  },
  {
   "$ref": "1798"
  },
  {
   "$ref": "1902"
  },
  {
   "$id": "2741",
   "$type": "EnumType",
   "values": [
    {
     "$id": "2742",
     "description": "Matches consecutive whole terms and prefixes in a field. For example, for the field 'The fastest brown fox', the queries 'fast' and 'fastest brow' would both match.",
     "name": "AnalyzingInfixMatching",
     "serializedName": "analyzingInfixMatching"
    }
   ],
   "oldModelAsString": false,
   "modelAsString": false,
   "underlyingType": {
    "$id": "2743",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2744",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   },
   "name": {
    "$id": "2745",
    "fixed": false,
    "raw": "SuggesterSearchMode"
   },
   "deprecated": false
  },
  {
   "$ref": "2211"
  },
  {
   "$ref": "2243"
  },
  {
   "$ref": "2253"
  },
  {
   "$ref": "2295"
  },
  {
   "$ref": "2309"
  },
  {
   "$ref": "2326"
  },
  {
   "$ref": "2358"
  },
  {
   "$ref": "2374"
  },
  {
   "$ref": "2419"
  },
  {
   "$ref": "2444"
  },
  {
   "$ref": "2461"
  },
  {
   "$ref": "2479"
  },
  {
   "$id": "2746",
   "$type": "EnumType",
   "values": [
    {
     "$id": "2747",
     "description": "Selects the SOLR format for synonym maps.",
     "name": "Solr",
     "serializedName": "solr"
    }
   ],
   "oldModelAsString": false,
   "modelAsString": false,
   "underlyingType": {
    "$id": "2748",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2749",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   },
   "name": {
    "$id": "2750",
    "fixed": false,
    "raw": "SynonymMapFormat"
   },
   "deprecated": false
  }
 ],
 "hostParametersFront": [
  {
   "$id": "2751",
   "clientProperty": {
    "$id": "2752",
    "isReadOnly": false,
    "realPath": [
     "endpoint"
    ],
    "collectionFormat": "none",
    "defaultValue": {
     "$id": "2753",
     "fixed": false
    },
    "deprecated": false,
    "documentation": {
     "$id": "2754",
     "fixed": false,
     "raw": "The endpoint URL of the search service."
    },
    "extensions": {
     "x-ms-metadata": {
      "apiVersions": [
       "2019-05-06-Preview"
      ],
      "filename": [
       "mem:///152?oai3.shaken.json"
      ],
      "name": "EndpointParameter",
      "originalLocations": [
       "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/EndpointParameter"
      ]
     },
     "x-ms-parameter-location": "client",
     "x-ms-skip-url-encoding": true
    },
    "isRequired": true,
    "isConstant": false,
    "name": {
     "$id": "2755",
     "fixed": false,
     "raw": "endpoint"
    },
    "serializedName": "endpoint",
    "modelType": {
     "$id": "2756",
     "$type": "PrimaryType",
     "knownPrimaryType": "string",
     "name": {
      "$id": "2757",
      "fixed": false,
      "raw": "String"
     },
     "deprecated": false
    }
   },
   "location": "path",
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2758",
    "fixed": false,
    "raw": ""
   },
   "deprecated": false,
   "documentation": {
    "$id": "2759",
    "fixed": false,
    "raw": "The endpoint URL of the search service."
   },
   "extensions": {
    "x-name": "endpoint",
    "x-in": "path",
    "x-required": true,
    "x-type": "string",
    "x-ms-skip-url-encoding": true,
    "x-ms-parameter-location": "client",
    "x-ms-original": {
     "$ref": "#/components/parameters/parameters:31"
    },
    "hostParameter": true
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2760",
    "fixed": false,
    "raw": "endpoint"
   },
   "serializedName": "endpoint",
   "modelType": {
    "$id": "2761",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2762",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  }
 ],
 "name": "SearchServiceRestClient",
 "namespace": "Com.azure.search.documents",
 "modelsName": "Models",
 "apiVersion": "2019-05-06-Preview",
 "baseUrl": "{endpoint}",
 "documentation": "Client that can be used to manage and query indexes and documents, as well as manage other resources, on a search service.",
 "extensions": {
  "x-ms-parameterized-host": true
 },
 "codeGenExtensions": {
  "useDateTimeOffset": true
 },
 "properties": [
  {
   "$id": "2763",
   "isReadOnly": false,
   "realPath": [
    "dataSourceName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2764",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2765",
    "fixed": false,
    "raw": "The name of the datasource to create or update."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑xmostj¬∑datasources-datasourcename¬∑put¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑xmostj¬∑datasources-datasourcename¬∑put¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2766",
    "fixed": false,
    "raw": "dataSourceName"
   },
   "serializedName": "dataSourceName",
   "modelType": {
    "$id": "2767",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2768",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2769",
   "isReadOnly": false,
   "realPath": [
    "dataSourceName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2770",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2771",
    "fixed": false,
    "raw": "The name of the datasource to delete."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑18x6lnb¬∑datasources-datasourcename¬∑delete¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑18x6lnb¬∑datasources-datasourcename¬∑delete¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2772",
    "fixed": false,
    "raw": "DataSourceName1"
   },
   "serializedName": "dataSourceName",
   "modelType": {
    "$id": "2773",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2774",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2775",
   "isReadOnly": false,
   "realPath": [
    "dataSourceName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2776",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2777",
    "fixed": false,
    "raw": "The name of the datasource to retrieve."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑15mxavz¬∑datasources-datasourcename¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑15mxavz¬∑datasources-datasourcename¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2778",
    "fixed": false,
    "raw": "DataSourceName2"
   },
   "serializedName": "dataSourceName",
   "modelType": {
    "$id": "2779",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2780",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2781",
   "isReadOnly": false,
   "realPath": [
    "$select"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2782",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2783",
    "fixed": false,
    "raw": "Selects which top-level properties of the data sources to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑8o7w1g¬∑datasources¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑8o7w1g¬∑datasources¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "2784",
    "fixed": false,
    "raw": "$select"
   },
   "serializedName": "$select",
   "modelType": {
    "$id": "2785",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2786",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2787",
   "isReadOnly": false,
   "realPath": [
    "indexerName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2788",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2789",
    "fixed": false,
    "raw": "The name of the indexer to reset."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑1xi9qa2¬∑indexers-indexername-search-reset¬∑post¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1xi9qa2¬∑indexers-indexername-search-reset¬∑post¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2790",
    "fixed": false,
    "raw": "indexerName"
   },
   "serializedName": "indexerName",
   "modelType": {
    "$id": "2791",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2792",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2793",
   "isReadOnly": false,
   "realPath": [
    "indexerName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2794",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2795",
    "fixed": false,
    "raw": "The name of the indexer to run."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑182qd9c¬∑indexers-indexername-search-run¬∑post¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑182qd9c¬∑indexers-indexername-search-run¬∑post¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2796",
    "fixed": false,
    "raw": "IndexerName1"
   },
   "serializedName": "indexerName",
   "modelType": {
    "$id": "2797",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2798",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2799",
   "isReadOnly": false,
   "realPath": [
    "indexerName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2800",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2801",
    "fixed": false,
    "raw": "The name of the indexer to create or update."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑r1zcwq¬∑indexers-indexername¬∑put¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑r1zcwq¬∑indexers-indexername¬∑put¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2802",
    "fixed": false,
    "raw": "IndexerName2"
   },
   "serializedName": "indexerName",
   "modelType": {
    "$id": "2803",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2804",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2805",
   "isReadOnly": false,
   "realPath": [
    "indexerName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2806",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2807",
    "fixed": false,
    "raw": "The name of the indexer to delete."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑k6reyr¬∑indexers-indexername¬∑delete¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑k6reyr¬∑indexers-indexername¬∑delete¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2808",
    "fixed": false,
    "raw": "IndexerName3"
   },
   "serializedName": "indexerName",
   "modelType": {
    "$id": "2809",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2810",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2811",
   "isReadOnly": false,
   "realPath": [
    "indexerName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2812",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2813",
    "fixed": false,
    "raw": "The name of the indexer to retrieve."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑1y1l44f¬∑indexers-indexername¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1y1l44f¬∑indexers-indexername¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2814",
    "fixed": false,
    "raw": "IndexerName4"
   },
   "serializedName": "indexerName",
   "modelType": {
    "$id": "2815",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2816",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2817",
   "isReadOnly": false,
   "realPath": [
    "$select"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2818",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2819",
    "fixed": false,
    "raw": "Selects which top-level properties of the indexers to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑iux4xo¬∑indexers¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑iux4xo¬∑indexers¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "2820",
    "fixed": false,
    "raw": "Select1"
   },
   "serializedName": "$select",
   "modelType": {
    "$id": "2821",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2822",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2823",
   "isReadOnly": false,
   "realPath": [
    "indexerName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2824",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2825",
    "fixed": false,
    "raw": "The name of the indexer for which to retrieve status."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑cx1ex6¬∑indexers-indexername-search-status¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑cx1ex6¬∑indexers-indexername-search-status¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2826",
    "fixed": false,
    "raw": "IndexerName5"
   },
   "serializedName": "indexerName",
   "modelType": {
    "$id": "2827",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2828",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2829",
   "isReadOnly": false,
   "realPath": [
    "skillsetName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2830",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2831",
    "fixed": false,
    "raw": "The name of the skillset to create or update."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑b0qsas¬∑skillsets-skillsetname¬∑put¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑b0qsas¬∑skillsets-skillsetname¬∑put¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2832",
    "fixed": false,
    "raw": "skillsetName"
   },
   "serializedName": "skillsetName",
   "modelType": {
    "$id": "2833",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2834",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2835",
   "isReadOnly": false,
   "realPath": [
    "skillsetName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2836",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2837",
    "fixed": false,
    "raw": "The name of the skillset to delete."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑18t6rsn¬∑skillsets-skillsetname¬∑delete¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑18t6rsn¬∑skillsets-skillsetname¬∑delete¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2838",
    "fixed": false,
    "raw": "SkillsetName1"
   },
   "serializedName": "skillsetName",
   "modelType": {
    "$id": "2839",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2840",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2841",
   "isReadOnly": false,
   "realPath": [
    "skillsetName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2842",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2843",
    "fixed": false,
    "raw": "The name of the skillset to retrieve."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑1orhjj3¬∑skillsets-skillsetname¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1orhjj3¬∑skillsets-skillsetname¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2844",
    "fixed": false,
    "raw": "SkillsetName2"
   },
   "serializedName": "skillsetName",
   "modelType": {
    "$id": "2845",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2846",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2847",
   "isReadOnly": false,
   "realPath": [
    "$select"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2848",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2849",
    "fixed": false,
    "raw": "Selects which top-level properties of the skillsets to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑512pzs¬∑skillsets¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑512pzs¬∑skillsets¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "2850",
    "fixed": false,
    "raw": "Select2"
   },
   "serializedName": "$select",
   "modelType": {
    "$id": "2851",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2852",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2853",
   "isReadOnly": false,
   "realPath": [
    "synonymMapName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2854",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2855",
    "fixed": false,
    "raw": "The name of the synonym map to create or update."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑tj2fti¬∑synonymmaps-synonymmapname¬∑put¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑tj2fti¬∑synonymmaps-synonymmapname¬∑put¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2856",
    "fixed": false,
    "raw": "synonymMapName"
   },
   "serializedName": "synonymMapName",
   "modelType": {
    "$id": "2857",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2858",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2859",
   "isReadOnly": false,
   "realPath": [
    "synonymMapName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2860",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2861",
    "fixed": false,
    "raw": "The name of the synonym map to delete."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑1gibgd6¬∑synonymmaps-synonymmapname¬∑delete¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1gibgd6¬∑synonymmaps-synonymmapname¬∑delete¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2862",
    "fixed": false,
    "raw": "SynonymMapName1"
   },
   "serializedName": "synonymMapName",
   "modelType": {
    "$id": "2863",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2864",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2865",
   "isReadOnly": false,
   "realPath": [
    "synonymMapName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2866",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2867",
    "fixed": false,
    "raw": "The name of the synonym map to retrieve."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑119z9fy¬∑synonymmaps-synonymmapname¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑119z9fy¬∑synonymmaps-synonymmapname¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2868",
    "fixed": false,
    "raw": "SynonymMapName2"
   },
   "serializedName": "synonymMapName",
   "modelType": {
    "$id": "2869",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2870",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2871",
   "isReadOnly": false,
   "realPath": [
    "$select"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2872",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2873",
    "fixed": false,
    "raw": "Selects which top-level properties of the synonym maps to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑15a06s3¬∑synonymmaps¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑15a06s3¬∑synonymmaps¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "2874",
    "fixed": false,
    "raw": "Select3"
   },
   "serializedName": "$select",
   "modelType": {
    "$id": "2875",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2876",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2877",
   "isReadOnly": false,
   "realPath": [
    "$select"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2878",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2879",
    "fixed": false,
    "raw": "Selects which top-level properties of the index definitions to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑8wuibn¬∑indexes¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑8wuibn¬∑indexes¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "2880",
    "fixed": false,
    "raw": "Select4"
   },
   "serializedName": "$select",
   "modelType": {
    "$id": "2881",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2882",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2883",
   "isReadOnly": false,
   "realPath": [
    "indexName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2884",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2885",
    "fixed": false,
    "raw": "The definition of the index to create or update."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑1mm4022¬∑indexes-indexname¬∑put¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1mm4022¬∑indexes-indexname¬∑put¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2886",
    "fixed": false,
    "raw": "indexName"
   },
   "serializedName": "indexName",
   "modelType": {
    "$id": "2887",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2888",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2889",
   "isReadOnly": false,
   "realPath": [
    "allowIndexDowntime"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2890",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2891",
    "fixed": false,
    "raw": "Allows new analyzers, tokenizers, token filters, or char filters to be added to an index by taking the index offline for at least a few seconds. This temporarily causes indexing and query requests to fail. Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑1udv4uj¬∑indexes-indexname¬∑put¬∑parameters¬∑1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1udv4uj¬∑indexes-indexname¬∑put¬∑parameters¬∑1"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "2892",
    "fixed": false,
    "raw": "allowIndexDowntime"
   },
   "serializedName": "allowIndexDowntime",
   "modelType": {
    "$id": "2893",
    "$type": "PrimaryType",
    "knownPrimaryType": "boolean",
    "name": {
     "$id": "2894",
     "fixed": false,
     "raw": "Boolean"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2895",
   "isReadOnly": false,
   "realPath": [
    "indexName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2896",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2897",
    "fixed": false,
    "raw": "The name of the index to delete."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑2107c9¬∑indexes-indexname¬∑delete¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑2107c9¬∑indexes-indexname¬∑delete¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2898",
    "fixed": false,
    "raw": "IndexName1"
   },
   "serializedName": "indexName",
   "modelType": {
    "$id": "2899",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2900",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2901",
   "isReadOnly": false,
   "realPath": [
    "indexName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2902",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2903",
    "fixed": false,
    "raw": "The name of the index to retrieve."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑1srn3sv¬∑indexes-indexname¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1srn3sv¬∑indexes-indexname¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2904",
    "fixed": false,
    "raw": "IndexName2"
   },
   "serializedName": "indexName",
   "modelType": {
    "$id": "2905",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2906",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2907",
   "isReadOnly": false,
   "realPath": [
    "indexName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2908",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2909",
    "fixed": false,
    "raw": "The name of the index for which to retrieve statistics."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑1yvc1mg¬∑indexes-indexname-search-stats¬∑get¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1yvc1mg¬∑indexes-indexname-search-stats¬∑get¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2910",
    "fixed": false,
    "raw": "IndexName3"
   },
   "serializedName": "indexName",
   "modelType": {
    "$id": "2911",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2912",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2913",
   "isReadOnly": false,
   "realPath": [
    "indexName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2914",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2915",
    "fixed": false,
    "raw": "The name of the index for which to test an analyzer."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "paths¬∑90kait¬∑indexes-indexname-search-analyze¬∑post¬∑parameters¬∑0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑90kait¬∑indexes-indexname-search-analyze¬∑post¬∑parameters¬∑0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2916",
    "fixed": false,
    "raw": "IndexName4"
   },
   "serializedName": "indexName",
   "modelType": {
    "$id": "2917",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2918",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2919",
   "isReadOnly": false,
   "realPath": [
    "api-version"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2920",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2921",
    "fixed": false,
    "raw": "Client Api Version."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ApiVersionParameter"
     ]
    }
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "2922",
    "fixed": false,
    "raw": "api-version"
   },
   "serializedName": "api-version",
   "modelType": {
    "$id": "2923",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2924",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2925",
   "isReadOnly": false,
   "realPath": [
    "x-ms-client-request-id"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2926",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2927",
    "fixed": false,
    "raw": "The tracking ID sent with the request to help with debugging."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "ClientRequestIdParameter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
     ]
    },
    "x-ms-parameter-location": "method",
    "x-ms-parameter-grouping": {
     "name": "request-options"
    },
    "x-ms-client-request-id": true
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "2928",
    "fixed": false,
    "raw": "x-ms-client-request-id"
   },
   "serializedName": "x-ms-client-request-id",
   "modelType": {
    "$id": "2929",
    "$type": "PrimaryType",
    "format": "uuid",
    "knownPrimaryType": "uuid",
    "name": {
     "$id": "2930",
     "fixed": false,
     "raw": "Uuid"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2931",
   "isReadOnly": false,
   "realPath": [
    "If-Match"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2932",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2933",
    "fixed": false,
    "raw": "Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "IfMatchParameter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfMatchParameter"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "2934",
    "fixed": false,
    "raw": "If-Match"
   },
   "serializedName": "If-Match",
   "modelType": {
    "$id": "2935",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2936",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2937",
   "isReadOnly": false,
   "realPath": [
    "If-None-Match"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2938",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "2939",
    "fixed": false,
    "raw": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "IfNoneMatchParameter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfNoneMatchParameter"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "2940",
    "fixed": false,
    "raw": "If-None-Match"
   },
   "serializedName": "If-None-Match",
   "modelType": {
    "$id": "2941",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2942",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "2943",
   "isReadOnly": false,
   "realPath": [
    "Prefer"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "2944",
    "fixed": false,
    "raw": "return=representation"
   },
   "deprecated": false,
   "documentation": {
    "$id": "2945",
    "fixed": false,
    "raw": "For HTTP PUT requests, instructs the service to return the created/updated resource on success."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-05-06-Preview"
     ],
     "filename": [
      "mem:///152?oai3.shaken.json"
     ],
     "name": "PreferHeaderParameter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/PreferHeaderParameter"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": true,
   "name": {
    "$id": "2946",
    "fixed": false,
    "raw": "Prefer"
   },
   "serializedName": "Prefer",
   "modelType": {
    "$id": "2947",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "2948",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$ref": "2752"
  }
 ],
 "operations": [
  {
   "$id": "2949",
   "methods": [
    {
     "$id": "2950",
     "parameters": [
      {
       "$id": "2951",
       "clientProperty": {
        "$ref": "2763"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "2952",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "2953",
        "fixed": false,
        "raw": "The name of the datasource to create or update."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑xmostj¬∑datasources-datasourcename¬∑put¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑xmostj¬∑datasources-datasourcename¬∑put¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "2954",
        "fixed": false,
        "raw": "dataSourceName"
       },
       "serializedName": "dataSourceName",
       "modelType": {
        "$id": "2955",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "2956",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "2957",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "2958",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "2959",
        "fixed": false,
        "raw": "The definition of the datasource to create or update."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑glmnlv¬∑datasources-datasourcename¬∑put¬∑requestbody",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/requestBodies/paths¬∑glmnlv¬∑datasources-datasourcename¬∑put¬∑requestbody"
         ]
        },
        "x-ms-requestBody-name": "dataSource"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "2960",
        "fixed": false,
        "raw": "dataSource"
       },
       "serializedName": "dataSource",
       "modelType": {
        "$ref": "1295"
       }
      },
      {
       "$id": "2961",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "2962",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "2963",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "2964",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "2965",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "2966",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "2967",
       "clientProperty": {
        "$ref": "2931"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "2968",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "2969",
        "fixed": false,
        "raw": "Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "2970",
        "fixed": false,
        "raw": "If-Match"
       },
       "serializedName": "If-Match",
       "modelType": {
        "$id": "2971",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "2972",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "2973",
       "clientProperty": {
        "$ref": "2937"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "2974",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "2975",
        "fixed": false,
        "raw": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfNoneMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfNoneMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "2976",
        "fixed": false,
        "raw": "If-None-Match"
       },
       "serializedName": "If-None-Match",
       "modelType": {
        "$id": "2977",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "2978",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "2979",
       "clientProperty": {
        "$ref": "2943"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "2980",
        "fixed": false,
        "raw": "return=representation"
       },
       "deprecated": false,
       "documentation": {
        "$id": "2981",
        "fixed": false,
        "raw": "For HTTP PUT requests, instructs the service to return the created/updated resource on success."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "PreferHeaderParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/PreferHeaderParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "2982",
        "fixed": false,
        "raw": "Prefer"
       },
       "serializedName": "Prefer",
       "modelType": {
        "$id": "2983",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "2984",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "2985",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "2986",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "2987",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "2988",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "2989",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "2990",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "2991",
      "fixed": false,
      "raw": "CreateOrUpdate"
     },
     "group": {
      "$id": "2992",
      "fixed": false,
      "raw": "DataSources"
     },
     "serializedName": "DataSources_CreateOrUpdate",
     "url": "/datasources('{dataSourceName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "put",
     "responses": {
      "OK": {
       "$id": "2993",
       "body": {
        "$ref": "1295"
       },
       "extensions": {
        "$id": "2994",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑12fxa4m¬∑datasources-datasourcename¬∑put¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑12fxa4m¬∑datasources-datasourcename¬∑put¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      },
      "Created": {
       "$id": "2995",
       "body": {
        "$ref": "1295"
       },
       "extensions": {
        "$id": "2996",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑560rzo¬∑datasources-datasourcename¬∑put¬∑responses¬∑201",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑560rzo¬∑datasources-datasourcename¬∑put¬∑responses¬∑201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "2997",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "2998",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑1ljzjd6¬∑datasources-datasourcename¬∑put¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1ljzjd6¬∑datasources-datasourcename¬∑put¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "2999",
      "body": {
       "$ref": "1295"
      },
      "isNullable": true
     },
     "description": "Creates a new datasource or updates a datasource if it already exists.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Update-Data-Source",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-requestBody-index": "1",
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceCreateOrUpdateDataSource": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "dataSourceName": "mydatasource",
         "api-version": "2019-05-06-Preview",
         "Prefer": "return=representation",
         "dataSource": {
          "name": "mydocdbdatasource",
          "description": "My Cosmos DB data source.",
          "type": "cosmosdb",
          "credentials": {
           "connectionString": "AccountEndpoint=https://myDocDbEndpoint.documents.azure.com;AccountKey=myDocDbAuthKey;Database=myDocDbDatabaseId"
          },
          "container": {
           "name": "myDocDbCollectionId",
           "query": "SELECT c.id, c.userId, tag, c._ts FROM c JOIN tag IN c.tags WHERE c._ts >= @HighWaterMark ORDER BY c._ts"
          },
          "dataChangeDetectionPolicy": {
           "@odata.type": "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
           "highWaterMarkColumnName": "_ts"
          },
          "dataDeletionDetectionPolicy": {
           "@odata.type": "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
           "softDeleteColumnName": "isDeleted",
           "softDeleteMarkerValue": "true"
          }
         }
        },
        "responses": {
         "200": {
          "body": {
           "name": "mydocdbdatasource",
           "description": "My Cosmos DB data source.",
           "type": "cosmosdb",
           "credentials": {
            "connectionString": null
           },
           "container": {
            "name": "myDocDbCollectionId",
            "query": "SELECT c.id, c.userId, tag, c._ts FROM c JOIN tag IN c.tags WHERE c._ts >= @HighWaterMark ORDER BY c._ts"
           },
           "dataChangeDetectionPolicy": {
            "@odata.type": "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
            "highWaterMarkColumnName": "_ts"
           },
           "dataDeletionDetectionPolicy": {
            "@odata.type": "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
            "softDeleteColumnName": "isDeleted",
            "softDeleteMarkerValue": "true"
           }
          }
         },
         "201": {
          "body": {
           "name": "mydocdbdatasource",
           "description": "My Cosmos DB data source.",
           "type": "cosmosdb",
           "credentials": {
            "connectionString": null
           },
           "container": {
            "name": "myDocDbCollectionId",
            "query": "SELECT c.id, c.userId, tag, c._ts FROM c JOIN tag IN c.tags WHERE c._ts >= @HighWaterMark ORDER BY c._ts"
           },
           "dataChangeDetectionPolicy": {
            "@odata.type": "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
            "highWaterMarkColumnName": "_ts"
           },
           "dataDeletionDetectionPolicy": {
            "@odata.type": "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
            "softDeleteColumnName": "isDeleted",
            "softDeleteMarkerValue": "true"
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3000",
     "parameters": [
      {
       "$id": "3001",
       "clientProperty": {
        "$ref": "2763"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3002",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3003",
        "fixed": false,
        "raw": "The name of the datasource to delete."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑18x6lnb¬∑datasources-datasourcename¬∑delete¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑18x6lnb¬∑datasources-datasourcename¬∑delete¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3004",
        "fixed": false,
        "raw": "dataSourceName"
       },
       "serializedName": "dataSourceName",
       "modelType": {
        "$id": "3005",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3006",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3007",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3008",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3009",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3010",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3011",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3012",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3013",
       "clientProperty": {
        "$ref": "2931"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3014",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3015",
        "fixed": false,
        "raw": "Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3016",
        "fixed": false,
        "raw": "If-Match"
       },
       "serializedName": "If-Match",
       "modelType": {
        "$id": "3017",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3018",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3019",
       "clientProperty": {
        "$ref": "2937"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3020",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3021",
        "fixed": false,
        "raw": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfNoneMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfNoneMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3022",
        "fixed": false,
        "raw": "If-None-Match"
       },
       "serializedName": "If-None-Match",
       "modelType": {
        "$id": "3023",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3024",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3025",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3026",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3027",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3028",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3029",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3030",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3031",
      "fixed": false,
      "raw": "Delete"
     },
     "group": {
      "$id": "3032",
      "fixed": false,
      "raw": "DataSources"
     },
     "serializedName": "DataSources_Delete",
     "url": "/datasources('{dataSourceName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "delete",
     "responses": {
      "NoContent": {
       "$id": "3033",
       "extensions": {
        "$id": "3034",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1iy9uyt¬∑datasources-datasourcename¬∑delete¬∑responses¬∑204",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1iy9uyt¬∑datasources-datasourcename¬∑delete¬∑responses¬∑204"
         ]
        }
       },
       "isNullable": true
      },
      "NotFound": {
       "$id": "3035",
       "extensions": {
        "$id": "3036",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑fdh69c¬∑datasources-datasourcename¬∑delete¬∑responses¬∑404",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑fdh69c¬∑datasources-datasourcename¬∑delete¬∑responses¬∑404"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3037",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3038",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑8r8sq4¬∑datasources-datasourcename¬∑delete¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑8r8sq4¬∑datasources-datasourcename¬∑delete¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3039",
      "isNullable": true
     },
     "description": "Deletes a datasource.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Delete-Data-Source",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceDeleteDataSource": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "dataSourceName": "mydatasource",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "204": {},
         "404": {}
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3040",
     "parameters": [
      {
       "$id": "3041",
       "clientProperty": {
        "$ref": "2763"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3042",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3043",
        "fixed": false,
        "raw": "The name of the datasource to retrieve."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑15mxavz¬∑datasources-datasourcename¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑15mxavz¬∑datasources-datasourcename¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3044",
        "fixed": false,
        "raw": "dataSourceName"
       },
       "serializedName": "dataSourceName",
       "modelType": {
        "$id": "3045",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3046",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3047",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3048",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3049",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3050",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3051",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3052",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3053",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3054",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3055",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3056",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3057",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3058",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3059",
      "fixed": false,
      "raw": "Get"
     },
     "group": {
      "$id": "3060",
      "fixed": false,
      "raw": "DataSources"
     },
     "serializedName": "DataSources_Get",
     "url": "/datasources('{dataSourceName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3061",
       "body": {
        "$ref": "1295"
       },
       "extensions": {
        "$id": "3062",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1cb0kp5¬∑datasources-datasourcename¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1cb0kp5¬∑datasources-datasourcename¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3063",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3064",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑xv27r8¬∑datasources-datasourcename¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑xv27r8¬∑datasources-datasourcename¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3065",
      "body": {
       "$ref": "1295"
      },
      "isNullable": true
     },
     "description": "Retrieves a datasource definition.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Get-Data-Source",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceGetDataSource": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "dataSourceName": "mydatasource",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "name": "mydocdbdatasource",
           "description": "My Cosmos DB data source.",
           "type": "cosmosdb",
           "credentials": {
            "connectionString": null
           },
           "container": {
            "name": "myDocDbCollectionId",
            "query": "SELECT c.id, c.userId, tag, c._ts FROM c JOIN tag IN c.tags WHERE c._ts >= @HighWaterMark ORDER BY c._ts"
           },
           "dataChangeDetectionPolicy": {
            "@odata.type": "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
            "highWaterMarkColumnName": "_ts"
           },
           "dataDeletionDetectionPolicy": {
            "@odata.type": "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
            "softDeleteColumnName": "isDeleted",
            "softDeleteMarkerValue": "true"
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3066",
     "parameters": [
      {
       "$id": "3067",
       "clientProperty": {
        "$ref": "2781"
       },
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3068",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3069",
        "fixed": false,
        "raw": "Selects which top-level properties of the data sources to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑8o7w1g¬∑datasources¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑8o7w1g¬∑datasources¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3070",
        "fixed": false,
        "raw": "$select"
       },
       "serializedName": "$select",
       "modelType": {
        "$id": "3071",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3072",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3073",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3074",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3075",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3076",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3077",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3078",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3079",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3080",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3081",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3082",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3083",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3084",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3085",
      "fixed": false,
      "raw": "List"
     },
     "group": {
      "$id": "3086",
      "fixed": false,
      "raw": "DataSources"
     },
     "serializedName": "DataSources_List",
     "url": "/datasources",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3087",
       "body": {
        "$ref": "1344"
       },
       "extensions": {
        "$id": "3088",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑19eml5r¬∑datasources¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑19eml5r¬∑datasources¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3089",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3090",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑5e0o9m¬∑datasources¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑5e0o9m¬∑datasources¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3091",
      "body": {
       "$ref": "1344"
      },
      "isNullable": true
     },
     "description": "Lists all datasources available for a search service.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/List-Data-Sources",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceListDataSources": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "$select": "*",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "value": [
            {
             "name": "mydocdbdatasource",
             "description": "My Cosmos DB data source.",
             "type": "cosmosdb",
             "credentials": {
              "connectionString": null
             },
             "container": {
              "name": "myDocDbCollectionId",
              "query": "SELECT c.id, c.userId, tag, c._ts FROM c JOIN tag IN c.tags WHERE c._ts >= @HighWaterMark ORDER BY c._ts"
             },
             "dataChangeDetectionPolicy": {
              "@odata.type": "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
              "highWaterMarkColumnName": "_ts"
             },
             "dataDeletionDetectionPolicy": {
              "@odata.type": "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
              "softDeleteColumnName": "isDeleted",
              "softDeleteMarkerValue": "true"
             }
            }
           ]
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3092",
     "parameters": [
      {
       "$id": "3093",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3094",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3095",
        "fixed": false,
        "raw": "The definition of the datasource to create."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1xsd4kg¬∑datasources¬∑post¬∑requestbody",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/requestBodies/paths¬∑1xsd4kg¬∑datasources¬∑post¬∑requestbody"
         ]
        },
        "x-ms-requestBody-name": "dataSource"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3096",
        "fixed": false,
        "raw": "dataSource"
       },
       "serializedName": "dataSource",
       "modelType": {
        "$ref": "1295"
       }
      },
      {
       "$id": "3097",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3098",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3099",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3100",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3101",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3102",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3103",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3104",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3105",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3106",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3107",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3108",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3109",
      "fixed": false,
      "raw": "Create"
     },
     "group": {
      "$id": "3110",
      "fixed": false,
      "raw": "DataSources"
     },
     "serializedName": "DataSources_Create",
     "url": "/datasources",
     "isAbsoluteUrl": false,
     "httpMethod": "post",
     "responses": {
      "Created": {
       "$id": "3111",
       "body": {
        "$ref": "1295"
       },
       "extensions": {
        "$id": "3112",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑mmklcb¬∑datasources¬∑post¬∑responses¬∑201",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑mmklcb¬∑datasources¬∑post¬∑responses¬∑201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3113",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3114",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑7ngzj1¬∑datasources¬∑post¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑7ngzj1¬∑datasources¬∑post¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3115",
      "body": {
       "$ref": "1295"
      },
      "isNullable": true
     },
     "description": "Creates a new datasource.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Create-Data-Source",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-requestBody-index": "0",
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceCreateDataSource": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "api-version": "2019-05-06-Preview",
         "dataSource": {
          "name": "mydocdbdatasource",
          "description": "My Cosmos DB data source.",
          "type": "cosmosdb",
          "credentials": {
           "connectionString": "AccountEndpoint=https://myDocDbEndpoint.documents.azure.com;AccountKey=myDocDbAuthKey;Database=myDocDbDatabaseId"
          },
          "container": {
           "name": "myDocDbCollectionId",
           "query": "SELECT c.id, c.userId, tag, c._ts FROM c JOIN tag IN c.tags WHERE c._ts >= @HighWaterMark ORDER BY c._ts"
          },
          "dataChangeDetectionPolicy": {
           "@odata.type": "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
           "highWaterMarkColumnName": "_ts"
          },
          "dataDeletionDetectionPolicy": {
           "@odata.type": "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
           "softDeleteColumnName": "isDeleted",
           "softDeleteMarkerValue": "true"
          }
         }
        },
        "responses": {
         "201": {
          "body": {
           "name": "mydocdbdatasource",
           "description": "My Cosmos DB data source.",
           "type": "cosmosdb",
           "credentials": {
            "connectionString": null
           },
           "container": {
            "name": "myDocDbCollectionId",
            "query": "SELECT c.id, c.userId, tag, c._ts FROM c JOIN tag IN c.tags WHERE c._ts >= @HighWaterMark ORDER BY c._ts"
           },
           "dataChangeDetectionPolicy": {
            "@odata.type": "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
            "highWaterMarkColumnName": "_ts"
           },
           "dataDeletionDetectionPolicy": {
            "@odata.type": "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
            "softDeleteColumnName": "isDeleted",
            "softDeleteMarkerValue": "true"
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    }
   ],
   "name": {
    "$id": "3116",
    "fixed": false,
    "raw": "DataSources"
   },
   "typeName": {
    "$id": "3117",
    "fixed": false
   },
   "nameForProperty": "DataSources"
  },
  {
   "$id": "3118",
   "methods": [
    {
     "$id": "3119",
     "parameters": [
      {
       "$id": "3120",
       "clientProperty": {
        "$ref": "2787"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3121",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3122",
        "fixed": false,
        "raw": "The name of the indexer to reset."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1xi9qa2¬∑indexers-indexername-search-reset¬∑post¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1xi9qa2¬∑indexers-indexername-search-reset¬∑post¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3123",
        "fixed": false,
        "raw": "indexerName"
       },
       "serializedName": "indexerName",
       "modelType": {
        "$id": "3124",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3125",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3126",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3127",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3128",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3129",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3130",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3131",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3132",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3133",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3134",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3135",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3136",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3137",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3138",
      "fixed": false,
      "raw": "Reset"
     },
     "group": {
      "$id": "3139",
      "fixed": false,
      "raw": "Indexers"
     },
     "serializedName": "Indexers_Reset",
     "url": "/indexers('{indexerName}')/search.reset",
     "isAbsoluteUrl": false,
     "httpMethod": "post",
     "responses": {
      "NoContent": {
       "$id": "3140",
       "extensions": {
        "$id": "3141",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑sriegh¬∑indexers-indexername-search-reset¬∑post¬∑responses¬∑204",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑sriegh¬∑indexers-indexername-search-reset¬∑post¬∑responses¬∑204"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3142",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3143",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑5a887e¬∑indexers-indexername-search-reset¬∑post¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑5a887e¬∑indexers-indexername-search-reset¬∑post¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3144",
      "isNullable": true
     },
     "description": "Resets the change tracking state associated with an indexer.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Reset-Indexer",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceResetIndexer": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "indexerName": "myindexer",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "204": {}
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3145",
     "parameters": [
      {
       "$id": "3146",
       "clientProperty": {
        "$ref": "2787"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3147",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3148",
        "fixed": false,
        "raw": "The name of the indexer to run."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑182qd9c¬∑indexers-indexername-search-run¬∑post¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑182qd9c¬∑indexers-indexername-search-run¬∑post¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3149",
        "fixed": false,
        "raw": "indexerName"
       },
       "serializedName": "indexerName",
       "modelType": {
        "$id": "3150",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3151",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3152",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3153",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3154",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3155",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3156",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3157",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3158",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3159",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3160",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3161",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3162",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3163",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3164",
      "fixed": false,
      "raw": "Run"
     },
     "group": {
      "$id": "3165",
      "fixed": false,
      "raw": "Indexers"
     },
     "serializedName": "Indexers_Run",
     "url": "/indexers('{indexerName}')/search.run",
     "isAbsoluteUrl": false,
     "httpMethod": "post",
     "responses": {
      "Accepted": {
       "$id": "3166",
       "extensions": {
        "$id": "3167",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1kc2b2v¬∑indexers-indexername-search-run¬∑post¬∑responses¬∑202",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1kc2b2v¬∑indexers-indexername-search-run¬∑post¬∑responses¬∑202"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3168",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3169",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑1u4pi15¬∑indexers-indexername-search-run¬∑post¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1u4pi15¬∑indexers-indexername-search-run¬∑post¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3170",
      "isNullable": true
     },
     "description": "Runs an indexer on-demand.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Run-Indexer",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceRunIndexer": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "indexerName": "myindexer",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "202": {}
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3171",
     "parameters": [
      {
       "$id": "3172",
       "clientProperty": {
        "$ref": "2787"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3173",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3174",
        "fixed": false,
        "raw": "The name of the indexer to create or update."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑r1zcwq¬∑indexers-indexername¬∑put¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑r1zcwq¬∑indexers-indexername¬∑put¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3175",
        "fixed": false,
        "raw": "indexerName"
       },
       "serializedName": "indexerName",
       "modelType": {
        "$id": "3176",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3177",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3178",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3179",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3180",
        "fixed": false,
        "raw": "The definition of the indexer to create or update."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1hotbkw¬∑indexers-indexername¬∑put¬∑requestbody",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/requestBodies/paths¬∑1hotbkw¬∑indexers-indexername¬∑put¬∑requestbody"
         ]
        },
        "x-ms-requestBody-name": "indexer"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3181",
        "fixed": false,
        "raw": "indexer"
       },
       "serializedName": "indexer",
       "modelType": {
        "$ref": "1428"
       }
      },
      {
       "$id": "3182",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3183",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3184",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3185",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3186",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3187",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3188",
       "clientProperty": {
        "$ref": "2931"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3189",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3190",
        "fixed": false,
        "raw": "Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3191",
        "fixed": false,
        "raw": "If-Match"
       },
       "serializedName": "If-Match",
       "modelType": {
        "$id": "3192",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3193",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3194",
       "clientProperty": {
        "$ref": "2937"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3195",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3196",
        "fixed": false,
        "raw": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfNoneMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfNoneMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3197",
        "fixed": false,
        "raw": "If-None-Match"
       },
       "serializedName": "If-None-Match",
       "modelType": {
        "$id": "3198",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3199",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3200",
       "clientProperty": {
        "$ref": "2943"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3201",
        "fixed": false,
        "raw": "return=representation"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3202",
        "fixed": false,
        "raw": "For HTTP PUT requests, instructs the service to return the created/updated resource on success."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "PreferHeaderParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/PreferHeaderParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3203",
        "fixed": false,
        "raw": "Prefer"
       },
       "serializedName": "Prefer",
       "modelType": {
        "$id": "3204",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3205",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3206",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3207",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3208",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3209",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3210",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3211",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3212",
      "fixed": false,
      "raw": "CreateOrUpdate"
     },
     "group": {
      "$id": "3213",
      "fixed": false,
      "raw": "Indexers"
     },
     "serializedName": "Indexers_CreateOrUpdate",
     "url": "/indexers('{indexerName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "put",
     "responses": {
      "OK": {
       "$id": "3214",
       "body": {
        "$ref": "1428"
       },
       "extensions": {
        "$id": "3215",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1e3v4v3¬∑indexers-indexername¬∑put¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1e3v4v3¬∑indexers-indexername¬∑put¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      },
      "Created": {
       "$id": "3216",
       "body": {
        "$ref": "1428"
       },
       "extensions": {
        "$id": "3217",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑a1f4w9¬∑indexers-indexername¬∑put¬∑responses¬∑201",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑a1f4w9¬∑indexers-indexername¬∑put¬∑responses¬∑201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3218",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3219",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑1jcdgg5¬∑indexers-indexername¬∑put¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1jcdgg5¬∑indexers-indexername¬∑put¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3220",
      "body": {
       "$ref": "1428"
      },
      "isNullable": true
     },
     "description": "Creates a new indexer or updates an indexer if it already exists.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Create-Indexer",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-requestBody-index": "1",
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceCreateOrUpdateIndexer": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "indexerName": "myindexer",
         "api-version": "2019-05-06-Preview",
         "Prefer": "return=representation",
         "indexer": {
          "name": "myindexer",
          "description": "a cool indexer",
          "dataSourceName": "mydatasource",
          "targetIndexName": "orders",
          "schedule": {
           "interval": "PT1H",
           "startTime": "2015-01-01T00:00:00Z"
          },
          "parameters": {
           "maxFailedItems": "10",
           "maxFailedItemsPerBatch": "5"
          }
         }
        },
        "responses": {
         "200": {
          "body": {
           "name": "myindexer",
           "description": "a cool indexer",
           "dataSourceName": "mydatasource",
           "targetIndexName": "orders",
           "schedule": {
            "interval": "PT1H",
            "startTime": "2015-01-01T00:00:00Z"
           },
           "parameters": {
            "maxFailedItems": "10",
            "maxFailedItemsPerBatch": "5"
           },
           "fieldMappings": [],
           "disabled": false
          }
         },
         "201": {
          "body": {
           "name": "myindexer",
           "description": "a cool indexer",
           "dataSourceName": "mydatasource",
           "targetIndexName": "orders",
           "schedule": {
            "interval": "PT1H",
            "startTime": "2015-01-01T00:00:00Z"
           },
           "parameters": {
            "maxFailedItems": "10",
            "maxFailedItemsPerBatch": "5"
           },
           "fieldMappings": [],
           "disabled": false
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3221",
     "parameters": [
      {
       "$id": "3222",
       "clientProperty": {
        "$ref": "2787"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3223",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3224",
        "fixed": false,
        "raw": "The name of the indexer to delete."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑k6reyr¬∑indexers-indexername¬∑delete¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑k6reyr¬∑indexers-indexername¬∑delete¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3225",
        "fixed": false,
        "raw": "indexerName"
       },
       "serializedName": "indexerName",
       "modelType": {
        "$id": "3226",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3227",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3228",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3229",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3230",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3231",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3232",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3233",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3234",
       "clientProperty": {
        "$ref": "2931"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3235",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3236",
        "fixed": false,
        "raw": "Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3237",
        "fixed": false,
        "raw": "If-Match"
       },
       "serializedName": "If-Match",
       "modelType": {
        "$id": "3238",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3239",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3240",
       "clientProperty": {
        "$ref": "2937"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3241",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3242",
        "fixed": false,
        "raw": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfNoneMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfNoneMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3243",
        "fixed": false,
        "raw": "If-None-Match"
       },
       "serializedName": "If-None-Match",
       "modelType": {
        "$id": "3244",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3245",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3246",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3247",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3248",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3249",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3250",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3251",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3252",
      "fixed": false,
      "raw": "Delete"
     },
     "group": {
      "$id": "3253",
      "fixed": false,
      "raw": "Indexers"
     },
     "serializedName": "Indexers_Delete",
     "url": "/indexers('{indexerName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "delete",
     "responses": {
      "NoContent": {
       "$id": "3254",
       "extensions": {
        "$id": "3255",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑124qk48¬∑indexers-indexername¬∑delete¬∑responses¬∑204",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑124qk48¬∑indexers-indexername¬∑delete¬∑responses¬∑204"
         ]
        }
       },
       "isNullable": true
      },
      "NotFound": {
       "$id": "3256",
       "extensions": {
        "$id": "3257",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑m78h0z¬∑indexers-indexername¬∑delete¬∑responses¬∑404",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑m78h0z¬∑indexers-indexername¬∑delete¬∑responses¬∑404"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3258",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3259",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑1troueu¬∑indexers-indexername¬∑delete¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1troueu¬∑indexers-indexername¬∑delete¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3260",
      "isNullable": true
     },
     "description": "Deletes an indexer.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Delete-Indexer",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceDeleteIndexer": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "indexerName": "myindexer",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "204": {},
         "404": {}
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3261",
     "parameters": [
      {
       "$id": "3262",
       "clientProperty": {
        "$ref": "2787"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3263",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3264",
        "fixed": false,
        "raw": "The name of the indexer to retrieve."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1y1l44f¬∑indexers-indexername¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1y1l44f¬∑indexers-indexername¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3265",
        "fixed": false,
        "raw": "indexerName"
       },
       "serializedName": "indexerName",
       "modelType": {
        "$id": "3266",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3267",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3268",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3269",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3270",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3271",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3272",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3273",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3274",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3275",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3276",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3277",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3278",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3279",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3280",
      "fixed": false,
      "raw": "Get"
     },
     "group": {
      "$id": "3281",
      "fixed": false,
      "raw": "Indexers"
     },
     "serializedName": "Indexers_Get",
     "url": "/indexers('{indexerName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3282",
       "body": {
        "$ref": "1428"
       },
       "extensions": {
        "$id": "3283",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑16r7y0l¬∑indexers-indexername¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑16r7y0l¬∑indexers-indexername¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3284",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3285",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑83qhf7¬∑indexers-indexername¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑83qhf7¬∑indexers-indexername¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3286",
      "body": {
       "$ref": "1428"
      },
      "isNullable": true
     },
     "description": "Retrieves an indexer definition.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Get-Indexer",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceGetIndexer": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "indexerName": "myindexer",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "name": "myindexer",
           "description": "a cool indexer",
           "dataSourceName": "mydatasource",
           "targetIndexName": "orders",
           "schedule": {
            "interval": "PT1H",
            "startTime": "2015-01-01T00:00:00Z"
           },
           "parameters": {
            "maxFailedItems": "10",
            "maxFailedItemsPerBatch": "5"
           },
           "fieldMappings": [],
           "disabled": false
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3287",
     "parameters": [
      {
       "$id": "3288",
       "clientProperty": {
        "$ref": "2781"
       },
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3289",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3290",
        "fixed": false,
        "raw": "Selects which top-level properties of the indexers to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑iux4xo¬∑indexers¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑iux4xo¬∑indexers¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3291",
        "fixed": false,
        "raw": "$select"
       },
       "serializedName": "$select",
       "modelType": {
        "$id": "3292",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3293",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3294",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3295",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3296",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3297",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3298",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3299",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3300",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3301",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3302",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3303",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3304",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3305",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3306",
      "fixed": false,
      "raw": "List"
     },
     "group": {
      "$id": "3307",
      "fixed": false,
      "raw": "Indexers"
     },
     "serializedName": "Indexers_List",
     "url": "/indexers",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3308",
       "body": {
        "$ref": "1492"
       },
       "extensions": {
        "$id": "3309",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1xbqyfd¬∑indexers¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1xbqyfd¬∑indexers¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3310",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3311",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑jui52u¬∑indexers¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑jui52u¬∑indexers¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3312",
      "body": {
       "$ref": "1492"
      },
      "isNullable": true
     },
     "description": "Lists all indexers available for a search service.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/List-Indexers",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceListIndexers": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "$select": "*",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "value": [
            {
             "name": "myindexer",
             "description": "a cool indexer",
             "dataSourceName": "mydocdbdatasource",
             "targetIndexName": "orders",
             "schedule": {
              "interval": "PT1H",
              "startTime": "2015-01-01T00:00:00Z"
             },
             "parameters": {
              "maxFailedItems": "10",
              "maxFailedItemsPerBatch": "5"
             },
             "fieldMappings": [],
             "disabled": false
            },
            {
             "name": "myotherindexer",
             "description": "another cool indexer",
             "dataSourceName": "myblobdatasource",
             "targetIndexName": "orders",
             "parameters": {
              "maxFailedItems": "10",
              "maxFailedItemsPerBatch": "5",
              "batchSize": "15"
             },
             "fieldMappings": [
              {
               "sourceFieldName": "PersonName",
               "targetFieldName": "FirstName",
               "mappingFunction": {
                "name": "extractTokenAtPosition",
                "parameters": {
                 "delimiter": " ",
                 "position": "0"
                }
               }
              },
              {
               "sourceFieldName": "PersonName",
               "targetFieldName": "LastName",
               "mappingFunction": {
                "name": "extractTokenAtPosition",
                "parameters": {
                 "delimiter": " ",
                 "position": "1"
                }
               }
              }
             ],
             "disabled": false
            }
           ]
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3313",
     "parameters": [
      {
       "$id": "3314",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3315",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3316",
        "fixed": false,
        "raw": "The definition of the indexer to create."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑17rzeye¬∑indexers¬∑post¬∑requestbody",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/requestBodies/paths¬∑17rzeye¬∑indexers¬∑post¬∑requestbody"
         ]
        },
        "x-ms-requestBody-name": "indexer"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3317",
        "fixed": false,
        "raw": "indexer"
       },
       "serializedName": "indexer",
       "modelType": {
        "$ref": "1428"
       }
      },
      {
       "$id": "3318",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3319",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3320",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3321",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3322",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3323",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3324",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3325",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3326",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3327",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3328",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3329",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3330",
      "fixed": false,
      "raw": "Create"
     },
     "group": {
      "$id": "3331",
      "fixed": false,
      "raw": "Indexers"
     },
     "serializedName": "Indexers_Create",
     "url": "/indexers",
     "isAbsoluteUrl": false,
     "httpMethod": "post",
     "responses": {
      "Created": {
       "$id": "3332",
       "body": {
        "$ref": "1428"
       },
       "extensions": {
        "$id": "3333",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑177palu¬∑indexers¬∑post¬∑responses¬∑201",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑177palu¬∑indexers¬∑post¬∑responses¬∑201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3334",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3335",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑1uboba4¬∑indexers¬∑post¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1uboba4¬∑indexers¬∑post¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3336",
      "body": {
       "$ref": "1428"
      },
      "isNullable": true
     },
     "description": "Creates a new indexer.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Create-Indexer",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-requestBody-index": "0",
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceCreateIndexer": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "api-version": "2019-05-06-Preview",
         "indexer": {
          "name": "myindexer",
          "description": "a cool indexer",
          "dataSourceName": "mydatasource",
          "targetIndexName": "orders",
          "schedule": {
           "interval": "PT1H",
           "startTime": "2015-01-01T00:00:00Z"
          },
          "parameters": {
           "maxFailedItems": "10",
           "maxFailedItemsPerBatch": "5"
          }
         }
        },
        "responses": {
         "201": {
          "body": {
           "name": "myindexer",
           "description": "a cool indexer",
           "dataSourceName": "mydatasource",
           "targetIndexName": "orders",
           "schedule": {
            "interval": "PT1H",
            "startTime": "2015-01-01T00:00:00Z"
           },
           "parameters": {
            "maxFailedItems": "10",
            "maxFailedItemsPerBatch": "5"
           },
           "fieldMappings": [],
           "disabled": false
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3337",
     "parameters": [
      {
       "$id": "3338",
       "clientProperty": {
        "$ref": "2787"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3339",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3340",
        "fixed": false,
        "raw": "The name of the indexer for which to retrieve status."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑cx1ex6¬∑indexers-indexername-search-status¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑cx1ex6¬∑indexers-indexername-search-status¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3341",
        "fixed": false,
        "raw": "indexerName"
       },
       "serializedName": "indexerName",
       "modelType": {
        "$id": "3342",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3343",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3344",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3345",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3346",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3347",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3348",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3349",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3350",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3351",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3352",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3353",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3354",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3355",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3356",
      "fixed": false,
      "raw": "GetStatus"
     },
     "group": {
      "$id": "3357",
      "fixed": false,
      "raw": "Indexers"
     },
     "serializedName": "Indexers_GetStatus",
     "url": "/indexers('{indexerName}')/search.status",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3358",
       "body": {
        "$ref": "1658"
       },
       "extensions": {
        "$id": "3359",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑j1y388¬∑indexers-indexername-search-status¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑j1y388¬∑indexers-indexername-search-status¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3360",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3361",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑b83yzk¬∑indexers-indexername-search-status¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑b83yzk¬∑indexers-indexername-search-status¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3362",
      "body": {
       "$ref": "1658"
      },
      "isNullable": true
     },
     "description": "Returns the current status and execution history of an indexer.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Get-Indexer-Status",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceGetIndexerStatus": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "indexerName": "myindexer",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "status": "running",
           "lastResult": {
            "status": "success",
            "errorMessage": null,
            "startTime": "2014-11-26T03:37:18.853Z",
            "endTime": "2014-11-26T03:37:19.012Z",
            "errors": [],
            "warnings": [],
            "itemsProcessed": "11",
            "itemsFailed": "0",
            "initialTrackingState": null,
            "finalTrackingState": null
           },
           "executionHistory": [
            {
             "status": "success",
             "errorMessage": null,
             "startTime": "2014-11-26T03:37:18.853Z",
             "endTime": "2014-11-26T03:37:19.012Z",
             "errors": [],
             "warnings": [],
             "itemsProcessed": "11",
             "itemsFailed": "0",
             "initialTrackingState": null,
             "finalTrackingState": null
            },
            {
             "status": "transientFailure",
             "errorMessage": null,
             "startTime": "2014-11-26T03:28:10.125Z",
             "endTime": "2014-11-26T03:28:12.007Z",
             "errors": [
              {
               "key": "",
               "errorMessage": "Document key cannot be missing or empty.",
               "statusCode": "400",
               "name": null,
               "details": null,
               "documentationLink": null
              },
              {
               "key": "document id 1",
               "errorMessage": "Could not read the value of column 'foo' at index '0'.",
               "statusCode": "400",
               "name": "DocumentExtraction.AzureBlob.MyDataSource",
               "details": "The file could not be parsed.",
               "documentationLink": "https://go.microsoft.com/fwlink/?linkid=2049388"
              }
             ],
             "warnings": [
              {
               "key": "document id",
               "message": "A warning doesn't stop indexing, and is intended to inform you of certain interesting situations, like when a blob indexer truncates the amount of text extracted from a blob.",
               "name": null,
               "details": null,
               "documentationLink": null
              },
              {
               "key": "document id 2",
               "message": "Document was truncated to 50000 characters.",
               "name": "Enrichment.LanguageDetectionSkill.#4",
               "details": "The skill did something that didn't break anything, nonetheless something we didn't expect happened, so it might be worth double checking.",
               "documentationLink": "https://go.microsoft.com/fwlink/?linkid=2099692"
              }
             ],
             "itemsProcessed": "1",
             "itemsFailed": "2",
             "initialTrackingState": null,
             "finalTrackingState": null
            }
           ],
           "limits": {
            "maxRunTime": "22:00:00",
            "maxDocumentExtractionSize": "256000000",
            "maxDocumentContentCharactersToExtract": "4000000"
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    }
   ],
   "name": {
    "$id": "3363",
    "fixed": false,
    "raw": "Indexers"
   },
   "typeName": {
    "$id": "3364",
    "fixed": false
   },
   "nameForProperty": "Indexers"
  },
  {
   "$id": "3365",
   "methods": [
    {
     "$id": "3366",
     "parameters": [
      {
       "$id": "3367",
       "clientProperty": {
        "$ref": "2829"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3368",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3369",
        "fixed": false,
        "raw": "The name of the skillset to create or update."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑b0qsas¬∑skillsets-skillsetname¬∑put¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑b0qsas¬∑skillsets-skillsetname¬∑put¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3370",
        "fixed": false,
        "raw": "skillsetName"
       },
       "serializedName": "skillsetName",
       "modelType": {
        "$id": "3371",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3372",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3373",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3374",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3375",
        "fixed": false,
        "raw": "The skillset containing one or more skills to create or update in a search service."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑wms8gh¬∑skillsets-skillsetname¬∑put¬∑requestbody",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/requestBodies/paths¬∑wms8gh¬∑skillsets-skillsetname¬∑put¬∑requestbody"
         ]
        },
        "x-ms-requestBody-name": "skillset"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3376",
        "fixed": false,
        "raw": "skillset"
       },
       "serializedName": "skillset",
       "modelType": {
        "$ref": "2164"
       }
      },
      {
       "$id": "3377",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3378",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3379",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3380",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3381",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3382",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3383",
       "clientProperty": {
        "$ref": "2931"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3384",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3385",
        "fixed": false,
        "raw": "Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3386",
        "fixed": false,
        "raw": "If-Match"
       },
       "serializedName": "If-Match",
       "modelType": {
        "$id": "3387",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3388",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3389",
       "clientProperty": {
        "$ref": "2937"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3390",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3391",
        "fixed": false,
        "raw": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfNoneMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfNoneMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3392",
        "fixed": false,
        "raw": "If-None-Match"
       },
       "serializedName": "If-None-Match",
       "modelType": {
        "$id": "3393",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3394",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3395",
       "clientProperty": {
        "$ref": "2943"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3396",
        "fixed": false,
        "raw": "return=representation"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3397",
        "fixed": false,
        "raw": "For HTTP PUT requests, instructs the service to return the created/updated resource on success."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "PreferHeaderParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/PreferHeaderParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3398",
        "fixed": false,
        "raw": "Prefer"
       },
       "serializedName": "Prefer",
       "modelType": {
        "$id": "3399",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3400",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3401",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3402",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3403",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3404",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3405",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3406",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3407",
      "fixed": false,
      "raw": "CreateOrUpdate"
     },
     "group": {
      "$id": "3408",
      "fixed": false,
      "raw": "Skillsets"
     },
     "serializedName": "Skillsets_CreateOrUpdate",
     "url": "/skillsets('{skillsetName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "put",
     "responses": {
      "OK": {
       "$id": "3409",
       "body": {
        "$ref": "2164"
       },
       "extensions": {
        "$id": "3410",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑jhey2t¬∑skillsets-skillsetname¬∑put¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑jhey2t¬∑skillsets-skillsetname¬∑put¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      },
      "Created": {
       "$id": "3411",
       "body": {
        "$ref": "2164"
       },
       "extensions": {
        "$id": "3412",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑8ns021¬∑skillsets-skillsetname¬∑put¬∑responses¬∑201",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑8ns021¬∑skillsets-skillsetname¬∑put¬∑responses¬∑201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3413",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3414",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑r9jsg9¬∑skillsets-skillsetname¬∑put¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑r9jsg9¬∑skillsets-skillsetname¬∑put¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3415",
      "body": {
       "$ref": "2164"
      },
      "isNullable": true
     },
     "description": "Creates a new skillset in a search service or updates the skillset if it already exists.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/update-skillset",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-requestBody-index": "1",
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceCreateOrUpdateSkillset": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "skillsetName": "demoskillset",
         "api-version": "2019-05-06-Preview",
         "Prefer": "return=representation",
         "skillset": {
          "name": "demoskillset",
          "description": "Extract entities, detect language and extract key-phrases",
          "skills": [
           {
            "@odata.type": "#Microsoft.Skills.Text.EntityRecognitionSkill",
            "categories": [
             "organization"
            ],
            "defaultLanguageCode": "en",
            "minimumPrecision": "0.7",
            "inputs": [
             {
              "name": "text",
              "source": "/document/content"
             }
            ],
            "outputs": [
             {
              "name": "organizations",
              "targetName": "organizations"
             }
            ]
           },
           {
            "@odata.type": "#Microsoft.Skills.Text.LanguageDetectionSkill",
            "inputs": [
             {
              "name": "text",
              "source": "/document/content"
             }
            ],
            "outputs": [
             {
              "name": "languageCode",
              "targetName": "languageCode"
             }
            ]
           },
           {
            "@odata.type": "#Microsoft.Skills.Text.SplitSkill",
            "textSplitMode": "pages",
            "maximumPageLength": "4000",
            "inputs": [
             {
              "name": "text",
              "source": "/document/content"
             },
             {
              "name": "languageCode",
              "source": "/document/languageCode"
             }
            ],
            "outputs": [
             {
              "name": "textItems",
              "targetName": "pages"
             }
            ]
           },
           {
            "@odata.type": "#Microsoft.Skills.Text.KeyPhraseExtractionSkill",
            "context": "/document/pages/*",
            "inputs": [
             {
              "name": "text",
              "source": "/document/pages/*"
             },
             {
              "name": "languageCode",
              "source": "/document/languageCode"
             }
            ],
            "outputs": [
             {
              "name": "keyPhrases",
              "targetName": "keyPhrases"
             }
            ]
           },
           {
            "@odata.type": "#Microsoft.Skills.Custom.WebApiSkill",
            "name": "MyCustomWebApiSkill",
            "uri": "https://contoso.example.org",
            "httpMethod": "POST",
            "timeout": "PT30S",
            "batchSize": "1",
            "inputs": [
             {
              "name": "text",
              "source": "/document/pages/*"
             },
             {
              "name": "languageCode",
              "source": "/document/languageCode"
             }
            ],
            "outputs": [
             {
              "name": "customresult",
              "targetName": "result"
             }
            ],
            "httpHeaders": {}
           }
          ]
         }
        },
        "responses": {
         "200": {
          "body": {
           "name": "demoskillset",
           "description": "Extract entities, detect language and extract key-phrases",
           "skills": [
            {
             "@odata.type": "#Microsoft.Skills.Text.EntityRecognitionSkill",
             "name": "#1",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              }
             ],
             "outputs": [
              {
               "name": "organizations",
               "targetName": "organizations"
              }
             ],
             "categories": [
              "organization"
             ],
             "defaultLanguageCode": "en",
             "minimumPrecision": "0.7"
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.LanguageDetectionSkill",
             "name": "#2",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              }
             ],
             "outputs": [
              {
               "name": "languageCode",
               "targetName": "languageCode"
              }
             ]
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.SplitSkill",
             "name": "#3",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "textItems",
               "targetName": "pages"
              }
             ],
             "defaultLanguageCode": null,
             "textSplitMode": "pages",
             "maximumPageLength": "4000"
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.KeyPhraseExtractionSkill",
             "name": "#4",
             "description": null,
             "context": "/document/pages/*",
             "inputs": [
              {
               "name": "text",
               "source": "/document/pages/*"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "keyPhrases",
               "targetName": "keyPhrases"
              }
             ],
             "defaultLanguageCode": null,
             "maxKeyPhraseCount": null
            },
            {
             "@odata.type": "#Microsoft.Skills.Custom.WebApiSkill",
             "name": "MyCustomWebApiSkill",
             "description": null,
             "context": "/document",
             "uri": "https://contoso.example.org",
             "httpMethod": "POST",
             "timeout": "PT30S",
             "batchSize": "1",
             "degreeOfParallelism": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/pages/*"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "customresult",
               "targetName": "result"
              }
             ],
             "httpHeaders": {}
            }
           ]
          }
         },
         "201": {
          "body": {
           "name": "demoskillset",
           "description": "Extract entities, detect language and extract key-phrases",
           "skills": [
            {
             "@odata.type": "#Microsoft.Skills.Text.EntityRecognitionSkill",
             "name": "#1",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              }
             ],
             "outputs": [
              {
               "name": "organizations",
               "targetName": "organizations"
              }
             ],
             "categories": [
              "organization"
             ],
             "defaultLanguageCode": "en",
             "minimumPrecision": "0.7"
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.LanguageDetectionSkill",
             "name": "#2",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              }
             ],
             "outputs": [
              {
               "name": "languageCode",
               "targetName": "languageCode"
              }
             ]
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.SplitSkill",
             "name": "#3",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "textItems",
               "targetName": "pages"
              }
             ],
             "defaultLanguageCode": null,
             "textSplitMode": "pages",
             "maximumPageLength": "4000"
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.KeyPhraseExtractionSkill",
             "name": "#4",
             "description": null,
             "context": "/document/pages/*",
             "inputs": [
              {
               "name": "text",
               "source": "/document/pages/*"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "keyPhrases",
               "targetName": "keyPhrases"
              }
             ],
             "defaultLanguageCode": null,
             "maxKeyPhraseCount": null
            },
            {
             "@odata.type": "#Microsoft.Skills.Custom.WebApiSkill",
             "name": "MyCustomWebApiSkill",
             "description": null,
             "context": "/document",
             "uri": "https://contoso.example.org",
             "httpMethod": "POST",
             "timeout": "PT30S",
             "batchSize": "1",
             "degreeOfParallelism": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/pages/*"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "customresult",
               "targetName": "result"
              }
             ],
             "httpHeaders": {}
            }
           ]
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3416",
     "parameters": [
      {
       "$id": "3417",
       "clientProperty": {
        "$ref": "2829"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3418",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3419",
        "fixed": false,
        "raw": "The name of the skillset to delete."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑18t6rsn¬∑skillsets-skillsetname¬∑delete¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑18t6rsn¬∑skillsets-skillsetname¬∑delete¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3420",
        "fixed": false,
        "raw": "skillsetName"
       },
       "serializedName": "skillsetName",
       "modelType": {
        "$id": "3421",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3422",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3423",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3424",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3425",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3426",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3427",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3428",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3429",
       "clientProperty": {
        "$ref": "2931"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3430",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3431",
        "fixed": false,
        "raw": "Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3432",
        "fixed": false,
        "raw": "If-Match"
       },
       "serializedName": "If-Match",
       "modelType": {
        "$id": "3433",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3434",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3435",
       "clientProperty": {
        "$ref": "2937"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3436",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3437",
        "fixed": false,
        "raw": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfNoneMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfNoneMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3438",
        "fixed": false,
        "raw": "If-None-Match"
       },
       "serializedName": "If-None-Match",
       "modelType": {
        "$id": "3439",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3440",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3441",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3442",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3443",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3444",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3445",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3446",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3447",
      "fixed": false,
      "raw": "Delete"
     },
     "group": {
      "$id": "3448",
      "fixed": false,
      "raw": "Skillsets"
     },
     "serializedName": "Skillsets_Delete",
     "url": "/skillsets('{skillsetName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "delete",
     "responses": {
      "NoContent": {
       "$id": "3449",
       "extensions": {
        "$id": "3450",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑n5kmyt¬∑skillsets-skillsetname¬∑delete¬∑responses¬∑204",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑n5kmyt¬∑skillsets-skillsetname¬∑delete¬∑responses¬∑204"
         ]
        }
       },
       "isNullable": true
      },
      "NotFound": {
       "$id": "3451",
       "extensions": {
        "$id": "3452",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑4f4e9v¬∑skillsets-skillsetname¬∑delete¬∑responses¬∑404",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑4f4e9v¬∑skillsets-skillsetname¬∑delete¬∑responses¬∑404"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3453",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3454",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑1jaobpf¬∑skillsets-skillsetname¬∑delete¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1jaobpf¬∑skillsets-skillsetname¬∑delete¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3455",
      "isNullable": true
     },
     "description": "Deletes a skillset in a search service.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/delete-skillset",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceDeleteSkillset": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "skillsetName": "demoskillset",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "204": {},
         "404": {}
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3456",
     "parameters": [
      {
       "$id": "3457",
       "clientProperty": {
        "$ref": "2829"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3458",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3459",
        "fixed": false,
        "raw": "The name of the skillset to retrieve."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1orhjj3¬∑skillsets-skillsetname¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1orhjj3¬∑skillsets-skillsetname¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3460",
        "fixed": false,
        "raw": "skillsetName"
       },
       "serializedName": "skillsetName",
       "modelType": {
        "$id": "3461",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3462",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3463",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3464",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3465",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3466",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3467",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3468",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3469",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3470",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3471",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3472",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3473",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3474",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3475",
      "fixed": false,
      "raw": "Get"
     },
     "group": {
      "$id": "3476",
      "fixed": false,
      "raw": "Skillsets"
     },
     "serializedName": "Skillsets_Get",
     "url": "/skillsets('{skillsetName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3477",
       "body": {
        "$ref": "2164"
       },
       "extensions": {
        "$id": "3478",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1lb793h¬∑skillsets-skillsetname¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1lb793h¬∑skillsets-skillsetname¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3479",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3480",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑16p9d30¬∑skillsets-skillsetname¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑16p9d30¬∑skillsets-skillsetname¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3481",
      "body": {
       "$ref": "2164"
      },
      "isNullable": true
     },
     "description": "Retrieves a skillset in a search service.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/get-skillset",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceGetSkillset": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "skillsetName": "demoskillset",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "name": "demoskillset",
           "description": "Extract entities, detect language and extract key-phrases",
           "skills": [
            {
             "@odata.type": "#Microsoft.Skills.Text.EntityRecognitionSkill",
             "name": "#1",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              }
             ],
             "outputs": [
              {
               "name": "organizations",
               "targetName": "organizations"
              }
             ],
             "categories": [
              "organization"
             ],
             "defaultLanguageCode": "en",
             "minimumPrecision": "0.7"
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.LanguageDetectionSkill",
             "name": "#2",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              }
             ],
             "outputs": [
              {
               "name": "languageCode",
               "targetName": "languageCode"
              }
             ]
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.SplitSkill",
             "name": "#3",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "textItems",
               "targetName": "pages"
              }
             ],
             "defaultLanguageCode": null,
             "textSplitMode": "pages",
             "maximumPageLength": "4000"
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.KeyPhraseExtractionSkill",
             "name": "#4",
             "description": null,
             "context": "/document/pages/*",
             "inputs": [
              {
               "name": "text",
               "source": "/document/pages/*"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "keyPhrases",
               "targetName": "keyPhrases"
              }
             ],
             "defaultLanguageCode": null,
             "maxKeyPhraseCount": null
            },
            {
             "@odata.type": "#Microsoft.Skills.Custom.WebApiSkill",
             "name": "MyCustomWebApiSkill",
             "description": null,
             "context": "/document",
             "uri": "https://contoso.example.org",
             "httpMethod": "POST",
             "timeout": "PT30S",
             "batchSize": "1",
             "degreeOfParallelism": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/pages/*"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "customresult",
               "targetName": "result"
              }
             ],
             "httpHeaders": {}
            }
           ]
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3482",
     "parameters": [
      {
       "$id": "3483",
       "clientProperty": {
        "$ref": "2781"
       },
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3484",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3485",
        "fixed": false,
        "raw": "Selects which top-level properties of the skillsets to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑512pzs¬∑skillsets¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑512pzs¬∑skillsets¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3486",
        "fixed": false,
        "raw": "$select"
       },
       "serializedName": "$select",
       "modelType": {
        "$id": "3487",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3488",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3489",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3490",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3491",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3492",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3493",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3494",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3495",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3496",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3497",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3498",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3499",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3500",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3501",
      "fixed": false,
      "raw": "List"
     },
     "group": {
      "$id": "3502",
      "fixed": false,
      "raw": "Skillsets"
     },
     "serializedName": "Skillsets_List",
     "url": "/skillsets",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3503",
       "body": {
        "$ref": "2595"
       },
       "extensions": {
        "$id": "3504",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1h1hir5¬∑skillsets¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1h1hir5¬∑skillsets¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3505",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3506",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑srb0o5¬∑skillsets¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑srb0o5¬∑skillsets¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3507",
      "body": {
       "$ref": "2595"
      },
      "isNullable": true
     },
     "description": "List all skillsets in a search service.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/list-skillset",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceListSkillsets": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "$select": "*",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "value": [
            {
             "name": "demoskillset",
             "description": "Extract entities, detect language and extract key-phrases",
             "skills": [
              {
               "@odata.type": "#Microsoft.Skills.Text.EntityRecognitionSkill",
               "name": "#1",
               "description": null,
               "context": null,
               "inputs": [
                {
                 "name": "text",
                 "source": "/document/content"
                }
               ],
               "outputs": [
                {
                 "name": "organizations",
                 "targetName": "organizations"
                }
               ],
               "categories": [
                "organization"
               ],
               "defaultLanguageCode": "en",
               "minimumPrecision": "0.7"
              },
              {
               "@odata.type": "#Microsoft.Skills.Text.LanguageDetectionSkill",
               "name": "#2",
               "description": null,
               "context": null,
               "inputs": [
                {
                 "name": "text",
                 "source": "/document/content"
                }
               ],
               "outputs": [
                {
                 "name": "languageCode",
                 "targetName": "languageCode"
                }
               ]
              },
              {
               "@odata.type": "#Microsoft.Skills.Text.SplitSkill",
               "name": "#3",
               "description": null,
               "context": null,
               "inputs": [
                {
                 "name": "text",
                 "source": "/document/content"
                },
                {
                 "name": "languageCode",
                 "source": "/document/languageCode"
                }
               ],
               "outputs": [
                {
                 "name": "textItems",
                 "targetName": "pages"
                }
               ],
               "defaultLanguageCode": null,
               "textSplitMode": "pages",
               "maximumPageLength": "4000"
              },
              {
               "@odata.type": "#Microsoft.Skills.Text.KeyPhraseExtractionSkill",
               "name": "#4",
               "description": null,
               "context": "/document/pages/*",
               "inputs": [
                {
                 "name": "text",
                 "source": "/document/pages/*"
                },
                {
                 "name": "languageCode",
                 "source": "/document/languageCode"
                }
               ],
               "outputs": [
                {
                 "name": "keyPhrases",
                 "targetName": "keyPhrases"
                }
               ],
               "defaultLanguageCode": null,
               "maxKeyPhraseCount": null
              },
              {
               "@odata.type": "#Microsoft.Skills.Custom.WebApiSkill",
               "name": "MyCustomWebApiSkill",
               "description": null,
               "context": "/document",
               "uri": "https://contoso.example.org",
               "httpMethod": "POST",
               "timeout": "PT30S",
               "batchSize": "1",
               "degreeOfParallelism": null,
               "inputs": [
                {
                 "name": "text",
                 "source": "/document/pages/*"
                },
                {
                 "name": "languageCode",
                 "source": "/document/languageCode"
                }
               ],
               "outputs": [
                {
                 "name": "customresult",
                 "targetName": "result"
                }
               ],
               "httpHeaders": {}
              }
             ]
            }
           ]
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3508",
     "parameters": [
      {
       "$id": "3509",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3510",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3511",
        "fixed": false,
        "raw": "The skillset containing one or more skills to create in a search service."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1svwb2j¬∑skillsets¬∑post¬∑requestbody",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/requestBodies/paths¬∑1svwb2j¬∑skillsets¬∑post¬∑requestbody"
         ]
        },
        "x-ms-requestBody-name": "skillset"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3512",
        "fixed": false,
        "raw": "skillset"
       },
       "serializedName": "skillset",
       "modelType": {
        "$ref": "2164"
       }
      },
      {
       "$id": "3513",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3514",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3515",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3516",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3517",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3518",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3519",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3520",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3521",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3522",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3523",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3524",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3525",
      "fixed": false,
      "raw": "Create"
     },
     "group": {
      "$id": "3526",
      "fixed": false,
      "raw": "Skillsets"
     },
     "serializedName": "Skillsets_Create",
     "url": "/skillsets",
     "isAbsoluteUrl": false,
     "httpMethod": "post",
     "responses": {
      "Created": {
       "$id": "3527",
       "body": {
        "$ref": "2164"
       },
       "extensions": {
        "$id": "3528",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑6sdg5s¬∑skillsets¬∑post¬∑responses¬∑201",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑6sdg5s¬∑skillsets¬∑post¬∑responses¬∑201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3529",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3530",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑xhkfk4¬∑skillsets¬∑post¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑xhkfk4¬∑skillsets¬∑post¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3531",
      "body": {
       "$ref": "2164"
      },
      "isNullable": true
     },
     "description": "Creates a new skillset in a search service.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/create-skillset",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-requestBody-index": "0",
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceCreateSkillset": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "skillsetName": "demoskillset",
         "api-version": "2019-05-06-Preview",
         "Prefer": "return=representation",
         "skillset": {
          "name": "demoskillset",
          "description": "Extract entities, detect language and extract key-phrases",
          "skills": [
           {
            "@odata.type": "#Microsoft.Skills.Text.EntityRecognitionSkill",
            "categories": [
             "organization"
            ],
            "defaultLanguageCode": "en",
            "minimumPrecision": "0.7",
            "inputs": [
             {
              "name": "text",
              "source": "/document/content"
             }
            ],
            "outputs": [
             {
              "name": "organizations",
              "targetName": "organizations"
             }
            ]
           },
           {
            "@odata.type": "#Microsoft.Skills.Text.LanguageDetectionSkill",
            "inputs": [
             {
              "name": "text",
              "source": "/document/content"
             }
            ],
            "outputs": [
             {
              "name": "languageCode",
              "targetName": "languageCode"
             }
            ]
           },
           {
            "@odata.type": "#Microsoft.Skills.Text.SplitSkill",
            "textSplitMode": "pages",
            "maximumPageLength": "4000",
            "inputs": [
             {
              "name": "text",
              "source": "/document/content"
             },
             {
              "name": "languageCode",
              "source": "/document/languageCode"
             }
            ],
            "outputs": [
             {
              "name": "textItems",
              "targetName": "pages"
             }
            ]
           },
           {
            "@odata.type": "#Microsoft.Skills.Text.KeyPhraseExtractionSkill",
            "context": "/document/pages/*",
            "inputs": [
             {
              "name": "text",
              "source": "/document/pages/*"
             },
             {
              "name": "languageCode",
              "source": "/document/languageCode"
             }
            ],
            "outputs": [
             {
              "name": "keyPhrases",
              "targetName": "keyPhrases"
             }
            ]
           },
           {
            "@odata.type": "#Microsoft.Skills.Custom.WebApiSkill",
            "name": "MyCustomWebApiSkill",
            "uri": "https://contoso.example.org",
            "httpMethod": "POST",
            "timeout": "PT30S",
            "batchSize": "1",
            "inputs": [
             {
              "name": "text",
              "source": "/document/pages/*"
             },
             {
              "name": "languageCode",
              "source": "/document/languageCode"
             }
            ],
            "outputs": [
             {
              "name": "customresult",
              "targetName": "result"
             }
            ],
            "httpHeaders": {}
           }
          ]
         }
        },
        "responses": {
         "201": {
          "body": {
           "name": "demoskillset",
           "description": "Extract entities, detect language and extract key-phrases",
           "skills": [
            {
             "@odata.type": "#Microsoft.Skills.Text.EntityRecognitionSkill",
             "name": "#1",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              }
             ],
             "outputs": [
              {
               "name": "organizations",
               "targetName": "organizations"
              }
             ],
             "categories": [
              "organization"
             ],
             "defaultLanguageCode": "en",
             "minimumPrecision": "0.7"
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.LanguageDetectionSkill",
             "name": "#2",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              }
             ],
             "outputs": [
              {
               "name": "languageCode",
               "targetName": "languageCode"
              }
             ]
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.SplitSkill",
             "name": "#3",
             "description": null,
             "context": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/content"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "textItems",
               "targetName": "pages"
              }
             ],
             "defaultLanguageCode": null,
             "textSplitMode": "pages",
             "maximumPageLength": "4000"
            },
            {
             "@odata.type": "#Microsoft.Skills.Text.KeyPhraseExtractionSkill",
             "name": "#4",
             "description": null,
             "context": "/document/pages/*",
             "inputs": [
              {
               "name": "text",
               "source": "/document/pages/*"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "keyPhrases",
               "targetName": "keyPhrases"
              }
             ],
             "defaultLanguageCode": null,
             "maxKeyPhraseCount": null
            },
            {
             "@odata.type": "#Microsoft.Skills.Custom.WebApiSkill",
             "name": "MyCustomWebApiSkill",
             "description": null,
             "context": "/document",
             "uri": "https://contoso.example.org",
             "httpMethod": "POST",
             "timeout": "PT30S",
             "batchSize": "1",
             "degreeOfParallelism": null,
             "inputs": [
              {
               "name": "text",
               "source": "/document/pages/*"
              },
              {
               "name": "languageCode",
               "source": "/document/languageCode"
              }
             ],
             "outputs": [
              {
               "name": "customresult",
               "targetName": "result"
              }
             ],
             "httpHeaders": {}
            }
           ]
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    }
   ],
   "name": {
    "$id": "3532",
    "fixed": false,
    "raw": "Skillsets"
   },
   "typeName": {
    "$id": "3533",
    "fixed": false
   },
   "nameForProperty": "Skillsets"
  },
  {
   "$id": "3534",
   "methods": [
    {
     "$id": "3535",
     "parameters": [
      {
       "$id": "3536",
       "clientProperty": {
        "$ref": "2853"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3537",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3538",
        "fixed": false,
        "raw": "The name of the synonym map to create or update."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑tj2fti¬∑synonymmaps-synonymmapname¬∑put¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑tj2fti¬∑synonymmaps-synonymmapname¬∑put¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3539",
        "fixed": false,
        "raw": "synonymMapName"
       },
       "serializedName": "synonymMapName",
       "modelType": {
        "$id": "3540",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3541",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3542",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3543",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3544",
        "fixed": false,
        "raw": "The definition of the synonym map to create or update."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑6yhdku¬∑synonymmaps-synonymmapname¬∑put¬∑requestbody",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/requestBodies/paths¬∑6yhdku¬∑synonymmaps-synonymmapname¬∑put¬∑requestbody"
         ]
        },
        "x-ms-requestBody-name": "synonymMap"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3545",
        "fixed": false,
        "raw": "synonymMap"
       },
       "serializedName": "synonymMap",
       "modelType": {
        "$ref": "2603"
       }
      },
      {
       "$id": "3546",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3547",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3548",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3549",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3550",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3551",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3552",
       "clientProperty": {
        "$ref": "2931"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3553",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3554",
        "fixed": false,
        "raw": "Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3555",
        "fixed": false,
        "raw": "If-Match"
       },
       "serializedName": "If-Match",
       "modelType": {
        "$id": "3556",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3557",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3558",
       "clientProperty": {
        "$ref": "2937"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3559",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3560",
        "fixed": false,
        "raw": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfNoneMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfNoneMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3561",
        "fixed": false,
        "raw": "If-None-Match"
       },
       "serializedName": "If-None-Match",
       "modelType": {
        "$id": "3562",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3563",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3564",
       "clientProperty": {
        "$ref": "2943"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3565",
        "fixed": false,
        "raw": "return=representation"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3566",
        "fixed": false,
        "raw": "For HTTP PUT requests, instructs the service to return the created/updated resource on success."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "PreferHeaderParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/PreferHeaderParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3567",
        "fixed": false,
        "raw": "Prefer"
       },
       "serializedName": "Prefer",
       "modelType": {
        "$id": "3568",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3569",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3570",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3571",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3572",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3573",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3574",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3575",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3576",
      "fixed": false,
      "raw": "CreateOrUpdate"
     },
     "group": {
      "$id": "3577",
      "fixed": false,
      "raw": "SynonymMaps"
     },
     "serializedName": "SynonymMaps_CreateOrUpdate",
     "url": "/synonymmaps('{synonymMapName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "put",
     "responses": {
      "OK": {
       "$id": "3578",
       "body": {
        "$ref": "2603"
       },
       "extensions": {
        "$id": "3579",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑9qjyu5¬∑synonymmaps-synonymmapname¬∑put¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑9qjyu5¬∑synonymmaps-synonymmapname¬∑put¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      },
      "Created": {
       "$id": "3580",
       "body": {
        "$ref": "2603"
       },
       "extensions": {
        "$id": "3581",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑ch1ojk¬∑synonymmaps-synonymmapname¬∑put¬∑responses¬∑201",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑ch1ojk¬∑synonymmaps-synonymmapname¬∑put¬∑responses¬∑201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3582",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3583",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑1iw73h8¬∑synonymmaps-synonymmapname¬∑put¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1iw73h8¬∑synonymmaps-synonymmapname¬∑put¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3584",
      "body": {
       "$ref": "2603"
      },
      "isNullable": true
     },
     "description": "Creates a new synonym map or updates a synonym map if it already exists.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Update-Synonym-Map",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-requestBody-index": "1",
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceCreateOrUpdateSynonymMap": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "synonymMapName": "mysynonymmap",
         "api-version": "2019-5-06-Preview",
         "Prefer": "return=representation",
         "synonymMap": {
          "name": "mysynonymmap",
          "format": "solr",
          "synonyms": "United States, United States of America, USA\nWashington, Wash. => WA",
          "encryptionKey": {
           "keyVaultKeyName": "myUserManagedEncryptionKey-createdinAzureKeyVault",
           "keyVaultKeyVersion": "myKeyVersion-32charAlphaNumericString",
           "keyVaultUri": "https://myKeyVault.vault.azure.net",
           "accessCredentials": null
          }
         }
        },
        "responses": {
         "200": {
          "body": {
           "name": "mysynonymmap",
           "format": "solr",
           "synonyms": "United States, United States of America, USA\nWashington, Wash. => WA",
           "encryptionKey": {
            "keyVaultKeyName": "myUserManagedEncryptionKey-createdinAzureKeyVault",
            "keyVaultKeyVersion": "myKeyVersion-32charAlphaNumericString",
            "keyVaultUri": "https://myKeyVault.vault.azure.net",
            "accessCredentials": null
           }
          }
         },
         "201": {
          "body": {
           "name": "mysynonymmap",
           "format": "solr",
           "synonyms": "United States, United States of America, USA\nWashington, Wash. => WA",
           "encryptionKey": {
            "keyVaultKeyName": "myUserManagedEncryptionKey-createdinAzureKeyVault",
            "keyVaultKeyVersion": "myKeyVersion-32charAlphaNumericString",
            "keyVaultUri": "https://myKeyVault.vault.azure.net",
            "accessCredentials": null
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3585",
     "parameters": [
      {
       "$id": "3586",
       "clientProperty": {
        "$ref": "2853"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3587",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3588",
        "fixed": false,
        "raw": "The name of the synonym map to delete."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1gibgd6¬∑synonymmaps-synonymmapname¬∑delete¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1gibgd6¬∑synonymmaps-synonymmapname¬∑delete¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3589",
        "fixed": false,
        "raw": "synonymMapName"
       },
       "serializedName": "synonymMapName",
       "modelType": {
        "$id": "3590",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3591",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3592",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3593",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3594",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3595",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3596",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3597",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3598",
       "clientProperty": {
        "$ref": "2931"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3599",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3600",
        "fixed": false,
        "raw": "Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3601",
        "fixed": false,
        "raw": "If-Match"
       },
       "serializedName": "If-Match",
       "modelType": {
        "$id": "3602",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3603",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3604",
       "clientProperty": {
        "$ref": "2937"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3605",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3606",
        "fixed": false,
        "raw": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfNoneMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfNoneMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3607",
        "fixed": false,
        "raw": "If-None-Match"
       },
       "serializedName": "If-None-Match",
       "modelType": {
        "$id": "3608",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3609",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3610",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3611",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3612",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3613",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3614",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3615",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3616",
      "fixed": false,
      "raw": "Delete"
     },
     "group": {
      "$id": "3617",
      "fixed": false,
      "raw": "SynonymMaps"
     },
     "serializedName": "SynonymMaps_Delete",
     "url": "/synonymmaps('{synonymMapName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "delete",
     "responses": {
      "NoContent": {
       "$id": "3618",
       "extensions": {
        "$id": "3619",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑dpo6nf¬∑synonymmaps-synonymmapname¬∑delete¬∑responses¬∑204",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑dpo6nf¬∑synonymmaps-synonymmapname¬∑delete¬∑responses¬∑204"
         ]
        }
       },
       "isNullable": true
      },
      "NotFound": {
       "$id": "3620",
       "extensions": {
        "$id": "3621",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1wt79mi¬∑synonymmaps-synonymmapname¬∑delete¬∑responses¬∑404",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1wt79mi¬∑synonymmaps-synonymmapname¬∑delete¬∑responses¬∑404"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3622",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3623",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑2q4xdx¬∑synonymmaps-synonymmapname¬∑delete¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑2q4xdx¬∑synonymmaps-synonymmapname¬∑delete¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3624",
      "isNullable": true
     },
     "description": "Deletes a synonym map.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Delete-Synonym-Map",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceDeleteSynonymMap": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "synonymMapName": "mysynonymmap",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "204": {},
         "404": {}
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3625",
     "parameters": [
      {
       "$id": "3626",
       "clientProperty": {
        "$ref": "2853"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3627",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3628",
        "fixed": false,
        "raw": "The name of the synonym map to retrieve."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑119z9fy¬∑synonymmaps-synonymmapname¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑119z9fy¬∑synonymmaps-synonymmapname¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3629",
        "fixed": false,
        "raw": "synonymMapName"
       },
       "serializedName": "synonymMapName",
       "modelType": {
        "$id": "3630",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3631",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3632",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3633",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3634",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3635",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3636",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3637",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3638",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3639",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3640",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3641",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3642",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3643",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3644",
      "fixed": false,
      "raw": "Get"
     },
     "group": {
      "$id": "3645",
      "fixed": false,
      "raw": "SynonymMaps"
     },
     "serializedName": "SynonymMaps_Get",
     "url": "/synonymmaps('{synonymMapName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3646",
       "body": {
        "$ref": "2603"
       },
       "extensions": {
        "$id": "3647",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑ex662t¬∑synonymmaps-synonymmapname¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑ex662t¬∑synonymmaps-synonymmapname¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3648",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3649",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑11gswe¬∑synonymmaps-synonymmapname¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑11gswe¬∑synonymmaps-synonymmapname¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3650",
      "body": {
       "$ref": "2603"
      },
      "isNullable": true
     },
     "description": "Retrieves a synonym map definition.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Get-Synonym-Map",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceGetSynonymMap": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "synonymMapName": "mysynonymmap",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "name": "mysynonymmap",
           "format": "solr",
           "synonyms": "United States, United States of America, USA\nWashington, Wash. => WA",
           "encryptionKey": {
            "keyVaultKeyName": "myKeyName",
            "keyVaultKeyVersion": "myKeyVersion",
            "keyVaultUri": "https://myKeyVault.vault.azure.net",
            "accessCredentials": {
             "applicationId": "00000000-0000-0000-0000-000000000000",
             "applicationSecret": null
            }
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3651",
     "parameters": [
      {
       "$id": "3652",
       "clientProperty": {
        "$ref": "2781"
       },
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3653",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3654",
        "fixed": false,
        "raw": "Selects which top-level properties of the synonym maps to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑15a06s3¬∑synonymmaps¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑15a06s3¬∑synonymmaps¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3655",
        "fixed": false,
        "raw": "$select"
       },
       "serializedName": "$select",
       "modelType": {
        "$id": "3656",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3657",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3658",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3659",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3660",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3661",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3662",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3663",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3664",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3665",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3666",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3667",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3668",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3669",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3670",
      "fixed": false,
      "raw": "List"
     },
     "group": {
      "$id": "3671",
      "fixed": false,
      "raw": "SynonymMaps"
     },
     "serializedName": "SynonymMaps_List",
     "url": "/synonymmaps",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3672",
       "body": {
        "$ref": "2633"
       },
       "extensions": {
        "$id": "3673",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1ygcz3i¬∑synonymmaps¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1ygcz3i¬∑synonymmaps¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3674",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3675",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑9l62tl¬∑synonymmaps¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑9l62tl¬∑synonymmaps¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3676",
      "body": {
       "$ref": "2633"
      },
      "isNullable": true
     },
     "description": "Lists all synonym maps available for a search service.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/List-Synonym-Maps",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceListSynonymMaps": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "value": [
            {
             "name": "mysynonymmap",
             "format": "solr",
             "synonyms": "United States, United States of America, USA\nWashington, Wash. => WA",
             "encryptionKey": {
              "keyVaultKeyName": "myKeyName",
              "keyVaultKeyVersion": "myKeyVersion",
              "keyVaultUri": "https://myKeyVault.vault.azure.net",
              "accessCredentials": null
             }
            },
            {
             "name": "myothersynonymmap",
             "format": "solr",
             "synonyms": "couch, sofa, chesterfield\npop, soda\ntoque, hat",
             "encryptionKey": null
            }
           ]
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3677",
     "parameters": [
      {
       "$id": "3678",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3679",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3680",
        "fixed": false,
        "raw": "The definition of the synonym map to create."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1avoghm¬∑synonymmaps¬∑post¬∑requestbody",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/requestBodies/paths¬∑1avoghm¬∑synonymmaps¬∑post¬∑requestbody"
         ]
        },
        "x-ms-requestBody-name": "synonymMap"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3681",
        "fixed": false,
        "raw": "synonymMap"
       },
       "serializedName": "synonymMap",
       "modelType": {
        "$ref": "2603"
       }
      },
      {
       "$id": "3682",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3683",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3684",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3685",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3686",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3687",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3688",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3689",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3690",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3691",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3692",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3693",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3694",
      "fixed": false,
      "raw": "Create"
     },
     "group": {
      "$id": "3695",
      "fixed": false,
      "raw": "SynonymMaps"
     },
     "serializedName": "SynonymMaps_Create",
     "url": "/synonymmaps",
     "isAbsoluteUrl": false,
     "httpMethod": "post",
     "responses": {
      "Created": {
       "$id": "3696",
       "body": {
        "$ref": "2603"
       },
       "extensions": {
        "$id": "3697",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑dnvxce¬∑synonymmaps¬∑post¬∑responses¬∑201",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑dnvxce¬∑synonymmaps¬∑post¬∑responses¬∑201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3698",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3699",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑1lx4x7m¬∑synonymmaps¬∑post¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1lx4x7m¬∑synonymmaps¬∑post¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3700",
      "body": {
       "$ref": "2603"
      },
      "isNullable": true
     },
     "description": "Creates a new synonym map.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Create-Synonym-Map",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-requestBody-index": "0",
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceCreateSynonymMap": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "api-version": "2019-05-06-Preview",
         "synonymMap": {
          "name": "mysynonymmap",
          "format": "solr",
          "synonyms": "United States, United States of America, USA\nWashington, Wash. => WA",
          "encryptionKey": {
           "keyVaultKeyName": "myUserManagedEncryptionKey-createdinAzureKeyVault",
           "keyVaultKeyVersion": "myKeyVersion-32charAlphaNumericString",
           "keyVaultUri": "https://myKeyVault.vault.azure.net",
           "accessCredentials": {
            "applicationId": "00000000-0000-0000-0000-000000000000",
            "applicationSecret": "myApplicationSecret"
           }
          }
         }
        },
        "responses": {
         "201": {
          "body": {
           "name": "mysynonymmap",
           "format": "solr",
           "synonyms": "United States, United States of America, USA\nWashington, Wash. => WA",
           "encryptionKey": {
            "keyVaultKeyName": "myUserManagedEncryptionKey-createdinAzureKeyVault",
            "keyVaultKeyVersion": "myKeyVersion-32charAlphaNumericString",
            "keyVaultUri": "https://myKeyVault.vault.azure.net",
            "accessCredentials": {
             "applicationId": "00000000-0000-0000-0000-000000000000",
             "applicationSecret": null
            }
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    }
   ],
   "name": {
    "$id": "3701",
    "fixed": false,
    "raw": "SynonymMaps"
   },
   "typeName": {
    "$id": "3702",
    "fixed": false
   },
   "nameForProperty": "SynonymMaps"
  },
  {
   "$id": "3703",
   "methods": [
    {
     "$id": "3704",
     "parameters": [
      {
       "$id": "3705",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3706",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3707",
        "fixed": false,
        "raw": "The definition of the index to create."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑hqk6rw¬∑indexes¬∑post¬∑requestbody",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/requestBodies/paths¬∑hqk6rw¬∑indexes¬∑post¬∑requestbody"
         ]
        },
        "x-ms-requestBody-name": "index"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3708",
        "fixed": false,
        "raw": "index"
       },
       "serializedName": "index",
       "modelType": {
        "$ref": "1988"
       }
      },
      {
       "$id": "3709",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3710",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3711",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3712",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3713",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3714",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3715",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3716",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3717",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3718",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3719",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3720",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3721",
      "fixed": false,
      "raw": "Create"
     },
     "group": {
      "$id": "3722",
      "fixed": false,
      "raw": "Indexes"
     },
     "serializedName": "Indexes_Create",
     "url": "/indexes",
     "isAbsoluteUrl": false,
     "httpMethod": "post",
     "responses": {
      "Created": {
       "$id": "3723",
       "body": {
        "$ref": "1988"
       },
       "extensions": {
        "$id": "3724",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1ctqzu3¬∑indexes¬∑post¬∑responses¬∑201",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1ctqzu3¬∑indexes¬∑post¬∑responses¬∑201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3725",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3726",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑bx2yf8¬∑indexes¬∑post¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑bx2yf8¬∑indexes¬∑post¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3727",
      "body": {
       "$ref": "1988"
      },
      "isNullable": true
     },
     "description": "Creates a new search index.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Create-Index",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-requestBody-index": "0",
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceCreateIndex": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "api-version": "2019-05-06-Preview",
         "index": {
          "name": "hotels",
          "fields": [
           {
            "name": "hotelId",
            "type": "Edm.String",
            "key": true,
            "searchable": false
           },
           {
            "name": "baseRate",
            "type": "Edm.Double"
           },
           {
            "name": "description",
            "type": "Edm.String",
            "filterable": false,
            "sortable": false,
            "facetable": false
           },
           {
            "name": "description_fr",
            "type": "Edm.String",
            "filterable": false,
            "sortable": false,
            "facetable": false,
            "analyzer": "fr.lucene"
           },
           {
            "name": "hotelName",
            "type": "Edm.String"
           },
           {
            "name": "category",
            "type": "Edm.String"
           },
           {
            "name": "tags",
            "type": "Collection(Edm.String)",
            "analyzer": "tagsAnalyzer"
           },
           {
            "name": "parkingIncluded",
            "type": "Edm.Boolean"
           },
           {
            "name": "smokingAllowed",
            "type": "Edm.Boolean"
           },
           {
            "name": "lastRenovationDate",
            "type": "Edm.DateTimeOffset"
           },
           {
            "name": "rating",
            "type": "Edm.Int32"
           },
           {
            "name": "location",
            "type": "Edm.GeographyPoint"
           }
          ],
          "scoringProfiles": [
           {
            "name": "geo",
            "text": {
             "weights": {
              "hotelName": "5"
             }
            },
            "functions": [
             {
              "type": "distance",
              "boost": "5",
              "fieldName": "location",
              "interpolation": "logarithmic",
              "distance": {
               "referencePointParameter": "currentLocation",
               "boostingDistance": "10"
              }
             }
            ]
           }
          ],
          "defaultScoringProfile": "geo",
          "suggesters": [
           {
            "name": "sg",
            "searchMode": "analyzingInfixMatching",
            "sourceFields": [
             "hotelName"
            ]
           }
          ],
          "analyzers": [
           {
            "name": "tagsAnalyzer",
            "@odata.type": "#Microsoft.Azure.Search.CustomAnalyzer",
            "charFilters": [
             "html_strip"
            ],
            "tokenizer": "standard_v2"
           }
          ],
          "corsOptions": {
           "allowedOrigins": [
            "tempuri.org"
           ],
           "maxAgeInSeconds": "60"
          },
          "encryptionKey": {
           "keyVaultKeyName": "myUserManagedEncryptionKey-createdinAzureKeyVault",
           "keyVaultKeyVersion": "myKeyVersion-32charAlphaNumericString",
           "keyVaultUri": "https://myKeyVault.vault.azure.net",
           "accessCredentials": {
            "applicationId": "00000000-0000-0000-0000-000000000000",
            "applicationSecret": "myapplicationsecret"
           }
          },
          "similarity": {
           "@odata.type": "#Microsoft.Azure.Search.BM25Similarity",
           "b": "0.5",
           "k1": "1.3"
          }
         }
        },
        "responses": {
         "201": {
          "body": {
           "name": "hotels",
           "fields": [
            {
             "name": "hotelId",
             "type": "Edm.String",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": true,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "baseRate",
             "type": "Edm.Double",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "description",
             "type": "Edm.String",
             "searchable": true,
             "filterable": false,
             "retrievable": true,
             "sortable": false,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "description_fr",
             "type": "Edm.String",
             "searchable": true,
             "filterable": false,
             "retrievable": true,
             "sortable": false,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": "fr.lucene",
             "synonymMaps": []
            },
            {
             "name": "hotelName",
             "type": "Edm.String",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "category",
             "type": "Edm.String",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "tags",
             "type": "Collection(Edm.String)",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": false,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": "tagsAnalyzer",
             "synonymMaps": []
            },
            {
             "name": "parkingIncluded",
             "type": "Edm.Boolean",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "smokingAllowed",
             "type": "Edm.Boolean",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "lastRenovationDate",
             "type": "Edm.DateTimeOffset",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "rating",
             "type": "Edm.Int32",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "location",
             "type": "Edm.GeographyPoint",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            }
           ],
           "scoringProfiles": [
            {
             "name": "geo",
             "text": {
              "weights": {
               "hotelName": "5"
              }
             },
             "functions": [
              {
               "type": "distance",
               "boost": "5",
               "fieldName": "location",
               "interpolation": "logarithmic",
               "distance": {
                "referencePointParameter": "currentLocation",
                "boostingDistance": "10"
               }
              }
             ]
            }
           ],
           "defaultScoringProfile": "geo",
           "suggesters": [
            {
             "name": "sg",
             "searchMode": "analyzingInfixMatching",
             "sourceFields": [
              "hotelName"
             ]
            }
           ],
           "analyzers": [
            {
             "name": "tagsAnalyzer",
             "@odata.type": "#Microsoft.Azure.Search.CustomAnalyzer",
             "charFilters": [
              "html_strip"
             ],
             "tokenizer": "standard_v2"
            }
           ],
           "tokenizers": [],
           "tokenFilters": [],
           "charFilters": [],
           "corsOptions": {
            "allowedOrigins": [
             "tempuri.org"
            ],
            "maxAgeInSeconds": "60"
           },
           "encryptionKey": {
            "keyVaultKeyName": "myUserManagedEncryptionKey-createdinAzureKeyVault",
            "keyVaultKeyVersion": "myKeyVersion-32charAlphaNumericString",
            "keyVaultUri": "https://myKeyVault.vault.azure.net",
            "accessCredentials": {
             "applicationId": "00000000-0000-0000-0000-000000000000",
             "applicationSecret": null
            }
           },
           "similarity": {
            "@odata.type": "#Microsoft.Azure.Search.BM25Similarity",
            "b": "0.5",
            "k1": "1.3"
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3728",
     "parameters": [
      {
       "$id": "3729",
       "clientProperty": {
        "$ref": "2781"
       },
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3730",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3731",
        "fixed": false,
        "raw": "Selects which top-level properties of the index definitions to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑8wuibn¬∑indexes¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑8wuibn¬∑indexes¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3732",
        "fixed": false,
        "raw": "$select"
       },
       "serializedName": "$select",
       "modelType": {
        "$id": "3733",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3734",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3735",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3736",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3737",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3738",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3739",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3740",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3741",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3742",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3743",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3744",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3745",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3746",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3747",
      "fixed": false,
      "raw": "List"
     },
     "group": {
      "$id": "3748",
      "fixed": false,
      "raw": "Indexes"
     },
     "serializedName": "Indexes_List",
     "url": "/indexes",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3749",
       "body": {
        "$ref": "2076"
       },
       "extensions": {
        "$id": "3750",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑sfcl2c¬∑indexes¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑sfcl2c¬∑indexes¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3751",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3752",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑6h9kf8¬∑indexes¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑6h9kf8¬∑indexes¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3753",
      "body": {
       "$ref": "2076"
      },
      "isNullable": true
     },
     "description": "Lists all indexes available for a search service.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/List-Indexes",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-pageable": {
       "nextLinkName": null
      },
      "x-ms-examples": {
       "SearchServiceListIndexes": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "$select": "*",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "value": [
            {
             "name": "hotels",
             "fields": [
              {
               "name": "hotelId",
               "type": "Edm.String",
               "searchable": false,
               "filterable": true,
               "retrievable": true,
               "sortable": true,
               "facetable": true,
               "key": true,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              },
              {
               "name": "baseRate",
               "type": "Edm.Double",
               "searchable": false,
               "filterable": true,
               "retrievable": true,
               "sortable": true,
               "facetable": true,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              },
              {
               "name": "description",
               "type": "Edm.String",
               "searchable": true,
               "filterable": false,
               "retrievable": true,
               "sortable": false,
               "facetable": false,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              },
              {
               "name": "description_fr",
               "type": "Edm.String",
               "searchable": true,
               "filterable": false,
               "retrievable": true,
               "sortable": false,
               "facetable": false,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": "fr.lucene",
               "synonymMaps": []
              },
              {
               "name": "hotelName",
               "type": "Edm.String",
               "searchable": true,
               "filterable": true,
               "retrievable": true,
               "sortable": true,
               "facetable": true,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              },
              {
               "name": "category",
               "type": "Edm.String",
               "searchable": true,
               "filterable": true,
               "retrievable": true,
               "sortable": true,
               "facetable": true,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              },
              {
               "name": "tags",
               "type": "Collection(Edm.String)",
               "searchable": true,
               "filterable": true,
               "retrievable": true,
               "sortable": false,
               "facetable": true,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": "tagsAnalyzer",
               "synonymMaps": []
              },
              {
               "name": "parkingIncluded",
               "type": "Edm.Boolean",
               "searchable": false,
               "filterable": true,
               "retrievable": true,
               "sortable": true,
               "facetable": true,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              },
              {
               "name": "smokingAllowed",
               "type": "Edm.Boolean",
               "searchable": false,
               "filterable": true,
               "retrievable": true,
               "sortable": true,
               "facetable": true,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              },
              {
               "name": "lastRenovationDate",
               "type": "Edm.DateTimeOffset",
               "searchable": false,
               "filterable": true,
               "retrievable": true,
               "sortable": true,
               "facetable": true,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              },
              {
               "name": "rating",
               "type": "Edm.Int32",
               "searchable": false,
               "filterable": true,
               "retrievable": true,
               "sortable": true,
               "facetable": true,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              },
              {
               "name": "location",
               "type": "Edm.GeographyPoint",
               "searchable": false,
               "filterable": true,
               "retrievable": true,
               "sortable": true,
               "facetable": false,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              }
             ],
             "scoringProfiles": [
              {
               "name": "geo",
               "text": {
                "weights": {
                 "hotelName": "5"
                }
               },
               "functions": [
                {
                 "type": "distance",
                 "boost": "5",
                 "fieldName": "location",
                 "interpolation": "logarithmic",
                 "distance": {
                  "referencePointParameter": "currentLocation",
                  "boostingDistance": "10"
                 }
                }
               ]
              }
             ],
             "defaultScoringProfile": "geo",
             "suggesters": [
              {
               "name": "sg",
               "searchMode": "analyzingInfixMatching",
               "sourceFields": [
                "hotelName"
               ]
              }
             ],
             "analyzers": [
              {
               "name": "tagsAnalyzer",
               "@odata.type": "#Microsoft.Azure.Search.CustomAnalyzer",
               "charFilters": [
                "html_strip"
               ],
               "tokenizer": "standard_v2"
              }
             ],
             "tokenizers": [],
             "tokenFilters": [],
             "charFilters": [],
             "corsOptions": {
              "allowedOrigins": [
               "tempuri.org"
              ],
              "maxAgeInSeconds": "60"
             },
             "encryptionKey": {
              "keyVaultKeyName": "myKeyName",
              "keyVaultKeyVersion": "myKeyVersion",
              "keyVaultUri": "https://myKeyVault.vault.azure.net",
              "accessCredentials": null
             }
            },
            {
             "name": "testindex",
             "fields": [
              {
               "name": "id",
               "type": "Edm.String",
               "searchable": false,
               "filterable": false,
               "retrievable": true,
               "sortable": false,
               "facetable": false,
               "key": true,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              },
              {
               "name": "hidden",
               "type": "Edm.Double",
               "searchable": false,
               "filterable": true,
               "retrievable": false,
               "sortable": true,
               "facetable": false,
               "key": false,
               "indexAnalyzer": null,
               "searchAnalyzer": null,
               "analyzer": null,
               "synonymMaps": []
              }
             ],
             "scoringProfiles": [],
             "defaultScoringProfile": null,
             "suggesters": [],
             "analyzers": [],
             "tokenizers": [],
             "tokenFilters": [],
             "charFilters": [],
             "corsOptions": null,
             "encryptionKey": null
            }
           ]
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3754",
     "parameters": [
      {
       "$id": "3755",
       "clientProperty": {
        "$ref": "2883"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3756",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3757",
        "fixed": false,
        "raw": "The definition of the index to create or update."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1mm4022¬∑indexes-indexname¬∑put¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1mm4022¬∑indexes-indexname¬∑put¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3758",
        "fixed": false,
        "raw": "indexName"
       },
       "serializedName": "indexName",
       "modelType": {
        "$id": "3759",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3760",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3761",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3762",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3763",
        "fixed": false,
        "raw": "The definition of the index to create or update."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1vnd4w0¬∑indexes-indexname¬∑put¬∑requestbody",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/requestBodies/paths¬∑1vnd4w0¬∑indexes-indexname¬∑put¬∑requestbody"
         ]
        },
        "x-ms-requestBody-name": "index"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3764",
        "fixed": false,
        "raw": "index"
       },
       "serializedName": "index",
       "modelType": {
        "$ref": "1988"
       }
      },
      {
       "$id": "3765",
       "clientProperty": {
        "$ref": "2889"
       },
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3766",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3767",
        "fixed": false,
        "raw": "Allows new analyzers, tokenizers, token filters, or char filters to be added to an index by taking the index offline for at least a few seconds. This temporarily causes indexing and query requests to fail. Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1udv4uj¬∑indexes-indexname¬∑put¬∑parameters¬∑1",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1udv4uj¬∑indexes-indexname¬∑put¬∑parameters¬∑1"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3768",
        "fixed": false,
        "raw": "allowIndexDowntime"
       },
       "serializedName": "allowIndexDowntime",
       "modelType": {
        "$id": "3769",
        "$type": "PrimaryType",
        "knownPrimaryType": "boolean",
        "name": {
         "$id": "3770",
         "fixed": false,
         "raw": "Boolean"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3771",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3772",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3773",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3774",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3775",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3776",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3777",
       "clientProperty": {
        "$ref": "2931"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3778",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3779",
        "fixed": false,
        "raw": "Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3780",
        "fixed": false,
        "raw": "If-Match"
       },
       "serializedName": "If-Match",
       "modelType": {
        "$id": "3781",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3782",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3783",
       "clientProperty": {
        "$ref": "2937"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3784",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3785",
        "fixed": false,
        "raw": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfNoneMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfNoneMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3786",
        "fixed": false,
        "raw": "If-None-Match"
       },
       "serializedName": "If-None-Match",
       "modelType": {
        "$id": "3787",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3788",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3789",
       "clientProperty": {
        "$ref": "2943"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3790",
        "fixed": false,
        "raw": "return=representation"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3791",
        "fixed": false,
        "raw": "For HTTP PUT requests, instructs the service to return the created/updated resource on success."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "PreferHeaderParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/PreferHeaderParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3792",
        "fixed": false,
        "raw": "Prefer"
       },
       "serializedName": "Prefer",
       "modelType": {
        "$id": "3793",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3794",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3795",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3796",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3797",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3798",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3799",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3800",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3801",
      "fixed": false,
      "raw": "CreateOrUpdate"
     },
     "group": {
      "$id": "3802",
      "fixed": false,
      "raw": "Indexes"
     },
     "serializedName": "Indexes_CreateOrUpdate",
     "url": "/indexes('{indexName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "put",
     "responses": {
      "OK": {
       "$id": "3803",
       "body": {
        "$ref": "1988"
       },
       "extensions": {
        "$id": "3804",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑c2edl9¬∑indexes-indexname¬∑put¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑c2edl9¬∑indexes-indexname¬∑put¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      },
      "Created": {
       "$id": "3805",
       "body": {
        "$ref": "1988"
       },
       "extensions": {
        "$id": "3806",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑rc0s7h¬∑indexes-indexname¬∑put¬∑responses¬∑201",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑rc0s7h¬∑indexes-indexname¬∑put¬∑responses¬∑201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3807",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3808",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑1cogma¬∑indexes-indexname¬∑put¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1cogma¬∑indexes-indexname¬∑put¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3809",
      "body": {
       "$ref": "1988"
      },
      "isNullable": true
     },
     "description": "Creates a new search index or updates an index if it already exists.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Update-Index",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-requestBody-index": "1",
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceCreateOrUpdateIndex": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "indexName": "hotels",
         "allowIndexDowntime": false,
         "api-version": "2019-05-06-Preview",
         "Prefer": "return=representation",
         "index": {
          "name": "hotels",
          "fields": [
           {
            "name": "hotelId",
            "type": "Edm.String",
            "key": true,
            "searchable": false
           },
           {
            "name": "baseRate",
            "type": "Edm.Double"
           },
           {
            "name": "description",
            "type": "Edm.String",
            "filterable": false,
            "sortable": false,
            "facetable": false
           },
           {
            "name": "description_fr",
            "type": "Edm.String",
            "filterable": false,
            "sortable": false,
            "facetable": false,
            "analyzer": "fr.lucene"
           },
           {
            "name": "hotelName",
            "type": "Edm.String"
           },
           {
            "name": "category",
            "type": "Edm.String"
           },
           {
            "name": "tags",
            "type": "Collection(Edm.String)",
            "analyzer": "tagsAnalyzer"
           },
           {
            "name": "parkingIncluded",
            "type": "Edm.Boolean"
           },
           {
            "name": "smokingAllowed",
            "type": "Edm.Boolean"
           },
           {
            "name": "lastRenovationDate",
            "type": "Edm.DateTimeOffset"
           },
           {
            "name": "rating",
            "type": "Edm.Int32"
           },
           {
            "name": "location",
            "type": "Edm.GeographyPoint"
           }
          ],
          "scoringProfiles": [
           {
            "name": "geo",
            "text": {
             "weights": {
              "hotelName": "5"
             }
            },
            "functions": [
             {
              "type": "distance",
              "boost": "5",
              "fieldName": "location",
              "interpolation": "logarithmic",
              "distance": {
               "referencePointParameter": "currentLocation",
               "boostingDistance": "10"
              }
             }
            ]
           }
          ],
          "defaultScoringProfile": "geo",
          "suggesters": [
           {
            "name": "sg",
            "searchMode": "analyzingInfixMatching",
            "sourceFields": [
             "hotelName"
            ]
           }
          ],
          "analyzers": [
           {
            "name": "tagsAnalyzer",
            "@odata.type": "#Microsoft.Azure.Search.CustomAnalyzer",
            "charFilters": [
             "html_strip"
            ],
            "tokenizer": "standard_v2"
           }
          ],
          "corsOptions": {
           "allowedOrigins": [
            "tempuri.org"
           ],
           "maxAgeInSeconds": "60"
          },
          "encryptionKey": {
           "keyVaultKeyName": "myUserManagedEncryptionKey-createdinAzureKeyVault",
           "keyVaultKeyVersion": "myKeyVersion-32charAlphaNumericString",
           "keyVaultUri": "https://myKeyVault.vault.azure.net",
           "accessCredentials": null
          },
          "similarity": {
           "@odata.type": "#Microsoft.Azure.Search.ClassicSimilarity"
          }
         }
        },
        "responses": {
         "200": {
          "body": {
           "name": "hotels",
           "fields": [
            {
             "name": "hotelId",
             "type": "Edm.String",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": true,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "baseRate",
             "type": "Edm.Double",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "description",
             "type": "Edm.String",
             "searchable": true,
             "filterable": false,
             "retrievable": true,
             "sortable": false,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "description_fr",
             "type": "Edm.String",
             "searchable": true,
             "filterable": false,
             "retrievable": true,
             "sortable": false,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": "fr.lucene",
             "synonymMaps": []
            },
            {
             "name": "hotelName",
             "type": "Edm.String",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "category",
             "type": "Edm.String",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "tags",
             "type": "Collection(Edm.String)",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": false,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": "tagsAnalyzer",
             "synonymMaps": []
            },
            {
             "name": "parkingIncluded",
             "type": "Edm.Boolean",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "smokingAllowed",
             "type": "Edm.Boolean",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "lastRenovationDate",
             "type": "Edm.DateTimeOffset",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "rating",
             "type": "Edm.Int32",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "location",
             "type": "Edm.GeographyPoint",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            }
           ],
           "scoringProfiles": [
            {
             "name": "geo",
             "text": {
              "weights": {
               "hotelName": "5"
              }
             },
             "functions": [
              {
               "type": "distance",
               "boost": "5",
               "fieldName": "location",
               "interpolation": "logarithmic",
               "distance": {
                "referencePointParameter": "currentLocation",
                "boostingDistance": "10"
               }
              }
             ]
            }
           ],
           "defaultScoringProfile": "geo",
           "suggesters": [
            {
             "name": "sg",
             "searchMode": "analyzingInfixMatching",
             "sourceFields": [
              "hotelName"
             ]
            }
           ],
           "analyzers": [
            {
             "name": "tagsAnalyzer",
             "@odata.type": "#Microsoft.Azure.Search.CustomAnalyzer",
             "charFilters": [
              "html_strip"
             ],
             "tokenizer": "standard_v2"
            }
           ],
           "tokenizers": [],
           "tokenFilters": [],
           "charFilters": [],
           "corsOptions": {
            "allowedOrigins": [
             "tempuri.org"
            ],
            "maxAgeInSeconds": "60"
           },
           "encryptionKey": {
            "keyVaultKeyName": "myUserManagedEncryptionKey-createdinAzureKeyVault",
            "keyVaultKeyVersion": "myKeyVersion-32charAlphaNumericString",
            "keyVaultUri": "https://myKeyVault.vault.azure.net",
            "accessCredentials": null
           },
           "similarity": {
            "@odata.type": "#Microsoft.Azure.Search.ClassicSimilarity"
           }
          }
         },
         "201": {
          "body": {
           "name": "hotels",
           "fields": [
            {
             "name": "hotelId",
             "type": "Edm.String",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": true,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "baseRate",
             "type": "Edm.Double",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "description",
             "type": "Edm.String",
             "searchable": true,
             "filterable": false,
             "retrievable": true,
             "sortable": false,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "description_fr",
             "type": "Edm.String",
             "searchable": true,
             "filterable": false,
             "retrievable": true,
             "sortable": false,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": "fr.lucene",
             "synonymMaps": []
            },
            {
             "name": "hotelName",
             "type": "Edm.String",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "category",
             "type": "Edm.String",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "tags",
             "type": "Collection(Edm.String)",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": false,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": "tagsAnalyzer",
             "synonymMaps": []
            },
            {
             "name": "parkingIncluded",
             "type": "Edm.Boolean",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "smokingAllowed",
             "type": "Edm.Boolean",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "lastRenovationDate",
             "type": "Edm.DateTimeOffset",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "rating",
             "type": "Edm.Int32",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "location",
             "type": "Edm.GeographyPoint",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            }
           ],
           "scoringProfiles": [
            {
             "name": "geo",
             "text": {
              "weights": {
               "hotelName": "5"
              }
             },
             "functions": [
              {
               "type": "distance",
               "boost": "5",
               "fieldName": "location",
               "interpolation": "logarithmic",
               "distance": {
                "referencePointParameter": "currentLocation",
                "boostingDistance": "10"
               }
              }
             ]
            }
           ],
           "defaultScoringProfile": "geo",
           "suggesters": [
            {
             "name": "sg",
             "searchMode": "analyzingInfixMatching",
             "sourceFields": [
              "hotelName"
             ]
            }
           ],
           "analyzers": [
            {
             "name": "tagsAnalyzer",
             "@odata.type": "#Microsoft.Azure.Search.CustomAnalyzer",
             "charFilters": [
              "html_strip"
             ],
             "tokenizer": "standard_v2"
            }
           ],
           "tokenizers": [],
           "tokenFilters": [],
           "charFilters": [],
           "corsOptions": {
            "allowedOrigins": [
             "tempuri.org"
            ],
            "maxAgeInSeconds": "60"
           },
           "encryptionKey": {
            "keyVaultKeyName": "myUserManagedEncryptionKey-createdinAzureKeyVault",
            "keyVaultKeyVersion": "myKeyVersion-32charAlphaNumericString",
            "keyVaultUri": "https://myKeyVault.vault.azure.net",
            "accessCredentials": null
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3810",
     "parameters": [
      {
       "$id": "3811",
       "clientProperty": {
        "$ref": "2883"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3812",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3813",
        "fixed": false,
        "raw": "The name of the index to delete."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑2107c9¬∑indexes-indexname¬∑delete¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑2107c9¬∑indexes-indexname¬∑delete¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3814",
        "fixed": false,
        "raw": "indexName"
       },
       "serializedName": "indexName",
       "modelType": {
        "$id": "3815",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3816",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3817",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3818",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3819",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3820",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3821",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3822",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3823",
       "clientProperty": {
        "$ref": "2931"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3824",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3825",
        "fixed": false,
        "raw": "Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3826",
        "fixed": false,
        "raw": "If-Match"
       },
       "serializedName": "If-Match",
       "modelType": {
        "$id": "3827",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3828",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3829",
       "clientProperty": {
        "$ref": "2937"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3830",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3831",
        "fixed": false,
        "raw": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "IfNoneMatchParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/IfNoneMatchParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3832",
        "fixed": false,
        "raw": "If-None-Match"
       },
       "serializedName": "If-None-Match",
       "modelType": {
        "$id": "3833",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3834",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3835",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3836",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3837",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3838",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3839",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3840",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3841",
      "fixed": false,
      "raw": "Delete"
     },
     "group": {
      "$id": "3842",
      "fixed": false,
      "raw": "Indexes"
     },
     "serializedName": "Indexes_Delete",
     "url": "/indexes('{indexName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "delete",
     "responses": {
      "NoContent": {
       "$id": "3843",
       "extensions": {
        "$id": "3844",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑tjpe0p¬∑indexes-indexname¬∑delete¬∑responses¬∑204",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑tjpe0p¬∑indexes-indexname¬∑delete¬∑responses¬∑204"
         ]
        }
       },
       "isNullable": true
      },
      "NotFound": {
       "$id": "3845",
       "extensions": {
        "$id": "3846",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1ma1uab¬∑indexes-indexname¬∑delete¬∑responses¬∑404",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1ma1uab¬∑indexes-indexname¬∑delete¬∑responses¬∑404"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3847",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3848",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑zdqkdu¬∑indexes-indexname¬∑delete¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑zdqkdu¬∑indexes-indexname¬∑delete¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3849",
      "isNullable": true
     },
     "description": "Deletes a search index and all the documents it contains. This operation is permanent, with no recovery option. Make sure you have a master copy of your index definition, data ingestion code, and a backup of the primary data source in case you need to re-build the index.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Delete-Index",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceDeleteIndex": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "indexName": "myindex",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "204": {},
         "404": {}
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3850",
     "parameters": [
      {
       "$id": "3851",
       "clientProperty": {
        "$ref": "2883"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3852",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3853",
        "fixed": false,
        "raw": "The name of the index to retrieve."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1srn3sv¬∑indexes-indexname¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1srn3sv¬∑indexes-indexname¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3854",
        "fixed": false,
        "raw": "indexName"
       },
       "serializedName": "indexName",
       "modelType": {
        "$id": "3855",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3856",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3857",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3858",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3859",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3860",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3861",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3862",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3863",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3864",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3865",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3866",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3867",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3868",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3869",
      "fixed": false,
      "raw": "Get"
     },
     "group": {
      "$id": "3870",
      "fixed": false,
      "raw": "Indexes"
     },
     "serializedName": "Indexes_Get",
     "url": "/indexes('{indexName}')",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3871",
       "body": {
        "$ref": "1988"
       },
       "extensions": {
        "$id": "3872",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1eoc7ge¬∑indexes-indexname¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1eoc7ge¬∑indexes-indexname¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3873",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3874",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑1n5lspc¬∑indexes-indexname¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1n5lspc¬∑indexes-indexname¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3875",
      "body": {
       "$ref": "1988"
      },
      "isNullable": true
     },
     "description": "Retrieves an index definition.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Get-Index",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceGetIndex": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "indexName": "hotels",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "name": "hotels",
           "fields": [
            {
             "name": "hotelId",
             "type": "Edm.String",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": true,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "baseRate",
             "type": "Edm.Double",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "description",
             "type": "Edm.String",
             "searchable": true,
             "filterable": false,
             "retrievable": true,
             "sortable": false,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "description_fr",
             "type": "Edm.String",
             "searchable": true,
             "filterable": false,
             "retrievable": true,
             "sortable": false,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": "fr.lucene",
             "synonymMaps": []
            },
            {
             "name": "hotelName",
             "type": "Edm.String",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "category",
             "type": "Edm.String",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "tags",
             "type": "Collection(Edm.String)",
             "searchable": true,
             "filterable": true,
             "retrievable": true,
             "sortable": false,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": "tagsAnalyzer",
             "synonymMaps": []
            },
            {
             "name": "parkingIncluded",
             "type": "Edm.Boolean",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "smokingAllowed",
             "type": "Edm.Boolean",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "lastRenovationDate",
             "type": "Edm.DateTimeOffset",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "rating",
             "type": "Edm.Int32",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": true,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            },
            {
             "name": "location",
             "type": "Edm.GeographyPoint",
             "searchable": false,
             "filterable": true,
             "retrievable": true,
             "sortable": true,
             "facetable": false,
             "key": false,
             "indexAnalyzer": null,
             "searchAnalyzer": null,
             "analyzer": null,
             "synonymMaps": []
            }
           ],
           "scoringProfiles": [
            {
             "name": "geo",
             "text": {
              "weights": {
               "hotelName": "5"
              }
             },
             "functions": [
              {
               "type": "distance",
               "boost": "5",
               "fieldName": "location",
               "interpolation": "logarithmic",
               "distance": {
                "referencePointParameter": "currentLocation",
                "boostingDistance": "10"
               }
              }
             ]
            }
           ],
           "defaultScoringProfile": "geo",
           "suggesters": [
            {
             "name": "sg",
             "searchMode": "analyzingInfixMatching",
             "sourceFields": [
              "hotelName"
             ]
            }
           ],
           "analyzers": [
            {
             "name": "tagsAnalyzer",
             "@odata.type": "#Microsoft.Azure.Search.CustomAnalyzer",
             "charFilters": [
              "html_strip"
             ],
             "tokenizer": "standard_v2"
            }
           ],
           "tokenizers": [],
           "tokenFilters": [],
           "charFilters": [],
           "corsOptions": {
            "allowedOrigins": [
             "tempuri.org"
            ],
            "maxAgeInSeconds": "60"
           },
           "encryptionKey": {
            "keyVaultKeyName": "myKeyName",
            "keyVaultKeyVersion": "myKeyVersion",
            "keyVaultUri": "https://myKeyVault.vault.azure.net",
            "accessCredentials": {
             "applicationId": "00000000-0000-0000-0000-000000000000",
             "applicationSecret": null
            }
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3876",
     "parameters": [
      {
       "$id": "3877",
       "clientProperty": {
        "$ref": "2883"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3878",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3879",
        "fixed": false,
        "raw": "The name of the index for which to retrieve statistics."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1yvc1mg¬∑indexes-indexname-search-stats¬∑get¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑1yvc1mg¬∑indexes-indexname-search-stats¬∑get¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3880",
        "fixed": false,
        "raw": "indexName"
       },
       "serializedName": "indexName",
       "modelType": {
        "$id": "3881",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3882",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3883",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3884",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3885",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3886",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3887",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3888",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3889",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3890",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3891",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3892",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3893",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3894",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3895",
      "fixed": false,
      "raw": "GetStatistics"
     },
     "group": {
      "$id": "3896",
      "fixed": false,
      "raw": "Indexes"
     },
     "serializedName": "Indexes_GetStatistics",
     "url": "/indexes('{indexName}')/search.stats",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3897",
       "body": {
        "$ref": "2062"
       },
       "extensions": {
        "$id": "3898",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑1qgrryk¬∑indexes-indexname-search-stats¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1qgrryk¬∑indexes-indexname-search-stats¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3899",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3900",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑kh86na¬∑indexes-indexname-search-stats¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑kh86na¬∑indexes-indexname-search-stats¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3901",
      "body": {
       "$ref": "2062"
      },
      "isNullable": true
     },
     "description": "Returns statistics for the given index, including a document count and storage usage.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/Get-Index-Statistics",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceGetIndexStatistics": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "indexName": "hotels",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "documentCount": "239572",
           "storageSize": "72375920"
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "3902",
     "parameters": [
      {
       "$id": "3903",
       "clientProperty": {
        "$ref": "2883"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3904",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3905",
        "fixed": false,
        "raw": "The name of the index for which to test an analyzer."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑90kait¬∑indexes-indexname-search-analyze¬∑post¬∑parameters¬∑0",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/paths¬∑90kait¬∑indexes-indexname-search-analyze¬∑post¬∑parameters¬∑0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3906",
        "fixed": false,
        "raw": "indexName"
       },
       "serializedName": "indexName",
       "modelType": {
        "$id": "3907",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3908",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3909",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3910",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3911",
        "fixed": false,
        "raw": "The text and analyzer or analysis components to test."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑7bxkaz¬∑indexes-indexname-search-analyze¬∑post¬∑requestbody",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/requestBodies/paths¬∑7bxkaz¬∑indexes-indexname-search-analyze¬∑post¬∑requestbody"
         ]
        },
        "x-ms-requestBody-name": "request"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "3912",
        "fixed": false,
        "raw": "request"
       },
       "serializedName": "request",
       "modelType": {
        "$ref": "2"
       }
      },
      {
       "$id": "3913",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3914",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3915",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3916",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3917",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3918",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3919",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3920",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3921",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3922",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3923",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3924",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3925",
      "fixed": false,
      "raw": "Analyze"
     },
     "group": {
      "$id": "3926",
      "fixed": false,
      "raw": "Indexes"
     },
     "serializedName": "Indexes_Analyze",
     "url": "/indexes('{indexName}')/search.analyze",
     "isAbsoluteUrl": false,
     "httpMethod": "post",
     "responses": {
      "OK": {
       "$id": "3927",
       "body": {
        "$ref": "213"
       },
       "extensions": {
        "$id": "3928",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑ajbub0¬∑indexes-indexname-search-analyze¬∑post¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑ajbub0¬∑indexes-indexname-search-analyze¬∑post¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3929",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3930",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑11k4cyf¬∑indexes-indexname-search-analyze¬∑post¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑11k4cyf¬∑indexes-indexname-search-analyze¬∑post¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3931",
      "body": {
       "$ref": "213"
      },
      "isNullable": true
     },
     "description": "Shows how an analyzer breaks text into tokens.",
     "externalDocsUrl": "https://docs.microsoft.com/rest/api/searchservice/test-analyzer",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-requestBody-index": "1",
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceIndexAnalyze": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "indexName": "hotels",
         "api-version": "2019-05-06-Preview",
         "request": {
          "text": "Text to analyze",
          "analyzer": "standard.lucene"
         }
        },
        "responses": {
         "200": {
          "body": {
           "tokens": [
            {
             "token": "text",
             "startOffset": "0",
             "endOffset": "4",
             "position": "0"
            },
            {
             "token": "to",
             "startOffset": "5",
             "endOffset": "7",
             "position": "1"
            },
            {
             "token": "analyze",
             "startOffset": "8",
             "endOffset": "15",
             "position": "2"
            }
           ]
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    }
   ],
   "name": {
    "$id": "3932",
    "fixed": false,
    "raw": "Indexes"
   },
   "typeName": {
    "$id": "3933",
    "fixed": false
   },
   "nameForProperty": "Indexes"
  },
  {
   "$id": "3934",
   "methods": [
    {
     "$id": "3935",
     "parameters": [
      {
       "$id": "3936",
       "clientProperty": {
        "$ref": "2925"
       },
       "location": "header",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3937",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "3938",
        "fixed": false,
        "raw": "The tracking ID sent with the request to help with debugging."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "ClientRequestIdParameter",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/parameters/ClientRequestIdParameter"
         ]
        },
        "x-ms-parameter-location": "method",
        "x-ms-parameter-grouping": {
         "name": "request-options"
        },
        "x-ms-client-request-id": true
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "3939",
        "fixed": false,
        "raw": "x-ms-client-request-id"
       },
       "serializedName": "x-ms-client-request-id",
       "modelType": {
        "$id": "3940",
        "$type": "PrimaryType",
        "format": "uuid",
        "knownPrimaryType": "uuid",
        "name": {
         "$id": "3941",
         "fixed": false,
         "raw": "Uuid"
        },
        "deprecated": false
       }
      },
      {
       "$id": "3942",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "3943",
        "fixed": false,
        "raw": "2019-05-06-Preview"
       },
       "deprecated": false,
       "documentation": {
        "$id": "3944",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "3945",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "3946",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "3947",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "3948",
      "fixed": false,
      "raw": "GetServiceStatistics"
     },
     "group": {
      "$id": "3949",
      "fixed": false,
      "raw": ""
     },
     "serializedName": "GetServiceStatistics",
     "url": "/servicestats",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "3950",
       "body": {
        "$ref": "2711"
       },
       "extensions": {
        "$id": "3951",
        "x-ms-metadata": {
         "apiVersions": [
          "2019-05-06-Preview"
         ],
         "filename": [
          "mem:///152?oai3.shaken.json"
         ],
         "name": "paths¬∑4wl3qs¬∑servicestats¬∑get¬∑responses¬∑200",
         "originalLocations": [
          "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑4wl3qs¬∑servicestats¬∑get¬∑responses¬∑200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "3952",
      "body": {
       "$ref": "2721"
      },
      "extensions": {
       "$id": "3953",
       "x-ms-metadata": {
        "apiVersions": [
         "2019-05-06-Preview"
        ],
        "filename": [
         "mem:///152?oai3.shaken.json"
        ],
        "name": "paths¬∑1b7acj5¬∑servicestats¬∑get¬∑responses¬∑default",
        "originalLocations": [
         "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/search/data-plane/Azure.Search/preview/2019-05-06-preview/searchservice.json#/components/responses/paths¬∑1b7acj5¬∑servicestats¬∑get¬∑responses¬∑default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "3954",
      "body": {
       "$ref": "2711"
      },
      "isNullable": true
     },
     "description": "Gets service level statistics for a search service.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "{endpoint}",
        "variables": {
         "endpoint": {
          "x-name": "endpoint",
          "x-in": "path",
          "x-required": true,
          "x-type": "string",
          "x-ms-skip-url-encoding": true,
          "description": "The endpoint URL of the search service.",
          "x-ms-parameter-location": "client",
          "x-ms-original": {
           "$ref": "#/components/parameters/parameters:31"
          },
          "default": ""
         }
        }
       }
      ],
      "x-ms-request-id": "request-id",
      "x-ms-examples": {
       "SearchServiceGetServiceStatistics": {
        "parameters": {
         "endpoint": "https://myservice.search.windows.net",
         "api-version": "2019-05-06-Preview"
        },
        "responses": {
         "200": {
          "body": {
           "counters": {
            "documentCount": {
             "usage": "7093",
             "quota": "10000"
            },
            "indexesCount": {
             "usage": "3",
             "quota": "3"
            },
            "indexersCount": {
             "usage": "3",
             "quota": "3"
            },
            "dataSourcesCount": {
             "usage": "1",
             "quota": "3"
            },
            "storageSize": {
             "usage": "914529",
             "quota": "52428800"
            },
            "synonymMaps": {
             "usage": "2",
             "quota": "3"
            },
            "skillsetCount": {
             "usage": "0",
             "quota": "3"
            }
           },
           "limits": {
            "maxFieldsPerIndex": "1000",
            "maxFieldNestingDepthPerIndex": "10",
            "maxComplexCollectionFieldsPerIndex": "100",
            "maxComplexObjectsInCollectionsPerDocument": "3000"
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    }
   ],
   "name": {
    "$id": "3955",
    "fixed": false,
    "raw": ""
   },
   "typeName": {
    "$id": "3956",
    "fixed": false
   },
   "nameForProperty": "SearchServiceRestClient"
  }
 ]
}