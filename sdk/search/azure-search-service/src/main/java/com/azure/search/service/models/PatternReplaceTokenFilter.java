/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.azure.search.service.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A character filter that replaces characters in the input string. It uses a
 * regular expression to identify character sequences to preserve and a
 * replacement pattern to identify characters to replace. For example, given
 * the input text "aa bb aa bb", pattern "(aa)\s+(bb)", and replacement
 * "$1#$2", the result would be "aa#bb aa#bb". This token filter is implemented
 * using Apache Lucene.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata\\.type")
@JsonTypeName("#Microsoft.Azure.Search.PatternReplaceTokenFilter")
public class PatternReplaceTokenFilter extends TokenFilter {
    /**
     * A regular expression pattern.
     */
    @JsonProperty(value = "pattern", required = true)
    private String pattern;

    /**
     * The replacement text.
     */
    @JsonProperty(value = "replacement", required = true)
    private String replacement;

    /**
     * Get a regular expression pattern.
     *
     * @return the pattern value
     */
    public String pattern() {
        return this.pattern;
    }

    /**
     * Set a regular expression pattern.
     *
     * @param pattern the pattern value to set
     * @return the PatternReplaceTokenFilter object itself.
     */
    public PatternReplaceTokenFilter withPattern(String pattern) {
        this.pattern = pattern;
        return this;
    }

    /**
     * Get the replacement text.
     *
     * @return the replacement value
     */
    public String replacement() {
        return this.replacement;
    }

    /**
     * Set the replacement text.
     *
     * @param replacement the replacement value to set
     * @return the PatternReplaceTokenFilter object itself.
     */
    public PatternReplaceTokenFilter withReplacement(String replacement) {
        this.replacement = replacement;
        return this;
    }

}
