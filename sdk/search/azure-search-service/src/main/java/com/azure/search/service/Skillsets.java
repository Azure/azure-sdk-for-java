/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.azure.search.service;

import com.azure.search.service.models.SearchRequestOptions;
import com.azure.search.service.models.Skillset;
import com.azure.search.service.models.SkillsetListResult;
import com.microsoft.azure.CloudException;
import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceFuture;
import com.microsoft.rest.ServiceResponse;
import rx.Observable;

/**
 * An instance of this class provides access to all the operations defined
 * in Skillsets.
 */
public interface Skillsets {
    /**
     * Creates a new cognitive skillset in an Azure Search service or updates the skillset if it already exists.
     *
     * @param skillsetName The name of the skillset to create or update.
     * @param skillset     The skillset containing one or more cognitive skills to create or update in an Azure
     *                     Search service.
     * @return the Skillset object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException           thrown if the request is rejected by server
     * @throws RuntimeException         all other wrapped checked exceptions if the request fails to be sent
     */
    Skillset createOrUpdate(String skillsetName, Skillset skillset);

    /**
     * Creates a new cognitive skillset in an Azure Search service or updates the skillset if it already exists.
     *
     * @param skillsetName    The name of the skillset to create or update.
     * @param skillset        The skillset containing one or more cognitive skills to create or update in an Azure
     *                        Search service.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @return the {@link ServiceFuture} object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    ServiceFuture<Skillset> createOrUpdateAsync(
        String skillsetName, Skillset skillset,
        final ServiceCallback<Skillset> serviceCallback);

    /**
     * Creates a new cognitive skillset in an Azure Search service or updates the skillset if it already exists.
     *
     * @param skillsetName The name of the skillset to create or update.
     * @param skillset     The skillset containing one or more cognitive skills to create or update in an Azure
     *                     Search service.
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<Skillset> createOrUpdateAsync(String skillsetName, Skillset skillset);

    /**
     * Creates a new cognitive skillset in an Azure Search service or updates the skillset if it already exists.
     *
     * @param skillsetName The name of the skillset to create or update.
     * @param skillset     The skillset containing one or more cognitive skills to create or update in an Azure
     *                     Search service.
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<ServiceResponse<Skillset>> createOrUpdateWithServiceResponseAsync(
        String skillsetName,
        Skillset skillset);

    /**
     * Creates a new cognitive skillset in an Azure Search service or updates the skillset if it already exists.
     *
     * @param skillsetName         The name of the skillset to create or update.
     * @param skillset             The skillset containing one or more cognitive skills to create or update in an
     *                             Azure Search service.
     * @param searchRequestOptions Additional parameters for the operation
     * @return the Skillset object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException           thrown if the request is rejected by server
     * @throws RuntimeException         all other wrapped checked exceptions if the request fails to be sent
     */
    Skillset createOrUpdate(String skillsetName, Skillset skillset, SearchRequestOptions searchRequestOptions);

    /**
     * Creates a new cognitive skillset in an Azure Search service or updates the skillset if it already exists.
     *
     * @param skillsetName         The name of the skillset to create or update.
     * @param skillset             The skillset containing one or more cognitive skills to create or update in an
     *                             Azure Search service.
     * @param searchRequestOptions Additional parameters for the operation
     * @param serviceCallback      the async ServiceCallback to handle successful and failed responses.
     * @return the {@link ServiceFuture} object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    ServiceFuture<Skillset> createOrUpdateAsync(
        String skillsetName, Skillset skillset,
        SearchRequestOptions searchRequestOptions, final ServiceCallback<Skillset> serviceCallback);

    /**
     * Creates a new cognitive skillset in an Azure Search service or updates the skillset if it already exists.
     *
     * @param skillsetName         The name of the skillset to create or update.
     * @param skillset             The skillset containing one or more cognitive skills to create or update in an
     *                             Azure Search service.
     * @param searchRequestOptions Additional parameters for the operation
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<Skillset> createOrUpdateAsync(
        String skillsetName, Skillset skillset,
        SearchRequestOptions searchRequestOptions);

    /**
     * Creates a new cognitive skillset in an Azure Search service or updates the skillset if it already exists.
     *
     * @param skillsetName         The name of the skillset to create or update.
     * @param skillset             The skillset containing one or more cognitive skills to create or update in an
     *                             Azure Search service.
     * @param searchRequestOptions Additional parameters for the operation
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<ServiceResponse<Skillset>> createOrUpdateWithServiceResponseAsync(
        String skillsetName,
        Skillset skillset, SearchRequestOptions searchRequestOptions);

    /**
     * Deletes a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName The name of the skillset to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException           thrown if the request is rejected by server
     * @throws RuntimeException         all other wrapped checked exceptions if the request fails to be sent
     */
    void delete(String skillsetName);

    /**
     * Deletes a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName    The name of the skillset to delete.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @return the {@link ServiceFuture} object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    ServiceFuture<Void> deleteAsync(String skillsetName, final ServiceCallback<Void> serviceCallback);

    /**
     * Deletes a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName The name of the skillset to delete.
     * @return the {@link ServiceResponse} object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<Void> deleteAsync(String skillsetName);

    /**
     * Deletes a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName The name of the skillset to delete.
     * @return the {@link ServiceResponse} object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String skillsetName);

    /**
     * Deletes a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName         The name of the skillset to delete.
     * @param searchRequestOptions Additional parameters for the operation
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException           thrown if the request is rejected by server
     * @throws RuntimeException         all other wrapped checked exceptions if the request fails to be sent
     */
    void delete(String skillsetName, SearchRequestOptions searchRequestOptions);

    /**
     * Deletes a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName         The name of the skillset to delete.
     * @param searchRequestOptions Additional parameters for the operation
     * @param serviceCallback      the async ServiceCallback to handle successful and failed responses.
     * @return the {@link ServiceFuture} object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    ServiceFuture<Void> deleteAsync(
        String skillsetName, SearchRequestOptions searchRequestOptions,
        final ServiceCallback<Void> serviceCallback);

    /**
     * Deletes a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName         The name of the skillset to delete.
     * @param searchRequestOptions Additional parameters for the operation
     * @return the {@link ServiceResponse} object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<Void> deleteAsync(String skillsetName, SearchRequestOptions searchRequestOptions);

    /**
     * Deletes a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName         The name of the skillset to delete.
     * @param searchRequestOptions Additional parameters for the operation
     * @return the {@link ServiceResponse} object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(
        String skillsetName,
        SearchRequestOptions searchRequestOptions);

    /**
     * Retrieves a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName The name of the skillset to retrieve.
     * @return the Skillset object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException           thrown if the request is rejected by server
     * @throws RuntimeException         all other wrapped checked exceptions if the request fails to be sent
     */
    Skillset get(String skillsetName);

    /**
     * Retrieves a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName    The name of the skillset to retrieve.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @return the {@link ServiceFuture} object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    ServiceFuture<Skillset> getAsync(String skillsetName, final ServiceCallback<Skillset> serviceCallback);

    /**
     * Retrieves a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName The name of the skillset to retrieve.
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<Skillset> getAsync(String skillsetName);

    /**
     * Retrieves a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName The name of the skillset to retrieve.
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<ServiceResponse<Skillset>> getWithServiceResponseAsync(String skillsetName);

    /**
     * Retrieves a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName         The name of the skillset to retrieve.
     * @param searchRequestOptions Additional parameters for the operation
     * @return the Skillset object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException           thrown if the request is rejected by server
     * @throws RuntimeException         all other wrapped checked exceptions if the request fails to be sent
     */
    Skillset get(String skillsetName, SearchRequestOptions searchRequestOptions);

    /**
     * Retrieves a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName         The name of the skillset to retrieve.
     * @param searchRequestOptions Additional parameters for the operation
     * @param serviceCallback      the async ServiceCallback to handle successful and failed responses.
     * @return the {@link ServiceFuture} object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    ServiceFuture<Skillset> getAsync(
        String skillsetName, SearchRequestOptions searchRequestOptions,
        final ServiceCallback<Skillset> serviceCallback);

    /**
     * Retrieves a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName         The name of the skillset to retrieve.
     * @param searchRequestOptions Additional parameters for the operation
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<Skillset> getAsync(String skillsetName, SearchRequestOptions searchRequestOptions);

    /**
     * Retrieves a cognitive skillset in an Azure Search service.
     *
     * @param skillsetName         The name of the skillset to retrieve.
     * @param searchRequestOptions Additional parameters for the operation
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<ServiceResponse<Skillset>> getWithServiceResponseAsync(
        String skillsetName,
        SearchRequestOptions searchRequestOptions);

    /**
     * List all cognitive skillsets in an Azure Search service.
     *
     * @return the SkillsetListResult object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException           thrown if the request is rejected by server
     * @throws RuntimeException         all other wrapped checked exceptions if the request fails to be sent
     */
    SkillsetListResult list();

    /**
     * List all cognitive skillsets in an Azure Search service.
     *
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @return the {@link ServiceFuture} object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    ServiceFuture<SkillsetListResult> listAsync(final ServiceCallback<SkillsetListResult> serviceCallback);

    /**
     * List all cognitive skillsets in an Azure Search service.
     *
     * @return the observable to the SkillsetListResult object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<SkillsetListResult> listAsync();

    /**
     * List all cognitive skillsets in an Azure Search service.
     *
     * @return the observable to the SkillsetListResult object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<ServiceResponse<SkillsetListResult>> listWithServiceResponseAsync();

    /**
     * List all cognitive skillsets in an Azure Search service.
     *
     * @param searchRequestOptions Additional parameters for the operation
     * @return the SkillsetListResult object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException           thrown if the request is rejected by server
     * @throws RuntimeException         all other wrapped checked exceptions if the request fails to be sent
     */
    SkillsetListResult list(SearchRequestOptions searchRequestOptions);

    /**
     * List all cognitive skillsets in an Azure Search service.
     *
     * @param searchRequestOptions Additional parameters for the operation
     * @param serviceCallback      the async ServiceCallback to handle successful and failed responses.
     * @return the {@link ServiceFuture} object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    ServiceFuture<SkillsetListResult> listAsync(
        SearchRequestOptions searchRequestOptions,
        final ServiceCallback<SkillsetListResult> serviceCallback);

    /**
     * List all cognitive skillsets in an Azure Search service.
     *
     * @param searchRequestOptions Additional parameters for the operation
     * @return the observable to the SkillsetListResult object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<SkillsetListResult> listAsync(SearchRequestOptions searchRequestOptions);

    /**
     * List all cognitive skillsets in an Azure Search service.
     *
     * @param searchRequestOptions Additional parameters for the operation
     * @return the observable to the SkillsetListResult object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<ServiceResponse<SkillsetListResult>> listWithServiceResponseAsync(
        SearchRequestOptions searchRequestOptions);

    /**
     * Creates a new cognitive skillset in an Azure Search service.
     *
     * @param skillset The skillset containing one or more cognitive skills to create in an Azure Search service.
     * @return the Skillset object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException           thrown if the request is rejected by server
     * @throws RuntimeException         all other wrapped checked exceptions if the request fails to be sent
     */
    Skillset create(Skillset skillset);

    /**
     * Creates a new cognitive skillset in an Azure Search service.
     *
     * @param skillset        The skillset containing one or more cognitive skills to create in an Azure Search service.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @return the {@link ServiceFuture} object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    ServiceFuture<Skillset> createAsync(Skillset skillset, final ServiceCallback<Skillset> serviceCallback);

    /**
     * Creates a new cognitive skillset in an Azure Search service.
     *
     * @param skillset The skillset containing one or more cognitive skills to create in an Azure Search service.
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<Skillset> createAsync(Skillset skillset);

    /**
     * Creates a new cognitive skillset in an Azure Search service.
     *
     * @param skillset The skillset containing one or more cognitive skills to create in an Azure Search service.
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<ServiceResponse<Skillset>> createWithServiceResponseAsync(Skillset skillset);

    /**
     * Creates a new cognitive skillset in an Azure Search service.
     *
     * @param skillset             The skillset containing one or more cognitive skills to create in an Azure Search
     *                             service.
     * @param searchRequestOptions Additional parameters for the operation
     * @return the Skillset object if successful.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException           thrown if the request is rejected by server
     * @throws RuntimeException         all other wrapped checked exceptions if the request fails to be sent
     */
    Skillset create(Skillset skillset, SearchRequestOptions searchRequestOptions);

    /**
     * Creates a new cognitive skillset in an Azure Search service.
     *
     * @param skillset             The skillset containing one or more cognitive skills to create in an Azure Search
     *                             service.
     * @param searchRequestOptions Additional parameters for the operation
     * @param serviceCallback      the async ServiceCallback to handle successful and failed responses.
     * @return the {@link ServiceFuture} object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    ServiceFuture<Skillset> createAsync(
        Skillset skillset, SearchRequestOptions searchRequestOptions,
        final ServiceCallback<Skillset> serviceCallback);

    /**
     * Creates a new cognitive skillset in an Azure Search service.
     *
     * @param skillset             The skillset containing one or more cognitive skills to create in an Azure Search
     *                             service.
     * @param searchRequestOptions Additional parameters for the operation
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<Skillset> createAsync(Skillset skillset, SearchRequestOptions searchRequestOptions);

    /**
     * Creates a new cognitive skillset in an Azure Search service.
     *
     * @param skillset             The skillset containing one or more cognitive skills to create in an Azure Search
     *                             service.
     * @param searchRequestOptions Additional parameters for the operation
     * @return the observable to the Skillset object
     * @throws IllegalArgumentException thrown if parameters fail the validation
     */
    Observable<ServiceResponse<Skillset>> createWithServiceResponseAsync(
        Skillset skillset, SearchRequestOptions searchRequestOptions);

}
