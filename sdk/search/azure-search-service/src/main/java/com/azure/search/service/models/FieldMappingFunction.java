/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.azure.search.service.models;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Map;

/**
 * Represents a function that transforms a value from a data source before
 * indexing.
 */
public class FieldMappingFunction {
    /**
     * The name of the field mapping function.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * A dictionary of parameter name/value pairs to pass to the function. Each
     * value must be of a primitive type.
     */
    @JsonProperty(value = "parameters")
    private Map<String, Object> parameters;

    /**
     * Get the name of the field mapping function.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the field mapping function.
     *
     * @param name the name value to set
     * @return the FieldMappingFunction object itself.
     */
    public FieldMappingFunction withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get a dictionary of parameter name/value pairs to pass to the function. Each value must be of a primitive type.
     *
     * @return the parameters value
     */
    public Map<String, Object> parameters() {
        return this.parameters;
    }

    /**
     * Set a dictionary of parameter name/value pairs to pass to the function. Each value must be of a primitive type.
     *
     * @param parameters the parameters value to set
     * @return the FieldMappingFunction object itself.
     */
    public FieldMappingFunction withParameters(Map<String, Object> parameters) {
        this.parameters = parameters;
        return this;
    }

}
