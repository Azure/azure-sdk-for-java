/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.azure.search.service.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.List;

/**
 * Forms bigrams of CJK terms that are generated from StandardTokenizer. This
 * token filter is implemented using Apache Lucene.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata\\.type")
@JsonTypeName("#Microsoft.Azure.Search.CjkBigramTokenFilter")
public class CjkBigramTokenFilter extends TokenFilter {
    /**
     * The scripts to ignore.
     */
    @JsonProperty(value = "ignoreScripts")
    private List<CjkBigramTokenFilterScripts> ignoreScripts;

    /**
     * A value indicating whether to output both unigrams and bigrams (if
     * true), or just bigrams (if false). Default is false.
     */
    @JsonProperty(value = "outputUnigrams")
    private Boolean outputUnigrams;

    /**
     * Get the scripts to ignore.
     *
     * @return the ignoreScripts value
     */
    public List<CjkBigramTokenFilterScripts> ignoreScripts() {
        return this.ignoreScripts;
    }

    /**
     * Set the scripts to ignore.
     *
     * @param ignoreScripts the ignoreScripts value to set
     * @return the CjkBigramTokenFilter object itself.
     */
    public CjkBigramTokenFilter withIgnoreScripts(List<CjkBigramTokenFilterScripts> ignoreScripts) {
        this.ignoreScripts = ignoreScripts;
        return this;
    }

    /**
     * Get a value indicating whether to output both unigrams and bigrams (if true), or just bigrams (if false).
     * Default is false.
     *
     * @return the outputUnigrams value
     */
    public Boolean outputUnigrams() {
        return this.outputUnigrams;
    }

    /**
     * Set a value indicating whether to output both unigrams and bigrams (if true), or just bigrams (if false).
     * Default is false.
     *
     * @param outputUnigrams the outputUnigrams value to set
     * @return the CjkBigramTokenFilter object itself.
     */
    public CjkBigramTokenFilter withOutputUnigrams(Boolean outputUnigrams) {
        this.outputUnigrams = outputUnigrams;
        return this;
    }

}
