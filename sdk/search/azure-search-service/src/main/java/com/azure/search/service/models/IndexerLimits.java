/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.azure.search.service.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.joda.time.Period;

/**
 * The IndexerLimits model.
 */
public class IndexerLimits {
    /**
     * The maximum duration that the indexer is permitted to run for one
     * execution.
     */
    @JsonProperty(value = "maxRunTime", access = JsonProperty.Access.WRITE_ONLY)
    private Period maxRunTime;

    /**
     * The maximum size of a document, in bytes, which will be considered valid
     * for indexing.
     */
    @JsonProperty(value = "maxDocumentExtractionSize", access = JsonProperty.Access.WRITE_ONLY)
    private Double maxDocumentExtractionSize;

    /**
     * The maximum number of characters that will be extracted from a document
     * picked up for indexing.
     */
    @JsonProperty(value = "maxDocumentContentCharactersToExtract", access = JsonProperty.Access.WRITE_ONLY)
    private Double maxDocumentContentCharactersToExtract;

    /**
     * Get the maximum duration that the indexer is permitted to run for one execution.
     *
     * @return the maxRunTime value
     */
    public Period maxRunTime() {
        return this.maxRunTime;
    }

    /**
     * Get the maximum size of a document, in bytes, which will be considered valid for indexing.
     *
     * @return the maxDocumentExtractionSize value
     */
    public Double maxDocumentExtractionSize() {
        return this.maxDocumentExtractionSize;
    }

    /**
     * Get the maximum number of characters that will be extracted from a document picked up for indexing.
     *
     * @return the maxDocumentContentCharactersToExtract value
     */
    public Double maxDocumentContentCharactersToExtract() {
        return this.maxDocumentContentCharactersToExtract;
    }

}
