// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.azure.search.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Defines values for DataType.
 */
public enum DataType {
    /**
     * Enum value Edm.String.
     */
    EDM_STRING("Edm.String"),

    /**
     * Enum value Edm.Int32.
     */
    EDM_INT32("Edm.Int32"),

    /**
     * Enum value Edm.Int64.
     */
    EDM_INT64("Edm.Int64"),

    /**
     * Enum value Edm.Double.
     */
    EDM_DOUBLE("Edm.Double"),

    /**
     * Enum value Edm.Boolean.
     */
    EDM_BOOLEAN("Edm.Boolean"),

    /**
     * Enum value Edm.DateTimeOffset.
     */
    EDM_DATE_TIME_OFFSET("Edm.DateTimeOffset"),

    /**
     * Enum value Edm.GeographyPoint.
     */
    EDM_GEOGRAPHY_POINT("Edm.GeographyPoint"),

    /**
     * Enum value Edm.ComplexType.
     */
    EDM_COMPLEX_TYPE("Edm.ComplexType"),

    /**
     * Enum value Collection(Edm.String).
     */
    COLLECTION_EDM_STRING("Collection(Edm.String)"),

    /**
     * Enum value Collection(Edm.Int32).
     */
    COLLECTION_EDM_INT32("Collection(Edm.Int32)"),

    /**
     * Enum value Collection(Edm.Int64).
     */
    COLLECTION_EDM_INT64("Collection(Edm.Int64)"),

    /**
     * Enum value Collection(Edm.Double).
     */
    COLLECTION_EDM_DOUBLE("Collection(Edm.Double)"),

    /**
     * Enum value Collection(Edm.Boolean).
     */
    COLLECTION_EDM_BOOLEAN("Collection(Edm.Boolean)"),

    /**
     * Enum value Collection(Edm.DateTimeOffset).
     */
    COLLECTION_EDM_DATE_TIME_OFFSET("Collection(Edm.DateTimeOffset)"),

    /**
     * Enum value Collection(Edm.GeographyPoint).
     */
    COLLECTION_EDM_GEOGRAPHY_POINT("Collection(Edm.GeographyPoint)"),

    /**
     * Enum value Collection(Edm.ComplexType).
     */
    COLLECTION_EDM_COMPLEX_TYPE("Collection(Edm.ComplexType)");

    /**
     * The actual serialized value for a DataType instance.
     */
    private final String value;

    DataType(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a DataType instance.
     *
     * @param value the serialized value to parse.
     * @return the parsed DataType object, or null if unable to parse.
     */
    @JsonCreator
    public static DataType fromString(String value) {
        DataType[] items = DataType.values();
        for (DataType item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    @JsonValue
    @Override
    public String toString() {
        return this.value;
    }
}
