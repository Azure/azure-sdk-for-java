// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.azure.search.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Defines values for AnalyzerName.
 */
public enum AnalyzerName {
    /**
     * Enum value ar.microsoft.
     */
    AR_MICROSOFT("ar.microsoft"),

    /**
     * Enum value ar.lucene.
     */
    AR_LUCENE("ar.lucene"),

    /**
     * Enum value hy.lucene.
     */
    HY_LUCENE("hy.lucene"),

    /**
     * Enum value bn.microsoft.
     */
    BN_MICROSOFT("bn.microsoft"),

    /**
     * Enum value eu.lucene.
     */
    EU_LUCENE("eu.lucene"),

    /**
     * Enum value bg.microsoft.
     */
    BG_MICROSOFT("bg.microsoft"),

    /**
     * Enum value bg.lucene.
     */
    BG_LUCENE("bg.lucene"),

    /**
     * Enum value ca.microsoft.
     */
    CA_MICROSOFT("ca.microsoft"),

    /**
     * Enum value ca.lucene.
     */
    CA_LUCENE("ca.lucene"),

    /**
     * Enum value zh-Hans.microsoft.
     */
    ZH_HANS_MICROSOFT("zh-Hans.microsoft"),

    /**
     * Enum value zh-Hans.lucene.
     */
    ZH_HANS_LUCENE("zh-Hans.lucene"),

    /**
     * Enum value zh-Hant.microsoft.
     */
    ZH_HANT_MICROSOFT("zh-Hant.microsoft"),

    /**
     * Enum value zh-Hant.lucene.
     */
    ZH_HANT_LUCENE("zh-Hant.lucene"),

    /**
     * Enum value hr.microsoft.
     */
    HR_MICROSOFT("hr.microsoft"),

    /**
     * Enum value cs.microsoft.
     */
    CS_MICROSOFT("cs.microsoft"),

    /**
     * Enum value cs.lucene.
     */
    CS_LUCENE("cs.lucene"),

    /**
     * Enum value da.microsoft.
     */
    DA_MICROSOFT("da.microsoft"),

    /**
     * Enum value da.lucene.
     */
    DA_LUCENE("da.lucene"),

    /**
     * Enum value nl.microsoft.
     */
    NL_MICROSOFT("nl.microsoft"),

    /**
     * Enum value nl.lucene.
     */
    NL_LUCENE("nl.lucene"),

    /**
     * Enum value en.microsoft.
     */
    EN_MICROSOFT("en.microsoft"),

    /**
     * Enum value en.lucene.
     */
    EN_LUCENE("en.lucene"),

    /**
     * Enum value et.microsoft.
     */
    ET_MICROSOFT("et.microsoft"),

    /**
     * Enum value fi.microsoft.
     */
    FI_MICROSOFT("fi.microsoft"),

    /**
     * Enum value fi.lucene.
     */
    FI_LUCENE("fi.lucene"),

    /**
     * Enum value fr.microsoft.
     */
    FR_MICROSOFT("fr.microsoft"),

    /**
     * Enum value fr.lucene.
     */
    FR_LUCENE("fr.lucene"),

    /**
     * Enum value gl.lucene.
     */
    GL_LUCENE("gl.lucene"),

    /**
     * Enum value de.microsoft.
     */
    DE_MICROSOFT("de.microsoft"),

    /**
     * Enum value de.lucene.
     */
    DE_LUCENE("de.lucene"),

    /**
     * Enum value el.microsoft.
     */
    EL_MICROSOFT("el.microsoft"),

    /**
     * Enum value el.lucene.
     */
    EL_LUCENE("el.lucene"),

    /**
     * Enum value gu.microsoft.
     */
    GU_MICROSOFT("gu.microsoft"),

    /**
     * Enum value he.microsoft.
     */
    HE_MICROSOFT("he.microsoft"),

    /**
     * Enum value hi.microsoft.
     */
    HI_MICROSOFT("hi.microsoft"),

    /**
     * Enum value hi.lucene.
     */
    HI_LUCENE("hi.lucene"),

    /**
     * Enum value hu.microsoft.
     */
    HU_MICROSOFT("hu.microsoft"),

    /**
     * Enum value hu.lucene.
     */
    HU_LUCENE("hu.lucene"),

    /**
     * Enum value is.microsoft.
     */
    IS_MICROSOFT("is.microsoft"),

    /**
     * Enum value id.microsoft.
     */
    ID_MICROSOFT("id.microsoft"),

    /**
     * Enum value id.lucene.
     */
    ID_LUCENE("id.lucene"),

    /**
     * Enum value ga.lucene.
     */
    GA_LUCENE("ga.lucene"),

    /**
     * Enum value it.microsoft.
     */
    IT_MICROSOFT("it.microsoft"),

    /**
     * Enum value it.lucene.
     */
    IT_LUCENE("it.lucene"),

    /**
     * Enum value ja.microsoft.
     */
    JA_MICROSOFT("ja.microsoft"),

    /**
     * Enum value ja.lucene.
     */
    JA_LUCENE("ja.lucene"),

    /**
     * Enum value kn.microsoft.
     */
    KN_MICROSOFT("kn.microsoft"),

    /**
     * Enum value ko.microsoft.
     */
    KO_MICROSOFT("ko.microsoft"),

    /**
     * Enum value ko.lucene.
     */
    KO_LUCENE("ko.lucene"),

    /**
     * Enum value lv.microsoft.
     */
    LV_MICROSOFT("lv.microsoft"),

    /**
     * Enum value lv.lucene.
     */
    LV_LUCENE("lv.lucene"),

    /**
     * Enum value lt.microsoft.
     */
    LT_MICROSOFT("lt.microsoft"),

    /**
     * Enum value ml.microsoft.
     */
    ML_MICROSOFT("ml.microsoft"),

    /**
     * Enum value ms.microsoft.
     */
    MS_MICROSOFT("ms.microsoft"),

    /**
     * Enum value mr.microsoft.
     */
    MR_MICROSOFT("mr.microsoft"),

    /**
     * Enum value nb.microsoft.
     */
    NB_MICROSOFT("nb.microsoft"),

    /**
     * Enum value no.lucene.
     */
    NO_LUCENE("no.lucene"),

    /**
     * Enum value fa.lucene.
     */
    FA_LUCENE("fa.lucene"),

    /**
     * Enum value pl.microsoft.
     */
    PL_MICROSOFT("pl.microsoft"),

    /**
     * Enum value pl.lucene.
     */
    PL_LUCENE("pl.lucene"),

    /**
     * Enum value pt-BR.microsoft.
     */
    PT_BR_MICROSOFT("pt-BR.microsoft"),

    /**
     * Enum value pt-BR.lucene.
     */
    PT_BR_LUCENE("pt-BR.lucene"),

    /**
     * Enum value pt-PT.microsoft.
     */
    PT_PT_MICROSOFT("pt-PT.microsoft"),

    /**
     * Enum value pt-PT.lucene.
     */
    PT_PT_LUCENE("pt-PT.lucene"),

    /**
     * Enum value pa.microsoft.
     */
    PA_MICROSOFT("pa.microsoft"),

    /**
     * Enum value ro.microsoft.
     */
    RO_MICROSOFT("ro.microsoft"),

    /**
     * Enum value ro.lucene.
     */
    RO_LUCENE("ro.lucene"),

    /**
     * Enum value ru.microsoft.
     */
    RU_MICROSOFT("ru.microsoft"),

    /**
     * Enum value ru.lucene.
     */
    RU_LUCENE("ru.lucene"),

    /**
     * Enum value sr-cyrillic.microsoft.
     */
    SR_CYRILLIC_MICROSOFT("sr-cyrillic.microsoft"),

    /**
     * Enum value sr-latin.microsoft.
     */
    SR_LATIN_MICROSOFT("sr-latin.microsoft"),

    /**
     * Enum value sk.microsoft.
     */
    SK_MICROSOFT("sk.microsoft"),

    /**
     * Enum value sl.microsoft.
     */
    SL_MICROSOFT("sl.microsoft"),

    /**
     * Enum value es.microsoft.
     */
    ES_MICROSOFT("es.microsoft"),

    /**
     * Enum value es.lucene.
     */
    ES_LUCENE("es.lucene"),

    /**
     * Enum value sv.microsoft.
     */
    SV_MICROSOFT("sv.microsoft"),

    /**
     * Enum value sv.lucene.
     */
    SV_LUCENE("sv.lucene"),

    /**
     * Enum value ta.microsoft.
     */
    TA_MICROSOFT("ta.microsoft"),

    /**
     * Enum value te.microsoft.
     */
    TE_MICROSOFT("te.microsoft"),

    /**
     * Enum value th.microsoft.
     */
    TH_MICROSOFT("th.microsoft"),

    /**
     * Enum value th.lucene.
     */
    TH_LUCENE("th.lucene"),

    /**
     * Enum value tr.microsoft.
     */
    TR_MICROSOFT("tr.microsoft"),

    /**
     * Enum value tr.lucene.
     */
    TR_LUCENE("tr.lucene"),

    /**
     * Enum value uk.microsoft.
     */
    UK_MICROSOFT("uk.microsoft"),

    /**
     * Enum value ur.microsoft.
     */
    UR_MICROSOFT("ur.microsoft"),

    /**
     * Enum value vi.microsoft.
     */
    VI_MICROSOFT("vi.microsoft"),

    /**
     * Enum value standard.lucene.
     */
    STANDARD_LUCENE("standard.lucene"),

    /**
     * Enum value standardasciifolding.lucene.
     */
    STANDARDASCIIFOLDING_LUCENE("standardasciifolding.lucene"),

    /**
     * Enum value keyword.
     */
    KEYWORD("keyword"),

    /**
     * Enum value pattern.
     */
    PATTERN("pattern"),

    /**
     * Enum value simple.
     */
    SIMPLE("simple"),

    /**
     * Enum value stop.
     */
    STOP("stop"),

    /**
     * Enum value whitespace.
     */
    WHITESPACE("whitespace");

    /**
     * The actual serialized value for a AnalyzerName instance.
     */
    private final String value;

    AnalyzerName(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a AnalyzerName instance.
     *
     * @param value the serialized value to parse.
     * @return the parsed AnalyzerName object, or null if unable to parse.
     */
    @JsonCreator
    public static AnalyzerName fromString(String value) {
        AnalyzerName[] items = AnalyzerName.values();
        for (AnalyzerName item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    @JsonValue
    @Override
    public String toString() {
        return this.value;
    }
}
