// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysql.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.mysql.implementation.RecoverableServerProperties;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** A recoverable server resource. */
@Fluent
public final class RecoverableServerResourceInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RecoverableServerResourceInner.class);

    /*
     * Resource properties.
     */
    @JsonProperty(value = "properties")
    private RecoverableServerProperties properties;

    /**
     * Get the properties property: Resource properties.
     *
     * @return the properties value.
     */
    private RecoverableServerProperties properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Resource properties.
     *
     * @param properties the properties value to set.
     * @return the RecoverableServerResourceInner object itself.
     */
    private RecoverableServerResourceInner withProperties(RecoverableServerProperties properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the lastAvailableBackupDateTime property: The last available backup date time.
     *
     * @return the lastAvailableBackupDateTime value.
     */
    public String lastAvailableBackupDateTime() {
        if (this.properties() == null) {
            return null;
        } else {
            return this.properties().lastAvailableBackupDateTime();
        }
    }

    /**
     * Get the serviceLevelObjective property: The service level objective.
     *
     * @return the serviceLevelObjective value.
     */
    public String serviceLevelObjective() {
        if (this.properties() == null) {
            return null;
        } else {
            return this.properties().serviceLevelObjective();
        }
    }

    /**
     * Get the edition property: Edition of the performance tier.
     *
     * @return the edition value.
     */
    public String edition() {
        if (this.properties() == null) {
            return null;
        } else {
            return this.properties().edition();
        }
    }

    /**
     * Get the vCore property: vCore associated with the service level objective.
     *
     * @return the vCore value.
     */
    public Integer vCore() {
        if (this.properties() == null) {
            return null;
        } else {
            return this.properties().vCore();
        }
    }

    /**
     * Get the hardwareGeneration property: Hardware generation associated with the service level objective.
     *
     * @return the hardwareGeneration value.
     */
    public String hardwareGeneration() {
        if (this.properties() == null) {
            return null;
        } else {
            return this.properties().hardwareGeneration();
        }
    }

    /**
     * Get the version property: The MySQL version.
     *
     * @return the version value.
     */
    public String version() {
        if (this.properties() == null) {
            return null;
        } else {
            return this.properties().version();
        }
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (properties() != null) {
            properties().validate();
        }
    }
}
