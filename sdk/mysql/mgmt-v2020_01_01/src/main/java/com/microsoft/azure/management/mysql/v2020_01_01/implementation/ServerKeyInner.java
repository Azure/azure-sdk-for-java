/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mysql.v2020_01_01.implementation;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * A MySQL Server key.
 */
@JsonFlatten
public class ServerKeyInner extends ProxyResource {
    /**
     * Kind of encryption protector used to protect the key.
     */
    @JsonProperty(value = "kind", access = JsonProperty.Access.WRITE_ONLY)
    private String kind;

    /**
     * The key type like 'AzureKeyVault'.
     */
    @JsonProperty(value = "properties.serverKeyType", required = true)
    private String serverKeyType;

    /**
     * The URI of the key.
     */
    @JsonProperty(value = "properties.uri")
    private String uri;

    /**
     * The key creation date.
     */
    @JsonProperty(value = "properties.creationDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime creationDate;

    /**
     * Creates an instance of ServerKeyInner class.
     */
    public ServerKeyInner() {
        serverKeyType = "AzureKeyVault";
    }

    /**
     * Get kind of encryption protector used to protect the key.
     *
     * @return the kind value
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Get the key type like 'AzureKeyVault'.
     *
     * @return the serverKeyType value
     */
    public String serverKeyType() {
        return this.serverKeyType;
    }

    /**
     * Set the key type like 'AzureKeyVault'.
     *
     * @param serverKeyType the serverKeyType value to set
     * @return the ServerKeyInner object itself.
     */
    public ServerKeyInner withServerKeyType(String serverKeyType) {
        this.serverKeyType = serverKeyType;
        return this;
    }

    /**
     * Get the URI of the key.
     *
     * @return the uri value
     */
    public String uri() {
        return this.uri;
    }

    /**
     * Set the URI of the key.
     *
     * @param uri the uri value to set
     * @return the ServerKeyInner object itself.
     */
    public ServerKeyInner withUri(String uri) {
        this.uri = uri;
        return this;
    }

    /**
     * Get the key creation date.
     *
     * @return the creationDate value
     */
    public DateTime creationDate() {
        return this.creationDate;
    }

}
