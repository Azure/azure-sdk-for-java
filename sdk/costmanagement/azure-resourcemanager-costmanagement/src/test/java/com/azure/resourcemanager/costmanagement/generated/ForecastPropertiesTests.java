// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.costmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.costmanagement.fluent.models.ForecastProperties;
import com.azure.resourcemanager.costmanagement.models.ForecastColumn;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ForecastPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ForecastProperties model = BinaryData.fromString(
            "{\"nextLink\":\"es\",\"columns\":[{\"name\":\"pagzrcxfailcfxwm\",\"type\":\"oxdfgsftu\"},{\"name\":\"obrjlnacgcc\",\"type\":\"nhxk\"},{\"name\":\"v\",\"type\":\"nrzvuljraaer\"},{\"name\":\"okqgukkjq\",\"type\":\"broyla\"}],\"rows\":[[\"datacdisd\",\"datasfjbjsvg\"],[\"datawhryvycytdcl\",\"datagc\",\"dataknfnwmbtmvpdv\"],[\"datahttz\",\"dataefedxihchrphkm\",\"datarjdqnsdfzp\",\"datagtgkylkdghr\"]]}")
            .toObject(ForecastProperties.class);
        Assertions.assertEquals("es", model.nextLink());
        Assertions.assertEquals("pagzrcxfailcfxwm", model.columns().get(0).name());
        Assertions.assertEquals("oxdfgsftu", model.columns().get(0).type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ForecastProperties model = new ForecastProperties().withNextLink("es")
            .withColumns(Arrays.asList(new ForecastColumn().withName("pagzrcxfailcfxwm").withType("oxdfgsftu"),
                new ForecastColumn().withName("obrjlnacgcc").withType("nhxk"),
                new ForecastColumn().withName("v").withType("nrzvuljraaer"),
                new ForecastColumn().withName("okqgukkjq").withType("broyla")))
            .withRows(Arrays.asList(Arrays.asList("datacdisd", "datasfjbjsvg"),
                Arrays.asList("datawhryvycytdcl", "datagc", "dataknfnwmbtmvpdv"),
                Arrays.asList("datahttz", "dataefedxihchrphkm", "datarjdqnsdfzp", "datagtgkylkdghr")));
        model = BinaryData.fromObject(model).toObject(ForecastProperties.class);
        Assertions.assertEquals("es", model.nextLink());
        Assertions.assertEquals("pagzrcxfailcfxwm", model.columns().get(0).name());
        Assertions.assertEquals("oxdfgsftu", model.columns().get(0).type());
    }
}
