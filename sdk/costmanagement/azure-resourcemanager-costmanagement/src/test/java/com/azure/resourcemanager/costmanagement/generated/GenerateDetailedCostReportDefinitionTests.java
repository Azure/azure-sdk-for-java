// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.costmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.costmanagement.models.GenerateDetailedCostReportDefinition;
import com.azure.resourcemanager.costmanagement.models.GenerateDetailedCostReportMetricType;
import com.azure.resourcemanager.costmanagement.models.GenerateDetailedCostReportTimePeriod;
import org.junit.jupiter.api.Assertions;

public final class GenerateDetailedCostReportDefinitionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GenerateDetailedCostReportDefinition model = BinaryData.fromString(
            "{\"metric\":\"ActualCost\",\"timePeriod\":{\"start\":\"fpyapucygvoavyu\",\"end\":\"ssxlghieegjlg\"},\"billingPeriod\":\"paseksgb\",\"invoiceId\":\"antuygdhgaqipirp\",\"customerId\":\"rqofulopmjnlexwh\"}")
            .toObject(GenerateDetailedCostReportDefinition.class);
        Assertions.assertEquals(GenerateDetailedCostReportMetricType.ACTUAL_COST, model.metric());
        Assertions.assertEquals("fpyapucygvoavyu", model.timePeriod().start());
        Assertions.assertEquals("ssxlghieegjlg", model.timePeriod().end());
        Assertions.assertEquals("paseksgb", model.billingPeriod());
        Assertions.assertEquals("antuygdhgaqipirp", model.invoiceId());
        Assertions.assertEquals("rqofulopmjnlexwh", model.customerId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GenerateDetailedCostReportDefinition model
            = new GenerateDetailedCostReportDefinition().withMetric(GenerateDetailedCostReportMetricType.ACTUAL_COST)
                .withTimePeriod(
                    new GenerateDetailedCostReportTimePeriod().withStart("fpyapucygvoavyu").withEnd("ssxlghieegjlg"))
                .withBillingPeriod("paseksgb")
                .withInvoiceId("antuygdhgaqipirp")
                .withCustomerId("rqofulopmjnlexwh");
        model = BinaryData.fromObject(model).toObject(GenerateDetailedCostReportDefinition.class);
        Assertions.assertEquals(GenerateDetailedCostReportMetricType.ACTUAL_COST, model.metric());
        Assertions.assertEquals("fpyapucygvoavyu", model.timePeriod().start());
        Assertions.assertEquals("ssxlghieegjlg", model.timePeriod().end());
        Assertions.assertEquals("paseksgb", model.billingPeriod());
        Assertions.assertEquals("antuygdhgaqipirp", model.invoiceId());
        Assertions.assertEquals("rqofulopmjnlexwh", model.customerId());
    }
}
