// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.costmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.costmanagement.fluent.models.RequestContext;
import com.azure.resourcemanager.costmanagement.models.CostDetailsMetricType;
import com.azure.resourcemanager.costmanagement.models.CostDetailsTimePeriod;
import com.azure.resourcemanager.costmanagement.models.GenerateCostDetailsReportRequestDefinition;
import org.junit.jupiter.api.Assertions;

public final class RequestContextTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RequestContext model = BinaryData.fromString(
            "{\"requestScope\":\"sunwqrjzfrgqhaoh\",\"requestBody\":{\"metric\":\"AmortizedCost\",\"timePeriod\":{\"start\":\"cnjrohmbpyryxame\",\"end\":\"l\"},\"billingPeriod\":\"yvk\",\"invoiceId\":\"m\"}}")
            .toObject(RequestContext.class);
        Assertions.assertEquals("sunwqrjzfrgqhaoh", model.requestScope());
        Assertions.assertEquals(CostDetailsMetricType.AMORTIZED_COST, model.requestBody().metric());
        Assertions.assertEquals("cnjrohmbpyryxame", model.requestBody().timePeriod().start());
        Assertions.assertEquals("l", model.requestBody().timePeriod().end());
        Assertions.assertEquals("yvk", model.requestBody().billingPeriod());
        Assertions.assertEquals("m", model.requestBody().invoiceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RequestContext model = new RequestContext().withRequestScope("sunwqrjzfrgqhaoh")
            .withRequestBody(
                new GenerateCostDetailsReportRequestDefinition().withMetric(CostDetailsMetricType.AMORTIZED_COST)
                    .withTimePeriod(new CostDetailsTimePeriod().withStart("cnjrohmbpyryxame").withEnd("l"))
                    .withBillingPeriod("yvk")
                    .withInvoiceId("m"));
        model = BinaryData.fromObject(model).toObject(RequestContext.class);
        Assertions.assertEquals("sunwqrjzfrgqhaoh", model.requestScope());
        Assertions.assertEquals(CostDetailsMetricType.AMORTIZED_COST, model.requestBody().metric());
        Assertions.assertEquals("cnjrohmbpyryxame", model.requestBody().timePeriod().start());
        Assertions.assertEquals("l", model.requestBody().timePeriod().end());
        Assertions.assertEquals("yvk", model.requestBody().billingPeriod());
        Assertions.assertEquals("m", model.requestBody().invoiceId());
    }
}
