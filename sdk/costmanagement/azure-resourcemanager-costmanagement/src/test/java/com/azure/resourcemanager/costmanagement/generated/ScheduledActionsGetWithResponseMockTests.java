// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.costmanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.costmanagement.CostManagementManager;
import com.azure.resourcemanager.costmanagement.models.DaysOfWeek;
import com.azure.resourcemanager.costmanagement.models.FileFormat;
import com.azure.resourcemanager.costmanagement.models.ScheduleFrequency;
import com.azure.resourcemanager.costmanagement.models.ScheduledAction;
import com.azure.resourcemanager.costmanagement.models.ScheduledActionKind;
import com.azure.resourcemanager.costmanagement.models.ScheduledActionStatus;
import com.azure.resourcemanager.costmanagement.models.WeeksOfMonth;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScheduledActionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"otnxlkfhglh\",\"fileDestination\":{\"fileFormats\":[\"Csv\"]},\"notification\":{\"to\":[\"ecrsnh\"],\"language\":\"selqxov\",\"message\":\"qibukklvzrl\",\"regionalFormat\":\"l\",\"subject\":\"cme\"},\"notificationEmail\":\"scz\",\"schedule\":{\"frequency\":\"Monthly\",\"hourOfDay\":161928166,\"daysOfWeek\":[\"Thursday\",\"Monday\",\"Tuesday\",\"Monday\"],\"weeksOfMonth\":[\"Second\",\"Second\",\"First\"],\"dayOfMonth\":1306940764,\"startDate\":\"2021-08-04T09:33:08Z\",\"endDate\":\"2021-04-12T23:38Z\"},\"scope\":\"cplhyvdgxlyzkxi\",\"status\":\"Expired\",\"viewId\":\"shezs\"},\"eTag\":\"olrupjovm\",\"kind\":\"Email\",\"id\":\"yebrazwzlpzbtzu\",\"name\":\"kykipfsdyepfnoc\",\"type\":\"bezacfpztga\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CostManagementManager manager = CostManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ScheduledAction response
            = manager.scheduledActions().getWithResponse("pdxxzetwwz", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals(ScheduledActionKind.EMAIL, response.kind());
        Assertions.assertEquals("otnxlkfhglh", response.displayName());
        Assertions.assertEquals(FileFormat.CSV, response.fileDestination().fileFormats().get(0));
        Assertions.assertEquals("ecrsnh", response.notification().to().get(0));
        Assertions.assertEquals("selqxov", response.notification().language());
        Assertions.assertEquals("qibukklvzrl", response.notification().message());
        Assertions.assertEquals("l", response.notification().regionalFormat());
        Assertions.assertEquals("cme", response.notification().subject());
        Assertions.assertEquals("scz", response.notificationEmail());
        Assertions.assertEquals(ScheduleFrequency.MONTHLY, response.schedule().frequency());
        Assertions.assertEquals(161928166, response.schedule().hourOfDay());
        Assertions.assertEquals(DaysOfWeek.THURSDAY, response.schedule().daysOfWeek().get(0));
        Assertions.assertEquals(WeeksOfMonth.SECOND, response.schedule().weeksOfMonth().get(0));
        Assertions.assertEquals(1306940764, response.schedule().dayOfMonth());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-04T09:33:08Z"), response.schedule().startDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-12T23:38Z"), response.schedule().endDate());
        Assertions.assertEquals("cplhyvdgxlyzkxi", response.scope());
        Assertions.assertEquals(ScheduledActionStatus.EXPIRED, response.status());
        Assertions.assertEquals("shezs", response.viewId());
    }
}
