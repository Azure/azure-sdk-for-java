// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.costmanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.costmanagement.CostManagementManager;
import com.azure.resourcemanager.costmanagement.models.GenerateDetailedCostReportDefinition;
import com.azure.resourcemanager.costmanagement.models.GenerateDetailedCostReportMetricType;
import com.azure.resourcemanager.costmanagement.models.GenerateDetailedCostReportOperationResult;
import com.azure.resourcemanager.costmanagement.models.GenerateDetailedCostReportTimePeriod;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GenerateDetailedCostReportsCreateOperationMockTests {
    @Test
    public void testCreateOperation() throws Exception {
        String responseStr
            = "{\"id\":\"aexbkhxjxjo\",\"name\":\"lqxr\",\"type\":\"knkob\",\"properties\":{\"expiryTime\":\"2021-06-21T23:26:37Z\",\"validTill\":\"2021-09-20T16:35:27Z\",\"downloadUrl\":\"omtzamicb\"}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CostManagementManager manager = CostManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GenerateDetailedCostReportOperationResult response = manager.generateDetailedCostReports()
            .createOperation("vskiczd",
                new GenerateDetailedCostReportDefinition().withMetric(GenerateDetailedCostReportMetricType.ACTUAL_COST)
                    .withTimePeriod(
                        new GenerateDetailedCostReportTimePeriod().withStart("izikgqaboohxbm").withEnd("gycqsxrmd"))
                    .withBillingPeriod("wuyqaeo")
                    .withInvoiceId("jh")
                    .withCustomerId("jkbvhhdaurgho"),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("aexbkhxjxjo", response.id());
        Assertions.assertEquals("lqxr", response.name());
        Assertions.assertEquals("knkob", response.type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-20T16:35:27Z"), response.validTill());
        Assertions.assertEquals("omtzamicb", response.downloadUrl());
    }
}
