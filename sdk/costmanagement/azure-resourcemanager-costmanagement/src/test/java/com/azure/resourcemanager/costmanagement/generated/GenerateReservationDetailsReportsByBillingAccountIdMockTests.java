// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.costmanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.costmanagement.CostManagementManager;
import com.azure.resourcemanager.costmanagement.models.OperationStatus;
import com.azure.resourcemanager.costmanagement.models.OperationStatusType;
import com.azure.resourcemanager.costmanagement.models.ReservationReportSchema;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GenerateReservationDetailsReportsByBillingAccountIdMockTests {
    @Test
    public void testByBillingAccountId() throws Exception {
        String responseStr
            = "{\"status\":\"Running\",\"properties\":{\"reportUrl\":\"SkuName\",\"validUntil\":\"2021-09-20T07:13:33Z\"}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CostManagementManager manager = CostManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        OperationStatus response = manager.generateReservationDetailsReports()
            .byBillingAccountId("yhwqw", "mvxqab", "km", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OperationStatusType.RUNNING, response.status());
        Assertions.assertEquals(ReservationReportSchema.SKU_NAME, response.reportUrl());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-20T07:13:33Z"), response.validUntil());
    }
}
