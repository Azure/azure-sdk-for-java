// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.costmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.costmanagement.models.CostDetailsMetricType;
import com.azure.resourcemanager.costmanagement.models.CostDetailsTimePeriod;
import com.azure.resourcemanager.costmanagement.models.GenerateCostDetailsReportRequestDefinition;
import org.junit.jupiter.api.Assertions;

public final class GenerateCostDetailsReportRequestDefinitionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GenerateCostDetailsReportRequestDefinition model = BinaryData.fromString(
            "{\"metric\":\"ActualCost\",\"timePeriod\":{\"start\":\"hwuhvctaf\",\"end\":\"rbxrblmliowxihsp\"},\"billingPeriod\":\"wqagnepzwa\",\"invoiceId\":\"sbs\"}")
            .toObject(GenerateCostDetailsReportRequestDefinition.class);
        Assertions.assertEquals(CostDetailsMetricType.ACTUAL_COST, model.metric());
        Assertions.assertEquals("hwuhvctaf", model.timePeriod().start());
        Assertions.assertEquals("rbxrblmliowxihsp", model.timePeriod().end());
        Assertions.assertEquals("wqagnepzwa", model.billingPeriod());
        Assertions.assertEquals("sbs", model.invoiceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GenerateCostDetailsReportRequestDefinition model
            = new GenerateCostDetailsReportRequestDefinition().withMetric(CostDetailsMetricType.ACTUAL_COST)
                .withTimePeriod(new CostDetailsTimePeriod().withStart("hwuhvctaf").withEnd("rbxrblmliowxihsp"))
                .withBillingPeriod("wqagnepzwa")
                .withInvoiceId("sbs");
        model = BinaryData.fromObject(model).toObject(GenerateCostDetailsReportRequestDefinition.class);
        Assertions.assertEquals(CostDetailsMetricType.ACTUAL_COST, model.metric());
        Assertions.assertEquals("hwuhvctaf", model.timePeriod().start());
        Assertions.assertEquals("rbxrblmliowxihsp", model.timePeriod().end());
        Assertions.assertEquals("wqagnepzwa", model.billingPeriod());
        Assertions.assertEquals("sbs", model.invoiceId());
    }
}
