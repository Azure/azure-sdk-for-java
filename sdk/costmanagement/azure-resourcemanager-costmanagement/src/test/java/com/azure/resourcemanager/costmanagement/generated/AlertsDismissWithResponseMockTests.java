// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.costmanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.costmanagement.CostManagementManager;
import com.azure.resourcemanager.costmanagement.models.Alert;
import com.azure.resourcemanager.costmanagement.models.AlertCategory;
import com.azure.resourcemanager.costmanagement.models.AlertCriteria;
import com.azure.resourcemanager.costmanagement.models.AlertOperator;
import com.azure.resourcemanager.costmanagement.models.AlertPropertiesDefinition;
import com.azure.resourcemanager.costmanagement.models.AlertPropertiesDetails;
import com.azure.resourcemanager.costmanagement.models.AlertSource;
import com.azure.resourcemanager.costmanagement.models.AlertStatus;
import com.azure.resourcemanager.costmanagement.models.AlertTimeGrainType;
import com.azure.resourcemanager.costmanagement.models.AlertType;
import com.azure.resourcemanager.costmanagement.models.DismissAlertPayload;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AlertsDismissWithResponseMockTests {
    @Test
    public void testDismissWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"definition\":{\"type\":\"Quota\",\"category\":\"System\",\"criteria\":\"InvoiceDueDateReached\"},\"description\":\"mpcbbprtugav\",\"source\":\"User\",\"details\":{\"timeGrainType\":\"BillingMonth\",\"periodStartDate\":\"ivmfogdrtbf\",\"triggeredBy\":\"krftsjcwjjxsg\",\"resourceGroupFilter\":[\"datawvif\",\"dataxkecifhocj\",\"datawkloozr\"],\"resourceFilter\":[\"datavcmuf\",\"datanlcpxxviry\",\"datayngjgvrquvpygglp\"],\"meterFilter\":[\"datadcueljtiahxmfq\",\"datayarvsxzqbglcjk\",\"datayspthzod\"],\"tagFilter\":\"datatl\",\"operator\":\"EqualTo\",\"unit\":\"ioskkfmkmfdjxyxg\",\"contactEmails\":[\"vjcteoedlrslsk\",\"zpxvjnzdpvoc\"],\"contactGroups\":[\"pcnab\",\"zf\",\"nggy\"],\"contactRoles\":[\"vzilmhiv\"],\"overridingAlert\":\"wwwncknr\",\"departmentName\":\"ajlskzptj\",\"companyName\":\"lwe\",\"enrollmentNumber\":\"yrth\",\"enrollmentStartDate\":\"lehmcgcjeinueho\",\"enrollmentEndDate\":\"mvfejvqnttmbqd\"},\"costEntityId\":\"fiv\",\"status\":\"Resolved\",\"creationTime\":\"ysthhza\",\"closeTime\":\"fwy\",\"modificationTime\":\"lhgenuzejgvkv\",\"statusModificationUserName\":\"aqszllrzl\",\"statusModificationTime\":\"mdqgmihzpimcqr\"},\"eTag\":\"xtminklogxsvtzar\",\"id\":\"zvqnsqktcmbjwzzo\",\"name\":\"lpky\",\"type\":\"tglwkzpgajsqjc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CostManagementManager manager = CostManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Alert response = manager.alerts()
            .dismissWithResponse("etaoutnpdc", "uhspfefyihduy", new DismissAlertPayload()
                .withDefinition(new AlertPropertiesDefinition().withType(AlertType.BUDGET)
                    .withCategory(AlertCategory.SYSTEM)
                    .withCriteria(AlertCriteria.CROSS_CLOUD_COLLECTION_ERROR))
                .withDescription("bkcgsuthhllnm")
                .withSource(AlertSource.USER)
                .withDetails(new AlertPropertiesDetails().withTimeGrainType(AlertTimeGrainType.MONTHLY)
                    .withPeriodStartDate("x")
                    .withTriggeredBy("ciatxtjrrl")
                    .withResourceGroupFilter(Arrays.asList("dataskjh", "dataxdlajfo", "datacxscvslxlh"))
                    .withResourceFilter(Arrays.asList("datakrmukmyjmkxett", "dataslojfkqidnqt", "dataqxjhqxcsqhtkbtnq"))
                    .withMeterFilter(Arrays.asList("datagldmbiipsnaww", "dataqkzn", "datahhl"))
                    .withTagFilter("dataricctkwmuqqoa")
                    .withOperator(AlertOperator.NONE)
                    .withUnit("lesrwva")
                    .withContactEmails(Arrays.asList("ctrceqnkbr", "pobe", "dmljzacvumepjp", "ibnzp"))
                    .withContactGroups(Arrays.asList("pife", "leqirccjclykcgxv", "pjlvczuoda", "punettepdjxq"))
                    .withContactRoles(Arrays.asList("oy", "uiylpc", "aewse", "vesk"))
                    .withOverridingAlert("egqphrgfnzhctm")
                    .withDepartmentName("sghpbcbcpzarpze")
                    .withCompanyName("cdl")
                    .withEnrollmentNumber("zmpypefcpczshnu")
                    .withEnrollmentStartDate("daizupf")
                    .withEnrollmentEndDate("uytuszxhmtvtv"))
                .withCostEntityId("qiukvzwyd")
                .withStatus(AlertStatus.DISMISSED)
                .withCreationTime("aokgkskjivbsshaj")
                .withCloseTime("u")
                .withModificationTime("eexpgeumi")
                .withStatusModificationUsername("wuit")
                .withStatusModificationTime("exyionofninbd"), com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("xtminklogxsvtzar", response.etag());
        Assertions.assertEquals(AlertType.QUOTA, response.definition().type());
        Assertions.assertEquals(AlertCategory.SYSTEM, response.definition().category());
        Assertions.assertEquals(AlertCriteria.INVOICE_DUE_DATE_REACHED, response.definition().criteria());
        Assertions.assertEquals("mpcbbprtugav", response.description());
        Assertions.assertEquals(AlertSource.USER, response.source());
        Assertions.assertEquals(AlertTimeGrainType.BILLING_MONTH, response.details().timeGrainType());
        Assertions.assertEquals("ivmfogdrtbf", response.details().periodStartDate());
        Assertions.assertEquals("krftsjcwjjxsg", response.details().triggeredBy());
        Assertions.assertEquals(AlertOperator.EQUAL_TO, response.details().operator());
        Assertions.assertEquals("ioskkfmkmfdjxyxg", response.details().unit());
        Assertions.assertEquals("vjcteoedlrslsk", response.details().contactEmails().get(0));
        Assertions.assertEquals("pcnab", response.details().contactGroups().get(0));
        Assertions.assertEquals("vzilmhiv", response.details().contactRoles().get(0));
        Assertions.assertEquals("wwwncknr", response.details().overridingAlert());
        Assertions.assertEquals("ajlskzptj", response.details().departmentName());
        Assertions.assertEquals("lwe", response.details().companyName());
        Assertions.assertEquals("yrth", response.details().enrollmentNumber());
        Assertions.assertEquals("lehmcgcjeinueho", response.details().enrollmentStartDate());
        Assertions.assertEquals("mvfejvqnttmbqd", response.details().enrollmentEndDate());
        Assertions.assertEquals("fiv", response.costEntityId());
        Assertions.assertEquals(AlertStatus.RESOLVED, response.status());
        Assertions.assertEquals("ysthhza", response.creationTime());
        Assertions.assertEquals("fwy", response.closeTime());
        Assertions.assertEquals("lhgenuzejgvkv", response.modificationTime());
        Assertions.assertEquals("aqszllrzl", response.statusModificationUsername());
        Assertions.assertEquals("mdqgmihzpimcqr", response.statusModificationTime());
    }
}
