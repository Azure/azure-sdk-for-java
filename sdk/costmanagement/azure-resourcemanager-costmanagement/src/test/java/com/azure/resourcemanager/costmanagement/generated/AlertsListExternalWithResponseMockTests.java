// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.costmanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.costmanagement.CostManagementManager;
import com.azure.resourcemanager.costmanagement.models.AlertsResult;
import com.azure.resourcemanager.costmanagement.models.ExternalCloudProviderType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AlertsListExternalWithResponseMockTests {
    @Test
    public void testListExternalWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"definition\":{\"type\":\"Quota\",\"category\":\"Billing\",\"criteria\":\"InvoiceDueDateReached\"},\"description\":\"wxs\",\"source\":\"Preset\",\"details\":{\"timeGrainType\":\"BillingAnnual\",\"periodStartDate\":\"xekr\",\"triggeredBy\":\"k\",\"resourceGroupFilter\":[\"dataud\",\"datatwaokb\"],\"resourceFilter\":[\"dataytt\",\"dataaknwfrkebsmh\",\"datadujdigatoleksc\"],\"meterFilter\":[\"datananqimwbzxpdcldp\",\"dataawnsnlaimou\",\"dataw\"],\"tagFilter\":\"dataqmudmfcoibic\",\"operator\":\"None\",\"unit\":\"wjrkb\",\"contactEmails\":[\"btqqvyfs\",\"yrfwbivq\",\"ogfuyzwvbhlim\",\"yqe\"],\"contactGroups\":[\"odlikcdrdaasax\"],\"contactRoles\":[\"sm\",\"kwiy\",\"v\"],\"overridingAlert\":\"ko\",\"departmentName\":\"nawnvz\",\"companyName\":\"n\",\"enrollmentNumber\":\"ywsxvjabjqqaxu\",\"enrollmentStartDate\":\"y\",\"enrollmentEndDate\":\"nudn\"},\"costEntityId\":\"bhjxwxqweuipmpv\",\"status\":\"None\",\"creationTime\":\"tnsqxtlt\",\"closeTime\":\"krdpqgfhyrfr\",\"modificationTime\":\"kldgrcwfcmfc\",\"statusModificationUserName\":\"jajqmatxjt\",\"statusModificationTime\":\"ln\"},\"eTag\":\"gxxgfb\",\"id\":\"mtlpqagyno\",\"name\":\"prnzc\",\"type\":\"lin\"},{\"properties\":{\"definition\":{\"type\":\"xCloud\",\"category\":\"Cost\",\"criteria\":\"CreditThresholdApproaching\"},\"description\":\"ibmq\",\"source\":\"Preset\",\"details\":{\"timeGrainType\":\"Annually\",\"periodStartDate\":\"uqguhfupetasvvoq\",\"triggeredBy\":\"pkflanfkgxsyao\",\"resourceGroupFilter\":[\"dataowpuohdkcpr\",\"dataukxrzti\",\"datachlutixmqru\",\"datajizcbfzmcrunfhiu\"],\"resourceFilter\":[\"datafbcpaqktkrumzu\",\"datadkyzbfvxov\",\"datakxiuxqggvqr\",\"datahyhlwcjsqg\"],\"meterFilter\":[\"dataffbxrqrkij\",\"dataeuqlsdxeqztv\"],\"tagFilter\":\"datamwwmjswenaww\",\"operator\":\"LessThan\",\"unit\":\"qioulndhzyoeojht\",\"contactEmails\":[\"svidmytzlnglx\"],\"contactGroups\":[\"vyoanfbcswqagywv\",\"xigvjrktpgaeuk\"],\"contactRoles\":[\"ohpmwhqn\",\"csklhsidsjt\",\"lpbnin\"],\"overridingAlert\":\"azlsvbzfcpuo\",\"departmentName\":\"dwjcciklhs\",\"companyName\":\"krdre\",\"enrollmentNumber\":\"olr\",\"enrollmentStartDate\":\"ehqbeivdlhydwbdb\",\"enrollmentEndDate\":\"rlpunytjlkesmmpa\"},\"costEntityId\":\"btahdeanii\",\"status\":\"None\",\"creationTime\":\"vgw\",\"closeTime\":\"fftedousnktj\",\"modificationTime\":\"ravaq\",\"statusModificationUserName\":\"fkbebauzl\",\"statusModificationTime\":\"txxwpfh\"},\"eTag\":\"zudrtpzk\",\"id\":\"meboywhczzq\",\"name\":\"hmngqb\",\"type\":\"dygisrzwnykd\"}],\"nextLink\":\"jch\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CostManagementManager manager = CostManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AlertsResult response = manager.alerts()
            .listExternalWithResponse(ExternalCloudProviderType.EXTERNAL_BILLING_ACCOUNTS, "qbmfuvqarwz",
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
