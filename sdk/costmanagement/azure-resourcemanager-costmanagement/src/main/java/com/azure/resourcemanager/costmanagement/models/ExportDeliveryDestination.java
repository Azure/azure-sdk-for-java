// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.costmanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The destination information for the delivery of the export. To allow access to a storage account, you must register
 * the account's subscription with the Microsoft.CostManagementExports resource provider. This is required once per
 * subscription. When creating an export in the Azure portal, it is done automatically, however API users need to
 * register the subscription. For more information see
 * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-supported-services .
 */
@Fluent
public final class ExportDeliveryDestination {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ExportDeliveryDestination.class);

    /*
     * The resource id of the storage account where exports will be delivered.
     */
    @JsonProperty(value = "resourceId", required = true)
    private String resourceId;

    /*
     * The name of the container where exports will be uploaded.
     */
    @JsonProperty(value = "container", required = true)
    private String container;

    /*
     * The name of the directory where exports will be uploaded.
     */
    @JsonProperty(value = "rootFolderPath")
    private String rootFolderPath;

    /**
     * Get the resourceId property: The resource id of the storage account where exports will be delivered.
     *
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: The resource id of the storage account where exports will be delivered.
     *
     * @param resourceId the resourceId value to set.
     * @return the ExportDeliveryDestination object itself.
     */
    public ExportDeliveryDestination withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the container property: The name of the container where exports will be uploaded.
     *
     * @return the container value.
     */
    public String container() {
        return this.container;
    }

    /**
     * Set the container property: The name of the container where exports will be uploaded.
     *
     * @param container the container value to set.
     * @return the ExportDeliveryDestination object itself.
     */
    public ExportDeliveryDestination withContainer(String container) {
        this.container = container;
        return this;
    }

    /**
     * Get the rootFolderPath property: The name of the directory where exports will be uploaded.
     *
     * @return the rootFolderPath value.
     */
    public String rootFolderPath() {
        return this.rootFolderPath;
    }

    /**
     * Set the rootFolderPath property: The name of the directory where exports will be uploaded.
     *
     * @param rootFolderPath the rootFolderPath value to set.
     * @return the ExportDeliveryDestination object itself.
     */
    public ExportDeliveryDestination withRootFolderPath(String rootFolderPath) {
        this.rootFolderPath = rootFolderPath;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceId() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property resourceId in model ExportDeliveryDestination"));
        }
        if (container() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property container in model ExportDeliveryDestination"));
        }
    }
}
