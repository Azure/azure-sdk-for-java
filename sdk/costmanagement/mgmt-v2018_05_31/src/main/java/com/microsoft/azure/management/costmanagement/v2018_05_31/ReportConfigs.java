/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.costmanagement.v2018_05_31;

import com.microsoft.azure.arm.collection.SupportsCreating;
import com.microsoft.azure.arm.resources.collection.SupportsDeletingByResourceGroup;
import com.microsoft.azure.arm.resources.collection.SupportsBatchDeletion;
import com.microsoft.azure.arm.resources.collection.SupportsGettingByResourceGroup;
import rx.Observable;
import com.microsoft.azure.arm.resources.collection.SupportsListingByResourceGroup;
import com.microsoft.azure.arm.collection.SupportsListing;
import rx.Completable;
import com.microsoft.azure.management.costmanagement.v2018_05_31.implementation.ReportConfigInner;
import com.microsoft.azure.management.costmanagement.v2018_05_31.implementation.ReportConfigsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing ReportConfigs.
 */
public interface ReportConfigs extends SupportsCreating<ReportConfig.DefinitionStages.Blank>, SupportsDeletingByResourceGroup, SupportsBatchDeletion, SupportsGettingByResourceGroup<ReportConfig>, SupportsListingByResourceGroup<ReportConfig>, SupportsListing<ReportConfig>, HasInner<ReportConfigsInner> {
    /**
     * Gets the report config for a subscription by report config name.
     *
     * @param reportConfigName Report Config Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ReportConfig> getAsync(String reportConfigName);

    /**
     * The operation to create or update a report config. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     *
     * @param reportConfigName Report Config Name.
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ReportConfig> createOrUpdateAsync(String reportConfigName, ReportConfigInner parameters);

    /**
     * The operation to delete a report.
     *
     * @param reportConfigName Report Config Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String reportConfigName);

}
