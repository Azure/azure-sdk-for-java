/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.costmanagement.v2019_11_01;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The schedule associated with a export.
 */
public class ExportSchedule {
    /**
     * The status of the schedule. Whether active or not. If inactive, the
     * export's scheduled execution is paused. Possible values include:
     * 'Active', 'Inactive'.
     */
    @JsonProperty(value = "status")
    private StatusType status;

    /**
     * The schedule recurrence. Possible values include: 'Daily', 'Weekly',
     * 'Monthly', 'Annually'.
     */
    @JsonProperty(value = "recurrence", required = true)
    private RecurrenceType recurrence;

    /**
     * Has start and end date of the recurrence. The start date must be in
     * future. If present, the end date must be greater than start date.
     */
    @JsonProperty(value = "recurrencePeriod")
    private ExportRecurrencePeriod recurrencePeriod;

    /**
     * Get the status of the schedule. Whether active or not. If inactive, the export's scheduled execution is paused. Possible values include: 'Active', 'Inactive'.
     *
     * @return the status value
     */
    public StatusType status() {
        return this.status;
    }

    /**
     * Set the status of the schedule. Whether active or not. If inactive, the export's scheduled execution is paused. Possible values include: 'Active', 'Inactive'.
     *
     * @param status the status value to set
     * @return the ExportSchedule object itself.
     */
    public ExportSchedule withStatus(StatusType status) {
        this.status = status;
        return this;
    }

    /**
     * Get the schedule recurrence. Possible values include: 'Daily', 'Weekly', 'Monthly', 'Annually'.
     *
     * @return the recurrence value
     */
    public RecurrenceType recurrence() {
        return this.recurrence;
    }

    /**
     * Set the schedule recurrence. Possible values include: 'Daily', 'Weekly', 'Monthly', 'Annually'.
     *
     * @param recurrence the recurrence value to set
     * @return the ExportSchedule object itself.
     */
    public ExportSchedule withRecurrence(RecurrenceType recurrence) {
        this.recurrence = recurrence;
        return this;
    }

    /**
     * Get has start and end date of the recurrence. The start date must be in future. If present, the end date must be greater than start date.
     *
     * @return the recurrencePeriod value
     */
    public ExportRecurrencePeriod recurrencePeriod() {
        return this.recurrencePeriod;
    }

    /**
     * Set has start and end date of the recurrence. The start date must be in future. If present, the end date must be greater than start date.
     *
     * @param recurrencePeriod the recurrencePeriod value to set
     * @return the ExportSchedule object itself.
     */
    public ExportSchedule withRecurrencePeriod(ExportRecurrencePeriod recurrencePeriod) {
        this.recurrencePeriod = recurrencePeriod;
        return this;
    }

}
