/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.costmanagement.v2019_11_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.costmanagement.v2019_11_01.implementation.ExportInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.costmanagement.v2019_11_01.implementation.CostManagementManager;
import java.util.Map;

/**
 * Type representing Export.
 */
public interface Export extends HasInner<ExportInner>, Indexable, Updatable<Export.Update>, Refreshable<Export>, HasManager<CostManagementManager> {
    /**
     * @return the definition value.
     */
    QueryDefinition definition();

    /**
     * @return the deliveryInfo value.
     */
    ExportDeliveryInfo deliveryInfo();

    /**
     * @return the format value.
     */
    FormatType format();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the schedule value.
     */
    ExportSchedule schedule();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the Export definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithScope, DefinitionStages.WithDefinition, DefinitionStages.WithDeliveryInfo, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Export definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Export definition.
         */
        interface Blank extends WithScope {
        }

        /**
         * The stage of the export definition allowing to specify Scope.
         */
        interface WithScope {
           /**
            * Specifies scope.
            * @param scope The scope associated with query and export operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners
            * @return the next definition stage
            */
            WithDefinition withScope(String scope);
        }

        /**
         * The stage of the export definition allowing to specify Definition.
         */
        interface WithDefinition {
           /**
            * Specifies definition.
            * @param definition Has definition for the export
            * @return the next definition stage
            */
            WithDeliveryInfo withDefinition(QueryDefinition definition);
        }

        /**
         * The stage of the export definition allowing to specify DeliveryInfo.
         */
        interface WithDeliveryInfo {
           /**
            * Specifies deliveryInfo.
            * @param deliveryInfo Has delivery information for the export
            * @return the next definition stage
            */
            WithCreate withDeliveryInfo(ExportDeliveryInfo deliveryInfo);
        }

        /**
         * The stage of the export definition allowing to specify Format.
         */
        interface WithFormat {
            /**
             * Specifies format.
             * @param format The format of the export being delivered. Possible values include: 'Csv'
             * @return the next definition stage
             */
            WithCreate withFormat(FormatType format);
        }

        /**
         * The stage of the export definition allowing to specify Schedule.
         */
        interface WithSchedule {
            /**
             * Specifies schedule.
             * @param schedule Has schedule information for the export
             * @return the next definition stage
             */
            WithCreate withSchedule(ExportSchedule schedule);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Export>, DefinitionStages.WithFormat, DefinitionStages.WithSchedule {
        }
    }
    /**
     * The template for a Export update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Export>, UpdateStages.WithFormat, UpdateStages.WithSchedule {
    }

    /**
     * Grouping of Export update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the export update allowing to specify Format.
         */
        interface WithFormat {
            /**
             * Specifies format.
             * @param format The format of the export being delivered. Possible values include: 'Csv'
             * @return the next update stage
             */
            Update withFormat(FormatType format);
        }

        /**
         * The stage of the export update allowing to specify Schedule.
         */
        interface WithSchedule {
            /**
             * Specifies schedule.
             * @param schedule Has schedule information for the export
             * @return the next update stage
             */
            Update withSchedule(ExportSchedule schedule);
        }

    }
}
