// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkfunction.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.networkfunction.fluent.models.AzureTrafficCollectorInner;
import com.azure.resourcemanager.networkfunction.models.TagsObject;

/** An instance of this class provides access to all the operations defined in AzureTrafficCollectorsClient. */
public interface AzureTrafficCollectorsClient {
    /**
     * Gets the specified Azure Traffic Collector in a specified resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Azure Traffic Collector in a specified resource group along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AzureTrafficCollectorInner> getByResourceGroupWithResponse(
        String resourceGroupName, String azureTrafficCollectorName, Context context);

    /**
     * Gets the specified Azure Traffic Collector in a specified resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Azure Traffic Collector in a specified resource group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureTrafficCollectorInner getByResourceGroup(String resourceGroupName, String azureTrafficCollectorName);

    /**
     * Creates or updates a Azure Traffic Collector resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @param parameters The parameters to provide for the created Azure Traffic Collector.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure Traffic Collector resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AzureTrafficCollectorInner>, AzureTrafficCollectorInner> beginCreateOrUpdate(
        String resourceGroupName, String azureTrafficCollectorName, AzureTrafficCollectorInner parameters);

    /**
     * Creates or updates a Azure Traffic Collector resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @param parameters The parameters to provide for the created Azure Traffic Collector.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure Traffic Collector resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AzureTrafficCollectorInner>, AzureTrafficCollectorInner> beginCreateOrUpdate(
        String resourceGroupName,
        String azureTrafficCollectorName,
        AzureTrafficCollectorInner parameters,
        Context context);

    /**
     * Creates or updates a Azure Traffic Collector resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @param parameters The parameters to provide for the created Azure Traffic Collector.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Traffic Collector resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureTrafficCollectorInner createOrUpdate(
        String resourceGroupName, String azureTrafficCollectorName, AzureTrafficCollectorInner parameters);

    /**
     * Creates or updates a Azure Traffic Collector resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @param parameters The parameters to provide for the created Azure Traffic Collector.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Traffic Collector resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureTrafficCollectorInner createOrUpdate(
        String resourceGroupName,
        String azureTrafficCollectorName,
        AzureTrafficCollectorInner parameters,
        Context context);

    /**
     * Deletes a specified Azure Traffic Collector resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String azureTrafficCollectorName);

    /**
     * Deletes a specified Azure Traffic Collector resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String azureTrafficCollectorName, Context context);

    /**
     * Deletes a specified Azure Traffic Collector resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String azureTrafficCollectorName);

    /**
     * Deletes a specified Azure Traffic Collector resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String azureTrafficCollectorName, Context context);

    /**
     * Updates the specified Azure Traffic Collector tags.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @param parameters Parameters supplied to update Azure Traffic Collector tags.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Traffic Collector resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AzureTrafficCollectorInner> updateTagsWithResponse(
        String resourceGroupName, String azureTrafficCollectorName, TagsObject parameters, Context context);

    /**
     * Updates the specified Azure Traffic Collector tags.
     *
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name.
     * @param parameters Parameters supplied to update Azure Traffic Collector tags.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Traffic Collector resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureTrafficCollectorInner updateTags(
        String resourceGroupName, String azureTrafficCollectorName, TagsObject parameters);
}
