// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkfunction.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkfunction.fluent.AzureTrafficCollectorsByResourceGroupsClient;
import com.azure.resourcemanager.networkfunction.fluent.models.AzureTrafficCollectorInner;
import com.azure.resourcemanager.networkfunction.models.AzureTrafficCollector;
import com.azure.resourcemanager.networkfunction.models.AzureTrafficCollectorsByResourceGroups;

public final class AzureTrafficCollectorsByResourceGroupsImpl implements AzureTrafficCollectorsByResourceGroups {
    private static final ClientLogger LOGGER = new ClientLogger(AzureTrafficCollectorsByResourceGroupsImpl.class);

    private final AzureTrafficCollectorsByResourceGroupsClient innerClient;

    private final com.azure.resourcemanager.networkfunction.AzureTrafficCollectorManager serviceManager;

    public AzureTrafficCollectorsByResourceGroupsImpl(
        AzureTrafficCollectorsByResourceGroupsClient innerClient,
        com.azure.resourcemanager.networkfunction.AzureTrafficCollectorManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<AzureTrafficCollector> listByResourceGroup(String resourceGroupName) {
        PagedIterable<AzureTrafficCollectorInner> inner = this.serviceClient().listByResourceGroup(resourceGroupName);
        return Utils.mapPage(inner, inner1 -> new AzureTrafficCollectorImpl(inner1, this.manager()));
    }

    public PagedIterable<AzureTrafficCollector> listByResourceGroup(String resourceGroupName, Context context) {
        PagedIterable<AzureTrafficCollectorInner> inner =
            this.serviceClient().listByResourceGroup(resourceGroupName, context);
        return Utils.mapPage(inner, inner1 -> new AzureTrafficCollectorImpl(inner1, this.manager()));
    }

    private AzureTrafficCollectorsByResourceGroupsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.networkfunction.AzureTrafficCollectorManager manager() {
        return this.serviceManager;
    }
}
