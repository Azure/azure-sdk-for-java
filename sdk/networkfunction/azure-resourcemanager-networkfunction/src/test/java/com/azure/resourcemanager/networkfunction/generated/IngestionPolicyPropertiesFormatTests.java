// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkfunction.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkfunction.models.IngestionPolicyPropertiesFormat;
import com.azure.resourcemanager.networkfunction.models.IngestionSourcesPropertiesFormat;
import com.azure.resourcemanager.networkfunction.models.IngestionType;
import com.azure.resourcemanager.networkfunction.models.SourceType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IngestionPolicyPropertiesFormatTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IngestionPolicyPropertiesFormat model = BinaryData.fromString(
            "{\"ingestionType\":\"IPFIX\",\"ingestionSources\":[{\"sourceType\":\"Resource\",\"resourceId\":\"jjxhvpmo\"},{\"sourceType\":\"Resource\",\"resourceId\":\"dzxibqeojnxqbzvd\"}]}")
            .toObject(IngestionPolicyPropertiesFormat.class);
        Assertions.assertEquals(IngestionType.IPFIX, model.ingestionType());
        Assertions.assertEquals(SourceType.RESOURCE, model.ingestionSources().get(0).sourceType());
        Assertions.assertEquals("jjxhvpmo", model.ingestionSources().get(0).resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IngestionPolicyPropertiesFormat model = new IngestionPolicyPropertiesFormat()
            .withIngestionType(IngestionType.IPFIX)
            .withIngestionSources(Arrays.asList(
                new IngestionSourcesPropertiesFormat().withSourceType(SourceType.RESOURCE).withResourceId("jjxhvpmo"),
                new IngestionSourcesPropertiesFormat().withSourceType(SourceType.RESOURCE)
                    .withResourceId("dzxibqeojnxqbzvd")));
        model = BinaryData.fromObject(model).toObject(IngestionPolicyPropertiesFormat.class);
        Assertions.assertEquals(IngestionType.IPFIX, model.ingestionType());
        Assertions.assertEquals(SourceType.RESOURCE, model.ingestionSources().get(0).sourceType());
        Assertions.assertEquals("jjxhvpmo", model.ingestionSources().get(0).resourceId());
    }
}
