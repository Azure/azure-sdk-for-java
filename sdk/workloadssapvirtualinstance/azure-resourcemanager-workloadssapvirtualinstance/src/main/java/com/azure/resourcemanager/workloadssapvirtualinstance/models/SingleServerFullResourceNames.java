// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The resource name object where the specified values will be full resource names of the corresponding resources in a
 * single server SAP system.
 */
@Fluent
public final class SingleServerFullResourceNames extends SingleServerCustomResourceNames {
    /*
     * The naming pattern type.
     */
    private NamingPatternType namingPatternType = NamingPatternType.FULL_RESOURCE_NAME;

    /*
     * The resource names object for virtual machine and related resources.
     */
    private VirtualMachineResourceNames virtualMachine;

    /**
     * Creates an instance of SingleServerFullResourceNames class.
     */
    public SingleServerFullResourceNames() {
    }

    /**
     * Get the namingPatternType property: The naming pattern type.
     * 
     * @return the namingPatternType value.
     */
    @Override
    public NamingPatternType namingPatternType() {
        return this.namingPatternType;
    }

    /**
     * Get the virtualMachine property: The resource names object for virtual machine and related resources.
     * 
     * @return the virtualMachine value.
     */
    public VirtualMachineResourceNames virtualMachine() {
        return this.virtualMachine;
    }

    /**
     * Set the virtualMachine property: The resource names object for virtual machine and related resources.
     * 
     * @param virtualMachine the virtualMachine value to set.
     * @return the SingleServerFullResourceNames object itself.
     */
    public SingleServerFullResourceNames withVirtualMachine(VirtualMachineResourceNames virtualMachine) {
        this.virtualMachine = virtualMachine;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (virtualMachine() != null) {
            virtualMachine().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("namingPatternType",
            this.namingPatternType == null ? null : this.namingPatternType.toString());
        jsonWriter.writeJsonField("virtualMachine", this.virtualMachine);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SingleServerFullResourceNames from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SingleServerFullResourceNames if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SingleServerFullResourceNames.
     */
    public static SingleServerFullResourceNames fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SingleServerFullResourceNames deserializedSingleServerFullResourceNames
                = new SingleServerFullResourceNames();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("namingPatternType".equals(fieldName)) {
                    deserializedSingleServerFullResourceNames.namingPatternType
                        = NamingPatternType.fromString(reader.getString());
                } else if ("virtualMachine".equals(fieldName)) {
                    deserializedSingleServerFullResourceNames.virtualMachine
                        = VirtualMachineResourceNames.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSingleServerFullResourceNames;
        });
    }
}
