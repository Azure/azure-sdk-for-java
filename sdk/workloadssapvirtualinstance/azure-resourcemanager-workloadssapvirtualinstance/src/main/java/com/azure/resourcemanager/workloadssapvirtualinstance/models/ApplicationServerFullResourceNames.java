// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The full resource names object for application layer resources. The number of entries in this list should be equal to
 * the number VMs to be created for application layer.
 */
@Fluent
public final class ApplicationServerFullResourceNames implements JsonSerializable<ApplicationServerFullResourceNames> {
    /*
     * The list of virtual machine naming details.
     */
    private List<VirtualMachineResourceNames> virtualMachines;

    /*
     * The full name for availability set. In case name is not provided, it will be defaulted to {SID}-App-AvSet.
     */
    private String availabilitySetName;

    /**
     * Creates an instance of ApplicationServerFullResourceNames class.
     */
    public ApplicationServerFullResourceNames() {
    }

    /**
     * Get the virtualMachines property: The list of virtual machine naming details.
     * 
     * @return the virtualMachines value.
     */
    public List<VirtualMachineResourceNames> virtualMachines() {
        return this.virtualMachines;
    }

    /**
     * Set the virtualMachines property: The list of virtual machine naming details.
     * 
     * @param virtualMachines the virtualMachines value to set.
     * @return the ApplicationServerFullResourceNames object itself.
     */
    public ApplicationServerFullResourceNames withVirtualMachines(List<VirtualMachineResourceNames> virtualMachines) {
        this.virtualMachines = virtualMachines;
        return this;
    }

    /**
     * Get the availabilitySetName property: The full name for availability set. In case name is not provided, it will
     * be defaulted to {SID}-App-AvSet.
     * 
     * @return the availabilitySetName value.
     */
    public String availabilitySetName() {
        return this.availabilitySetName;
    }

    /**
     * Set the availabilitySetName property: The full name for availability set. In case name is not provided, it will
     * be defaulted to {SID}-App-AvSet.
     * 
     * @param availabilitySetName the availabilitySetName value to set.
     * @return the ApplicationServerFullResourceNames object itself.
     */
    public ApplicationServerFullResourceNames withAvailabilitySetName(String availabilitySetName) {
        this.availabilitySetName = availabilitySetName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (virtualMachines() != null) {
            virtualMachines().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("virtualMachines", this.virtualMachines,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("availabilitySetName", this.availabilitySetName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApplicationServerFullResourceNames from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApplicationServerFullResourceNames if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApplicationServerFullResourceNames.
     */
    public static ApplicationServerFullResourceNames fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApplicationServerFullResourceNames deserializedApplicationServerFullResourceNames
                = new ApplicationServerFullResourceNames();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("virtualMachines".equals(fieldName)) {
                    List<VirtualMachineResourceNames> virtualMachines
                        = reader.readArray(reader1 -> VirtualMachineResourceNames.fromJson(reader1));
                    deserializedApplicationServerFullResourceNames.virtualMachines = virtualMachines;
                } else if ("availabilitySetName".equals(fieldName)) {
                    deserializedApplicationServerFullResourceNames.availabilitySetName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApplicationServerFullResourceNames;
        });
    }
}
