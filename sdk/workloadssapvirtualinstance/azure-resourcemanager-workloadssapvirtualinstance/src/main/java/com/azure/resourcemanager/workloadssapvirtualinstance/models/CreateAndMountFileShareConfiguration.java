// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Gets or sets the file share configuration where the transport directory fileshare is created and mounted as a part of
 * the create infra flow. Please pre-create the resource group you intend to place the transport directory in. The
 * storage account and fileshare will be auto-created by the ACSS and doesn't need to be pre-created.
 */
@Fluent
public final class CreateAndMountFileShareConfiguration extends FileShareConfiguration {
    /*
     * The type of file share config, eg: Mount/CreateAndMount/Skip.
     */
    private FileShareConfigurationType configurationType = FileShareConfigurationType.CREATE_AND_MOUNT;

    /*
     * The name of transport file share resource group. This should be pre created by the customer. The app rg is used
     * in case of missing input.
     */
    private String resourceGroup;

    /*
     * The name of file share storage account name . A custom name is used in case of missing input.
     */
    private String storageAccountName;

    /**
     * Creates an instance of CreateAndMountFileShareConfiguration class.
     */
    public CreateAndMountFileShareConfiguration() {
    }

    /**
     * Get the configurationType property: The type of file share config, eg: Mount/CreateAndMount/Skip.
     * 
     * @return the configurationType value.
     */
    @Override
    public FileShareConfigurationType configurationType() {
        return this.configurationType;
    }

    /**
     * Get the resourceGroup property: The name of transport file share resource group. This should be pre created by
     * the customer. The app rg is used in case of missing input.
     * 
     * @return the resourceGroup value.
     */
    public String resourceGroup() {
        return this.resourceGroup;
    }

    /**
     * Set the resourceGroup property: The name of transport file share resource group. This should be pre created by
     * the customer. The app rg is used in case of missing input.
     * 
     * @param resourceGroup the resourceGroup value to set.
     * @return the CreateAndMountFileShareConfiguration object itself.
     */
    public CreateAndMountFileShareConfiguration withResourceGroup(String resourceGroup) {
        this.resourceGroup = resourceGroup;
        return this;
    }

    /**
     * Get the storageAccountName property: The name of file share storage account name . A custom name is used in case
     * of missing input.
     * 
     * @return the storageAccountName value.
     */
    public String storageAccountName() {
        return this.storageAccountName;
    }

    /**
     * Set the storageAccountName property: The name of file share storage account name . A custom name is used in case
     * of missing input.
     * 
     * @param storageAccountName the storageAccountName value to set.
     * @return the CreateAndMountFileShareConfiguration object itself.
     */
    public CreateAndMountFileShareConfiguration withStorageAccountName(String storageAccountName) {
        this.storageAccountName = storageAccountName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("configurationType",
            this.configurationType == null ? null : this.configurationType.toString());
        jsonWriter.writeStringField("resourceGroup", this.resourceGroup);
        jsonWriter.writeStringField("storageAccountName", this.storageAccountName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateAndMountFileShareConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateAndMountFileShareConfiguration if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CreateAndMountFileShareConfiguration.
     */
    public static CreateAndMountFileShareConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CreateAndMountFileShareConfiguration deserializedCreateAndMountFileShareConfiguration
                = new CreateAndMountFileShareConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("configurationType".equals(fieldName)) {
                    deserializedCreateAndMountFileShareConfiguration.configurationType
                        = FileShareConfigurationType.fromString(reader.getString());
                } else if ("resourceGroup".equals(fieldName)) {
                    deserializedCreateAndMountFileShareConfiguration.resourceGroup = reader.getString();
                } else if ("storageAccountName".equals(fieldName)) {
                    deserializedCreateAndMountFileShareConfiguration.storageAccountName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCreateAndMountFileShareConfiguration;
        });
    }
}
