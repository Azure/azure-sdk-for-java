// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.workloadssapvirtualinstance.fluent.models.SapDatabaseInstanceInner;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.OperationStatusResult;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapDatabaseInstance;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapDatabaseProperties;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.StartRequest;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.StopRequest;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.UpdateSapDatabaseInstanceRequest;
import java.util.Collections;
import java.util.Map;

public final class SapDatabaseInstanceImpl
    implements SapDatabaseInstance, SapDatabaseInstance.Definition, SapDatabaseInstance.Update {
    private SapDatabaseInstanceInner innerObject;

    private final com.azure.resourcemanager.workloadssapvirtualinstance.WorkloadsSapVirtualInstanceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SapDatabaseProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SapDatabaseInstanceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.workloadssapvirtualinstance.WorkloadsSapVirtualInstanceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String sapVirtualInstanceName;

    private String databaseInstanceName;

    private UpdateSapDatabaseInstanceRequest updateProperties;

    public SapDatabaseInstanceImpl withExistingSapVirtualInstance(String resourceGroupName,
        String sapVirtualInstanceName) {
        this.resourceGroupName = resourceGroupName;
        this.sapVirtualInstanceName = sapVirtualInstanceName;
        return this;
    }

    public SapDatabaseInstance create() {
        this.innerObject = serviceManager.serviceClient()
            .getSapDatabaseInstances()
            .create(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, this.innerModel(), Context.NONE);
        return this;
    }

    public SapDatabaseInstance create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSapDatabaseInstances()
            .create(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, this.innerModel(), context);
        return this;
    }

    SapDatabaseInstanceImpl(String name,
        com.azure.resourcemanager.workloadssapvirtualinstance.WorkloadsSapVirtualInstanceManager serviceManager) {
        this.innerObject = new SapDatabaseInstanceInner();
        this.serviceManager = serviceManager;
        this.databaseInstanceName = name;
    }

    public SapDatabaseInstanceImpl update() {
        this.updateProperties = new UpdateSapDatabaseInstanceRequest();
        return this;
    }

    public SapDatabaseInstance apply() {
        this.innerObject = serviceManager.serviceClient()
            .getSapDatabaseInstances()
            .updateWithResponse(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, updateProperties,
                Context.NONE)
            .getValue();
        return this;
    }

    public SapDatabaseInstance apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSapDatabaseInstances()
            .updateWithResponse(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, updateProperties,
                context)
            .getValue();
        return this;
    }

    SapDatabaseInstanceImpl(SapDatabaseInstanceInner innerObject,
        com.azure.resourcemanager.workloadssapvirtualinstance.WorkloadsSapVirtualInstanceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.sapVirtualInstanceName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "sapVirtualInstances");
        this.databaseInstanceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "databaseInstances");
    }

    public SapDatabaseInstance refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getSapDatabaseInstances()
            .getWithResponse(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, Context.NONE)
            .getValue();
        return this;
    }

    public SapDatabaseInstance refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSapDatabaseInstances()
            .getWithResponse(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, context)
            .getValue();
        return this;
    }

    public OperationStatusResult start() {
        return serviceManager.sapDatabaseInstances()
            .start(resourceGroupName, sapVirtualInstanceName, databaseInstanceName);
    }

    public OperationStatusResult start(StartRequest body, Context context) {
        return serviceManager.sapDatabaseInstances()
            .start(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, body, context);
    }

    public OperationStatusResult stop() {
        return serviceManager.sapDatabaseInstances()
            .stop(resourceGroupName, sapVirtualInstanceName, databaseInstanceName);
    }

    public OperationStatusResult stop(StopRequest body, Context context) {
        return serviceManager.sapDatabaseInstances()
            .stop(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, body, context);
    }

    public SapDatabaseInstanceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public SapDatabaseInstanceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public SapDatabaseInstanceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public SapDatabaseInstanceImpl withProperties(SapDatabaseProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
