// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Defines the Virtual Instance for SAP state.
 */
public final class SapVirtualInstanceState extends ExpandableStringEnum<SapVirtualInstanceState> {
    /**
     * Infrastructure is not yet deployed.
     */
    public static final SapVirtualInstanceState INFRASTRUCTURE_DEPLOYMENT_PENDING
        = fromString("InfrastructureDeploymentPending");

    /**
     * Infrastructure deployment is in progress.
     */
    public static final SapVirtualInstanceState INFRASTRUCTURE_DEPLOYMENT_IN_PROGRESS
        = fromString("InfrastructureDeploymentInProgress");

    /**
     * Infrastructure deployment has failed.
     */
    public static final SapVirtualInstanceState INFRASTRUCTURE_DEPLOYMENT_FAILED
        = fromString("InfrastructureDeploymentFailed");

    /**
     * Infrastructure deployment is successful. Software installation is pending.
     */
    public static final SapVirtualInstanceState SOFTWARE_INSTALLATION_PENDING
        = fromString("SoftwareInstallationPending");

    /**
     * Software installation is in progress.
     */
    public static final SapVirtualInstanceState SOFTWARE_INSTALLATION_IN_PROGRESS
        = fromString("SoftwareInstallationInProgress");

    /**
     * Software installation failed.
     */
    public static final SapVirtualInstanceState SOFTWARE_INSTALLATION_FAILED = fromString("SoftwareInstallationFailed");

    /**
     * Software detection is in progress.
     */
    public static final SapVirtualInstanceState SOFTWARE_DETECTION_IN_PROGRESS
        = fromString("SoftwareDetectionInProgress");

    /**
     * Software detection failed.
     */
    public static final SapVirtualInstanceState SOFTWARE_DETECTION_FAILED = fromString("SoftwareDetectionFailed");

    /**
     * Registration has not started.
     */
    public static final SapVirtualInstanceState DISCOVERY_PENDING = fromString("DiscoveryPending");

    /**
     * Registration is in progress.
     */
    public static final SapVirtualInstanceState DISCOVERY_IN_PROGRESS = fromString("DiscoveryInProgress");

    /**
     * Registration has failed.
     */
    public static final SapVirtualInstanceState DISCOVERY_FAILED = fromString("DiscoveryFailed");

    /**
     * Registration is complete.
     */
    public static final SapVirtualInstanceState REGISTRATION_COMPLETE = fromString("RegistrationComplete");

    /**
     * ACSS installation cannot proceed.
     */
    public static final SapVirtualInstanceState ACSSINSTALLATION_BLOCKED = fromString("ACSSInstallationBlocked");

    /**
     * Creates a new instance of SapVirtualInstanceState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public SapVirtualInstanceState() {
    }

    /**
     * Creates or finds a SapVirtualInstanceState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding SapVirtualInstanceState.
     */
    public static SapVirtualInstanceState fromString(String name) {
        return fromString(name, SapVirtualInstanceState.class);
    }

    /**
     * Gets known SapVirtualInstanceState values.
     * 
     * @return known SapVirtualInstanceState values.
     */
    public static Collection<SapVirtualInstanceState> values() {
        return values(SapVirtualInstanceState.class);
    }
}
