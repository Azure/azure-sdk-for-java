// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The SAP supported SKU.
 */
@Immutable
public final class SapSupportedSku implements JsonSerializable<SapSupportedSku> {
    /*
     * The VM Sku.
     */
    private String vmSku;

    /*
     * True if the Sku is certified for App server in the SAP system.
     */
    private Boolean isAppServerCertified;

    /*
     * True if the Sku is certified for Database server in the SAP system.
     */
    private Boolean isDatabaseCertified;

    /**
     * Creates an instance of SapSupportedSku class.
     */
    private SapSupportedSku() {
    }

    /**
     * Get the vmSku property: The VM Sku.
     * 
     * @return the vmSku value.
     */
    public String vmSku() {
        return this.vmSku;
    }

    /**
     * Get the isAppServerCertified property: True if the Sku is certified for App server in the SAP system.
     * 
     * @return the isAppServerCertified value.
     */
    public Boolean isAppServerCertified() {
        return this.isAppServerCertified;
    }

    /**
     * Get the isDatabaseCertified property: True if the Sku is certified for Database server in the SAP system.
     * 
     * @return the isDatabaseCertified value.
     */
    public Boolean isDatabaseCertified() {
        return this.isDatabaseCertified;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("vmSku", this.vmSku);
        jsonWriter.writeBooleanField("isAppServerCertified", this.isAppServerCertified);
        jsonWriter.writeBooleanField("isDatabaseCertified", this.isDatabaseCertified);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SapSupportedSku from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SapSupportedSku if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the SapSupportedSku.
     */
    public static SapSupportedSku fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SapSupportedSku deserializedSapSupportedSku = new SapSupportedSku();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("vmSku".equals(fieldName)) {
                    deserializedSapSupportedSku.vmSku = reader.getString();
                } else if ("isAppServerCertified".equals(fieldName)) {
                    deserializedSapSupportedSku.isAppServerCertified = reader.getNullable(JsonReader::getBoolean);
                } else if ("isDatabaseCertified".equals(fieldName)) {
                    deserializedSapSupportedSku.isDatabaseCertified = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSapSupportedSku;
        });
    }
}
