// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.workloadssapvirtualinstance.fluent.models.SapApplicationServerInstanceInner;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.OperationStatusResult;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapApplicationServerInstance;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapApplicationServerProperties;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.StartRequest;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.StopRequest;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.UpdateSapApplicationInstanceRequest;
import java.util.Collections;
import java.util.Map;

public final class SapApplicationServerInstanceImpl implements SapApplicationServerInstance,
    SapApplicationServerInstance.Definition, SapApplicationServerInstance.Update {
    private SapApplicationServerInstanceInner innerObject;

    private final com.azure.resourcemanager.workloadssapvirtualinstance.WorkloadsSapVirtualInstanceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SapApplicationServerProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SapApplicationServerInstanceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.workloadssapvirtualinstance.WorkloadsSapVirtualInstanceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String sapVirtualInstanceName;

    private String applicationInstanceName;

    private UpdateSapApplicationInstanceRequest updateProperties;

    public SapApplicationServerInstanceImpl withExistingSapVirtualInstance(String resourceGroupName,
        String sapVirtualInstanceName) {
        this.resourceGroupName = resourceGroupName;
        this.sapVirtualInstanceName = sapVirtualInstanceName;
        return this;
    }

    public SapApplicationServerInstance create() {
        this.innerObject = serviceManager.serviceClient()
            .getSapApplicationServerInstances()
            .create(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, this.innerModel(),
                Context.NONE);
        return this;
    }

    public SapApplicationServerInstance create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSapApplicationServerInstances()
            .create(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, this.innerModel(), context);
        return this;
    }

    SapApplicationServerInstanceImpl(String name,
        com.azure.resourcemanager.workloadssapvirtualinstance.WorkloadsSapVirtualInstanceManager serviceManager) {
        this.innerObject = new SapApplicationServerInstanceInner();
        this.serviceManager = serviceManager;
        this.applicationInstanceName = name;
    }

    public SapApplicationServerInstanceImpl update() {
        this.updateProperties = new UpdateSapApplicationInstanceRequest();
        return this;
    }

    public SapApplicationServerInstance apply() {
        this.innerObject = serviceManager.serviceClient()
            .getSapApplicationServerInstances()
            .updateWithResponse(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, updateProperties,
                Context.NONE)
            .getValue();
        return this;
    }

    public SapApplicationServerInstance apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSapApplicationServerInstances()
            .updateWithResponse(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, updateProperties,
                context)
            .getValue();
        return this;
    }

    SapApplicationServerInstanceImpl(SapApplicationServerInstanceInner innerObject,
        com.azure.resourcemanager.workloadssapvirtualinstance.WorkloadsSapVirtualInstanceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.sapVirtualInstanceName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "sapVirtualInstances");
        this.applicationInstanceName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "applicationInstances");
    }

    public SapApplicationServerInstance refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getSapApplicationServerInstances()
            .getWithResponse(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, Context.NONE)
            .getValue();
        return this;
    }

    public SapApplicationServerInstance refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSapApplicationServerInstances()
            .getWithResponse(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, context)
            .getValue();
        return this;
    }

    public OperationStatusResult start() {
        return serviceManager.sapApplicationServerInstances()
            .start(resourceGroupName, sapVirtualInstanceName, applicationInstanceName);
    }

    public OperationStatusResult start(StartRequest body, Context context) {
        return serviceManager.sapApplicationServerInstances()
            .start(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, body, context);
    }

    public OperationStatusResult stop() {
        return serviceManager.sapApplicationServerInstances()
            .stop(resourceGroupName, sapVirtualInstanceName, applicationInstanceName);
    }

    public OperationStatusResult stop(StopRequest body, Context context) {
        return serviceManager.sapApplicationServerInstances()
            .stop(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, body, context);
    }

    public SapApplicationServerInstanceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public SapApplicationServerInstanceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public SapApplicationServerInstanceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public SapApplicationServerInstanceImpl withProperties(SapApplicationServerProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
