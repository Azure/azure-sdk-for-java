// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Gets or sets the high availability configuration.
 */
@Fluent
public final class HighAvailabilityConfiguration implements JsonSerializable<HighAvailabilityConfiguration> {
    /*
     * The high availability type.
     */
    private SapHighAvailabilityType highAvailabilityType;

    /**
     * Creates an instance of HighAvailabilityConfiguration class.
     */
    public HighAvailabilityConfiguration() {
    }

    /**
     * Get the highAvailabilityType property: The high availability type.
     * 
     * @return the highAvailabilityType value.
     */
    public SapHighAvailabilityType highAvailabilityType() {
        return this.highAvailabilityType;
    }

    /**
     * Set the highAvailabilityType property: The high availability type.
     * 
     * @param highAvailabilityType the highAvailabilityType value to set.
     * @return the HighAvailabilityConfiguration object itself.
     */
    public HighAvailabilityConfiguration withHighAvailabilityType(SapHighAvailabilityType highAvailabilityType) {
        this.highAvailabilityType = highAvailabilityType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (highAvailabilityType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property highAvailabilityType in model HighAvailabilityConfiguration"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(HighAvailabilityConfiguration.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("highAvailabilityType",
            this.highAvailabilityType == null ? null : this.highAvailabilityType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HighAvailabilityConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HighAvailabilityConfiguration if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the HighAvailabilityConfiguration.
     */
    public static HighAvailabilityConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HighAvailabilityConfiguration deserializedHighAvailabilityConfiguration
                = new HighAvailabilityConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("highAvailabilityType".equals(fieldName)) {
                    deserializedHighAvailabilityConfiguration.highAvailabilityType
                        = SapHighAvailabilityType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHighAvailabilityConfiguration;
        });
    }
}
