// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadssapvirtualinstance.WorkloadsSapVirtualInstanceManager;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.DiskSkuName;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapDatabaseType;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapDeploymentType;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapDiskConfigurationsRequest;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapDiskConfigurationsResult;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapEnvironmentType;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapProductType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SapVirtualInstancesGetDiskConfigurationsWitMockTests {
    @Test
    public void testGetDiskConfigurationsWithResponse() throws Exception {
        String responseStr
            = "{\"volumeConfigurations\":{\"urdoi\":{\"recommendedConfiguration\":{\"count\":1254850422114196148,\"sizeGB\":5953574927577101427,\"sku\":{\"name\":\"StandardSSD_ZRS\"}},\"supportedConfigurations\":[{\"sku\":{},\"sizeGB\":686052529791158175,\"minimumSupportedDiskCount\":3920435085963862976,\"maximumSupportedDiskCount\":4971111949791382837,\"iopsReadWrite\":8084058404803750830,\"mbpsReadWrite\":1158865571853625138,\"diskTier\":\"yl\"},{\"sku\":{},\"sizeGB\":880079432937074833,\"minimumSupportedDiskCount\":8274971032821131751,\"maximumSupportedDiskCount\":1375339389748279377,\"iopsReadWrite\":5218276109557788624,\"mbpsReadWrite\":1232834909698748994,\"diskTier\":\"rywvtylbfpn\"}]}}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadsSapVirtualInstanceManager manager = WorkloadsSapVirtualInstanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SapDiskConfigurationsResult response = manager.sapVirtualInstances()
            .getDiskConfigurationsWithResponse("ihyeozphvw",
                new SapDiskConfigurationsRequest().withAppLocation("uyqncygupkvipmd")
                    .withEnvironment(SapEnvironmentType.NON_PROD)
                    .withSapProduct(SapProductType.OTHER)
                    .withDatabaseType(SapDatabaseType.DB2)
                    .withDeploymentType(SapDeploymentType.SINGLE_SERVER)
                    .withDbVmSku("upev"),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(1254850422114196148L,
            response.volumeConfigurations().get("urdoi").recommendedConfiguration().count());
        Assertions.assertEquals(5953574927577101427L,
            response.volumeConfigurations().get("urdoi").recommendedConfiguration().sizeGB());
        Assertions.assertEquals(DiskSkuName.STANDARD_SSD_ZRS,
            response.volumeConfigurations().get("urdoi").recommendedConfiguration().sku().name());
        Assertions.assertEquals(686052529791158175L,
            response.volumeConfigurations().get("urdoi").supportedConfigurations().get(0).sizeGB());
        Assertions.assertEquals(3920435085963862976L,
            response.volumeConfigurations().get("urdoi").supportedConfigurations().get(0).minimumSupportedDiskCount());
        Assertions.assertEquals(4971111949791382837L,
            response.volumeConfigurations().get("urdoi").supportedConfigurations().get(0).maximumSupportedDiskCount());
        Assertions.assertEquals(8084058404803750830L,
            response.volumeConfigurations().get("urdoi").supportedConfigurations().get(0).iopsReadWrite());
        Assertions.assertEquals(1158865571853625138L,
            response.volumeConfigurations().get("urdoi").supportedConfigurations().get(0).mbpsReadWrite());
        Assertions.assertEquals("yl",
            response.volumeConfigurations().get("urdoi").supportedConfigurations().get(0).diskTier());
    }
}
