// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapDatabaseType;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapDeploymentType;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapEnvironmentType;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapHighAvailabilityType;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapProductType;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapSupportedSkusRequest;
import org.junit.jupiter.api.Assertions;

public final class SapSupportedSkusRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapSupportedSkusRequest model = BinaryData.fromString(
            "{\"appLocation\":\"hsfxoblytkb\",\"environment\":\"NonProd\",\"sapProduct\":\"ECC\",\"deploymentType\":\"ThreeTier\",\"databaseType\":\"HANA\",\"highAvailabilityType\":\"AvailabilityZone\"}")
            .toObject(SapSupportedSkusRequest.class);
        Assertions.assertEquals("hsfxoblytkb", model.appLocation());
        Assertions.assertEquals(SapEnvironmentType.NON_PROD, model.environment());
        Assertions.assertEquals(SapProductType.ECC, model.sapProduct());
        Assertions.assertEquals(SapDeploymentType.THREE_TIER, model.deploymentType());
        Assertions.assertEquals(SapDatabaseType.HANA, model.databaseType());
        Assertions.assertEquals(SapHighAvailabilityType.AVAILABILITY_ZONE, model.highAvailabilityType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SapSupportedSkusRequest model = new SapSupportedSkusRequest().withAppLocation("hsfxoblytkb")
            .withEnvironment(SapEnvironmentType.NON_PROD)
            .withSapProduct(SapProductType.ECC)
            .withDeploymentType(SapDeploymentType.THREE_TIER)
            .withDatabaseType(SapDatabaseType.HANA)
            .withHighAvailabilityType(SapHighAvailabilityType.AVAILABILITY_ZONE);
        model = BinaryData.fromObject(model).toObject(SapSupportedSkusRequest.class);
        Assertions.assertEquals("hsfxoblytkb", model.appLocation());
        Assertions.assertEquals(SapEnvironmentType.NON_PROD, model.environment());
        Assertions.assertEquals(SapProductType.ECC, model.sapProduct());
        Assertions.assertEquals(SapDeploymentType.THREE_TIER, model.deploymentType());
        Assertions.assertEquals(SapDatabaseType.HANA, model.databaseType());
        Assertions.assertEquals(SapHighAvailabilityType.AVAILABILITY_ZONE, model.highAvailabilityType());
    }
}
