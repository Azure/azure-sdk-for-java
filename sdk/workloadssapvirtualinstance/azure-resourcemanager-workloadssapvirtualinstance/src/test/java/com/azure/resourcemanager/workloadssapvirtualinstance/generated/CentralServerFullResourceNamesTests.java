// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.CentralServerFullResourceNames;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.LoadBalancerResourceNames;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.NetworkInterfaceResourceNames;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.VirtualMachineResourceNames;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CentralServerFullResourceNamesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CentralServerFullResourceNames model = BinaryData.fromString(
            "{\"virtualMachines\":[{\"vmName\":\"u\",\"hostName\":\"mvfaxkffeiith\",\"networkInterfaces\":[{\"networkInterfaceName\":\"zy\"}],\"osDiskName\":\"hxmzsbbzoggig\",\"dataDiskNames\":{\"koen\":[\"ur\",\"jx\",\"jnspydp\"],\"kbldngkpocipa\":[\"uknvudwti\"],\"eoejzic\":[\"xoegukgjnpiucgy\",\"evqzntypmrbp\",\"zcdrqjsdpydnfyhx\"],\"wkgshwa\":[\"fsj\",\"tgzfbishcbkh\",\"jdeyeamdpha\",\"alpbuxwgipwhon\"]}},{\"vmName\":\"ixzbinjeputtmryw\",\"hostName\":\"zoqftiyqzrnkcqvy\",\"networkInterfaces\":[{\"networkInterfaceName\":\"zlsico\"},{\"networkInterfaceName\":\"qqn\"},{\"networkInterfaceName\":\"lryav\"}],\"osDiskName\":\"heun\",\"dataDiskNames\":{\"uconuqszfkbey\":[\"gyxzk\",\"noc\",\"koklya\"],\"fcivfsnkym\":[\"wrmjmwvvjektc\",\"senhwlrs\",\"frzpwvlqdqgb\",\"qylihkaetckt\"],\"rfuwutt\":[\"tqhjfbebrjcx\"],\"xjvuujqgidokg\":[\"fvjrbirphxepcy\",\"ahfn\",\"jky\"]}},{\"vmName\":\"jyoxgvclt\",\"hostName\":\"sncghkjeszz\",\"networkInterfaces\":[{\"networkInterfaceName\":\"htxfvgxbfsmxnehm\"},{\"networkInterfaceName\":\"ec\"}],\"osDiskName\":\"odebfqkkrbmpu\",\"dataDiskNames\":{\"ispnqzahmgkbrp\":[\"wflzlfbxzpuzy\"],\"kpikadrgvt\":[\"dhibnuq\"],\"hijggme\":[\"gnbuy\"]}},{\"vmName\":\"siarbutrcvpn\",\"hostName\":\"zmhjrunmp\",\"networkInterfaces\":[{\"networkInterfaceName\":\"bh\"},{\"networkInterfaceName\":\"nlankxmyskpb\"},{\"networkInterfaceName\":\"nbtkcxywnytnr\"}],\"osDiskName\":\"nlqidybyxczf\",\"dataDiskNames\":{\"wrqpue\":[\"axdbabph\",\"wrqlfktsthsuco\",\"mnyyazt\",\"bt\"],\"qwalmuzyoxaepd\":[\"kzywbiex\",\"fey\",\"eaxib\",\"ujwb\"],\"jswztsdbpg\":[\"jancu\",\"rhdwbavxbniw\"]}}],\"availabilitySetName\":\"ytxhp\",\"loadBalancer\":{\"loadBalancerName\":\"zpfzabglc\",\"frontendIpConfigurationNames\":[\"wtctyqi\",\"lbbovplw\",\"bhvgy\",\"gu\"],\"backendPoolNames\":[\"mkfssxqukkfplgm\",\"sxnkjzkdeslpvlo\",\"wiyighxpkdw\"],\"healthProbeNames\":[\"iuebbaumny\",\"upedeojnabckhs\",\"txp\",\"ie\"]}}")
            .toObject(CentralServerFullResourceNames.class);
        Assertions.assertEquals("u", model.virtualMachines().get(0).vmName());
        Assertions.assertEquals("mvfaxkffeiith", model.virtualMachines().get(0).hostName());
        Assertions.assertEquals("zy", model.virtualMachines().get(0).networkInterfaces().get(0).networkInterfaceName());
        Assertions.assertEquals("hxmzsbbzoggig", model.virtualMachines().get(0).osDiskName());
        Assertions.assertEquals("ur", model.virtualMachines().get(0).dataDiskNames().get("koen").get(0));
        Assertions.assertEquals("ytxhp", model.availabilitySetName());
        Assertions.assertEquals("zpfzabglc", model.loadBalancer().loadBalancerName());
        Assertions.assertEquals("wtctyqi", model.loadBalancer().frontendIpConfigurationNames().get(0));
        Assertions.assertEquals("mkfssxqukkfplgm", model.loadBalancer().backendPoolNames().get(0));
        Assertions.assertEquals("iuebbaumny", model.loadBalancer().healthProbeNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CentralServerFullResourceNames model
            = new CentralServerFullResourceNames()
                .withVirtualMachines(
                    Arrays.asList(
                        new VirtualMachineResourceNames().withVmName("u")
                            .withHostName("mvfaxkffeiith")
                            .withNetworkInterfaces(
                                Arrays.asList(new NetworkInterfaceResourceNames().withNetworkInterfaceName("zy")))
                            .withOsDiskName("hxmzsbbzoggig")
                            .withDataDiskNames(mapOf(
                                "koen", Arrays.asList("ur", "jx", "jnspydp"), "kbldngkpocipa",
                                Arrays.asList("uknvudwti"), "eoejzic",
                                Arrays.asList("xoegukgjnpiucgy", "evqzntypmrbp", "zcdrqjsdpydnfyhx"), "wkgshwa",
                                Arrays.asList("fsj", "tgzfbishcbkh", "jdeyeamdpha", "alpbuxwgipwhon"))),
                        new VirtualMachineResourceNames().withVmName("ixzbinjeputtmryw")
                            .withHostName("zoqftiyqzrnkcqvy")
                            .withNetworkInterfaces(
                                Arrays.asList(new NetworkInterfaceResourceNames().withNetworkInterfaceName("zlsico"),
                                    new NetworkInterfaceResourceNames().withNetworkInterfaceName("qqn"),
                                    new NetworkInterfaceResourceNames().withNetworkInterfaceName("lryav")))
                            .withOsDiskName("heun")
                            .withDataDiskNames(
                                mapOf("uconuqszfkbey", Arrays.asList("gyxzk", "noc", "koklya"), "fcivfsnkym",
                                    Arrays.asList("wrmjmwvvjektc", "senhwlrs", "frzpwvlqdqgb", "qylihkaetckt"),
                                    "rfuwutt", Arrays.asList("tqhjfbebrjcx"), "xjvuujqgidokg",
                                    Arrays.asList("fvjrbirphxepcy", "ahfn", "jky"))),
                        new VirtualMachineResourceNames().withVmName("jyoxgvclt")
                            .withHostName("sncghkjeszz")
                            .withNetworkInterfaces(Arrays.asList(
                                new NetworkInterfaceResourceNames().withNetworkInterfaceName("htxfvgxbfsmxnehm"),
                                new NetworkInterfaceResourceNames().withNetworkInterfaceName("ec")))
                            .withOsDiskName("odebfqkkrbmpu")
                            .withDataDiskNames(mapOf(
                                "ispnqzahmgkbrp", Arrays.asList("wflzlfbxzpuzy"), "kpikadrgvt",
                                Arrays.asList("dhibnuq"), "hijggme", Arrays.asList("gnbuy"))),
                        new VirtualMachineResourceNames().withVmName("siarbutrcvpn")
                            .withHostName("zmhjrunmp")
                            .withNetworkInterfaces(
                                Arrays.asList(new NetworkInterfaceResourceNames().withNetworkInterfaceName("bh"),
                                    new NetworkInterfaceResourceNames().withNetworkInterfaceName("nlankxmyskpb"),
                                    new NetworkInterfaceResourceNames().withNetworkInterfaceName("nbtkcxywnytnr")))
                            .withOsDiskName("nlqidybyxczf")
                            .withDataDiskNames(
                                mapOf("wrqpue", Arrays.asList("axdbabph", "wrqlfktsthsuco", "mnyyazt", "bt"),
                                    "qwalmuzyoxaepd", Arrays.asList("kzywbiex", "fey", "eaxib", "ujwb"), "jswztsdbpg",
                                    Arrays.asList("jancu", "rhdwbavxbniw")))))
                .withAvailabilitySetName("ytxhp")
                .withLoadBalancer(new LoadBalancerResourceNames().withLoadBalancerName("zpfzabglc")
                    .withFrontendIpConfigurationNames(Arrays.asList("wtctyqi", "lbbovplw", "bhvgy", "gu"))
                    .withBackendPoolNames(Arrays.asList("mkfssxqukkfplgm", "sxnkjzkdeslpvlo", "wiyighxpkdw"))
                    .withHealthProbeNames(Arrays.asList("iuebbaumny", "upedeojnabckhs", "txp", "ie")));
        model = BinaryData.fromObject(model).toObject(CentralServerFullResourceNames.class);
        Assertions.assertEquals("u", model.virtualMachines().get(0).vmName());
        Assertions.assertEquals("mvfaxkffeiith", model.virtualMachines().get(0).hostName());
        Assertions.assertEquals("zy", model.virtualMachines().get(0).networkInterfaces().get(0).networkInterfaceName());
        Assertions.assertEquals("hxmzsbbzoggig", model.virtualMachines().get(0).osDiskName());
        Assertions.assertEquals("ur", model.virtualMachines().get(0).dataDiskNames().get("koen").get(0));
        Assertions.assertEquals("ytxhp", model.availabilitySetName());
        Assertions.assertEquals("zpfzabglc", model.loadBalancer().loadBalancerName());
        Assertions.assertEquals("wtctyqi", model.loadBalancer().frontendIpConfigurationNames().get(0));
        Assertions.assertEquals("mkfssxqukkfplgm", model.loadBalancer().backendPoolNames().get(0));
        Assertions.assertEquals("iuebbaumny", model.loadBalancer().healthProbeNames().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
