// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.DeployerVmPackages;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.DeploymentWithOSConfiguration;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.InfrastructureConfiguration;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.OsSapConfiguration;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SoftwareConfiguration;
import org.junit.jupiter.api.Assertions;

public final class DeploymentWithOSConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeploymentWithOSConfiguration model = BinaryData.fromString(
            "{\"configurationType\":\"DeploymentWithOSConfig\",\"appLocation\":\"rtzju\",\"infrastructureConfiguration\":{\"deploymentType\":\"InfrastructureConfiguration\",\"appResourceGroup\":\"wyzmhtxon\"},\"softwareConfiguration\":{\"softwareInstallationType\":\"SoftwareConfiguration\"},\"osSapConfiguration\":{\"deployerVmPackages\":{\"url\":\"vjcbpwxqpsrknf\",\"storageAccountId\":\"uvriuhprwm\"},\"sapFqdn\":\"vxqtayriwwroyqbe\"}}")
            .toObject(DeploymentWithOSConfiguration.class);
        Assertions.assertEquals("rtzju", model.appLocation());
        Assertions.assertEquals("wyzmhtxon", model.infrastructureConfiguration().appResourceGroup());
        Assertions.assertEquals("vjcbpwxqpsrknf", model.osSapConfiguration().deployerVmPackages().url());
        Assertions.assertEquals("uvriuhprwm", model.osSapConfiguration().deployerVmPackages().storageAccountId());
        Assertions.assertEquals("vxqtayriwwroyqbe", model.osSapConfiguration().sapFqdn());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeploymentWithOSConfiguration model = new DeploymentWithOSConfiguration().withAppLocation("rtzju")
            .withInfrastructureConfiguration(new InfrastructureConfiguration().withAppResourceGroup("wyzmhtxon"))
            .withSoftwareConfiguration(new SoftwareConfiguration())
            .withOsSapConfiguration(new OsSapConfiguration()
                .withDeployerVmPackages(
                    new DeployerVmPackages().withUrl("vjcbpwxqpsrknf").withStorageAccountId("uvriuhprwm"))
                .withSapFqdn("vxqtayriwwroyqbe"));
        model = BinaryData.fromObject(model).toObject(DeploymentWithOSConfiguration.class);
        Assertions.assertEquals("rtzju", model.appLocation());
        Assertions.assertEquals("wyzmhtxon", model.infrastructureConfiguration().appResourceGroup());
        Assertions.assertEquals("vjcbpwxqpsrknf", model.osSapConfiguration().deployerVmPackages().url());
        Assertions.assertEquals("uvriuhprwm", model.osSapConfiguration().deployerVmPackages().storageAccountId());
        Assertions.assertEquals("vxqtayriwwroyqbe", model.osSapConfiguration().sapFqdn());
    }
}
