// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadssapvirtualinstance.WorkloadsSapVirtualInstanceManager;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapAvailabilityZoneDetailsRequest;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapAvailabilityZoneDetailsResult;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapDatabaseType;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapProductType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SapVirtualInstancesGetAvailabilityZoneDetaiMockTests {
    @Test
    public void testGetAvailabilityZoneDetailsWithResponse() throws Exception {
        String responseStr
            = "{\"availabilityZonePairs\":[{\"zoneA\":1441267877176887045,\"zoneB\":1750475282934790505},{\"zoneA\":2905922473009619098,\"zoneB\":5784000721532409978},{\"zoneA\":43627080801211364,\"zoneB\":4164889178539078814},{\"zoneA\":1742595014873597372,\"zoneB\":1104101737481354255}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadsSapVirtualInstanceManager manager = WorkloadsSapVirtualInstanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SapAvailabilityZoneDetailsResult response = manager.sapVirtualInstances()
            .getAvailabilityZoneDetailsWithResponse("ihxumwctondzj",
                new SapAvailabilityZoneDetailsRequest().withAppLocation("uu")
                    .withSapProduct(SapProductType.S4HANA)
                    .withDatabaseType(SapDatabaseType.DB2),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(1441267877176887045L, response.availabilityZonePairs().get(0).zoneA());
        Assertions.assertEquals(1750475282934790505L, response.availabilityZonePairs().get(0).zoneB());
    }
}
