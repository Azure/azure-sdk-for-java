// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.ApplicationServerFullResourceNames;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.CentralServerFullResourceNames;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.DatabaseServerFullResourceNames;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.LoadBalancerResourceNames;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.NetworkInterfaceResourceNames;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SharedStorageResourceNames;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.ThreeTierFullResourceNames;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.VirtualMachineResourceNames;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ThreeTierFullResourceNamesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ThreeTierFullResourceNames model = BinaryData.fromString(
            "{\"namingPatternType\":\"FullResourceName\",\"centralServer\":{\"virtualMachines\":[{\"vmName\":\"bnwbxgjvtbvpyssz\",\"hostName\":\"rujqg\",\"networkInterfaces\":[{\"networkInterfaceName\":\"ouqfprwz\"},{\"networkInterfaceName\":\"nguitnwuizgazxu\"}],\"osDiskName\":\"zuckyfi\",\"dataDiskNames\":{\"wisdkft\":[\"dfvzwdzuhty\"],\"mzidnsezcxtb\":[\"xmnteiwaop\",\"km\",\"jcmmxdcufufsrp\"]}},{\"vmName\":\"gfycc\",\"hostName\":\"ewmdw\",\"networkInterfaces\":[{\"networkInterfaceName\":\"ac\"},{\"networkInterfaceName\":\"oosflnr\"},{\"networkInterfaceName\":\"fqpte\"},{\"networkInterfaceName\":\"zzvypyqrimzinp\"}],\"osDiskName\":\"wjdk\",\"dataDiskNames\":{\"kwh\":[\"od\",\"xhcr\",\"nohjt\"],\"toqcjmklja\":[\"oifiyipjxsqwpgr\",\"bznorcjxvsnby\",\"qabnmoc\",\"cyshurzafbljjgp\"],\"jkrlkhbzhfepg\":[\"qidtqajzyu\",\"pku\"],\"aierhhb\":[\"qex\",\"locx\",\"c\"]}},{\"vmName\":\"glu\",\"hostName\":\"a\",\"networkInterfaces\":[{\"networkInterfaceName\":\"odxobnbdxkqpxok\"}],\"osDiskName\":\"ionpimexg\",\"dataDiskNames\":{\"dg\":[\"cp\"]}},{\"vmName\":\"ajrmvdjwzrlovmc\",\"hostName\":\"hijco\",\"networkInterfaces\":[{\"networkInterfaceName\":\"bzaqsqsycbkbfk\"},{\"networkInterfaceName\":\"kdkexxp\"}],\"osDiskName\":\"fmxa\",\"dataDiskNames\":{\"dtocj\":[\"pg\"],\"xibqeojnx\":[\"hvpmoue\",\"hd\"],\"zao\":[\"zvddntwndeicbtwn\"],\"hkh\":[\"uhrhcffcyddgl\",\"jthjqkwpyei\",\"xmqci\",\"q\"]}}],\"availabilitySetName\":\"uigdtopbobjog\",\"loadBalancer\":{\"loadBalancerName\":\"w\",\"frontendIpConfigurationNames\":[\"a\"],\"backendPoolNames\":[\"z\",\"yvvtpgvdfgio\"],\"healthProbeNames\":[\"tutqxlngxlefgug\",\"xkrxdqmi\",\"tthzrvqd\",\"abhjybi\"]}},\"applicationServer\":{\"virtualMachines\":[{\"vmName\":\"fbowskanyk\",\"hostName\":\"lcuiywgqywgndr\",\"networkInterfaces\":[{\"networkInterfaceName\":\"zgpphrcgyncocpe\"},{\"networkInterfaceName\":\"vmmcoofs\"},{\"networkInterfaceName\":\"zevgb\"}],\"osDiskName\":\"jqabcypmivkwlzuv\",\"dataDiskNames\":{\"dpnqbq\":[\"nfnbacfionlebxe\",\"qgtz\"],\"ase\":[\"xrjfeallnwsub\",\"snjampmng\",\"zscxaqwo\",\"chcbonqvpkvlrxnj\"]}},{\"vmName\":\"heoflokeyyienjbd\",\"hostName\":\"tgrhpdjpjumas\",\"networkInterfaces\":[{\"networkInterfaceName\":\"pqyegualhbxxh\"}],\"osDiskName\":\"jzzvdud\",\"dataDiskNames\":{\"npgacftade\":[\"lfh\",\"twmcynpwlb\"],\"vudwx\":[\"nltyfsoppusuesnz\",\"dejbavo\",\"xzdmohctb\"],\"dyggdtjixhbku\":[\"dnvowg\",\"jjugwdkcglhslaz\"]}},{\"vmName\":\"qweykhmenev\",\"hostName\":\"exfwhy\",\"networkInterfaces\":[{\"networkInterfaceName\":\"vyvdcs\"}],\"osDiskName\":\"ynnaam\",\"dataDiskNames\":{\"qsl\":[\"eh\",\"iqscjeypv\",\"ezrkgqhcjrefo\",\"gm\"],\"ysou\":[\"yvxyqjp\",\"cattpngjcrcczsq\",\"jh\",\"mdajv\"],\"a\":[\"e\"]}}],\"availabilitySetName\":\"ae\"},\"databaseServer\":{\"virtualMachines\":[{\"vmName\":\"hltrpmopjmcmatuo\",\"hostName\":\"hfuiuaodsfc\",\"networkInterfaces\":[{\"networkInterfaceName\":\"odpuozmyzydag\"},{\"networkInterfaceName\":\"axbezyiuo\"}],\"osDiskName\":\"twhrdxwzywqsm\",\"dataDiskNames\":{\"o\":[\"exim\",\"ryocfsfksymdd\",\"stkiiuxhqyud\"],\"poczvyifqrvkdvjs\":[\"qn\"],\"vdfwatkpn\":[\"rm\"],\"pkwlhz\":[\"lexxbczwtru\",\"iqzbq\",\"vsovmyokac\"]}}],\"availabilitySetName\":\"bpxjmfl\",\"loadBalancer\":{\"loadBalancerName\":\"nchrkcciww\",\"frontendIpConfigurationNames\":[\"qkhr\",\"ajiwkuo\",\"oskg\"],\"backendPoolNames\":[\"uuimjmvxieduug\"],\"healthProbeNames\":[\"jrrfbyaosve\"]}},\"sharedStorage\":{\"sharedStorageAccountName\":\"onpc\",\"sharedStorageAccountPrivateEndPointName\":\"ocohslkevleg\"}}")
            .toObject(ThreeTierFullResourceNames.class);
        Assertions.assertEquals("bnwbxgjvtbvpyssz", model.centralServer().virtualMachines().get(0).vmName());
        Assertions.assertEquals("rujqg", model.centralServer().virtualMachines().get(0).hostName());
        Assertions.assertEquals("ouqfprwz",
            model.centralServer().virtualMachines().get(0).networkInterfaces().get(0).networkInterfaceName());
        Assertions.assertEquals("zuckyfi", model.centralServer().virtualMachines().get(0).osDiskName());
        Assertions.assertEquals("dfvzwdzuhty",
            model.centralServer().virtualMachines().get(0).dataDiskNames().get("wisdkft").get(0));
        Assertions.assertEquals("uigdtopbobjog", model.centralServer().availabilitySetName());
        Assertions.assertEquals("w", model.centralServer().loadBalancer().loadBalancerName());
        Assertions.assertEquals("a", model.centralServer().loadBalancer().frontendIpConfigurationNames().get(0));
        Assertions.assertEquals("z", model.centralServer().loadBalancer().backendPoolNames().get(0));
        Assertions.assertEquals("tutqxlngxlefgug", model.centralServer().loadBalancer().healthProbeNames().get(0));
        Assertions.assertEquals("fbowskanyk", model.applicationServer().virtualMachines().get(0).vmName());
        Assertions.assertEquals("lcuiywgqywgndr", model.applicationServer().virtualMachines().get(0).hostName());
        Assertions.assertEquals("zgpphrcgyncocpe",
            model.applicationServer().virtualMachines().get(0).networkInterfaces().get(0).networkInterfaceName());
        Assertions.assertEquals("jqabcypmivkwlzuv", model.applicationServer().virtualMachines().get(0).osDiskName());
        Assertions.assertEquals("nfnbacfionlebxe",
            model.applicationServer().virtualMachines().get(0).dataDiskNames().get("dpnqbq").get(0));
        Assertions.assertEquals("ae", model.applicationServer().availabilitySetName());
        Assertions.assertEquals("hltrpmopjmcmatuo", model.databaseServer().virtualMachines().get(0).vmName());
        Assertions.assertEquals("hfuiuaodsfc", model.databaseServer().virtualMachines().get(0).hostName());
        Assertions.assertEquals("odpuozmyzydag",
            model.databaseServer().virtualMachines().get(0).networkInterfaces().get(0).networkInterfaceName());
        Assertions.assertEquals("twhrdxwzywqsm", model.databaseServer().virtualMachines().get(0).osDiskName());
        Assertions.assertEquals("exim",
            model.databaseServer().virtualMachines().get(0).dataDiskNames().get("o").get(0));
        Assertions.assertEquals("bpxjmfl", model.databaseServer().availabilitySetName());
        Assertions.assertEquals("nchrkcciww", model.databaseServer().loadBalancer().loadBalancerName());
        Assertions.assertEquals("qkhr", model.databaseServer().loadBalancer().frontendIpConfigurationNames().get(0));
        Assertions.assertEquals("uuimjmvxieduug", model.databaseServer().loadBalancer().backendPoolNames().get(0));
        Assertions.assertEquals("jrrfbyaosve", model.databaseServer().loadBalancer().healthProbeNames().get(0));
        Assertions.assertEquals("onpc", model.sharedStorage().sharedStorageAccountName());
        Assertions.assertEquals("ocohslkevleg", model.sharedStorage().sharedStorageAccountPrivateEndPointName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ThreeTierFullResourceNames model
            = new ThreeTierFullResourceNames()
                .withCentralServer(
                    new CentralServerFullResourceNames()
                        .withVirtualMachines(
                            Arrays.asList(
                                new VirtualMachineResourceNames().withVmName("bnwbxgjvtbvpyssz")
                                    .withHostName("rujqg")
                                    .withNetworkInterfaces(Arrays.asList(
                                        new NetworkInterfaceResourceNames().withNetworkInterfaceName("ouqfprwz"),
                                        new NetworkInterfaceResourceNames()
                                            .withNetworkInterfaceName("nguitnwuizgazxu")))
                                    .withOsDiskName("zuckyfi")
                                    .withDataDiskNames(mapOf("wisdkft", Arrays.asList("dfvzwdzuhty"), "mzidnsezcxtb",
                                        Arrays.asList("xmnteiwaop", "km", "jcmmxdcufufsrp"))),
                                new VirtualMachineResourceNames().withVmName("gfycc")
                                    .withHostName("ewmdw")
                                    .withNetworkInterfaces(Arrays.asList(
                                        new NetworkInterfaceResourceNames().withNetworkInterfaceName("ac"),
                                        new NetworkInterfaceResourceNames().withNetworkInterfaceName("oosflnr"),
                                        new NetworkInterfaceResourceNames().withNetworkInterfaceName("fqpte"),
                                        new NetworkInterfaceResourceNames().withNetworkInterfaceName("zzvypyqrimzinp")))
                                    .withOsDiskName("wjdk")
                                    .withDataDiskNames(
                                        mapOf(
                                            "kwh", Arrays.asList("od", "xhcr", "nohjt"), "toqcjmklja",
                                            Arrays.asList("oifiyipjxsqwpgr", "bznorcjxvsnby", "qabnmoc",
                                                "cyshurzafbljjgp"),
                                            "jkrlkhbzhfepg", Arrays.asList("qidtqajzyu", "pku"), "aierhhb",
                                            Arrays.asList("qex", "locx", "c"))),
                                new VirtualMachineResourceNames().withVmName("glu")
                                    .withHostName("a")
                                    .withNetworkInterfaces(Arrays.asList(new NetworkInterfaceResourceNames()
                                        .withNetworkInterfaceName("odxobnbdxkqpxok")))
                                    .withOsDiskName("ionpimexg")
                                    .withDataDiskNames(mapOf("dg", Arrays.asList("cp"))),
                                new VirtualMachineResourceNames().withVmName("ajrmvdjwzrlovmc")
                                    .withHostName("hijco")
                                    .withNetworkInterfaces(Arrays.asList(
                                        new NetworkInterfaceResourceNames().withNetworkInterfaceName("bzaqsqsycbkbfk"),
                                        new NetworkInterfaceResourceNames().withNetworkInterfaceName("kdkexxp")))
                                    .withOsDiskName("fmxa")
                                    .withDataDiskNames(mapOf("dtocj", Arrays.asList("pg"), "xibqeojnx",
                                        Arrays.asList("hvpmoue", "hd"), "zao", Arrays.asList("zvddntwndeicbtwn"), "hkh",
                                        Arrays.asList("uhrhcffcyddgl", "jthjqkwpyei", "xmqci", "q")))))
                        .withAvailabilitySetName("uigdtopbobjog")
                        .withLoadBalancer(new LoadBalancerResourceNames()
                            .withLoadBalancerName("w")
                            .withFrontendIpConfigurationNames(Arrays.asList("a"))
                            .withBackendPoolNames(Arrays.asList("z", "yvvtpgvdfgio"))
                            .withHealthProbeNames(Arrays.asList("tutqxlngxlefgug", "xkrxdqmi", "tthzrvqd", "abhjybi"))))
                .withApplicationServer(
                    new ApplicationServerFullResourceNames()
                        .withVirtualMachines(
                            Arrays
                                .asList(
                                    new VirtualMachineResourceNames().withVmName("fbowskanyk")
                                        .withHostName("lcuiywgqywgndr")
                                        .withNetworkInterfaces(Arrays.asList(
                                            new NetworkInterfaceResourceNames()
                                                .withNetworkInterfaceName("zgpphrcgyncocpe"),
                                            new NetworkInterfaceResourceNames().withNetworkInterfaceName("vmmcoofs"),
                                            new NetworkInterfaceResourceNames().withNetworkInterfaceName("zevgb")))
                                        .withOsDiskName("jqabcypmivkwlzuv")
                                        .withDataDiskNames(mapOf(
                                            "dpnqbq", Arrays.asList("nfnbacfionlebxe", "qgtz"), "ase",
                                            Arrays.asList("xrjfeallnwsub", "snjampmng", "zscxaqwo",
                                                "chcbonqvpkvlrxnj"))),
                                    new VirtualMachineResourceNames()
                                        .withVmName("heoflokeyyienjbd")
                                        .withHostName("tgrhpdjpjumas")
                                        .withNetworkInterfaces(Arrays.asList(new NetworkInterfaceResourceNames()
                                            .withNetworkInterfaceName("pqyegualhbxxh")))
                                        .withOsDiskName("jzzvdud")
                                        .withDataDiskNames(mapOf(
                                            "npgacftade", Arrays.asList("lfh", "twmcynpwlb"), "vudwx",
                                            Arrays.asList("nltyfsoppusuesnz", "dejbavo",
                                                "xzdmohctb"),
                                            "dyggdtjixhbku", Arrays.asList("dnvowg", "jjugwdkcglhslaz"))),
                                    new VirtualMachineResourceNames().withVmName("qweykhmenev")
                                        .withHostName("exfwhy")
                                        .withNetworkInterfaces(Arrays.asList(
                                            new NetworkInterfaceResourceNames().withNetworkInterfaceName("vyvdcs")))
                                        .withOsDiskName("ynnaam")
                                        .withDataDiskNames(
                                            mapOf("qsl", Arrays.asList("eh", "iqscjeypv", "ezrkgqhcjrefo", "gm"),
                                                "ysou", Arrays.asList("yvxyqjp", "cattpngjcrcczsq", "jh", "mdajv"), "a",
                                                Arrays.asList("e")))))
                        .withAvailabilitySetName("ae"))
                .withDatabaseServer(new DatabaseServerFullResourceNames()
                    .withVirtualMachines(
                        Arrays.asList(new VirtualMachineResourceNames().withVmName("hltrpmopjmcmatuo")
                            .withHostName("hfuiuaodsfc")
                            .withNetworkInterfaces(Arrays.asList(
                                new NetworkInterfaceResourceNames().withNetworkInterfaceName("odpuozmyzydag"),
                                new NetworkInterfaceResourceNames().withNetworkInterfaceName("axbezyiuo")))
                            .withOsDiskName("twhrdxwzywqsm")
                            .withDataDiskNames(mapOf("o", Arrays.asList("exim", "ryocfsfksymdd", "stkiiuxhqyud"),
                                "poczvyifqrvkdvjs", Arrays.asList("qn"), "vdfwatkpn", Arrays.asList("rm"), "pkwlhz",
                                Arrays.asList("lexxbczwtru", "iqzbq", "vsovmyokac")))))
                    .withAvailabilitySetName("bpxjmfl")
                    .withLoadBalancer(new LoadBalancerResourceNames().withLoadBalancerName("nchrkcciww")
                        .withFrontendIpConfigurationNames(Arrays.asList("qkhr", "ajiwkuo", "oskg"))
                        .withBackendPoolNames(Arrays.asList("uuimjmvxieduug"))
                        .withHealthProbeNames(Arrays.asList("jrrfbyaosve"))))
                .withSharedStorage(new SharedStorageResourceNames().withSharedStorageAccountName("onpc")
                    .withSharedStorageAccountPrivateEndPointName("ocohslkevleg"));
        model = BinaryData.fromObject(model).toObject(ThreeTierFullResourceNames.class);
        Assertions.assertEquals("bnwbxgjvtbvpyssz", model.centralServer().virtualMachines().get(0).vmName());
        Assertions.assertEquals("rujqg", model.centralServer().virtualMachines().get(0).hostName());
        Assertions.assertEquals("ouqfprwz",
            model.centralServer().virtualMachines().get(0).networkInterfaces().get(0).networkInterfaceName());
        Assertions.assertEquals("zuckyfi", model.centralServer().virtualMachines().get(0).osDiskName());
        Assertions.assertEquals("dfvzwdzuhty",
            model.centralServer().virtualMachines().get(0).dataDiskNames().get("wisdkft").get(0));
        Assertions.assertEquals("uigdtopbobjog", model.centralServer().availabilitySetName());
        Assertions.assertEquals("w", model.centralServer().loadBalancer().loadBalancerName());
        Assertions.assertEquals("a", model.centralServer().loadBalancer().frontendIpConfigurationNames().get(0));
        Assertions.assertEquals("z", model.centralServer().loadBalancer().backendPoolNames().get(0));
        Assertions.assertEquals("tutqxlngxlefgug", model.centralServer().loadBalancer().healthProbeNames().get(0));
        Assertions.assertEquals("fbowskanyk", model.applicationServer().virtualMachines().get(0).vmName());
        Assertions.assertEquals("lcuiywgqywgndr", model.applicationServer().virtualMachines().get(0).hostName());
        Assertions.assertEquals("zgpphrcgyncocpe",
            model.applicationServer().virtualMachines().get(0).networkInterfaces().get(0).networkInterfaceName());
        Assertions.assertEquals("jqabcypmivkwlzuv", model.applicationServer().virtualMachines().get(0).osDiskName());
        Assertions.assertEquals("nfnbacfionlebxe",
            model.applicationServer().virtualMachines().get(0).dataDiskNames().get("dpnqbq").get(0));
        Assertions.assertEquals("ae", model.applicationServer().availabilitySetName());
        Assertions.assertEquals("hltrpmopjmcmatuo", model.databaseServer().virtualMachines().get(0).vmName());
        Assertions.assertEquals("hfuiuaodsfc", model.databaseServer().virtualMachines().get(0).hostName());
        Assertions.assertEquals("odpuozmyzydag",
            model.databaseServer().virtualMachines().get(0).networkInterfaces().get(0).networkInterfaceName());
        Assertions.assertEquals("twhrdxwzywqsm", model.databaseServer().virtualMachines().get(0).osDiskName());
        Assertions.assertEquals("exim",
            model.databaseServer().virtualMachines().get(0).dataDiskNames().get("o").get(0));
        Assertions.assertEquals("bpxjmfl", model.databaseServer().availabilitySetName());
        Assertions.assertEquals("nchrkcciww", model.databaseServer().loadBalancer().loadBalancerName());
        Assertions.assertEquals("qkhr", model.databaseServer().loadBalancer().frontendIpConfigurationNames().get(0));
        Assertions.assertEquals("uuimjmvxieduug", model.databaseServer().loadBalancer().backendPoolNames().get(0));
        Assertions.assertEquals("jrrfbyaosve", model.databaseServer().loadBalancer().healthProbeNames().get(0));
        Assertions.assertEquals("onpc", model.sharedStorage().sharedStorageAccountName());
        Assertions.assertEquals("ocohslkevleg", model.sharedStorage().sharedStorageAccountPrivateEndPointName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
