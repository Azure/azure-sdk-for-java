// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.DiskSkuName;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapDiskConfiguration;
import org.junit.jupiter.api.Assertions;

public final class SapDiskConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapDiskConfiguration model = BinaryData.fromString(
            "{\"recommendedConfiguration\":{\"count\":3916115769735637263,\"sizeGB\":3926893940031522022,\"sku\":{\"name\":\"Premium_LRS\"}},\"supportedConfigurations\":[{\"sku\":{\"name\":\"Premium_ZRS\"},\"sizeGB\":7022736295865930419,\"minimumSupportedDiskCount\":2456249512258979423,\"maximumSupportedDiskCount\":5814437001624716680,\"iopsReadWrite\":1796224915838134100,\"mbpsReadWrite\":3194122656774081781,\"diskTier\":\"owwquuvxz\"}]}")
            .toObject(SapDiskConfiguration.class);
        Assertions.assertEquals(3916115769735637263L, model.recommendedConfiguration().count());
        Assertions.assertEquals(3926893940031522022L, model.recommendedConfiguration().sizeGB());
        Assertions.assertEquals(DiskSkuName.PREMIUM_LRS, model.recommendedConfiguration().sku().name());
        Assertions.assertEquals(DiskSkuName.PREMIUM_ZRS, model.supportedConfigurations().get(0).sku().name());
        Assertions.assertEquals(7022736295865930419L, model.supportedConfigurations().get(0).sizeGB());
        Assertions.assertEquals(2456249512258979423L,
            model.supportedConfigurations().get(0).minimumSupportedDiskCount());
        Assertions.assertEquals(5814437001624716680L,
            model.supportedConfigurations().get(0).maximumSupportedDiskCount());
        Assertions.assertEquals(1796224915838134100L, model.supportedConfigurations().get(0).iopsReadWrite());
        Assertions.assertEquals(3194122656774081781L, model.supportedConfigurations().get(0).mbpsReadWrite());
        Assertions.assertEquals("owwquuvxz", model.supportedConfigurations().get(0).diskTier());
    }
}
