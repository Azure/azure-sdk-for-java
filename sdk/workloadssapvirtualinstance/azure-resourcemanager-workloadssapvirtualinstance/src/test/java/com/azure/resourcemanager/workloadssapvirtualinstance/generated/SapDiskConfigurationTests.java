// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.DiskSkuName;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapDiskConfiguration;
import org.junit.jupiter.api.Assertions;

public final class SapDiskConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapDiskConfiguration model = BinaryData.fromString(
            "{\"recommendedConfiguration\":{\"count\":6855898880348717340,\"sizeGB\":4972928354083349711,\"sku\":{\"name\":\"Premium_ZRS\"}},\"supportedConfigurations\":[{\"sku\":{\"name\":\"Premium_LRS\"},\"sizeGB\":6861155578766594130,\"minimumSupportedDiskCount\":4489175795860033731,\"maximumSupportedDiskCount\":6506912961841032355,\"iopsReadWrite\":6737445379863438751,\"mbpsReadWrite\":3102181687094481130,\"diskTier\":\"cblylpstdbhhxsr\"}]}")
            .toObject(SapDiskConfiguration.class);
        Assertions.assertEquals(6855898880348717340L, model.recommendedConfiguration().count());
        Assertions.assertEquals(4972928354083349711L, model.recommendedConfiguration().sizeGB());
        Assertions.assertEquals(DiskSkuName.PREMIUM_ZRS, model.recommendedConfiguration().sku().name());
        Assertions.assertEquals(DiskSkuName.PREMIUM_LRS, model.supportedConfigurations().get(0).sku().name());
        Assertions.assertEquals(6861155578766594130L, model.supportedConfigurations().get(0).sizeGB());
        Assertions.assertEquals(4489175795860033731L,
            model.supportedConfigurations().get(0).minimumSupportedDiskCount());
        Assertions.assertEquals(6506912961841032355L,
            model.supportedConfigurations().get(0).maximumSupportedDiskCount());
        Assertions.assertEquals(6737445379863438751L, model.supportedConfigurations().get(0).iopsReadWrite());
        Assertions.assertEquals(3102181687094481130L, model.supportedConfigurations().get(0).mbpsReadWrite());
        Assertions.assertEquals("cblylpstdbhhxsr", model.supportedConfigurations().get(0).diskTier());
    }
}
