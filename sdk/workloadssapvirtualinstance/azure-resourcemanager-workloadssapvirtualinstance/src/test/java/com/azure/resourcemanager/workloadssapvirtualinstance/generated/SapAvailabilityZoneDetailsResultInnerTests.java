// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadssapvirtualinstance.fluent.models.SapAvailabilityZoneDetailsResultInner;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SapAvailabilityZonePair;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SapAvailabilityZoneDetailsResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapAvailabilityZoneDetailsResultInner model = BinaryData.fromString(
            "{\"availabilityZonePairs\":[{\"zoneA\":8216479127673757607,\"zoneB\":3909032426433142131},{\"zoneA\":9207623512944391890,\"zoneB\":2551376007277723925},{\"zoneA\":2922662008159748967,\"zoneB\":8549474011903598336},{\"zoneA\":8179108615259937676,\"zoneB\":1367507172981204915}]}")
            .toObject(SapAvailabilityZoneDetailsResultInner.class);
        Assertions.assertEquals(8216479127673757607L, model.availabilityZonePairs().get(0).zoneA());
        Assertions.assertEquals(3909032426433142131L, model.availabilityZonePairs().get(0).zoneB());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SapAvailabilityZoneDetailsResultInner model
            = new SapAvailabilityZoneDetailsResultInner().withAvailabilityZonePairs(Arrays.asList(
                new SapAvailabilityZonePair().withZoneA(8216479127673757607L).withZoneB(3909032426433142131L),
                new SapAvailabilityZonePair().withZoneA(9207623512944391890L).withZoneB(2551376007277723925L),
                new SapAvailabilityZonePair().withZoneA(2922662008159748967L).withZoneB(8549474011903598336L),
                new SapAvailabilityZonePair().withZoneA(8179108615259937676L).withZoneB(1367507172981204915L)));
        model = BinaryData.fromObject(model).toObject(SapAvailabilityZoneDetailsResultInner.class);
        Assertions.assertEquals(8216479127673757607L, model.availabilityZonePairs().get(0).zoneA());
        Assertions.assertEquals(3909032426433142131L, model.availabilityZonePairs().get(0).zoneB());
    }
}
