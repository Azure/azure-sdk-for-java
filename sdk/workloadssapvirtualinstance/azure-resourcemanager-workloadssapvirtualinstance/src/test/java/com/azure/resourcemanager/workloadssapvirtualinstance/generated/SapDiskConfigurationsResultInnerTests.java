// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadssapvirtualinstance.fluent.models.SapDiskConfigurationsResultInner;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.DiskSkuName;
import org.junit.jupiter.api.Assertions;

public final class SapDiskConfigurationsResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapDiskConfigurationsResultInner model = BinaryData.fromString(
            "{\"volumeConfigurations\":{\"mdnbbglzpswiy\":{\"recommendedConfiguration\":{\"count\":649396762028121762,\"sizeGB\":2254410049311132941,\"sku\":{\"name\":\"Premium_LRS\"}},\"supportedConfigurations\":[{\"sku\":{\"name\":\"UltraSSD_LRS\"},\"sizeGB\":2844407552586736400,\"minimumSupportedDiskCount\":1213698298627967983,\"maximumSupportedDiskCount\":6355558270413458656,\"iopsReadWrite\":7426738628868732160,\"mbpsReadWrite\":1771287073255058648,\"diskTier\":\"thnzd\"},{\"sku\":{\"name\":\"StandardSSD_ZRS\"},\"sizeGB\":5495593791333238978,\"minimumSupportedDiskCount\":3359106947946927785,\"maximumSupportedDiskCount\":6807110880939555009,\"iopsReadWrite\":7110253066335366033,\"mbpsReadWrite\":3972584781562834775,\"diskTier\":\"lkthu\"},{\"sku\":{\"name\":\"StandardSSD_LRS\"},\"sizeGB\":7247562094166892999,\"minimumSupportedDiskCount\":3818900650513527353,\"maximumSupportedDiskCount\":6036876067964758853,\"iopsReadWrite\":4762733948592023559,\"mbpsReadWrite\":2689162209131114224,\"diskTier\":\"vaolpsslqlf\"}]}}}")
            .toObject(SapDiskConfigurationsResultInner.class);
        Assertions.assertEquals(649396762028121762L,
            model.volumeConfigurations().get("mdnbbglzpswiy").recommendedConfiguration().count());
        Assertions.assertEquals(2254410049311132941L,
            model.volumeConfigurations().get("mdnbbglzpswiy").recommendedConfiguration().sizeGB());
        Assertions.assertEquals(DiskSkuName.PREMIUM_LRS,
            model.volumeConfigurations().get("mdnbbglzpswiy").recommendedConfiguration().sku().name());
        Assertions.assertEquals(DiskSkuName.ULTRA_SSD_LRS,
            model.volumeConfigurations().get("mdnbbglzpswiy").supportedConfigurations().get(0).sku().name());
        Assertions.assertEquals(2844407552586736400L,
            model.volumeConfigurations().get("mdnbbglzpswiy").supportedConfigurations().get(0).sizeGB());
        Assertions.assertEquals(1213698298627967983L,
            model.volumeConfigurations()
                .get("mdnbbglzpswiy")
                .supportedConfigurations()
                .get(0)
                .minimumSupportedDiskCount());
        Assertions.assertEquals(6355558270413458656L,
            model.volumeConfigurations()
                .get("mdnbbglzpswiy")
                .supportedConfigurations()
                .get(0)
                .maximumSupportedDiskCount());
        Assertions.assertEquals(7426738628868732160L,
            model.volumeConfigurations().get("mdnbbglzpswiy").supportedConfigurations().get(0).iopsReadWrite());
        Assertions.assertEquals(1771287073255058648L,
            model.volumeConfigurations().get("mdnbbglzpswiy").supportedConfigurations().get(0).mbpsReadWrite());
        Assertions.assertEquals("thnzd",
            model.volumeConfigurations().get("mdnbbglzpswiy").supportedConfigurations().get(0).diskTier());
    }
}
