// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadssapvirtualinstance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.ManagedResourcesNetworkAccessType;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SAPVirtualInstanceIdentity;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.SAPVirtualInstanceIdentityType;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.UpdateSapVirtualInstanceProperties;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.UpdateSapVirtualInstanceRequest;
import com.azure.resourcemanager.workloadssapvirtualinstance.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class UpdateSapVirtualInstanceRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateSapVirtualInstanceRequest model = BinaryData.fromString(
            "{\"tags\":{\"xipeilpjzuaejx\":\"hnnpr\",\"mv\":\"ultskzbbtdz\"},\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{\"waboe\":{\"clientId\":\"ozuhkfp\",\"principalId\":\"jyofdxluusdtto\"}}},\"properties\":{\"managedResourcesNetworkAccessType\":\"Private\"}}")
            .toObject(UpdateSapVirtualInstanceRequest.class);
        Assertions.assertEquals("hnnpr", model.tags().get("xipeilpjzuaejx"));
        Assertions.assertEquals(SAPVirtualInstanceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals(ManagedResourcesNetworkAccessType.PRIVATE,
            model.properties().managedResourcesNetworkAccessType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateSapVirtualInstanceRequest model
            = new UpdateSapVirtualInstanceRequest().withTags(mapOf("xipeilpjzuaejx", "hnnpr", "mv", "ultskzbbtdz"))
                .withIdentity(new SAPVirtualInstanceIdentity().withType(SAPVirtualInstanceIdentityType.NONE)
                    .withUserAssignedIdentities(mapOf("waboe", new UserAssignedIdentity())))
                .withProperties(new UpdateSapVirtualInstanceProperties()
                    .withManagedResourcesNetworkAccessType(ManagedResourcesNetworkAccessType.PRIVATE));
        model = BinaryData.fromObject(model).toObject(UpdateSapVirtualInstanceRequest.class);
        Assertions.assertEquals("hnnpr", model.tags().get("xipeilpjzuaejx"));
        Assertions.assertEquals(SAPVirtualInstanceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals(ManagedResourcesNetworkAccessType.PRIVATE,
            model.properties().managedResourcesNetworkAccessType());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
