// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.peering.PeeringManager;
import com.azure.resourcemanager.peering.models.PeeringService;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PeeringServicesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"sku\":{\"name\":\"kciayzri\"},\"properties\":{\"peeringServiceLocation\":\"yawfvjlboxq\",\"peeringServiceProvider\":\"jlmxhomdynhd\",\"provisioningState\":\"Succeeded\",\"providerPrimaryPeeringLocation\":\"umbnraauzzp\",\"providerBackupPeeringLocation\":\"a\"},\"location\":\"ysdzhez\",\"tags\":{\"kphhq\":\"aiqyuvvfo\",\"luwmncst\":\"ikvylauya\",\"bvpoekrsgsgbdhu\":\"ijf\"},\"id\":\"qgnjdgkynscli\",\"name\":\"hzvhxnkomtkubo\",\"type\":\"ppnvdxz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PeeringManager manager = PeeringManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<PeeringService> response
            = manager.peeringServices().listByResourceGroup("mldgxobfirc", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("kciayzri", response.iterator().next().sku().name());
        Assertions.assertEquals("ysdzhez", response.iterator().next().location());
        Assertions.assertEquals("aiqyuvvfo", response.iterator().next().tags().get("kphhq"));
        Assertions.assertEquals("yawfvjlboxq", response.iterator().next().peeringServiceLocation());
        Assertions.assertEquals("jlmxhomdynhd", response.iterator().next().peeringServiceProvider());
        Assertions.assertEquals("umbnraauzzp", response.iterator().next().providerPrimaryPeeringLocation());
        Assertions.assertEquals("a", response.iterator().next().providerBackupPeeringLocation());
    }
}
