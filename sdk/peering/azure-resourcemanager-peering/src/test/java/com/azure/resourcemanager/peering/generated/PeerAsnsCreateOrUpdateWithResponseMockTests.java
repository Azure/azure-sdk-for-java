// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.peering.PeeringManager;
import com.azure.resourcemanager.peering.models.ContactDetail;
import com.azure.resourcemanager.peering.models.PeerAsn;
import com.azure.resourcemanager.peering.models.Role;
import com.azure.resourcemanager.peering.models.ValidationState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PeerAsnsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"peerAsn\":1109207713,\"peerContactDetail\":[{\"role\":\"Noc\",\"email\":\"hkh\",\"phone\":\"xkhnzbonlwnto\"},{\"role\":\"Escalation\",\"email\":\"dwbwhkszzcmrvexz\",\"phone\":\"bt\"},{\"role\":\"Technical\",\"email\":\"ra\",\"phone\":\"zkoowtlmnguxawqa\"}],\"peerName\":\"syuuximerq\",\"validationState\":\"None\",\"errorMessage\":\"yznkby\"},\"id\":\"utwpfhp\",\"name\":\"gmhrskdsnfdsdoak\",\"type\":\"tdlmkkzevd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PeeringManager manager = PeeringManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PeerAsn response = manager.peerAsns()
            .define("aeburuvdmo")
            .withPeerAsn(1719388893)
            .withPeerContactDetail(Arrays.asList(
                new ContactDetail().withRole(Role.TECHNICAL).withEmail("mqoefkifrvtpuqu").withPhone("qlgkfbtn"),
                new ContactDetail().withRole(Role.ESCALATION).withEmail("n").withPhone("jcntuj")))
            .withPeerName("c")
            .withValidationState(ValidationState.NONE)
            .create();

        Assertions.assertEquals(1109207713, response.peerAsn());
        Assertions.assertEquals(Role.NOC, response.peerContactDetail().get(0).role());
        Assertions.assertEquals("hkh", response.peerContactDetail().get(0).email());
        Assertions.assertEquals("xkhnzbonlwnto", response.peerContactDetail().get(0).phone());
        Assertions.assertEquals("syuuximerq", response.peerName());
        Assertions.assertEquals(ValidationState.NONE, response.validationState());
    }
}
