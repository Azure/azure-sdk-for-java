// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner;
import com.azure.resourcemanager.peering.models.PeeringServiceLocationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PeeringServiceLocationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PeeringServiceLocationListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"country\":\"vbxwyjsflhh\",\"state\":\"aln\",\"azureRegion\":\"xisxyawjoyaqcsl\"},\"id\":\"jpkiidzyexznelix\",\"name\":\"nr\",\"type\":\"tfolhbnx\"},{\"properties\":{\"country\":\"laulppg\",\"state\":\"tpnapnyiropuhpig\",\"azureRegion\":\"gylgqgitxmedjvcs\"},\"id\":\"ynqwwncwzzhxgk\",\"name\":\"rmgucnap\",\"type\":\"t\"},{\"properties\":{\"country\":\"llwptfdy\",\"state\":\"fqbuaceopzf\",\"azureRegion\":\"hhuao\"},\"id\":\"ppcqeqxolz\",\"name\":\"ahzxctobgbk\",\"type\":\"moizpos\"}],\"nextLink\":\"grcfb\"}")
            .toObject(PeeringServiceLocationListResult.class);
        Assertions.assertEquals("vbxwyjsflhh", model.value().get(0).country());
        Assertions.assertEquals("aln", model.value().get(0).state());
        Assertions.assertEquals("xisxyawjoyaqcsl", model.value().get(0).azureRegion());
        Assertions.assertEquals("grcfb", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PeeringServiceLocationListResult model = new PeeringServiceLocationListResult().withValue(Arrays.asList(
            new PeeringServiceLocationInner().withCountry("vbxwyjsflhh")
                .withState("aln")
                .withAzureRegion("xisxyawjoyaqcsl"),
            new PeeringServiceLocationInner().withCountry("laulppg")
                .withState("tpnapnyiropuhpig")
                .withAzureRegion("gylgqgitxmedjvcs"),
            new PeeringServiceLocationInner().withCountry("llwptfdy")
                .withState("fqbuaceopzf")
                .withAzureRegion("hhuao")))
            .withNextLink("grcfb");
        model = BinaryData.fromObject(model).toObject(PeeringServiceLocationListResult.class);
        Assertions.assertEquals("vbxwyjsflhh", model.value().get(0).country());
        Assertions.assertEquals("aln", model.value().get(0).state());
        Assertions.assertEquals("xisxyawjoyaqcsl", model.value().get(0).azureRegion());
        Assertions.assertEquals("grcfb", model.nextLink());
    }
}
