// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.peering.fluent.models.PeerAsnInner;
import com.azure.resourcemanager.peering.models.ContactDetail;
import com.azure.resourcemanager.peering.models.Role;
import com.azure.resourcemanager.peering.models.ValidationState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PeerAsnInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PeerAsnInner model = BinaryData.fromString(
            "{\"properties\":{\"peerAsn\":1261399302,\"peerContactDetail\":[{\"role\":\"Other\",\"email\":\"mcl\",\"phone\":\"ijcoejctb\"},{\"role\":\"Noc\",\"email\":\"qsycbkbfkgu\",\"phone\":\"kexxppof\"},{\"role\":\"Policy\",\"email\":\"c\",\"phone\":\"pg\"},{\"role\":\"Policy\",\"email\":\"c\",\"phone\":\"xhvpmoue\"}],\"peerName\":\"dzxibqeojnxqbzvd\",\"validationState\":\"None\",\"errorMessage\":\"ndei\"},\"id\":\"btwnpzaoqvuhrhcf\",\"name\":\"cyddglmjthjqk\",\"type\":\"pyeicxm\"}")
            .toObject(PeerAsnInner.class);
        Assertions.assertEquals(1261399302, model.peerAsn());
        Assertions.assertEquals(Role.OTHER, model.peerContactDetail().get(0).role());
        Assertions.assertEquals("mcl", model.peerContactDetail().get(0).email());
        Assertions.assertEquals("ijcoejctb", model.peerContactDetail().get(0).phone());
        Assertions.assertEquals("dzxibqeojnxqbzvd", model.peerName());
        Assertions.assertEquals(ValidationState.NONE, model.validationState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PeerAsnInner model = new PeerAsnInner().withPeerAsn(1261399302)
            .withPeerContactDetail(
                Arrays.asList(new ContactDetail().withRole(Role.OTHER).withEmail("mcl").withPhone("ijcoejctb"),
                    new ContactDetail().withRole(Role.NOC).withEmail("qsycbkbfkgu").withPhone("kexxppof"),
                    new ContactDetail().withRole(Role.POLICY).withEmail("c").withPhone("pg"),
                    new ContactDetail().withRole(Role.POLICY).withEmail("c").withPhone("xhvpmoue")))
            .withPeerName("dzxibqeojnxqbzvd")
            .withValidationState(ValidationState.NONE);
        model = BinaryData.fromObject(model).toObject(PeerAsnInner.class);
        Assertions.assertEquals(1261399302, model.peerAsn());
        Assertions.assertEquals(Role.OTHER, model.peerContactDetail().get(0).role());
        Assertions.assertEquals("mcl", model.peerContactDetail().get(0).email());
        Assertions.assertEquals("ijcoejctb", model.peerContactDetail().get(0).phone());
        Assertions.assertEquals("dzxibqeojnxqbzvd", model.peerName());
        Assertions.assertEquals(ValidationState.NONE, model.validationState());
    }
}
