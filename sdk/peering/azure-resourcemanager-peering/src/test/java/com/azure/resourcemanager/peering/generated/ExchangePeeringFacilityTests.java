// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.peering.models.ExchangePeeringFacility;
import org.junit.jupiter.api.Assertions;

public final class ExchangePeeringFacilityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExchangePeeringFacility model = BinaryData.fromString(
            "{\"exchangeName\":\"jbhckfrlhr\",\"bandwidthInMbps\":1228255689,\"microsoftIPv4Address\":\"yvpycanuzbpzk\",\"microsoftIPv6Address\":\"kuwbcrnwb\",\"facilityIPv4Prefix\":\"hhseyv\",\"facilityIPv6Prefix\":\"srtslhspkdeem\",\"peeringDBFacilityId\":441408788,\"peeringDBFacilityLink\":\"xagkvtmelmqkrh\"}")
            .toObject(ExchangePeeringFacility.class);
        Assertions.assertEquals("jbhckfrlhr", model.exchangeName());
        Assertions.assertEquals(1228255689, model.bandwidthInMbps());
        Assertions.assertEquals("yvpycanuzbpzk", model.microsoftIPv4Address());
        Assertions.assertEquals("kuwbcrnwb", model.microsoftIPv6Address());
        Assertions.assertEquals("hhseyv", model.facilityIPv4Prefix());
        Assertions.assertEquals("srtslhspkdeem", model.facilityIPv6Prefix());
        Assertions.assertEquals(441408788, model.peeringDBFacilityId());
        Assertions.assertEquals("xagkvtmelmqkrh", model.peeringDBFacilityLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExchangePeeringFacility model = new ExchangePeeringFacility().withExchangeName("jbhckfrlhr")
            .withBandwidthInMbps(1228255689)
            .withMicrosoftIPv4Address("yvpycanuzbpzk")
            .withMicrosoftIPv6Address("kuwbcrnwb")
            .withFacilityIPv4Prefix("hhseyv")
            .withFacilityIPv6Prefix("srtslhspkdeem")
            .withPeeringDBFacilityId(441408788)
            .withPeeringDBFacilityLink("xagkvtmelmqkrh");
        model = BinaryData.fromObject(model).toObject(ExchangePeeringFacility.class);
        Assertions.assertEquals("jbhckfrlhr", model.exchangeName());
        Assertions.assertEquals(1228255689, model.bandwidthInMbps());
        Assertions.assertEquals("yvpycanuzbpzk", model.microsoftIPv4Address());
        Assertions.assertEquals("kuwbcrnwb", model.microsoftIPv6Address());
        Assertions.assertEquals("hhseyv", model.facilityIPv4Prefix());
        Assertions.assertEquals("srtslhspkdeem", model.facilityIPv6Prefix());
        Assertions.assertEquals(441408788, model.peeringDBFacilityId());
        Assertions.assertEquals("xagkvtmelmqkrh", model.peeringDBFacilityLink());
    }
}
