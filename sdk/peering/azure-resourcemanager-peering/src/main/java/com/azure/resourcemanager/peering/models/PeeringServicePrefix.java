// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner;

/** An immutable client-side representation of PeeringServicePrefix. */
public interface PeeringServicePrefix {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the prefix property: Valid route prefix.
     *
     * @return the prefix value.
     */
    String prefix();

    /**
     * Gets the prefixValidationState property: The prefix validation state.
     *
     * @return the prefixValidationState value.
     */
    PrefixValidationState prefixValidationState();

    /**
     * Gets the learnedType property: The prefix learned type.
     *
     * @return the learnedType value.
     */
    LearnedType learnedType();

    /**
     * Gets the provisioningState property: The provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the inner com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner object.
     *
     * @return the inner object.
     */
    PeeringServicePrefixInner innerModel();

    /** The entirety of the PeeringServicePrefix definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The PeeringServicePrefix definition stages. */
    interface DefinitionStages {
        /** The first stage of the PeeringServicePrefix definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the PeeringServicePrefix definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, peeringServiceName.
             *
             * @param resourceGroupName The resource group name.
             * @param peeringServiceName The peering service name.
             * @return the next definition stage.
             */
            WithCreate withExistingPeeringService(String resourceGroupName, String peeringServiceName);
        }
        /**
         * The stage of the PeeringServicePrefix definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithPrefix,
                DefinitionStages.WithPrefixValidationState,
                DefinitionStages.WithLearnedType {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            PeeringServicePrefix create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            PeeringServicePrefix create(Context context);
        }
        /** The stage of the PeeringServicePrefix definition allowing to specify prefix. */
        interface WithPrefix {
            /**
             * Specifies the prefix property: Valid route prefix.
             *
             * @param prefix Valid route prefix.
             * @return the next definition stage.
             */
            WithCreate withPrefix(String prefix);
        }
        /** The stage of the PeeringServicePrefix definition allowing to specify prefixValidationState. */
        interface WithPrefixValidationState {
            /**
             * Specifies the prefixValidationState property: The prefix validation state.
             *
             * @param prefixValidationState The prefix validation state.
             * @return the next definition stage.
             */
            WithCreate withPrefixValidationState(PrefixValidationState prefixValidationState);
        }
        /** The stage of the PeeringServicePrefix definition allowing to specify learnedType. */
        interface WithLearnedType {
            /**
             * Specifies the learnedType property: The prefix learned type.
             *
             * @param learnedType The prefix learned type.
             * @return the next definition stage.
             */
            WithCreate withLearnedType(LearnedType learnedType);
        }
    }
    /**
     * Begins update for the PeeringServicePrefix resource.
     *
     * @return the stage of resource update.
     */
    PeeringServicePrefix.Update update();

    /** The template for PeeringServicePrefix update. */
    interface Update
        extends UpdateStages.WithPrefix, UpdateStages.WithPrefixValidationState, UpdateStages.WithLearnedType {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        PeeringServicePrefix apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        PeeringServicePrefix apply(Context context);
    }
    /** The PeeringServicePrefix update stages. */
    interface UpdateStages {
        /** The stage of the PeeringServicePrefix update allowing to specify prefix. */
        interface WithPrefix {
            /**
             * Specifies the prefix property: Valid route prefix.
             *
             * @param prefix Valid route prefix.
             * @return the next definition stage.
             */
            Update withPrefix(String prefix);
        }
        /** The stage of the PeeringServicePrefix update allowing to specify prefixValidationState. */
        interface WithPrefixValidationState {
            /**
             * Specifies the prefixValidationState property: The prefix validation state.
             *
             * @param prefixValidationState The prefix validation state.
             * @return the next definition stage.
             */
            Update withPrefixValidationState(PrefixValidationState prefixValidationState);
        }
        /** The stage of the PeeringServicePrefix update allowing to specify learnedType. */
        interface WithLearnedType {
            /**
             * Specifies the learnedType property: The prefix learned type.
             *
             * @param learnedType The prefix learned type.
             * @return the next definition stage.
             */
            Update withLearnedType(LearnedType learnedType);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    PeeringServicePrefix refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    PeeringServicePrefix refresh(Context context);
}
