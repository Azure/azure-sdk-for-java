// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.Resource;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.peering.PeeringManager;
import com.azure.resourcemanager.peering.fluent.PeeringServiceCountriesClient;
import com.azure.resourcemanager.peering.models.PeeringServiceCountries;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class PeeringServiceCountriesImpl implements PeeringServiceCountries {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PeeringServiceCountriesImpl.class);

    private final PeeringServiceCountriesClient innerClient;

    private final PeeringManager serviceManager;

    public PeeringServiceCountriesImpl(PeeringServiceCountriesClient innerClient, PeeringManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Resource> list() {
        return this.serviceClient().list();
    }

    public PagedIterable<Resource> list(Context context) {
        return this.serviceClient().list(context);
    }

    private PeeringServiceCountriesClient serviceClient() {
        return this.innerClient;
    }

    private PeeringManager manager() {
        return this.serviceManager;
    }
}
