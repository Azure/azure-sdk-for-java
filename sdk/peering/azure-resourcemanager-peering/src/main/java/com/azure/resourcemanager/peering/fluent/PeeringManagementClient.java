// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.fluent;

import com.azure.core.http.HttpPipeline;
import java.time.Duration;

/** The interface for PeeringManagementClient class. */
public interface PeeringManagementClient {
    /**
     * Gets The Azure subscription ID.
     *
     * @return the subscriptionId value.
     */
    String getSubscriptionId();

    /**
     * Gets server parameter.
     *
     * @return the endpoint value.
     */
    String getEndpoint();

    /**
     * Gets Api Version.
     *
     * @return the apiVersion value.
     */
    String getApiVersion();

    /**
     * Gets The HTTP pipeline to send requests through.
     *
     * @return the httpPipeline value.
     */
    HttpPipeline getHttpPipeline();

    /**
     * Gets The default poll interval for long-running operation.
     *
     * @return the defaultPollInterval value.
     */
    Duration getDefaultPollInterval();

    /**
     * Gets the CdnPeeringPrefixesClient object to access its operations.
     *
     * @return the CdnPeeringPrefixesClient object.
     */
    CdnPeeringPrefixesClient getCdnPeeringPrefixes();

    /**
     * Gets the ResourceProvidersClient object to access its operations.
     *
     * @return the ResourceProvidersClient object.
     */
    ResourceProvidersClient getResourceProviders();

    /**
     * Gets the LegacyPeeringsClient object to access its operations.
     *
     * @return the LegacyPeeringsClient object.
     */
    LegacyPeeringsClient getLegacyPeerings();

    /**
     * Gets the OperationsClient object to access its operations.
     *
     * @return the OperationsClient object.
     */
    OperationsClient getOperations();

    /**
     * Gets the PeerAsnsClient object to access its operations.
     *
     * @return the PeerAsnsClient object.
     */
    PeerAsnsClient getPeerAsns();

    /**
     * Gets the PeeringLocationsClient object to access its operations.
     *
     * @return the PeeringLocationsClient object.
     */
    PeeringLocationsClient getPeeringLocations();

    /**
     * Gets the RegisteredAsnsClient object to access its operations.
     *
     * @return the RegisteredAsnsClient object.
     */
    RegisteredAsnsClient getRegisteredAsns();

    /**
     * Gets the RegisteredPrefixesClient object to access its operations.
     *
     * @return the RegisteredPrefixesClient object.
     */
    RegisteredPrefixesClient getRegisteredPrefixes();

    /**
     * Gets the PeeringsClient object to access its operations.
     *
     * @return the PeeringsClient object.
     */
    PeeringsClient getPeerings();

    /**
     * Gets the ReceivedRoutesClient object to access its operations.
     *
     * @return the ReceivedRoutesClient object.
     */
    ReceivedRoutesClient getReceivedRoutes();

    /**
     * Gets the PeeringServiceCountriesClient object to access its operations.
     *
     * @return the PeeringServiceCountriesClient object.
     */
    PeeringServiceCountriesClient getPeeringServiceCountries();

    /**
     * Gets the PeeringServiceLocationsClient object to access its operations.
     *
     * @return the PeeringServiceLocationsClient object.
     */
    PeeringServiceLocationsClient getPeeringServiceLocations();

    /**
     * Gets the PrefixesClient object to access its operations.
     *
     * @return the PrefixesClient object.
     */
    PrefixesClient getPrefixes();

    /**
     * Gets the PeeringServiceProvidersClient object to access its operations.
     *
     * @return the PeeringServiceProvidersClient object.
     */
    PeeringServiceProvidersClient getPeeringServiceProviders();

    /**
     * Gets the PeeringServicesClient object to access its operations.
     *
     * @return the PeeringServicesClient object.
     */
    PeeringServicesClient getPeeringServices();
}
