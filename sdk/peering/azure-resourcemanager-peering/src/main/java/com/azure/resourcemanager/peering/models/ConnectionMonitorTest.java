// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.peering.fluent.models.ConnectionMonitorTestInner;
import java.util.List;

/** An immutable client-side representation of ConnectionMonitorTest. */
public interface ConnectionMonitorTest {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the sourceAgent property: The Connection Monitor test source agent.
     *
     * @return the sourceAgent value.
     */
    String sourceAgent();

    /**
     * Gets the destination property: The Connection Monitor test destination.
     *
     * @return the destination value.
     */
    String destination();

    /**
     * Gets the destinationPort property: The Connection Monitor test destination port.
     *
     * @return the destinationPort value.
     */
    Integer destinationPort();

    /**
     * Gets the testFrequencyInSec property: The Connection Monitor test frequency in seconds.
     *
     * @return the testFrequencyInSec value.
     */
    Integer testFrequencyInSec();

    /**
     * Gets the isTestSuccessful property: The flag that indicates if the Connection Monitor test is successful or not.
     *
     * @return the isTestSuccessful value.
     */
    Boolean isTestSuccessful();

    /**
     * Gets the path property: The path representing the Connection Monitor test.
     *
     * @return the path value.
     */
    List<String> path();

    /**
     * Gets the provisioningState property: The provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.peering.fluent.models.ConnectionMonitorTestInner object.
     *
     * @return the inner object.
     */
    ConnectionMonitorTestInner innerModel();

    /** The entirety of the ConnectionMonitorTest definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ConnectionMonitorTest definition stages. */
    interface DefinitionStages {
        /** The first stage of the ConnectionMonitorTest definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ConnectionMonitorTest definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, peeringServiceName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param peeringServiceName The name of the peering service.
             * @return the next definition stage.
             */
            WithCreate withExistingPeeringService(String resourceGroupName, String peeringServiceName);
        }
        /**
         * The stage of the ConnectionMonitorTest definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithSourceAgent,
                DefinitionStages.WithDestination,
                DefinitionStages.WithDestinationPort,
                DefinitionStages.WithTestFrequencyInSec {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ConnectionMonitorTest create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ConnectionMonitorTest create(Context context);
        }
        /** The stage of the ConnectionMonitorTest definition allowing to specify sourceAgent. */
        interface WithSourceAgent {
            /**
             * Specifies the sourceAgent property: The Connection Monitor test source agent.
             *
             * @param sourceAgent The Connection Monitor test source agent.
             * @return the next definition stage.
             */
            WithCreate withSourceAgent(String sourceAgent);
        }
        /** The stage of the ConnectionMonitorTest definition allowing to specify destination. */
        interface WithDestination {
            /**
             * Specifies the destination property: The Connection Monitor test destination.
             *
             * @param destination The Connection Monitor test destination.
             * @return the next definition stage.
             */
            WithCreate withDestination(String destination);
        }
        /** The stage of the ConnectionMonitorTest definition allowing to specify destinationPort. */
        interface WithDestinationPort {
            /**
             * Specifies the destinationPort property: The Connection Monitor test destination port.
             *
             * @param destinationPort The Connection Monitor test destination port.
             * @return the next definition stage.
             */
            WithCreate withDestinationPort(Integer destinationPort);
        }
        /** The stage of the ConnectionMonitorTest definition allowing to specify testFrequencyInSec. */
        interface WithTestFrequencyInSec {
            /**
             * Specifies the testFrequencyInSec property: The Connection Monitor test frequency in seconds.
             *
             * @param testFrequencyInSec The Connection Monitor test frequency in seconds.
             * @return the next definition stage.
             */
            WithCreate withTestFrequencyInSec(Integer testFrequencyInSec);
        }
    }
    /**
     * Begins update for the ConnectionMonitorTest resource.
     *
     * @return the stage of resource update.
     */
    ConnectionMonitorTest.Update update();

    /** The template for ConnectionMonitorTest update. */
    interface Update
        extends UpdateStages.WithSourceAgent,
            UpdateStages.WithDestination,
            UpdateStages.WithDestinationPort,
            UpdateStages.WithTestFrequencyInSec {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ConnectionMonitorTest apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ConnectionMonitorTest apply(Context context);
    }
    /** The ConnectionMonitorTest update stages. */
    interface UpdateStages {
        /** The stage of the ConnectionMonitorTest update allowing to specify sourceAgent. */
        interface WithSourceAgent {
            /**
             * Specifies the sourceAgent property: The Connection Monitor test source agent.
             *
             * @param sourceAgent The Connection Monitor test source agent.
             * @return the next definition stage.
             */
            Update withSourceAgent(String sourceAgent);
        }
        /** The stage of the ConnectionMonitorTest update allowing to specify destination. */
        interface WithDestination {
            /**
             * Specifies the destination property: The Connection Monitor test destination.
             *
             * @param destination The Connection Monitor test destination.
             * @return the next definition stage.
             */
            Update withDestination(String destination);
        }
        /** The stage of the ConnectionMonitorTest update allowing to specify destinationPort. */
        interface WithDestinationPort {
            /**
             * Specifies the destinationPort property: The Connection Monitor test destination port.
             *
             * @param destinationPort The Connection Monitor test destination port.
             * @return the next definition stage.
             */
            Update withDestinationPort(Integer destinationPort);
        }
        /** The stage of the ConnectionMonitorTest update allowing to specify testFrequencyInSec. */
        interface WithTestFrequencyInSec {
            /**
             * Specifies the testFrequencyInSec property: The Connection Monitor test frequency in seconds.
             *
             * @param testFrequencyInSec The Connection Monitor test frequency in seconds.
             * @return the next definition stage.
             */
            Update withTestFrequencyInSec(Integer testFrequencyInSec);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ConnectionMonitorTest refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ConnectionMonitorTest refresh(Context context);
}
