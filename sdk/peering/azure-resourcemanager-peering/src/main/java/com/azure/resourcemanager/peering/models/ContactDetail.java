// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The contact detail class.
 */
@Fluent
public final class ContactDetail implements JsonSerializable<ContactDetail> {
    /*
     * The role of the contact.
     */
    private Role role;

    /*
     * The e-mail address of the contact.
     */
    private String email;

    /*
     * The phone number of the contact.
     */
    private String phone;

    /**
     * Creates an instance of ContactDetail class.
     */
    public ContactDetail() {
    }

    /**
     * Get the role property: The role of the contact.
     * 
     * @return the role value.
     */
    public Role role() {
        return this.role;
    }

    /**
     * Set the role property: The role of the contact.
     * 
     * @param role the role value to set.
     * @return the ContactDetail object itself.
     */
    public ContactDetail withRole(Role role) {
        this.role = role;
        return this;
    }

    /**
     * Get the email property: The e-mail address of the contact.
     * 
     * @return the email value.
     */
    public String email() {
        return this.email;
    }

    /**
     * Set the email property: The e-mail address of the contact.
     * 
     * @param email the email value to set.
     * @return the ContactDetail object itself.
     */
    public ContactDetail withEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Get the phone property: The phone number of the contact.
     * 
     * @return the phone value.
     */
    public String phone() {
        return this.phone;
    }

    /**
     * Set the phone property: The phone number of the contact.
     * 
     * @param phone the phone value to set.
     * @return the ContactDetail object itself.
     */
    public ContactDetail withPhone(String phone) {
        this.phone = phone;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("role", this.role == null ? null : this.role.toString());
        jsonWriter.writeStringField("email", this.email);
        jsonWriter.writeStringField("phone", this.phone);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ContactDetail from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ContactDetail if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ContactDetail.
     */
    public static ContactDetail fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ContactDetail deserializedContactDetail = new ContactDetail();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("role".equals(fieldName)) {
                    deserializedContactDetail.role = Role.fromString(reader.getString());
                } else if ("email".equals(fieldName)) {
                    deserializedContactDetail.email = reader.getString();
                } else if ("phone".equals(fieldName)) {
                    deserializedContactDetail.phone = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedContactDetail;
        });
    }
}
