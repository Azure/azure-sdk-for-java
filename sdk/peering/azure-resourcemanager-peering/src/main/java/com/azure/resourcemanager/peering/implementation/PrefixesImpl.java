// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.peering.fluent.PrefixesClient;
import com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner;
import com.azure.resourcemanager.peering.models.PeeringServicePrefix;
import com.azure.resourcemanager.peering.models.Prefixes;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class PrefixesImpl implements Prefixes {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PrefixesImpl.class);

    private final PrefixesClient innerClient;

    private final com.azure.resourcemanager.peering.PeeringManager serviceManager;

    public PrefixesImpl(PrefixesClient innerClient, com.azure.resourcemanager.peering.PeeringManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<PeeringServicePrefix> listByPeeringService(
        String resourceGroupName, String peeringServiceName) {
        PagedIterable<PeeringServicePrefixInner> inner =
            this.serviceClient().listByPeeringService(resourceGroupName, peeringServiceName);
        return Utils.mapPage(inner, inner1 -> new PeeringServicePrefixImpl(inner1, this.manager()));
    }

    public PagedIterable<PeeringServicePrefix> listByPeeringService(
        String resourceGroupName, String peeringServiceName, Context context) {
        PagedIterable<PeeringServicePrefixInner> inner =
            this.serviceClient().listByPeeringService(resourceGroupName, peeringServiceName, context);
        return Utils.mapPage(inner, inner1 -> new PeeringServicePrefixImpl(inner1, this.manager()));
    }

    private PrefixesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.peering.PeeringManager manager() {
        return this.serviceManager;
    }
}
