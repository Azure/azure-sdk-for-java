// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.peering.models.LearnedType;
import com.azure.resourcemanager.peering.models.PrefixValidationState;
import com.azure.resourcemanager.peering.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The peering service prefix class. */
@JsonFlatten
@Fluent
public class PeeringServicePrefixInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PeeringServicePrefixInner.class);

    /*
     * Valid route prefix
     */
    @JsonProperty(value = "properties.prefix")
    private String prefix;

    /*
     * The prefix validation state
     */
    @JsonProperty(value = "properties.prefixValidationState")
    private PrefixValidationState prefixValidationState;

    /*
     * The prefix learned type
     */
    @JsonProperty(value = "properties.learnedType")
    private LearnedType learnedType;

    /*
     * The provisioning state of the resource.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * Get the prefix property: Valid route prefix.
     *
     * @return the prefix value.
     */
    public String prefix() {
        return this.prefix;
    }

    /**
     * Set the prefix property: Valid route prefix.
     *
     * @param prefix the prefix value to set.
     * @return the PeeringServicePrefixInner object itself.
     */
    public PeeringServicePrefixInner withPrefix(String prefix) {
        this.prefix = prefix;
        return this;
    }

    /**
     * Get the prefixValidationState property: The prefix validation state.
     *
     * @return the prefixValidationState value.
     */
    public PrefixValidationState prefixValidationState() {
        return this.prefixValidationState;
    }

    /**
     * Set the prefixValidationState property: The prefix validation state.
     *
     * @param prefixValidationState the prefixValidationState value to set.
     * @return the PeeringServicePrefixInner object itself.
     */
    public PeeringServicePrefixInner withPrefixValidationState(PrefixValidationState prefixValidationState) {
        this.prefixValidationState = prefixValidationState;
        return this;
    }

    /**
     * Get the learnedType property: The prefix learned type.
     *
     * @return the learnedType value.
     */
    public LearnedType learnedType() {
        return this.learnedType;
    }

    /**
     * Set the learnedType property: The prefix learned type.
     *
     * @param learnedType the learnedType value to set.
     * @return the PeeringServicePrefixInner object itself.
     */
    public PeeringServicePrefixInner withLearnedType(LearnedType learnedType) {
        this.learnedType = learnedType;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
