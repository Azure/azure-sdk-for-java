/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.peering.v2020_10_01.implementation;

import com.microsoft.azure.management.peering.v2020_10_01.PeeringReceivedRoute;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import rx.Observable;

class PeeringReceivedRouteImpl extends WrapperImpl<PeeringReceivedRouteInner> implements PeeringReceivedRoute {
    private final PeeringManager manager;

    PeeringReceivedRouteImpl(PeeringReceivedRouteInner inner,  PeeringManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public PeeringManager manager() {
        return this.manager;
    }



    @Override
    public String asPath() {
        return this.inner().asPath();
    }

    @Override
    public String nextHop() {
        return this.inner().nextHop();
    }

    @Override
    public String originAsValidationState() {
        return this.inner().originAsValidationState();
    }

    @Override
    public String prefix() {
        return this.inner().prefix();
    }

    @Override
    public String receivedTimestamp() {
        return this.inner().receivedTimestamp();
    }

    @Override
    public String rpkiValidationState() {
        return this.inner().rpkiValidationState();
    }

    @Override
    public String trustAnchor() {
        return this.inner().trustAnchor();
    }

}
