/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.peering.v2019_09_01_preview;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The details of the event associated with a prefix.
 */
public class PeeringServicePrefixEvent {
    /**
     * The timestamp of the event associated with a prefix.
     */
    @JsonProperty(value = "eventTimestamp", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime eventTimestamp;

    /**
     * The type of the event associated with a prefix.
     */
    @JsonProperty(value = "eventType", access = JsonProperty.Access.WRITE_ONLY)
    private String eventType;

    /**
     * The summary of the event associated with a prefix.
     */
    @JsonProperty(value = "eventSummary", access = JsonProperty.Access.WRITE_ONLY)
    private String eventSummary;

    /**
     * The level of the event associated with a prefix.
     */
    @JsonProperty(value = "eventLevel", access = JsonProperty.Access.WRITE_ONLY)
    private String eventLevel;

    /**
     * The description of the event associated with a prefix.
     */
    @JsonProperty(value = "eventDescription", access = JsonProperty.Access.WRITE_ONLY)
    private String eventDescription;

    /**
     * Get the timestamp of the event associated with a prefix.
     *
     * @return the eventTimestamp value
     */
    public DateTime eventTimestamp() {
        return this.eventTimestamp;
    }

    /**
     * Get the type of the event associated with a prefix.
     *
     * @return the eventType value
     */
    public String eventType() {
        return this.eventType;
    }

    /**
     * Get the summary of the event associated with a prefix.
     *
     * @return the eventSummary value
     */
    public String eventSummary() {
        return this.eventSummary;
    }

    /**
     * Get the level of the event associated with a prefix.
     *
     * @return the eventLevel value
     */
    public String eventLevel() {
        return this.eventLevel;
    }

    /**
     * Get the description of the event associated with a prefix.
     *
     * @return the eventDescription value
     */
    public String eventDescription() {
        return this.eventDescription;
    }

}
