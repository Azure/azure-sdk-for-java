// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.health.deidentification.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.core.models.ResponseError;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * A job containing a batch of documents to de-identify.
 */
@Fluent
public final class DeidentificationJob implements JsonSerializable<DeidentificationJob> {

    /*
     * The name of a job.
     */
    @Generated
    private String name;

    /*
     * Operation to perform on the input documents.
     */
    @Generated
    private DeidentificationOperationType operation;

    /*
     * Storage location to perform the operation on.
     */
    @Generated
    private final SourceStorageLocation sourceLocation;

    /*
     * Target location to store output of operation.
     */
    @Generated
    private final TargetStorageLocation targetLocation;

    /*
     * Customization parameters to override default service behaviors.
     */
    @Generated
    private DeidentificationJobCustomizationOptions customizations;

    /*
     * Current status of a job.
     */
    @Generated
    private OperationState status;

    /*
     * Error when job fails in it's entirety.
     */
    @Generated
    private ResponseError error;

    /*
     * Date and time when the job was completed.
     * 
     * If the job is canceled, this is the time when the job was canceled.
     * 
     * If the job failed, this is the time when the job failed.
     */
    @Generated
    private OffsetDateTime lastUpdatedAt;

    /*
     * Date and time when the job was created.
     */
    @Generated
    private OffsetDateTime createdAt;

    /*
     * Date and time when the job was started.
     */
    @Generated
    private OffsetDateTime startedAt;

    /*
     * Summary of a job. Exists only when the job is completed.
     */
    @Generated
    private DeidentificationJobSummary summary;

    /**
     * Creates an instance of DeidentificationJob class.
     *
     * @param sourceLocation the sourceLocation value to set.
     * @param targetLocation the targetLocation value to set.
     */
    @Generated
    public DeidentificationJob(SourceStorageLocation sourceLocation, TargetStorageLocation targetLocation) {
        this.sourceLocation = sourceLocation;
        this.targetLocation = targetLocation;
    }

    /**
     * Get the name property: The name of a job.
     *
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Get the operation property: Operation to perform on the input documents.
     *
     * @return the operation value.
     */
    @Generated
    public DeidentificationOperationType getOperation() {
        return this.operation;
    }

    /**
     * Set the operation property: Operation to perform on the input documents.
     *
     * @param operation the operation value to set.
     * @return the DeidentificationJob object itself.
     */
    @Generated
    public DeidentificationJob setOperation(DeidentificationOperationType operation) {
        this.operation = operation;
        return this;
    }

    /**
     * Get the sourceLocation property: Storage location to perform the operation on.
     *
     * @return the sourceLocation value.
     */
    @Generated
    public SourceStorageLocation getSourceLocation() {
        return this.sourceLocation;
    }

    /**
     * Get the targetLocation property: Target location to store output of operation.
     *
     * @return the targetLocation value.
     */
    @Generated
    public TargetStorageLocation getTargetLocation() {
        return this.targetLocation;
    }

    /**
     * Get the customizations property: Customization parameters to override default service behaviors.
     *
     * @return the customizations value.
     */
    @Generated
    public DeidentificationJobCustomizationOptions getCustomizations() {
        return this.customizations;
    }

    /**
     * Set the customizations property: Customization parameters to override default service behaviors.
     *
     * @param customizations the customizations value to set.
     * @return the DeidentificationJob object itself.
     */
    @Generated
    public DeidentificationJob setCustomizations(DeidentificationJobCustomizationOptions customizations) {
        this.customizations = customizations;
        return this;
    }

    /**
     * Get the status property: Current status of a job.
     *
     * @return the status value.
     */
    @Generated
    public OperationState getStatus() {
        return this.status;
    }

    /**
     * Get the error property: Error when job fails in it's entirety.
     *
     * @return the error value.
     */
    @Generated
    public ResponseError getError() {
        return this.error;
    }

    /**
     * Get the lastUpdatedAt property: Date and time when the job was completed.
     *
     * If the job is canceled, this is the time when the job was canceled.
     *
     * If the job failed, this is the time when the job failed.
     *
     * @return the lastUpdatedAt value.
     */
    @Generated
    public OffsetDateTime getLastUpdatedAt() {
        return this.lastUpdatedAt;
    }

    /**
     * Get the createdAt property: Date and time when the job was created.
     *
     * @return the createdAt value.
     */
    @Generated
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Get the startedAt property: Date and time when the job was started.
     *
     * @return the startedAt value.
     */
    @Generated
    public OffsetDateTime getStartedAt() {
        return this.startedAt;
    }

    /**
     * Get the summary property: Summary of a job. Exists only when the job is completed.
     *
     * @return the summary value.
     */
    @Generated
    public DeidentificationJobSummary getSummary() {
        return this.summary;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("sourceLocation", this.sourceLocation);
        jsonWriter.writeJsonField("targetLocation", this.targetLocation);
        jsonWriter.writeStringField("operation", this.operation == null ? null : this.operation.toString());
        jsonWriter.writeJsonField("customizations", this.customizations);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DeidentificationJob from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of DeidentificationJob if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DeidentificationJob.
     */
    @Generated
    public static DeidentificationJob fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String name = null;
            SourceStorageLocation sourceLocation = null;
            TargetStorageLocation targetLocation = null;
            OperationState status = null;
            OffsetDateTime lastUpdatedAt = null;
            OffsetDateTime createdAt = null;
            DeidentificationOperationType operation = null;
            DeidentificationJobCustomizationOptions customizations = null;
            ResponseError error = null;
            OffsetDateTime startedAt = null;
            DeidentificationJobSummary summary = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("name".equals(fieldName)) {
                    name = reader.getString();
                } else if ("sourceLocation".equals(fieldName)) {
                    sourceLocation = SourceStorageLocation.fromJson(reader);
                } else if ("targetLocation".equals(fieldName)) {
                    targetLocation = TargetStorageLocation.fromJson(reader);
                } else if ("status".equals(fieldName)) {
                    status = OperationState.fromString(reader.getString());
                } else if ("lastUpdatedAt".equals(fieldName)) {
                    lastUpdatedAt = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("createdAt".equals(fieldName)) {
                    createdAt = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("operation".equals(fieldName)) {
                    operation = DeidentificationOperationType.fromString(reader.getString());
                } else if ("customizations".equals(fieldName)) {
                    customizations = DeidentificationJobCustomizationOptions.fromJson(reader);
                } else if ("error".equals(fieldName)) {
                    error = ResponseError.fromJson(reader);
                } else if ("startedAt".equals(fieldName)) {
                    startedAt = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("summary".equals(fieldName)) {
                    summary = DeidentificationJobSummary.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            DeidentificationJob deserializedDeidentificationJob
                = new DeidentificationJob(sourceLocation, targetLocation);
            deserializedDeidentificationJob.name = name;
            deserializedDeidentificationJob.status = status;
            deserializedDeidentificationJob.lastUpdatedAt = lastUpdatedAt;
            deserializedDeidentificationJob.createdAt = createdAt;
            deserializedDeidentificationJob.operation = operation;
            deserializedDeidentificationJob.customizations = customizations;
            deserializedDeidentificationJob.error = error;
            deserializedDeidentificationJob.startedAt = startedAt;
            deserializedDeidentificationJob.summary = summary;
            return deserializedDeidentificationJob;
        });
    }
}
