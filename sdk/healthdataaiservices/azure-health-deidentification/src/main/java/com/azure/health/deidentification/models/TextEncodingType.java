// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.health.deidentification.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Encoding type for text offset and length calculations.
 */
public final class TextEncodingType extends ExpandableStringEnum<TextEncodingType> {
    /**
     * UTF-8 encoding.
     */
    @Generated
    public static final TextEncodingType UTF8 = fromString("Utf8");

    /**
     * UTF-16 encoding. Primary encoding used by .NET, Java, and JavaScript.
     */
    @Generated
    public static final TextEncodingType UTF16 = fromString("Utf16");

    /**
     * CodePoint encoding. Primary encoding used by Python.
     */
    @Generated
    public static final TextEncodingType CODE_POINT = fromString("CodePoint");

    /**
     * Creates a new instance of TextEncodingType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public TextEncodingType() {
    }

    /**
     * Creates or finds a TextEncodingType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding TextEncodingType.
     */
    @Generated
    public static TextEncodingType fromString(String name) {
        return fromString(name, TextEncodingType.class);
    }

    /**
     * Gets known TextEncodingType values.
     * 
     * @return known TextEncodingType values.
     */
    @Generated
    public static Collection<TextEncodingType> values() {
        return values(TextEncodingType.class);
    }
}
