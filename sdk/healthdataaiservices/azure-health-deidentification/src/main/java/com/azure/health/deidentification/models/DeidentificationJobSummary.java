// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.health.deidentification.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Summary metrics of a job.
 */
@Immutable
public final class DeidentificationJobSummary implements JsonSerializable<DeidentificationJobSummary> {

    /*
     * Number of documents that have completed.
     */
    @Generated
    private final int successfulCount;

    /*
     * Number of documents that have failed.
     */
    @Generated
    private final int failedCount;

    /*
     * Number of documents that have been canceled.
     */
    @Generated
    private final int canceledCount;

    /*
     * Number of documents total.
     */
    @Generated
    private final int totalCount;

    /*
     * Number of bytes processed.
     */
    @Generated
    private final long bytesProcessed;

    /**
     * Creates an instance of DeidentificationJobSummary class.
     *
     * @param successfulCount the successfulCount value to set.
     * @param failedCount the failedCount value to set.
     * @param canceledCount the canceledCount value to set.
     * @param totalCount the totalCount value to set.
     * @param bytesProcessed the bytesProcessed value to set.
     */
    @Generated
    private DeidentificationJobSummary(int successfulCount, int failedCount, int canceledCount, int totalCount,
        long bytesProcessed) {
        this.successfulCount = successfulCount;
        this.failedCount = failedCount;
        this.canceledCount = canceledCount;
        this.totalCount = totalCount;
        this.bytesProcessed = bytesProcessed;
    }

    /**
     * Get the successfulCount property: Number of documents that have completed.
     *
     * @return the successfulCount value.
     */
    @Generated
    public int getSuccessfulCount() {
        return this.successfulCount;
    }

    /**
     * Get the failedCount property: Number of documents that have failed.
     *
     * @return the failedCount value.
     */
    @Generated
    public int getFailedCount() {
        return this.failedCount;
    }

    /**
     * Get the canceledCount property: Number of documents that have been canceled.
     *
     * @return the canceledCount value.
     */
    @Generated
    public int getCanceledCount() {
        return this.canceledCount;
    }

    /**
     * Get the totalCount property: Number of documents total.
     *
     * @return the totalCount value.
     */
    @Generated
    public int getTotalCount() {
        return this.totalCount;
    }

    /**
     * Get the bytesProcessed property: Number of bytes processed.
     *
     * @return the bytesProcessed value.
     */
    @Generated
    public long getBytesProcessed() {
        return this.bytesProcessed;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("successful", this.successfulCount);
        jsonWriter.writeIntField("failed", this.failedCount);
        jsonWriter.writeIntField("canceled", this.canceledCount);
        jsonWriter.writeIntField("total", this.totalCount);
        jsonWriter.writeLongField("bytesProcessed", this.bytesProcessed);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DeidentificationJobSummary from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of DeidentificationJobSummary if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DeidentificationJobSummary.
     */
    @Generated
    public static DeidentificationJobSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            int successfulCount = 0;
            int failedCount = 0;
            int canceledCount = 0;
            int totalCount = 0;
            long bytesProcessed = 0L;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("successful".equals(fieldName)) {
                    successfulCount = reader.getInt();
                } else if ("failed".equals(fieldName)) {
                    failedCount = reader.getInt();
                } else if ("canceled".equals(fieldName)) {
                    canceledCount = reader.getInt();
                } else if ("total".equals(fieldName)) {
                    totalCount = reader.getInt();
                } else if ("bytesProcessed".equals(fieldName)) {
                    bytesProcessed = reader.getLong();
                } else {
                    reader.skipChildren();
                }
            }
            return new DeidentificationJobSummary(successfulCount, failedCount, canceledCount, totalCount,
                bytesProcessed);
        });
    }
}
