// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.health.deidentification.generated;

import com.azure.core.http.rest.PagedIterable;
import com.azure.health.deidentification.models.DocumentDetails;
import com.azure.health.deidentification.models.DocumentLocation;
import com.azure.health.deidentification.models.OperationState;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class ListProcessedDocumentsWithinAJobTests extends DeidentificationClientTestBase {
    @Test
    @Disabled
    public void testListProcessedDocumentsWithinAJobTests() {
        // method invocation
        PagedIterable<DocumentDetails> response = deidentificationClient.listJobDocuments("documents_smith_1",
            "K1JJRDpzOEtaQWZabUQrQUNBQUFBQUFBQUFBQT09I1JUOjEjVFJDOjEwI0ZQQzpBZ0VBQUFBTUFDUUFBQUFBQUE9PQ==");

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        DocumentDetails firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "id"
        Assertions.assertEquals("00000000-0000-0000-0000-000000000000", firstItem.getId());
        // verify property "input"
        DocumentLocation firstItemInput = firstItem.getInput();
        Assertions.assertNotNull(firstItemInput);
        Assertions.assertEquals("/documents/patient_doc_1", firstItemInput.getPath());
        Assertions.assertEquals("0x8DB638EEA0CC717", firstItemInput.getEtag());
        // verify property "output"
        DocumentLocation firstItemOutput = firstItem.getOutput();
        Assertions.assertNotNull(firstItemOutput);
        Assertions.assertEquals("_output/documents/patient_doc_1", firstItemOutput.getPath());
        Assertions.assertEquals("0xAB298APO23099ZL", firstItemOutput.getEtag());
        // verify property "status"
        Assertions.assertEquals(OperationState.FAILED, firstItem.getStatus());
        // verify property "error"
        Assertions.assertNotNull(firstItem.getError());
    }
}
