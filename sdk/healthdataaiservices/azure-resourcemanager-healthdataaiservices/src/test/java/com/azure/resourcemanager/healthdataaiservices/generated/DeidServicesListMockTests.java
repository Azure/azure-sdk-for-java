// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.healthdataaiservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.healthdataaiservices.HealthDataAIServicesManager;
import com.azure.resourcemanager.healthdataaiservices.models.DeidService;
import com.azure.resourcemanager.healthdataaiservices.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.healthdataaiservices.models.PublicNetworkAccess;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeidServicesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Accepted\",\"serviceUrl\":\"ncwscwsvlxoto\",\"privateEndpointConnections\":[{\"properties\":{\"groupIds\":[\"qsx\",\"nmic\",\"kvceoveilovnotyf\"],\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Failed\"},\"id\":\"bkc\",\"name\":\"x\",\"type\":\"hbttkphyw\"},{\"properties\":{\"groupIds\":[\"t\",\"qnermclfplphoxu\"],\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Creating\"},\"id\":\"bgyepsbj\",\"name\":\"azqugxywpmueefj\",\"type\":\"wfqkquj\"},{\"properties\":{\"groupIds\":[\"yonobgl\",\"ocqxtccmg\",\"udxytlmoyrx\"],\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Succeeded\"},\"id\":\"wpzntxhdzh\",\"name\":\"rqjbhckfrl\",\"type\":\"rxsbkyvp\"},{\"properties\":{\"groupIds\":[\"uzbpzkafku\"],\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Succeeded\"},\"id\":\"wbme\",\"name\":\"hseyvju\",\"type\":\"rts\"}],\"publicNetworkAccess\":\"Enabled\"},\"identity\":{\"principalId\":\"deemao\",\"tenantId\":\"xagkvtmelmqkrh\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"fadmws\":{\"principalId\":\"uahaquhcdhmd\",\"clientId\":\"laexqp\"},\"zlfmisgwbnbbeld\":{\"principalId\":\"r\",\"clientId\":\"xpvgo\"},\"urqhaka\":{\"principalId\":\"k\",\"clientId\":\"ali\"}}},\"location\":\"ashsfwxos\",\"tags\":{\"cjooxdjebwpucwwf\":\"xcug\"},\"id\":\"ovbvmeueciv\",\"name\":\"hzceuojgjrwjue\",\"type\":\"otwmcdyt\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HealthDataAIServicesManager manager = HealthDataAIServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DeidService> response = manager.deidServices().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ashsfwxos", response.iterator().next().location());
        Assertions.assertEquals("xcug", response.iterator().next().tags().get("cjooxdjebwpucwwf"));
        Assertions.assertEquals(PublicNetworkAccess.ENABLED,
            response.iterator().next().properties().publicNetworkAccess());
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.iterator().next().identity().type());
    }
}
