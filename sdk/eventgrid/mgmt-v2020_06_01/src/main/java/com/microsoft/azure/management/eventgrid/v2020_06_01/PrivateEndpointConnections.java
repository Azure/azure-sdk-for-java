/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.eventgrid.v2020_06_01;

import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.eventgrid.v2020_06_01.implementation.PrivateEndpointConnectionsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing PrivateEndpointConnections.
 */
public interface PrivateEndpointConnections extends HasInner<PrivateEndpointConnectionsInner> {
    /**
     * Get a specific private endpoint connection.
     * Get a specific private endpoint connection under a topic or domain.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'. Possible values include: 'topics', 'domains'
     * @param parentName The name of the parent resource (namely, either, the topic name or domain name).
     * @param privateEndpointConnectionName The name of the private endpoint connection connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PrivateEndpointConnection> getAsync(String resourceGroupName, String parentType, String parentName, String privateEndpointConnectionName);

    /**
     * Delete a specific private endpoint connection.
     * Delete a specific private endpoint connection under a topic or domain.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'. Possible values include: 'topics', 'domains'
     * @param parentName The name of the parent resource (namely, either, the topic name or domain name).
     * @param privateEndpointConnectionName The name of the private endpoint connection connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String parentType, String parentName, String privateEndpointConnectionName);

    /**
     * Lists all private endpoint connections under a resource.
     * Get all private endpoint connections under a topic or domain.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'. Possible values include: 'topics', 'domains'
     * @param parentName The name of the parent resource (namely, either, the topic name or domain name).
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PrivateEndpointConnection> listByResourceAsync(final String resourceGroupName, final String parentType, final String parentName);

}
