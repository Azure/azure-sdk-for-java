// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Event data for Microsoft.EventGrid.MQTTClientDeleted event.
 */
@Immutable
public final class EventGridMqttClientDeletedEventData extends EventGridMqttClientEventData {
    /**
     * Creates an instance of EventGridMqttClientDeletedEventData class.
     * 
     * @param clientAuthenticationName the clientAuthenticationName value to set.
     * @param clientName the clientName value to set.
     * @param namespaceName the namespaceName value to set.
     */
    @Generated
    private EventGridMqttClientDeletedEventData(String clientAuthenticationName, String clientName,
        String namespaceName) {
        super(clientAuthenticationName, clientName, namespaceName);
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("clientAuthenticationName", getClientAuthenticationName());
        jsonWriter.writeStringField("clientName", getClientName());
        jsonWriter.writeStringField("namespaceName", getNamespaceName());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EventGridMqttClientDeletedEventData from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EventGridMqttClientDeletedEventData if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the EventGridMqttClientDeletedEventData.
     */
    @Generated
    public static EventGridMqttClientDeletedEventData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String clientAuthenticationName = null;
            String clientName = null;
            String namespaceName = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("clientAuthenticationName".equals(fieldName)) {
                    clientAuthenticationName = reader.getString();
                } else if ("clientName".equals(fieldName)) {
                    clientName = reader.getString();
                } else if ("namespaceName".equals(fieldName)) {
                    namespaceName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new EventGridMqttClientDeletedEventData(clientAuthenticationName, clientName, namespaceName);
        });
    }
}
