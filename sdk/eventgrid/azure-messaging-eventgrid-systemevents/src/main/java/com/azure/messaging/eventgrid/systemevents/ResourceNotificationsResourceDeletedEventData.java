// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes the schema of the common properties across all ARN system topic
 * delete events.
 */
@Immutable
public class ResourceNotificationsResourceDeletedEventData
    implements JsonSerializable<ResourceNotificationsResourceDeletedEventData> {
    /*
     * resourceInfo details for delete event
     */
    @Generated
    private final ResourceNotificationsResourceDeletedDetails resourceDetails;

    /*
     * details about operational info
     */
    @Generated
    private final ResourceNotificationsOperationalDetails operationalDetails;

    /**
     * Creates an instance of ResourceNotificationsResourceDeletedEventData class.
     * 
     * @param resourceDetails the resourceDetails value to set.
     * @param operationalDetails the operationalDetails value to set.
     */
    @Generated
    protected ResourceNotificationsResourceDeletedEventData(ResourceNotificationsResourceDeletedDetails resourceDetails,
        ResourceNotificationsOperationalDetails operationalDetails) {
        this.resourceDetails = resourceDetails;
        this.operationalDetails = operationalDetails;
    }

    /**
     * Get the resourceDetails property: resourceInfo details for delete event.
     * 
     * @return the resourceDetails value.
     */
    @Generated
    public ResourceNotificationsResourceDeletedDetails getResourceDetails() {
        return this.resourceDetails;
    }

    /**
     * Get the operationalDetails property: details about operational info.
     * 
     * @return the operationalDetails value.
     */
    @Generated
    public ResourceNotificationsOperationalDetails getOperationalDetails() {
        return this.operationalDetails;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("resourceInfo", this.resourceDetails);
        jsonWriter.writeJsonField("operationalInfo", this.operationalDetails);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceNotificationsResourceDeletedEventData from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceNotificationsResourceDeletedEventData if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ResourceNotificationsResourceDeletedEventData.
     */
    @Generated
    public static ResourceNotificationsResourceDeletedEventData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceNotificationsResourceDeletedDetails resourceDetails = null;
            ResourceNotificationsOperationalDetails operationalDetails = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceInfo".equals(fieldName)) {
                    resourceDetails = ResourceNotificationsResourceDeletedDetails.fromJson(reader);
                } else if ("operationalInfo".equals(fieldName)) {
                    operationalDetails = ResourceNotificationsOperationalDetails.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return new ResourceNotificationsResourceDeletedEventData(resourceDetails, operationalDetails);
        });
    }
}
