// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.messaging.eventgrid.systemevents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Schema of common properties of all Router Worker events.
 */
@Immutable
public class AcsRouterWorkerEventData extends AcsRouterEventData {

    /*
     * Router Worker events Worker Id
     */
    @Generated
    private String workerId;

    /*
     * Router Event Channel ID
     */
    @Generated
    private String channelId;

    /*
     * Router Event Channel Reference
     */
    @Generated
    private String channelReference;

    /**
     * Creates an instance of AcsRouterWorkerEventData class.
     *
     * @param jobId the jobId value to set.
     */
    @Generated
    protected AcsRouterWorkerEventData(String jobId) {
        super(jobId);
    }

    /**
     * Get the workerId property: Router Worker events Worker Id.
     *
     * @return the workerId value.
     */
    @Generated
    public String getWorkerId() {
        return this.workerId;
    }

    /**
     * Set the workerId property: Router Worker events Worker Id.
     *
     * @param workerId the workerId value to set.
     * @return the AcsRouterWorkerEventData object itself.
     */
    @Generated
    AcsRouterWorkerEventData setWorkerId(String workerId) {
        this.workerId = workerId;
        return this;
    }

    /**
     * Get the channelId property: Router Event Channel ID.
     *
     * @return the channelId value.
     */
    @Generated
    @Override
    public String getChannelId() {
        return this.channelId;
    }

    /**
     * Get the channelReference property: Router Event Channel Reference.
     *
     * @return the channelReference value.
     */
    @Generated
    @Override
    public String getChannelReference() {
        return this.channelReference;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("jobId", getJobId());
        jsonWriter.writeStringField("channelReference", getChannelReference());
        jsonWriter.writeStringField("channelId", getChannelId());
        jsonWriter.writeStringField("workerId", this.workerId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AcsRouterWorkerEventData from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AcsRouterWorkerEventData if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AcsRouterWorkerEventData.
     */
    @Generated
    public static AcsRouterWorkerEventData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String jobId = null;
            String channelReference = null;
            String channelId = null;
            String workerId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("jobId".equals(fieldName)) {
                    jobId = reader.getString();
                } else if ("channelReference".equals(fieldName)) {
                    channelReference = reader.getString();
                } else if ("channelId".equals(fieldName)) {
                    channelId = reader.getString();
                } else if ("workerId".equals(fieldName)) {
                    workerId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            AcsRouterWorkerEventData deserializedAcsRouterWorkerEventData = new AcsRouterWorkerEventData(jobId);
            deserializedAcsRouterWorkerEventData.channelReference = channelReference;
            deserializedAcsRouterWorkerEventData.channelId = channelId;
            deserializedAcsRouterWorkerEventData.workerId = workerId;
            return deserializedAcsRouterWorkerEventData;
        });
    }
}
