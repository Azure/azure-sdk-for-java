// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Detail of action on the app.
 */
@Immutable
public final class AppEventTypeDetail implements JsonSerializable<AppEventTypeDetail> {
    /*
     * Type of action of the operation.
     */
    @Generated
    private final AppAction action;

    /**
     * Creates an instance of AppEventTypeDetail class.
     * 
     * @param action the action value to set.
     */
    @Generated
    private AppEventTypeDetail(AppAction action) {
        this.action = action;
    }

    /**
     * Get the action property: Type of action of the operation.
     * 
     * @return the action value.
     */
    @Generated
    public AppAction getAction() {
        return this.action;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("action", this.action == null ? null : this.action.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AppEventTypeDetail from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AppEventTypeDetail if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AppEventTypeDetail.
     */
    @Generated
    public static AppEventTypeDetail fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AppAction action = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("action".equals(fieldName)) {
                    action = AppAction.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            return new AppEventTypeDetail(action);
        });
    }
}
