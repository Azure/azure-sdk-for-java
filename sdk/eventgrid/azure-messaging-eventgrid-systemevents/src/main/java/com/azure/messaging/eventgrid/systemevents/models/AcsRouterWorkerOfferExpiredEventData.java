// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.messaging.eventgrid.systemevents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Schema of the Data property of an EventGridEvent for a Microsoft.Communication.RouterWorkerOfferExpired event.
 */
@Immutable
public final class AcsRouterWorkerOfferExpiredEventData extends AcsRouterWorkerEventData {

    /*
     * Router Worker Offer Expired Queue Id
     */
    @Generated
    private String queueId;

    /*
     * Router Worker Offer Expired Offer Id
     */
    @Generated
    private String offerId;

    /*
     * Router Worker events Worker Id
     */
    @Generated
    private String workerId;

    /*
     * Router Event Channel ID
     */
    @Generated
    private String channelId;

    /*
     * Router Event Channel Reference
     */
    @Generated
    private String channelReference;

    /**
     * Creates an instance of AcsRouterWorkerOfferExpiredEventData class.
     *
     * @param jobId the jobId value to set.
     */
    @Generated
    private AcsRouterWorkerOfferExpiredEventData(String jobId) {
        super(jobId);
    }

    /**
     * Get the queueId property: Router Worker Offer Expired Queue Id.
     *
     * @return the queueId value.
     */
    @Generated
    public String getQueueId() {
        return this.queueId;
    }

    /**
     * Get the offerId property: Router Worker Offer Expired Offer Id.
     *
     * @return the offerId value.
     */
    @Generated
    public String getOfferId() {
        return this.offerId;
    }

    /**
     * Get the workerId property: Router Worker events Worker Id.
     *
     * @return the workerId value.
     */
    @Generated
    @Override
    public String getWorkerId() {
        return this.workerId;
    }

    /**
     * Get the channelId property: Router Event Channel ID.
     *
     * @return the channelId value.
     */
    @Generated
    @Override
    public String getChannelId() {
        return this.channelId;
    }

    /**
     * Get the channelReference property: Router Event Channel Reference.
     *
     * @return the channelReference value.
     */
    @Generated
    @Override
    public String getChannelReference() {
        return this.channelReference;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("jobId", getJobId());
        jsonWriter.writeStringField("channelReference", getChannelReference());
        jsonWriter.writeStringField("channelId", getChannelId());
        jsonWriter.writeStringField("workerId", getWorkerId());
        jsonWriter.writeStringField("queueId", this.queueId);
        jsonWriter.writeStringField("offerId", this.offerId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AcsRouterWorkerOfferExpiredEventData from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AcsRouterWorkerOfferExpiredEventData if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AcsRouterWorkerOfferExpiredEventData.
     */
    @Generated
    public static AcsRouterWorkerOfferExpiredEventData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String jobId = null;
            String channelReference = null;
            String channelId = null;
            String workerId = null;
            String queueId = null;
            String offerId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("jobId".equals(fieldName)) {
                    jobId = reader.getString();
                } else if ("channelReference".equals(fieldName)) {
                    channelReference = reader.getString();
                } else if ("channelId".equals(fieldName)) {
                    channelId = reader.getString();
                } else if ("workerId".equals(fieldName)) {
                    workerId = reader.getString();
                } else if ("queueId".equals(fieldName)) {
                    queueId = reader.getString();
                } else if ("offerId".equals(fieldName)) {
                    offerId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            AcsRouterWorkerOfferExpiredEventData deserializedAcsRouterWorkerOfferExpiredEventData
                = new AcsRouterWorkerOfferExpiredEventData(jobId);
            deserializedAcsRouterWorkerOfferExpiredEventData.channelReference = channelReference;
            deserializedAcsRouterWorkerOfferExpiredEventData.channelId = channelId;
            deserializedAcsRouterWorkerOfferExpiredEventData.workerId = workerId;
            deserializedAcsRouterWorkerOfferExpiredEventData.queueId = queueId;
            deserializedAcsRouterWorkerOfferExpiredEventData.offerId = offerId;
            return deserializedAcsRouterWorkerOfferExpiredEventData;
        });
    }
}
