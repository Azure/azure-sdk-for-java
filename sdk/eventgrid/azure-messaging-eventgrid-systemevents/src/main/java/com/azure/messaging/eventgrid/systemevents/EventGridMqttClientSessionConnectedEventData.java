// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Event data for Microsoft.EventGrid.MQTTClientSessionConnected event.
 */
@Immutable
public final class EventGridMqttClientSessionConnectedEventData extends EventGridMqttClientEventData {
    /*
     * Unique identifier for the MQTT client's session. This case-sensitive string can
     * be up to 128 characters long, and supports UTF-8 characters.
     */
    @Generated
    private final String clientSessionName;

    /*
     * A number that helps indicate order of MQTT client session connected or
     * disconnected events. Latest event will have a sequence number that is higher
     * than the previous event.
     */
    @Generated
    private final long sequenceNumber;

    /**
     * Creates an instance of EventGridMqttClientSessionConnectedEventData class.
     * 
     * @param clientAuthenticationName the clientAuthenticationName value to set.
     * @param clientName the clientName value to set.
     * @param namespaceName the namespaceName value to set.
     * @param clientSessionName the clientSessionName value to set.
     * @param sequenceNumber the sequenceNumber value to set.
     */
    @Generated
    private EventGridMqttClientSessionConnectedEventData(String clientAuthenticationName, String clientName,
        String namespaceName, String clientSessionName, long sequenceNumber) {
        super(clientAuthenticationName, clientName, namespaceName);
        this.clientSessionName = clientSessionName;
        this.sequenceNumber = sequenceNumber;
    }

    /**
     * Get the clientSessionName property: Unique identifier for the MQTT client's session. This case-sensitive string
     * can
     * be up to 128 characters long, and supports UTF-8 characters.
     * 
     * @return the clientSessionName value.
     */
    @Generated
    public String getClientSessionName() {
        return this.clientSessionName;
    }

    /**
     * Get the sequenceNumber property: A number that helps indicate order of MQTT client session connected or
     * disconnected events. Latest event will have a sequence number that is higher
     * than the previous event.
     * 
     * @return the sequenceNumber value.
     */
    @Generated
    public long getSequenceNumber() {
        return this.sequenceNumber;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("clientAuthenticationName", getClientAuthenticationName());
        jsonWriter.writeStringField("clientName", getClientName());
        jsonWriter.writeStringField("namespaceName", getNamespaceName());
        jsonWriter.writeStringField("clientSessionName", this.clientSessionName);
        jsonWriter.writeLongField("sequenceNumber", this.sequenceNumber);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EventGridMqttClientSessionConnectedEventData from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EventGridMqttClientSessionConnectedEventData if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the EventGridMqttClientSessionConnectedEventData.
     */
    @Generated
    public static EventGridMqttClientSessionConnectedEventData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String clientAuthenticationName = null;
            String clientName = null;
            String namespaceName = null;
            String clientSessionName = null;
            long sequenceNumber = 0L;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("clientAuthenticationName".equals(fieldName)) {
                    clientAuthenticationName = reader.getString();
                } else if ("clientName".equals(fieldName)) {
                    clientName = reader.getString();
                } else if ("namespaceName".equals(fieldName)) {
                    namespaceName = reader.getString();
                } else if ("clientSessionName".equals(fieldName)) {
                    clientSessionName = reader.getString();
                } else if ("sequenceNumber".equals(fieldName)) {
                    sequenceNumber = reader.getLong();
                } else {
                    reader.skipChildren();
                }
            }
            return new EventGridMqttClientSessionConnectedEventData(clientAuthenticationName, clientName, namespaceName,
                clientSessionName, sequenceNumber);
        });
    }
}
