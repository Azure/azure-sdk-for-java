// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Schema of the Data property of an EventGridEvent for a Microsoft.HealthcareApis.FhirResourceUpdated event.
 */
@Immutable
public final class HealthcareFhirResourceUpdatedEventData
    implements JsonSerializable<HealthcareFhirResourceUpdatedEventData> {
    /*
     * Type of HL7 FHIR resource.
     */
    @Generated
    private final HealthcareFhirResourceType resourceType;

    /*
     * Domain name of FHIR account for this resource.
     */
    @Generated
    private String resourceFhirAccount;

    /*
     * Id of HL7 FHIR resource.
     */
    @Generated
    private String resourceFhirId;

    /*
     * VersionId of HL7 FHIR resource. It changes when the resource is created, updated, or deleted(soft-deletion).
     */
    @Generated
    private Long resourceVersionId;

    /**
     * Creates an instance of HealthcareFhirResourceUpdatedEventData class.
     * 
     * @param resourceType the resourceType value to set.
     */
    @Generated
    private HealthcareFhirResourceUpdatedEventData(HealthcareFhirResourceType resourceType) {
        this.resourceType = resourceType;
    }

    /**
     * Get the resourceType property: Type of HL7 FHIR resource.
     * 
     * @return the resourceType value.
     */
    @Generated
    public HealthcareFhirResourceType getResourceType() {
        return this.resourceType;
    }

    /**
     * Get the resourceFhirAccount property: Domain name of FHIR account for this resource.
     * 
     * @return the resourceFhirAccount value.
     */
    @Generated
    public String getResourceFhirAccount() {
        return this.resourceFhirAccount;
    }

    /**
     * Get the resourceFhirId property: Id of HL7 FHIR resource.
     * 
     * @return the resourceFhirId value.
     */
    @Generated
    public String getResourceFhirId() {
        return this.resourceFhirId;
    }

    /**
     * Get the resourceVersionId property: VersionId of HL7 FHIR resource. It changes when the resource is created,
     * updated, or deleted(soft-deletion).
     * 
     * @return the resourceVersionId value.
     */
    @Generated
    public Long getResourceVersionId() {
        return this.resourceVersionId;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceType", this.resourceType == null ? null : this.resourceType.toString());
        jsonWriter.writeStringField("resourceFhirAccount", this.resourceFhirAccount);
        jsonWriter.writeStringField("resourceFhirId", this.resourceFhirId);
        jsonWriter.writeNumberField("resourceVersionId", this.resourceVersionId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HealthcareFhirResourceUpdatedEventData from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HealthcareFhirResourceUpdatedEventData if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the HealthcareFhirResourceUpdatedEventData.
     */
    @Generated
    public static HealthcareFhirResourceUpdatedEventData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HealthcareFhirResourceType resourceType = null;
            String resourceFhirAccount = null;
            String resourceFhirId = null;
            Long resourceVersionId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceType".equals(fieldName)) {
                    resourceType = HealthcareFhirResourceType.fromString(reader.getString());
                } else if ("resourceFhirAccount".equals(fieldName)) {
                    resourceFhirAccount = reader.getString();
                } else if ("resourceFhirId".equals(fieldName)) {
                    resourceFhirId = reader.getString();
                } else if ("resourceVersionId".equals(fieldName)) {
                    resourceVersionId = reader.getNullable(JsonReader::getLong);
                } else {
                    reader.skipChildren();
                }
            }
            HealthcareFhirResourceUpdatedEventData deserializedHealthcareFhirResourceUpdatedEventData
                = new HealthcareFhirResourceUpdatedEventData(resourceType);
            deserializedHealthcareFhirResourceUpdatedEventData.resourceFhirAccount = resourceFhirAccount;
            deserializedHealthcareFhirResourceUpdatedEventData.resourceFhirId = resourceFhirId;
            deserializedHealthcareFhirResourceUpdatedEventData.resourceVersionId = resourceVersionId;

            return deserializedHealthcareFhirResourceUpdatedEventData;
        });
    }
}
