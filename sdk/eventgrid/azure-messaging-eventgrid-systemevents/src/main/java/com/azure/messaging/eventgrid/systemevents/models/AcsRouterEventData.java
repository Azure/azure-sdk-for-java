// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.messaging.eventgrid.systemevents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Schema of common properties of all Router events.
 */
@Immutable
public class AcsRouterEventData implements JsonSerializable<AcsRouterEventData> {

    /*
     * Router Event Job ID
     */
    @Generated
    private final String jobId;

    /*
     * Router Event Channel Reference
     */
    @Generated
    private String channelReference;

    /*
     * Router Event Channel ID
     */
    @Generated
    private String channelId;

    /**
     * Creates an instance of AcsRouterEventData class.
     *
     * @param jobId the jobId value to set.
     */
    @Generated
    protected AcsRouterEventData(String jobId) {
        this.jobId = jobId;
    }

    /**
     * Get the jobId property: Router Event Job ID.
     *
     * @return the jobId value.
     */
    @Generated
    public String getJobId() {
        return this.jobId;
    }

    /**
     * Get the channelReference property: Router Event Channel Reference.
     *
     * @return the channelReference value.
     */
    @Generated
    public String getChannelReference() {
        return this.channelReference;
    }

    /**
     * Set the channelReference property: Router Event Channel Reference.
     *
     * @param channelReference the channelReference value to set.
     * @return the AcsRouterEventData object itself.
     */
    @Generated
    AcsRouterEventData setChannelReference(String channelReference) {
        this.channelReference = channelReference;
        return this;
    }

    /**
     * Get the channelId property: Router Event Channel ID.
     *
     * @return the channelId value.
     */
    @Generated
    public String getChannelId() {
        return this.channelId;
    }

    /**
     * Set the channelId property: Router Event Channel ID.
     *
     * @param channelId the channelId value to set.
     * @return the AcsRouterEventData object itself.
     */
    @Generated
    AcsRouterEventData setChannelId(String channelId) {
        this.channelId = channelId;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("jobId", this.jobId);
        jsonWriter.writeStringField("channelReference", this.channelReference);
        jsonWriter.writeStringField("channelId", this.channelId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AcsRouterEventData from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AcsRouterEventData if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AcsRouterEventData.
     */
    @Generated
    public static AcsRouterEventData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String jobId = null;
            String channelReference = null;
            String channelId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("jobId".equals(fieldName)) {
                    jobId = reader.getString();
                } else if ("channelReference".equals(fieldName)) {
                    channelReference = reader.getString();
                } else if ("channelId".equals(fieldName)) {
                    channelId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            AcsRouterEventData deserializedAcsRouterEventData = new AcsRouterEventData(jobId);
            deserializedAcsRouterEventData.channelReference = channelReference;
            deserializedAcsRouterEventData.channelId = channelId;
            return deserializedAcsRouterEventData;
        });
    }
}
