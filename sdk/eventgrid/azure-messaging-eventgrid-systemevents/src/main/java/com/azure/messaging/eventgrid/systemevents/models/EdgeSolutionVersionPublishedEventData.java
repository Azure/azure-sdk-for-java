// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.messaging.eventgrid.systemevents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Schema of the Data property of an EventGridEvent for a Microsoft.Edge.SolutionVersionPublished event.
 */
@Immutable
public final class EdgeSolutionVersionPublishedEventData
    implements JsonSerializable<EdgeSolutionVersionPublishedEventData> {

    /*
     * A GUID to uniquely track External Solution Validation
     */
    @Generated
    private final String externalValidationId;

    /*
     * ARM ID of the Target resource
     */
    @Generated
    private final String targetId;

    /*
     * ARM ID of the Solution Template resource
     */
    @Generated
    private final String solutionTemplateId;

    /*
     * ARM ID of the Solution Template Version resource
     */
    @Generated
    private final String solutionTemplateVersionId;

    /*
     * ARM ID of the Solution Version resource
     */
    @Generated
    private final String solutionVersionId;

    /*
     * API Version supported for the resources
     */
    @Generated
    private final String apiVersion;

    /*
     * Direct URL to callback for updating validation status
     */
    @Generated
    private final String callbackUrl;

    /**
     * Creates an instance of EdgeSolutionVersionPublishedEventData class.
     *
     * @param externalValidationId the externalValidationId value to set.
     * @param targetId the targetId value to set.
     * @param solutionTemplateId the solutionTemplateId value to set.
     * @param solutionTemplateVersionId the solutionTemplateVersionId value to set.
     * @param solutionVersionId the solutionVersionId value to set.
     * @param apiVersion the apiVersion value to set.
     * @param callbackUrl the callbackUrl value to set.
     */
    @Generated
    private EdgeSolutionVersionPublishedEventData(String externalValidationId, String targetId,
        String solutionTemplateId, String solutionTemplateVersionId, String solutionVersionId, String apiVersion,
        String callbackUrl) {
        this.externalValidationId = externalValidationId;
        this.targetId = targetId;
        this.solutionTemplateId = solutionTemplateId;
        this.solutionTemplateVersionId = solutionTemplateVersionId;
        this.solutionVersionId = solutionVersionId;
        this.apiVersion = apiVersion;
        this.callbackUrl = callbackUrl;
    }

    /**
     * Get the externalValidationId property: A GUID to uniquely track External Solution Validation.
     *
     * @return the externalValidationId value.
     */
    @Generated
    public String getExternalValidationId() {
        return this.externalValidationId;
    }

    /**
     * Get the targetId property: ARM ID of the Target resource.
     *
     * @return the targetId value.
     */
    @Generated
    public String getTargetId() {
        return this.targetId;
    }

    /**
     * Get the solutionTemplateId property: ARM ID of the Solution Template resource.
     *
     * @return the solutionTemplateId value.
     */
    @Generated
    public String getSolutionTemplateId() {
        return this.solutionTemplateId;
    }

    /**
     * Get the solutionTemplateVersionId property: ARM ID of the Solution Template Version resource.
     *
     * @return the solutionTemplateVersionId value.
     */
    @Generated
    public String getSolutionTemplateVersionId() {
        return this.solutionTemplateVersionId;
    }

    /**
     * Get the solutionVersionId property: ARM ID of the Solution Version resource.
     *
     * @return the solutionVersionId value.
     */
    @Generated
    public String getSolutionVersionId() {
        return this.solutionVersionId;
    }

    /**
     * Get the apiVersion property: API Version supported for the resources.
     *
     * @return the apiVersion value.
     */
    @Generated
    public String getApiVersion() {
        return this.apiVersion;
    }

    /**
     * Get the callbackUrl property: Direct URL to callback for updating validation status.
     *
     * @return the callbackUrl value.
     */
    @Generated
    public String getCallbackUrl() {
        return this.callbackUrl;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("externalValidationId", this.externalValidationId);
        jsonWriter.writeStringField("targetId", this.targetId);
        jsonWriter.writeStringField("solutionTemplateId", this.solutionTemplateId);
        jsonWriter.writeStringField("solutionTemplateVersionId", this.solutionTemplateVersionId);
        jsonWriter.writeStringField("solutionVersionId", this.solutionVersionId);
        jsonWriter.writeStringField("apiVersion", this.apiVersion);
        jsonWriter.writeStringField("callbackUrl", this.callbackUrl);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EdgeSolutionVersionPublishedEventData from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of EdgeSolutionVersionPublishedEventData if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the EdgeSolutionVersionPublishedEventData.
     */
    @Generated
    public static EdgeSolutionVersionPublishedEventData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String externalValidationId = null;
            String targetId = null;
            String solutionTemplateId = null;
            String solutionTemplateVersionId = null;
            String solutionVersionId = null;
            String apiVersion = null;
            String callbackUrl = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("externalValidationId".equals(fieldName)) {
                    externalValidationId = reader.getString();
                } else if ("targetId".equals(fieldName)) {
                    targetId = reader.getString();
                } else if ("solutionTemplateId".equals(fieldName)) {
                    solutionTemplateId = reader.getString();
                } else if ("solutionTemplateVersionId".equals(fieldName)) {
                    solutionTemplateVersionId = reader.getString();
                } else if ("solutionVersionId".equals(fieldName)) {
                    solutionVersionId = reader.getString();
                } else if ("apiVersion".equals(fieldName)) {
                    apiVersion = reader.getString();
                } else if ("callbackUrl".equals(fieldName)) {
                    callbackUrl = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new EdgeSolutionVersionPublishedEventData(externalValidationId, targetId, solutionTemplateId,
                solutionTemplateVersionId, solutionVersionId, apiVersion, callbackUrl);
        });
    }
}
