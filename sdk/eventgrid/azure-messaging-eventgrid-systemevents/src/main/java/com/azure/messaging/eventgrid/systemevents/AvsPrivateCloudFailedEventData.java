// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Schema of the Data property of an EventGridEvent for a Microsoft.AVS.PrivateCloudFailed event.
 */
@Immutable
public final class AvsPrivateCloudFailedEventData extends AvsPrivateCloudEventData {
    /*
     * Failure reason of an event.
     */
    @Generated
    private String failureMessage;

    /**
     * Creates an instance of AvsPrivateCloudFailedEventData class.
     * 
     * @param operationId the operationId value to set.
     */
    @Generated
    private AvsPrivateCloudFailedEventData(String operationId) {
        super(operationId);
    }

    /**
     * Get the failureMessage property: Failure reason of an event.
     * 
     * @return the failureMessage value.
     */
    @Generated
    public String getFailureMessage() {
        return this.failureMessage;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("operationId", getOperationId());
        jsonWriter.writeStringField("failureMessage", this.failureMessage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AvsPrivateCloudFailedEventData from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AvsPrivateCloudFailedEventData if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AvsPrivateCloudFailedEventData.
     */
    @Generated
    public static AvsPrivateCloudFailedEventData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String operationId = null;
            String failureMessage = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("operationId".equals(fieldName)) {
                    operationId = reader.getString();
                } else if ("failureMessage".equals(fieldName)) {
                    failureMessage = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            AvsPrivateCloudFailedEventData deserializedAvsPrivateCloudFailedEventData
                = new AvsPrivateCloudFailedEventData(operationId);
            deserializedAvsPrivateCloudFailedEventData.failureMessage = failureMessage;

            return deserializedAvsPrivateCloudFailedEventData;
        });
    }
}
