// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents.models;

/**
 * EventGrid MQTT Client Disconnection Reason.
 */
public enum EventGridMqttClientDisconnectionReason {
    /**
     * The client got disconnected for any authentication reasons (for example, certificate expired, client got
     * disabled, or client configuration changed).
     */
    CLIENT_AUTHENTICATION_ERROR("ClientAuthenticationError"),

    /**
     * The client got disconnected for any authorization reasons (for example, because of a change in the configuration
     * of topic spaces, permission bindings, or client groups).
     */
    CLIENT_AUTHORIZATION_ERROR("ClientAuthorizationError"),

    /**
     * The client sent a bad request or used one of the unsupported features that resulted in a connection termination
     * by the service.
     */
    CLIENT_ERROR("ClientError"),

    /**
     * The client initiated a graceful disconnect through a DISCONNECT packet for MQTT or a close frame for MQTT over
     * WebSocket.
     */
    CLIENT_INITIATED_DISCONNECT("ClientInitiatedDisconnect"),

    /**
     * The client-server connection is lost. (EXCHANGE ONLINE PROTECTION).
     */
    CONNECTION_LOST("ConnectionLost"),

    /**
     * The client's IP address is blocked by IP filter or Private links configuration.
     */
    IP_FORBIDDEN("IpForbidden"),

    /**
     * The client exceeded one or more of the throttling limits that resulted in a connection termination by the
     * service.
     */
    QUOTA_EXCEEDED("QuotaExceeded"),

    /**
     * The connection got terminated due to an unexpected server error.
     */
    SERVER_ERROR("ServerError"),

    /**
     * The server initiates a graceful disconnect for any operational reason.
     */
    SERVER_INITIATED_DISCONNECT("ServerInitiatedDisconnect"),

    /**
     * The client's queue for unacknowledged QoS1 messages reached its limit, which resulted in a connection termination
     * by the server.
     */
    SESSION_OVERFLOW("SessionOverflow"),

    /**
     * The client reconnected with the same authentication name, which resulted in the termination of the previous
     * connection.
     */
    SESSION_TAKEN_OVER("SessionTakenOver");

    /**
     * The actual serialized value for a EventGridMqttClientDisconnectionReason instance.
     */
    private final String value;

    EventGridMqttClientDisconnectionReason(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a EventGridMqttClientDisconnectionReason instance.
     * 
     * @param value the serialized value to parse.
     * @return the parsed EventGridMqttClientDisconnectionReason object, or null if unable to parse.
     */
    public static EventGridMqttClientDisconnectionReason fromString(String value) {
        if (value == null) {
            return null;
        }
        EventGridMqttClientDisconnectionReason[] items = EventGridMqttClientDisconnectionReason.values();
        for (EventGridMqttClientDisconnectionReason item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String toString() {
        return this.value;
    }
}
