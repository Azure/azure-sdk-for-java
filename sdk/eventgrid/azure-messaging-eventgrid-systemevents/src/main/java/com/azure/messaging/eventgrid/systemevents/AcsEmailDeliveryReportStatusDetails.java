// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Detailed information about the status if any.
 */
@Immutable
public final class AcsEmailDeliveryReportStatusDetails
    implements JsonSerializable<AcsEmailDeliveryReportStatusDetails> {
    /*
     * Detailed status message
     */
    @Generated
    private String statusMessage;

    /*
     * Recipient mail server host name
     */
    @Generated
    private String recipientMailServerHostName;

    /**
     * Creates an instance of AcsEmailDeliveryReportStatusDetails class.
     */
    @Generated
    private AcsEmailDeliveryReportStatusDetails() {
    }

    /**
     * Get the statusMessage property: Detailed status message.
     * 
     * @return the statusMessage value.
     */
    @Generated
    public String getStatusMessage() {
        return this.statusMessage;
    }

    /**
     * Get the recipientMailServerHostName property: Recipient mail server host name.
     * 
     * @return the recipientMailServerHostName value.
     */
    @Generated
    public String getRecipientMailServerHostName() {
        return this.recipientMailServerHostName;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("statusMessage", this.statusMessage);
        jsonWriter.writeStringField("recipientMailServerHostName", this.recipientMailServerHostName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AcsEmailDeliveryReportStatusDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AcsEmailDeliveryReportStatusDetails if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AcsEmailDeliveryReportStatusDetails.
     */
    @Generated
    public static AcsEmailDeliveryReportStatusDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AcsEmailDeliveryReportStatusDetails deserializedAcsEmailDeliveryReportStatusDetails
                = new AcsEmailDeliveryReportStatusDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("statusMessage".equals(fieldName)) {
                    deserializedAcsEmailDeliveryReportStatusDetails.statusMessage = reader.getString();
                } else if ("recipientMailServerHostName".equals(fieldName)) {
                    deserializedAcsEmailDeliveryReportStatusDetails.recipientMailServerHostName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAcsEmailDeliveryReportStatusDetails;
        });
    }
}
