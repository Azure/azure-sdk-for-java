// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Custom Context of Incoming Call.
 */
@Immutable
public final class AcsIncomingCallCustomContext implements JsonSerializable<AcsIncomingCallCustomContext> {
    /*
     * Sip Headers for incoming call
     */
    @Generated
    private Map<String, String> sipHeaders;

    /*
     * Voip Headers for incoming call
     */
    @Generated
    private Map<String, String> voipHeaders;

    /**
     * Creates an instance of AcsIncomingCallCustomContext class.
     */
    @Generated
    private AcsIncomingCallCustomContext() {
    }

    /**
     * Get the sipHeaders property: Sip Headers for incoming call.
     * 
     * @return the sipHeaders value.
     */
    @Generated
    public Map<String, String> getSipHeaders() {
        return this.sipHeaders;
    }

    /**
     * Get the voipHeaders property: Voip Headers for incoming call.
     * 
     * @return the voipHeaders value.
     */
    @Generated
    public Map<String, String> getVoipHeaders() {
        return this.voipHeaders;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AcsIncomingCallCustomContext from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AcsIncomingCallCustomContext if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AcsIncomingCallCustomContext.
     */
    @Generated
    public static AcsIncomingCallCustomContext fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AcsIncomingCallCustomContext deserializedAcsIncomingCallCustomContext = new AcsIncomingCallCustomContext();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sipHeaders".equals(fieldName)) {
                    Map<String, String> sipHeaders = reader.readMap(reader1 -> reader1.getString());
                    deserializedAcsIncomingCallCustomContext.sipHeaders = sipHeaders;
                } else if ("voipHeaders".equals(fieldName)) {
                    Map<String, String> voipHeaders = reader.readMap(reader1 -> reader1.getString());
                    deserializedAcsIncomingCallCustomContext.voipHeaders = voipHeaders;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAcsIncomingCallCustomContext;
        });
    }
}
