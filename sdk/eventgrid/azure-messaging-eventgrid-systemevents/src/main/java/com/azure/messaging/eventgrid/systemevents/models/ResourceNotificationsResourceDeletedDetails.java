// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes the schema of the properties under resource info which are common
 * across all ARN system topic delete events.
 */
@Immutable
public final class ResourceNotificationsResourceDeletedDetails
    implements JsonSerializable<ResourceNotificationsResourceDeletedDetails> {
    /*
     * id of the resource for which the event is being emitted
     */
    @Generated
    private String id;

    /*
     * name of the resource for which the event is being emitted
     */
    @Generated
    private String name;

    /*
     * the type of the resource for which the event is being emitted
     */
    @Generated
    private String type;

    /**
     * Creates an instance of ResourceNotificationsResourceDeletedDetails class.
     */
    @Generated
    private ResourceNotificationsResourceDeletedDetails() {
    }

    /**
     * Get the id property: id of the resource for which the event is being emitted.
     * 
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the name property: name of the resource for which the event is being emitted.
     * 
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Get the type property: the type of the resource for which the event is being emitted.
     * 
     * @return the type value.
     */
    @Generated
    public String getType() {
        return this.type;
    }

    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceNotificationsResourceDeletedDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceNotificationsResourceDeletedDetails if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceNotificationsResourceDeletedDetails.
     */
    @Generated
    public static ResourceNotificationsResourceDeletedDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceNotificationsResourceDeletedDetails deserializedResourceNotificationsResourceDeletedDetails
                = new ResourceNotificationsResourceDeletedDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedResourceNotificationsResourceDeletedDetails.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedResourceNotificationsResourceDeletedDetails.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedResourceNotificationsResourceDeletedDetails.type = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceNotificationsResourceDeletedDetails;
        });
    }
}
