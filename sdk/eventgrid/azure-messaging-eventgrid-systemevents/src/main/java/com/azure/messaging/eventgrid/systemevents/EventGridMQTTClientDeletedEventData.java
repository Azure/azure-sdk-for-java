// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Event data for Microsoft.EventGrid.MQTTClientDeleted event.
 */
@Immutable
public final class EventGridMQTTClientDeletedEventData extends EventGridMQTTClientEventData {
    /*
     * Name of the Event Grid namespace where the MQTT client was created or updated.
     */
    @Generated
    private String namespaceName;

    /*
     * Name of the client resource in the Event Grid namespace.
     */
    @Generated
    private String clientName;

    /*
     * Unique identifier for the MQTT client that the client presents to the service
     * for authentication. This case-sensitive string can be up to 128 characters
     * long, and supports UTF-8 characters.
     */
    @Generated
    private String clientAuthenticationName;

    /**
     * Creates an instance of EventGridMQTTClientDeletedEventData class.
     */
    @Generated
    private EventGridMQTTClientDeletedEventData() {
    }

    /**
     * Get the namespaceName property: Name of the Event Grid namespace where the MQTT client was created or updated.
     * 
     * @return the namespaceName value.
     */
    @Generated
    @Override
    public String getNamespaceName() {
        return this.namespaceName;
    }

    /**
     * Get the clientName property: Name of the client resource in the Event Grid namespace.
     * 
     * @return the clientName value.
     */
    @Generated
    @Override
    public String getClientName() {
        return this.clientName;
    }

    /**
     * Get the clientAuthenticationName property: Unique identifier for the MQTT client that the client presents to the
     * service
     * for authentication. This case-sensitive string can be up to 128 characters
     * long, and supports UTF-8 characters.
     * 
     * @return the clientAuthenticationName value.
     */
    @Generated
    @Override
    public String getClientAuthenticationName() {
        return this.clientAuthenticationName;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("clientAuthenticationName", getClientAuthenticationName());
        jsonWriter.writeStringField("clientName", getClientName());
        jsonWriter.writeStringField("namespaceName", getNamespaceName());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EventGridMQTTClientDeletedEventData from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EventGridMQTTClientDeletedEventData if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EventGridMQTTClientDeletedEventData.
     */
    @Generated
    public static EventGridMQTTClientDeletedEventData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EventGridMQTTClientDeletedEventData deserializedEventGridMQTTClientDeletedEventData
                = new EventGridMQTTClientDeletedEventData();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("clientAuthenticationName".equals(fieldName)) {
                    deserializedEventGridMQTTClientDeletedEventData.clientAuthenticationName = reader.getString();
                } else if ("clientName".equals(fieldName)) {
                    deserializedEventGridMQTTClientDeletedEventData.clientName = reader.getString();
                } else if ("namespaceName".equals(fieldName)) {
                    deserializedEventGridMQTTClientDeletedEventData.namespaceName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEventGridMQTTClientDeletedEventData;
        });
    }
}
