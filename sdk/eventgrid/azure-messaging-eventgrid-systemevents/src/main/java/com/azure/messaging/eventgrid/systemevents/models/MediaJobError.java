// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.systemevents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Details of JobOutput errors.
 */
@Immutable
public final class MediaJobError implements JsonSerializable<MediaJobError> {
    /*
     * Error code describing the error.
     */
    @Generated
    private final MediaJobErrorCode code;

    /*
     * A human-readable language-dependent representation of the error.
     */
    @Generated
    private String message;

    /*
     * Helps with categorization of errors.
     */
    @Generated
    private final MediaJobErrorCategory category;

    /*
     * Indicates that it may be possible to retry the Job. If retry is unsuccessful, please contact Azure support via
     * Azure Portal.
     */
    @Generated
    private final MediaJobRetry retry;

    /*
     * An array of details about specific errors that led to this reported error.
     */
    @Generated
    private final List<MediaJobErrorDetail> details;

    /**
     * Creates an instance of MediaJobError class.
     * 
     * @param code the code value to set.
     * @param category the category value to set.
     * @param retry the retry value to set.
     * @param details the details value to set.
     */
    @Generated
    private MediaJobError(MediaJobErrorCode code, MediaJobErrorCategory category, MediaJobRetry retry,
        List<MediaJobErrorDetail> details) {
        this.code = code;
        this.category = category;
        this.retry = retry;
        this.details = details;
    }

    /**
     * Get the code property: Error code describing the error.
     * 
     * @return the code value.
     */
    @Generated
    public MediaJobErrorCode getCode() {
        return this.code;
    }

    /**
     * Get the message property: A human-readable language-dependent representation of the error.
     * 
     * @return the message value.
     */
    @Generated
    public String getMessage() {
        return this.message;
    }

    /**
     * Get the category property: Helps with categorization of errors.
     * 
     * @return the category value.
     */
    @Generated
    public MediaJobErrorCategory getCategory() {
        return this.category;
    }

    /**
     * Get the retry property: Indicates that it may be possible to retry the Job. If retry is unsuccessful, please
     * contact Azure support via Azure Portal.
     * 
     * @return the retry value.
     */
    @Generated
    public MediaJobRetry getRetry() {
        return this.retry;
    }

    /**
     * Get the details property: An array of details about specific errors that led to this reported error.
     * 
     * @return the details value.
     */
    @Generated
    public List<MediaJobErrorDetail> getDetails() {
        return this.details;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("code", this.code == null ? null : this.code.toString());
        jsonWriter.writeStringField("category", this.category == null ? null : this.category.toString());
        jsonWriter.writeStringField("retry", this.retry == null ? null : this.retry.toString());
        jsonWriter.writeArrayField("details", this.details, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("message", this.message);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MediaJobError from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MediaJobError if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MediaJobError.
     */
    @Generated
    public static MediaJobError fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MediaJobErrorCode code = null;
            MediaJobErrorCategory category = null;
            MediaJobRetry retry = null;
            List<MediaJobErrorDetail> details = null;
            String message = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    code = MediaJobErrorCode.fromString(reader.getString());
                } else if ("category".equals(fieldName)) {
                    category = MediaJobErrorCategory.fromString(reader.getString());
                } else if ("retry".equals(fieldName)) {
                    retry = MediaJobRetry.fromString(reader.getString());
                } else if ("details".equals(fieldName)) {
                    details = reader.readArray(reader1 -> MediaJobErrorDetail.fromJson(reader1));
                } else if ("message".equals(fieldName)) {
                    message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            MediaJobError deserializedMediaJobError = new MediaJobError(code, category, retry, details);
            deserializedMediaJobError.message = message;

            return deserializedMediaJobError;
        });
    }
}
