// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.messaging.eventgrid.standard.http.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.core.util.CoreUtils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Properties of an event published to an Azure Messaging EventGrid Namespace topic using the CloudEvent 1.0 Schema.
 */
@Fluent
public final class CloudEvent {
    /*
     * An identifier for the event. The combination of id and source must be unique for each distinct event.
     */
    @Generated
    @JsonProperty(value = "id")
    private String id;

    /*
     * Identifies the context in which an event happened. The combination of id and source must be unique for each
     * distinct event.
     */
    @Generated
    @JsonProperty(value = "source")
    private String source;

    /*
     * Event data specific to the event type.
     */
    @Generated
    @JsonProperty(value = "data")
    private Object data;

    /*
     * Event data specific to the event type, encoded as a base64 string.
     */
    @Generated
    @JsonProperty(value = "data_base64")
    private byte[] dataBase64;

    /*
     * Type of event related to the originating occurrence.
     */
    @Generated
    @JsonProperty(value = "type")
    private String type;

    /*
     * The time (in UTC) the event was generated, in RFC3339 format.
     */
    @Generated
    @JsonProperty(value = "time")
    private OffsetDateTime time;

    /*
     * The version of the CloudEvents specification which the event uses.
     */
    @Generated
    @JsonProperty(value = "specversion")
    private String specversion;

    /*
     * Identifies the schema that data adheres to.
     */
    @Generated
    @JsonProperty(value = "dataschema")
    private String dataschema;

    /*
     * Content type of data value.
     */
    @Generated
    @JsonProperty(value = "datacontenttype")
    private String datacontenttype;

    /*
     * This describes the subject of the event in the context of the event producer (identified by source).
     */
    @Generated
    @JsonProperty(value = "subject")
    private String subject;

    /**
     * Creates an instance of CloudEvent class.
     * 
     * @param id the id value to set.
     * @param source the source value to set.
     * @param type the type value to set.
     * @param specversion the specversion value to set.
     */
    @Generated
    @JsonCreator
    public CloudEvent(@JsonProperty(value = "id") String id, @JsonProperty(value = "source") String source,
        @JsonProperty(value = "type") String type, @JsonProperty(value = "specversion") String specversion) {
        this.id = id;
        this.source = source;
        this.type = type;
        this.specversion = specversion;
    }

    /**
     * Get the id property: An identifier for the event. The combination of id and source must be unique for each
     * distinct event.
     * 
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the source property: Identifies the context in which an event happened. The combination of id and source
     * must be unique for each distinct event.
     * 
     * @return the source value.
     */
    @Generated
    public String getSource() {
        return this.source;
    }

    /**
     * Get the data property: Event data specific to the event type.
     * 
     * @return the data value.
     */
    @Generated
    public Object getData() {
        return this.data;
    }

    /**
     * Set the data property: Event data specific to the event type.
     * 
     * @param data the data value to set.
     * @return the CloudEvent object itself.
     */
    @Generated
    public CloudEvent setData(Object data) {
        this.data = data;
        return this;
    }

    /**
     * Get the dataBase64 property: Event data specific to the event type, encoded as a base64 string.
     * 
     * @return the dataBase64 value.
     */
    @Generated
    public byte[] getDataBase64() {
        return CoreUtils.clone(this.dataBase64);
    }

    /**
     * Set the dataBase64 property: Event data specific to the event type, encoded as a base64 string.
     * 
     * @param dataBase64 the dataBase64 value to set.
     * @return the CloudEvent object itself.
     */
    @Generated
    public CloudEvent setDataBase64(byte[] dataBase64) {
        this.dataBase64 = CoreUtils.clone(dataBase64);
        return this;
    }

    /**
     * Get the type property: Type of event related to the originating occurrence.
     * 
     * @return the type value.
     */
    @Generated
    public String getType() {
        return this.type;
    }

    /**
     * Get the time property: The time (in UTC) the event was generated, in RFC3339 format.
     * 
     * @return the time value.
     */
    @Generated
    public OffsetDateTime getTime() {
        return this.time;
    }

    /**
     * Set the time property: The time (in UTC) the event was generated, in RFC3339 format.
     * 
     * @param time the time value to set.
     * @return the CloudEvent object itself.
     */
    @Generated
    public CloudEvent setTime(OffsetDateTime time) {
        this.time = time;
        return this;
    }

    /**
     * Get the specversion property: The version of the CloudEvents specification which the event uses.
     * 
     * @return the specversion value.
     */
    @Generated
    public String getSpecversion() {
        return this.specversion;
    }

    /**
     * Get the dataschema property: Identifies the schema that data adheres to.
     * 
     * @return the dataschema value.
     */
    @Generated
    public String getDataschema() {
        return this.dataschema;
    }

    /**
     * Set the dataschema property: Identifies the schema that data adheres to.
     * 
     * @param dataschema the dataschema value to set.
     * @return the CloudEvent object itself.
     */
    @Generated
    public CloudEvent setDataschema(String dataschema) {
        this.dataschema = dataschema;
        return this;
    }

    /**
     * Get the datacontenttype property: Content type of data value.
     * 
     * @return the datacontenttype value.
     */
    @Generated
    public String getDatacontenttype() {
        return this.datacontenttype;
    }

    /**
     * Set the datacontenttype property: Content type of data value.
     * 
     * @param datacontenttype the datacontenttype value to set.
     * @return the CloudEvent object itself.
     */
    @Generated
    public CloudEvent setDatacontenttype(String datacontenttype) {
        this.datacontenttype = datacontenttype;
        return this;
    }

    /**
     * Get the subject property: This describes the subject of the event in the context of the event producer
     * (identified by source).
     * 
     * @return the subject value.
     */
    @Generated
    public String getSubject() {
        return this.subject;
    }

    /**
     * Set the subject property: This describes the subject of the event in the context of the event producer
     * (identified by source).
     * 
     * @param subject the subject value to set.
     * @return the CloudEvent object itself.
     */
    @Generated
    public CloudEvent setSubject(String subject) {
        this.subject = subject;
        return this;
    }
}
