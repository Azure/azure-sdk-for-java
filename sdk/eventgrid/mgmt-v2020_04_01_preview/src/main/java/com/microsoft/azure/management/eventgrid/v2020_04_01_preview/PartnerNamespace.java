/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.eventgrid.v2020_04_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.eventgrid.v2020_04_01_preview.implementation.EventGridManager;
import com.microsoft.azure.management.eventgrid.v2020_04_01_preview.implementation.PartnerNamespaceInner;

/**
 * Type representing PartnerNamespace.
 */
public interface PartnerNamespace extends HasInner<PartnerNamespaceInner>, Resource, GroupableResourceCore<EventGridManager, PartnerNamespaceInner>, HasResourceGroup, Refreshable<PartnerNamespace>, Updatable<PartnerNamespace.Update>, HasManager<EventGridManager> {
    /**
     * @return the endpoint value.
     */
    String endpoint();

    /**
     * @return the partnerRegistrationFullyQualifiedId value.
     */
    String partnerRegistrationFullyQualifiedId();

    /**
     * @return the provisioningState value.
     */
    PartnerNamespaceProvisioningState provisioningState();

    /**
     * The entirety of the PartnerNamespace definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of PartnerNamespace definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a PartnerNamespace definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the PartnerNamespace definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the partnernamespace definition allowing to specify PartnerRegistrationFullyQualifiedId.
         */
        interface WithPartnerRegistrationFullyQualifiedId {
            /**
             * Specifies partnerRegistrationFullyQualifiedId.
             * @param partnerRegistrationFullyQualifiedId The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:
 /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}
             * @return the next definition stage
             */
            WithCreate withPartnerRegistrationFullyQualifiedId(String partnerRegistrationFullyQualifiedId);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<PartnerNamespace>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithPartnerRegistrationFullyQualifiedId {
        }
    }
    /**
     * The template for a PartnerNamespace update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<PartnerNamespace>, Resource.UpdateWithTags<Update>, UpdateStages.WithPartnerRegistrationFullyQualifiedId {
    }

    /**
     * Grouping of PartnerNamespace update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the partnernamespace update allowing to specify PartnerRegistrationFullyQualifiedId.
         */
        interface WithPartnerRegistrationFullyQualifiedId {
            /**
             * Specifies partnerRegistrationFullyQualifiedId.
             * @param partnerRegistrationFullyQualifiedId The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:
 /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}
             * @return the next update stage
             */
            Update withPartnerRegistrationFullyQualifiedId(String partnerRegistrationFullyQualifiedId);
        }

    }
}
