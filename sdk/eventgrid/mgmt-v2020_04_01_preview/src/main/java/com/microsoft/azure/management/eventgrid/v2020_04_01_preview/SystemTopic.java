/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.eventgrid.v2020_04_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.eventgrid.v2020_04_01_preview.implementation.EventGridManager;
import com.microsoft.azure.management.eventgrid.v2020_04_01_preview.implementation.SystemTopicInner;

/**
 * Type representing SystemTopic.
 */
public interface SystemTopic extends HasInner<SystemTopicInner>, Resource, GroupableResourceCore<EventGridManager, SystemTopicInner>, HasResourceGroup, Refreshable<SystemTopic>, Updatable<SystemTopic.Update>, HasManager<EventGridManager> {
    /**
     * @return the metricResourceId value.
     */
    String metricResourceId();

    /**
     * @return the provisioningState value.
     */
    ResourceProvisioningState provisioningState();

    /**
     * @return the source value.
     */
    String source();

    /**
     * @return the topicType value.
     */
    String topicType();

    /**
     * The entirety of the SystemTopic definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of SystemTopic definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a SystemTopic definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the SystemTopic definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the systemtopic definition allowing to specify Source.
         */
        interface WithSource {
            /**
             * Specifies source.
             * @param source Source for the system topic
             * @return the next definition stage
             */
            WithCreate withSource(String source);
        }

        /**
         * The stage of the systemtopic definition allowing to specify TopicType.
         */
        interface WithTopicType {
            /**
             * Specifies topicType.
             * @param topicType TopicType for the system topic
             * @return the next definition stage
             */
            WithCreate withTopicType(String topicType);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<SystemTopic>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithSource, DefinitionStages.WithTopicType {
        }
    }
    /**
     * The template for a SystemTopic update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<SystemTopic>, Resource.UpdateWithTags<Update>, UpdateStages.WithSource, UpdateStages.WithTopicType {
    }

    /**
     * Grouping of SystemTopic update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the systemtopic update allowing to specify Source.
         */
        interface WithSource {
            /**
             * Specifies source.
             * @param source Source for the system topic
             * @return the next update stage
             */
            Update withSource(String source);
        }

        /**
         * The stage of the systemtopic update allowing to specify TopicType.
         */
        interface WithTopicType {
            /**
             * Specifies topicType.
             * @param topicType TopicType for the system topic
             * @return the next update stage
             */
            Update withTopicType(String topicType);
        }

    }
}
