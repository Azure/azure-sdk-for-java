// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The identity information for retrieving the certificate for custom JWT authentication.
 */
@Fluent
public final class CustomJwtAuthenticationManagedIdentity
    implements JsonSerializable<CustomJwtAuthenticationManagedIdentity> {
    /*
     * The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.
     */
    private CustomJwtAuthenticationManagedIdentityType type;

    /*
     * The user identity associated with the resource.
     */
    private String userAssignedIdentity;

    /**
     * Creates an instance of CustomJwtAuthenticationManagedIdentity class.
     */
    public CustomJwtAuthenticationManagedIdentity() {
    }

    /**
     * Get the type property: The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.
     * 
     * @return the type value.
     */
    public CustomJwtAuthenticationManagedIdentityType type() {
        return this.type;
    }

    /**
     * Set the type property: The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.
     * 
     * @param type the type value to set.
     * @return the CustomJwtAuthenticationManagedIdentity object itself.
     */
    public CustomJwtAuthenticationManagedIdentity withType(CustomJwtAuthenticationManagedIdentityType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the userAssignedIdentity property: The user identity associated with the resource.
     * 
     * @return the userAssignedIdentity value.
     */
    public String userAssignedIdentity() {
        return this.userAssignedIdentity;
    }

    /**
     * Set the userAssignedIdentity property: The user identity associated with the resource.
     * 
     * @param userAssignedIdentity the userAssignedIdentity value to set.
     * @return the CustomJwtAuthenticationManagedIdentity object itself.
     */
    public CustomJwtAuthenticationManagedIdentity withUserAssignedIdentity(String userAssignedIdentity) {
        this.userAssignedIdentity = userAssignedIdentity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (type() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property type in model CustomJwtAuthenticationManagedIdentity"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CustomJwtAuthenticationManagedIdentity.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeStringField("userAssignedIdentity", this.userAssignedIdentity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomJwtAuthenticationManagedIdentity from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomJwtAuthenticationManagedIdentity if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CustomJwtAuthenticationManagedIdentity.
     */
    public static CustomJwtAuthenticationManagedIdentity fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomJwtAuthenticationManagedIdentity deserializedCustomJwtAuthenticationManagedIdentity
                = new CustomJwtAuthenticationManagedIdentity();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedCustomJwtAuthenticationManagedIdentity.type
                        = CustomJwtAuthenticationManagedIdentityType.fromString(reader.getString());
                } else if ("userAssignedIdentity".equals(fieldName)) {
                    deserializedCustomJwtAuthenticationManagedIdentity.userAssignedIdentity = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomJwtAuthenticationManagedIdentity;
        });
    }
}
