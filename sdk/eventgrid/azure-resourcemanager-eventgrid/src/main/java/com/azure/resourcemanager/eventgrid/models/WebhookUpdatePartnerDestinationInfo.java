// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.eventgrid.fluent.models.WebhookPartnerDestinationProperties;
import java.io.IOException;

/**
 * Information about the update of the WebHook of the partner destination.
 */
@Fluent
public final class WebhookUpdatePartnerDestinationInfo extends PartnerUpdateDestinationInfo {
    /*
     * Type of the endpoint for the partner destination
     */
    private PartnerEndpointType endpointType = PartnerEndpointType.WEB_HOOK;

    /*
     * WebHook Properties of the partner destination.
     */
    private WebhookPartnerDestinationProperties innerProperties;

    /**
     * Creates an instance of WebhookUpdatePartnerDestinationInfo class.
     */
    public WebhookUpdatePartnerDestinationInfo() {
    }

    /**
     * Get the endpointType property: Type of the endpoint for the partner destination.
     * 
     * @return the endpointType value.
     */
    @Override
    public PartnerEndpointType endpointType() {
        return this.endpointType;
    }

    /**
     * Get the innerProperties property: WebHook Properties of the partner destination.
     * 
     * @return the innerProperties value.
     */
    private WebhookPartnerDestinationProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the endpointUrl property: The URL that represents the endpoint of the partner destination.
     * 
     * @return the endpointUrl value.
     */
    public String endpointUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().endpointUrl();
    }

    /**
     * Set the endpointUrl property: The URL that represents the endpoint of the partner destination.
     * 
     * @param endpointUrl the endpointUrl value to set.
     * @return the WebhookUpdatePartnerDestinationInfo object itself.
     */
    public WebhookUpdatePartnerDestinationInfo withEndpointUrl(String endpointUrl) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WebhookPartnerDestinationProperties();
        }
        this.innerProperties().withEndpointUrl(endpointUrl);
        return this;
    }

    /**
     * Get the endpointBaseUrl property: The base URL that represents the endpoint of the partner destination.
     * 
     * @return the endpointBaseUrl value.
     */
    public String endpointBaseUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().endpointBaseUrl();
    }

    /**
     * Set the endpointBaseUrl property: The base URL that represents the endpoint of the partner destination.
     * 
     * @param endpointBaseUrl the endpointBaseUrl value to set.
     * @return the WebhookUpdatePartnerDestinationInfo object itself.
     */
    public WebhookUpdatePartnerDestinationInfo withEndpointBaseUrl(String endpointBaseUrl) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WebhookPartnerDestinationProperties();
        }
        this.innerProperties().withEndpointBaseUrl(endpointBaseUrl);
        return this;
    }

    /**
     * Get the clientAuthentication property: Partner client authentication.
     * 
     * @return the clientAuthentication value.
     */
    public PartnerClientAuthentication clientAuthentication() {
        return this.innerProperties() == null ? null : this.innerProperties().clientAuthentication();
    }

    /**
     * Set the clientAuthentication property: Partner client authentication.
     * 
     * @param clientAuthentication the clientAuthentication value to set.
     * @return the WebhookUpdatePartnerDestinationInfo object itself.
     */
    public WebhookUpdatePartnerDestinationInfo
        withClientAuthentication(PartnerClientAuthentication clientAuthentication) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WebhookPartnerDestinationProperties();
        }
        this.innerProperties().withClientAuthentication(clientAuthentication);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("endpointType", this.endpointType == null ? null : this.endpointType.toString());
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WebhookUpdatePartnerDestinationInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WebhookUpdatePartnerDestinationInfo if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WebhookUpdatePartnerDestinationInfo.
     */
    public static WebhookUpdatePartnerDestinationInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WebhookUpdatePartnerDestinationInfo deserializedWebhookUpdatePartnerDestinationInfo
                = new WebhookUpdatePartnerDestinationInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("endpointType".equals(fieldName)) {
                    deserializedWebhookUpdatePartnerDestinationInfo.endpointType
                        = PartnerEndpointType.fromString(reader.getString());
                } else if ("properties".equals(fieldName)) {
                    deserializedWebhookUpdatePartnerDestinationInfo.innerProperties
                        = WebhookPartnerDestinationProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWebhookUpdatePartnerDestinationInfo;
        });
    }
}
