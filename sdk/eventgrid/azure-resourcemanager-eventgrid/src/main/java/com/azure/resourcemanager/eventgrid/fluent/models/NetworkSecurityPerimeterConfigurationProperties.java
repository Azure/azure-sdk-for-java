// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigProvisioningState;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssues;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationProfile;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterInfo;
import com.azure.resourcemanager.eventgrid.models.ResourceAssociation;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Network security perimeter configuration information to reflect latest association and nsp profile configuration.
 */
@Fluent
public final class NetworkSecurityPerimeterConfigurationProperties {
    /*
     * Provisioning state to reflect configuration state and indicate status of nsp profile configuration retrieval.
     */
    @JsonProperty(value = "provisioningState")
    private NetworkSecurityPerimeterConfigProvisioningState provisioningState;

    /*
     * Provisioning issues to reflect status when attempting to retrieve nsp profile configuration.
     */
    @JsonProperty(value = "provisioningIssues")
    private List<NetworkSecurityPerimeterConfigurationIssues> provisioningIssues;

    /*
     * Perimeter info for nsp association.
     */
    @JsonProperty(value = "networkSecurityPerimeter")
    private NetworkSecurityPerimeterInfo networkSecurityPerimeter;

    /*
     * Nsp association name and access mode of association.
     */
    @JsonProperty(value = "resourceAssociation")
    private ResourceAssociation resourceAssociation;

    /*
     * Nsp profile configuration, access rules and diagnostic settings.
     */
    @JsonProperty(value = "profile")
    private NetworkSecurityPerimeterConfigurationProfile profile;

    /**
     * Creates an instance of NetworkSecurityPerimeterConfigurationProperties class.
     */
    public NetworkSecurityPerimeterConfigurationProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning state to reflect configuration state and indicate status of nsp
     * profile configuration retrieval.
     * 
     * @return the provisioningState value.
     */
    public NetworkSecurityPerimeterConfigProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: Provisioning state to reflect configuration state and indicate status of nsp
     * profile configuration retrieval.
     * 
     * @param provisioningState the provisioningState value to set.
     * @return the NetworkSecurityPerimeterConfigurationProperties object itself.
     */
    public NetworkSecurityPerimeterConfigurationProperties
        withProvisioningState(NetworkSecurityPerimeterConfigProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the provisioningIssues property: Provisioning issues to reflect status when attempting to retrieve nsp
     * profile configuration.
     * 
     * @return the provisioningIssues value.
     */
    public List<NetworkSecurityPerimeterConfigurationIssues> provisioningIssues() {
        return this.provisioningIssues;
    }

    /**
     * Set the provisioningIssues property: Provisioning issues to reflect status when attempting to retrieve nsp
     * profile configuration.
     * 
     * @param provisioningIssues the provisioningIssues value to set.
     * @return the NetworkSecurityPerimeterConfigurationProperties object itself.
     */
    public NetworkSecurityPerimeterConfigurationProperties
        withProvisioningIssues(List<NetworkSecurityPerimeterConfigurationIssues> provisioningIssues) {
        this.provisioningIssues = provisioningIssues;
        return this;
    }

    /**
     * Get the networkSecurityPerimeter property: Perimeter info for nsp association.
     * 
     * @return the networkSecurityPerimeter value.
     */
    public NetworkSecurityPerimeterInfo networkSecurityPerimeter() {
        return this.networkSecurityPerimeter;
    }

    /**
     * Set the networkSecurityPerimeter property: Perimeter info for nsp association.
     * 
     * @param networkSecurityPerimeter the networkSecurityPerimeter value to set.
     * @return the NetworkSecurityPerimeterConfigurationProperties object itself.
     */
    public NetworkSecurityPerimeterConfigurationProperties
        withNetworkSecurityPerimeter(NetworkSecurityPerimeterInfo networkSecurityPerimeter) {
        this.networkSecurityPerimeter = networkSecurityPerimeter;
        return this;
    }

    /**
     * Get the resourceAssociation property: Nsp association name and access mode of association.
     * 
     * @return the resourceAssociation value.
     */
    public ResourceAssociation resourceAssociation() {
        return this.resourceAssociation;
    }

    /**
     * Set the resourceAssociation property: Nsp association name and access mode of association.
     * 
     * @param resourceAssociation the resourceAssociation value to set.
     * @return the NetworkSecurityPerimeterConfigurationProperties object itself.
     */
    public NetworkSecurityPerimeterConfigurationProperties
        withResourceAssociation(ResourceAssociation resourceAssociation) {
        this.resourceAssociation = resourceAssociation;
        return this;
    }

    /**
     * Get the profile property: Nsp profile configuration, access rules and diagnostic settings.
     * 
     * @return the profile value.
     */
    public NetworkSecurityPerimeterConfigurationProfile profile() {
        return this.profile;
    }

    /**
     * Set the profile property: Nsp profile configuration, access rules and diagnostic settings.
     * 
     * @param profile the profile value to set.
     * @return the NetworkSecurityPerimeterConfigurationProperties object itself.
     */
    public NetworkSecurityPerimeterConfigurationProperties
        withProfile(NetworkSecurityPerimeterConfigurationProfile profile) {
        this.profile = profile;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (provisioningIssues() != null) {
            provisioningIssues().forEach(e -> e.validate());
        }
        if (networkSecurityPerimeter() != null) {
            networkSecurityPerimeter().validate();
        }
        if (resourceAssociation() != null) {
            resourceAssociation().validate();
        }
        if (profile() != null) {
            profile().validate();
        }
    }
}
