// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Thumbprints are used by the service to validate the device permission when authentication is done using self signed
 * certificate.
 */
@Fluent
public final class ClientCertificateThumbprint {
    /*
     * The primary thumbprint used for validation.
     */
    @JsonProperty(value = "primary")
    private String primary;

    /*
     * The secondary thumbprint used for validation.
     */
    @JsonProperty(value = "secondary")
    private String secondary;

    /** Creates an instance of ClientCertificateThumbprint class. */
    public ClientCertificateThumbprint() {
    }

    /**
     * Get the primary property: The primary thumbprint used for validation.
     *
     * @return the primary value.
     */
    public String primary() {
        return this.primary;
    }

    /**
     * Set the primary property: The primary thumbprint used for validation.
     *
     * @param primary the primary value to set.
     * @return the ClientCertificateThumbprint object itself.
     */
    public ClientCertificateThumbprint withPrimary(String primary) {
        this.primary = primary;
        return this;
    }

    /**
     * Get the secondary property: The secondary thumbprint used for validation.
     *
     * @return the secondary value.
     */
    public String secondary() {
        return this.secondary;
    }

    /**
     * Set the secondary property: The secondary thumbprint used for validation.
     *
     * @param secondary the secondary value to set.
     * @return the ClientCertificateThumbprint object itself.
     */
    public ClientCertificateThumbprint withSecondary(String secondary) {
        this.secondary = secondary;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
