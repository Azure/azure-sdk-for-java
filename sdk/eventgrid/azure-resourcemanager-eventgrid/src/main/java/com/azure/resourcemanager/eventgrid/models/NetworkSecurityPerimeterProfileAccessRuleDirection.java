// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/**
 * NSP access rule direction.
 */
public final class NetworkSecurityPerimeterProfileAccessRuleDirection
    extends ExpandableStringEnum<NetworkSecurityPerimeterProfileAccessRuleDirection> {
    /**
     * Static value Inbound for NetworkSecurityPerimeterProfileAccessRuleDirection.
     */
    public static final NetworkSecurityPerimeterProfileAccessRuleDirection INBOUND = fromString("Inbound");

    /**
     * Static value Outbound for NetworkSecurityPerimeterProfileAccessRuleDirection.
     */
    public static final NetworkSecurityPerimeterProfileAccessRuleDirection OUTBOUND = fromString("Outbound");

    /**
     * Creates a new instance of NetworkSecurityPerimeterProfileAccessRuleDirection value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public NetworkSecurityPerimeterProfileAccessRuleDirection() {
    }

    /**
     * Creates or finds a NetworkSecurityPerimeterProfileAccessRuleDirection from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding NetworkSecurityPerimeterProfileAccessRuleDirection.
     */
    @JsonCreator
    public static NetworkSecurityPerimeterProfileAccessRuleDirection fromString(String name) {
        return fromString(name, NetworkSecurityPerimeterProfileAccessRuleDirection.class);
    }

    /**
     * Gets known NetworkSecurityPerimeterProfileAccessRuleDirection values.
     * 
     * @return known NetworkSecurityPerimeterProfileAccessRuleDirection values.
     */
    public static Collection<NetworkSecurityPerimeterProfileAccessRuleDirection> values() {
        return values(NetworkSecurityPerimeterProfileAccessRuleDirection.class);
    }
}
