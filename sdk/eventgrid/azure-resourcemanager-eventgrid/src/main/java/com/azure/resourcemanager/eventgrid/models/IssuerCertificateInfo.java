// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Information about the certificate that is used for token validation.
 */
@Fluent
public final class IssuerCertificateInfo {
    /*
     * Keyvault certificate URL in https://keyvaultname.vault.azure.net/certificates/certificateName/certificateVersion format.
     */
    @JsonProperty(value = "certificateUrl", required = true)
    private String certificateUrl;

    /*
     * The identity that will be used to access the certificate.
     */
    @JsonProperty(value = "identity")
    private CustomJwtAuthenticationManagedIdentity identity;

    /**
     * Creates an instance of IssuerCertificateInfo class.
     */
    public IssuerCertificateInfo() {
    }

    /**
     * Get the certificateUrl property: Keyvault certificate URL in
     * https://keyvaultname.vault.azure.net/certificates/certificateName/certificateVersion format.
     * 
     * @return the certificateUrl value.
     */
    public String certificateUrl() {
        return this.certificateUrl;
    }

    /**
     * Set the certificateUrl property: Keyvault certificate URL in
     * https://keyvaultname.vault.azure.net/certificates/certificateName/certificateVersion format.
     * 
     * @param certificateUrl the certificateUrl value to set.
     * @return the IssuerCertificateInfo object itself.
     */
    public IssuerCertificateInfo withCertificateUrl(String certificateUrl) {
        this.certificateUrl = certificateUrl;
        return this;
    }

    /**
     * Get the identity property: The identity that will be used to access the certificate.
     * 
     * @return the identity value.
     */
    public CustomJwtAuthenticationManagedIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: The identity that will be used to access the certificate.
     * 
     * @param identity the identity value to set.
     * @return the IssuerCertificateInfo object itself.
     */
    public IssuerCertificateInfo withIdentity(CustomJwtAuthenticationManagedIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (certificateUrl() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property certificateUrl in model IssuerCertificateInfo"));
        }
        if (identity() != null) {
            identity().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(IssuerCertificateInfo.class);
}
