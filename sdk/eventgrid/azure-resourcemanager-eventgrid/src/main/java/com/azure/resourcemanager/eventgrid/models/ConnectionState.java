// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** ConnectionState information. */
@Fluent
public final class ConnectionState {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ConnectionState.class);

    /*
     * Status of the connection.
     */
    @JsonProperty(value = "status")
    private PersistedConnectionStatus status;

    /*
     * Description of the connection state.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Actions required (if any).
     */
    @JsonProperty(value = "actionsRequired")
    private String actionsRequired;

    /**
     * Get the status property: Status of the connection.
     *
     * @return the status value.
     */
    public PersistedConnectionStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Status of the connection.
     *
     * @param status the status value to set.
     * @return the ConnectionState object itself.
     */
    public ConnectionState withStatus(PersistedConnectionStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the description property: Description of the connection state.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the connection state.
     *
     * @param description the description value to set.
     * @return the ConnectionState object itself.
     */
    public ConnectionState withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the actionsRequired property: Actions required (if any).
     *
     * @return the actionsRequired value.
     */
    public String actionsRequired() {
        return this.actionsRequired;
    }

    /**
     * Set the actionsRequired property: Actions required (if any).
     *
     * @param actionsRequired the actionsRequired value to set.
     * @return the ConnectionState object itself.
     */
    public ConnectionState withActionsRequired(String actionsRequired) {
        this.actionsRequired = actionsRequired;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
