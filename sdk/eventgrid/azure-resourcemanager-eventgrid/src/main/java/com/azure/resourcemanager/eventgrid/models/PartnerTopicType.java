// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Properties of a partner topic type. */
@JsonFlatten
@Fluent
public class PartnerTopicType extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PartnerTopicType.class);

    /*
     * Official name of the partner.
     */
    @JsonProperty(value = "properties.partnerName")
    private String partnerName;

    /*
     * Name of the partner topic type. This name should be unique among all
     * partner topic types names.
     */
    @JsonProperty(value = "properties.topicTypeName")
    private String topicTypeName;

    /*
     * Display Name for the partner topic type.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /*
     * Description of the partner topic type.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /*
     * URI of the partner website that can be used by Azure customers to setup
     * Event Grid
     * integration on an event source.
     */
    @JsonProperty(value = "properties.setupUri")
    private String setupUri;

    /*
     * Status of whether the customer has authorized a partner to create
     * partner topics
     * in the customer's subscription.
     */
    @JsonProperty(value = "properties.authorizationState")
    private PartnerTopicTypeAuthorizationState authorizationState;

    /**
     * Get the partnerName property: Official name of the partner.
     *
     * @return the partnerName value.
     */
    public String partnerName() {
        return this.partnerName;
    }

    /**
     * Set the partnerName property: Official name of the partner.
     *
     * @param partnerName the partnerName value to set.
     * @return the PartnerTopicType object itself.
     */
    public PartnerTopicType withPartnerName(String partnerName) {
        this.partnerName = partnerName;
        return this;
    }

    /**
     * Get the topicTypeName property: Name of the partner topic type. This name should be unique among all partner
     * topic types names.
     *
     * @return the topicTypeName value.
     */
    public String topicTypeName() {
        return this.topicTypeName;
    }

    /**
     * Set the topicTypeName property: Name of the partner topic type. This name should be unique among all partner
     * topic types names.
     *
     * @param topicTypeName the topicTypeName value to set.
     * @return the PartnerTopicType object itself.
     */
    public PartnerTopicType withTopicTypeName(String topicTypeName) {
        this.topicTypeName = topicTypeName;
        return this;
    }

    /**
     * Get the displayName property: Display Name for the partner topic type.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Display Name for the partner topic type.
     *
     * @param displayName the displayName value to set.
     * @return the PartnerTopicType object itself.
     */
    public PartnerTopicType withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the description property: Description of the partner topic type.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the partner topic type.
     *
     * @param description the description value to set.
     * @return the PartnerTopicType object itself.
     */
    public PartnerTopicType withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the setupUri property: URI of the partner website that can be used by Azure customers to setup Event Grid
     * integration on an event source.
     *
     * @return the setupUri value.
     */
    public String setupUri() {
        return this.setupUri;
    }

    /**
     * Set the setupUri property: URI of the partner website that can be used by Azure customers to setup Event Grid
     * integration on an event source.
     *
     * @param setupUri the setupUri value to set.
     * @return the PartnerTopicType object itself.
     */
    public PartnerTopicType withSetupUri(String setupUri) {
        this.setupUri = setupUri;
        return this;
    }

    /**
     * Get the authorizationState property: Status of whether the customer has authorized a partner to create partner
     * topics in the customer's subscription.
     *
     * @return the authorizationState value.
     */
    public PartnerTopicTypeAuthorizationState authorizationState() {
        return this.authorizationState;
    }

    /**
     * Set the authorizationState property: Status of whether the customer has authorized a partner to create partner
     * topics in the customer's subscription.
     *
     * @param authorizationState the authorizationState value to set.
     * @return the PartnerTopicType object itself.
     */
    public PartnerTopicType withAuthorizationState(PartnerTopicTypeAuthorizationState authorizationState) {
        this.authorizationState = authorizationState;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
