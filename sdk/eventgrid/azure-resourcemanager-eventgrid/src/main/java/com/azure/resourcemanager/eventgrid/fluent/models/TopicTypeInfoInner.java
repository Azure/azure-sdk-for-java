// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.eventgrid.models.ResourceRegionType;
import com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Properties of a topic type info. */
@JsonFlatten
@Fluent
public class TopicTypeInfoInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(TopicTypeInfoInner.class);

    /*
     * Namespace of the provider of the topic type.
     */
    @JsonProperty(value = "properties.provider")
    private String provider;

    /*
     * Display Name for the topic type.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /*
     * Description of the topic type.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /*
     * Region type of the resource.
     */
    @JsonProperty(value = "properties.resourceRegionType")
    private ResourceRegionType resourceRegionType;

    /*
     * Provisioning state of the topic type
     */
    @JsonProperty(value = "properties.provisioningState")
    private TopicTypeProvisioningState provisioningState;

    /*
     * List of locations supported by this topic type.
     */
    @JsonProperty(value = "properties.supportedLocations")
    private List<String> supportedLocations;

    /*
     * Source resource format.
     */
    @JsonProperty(value = "properties.sourceResourceFormat")
    private String sourceResourceFormat;

    /**
     * Get the provider property: Namespace of the provider of the topic type.
     *
     * @return the provider value.
     */
    public String provider() {
        return this.provider;
    }

    /**
     * Set the provider property: Namespace of the provider of the topic type.
     *
     * @param provider the provider value to set.
     * @return the TopicTypeInfoInner object itself.
     */
    public TopicTypeInfoInner withProvider(String provider) {
        this.provider = provider;
        return this;
    }

    /**
     * Get the displayName property: Display Name for the topic type.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Display Name for the topic type.
     *
     * @param displayName the displayName value to set.
     * @return the TopicTypeInfoInner object itself.
     */
    public TopicTypeInfoInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the description property: Description of the topic type.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the topic type.
     *
     * @param description the description value to set.
     * @return the TopicTypeInfoInner object itself.
     */
    public TopicTypeInfoInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the resourceRegionType property: Region type of the resource.
     *
     * @return the resourceRegionType value.
     */
    public ResourceRegionType resourceRegionType() {
        return this.resourceRegionType;
    }

    /**
     * Set the resourceRegionType property: Region type of the resource.
     *
     * @param resourceRegionType the resourceRegionType value to set.
     * @return the TopicTypeInfoInner object itself.
     */
    public TopicTypeInfoInner withResourceRegionType(ResourceRegionType resourceRegionType) {
        this.resourceRegionType = resourceRegionType;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the topic type.
     *
     * @return the provisioningState value.
     */
    public TopicTypeProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: Provisioning state of the topic type.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the TopicTypeInfoInner object itself.
     */
    public TopicTypeInfoInner withProvisioningState(TopicTypeProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the supportedLocations property: List of locations supported by this topic type.
     *
     * @return the supportedLocations value.
     */
    public List<String> supportedLocations() {
        return this.supportedLocations;
    }

    /**
     * Set the supportedLocations property: List of locations supported by this topic type.
     *
     * @param supportedLocations the supportedLocations value to set.
     * @return the TopicTypeInfoInner object itself.
     */
    public TopicTypeInfoInner withSupportedLocations(List<String> supportedLocations) {
        this.supportedLocations = supportedLocations;
        return this;
    }

    /**
     * Get the sourceResourceFormat property: Source resource format.
     *
     * @return the sourceResourceFormat value.
     */
    public String sourceResourceFormat() {
        return this.sourceResourceFormat;
    }

    /**
     * Set the sourceResourceFormat property: Source resource format.
     *
     * @param sourceResourceFormat the sourceResourceFormat value to set.
     * @return the TopicTypeInfoInner object itself.
     */
    public TopicTypeInfoInner withSourceResourceFormat(String sourceResourceFormat) {
        this.sourceResourceFormat = sourceResourceFormat;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
