// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The TopicTypeAdditionalEnforcedPermission model.
 */
@Fluent
public final class TopicTypeAdditionalEnforcedPermission {
    /*
     * The permissionName property.
     */
    @JsonProperty(value = "permissionName")
    private String permissionName;

    /*
     * The isDataAction property.
     */
    @JsonProperty(value = "isDataAction")
    private Boolean isDataAction;

    /**
     * Creates an instance of TopicTypeAdditionalEnforcedPermission class.
     */
    public TopicTypeAdditionalEnforcedPermission() {
    }

    /**
     * Get the permissionName property: The permissionName property.
     * 
     * @return the permissionName value.
     */
    public String permissionName() {
        return this.permissionName;
    }

    /**
     * Set the permissionName property: The permissionName property.
     * 
     * @param permissionName the permissionName value to set.
     * @return the TopicTypeAdditionalEnforcedPermission object itself.
     */
    public TopicTypeAdditionalEnforcedPermission withPermissionName(String permissionName) {
        this.permissionName = permissionName;
        return this;
    }

    /**
     * Get the isDataAction property: The isDataAction property.
     * 
     * @return the isDataAction value.
     */
    public Boolean isDataAction() {
        return this.isDataAction;
    }

    /**
     * Set the isDataAction property: The isDataAction property.
     * 
     * @param isDataAction the isDataAction value to set.
     * @return the TopicTypeAdditionalEnforcedPermission object itself.
     */
    public TopicTypeAdditionalEnforcedPermission withIsDataAction(Boolean isDataAction) {
        this.isDataAction = isDataAction;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
