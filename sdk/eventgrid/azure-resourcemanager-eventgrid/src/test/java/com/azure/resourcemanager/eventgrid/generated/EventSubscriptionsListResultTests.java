// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.EventSubscriptionInner;
import com.azure.resourcemanager.eventgrid.models.AdvancedFilter;
import com.azure.resourcemanager.eventgrid.models.DeadLetterDestination;
import com.azure.resourcemanager.eventgrid.models.DeadLetterWithResourceIdentity;
import com.azure.resourcemanager.eventgrid.models.DeliveryWithResourceIdentity;
import com.azure.resourcemanager.eventgrid.models.EventDeliverySchema;
import com.azure.resourcemanager.eventgrid.models.EventSubscriptionDestination;
import com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter;
import com.azure.resourcemanager.eventgrid.models.EventSubscriptionIdentity;
import com.azure.resourcemanager.eventgrid.models.EventSubscriptionIdentityType;
import com.azure.resourcemanager.eventgrid.models.EventSubscriptionsListResult;
import com.azure.resourcemanager.eventgrid.models.RetryPolicy;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EventSubscriptionsListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventSubscriptionsListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"topic\":\"ukghimdblxgw\",\"provisioningState\":\"AwaitingManualAction\",\"destination\":{\"endpointType\":\"EventSubscriptionDestination\"},\"deliveryWithResourceIdentity\":{\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentity\":\"wmszkk\"},\"destination\":{\"endpointType\":\"EventSubscriptionDestination\"}},\"filter\":{\"subjectBeginsWith\":\"eyfkzikfja\",\"subjectEndsWith\":\"eaivxwczel\",\"includedEventTypes\":[\"r\",\"lsfeaenwabfatkld\"],\"isSubjectCaseSensitive\":false,\"enableAdvancedFilteringOnArrays\":true,\"advancedFilters\":[{\"operatorType\":\"AdvancedFilter\"},{\"operatorType\":\"AdvancedFilter\"},{\"operatorType\":\"AdvancedFilter\"}]},\"labels\":[\"nozj\"],\"expirationTimeUtc\":\"2021-03-07T05:51:02Z\",\"eventDeliverySchema\":\"CustomInputSchema\",\"retryPolicy\":{\"maxDeliveryAttempts\":113481876,\"eventTimeToLiveInMinutes\":171728083},\"deadLetterDestination\":{\"endpointType\":\"DeadLetterDestination\"},\"deadLetterWithResourceIdentity\":{\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentity\":\"rvimjwosytxitcsk\"},\"deadLetterDestination\":{\"endpointType\":\"DeadLetterDestination\"}}},\"id\":\"tq\",\"name\":\"miekkezzikhlyfjh\",\"type\":\"gqggebdunygae\"},{\"properties\":{\"topic\":\"bqfatpxllrxcyjmo\",\"provisioningState\":\"Succeeded\",\"destination\":{\"endpointType\":\"EventSubscriptionDestination\"},\"deliveryWithResourceIdentity\":{\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentity\":\"wdmjsjqbjhhyx\"},\"destination\":{\"endpointType\":\"EventSubscriptionDestination\"}},\"filter\":{\"subjectBeginsWith\":\"yc\",\"subjectEndsWith\":\"uhpkxkgymar\",\"includedEventTypes\":[\"ajxq\"],\"isSubjectCaseSensitive\":false,\"enableAdvancedFilteringOnArrays\":false,\"advancedFilters\":[{\"operatorType\":\"AdvancedFilter\"},{\"operatorType\":\"AdvancedFilter\"},{\"operatorType\":\"AdvancedFilter\"}]},\"labels\":[\"eddgssofw\",\"mzqa\",\"krmnjijpxacqqud\"],\"expirationTimeUtc\":\"2021-05-28T19:19:23Z\",\"eventDeliverySchema\":\"CustomInputSchema\",\"retryPolicy\":{\"maxDeliveryAttempts\":1365725065,\"eventTimeToLiveInMinutes\":1598677133},\"deadLetterDestination\":{\"endpointType\":\"DeadLetterDestination\"},\"deadLetterWithResourceIdentity\":{\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentity\":\"fimrzrtuzqogse\"},\"deadLetterDestination\":{\"endpointType\":\"DeadLetterDestination\"}}},\"id\":\"vfdnwnwmewzsyyce\",\"name\":\"zsoibjudpfrxtr\",\"type\":\"hzv\"},{\"properties\":{\"topic\":\"dwkqbrq\",\"provisioningState\":\"Creating\",\"destination\":{\"endpointType\":\"EventSubscriptionDestination\"},\"deliveryWithResourceIdentity\":{\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentity\":\"i\"},\"destination\":{\"endpointType\":\"EventSubscriptionDestination\"}},\"filter\":{\"subjectBeginsWith\":\"dtiirqt\",\"subjectEndsWith\":\"oaxoruzfgsqu\",\"includedEventTypes\":[\"rxxle\",\"tramxjez\"],\"isSubjectCaseSensitive\":true,\"enableAdvancedFilteringOnArrays\":true,\"advancedFilters\":[{\"operatorType\":\"AdvancedFilter\"},{\"operatorType\":\"AdvancedFilter\"}]},\"labels\":[\"cvydypatdoo\",\"ojknio\"],\"expirationTimeUtc\":\"2021-03-13T14:33:18Z\",\"eventDeliverySchema\":\"CloudEventSchemaV1_0\",\"retryPolicy\":{\"maxDeliveryAttempts\":719607713,\"eventTimeToLiveInMinutes\":1480895301},\"deadLetterDestination\":{\"endpointType\":\"DeadLetterDestination\"},\"deadLetterWithResourceIdentity\":{\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentity\":\"vdkcrodtj\"},\"deadLetterDestination\":{\"endpointType\":\"DeadLetterDestination\"}}},\"id\":\"wj\",\"name\":\"fltkacjv\",\"type\":\"f\"},{\"properties\":{\"topic\":\"foakgg\",\"provisioningState\":\"Canceled\",\"destination\":{\"endpointType\":\"EventSubscriptionDestination\"},\"deliveryWithResourceIdentity\":{\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentity\":\"ulpqblylsyxkqjn\"},\"destination\":{\"endpointType\":\"EventSubscriptionDestination\"}},\"filter\":{\"subjectBeginsWith\":\"vti\",\"subjectEndsWith\":\"xsdszuempsb\",\"includedEventTypes\":[\"z\"],\"isSubjectCaseSensitive\":true,\"enableAdvancedFilteringOnArrays\":false,\"advancedFilters\":[{\"operatorType\":\"AdvancedFilter\"}]},\"labels\":[\"vinvkj\",\"xdxr\",\"uukzclewyhmlw\",\"aztz\"],\"expirationTimeUtc\":\"2021-01-30T03:38:42Z\",\"eventDeliverySchema\":\"CloudEventSchemaV1_0\",\"retryPolicy\":{\"maxDeliveryAttempts\":1454988388,\"eventTimeToLiveInMinutes\":335733577},\"deadLetterDestination\":{\"endpointType\":\"DeadLetterDestination\"},\"deadLetterWithResourceIdentity\":{\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentity\":\"buy\"},\"deadLetterDestination\":{\"endpointType\":\"DeadLetterDestination\"}}},\"id\":\"zfeqztppri\",\"name\":\"lxorjaltolmncws\",\"type\":\"bqwcsdbnwdcf\"}],\"nextLink\":\"cqdpfuv\"}")
            .toObject(EventSubscriptionsListResult.class);
        Assertions.assertEquals(EventSubscriptionIdentityType.SYSTEM_ASSIGNED,
            model.value().get(0).deliveryWithResourceIdentity().identity().type());
        Assertions.assertEquals("wmszkk",
            model.value().get(0).deliveryWithResourceIdentity().identity().userAssignedIdentity());
        Assertions.assertEquals("eyfkzikfja", model.value().get(0).filter().subjectBeginsWith());
        Assertions.assertEquals("eaivxwczel", model.value().get(0).filter().subjectEndsWith());
        Assertions.assertEquals("r", model.value().get(0).filter().includedEventTypes().get(0));
        Assertions.assertEquals(false, model.value().get(0).filter().isSubjectCaseSensitive());
        Assertions.assertEquals(true, model.value().get(0).filter().enableAdvancedFilteringOnArrays());
        Assertions.assertEquals("nozj", model.value().get(0).labels().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-07T05:51:02Z"), model.value().get(0).expirationTimeUtc());
        Assertions.assertEquals(EventDeliverySchema.CUSTOM_INPUT_SCHEMA, model.value().get(0).eventDeliverySchema());
        Assertions.assertEquals(113481876, model.value().get(0).retryPolicy().maxDeliveryAttempts());
        Assertions.assertEquals(171728083, model.value().get(0).retryPolicy().eventTimeToLiveInMinutes());
        Assertions.assertEquals(EventSubscriptionIdentityType.USER_ASSIGNED,
            model.value().get(0).deadLetterWithResourceIdentity().identity().type());
        Assertions.assertEquals("rvimjwosytxitcsk",
            model.value().get(0).deadLetterWithResourceIdentity().identity().userAssignedIdentity());
        Assertions.assertEquals("cqdpfuv", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventSubscriptionsListResult model = new EventSubscriptionsListResult().withValue(Arrays.asList(
            new EventSubscriptionInner().withDestination(new EventSubscriptionDestination())
                .withDeliveryWithResourceIdentity(
                    new DeliveryWithResourceIdentity()
                        .withIdentity(
                            new EventSubscriptionIdentity().withType(EventSubscriptionIdentityType.SYSTEM_ASSIGNED)
                                .withUserAssignedIdentity("wmszkk"))
                        .withDestination(new EventSubscriptionDestination()))
                .withFilter(new EventSubscriptionFilter().withSubjectBeginsWith("eyfkzikfja")
                    .withSubjectEndsWith("eaivxwczel")
                    .withIncludedEventTypes(Arrays.asList("r", "lsfeaenwabfatkld"))
                    .withIsSubjectCaseSensitive(false)
                    .withEnableAdvancedFilteringOnArrays(true)
                    .withAdvancedFilters(Arrays.asList(new AdvancedFilter(), new AdvancedFilter(),
                        new AdvancedFilter())))
                .withLabels(Arrays.asList("nozj"))
                .withExpirationTimeUtc(OffsetDateTime.parse("2021-03-07T05:51:02Z"))
                .withEventDeliverySchema(EventDeliverySchema.CUSTOM_INPUT_SCHEMA)
                .withRetryPolicy(new RetryPolicy().withMaxDeliveryAttempts(113481876)
                    .withEventTimeToLiveInMinutes(171728083))
                .withDeadLetterDestination(new DeadLetterDestination())
                .withDeadLetterWithResourceIdentity(new DeadLetterWithResourceIdentity().withIdentity(
                    new EventSubscriptionIdentity().withType(EventSubscriptionIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentity("rvimjwosytxitcsk"))
                    .withDeadLetterDestination(new DeadLetterDestination())),
            new EventSubscriptionInner().withDestination(new EventSubscriptionDestination())
                .withDeliveryWithResourceIdentity(new DeliveryWithResourceIdentity()
                    .withIdentity(
                        new EventSubscriptionIdentity().withType(EventSubscriptionIdentityType.SYSTEM_ASSIGNED)
                            .withUserAssignedIdentity("wdmjsjqbjhhyx"))
                    .withDestination(new EventSubscriptionDestination()))
                .withFilter(new EventSubscriptionFilter().withSubjectBeginsWith("yc")
                    .withSubjectEndsWith("uhpkxkgymar")
                    .withIncludedEventTypes(Arrays.asList("ajxq"))
                    .withIsSubjectCaseSensitive(false)
                    .withEnableAdvancedFilteringOnArrays(false)
                    .withAdvancedFilters(
                        Arrays.asList(new AdvancedFilter(), new AdvancedFilter(), new AdvancedFilter())))
                .withLabels(Arrays.asList("eddgssofw", "mzqa", "krmnjijpxacqqud"))
                .withExpirationTimeUtc(OffsetDateTime.parse("2021-05-28T19:19:23Z"))
                .withEventDeliverySchema(EventDeliverySchema.CUSTOM_INPUT_SCHEMA)
                .withRetryPolicy(
                    new RetryPolicy().withMaxDeliveryAttempts(1365725065).withEventTimeToLiveInMinutes(1598677133))
                .withDeadLetterDestination(new DeadLetterDestination())
                .withDeadLetterWithResourceIdentity(new DeadLetterWithResourceIdentity()
                    .withIdentity(new EventSubscriptionIdentity().withType(EventSubscriptionIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentity("fimrzrtuzqogse"))
                    .withDeadLetterDestination(new DeadLetterDestination())),
            new EventSubscriptionInner().withDestination(new EventSubscriptionDestination())
                .withDeliveryWithResourceIdentity(
                    new DeliveryWithResourceIdentity()
                        .withIdentity(
                            new EventSubscriptionIdentity().withType(EventSubscriptionIdentityType.USER_ASSIGNED)
                                .withUserAssignedIdentity("i"))
                        .withDestination(new EventSubscriptionDestination()))
                .withFilter(new EventSubscriptionFilter().withSubjectBeginsWith("dtiirqt")
                    .withSubjectEndsWith("oaxoruzfgsqu")
                    .withIncludedEventTypes(Arrays.asList("rxxle", "tramxjez"))
                    .withIsSubjectCaseSensitive(true)
                    .withEnableAdvancedFilteringOnArrays(true)
                    .withAdvancedFilters(Arrays.asList(new AdvancedFilter(), new AdvancedFilter())))
                .withLabels(Arrays.asList("cvydypatdoo", "ojknio"))
                .withExpirationTimeUtc(OffsetDateTime.parse("2021-03-13T14:33:18Z"))
                .withEventDeliverySchema(EventDeliverySchema.CLOUD_EVENT_SCHEMA_V1_0)
                .withRetryPolicy(
                    new RetryPolicy().withMaxDeliveryAttempts(719607713).withEventTimeToLiveInMinutes(1480895301))
                .withDeadLetterDestination(new DeadLetterDestination())
                .withDeadLetterWithResourceIdentity(
                    new DeadLetterWithResourceIdentity()
                        .withIdentity(
                            new EventSubscriptionIdentity().withType(EventSubscriptionIdentityType.USER_ASSIGNED)
                                .withUserAssignedIdentity("vdkcrodtj"))
                        .withDeadLetterDestination(new DeadLetterDestination())),
            new EventSubscriptionInner().withDestination(new EventSubscriptionDestination())
                .withDeliveryWithResourceIdentity(new DeliveryWithResourceIdentity()
                    .withIdentity(
                        new EventSubscriptionIdentity().withType(EventSubscriptionIdentityType.SYSTEM_ASSIGNED)
                            .withUserAssignedIdentity("ulpqblylsyxkqjn"))
                    .withDestination(new EventSubscriptionDestination()))
                .withFilter(new EventSubscriptionFilter().withSubjectBeginsWith("vti")
                    .withSubjectEndsWith("xsdszuempsb")
                    .withIncludedEventTypes(Arrays.asList("z"))
                    .withIsSubjectCaseSensitive(true)
                    .withEnableAdvancedFilteringOnArrays(false)
                    .withAdvancedFilters(Arrays.asList(new AdvancedFilter())))
                .withLabels(Arrays.asList("vinvkj", "xdxr", "uukzclewyhmlw", "aztz"))
                .withExpirationTimeUtc(OffsetDateTime.parse("2021-01-30T03:38:42Z"))
                .withEventDeliverySchema(EventDeliverySchema.CLOUD_EVENT_SCHEMA_V1_0)
                .withRetryPolicy(
                    new RetryPolicy().withMaxDeliveryAttempts(1454988388).withEventTimeToLiveInMinutes(335733577))
                .withDeadLetterDestination(new DeadLetterDestination())
                .withDeadLetterWithResourceIdentity(
                    new DeadLetterWithResourceIdentity()
                        .withIdentity(
                            new EventSubscriptionIdentity().withType(EventSubscriptionIdentityType.SYSTEM_ASSIGNED)
                                .withUserAssignedIdentity("buy"))
                        .withDeadLetterDestination(new DeadLetterDestination()))))
            .withNextLink("cqdpfuv");
        model = BinaryData.fromObject(model).toObject(EventSubscriptionsListResult.class);
        Assertions.assertEquals(EventSubscriptionIdentityType.SYSTEM_ASSIGNED,
            model.value().get(0).deliveryWithResourceIdentity().identity().type());
        Assertions.assertEquals("wmszkk",
            model.value().get(0).deliveryWithResourceIdentity().identity().userAssignedIdentity());
        Assertions.assertEquals("eyfkzikfja", model.value().get(0).filter().subjectBeginsWith());
        Assertions.assertEquals("eaivxwczel", model.value().get(0).filter().subjectEndsWith());
        Assertions.assertEquals("r", model.value().get(0).filter().includedEventTypes().get(0));
        Assertions.assertEquals(false, model.value().get(0).filter().isSubjectCaseSensitive());
        Assertions.assertEquals(true, model.value().get(0).filter().enableAdvancedFilteringOnArrays());
        Assertions.assertEquals("nozj", model.value().get(0).labels().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-07T05:51:02Z"), model.value().get(0).expirationTimeUtc());
        Assertions.assertEquals(EventDeliverySchema.CUSTOM_INPUT_SCHEMA, model.value().get(0).eventDeliverySchema());
        Assertions.assertEquals(113481876, model.value().get(0).retryPolicy().maxDeliveryAttempts());
        Assertions.assertEquals(171728083, model.value().get(0).retryPolicy().eventTimeToLiveInMinutes());
        Assertions.assertEquals(EventSubscriptionIdentityType.USER_ASSIGNED,
            model.value().get(0).deadLetterWithResourceIdentity().identity().type());
        Assertions.assertEquals("rvimjwosytxitcsk",
            model.value().get(0).deadLetterWithResourceIdentity().identity().userAssignedIdentity());
        Assertions.assertEquals("cqdpfuv", model.nextLink());
    }
}
