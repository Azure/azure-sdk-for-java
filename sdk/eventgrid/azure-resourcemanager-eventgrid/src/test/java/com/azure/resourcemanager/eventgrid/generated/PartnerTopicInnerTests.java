// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner;
import com.azure.resourcemanager.eventgrid.models.EventDefinitionKind;
import com.azure.resourcemanager.eventgrid.models.EventTypeInfo;
import com.azure.resourcemanager.eventgrid.models.IdentityInfo;
import com.azure.resourcemanager.eventgrid.models.IdentityType;
import com.azure.resourcemanager.eventgrid.models.InlineEventProperties;
import com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState;
import com.azure.resourcemanager.eventgrid.models.UserIdentityProperties;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class PartnerTopicInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PartnerTopicInner model = BinaryData.fromString(
            "{\"properties\":{\"partnerRegistrationImmutableId\":\"1ee3f132-51bf-4f2b-b174-a840d8794ef8\",\"source\":\"gzfc\",\"eventTypeInfo\":{\"kind\":\"Inline\",\"inlineEventTypes\":{\"cvbmqzb\":{\"description\":\"beglqg\",\"displayName\":\"o\",\"documentationUrl\":\"betnluankrrfxee\",\"dataSchemaUrl\":\"tijv\"},\"gv\":{\"description\":\"xl\",\"displayName\":\"rnwxacevehjkuyxo\",\"documentationUrl\":\"gaoql\",\"dataSchemaUrl\":\"aeylinm\"}}},\"expirationTimeIfNotActivatedUtc\":\"2021-11-02T13:56:44Z\",\"provisioningState\":\"Updating\",\"activationState\":\"Deactivated\",\"partnerTopicFriendlyDescription\":\"ypoq\",\"messageForActivation\":\"hlqhykprlpy\"},\"identity\":{\"type\":\"None\",\"principalId\":\"dsmexiitdfux\",\"tenantId\":\"asiibmiybnnust\",\"userAssignedIdentities\":{\"gyyprotwy\":{\"principalId\":\"hnmgixhcm\",\"clientId\":\"mqfoudorh\"},\"cmjkavlgorbmftpm\":{\"principalId\":\"ndm\",\"clientId\":\"hu\"},\"dbzqgqqihed\":{\"principalId\":\"zfjltfvnzcyjto\",\"clientId\":\"vopvp\"},\"qcwdhoh\":{\"principalId\":\"qwthmky\",\"clientId\":\"cysihs\"}}},\"location\":\"dtmcd\",\"tags\":{\"pcvhdbevwqqxeys\":\"fcohdxbzlmcmu\",\"eqocljmygvk\":\"onqzinkfkbgbzbow\",\"fezrx\":\"qkjjeokbz\"},\"id\":\"czurtlei\",\"name\":\"q\",\"type\":\"bkwvzg\"}")
            .toObject(PartnerTopicInner.class);
        Assertions.assertEquals("dtmcd", model.location());
        Assertions.assertEquals("fcohdxbzlmcmu", model.tags().get("pcvhdbevwqqxeys"));
        Assertions.assertEquals(IdentityType.NONE, model.identity().type());
        Assertions.assertEquals("dsmexiitdfux", model.identity().principalId());
        Assertions.assertEquals("asiibmiybnnust", model.identity().tenantId());
        Assertions.assertEquals("hnmgixhcm", model.identity().userAssignedIdentities().get("gyyprotwy").principalId());
        Assertions.assertEquals("mqfoudorh", model.identity().userAssignedIdentities().get("gyyprotwy").clientId());
        Assertions.assertEquals(UUID.fromString("1ee3f132-51bf-4f2b-b174-a840d8794ef8"),
            model.partnerRegistrationImmutableId());
        Assertions.assertEquals("gzfc", model.source());
        Assertions.assertEquals(EventDefinitionKind.INLINE, model.eventTypeInfo().kind());
        Assertions.assertEquals("beglqg", model.eventTypeInfo().inlineEventTypes().get("cvbmqzb").description());
        Assertions.assertEquals("o", model.eventTypeInfo().inlineEventTypes().get("cvbmqzb").displayName());
        Assertions.assertEquals("betnluankrrfxee",
            model.eventTypeInfo().inlineEventTypes().get("cvbmqzb").documentationUrl());
        Assertions.assertEquals("tijv", model.eventTypeInfo().inlineEventTypes().get("cvbmqzb").dataSchemaUrl());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-02T13:56:44Z"), model.expirationTimeIfNotActivatedUtc());
        Assertions.assertEquals(PartnerTopicActivationState.DEACTIVATED, model.activationState());
        Assertions.assertEquals("ypoq", model.partnerTopicFriendlyDescription());
        Assertions.assertEquals("hlqhykprlpy", model.messageForActivation());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PartnerTopicInner model = new PartnerTopicInner().withLocation("dtmcd")
            .withTags(
                mapOf("pcvhdbevwqqxeys", "fcohdxbzlmcmu", "eqocljmygvk", "onqzinkfkbgbzbow", "fezrx", "qkjjeokbz"))
            .withIdentity(new IdentityInfo().withType(IdentityType.NONE)
                .withPrincipalId("dsmexiitdfux")
                .withTenantId("asiibmiybnnust")
                .withUserAssignedIdentities(mapOf("gyyprotwy",
                    new UserIdentityProperties().withPrincipalId("hnmgixhcm").withClientId("mqfoudorh"),
                    "cmjkavlgorbmftpm", new UserIdentityProperties().withPrincipalId("ndm").withClientId("hu"),
                    "dbzqgqqihed", new UserIdentityProperties().withPrincipalId("zfjltfvnzcyjto").withClientId("vopvp"),
                    "qcwdhoh", new UserIdentityProperties().withPrincipalId("qwthmky").withClientId("cysihs"))))
            .withPartnerRegistrationImmutableId(UUID.fromString("1ee3f132-51bf-4f2b-b174-a840d8794ef8"))
            .withSource("gzfc")
            .withEventTypeInfo(new EventTypeInfo().withKind(EventDefinitionKind.INLINE)
                .withInlineEventTypes(mapOf("cvbmqzb",
                    new InlineEventProperties().withDescription("beglqg")
                        .withDisplayName("o")
                        .withDocumentationUrl("betnluankrrfxee")
                        .withDataSchemaUrl("tijv"),
                    "gv",
                    new InlineEventProperties().withDescription("xl")
                        .withDisplayName("rnwxacevehjkuyxo")
                        .withDocumentationUrl("gaoql")
                        .withDataSchemaUrl("aeylinm"))))
            .withExpirationTimeIfNotActivatedUtc(OffsetDateTime.parse("2021-11-02T13:56:44Z"))
            .withActivationState(PartnerTopicActivationState.DEACTIVATED)
            .withPartnerTopicFriendlyDescription("ypoq")
            .withMessageForActivation("hlqhykprlpy");
        model = BinaryData.fromObject(model).toObject(PartnerTopicInner.class);
        Assertions.assertEquals("dtmcd", model.location());
        Assertions.assertEquals("fcohdxbzlmcmu", model.tags().get("pcvhdbevwqqxeys"));
        Assertions.assertEquals(IdentityType.NONE, model.identity().type());
        Assertions.assertEquals("dsmexiitdfux", model.identity().principalId());
        Assertions.assertEquals("asiibmiybnnust", model.identity().tenantId());
        Assertions.assertEquals("hnmgixhcm", model.identity().userAssignedIdentities().get("gyyprotwy").principalId());
        Assertions.assertEquals("mqfoudorh", model.identity().userAssignedIdentities().get("gyyprotwy").clientId());
        Assertions.assertEquals(UUID.fromString("1ee3f132-51bf-4f2b-b174-a840d8794ef8"),
            model.partnerRegistrationImmutableId());
        Assertions.assertEquals("gzfc", model.source());
        Assertions.assertEquals(EventDefinitionKind.INLINE, model.eventTypeInfo().kind());
        Assertions.assertEquals("beglqg", model.eventTypeInfo().inlineEventTypes().get("cvbmqzb").description());
        Assertions.assertEquals("o", model.eventTypeInfo().inlineEventTypes().get("cvbmqzb").displayName());
        Assertions.assertEquals("betnluankrrfxee",
            model.eventTypeInfo().inlineEventTypes().get("cvbmqzb").documentationUrl());
        Assertions.assertEquals("tijv", model.eventTypeInfo().inlineEventTypes().get("cvbmqzb").dataSchemaUrl());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-02T13:56:44Z"), model.expirationTimeIfNotActivatedUtc());
        Assertions.assertEquals(PartnerTopicActivationState.DEACTIVATED, model.activationState());
        Assertions.assertEquals("ypoq", model.partnerTopicFriendlyDescription());
        Assertions.assertEquals("hlqhykprlpy", model.messageForActivation());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
