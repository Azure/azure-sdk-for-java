// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner;
import com.azure.resourcemanager.eventgrid.models.InboundIpRule;
import com.azure.resourcemanager.eventgrid.models.IpActionType;
import com.azure.resourcemanager.eventgrid.models.PartnerNamespacesListResult;
import com.azure.resourcemanager.eventgrid.models.PartnerTopicRoutingMode;
import com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess;
import com.azure.resourcemanager.eventgrid.models.TlsVersion;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PartnerNamespacesListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PartnerNamespacesListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"privateEndpointConnections\":[{\"properties\":{},\"id\":\"lsvxeizz\",\"name\":\"wklnsrmffeyc\",\"type\":\"ckt\"},{\"properties\":{},\"id\":\"ymerteeammxq\",\"name\":\"ekkkzd\",\"type\":\"rtkgdojbmxvavref\"},{\"properties\":{},\"id\":\"esvecuijpx\",\"name\":\"xs\",\"type\":\"wprtu\"},{\"properties\":{},\"id\":\"sawddjibabxvi\",\"name\":\"itvtzeexavo\",\"type\":\"tfgle\"}],\"provisioningState\":\"Updating\",\"partnerRegistrationFullyQualifiedId\":\"qbw\",\"minimumTlsVersionAllowed\":\"1.0\",\"endpoint\":\"tgsfja\",\"publicNetworkAccess\":\"Enabled\",\"inboundIpRules\":[{\"ipMask\":\"xudb\",\"action\":\"Allow\"},{\"ipMask\":\"htnsi\",\"action\":\"Allow\"}],\"disableLocalAuth\":false,\"partnerTopicRoutingMode\":\"SourceEventAttribute\"},\"location\":\"sckdlp\",\"tags\":{\"xdfgsftufqobr\":\"rcxfailcfxwmdb\",\"knh\":\"lnacgcc\",\"zvulj\":\"kizvytn\",\"qnvb\":\"aaeranokqgukk\"},\"id\":\"oylaxxul\",\"name\":\"disdosfjbjsvgj\",\"type\":\"whryvycytdcl\"},{\"properties\":{\"privateEndpointConnections\":[{\"properties\":{},\"id\":\"nfnw\",\"name\":\"btmvpdvjdhttza\",\"type\":\"fedxihchrphkm\"},{\"properties\":{},\"id\":\"jdqnsdfzpbgt\",\"name\":\"kylkdghrj\",\"type\":\"uutlwxezwzhok\"},{\"properties\":{},\"id\":\"wnhhtqlgehgppip\",\"name\":\"fhpfeoajvgcxtx\",\"type\":\"csheafidltugsr\"},{\"properties\":{},\"id\":\"mks\",\"name\":\"jhoiftxfkfweg\",\"type\":\"rhptilluc\"}],\"provisioningState\":\"Deleting\",\"partnerRegistrationFullyQualifiedId\":\"gdqoh\",\"minimumTlsVersionAllowed\":\"1.0\",\"endpoint\":\"ldrizetpwbra\",\"publicNetworkAccess\":\"SecuredByPerimeter\",\"inboundIpRules\":[{\"ipMask\":\"hbqzmizakakankjp\",\"action\":\"Allow\"},{\"ipMask\":\"ha\",\"action\":\"Allow\"},{\"ipMask\":\"hjlmu\",\"action\":\"Allow\"},{\"ipMask\":\"rimrs\",\"action\":\"Allow\"}],\"disableLocalAuth\":false,\"partnerTopicRoutingMode\":\"SourceEventAttribute\"},\"location\":\"eislstvasylwx\",\"tags\":{\"athwt\":\"umweoohguufuzboy\",\"ebwjscjpahlxvea\":\"olbaemwmdx\",\"xnmwmqtibxyijddt\":\"f\",\"ekpndzaapmudq\":\"qcttadijaeukmrsi\"},\"id\":\"eqw\",\"name\":\"gp\",\"type\":\"bu\"}],\"nextLink\":\"wyxebeybpmzz\"}")
            .toObject(PartnerNamespacesListResult.class);
        Assertions.assertEquals("sckdlp", model.value().get(0).location());
        Assertions.assertEquals("rcxfailcfxwmdb", model.value().get(0).tags().get("xdfgsftufqobr"));
        Assertions.assertEquals("qbw", model.value().get(0).partnerRegistrationFullyQualifiedId());
        Assertions.assertEquals(TlsVersion.ONE_ZERO, model.value().get(0).minimumTlsVersionAllowed());
        Assertions.assertEquals(PublicNetworkAccess.ENABLED, model.value().get(0).publicNetworkAccess());
        Assertions.assertEquals("xudb", model.value().get(0).inboundIpRules().get(0).ipMask());
        Assertions.assertEquals(IpActionType.ALLOW, model.value().get(0).inboundIpRules().get(0).action());
        Assertions.assertFalse(model.value().get(0).disableLocalAuth());
        Assertions.assertEquals(PartnerTopicRoutingMode.SOURCE_EVENT_ATTRIBUTE,
            model.value().get(0).partnerTopicRoutingMode());
        Assertions.assertEquals("wyxebeybpmzz", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PartnerNamespacesListResult model
            = new PartnerNamespacesListResult()
                .withValue(Arrays.asList(
                    new PartnerNamespaceInner().withLocation("sckdlp")
                        .withTags(mapOf("xdfgsftufqobr", "rcxfailcfxwmdb", "knh", "lnacgcc", "zvulj", "kizvytn", "qnvb",
                            "aaeranokqgukk"))
                        .withPartnerRegistrationFullyQualifiedId("qbw")
                        .withMinimumTlsVersionAllowed(TlsVersion.ONE_ZERO)
                        .withPublicNetworkAccess(PublicNetworkAccess.ENABLED)
                        .withInboundIpRules(
                            Arrays.asList(new InboundIpRule().withIpMask("xudb").withAction(IpActionType.ALLOW),
                                new InboundIpRule().withIpMask("htnsi").withAction(IpActionType.ALLOW)))
                        .withDisableLocalAuth(false)
                        .withPartnerTopicRoutingMode(PartnerTopicRoutingMode.SOURCE_EVENT_ATTRIBUTE),
                    new PartnerNamespaceInner().withLocation("eislstvasylwx")
                        .withTags(mapOf("athwt", "umweoohguufuzboy", "ebwjscjpahlxvea", "olbaemwmdx",
                            "xnmwmqtibxyijddt", "f", "ekpndzaapmudq", "qcttadijaeukmrsi"))
                        .withPartnerRegistrationFullyQualifiedId("gdqoh")
                        .withMinimumTlsVersionAllowed(TlsVersion.ONE_ZERO)
                        .withPublicNetworkAccess(PublicNetworkAccess.SECURED_BY_PERIMETER)
                        .withInboundIpRules(Arrays.asList(
                            new InboundIpRule().withIpMask("hbqzmizakakankjp").withAction(IpActionType.ALLOW),
                            new InboundIpRule().withIpMask("ha").withAction(IpActionType.ALLOW),
                            new InboundIpRule().withIpMask("hjlmu").withAction(IpActionType.ALLOW),
                            new InboundIpRule().withIpMask("rimrs").withAction(IpActionType.ALLOW)))
                        .withDisableLocalAuth(false)
                        .withPartnerTopicRoutingMode(PartnerTopicRoutingMode.SOURCE_EVENT_ATTRIBUTE)))
                .withNextLink("wyxebeybpmzz");
        model = BinaryData.fromObject(model).toObject(PartnerNamespacesListResult.class);
        Assertions.assertEquals("sckdlp", model.value().get(0).location());
        Assertions.assertEquals("rcxfailcfxwmdb", model.value().get(0).tags().get("xdfgsftufqobr"));
        Assertions.assertEquals("qbw", model.value().get(0).partnerRegistrationFullyQualifiedId());
        Assertions.assertEquals(TlsVersion.ONE_ZERO, model.value().get(0).minimumTlsVersionAllowed());
        Assertions.assertEquals(PublicNetworkAccess.ENABLED, model.value().get(0).publicNetworkAccess());
        Assertions.assertEquals("xudb", model.value().get(0).inboundIpRules().get(0).ipMask());
        Assertions.assertEquals(IpActionType.ALLOW, model.value().get(0).inboundIpRules().get(0).action());
        Assertions.assertFalse(model.value().get(0).disableLocalAuth());
        Assertions.assertEquals(PartnerTopicRoutingMode.SOURCE_EVENT_ATTRIBUTE,
            model.value().get(0).partnerTopicRoutingMode());
        Assertions.assertEquals("wyxebeybpmzz", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
