// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.CustomDomainConfiguration;
import com.azure.resourcemanager.eventgrid.models.CustomDomainIdentity;
import com.azure.resourcemanager.eventgrid.models.CustomDomainIdentityType;
import com.azure.resourcemanager.eventgrid.models.CustomDomainValidationState;
import com.azure.resourcemanager.eventgrid.models.UpdateTopicsConfigurationInfo;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UpdateTopicsConfigurationInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateTopicsConfigurationInfo model = BinaryData.fromString(
            "{\"customDomains\":[{\"fullyQualifiedDomainName\":\"gufhyaomtbg\",\"validationState\":\"ErrorRetrievingDnsRecord\",\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentity\":\"kffovjzhpjbibgjm\"},\"certificateUrl\":\"umvfclu\",\"expectedTxtRecordName\":\"vwxnbkfe\",\"expectedTxtRecordValue\":\"xscyhwzdgirujbz\"},{\"fullyQualifiedDomainName\":\"omvzzbtd\",\"validationState\":\"Pending\",\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentity\":\"ujviylwdshfs\"},\"certificateUrl\":\"rbgyefry\",\"expectedTxtRecordName\":\"gaojf\",\"expectedTxtRecordValue\":\"nc\"},{\"fullyQualifiedDomainName\":\"tmr\",\"validationState\":\"Pending\",\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentity\":\"moxoftpi\"},\"certificateUrl\":\"wycz\",\"expectedTxtRecordName\":\"xacpqjli\",\"expectedTxtRecordValue\":\"yuspskas\"}]}")
            .toObject(UpdateTopicsConfigurationInfo.class);
        Assertions.assertEquals("gufhyaomtbg", model.customDomains().get(0).fullyQualifiedDomainName());
        Assertions.assertEquals(CustomDomainValidationState.ERROR_RETRIEVING_DNS_RECORD,
            model.customDomains().get(0).validationState());
        Assertions.assertEquals(CustomDomainIdentityType.SYSTEM_ASSIGNED,
            model.customDomains().get(0).identity().type());
        Assertions.assertEquals("kffovjzhpjbibgjm", model.customDomains().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("umvfclu", model.customDomains().get(0).certificateUrl());
        Assertions.assertEquals("vwxnbkfe", model.customDomains().get(0).expectedTxtRecordName());
        Assertions.assertEquals("xscyhwzdgirujbz", model.customDomains().get(0).expectedTxtRecordValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateTopicsConfigurationInfo model = new UpdateTopicsConfigurationInfo().withCustomDomains(Arrays.asList(
            new CustomDomainConfiguration().withFullyQualifiedDomainName("gufhyaomtbg")
                .withValidationState(CustomDomainValidationState.ERROR_RETRIEVING_DNS_RECORD)
                .withIdentity(new CustomDomainIdentity().withType(CustomDomainIdentityType.SYSTEM_ASSIGNED)
                    .withUserAssignedIdentity("kffovjzhpjbibgjm"))
                .withCertificateUrl("umvfclu")
                .withExpectedTxtRecordName("vwxnbkfe")
                .withExpectedTxtRecordValue("xscyhwzdgirujbz"),
            new CustomDomainConfiguration().withFullyQualifiedDomainName("omvzzbtd")
                .withValidationState(CustomDomainValidationState.PENDING)
                .withIdentity(new CustomDomainIdentity().withType(CustomDomainIdentityType.USER_ASSIGNED)
                    .withUserAssignedIdentity("ujviylwdshfs"))
                .withCertificateUrl("rbgyefry")
                .withExpectedTxtRecordName("gaojf")
                .withExpectedTxtRecordValue("nc"),
            new CustomDomainConfiguration().withFullyQualifiedDomainName("tmr")
                .withValidationState(CustomDomainValidationState.PENDING)
                .withIdentity(new CustomDomainIdentity().withType(CustomDomainIdentityType.USER_ASSIGNED)
                    .withUserAssignedIdentity("moxoftpi"))
                .withCertificateUrl("wycz")
                .withExpectedTxtRecordName("xacpqjli")
                .withExpectedTxtRecordValue("yuspskas")));
        model = BinaryData.fromObject(model).toObject(UpdateTopicsConfigurationInfo.class);
        Assertions.assertEquals("gufhyaomtbg", model.customDomains().get(0).fullyQualifiedDomainName());
        Assertions.assertEquals(CustomDomainValidationState.ERROR_RETRIEVING_DNS_RECORD,
            model.customDomains().get(0).validationState());
        Assertions.assertEquals(CustomDomainIdentityType.SYSTEM_ASSIGNED,
            model.customDomains().get(0).identity().type());
        Assertions.assertEquals("kffovjzhpjbibgjm", model.customDomains().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("umvfclu", model.customDomains().get(0).certificateUrl());
        Assertions.assertEquals("vwxnbkfe", model.customDomains().get(0).expectedTxtRecordName());
        Assertions.assertEquals("xscyhwzdgirujbz", model.customDomains().get(0).expectedTxtRecordValue());
    }
}
