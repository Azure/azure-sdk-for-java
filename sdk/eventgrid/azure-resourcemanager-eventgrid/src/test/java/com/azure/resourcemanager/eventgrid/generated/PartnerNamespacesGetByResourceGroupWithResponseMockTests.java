// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.eventgrid.EventGridManager;
import com.azure.resourcemanager.eventgrid.models.IpActionType;
import com.azure.resourcemanager.eventgrid.models.PartnerNamespace;
import com.azure.resourcemanager.eventgrid.models.PartnerTopicRoutingMode;
import com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess;
import com.azure.resourcemanager.eventgrid.models.TlsVersion;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PartnerNamespacesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{},\"groupIds\":[\"apdyarikeejdpdfh\",\"wmmkfq\",\"r\"],\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Deleting\"},\"id\":\"wwtrjm\",\"name\":\"qkvyhzokpoyuohu\",\"type\":\"nsnaajphmp\"},{\"properties\":{\"privateEndpoint\":{},\"groupIds\":[\"lpwsadaxjs\",\"mxpezco\"],\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Creating\"},\"id\":\"rmfqzwq\",\"name\":\"nxkeed\",\"type\":\"nwmywxfqzkvemy\"}],\"provisioningState\":\"Failed\",\"partnerRegistrationFullyQualifiedId\":\"zaqpqi\",\"minimumTlsVersionAllowed\":\"1.2\",\"endpoint\":\"ptrwtxzuisamo\",\"publicNetworkAccess\":\"Enabled\",\"inboundIpRules\":[{\"ipMask\":\"exroqsqjghrmth\",\"action\":\"Allow\"},{\"ipMask\":\"sttxs\",\"action\":\"Allow\"},{\"ipMask\":\"qpaniceovxgzwhs\",\"action\":\"Allow\"}],\"disableLocalAuth\":false,\"partnerTopicRoutingMode\":\"SourceEventAttribute\"},\"location\":\"kesliky\",\"tags\":{\"qqqdseipnquwz\":\"ixyqhfnkvy\"},\"id\":\"hrptyodlhkfktltd\",\"name\":\"sobjop\",\"type\":\"ouhbq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        EventGridManager manager = EventGridManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PartnerNamespace response = manager.partnerNamespaces()
            .getByResourceGroupWithResponse("r", "w", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("kesliky", response.location());
        Assertions.assertEquals("ixyqhfnkvy", response.tags().get("qqqdseipnquwz"));
        Assertions.assertEquals("zaqpqi", response.partnerRegistrationFullyQualifiedId());
        Assertions.assertEquals(TlsVersion.ONE_TWO, response.minimumTlsVersionAllowed());
        Assertions.assertEquals(PublicNetworkAccess.ENABLED, response.publicNetworkAccess());
        Assertions.assertEquals("exroqsqjghrmth", response.inboundIpRules().get(0).ipMask());
        Assertions.assertEquals(IpActionType.ALLOW, response.inboundIpRules().get(0).action());
        Assertions.assertEquals(false, response.disableLocalAuth());
        Assertions.assertEquals(PartnerTopicRoutingMode.SOURCE_EVENT_ATTRIBUTE, response.partnerTopicRoutingMode());
    }
}
