// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.eventgrid.models.ConnectionState;
import com.azure.resourcemanager.eventgrid.models.PersistedConnectionStatus;
import com.azure.resourcemanager.eventgrid.models.PrivateEndpoint;
import com.azure.resourcemanager.eventgrid.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.eventgrid.models.ResourceProvisioningState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"rdcoxnbkkj\"},\"groupIds\":[\"rnnqb\",\"q\",\"pizxqltgrdogyp\"],\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"fihwu\",\"actionsRequired\":\"ctafsrbxrblm\"},\"provisioningState\":\"Creating\"},\"id\":\"wxihs\",\"name\":\"nxw\",\"type\":\"agnepzwaklsb\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"qagwwrxaomz\"},\"groupIds\":[\"lrrcz\",\"zkhhltnjadhqo\"],\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"yueayfbpcmsp\",\"actionsRequired\":\"yrrueqth\"},\"provisioningState\":\"Canceled\"},\"id\":\"nmbscbbx\",\"name\":\"gdhxi\",\"type\":\"d\"}],\"nextLink\":\"pedbwdpyqy\"}")
            .toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals("rdcoxnbkkj", model.value().get(0).privateEndpoint().id());
        Assertions.assertEquals("rnnqb", model.value().get(0).groupIds().get(0));
        Assertions.assertEquals(PersistedConnectionStatus.DISCONNECTED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("fihwu", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("ctafsrbxrblm",
            model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals(ResourceProvisioningState.CREATING, model.value().get(0).provisioningState());
        Assertions.assertEquals("pedbwdpyqy", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResult model
            = new PrivateEndpointConnectionListResult()
                .withValue(Arrays.asList(
                    new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint().withId("rdcoxnbkkj"))
                        .withGroupIds(Arrays.asList("rnnqb", "q", "pizxqltgrdogyp"))
                        .withPrivateLinkServiceConnectionState(
                            new ConnectionState().withStatus(PersistedConnectionStatus.DISCONNECTED)
                                .withDescription("fihwu")
                                .withActionsRequired("ctafsrbxrblm"))
                        .withProvisioningState(ResourceProvisioningState.CREATING),
                    new PrivateEndpointConnectionInner()
                        .withPrivateEndpoint(new PrivateEndpoint().withId("qagwwrxaomz"))
                        .withGroupIds(Arrays.asList("lrrcz", "zkhhltnjadhqo"))
                        .withPrivateLinkServiceConnectionState(
                            new ConnectionState().withStatus(PersistedConnectionStatus.DISCONNECTED)
                                .withDescription("yueayfbpcmsp")
                                .withActionsRequired("yrrueqth"))
                        .withProvisioningState(ResourceProvisioningState.CANCELED)))
                .withNextLink("pedbwdpyqy");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals("rdcoxnbkkj", model.value().get(0).privateEndpoint().id());
        Assertions.assertEquals("rnnqb", model.value().get(0).groupIds().get(0));
        Assertions.assertEquals(PersistedConnectionStatus.DISCONNECTED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("fihwu", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("ctafsrbxrblm",
            model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals(ResourceProvisioningState.CREATING, model.value().get(0).provisioningState());
        Assertions.assertEquals("pedbwdpyqy", model.nextLink());
    }
}
