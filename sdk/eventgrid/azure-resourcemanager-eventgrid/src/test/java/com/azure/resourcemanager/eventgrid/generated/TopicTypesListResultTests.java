// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner;
import com.azure.resourcemanager.eventgrid.models.ResourceRegionType;
import com.azure.resourcemanager.eventgrid.models.TopicTypeAdditionalEnforcedPermission;
import com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState;
import com.azure.resourcemanager.eventgrid.models.TopicTypesListResult;
import com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TopicTypesListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TopicTypesListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provider\":\"pvti\",\"displayName\":\"zbpdbo\",\"description\":\"gryfqiuasig\",\"resourceRegionType\":\"GlobalResource\",\"provisioningState\":\"Canceled\",\"supportedLocations\":[\"equygdjboqgrmtq\",\"kqevadrmmw\"],\"sourceResourceFormat\":\"awvcmjzkxiid\",\"supportedScopesForSource\":[\"ManagementGroup\",\"Resource\",\"ManagementGroup\",\"ManagementGroup\"],\"areRegionalAndGlobalSourcesSupported\":true,\"additionalEnforcedPermissions\":[{\"permissionName\":\"qazu\",\"isDataAction\":false},{\"permissionName\":\"zkrrcoiisba\",\"isDataAction\":false},{\"permissionName\":\"ccek\",\"isDataAction\":false},{\"permissionName\":\"sbezaxyfukzxuizh\",\"isDataAction\":false}]},\"id\":\"epkpe\",\"name\":\"iarxqiubxdukec\",\"type\":\"xdazv\"}]}")
            .toObject(TopicTypesListResult.class);
        Assertions.assertEquals("pvti", model.value().get(0).provider());
        Assertions.assertEquals("zbpdbo", model.value().get(0).displayName());
        Assertions.assertEquals("gryfqiuasig", model.value().get(0).description());
        Assertions.assertEquals(ResourceRegionType.GLOBAL_RESOURCE, model.value().get(0).resourceRegionType());
        Assertions.assertEquals(TopicTypeProvisioningState.CANCELED, model.value().get(0).provisioningState());
        Assertions.assertEquals("equygdjboqgrmtq", model.value().get(0).supportedLocations().get(0));
        Assertions.assertEquals("awvcmjzkxiid", model.value().get(0).sourceResourceFormat());
        Assertions.assertEquals(TopicTypeSourceScope.MANAGEMENT_GROUP,
            model.value().get(0).supportedScopesForSource().get(0));
        Assertions.assertEquals(true, model.value().get(0).areRegionalAndGlobalSourcesSupported());
        Assertions.assertEquals("qazu", model.value().get(0).additionalEnforcedPermissions().get(0).permissionName());
        Assertions.assertEquals(false, model.value().get(0).additionalEnforcedPermissions().get(0).isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TopicTypesListResult model = new TopicTypesListResult().withValue(Arrays.asList(new TopicTypeInfoInner()
            .withProvider("pvti")
            .withDisplayName("zbpdbo")
            .withDescription("gryfqiuasig")
            .withResourceRegionType(ResourceRegionType.GLOBAL_RESOURCE)
            .withProvisioningState(TopicTypeProvisioningState.CANCELED)
            .withSupportedLocations(Arrays.asList("equygdjboqgrmtq", "kqevadrmmw"))
            .withSourceResourceFormat("awvcmjzkxiid")
            .withSupportedScopesForSource(
                Arrays.asList(TopicTypeSourceScope.MANAGEMENT_GROUP, TopicTypeSourceScope.RESOURCE,
                    TopicTypeSourceScope.MANAGEMENT_GROUP, TopicTypeSourceScope.MANAGEMENT_GROUP))
            .withAreRegionalAndGlobalSourcesSupported(true)
            .withAdditionalEnforcedPermissions(Arrays.asList(
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("qazu").withIsDataAction(false),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("zkrrcoiisba").withIsDataAction(false),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("ccek").withIsDataAction(false),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("sbezaxyfukzxuizh")
                    .withIsDataAction(false)))));
        model = BinaryData.fromObject(model).toObject(TopicTypesListResult.class);
        Assertions.assertEquals("pvti", model.value().get(0).provider());
        Assertions.assertEquals("zbpdbo", model.value().get(0).displayName());
        Assertions.assertEquals("gryfqiuasig", model.value().get(0).description());
        Assertions.assertEquals(ResourceRegionType.GLOBAL_RESOURCE, model.value().get(0).resourceRegionType());
        Assertions.assertEquals(TopicTypeProvisioningState.CANCELED, model.value().get(0).provisioningState());
        Assertions.assertEquals("equygdjboqgrmtq", model.value().get(0).supportedLocations().get(0));
        Assertions.assertEquals("awvcmjzkxiid", model.value().get(0).sourceResourceFormat());
        Assertions.assertEquals(TopicTypeSourceScope.MANAGEMENT_GROUP,
            model.value().get(0).supportedScopesForSource().get(0));
        Assertions.assertEquals(true, model.value().get(0).areRegionalAndGlobalSourcesSupported());
        Assertions.assertEquals("qazu", model.value().get(0).additionalEnforcedPermissions().get(0).permissionName());
        Assertions.assertEquals(false, model.value().get(0).additionalEnforcedPermissions().get(0).isDataAction());
    }
}
