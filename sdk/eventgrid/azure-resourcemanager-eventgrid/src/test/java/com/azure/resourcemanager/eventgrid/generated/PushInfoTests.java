// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.DeadLetterDestination;
import com.azure.resourcemanager.eventgrid.models.DeadLetterWithResourceIdentity;
import com.azure.resourcemanager.eventgrid.models.DeliveryWithResourceIdentity;
import com.azure.resourcemanager.eventgrid.models.EventSubscriptionDestination;
import com.azure.resourcemanager.eventgrid.models.EventSubscriptionIdentity;
import com.azure.resourcemanager.eventgrid.models.EventSubscriptionIdentityType;
import com.azure.resourcemanager.eventgrid.models.PushInfo;
import org.junit.jupiter.api.Assertions;

public final class PushInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PushInfo model = BinaryData.fromString(
            "{\"maxDeliveryCount\":926747355,\"eventTimeToLive\":\"sd\",\"deadLetterDestinationWithResourceIdentity\":{\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentity\":\"lmkk\"},\"deadLetterDestination\":{\"endpointType\":\"DeadLetterDestination\"}},\"deliveryWithResourceIdentity\":{\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentity\":\"wpusdsttwvogv\"},\"destination\":{\"endpointType\":\"EventSubscriptionDestination\"}}}")
            .toObject(PushInfo.class);
        Assertions.assertEquals(926747355, model.maxDeliveryCount());
        Assertions.assertEquals("sd", model.eventTimeToLive());
        Assertions.assertEquals(EventSubscriptionIdentityType.USER_ASSIGNED,
            model.deadLetterDestinationWithResourceIdentity().identity().type());
        Assertions.assertEquals("lmkk",
            model.deadLetterDestinationWithResourceIdentity().identity().userAssignedIdentity());
        Assertions.assertEquals(EventSubscriptionIdentityType.USER_ASSIGNED,
            model.deliveryWithResourceIdentity().identity().type());
        Assertions.assertEquals("wpusdsttwvogv",
            model.deliveryWithResourceIdentity().identity().userAssignedIdentity());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PushInfo model = new PushInfo()
            .withMaxDeliveryCount(926747355).withEventTimeToLive(
                "sd")
            .withDeadLetterDestinationWithResourceIdentity(new DeadLetterWithResourceIdentity()
                .withIdentity(new EventSubscriptionIdentity().withType(EventSubscriptionIdentityType.USER_ASSIGNED)
                    .withUserAssignedIdentity("lmkk"))
                .withDeadLetterDestination(new DeadLetterDestination()))
            .withDeliveryWithResourceIdentity(
                new DeliveryWithResourceIdentity()
                    .withIdentity(new EventSubscriptionIdentity().withType(EventSubscriptionIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentity("wpusdsttwvogv"))
                    .withDestination(new EventSubscriptionDestination()));
        model = BinaryData.fromObject(model).toObject(PushInfo.class);
        Assertions.assertEquals(926747355, model.maxDeliveryCount());
        Assertions.assertEquals("sd", model.eventTimeToLive());
        Assertions.assertEquals(EventSubscriptionIdentityType.USER_ASSIGNED,
            model.deadLetterDestinationWithResourceIdentity().identity().type());
        Assertions.assertEquals("lmkk",
            model.deadLetterDestinationWithResourceIdentity().identity().userAssignedIdentity());
        Assertions.assertEquals(EventSubscriptionIdentityType.USER_ASSIGNED,
            model.deliveryWithResourceIdentity().identity().type());
        Assertions.assertEquals("wpusdsttwvogv",
            model.deliveryWithResourceIdentity().identity().userAssignedIdentity());
    }
}
