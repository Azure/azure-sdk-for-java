// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.AzureFunctionEventSubscriptionDestinationProperties;
import com.azure.resourcemanager.eventgrid.models.DeliveryAttributeMapping;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureFunctionEventSubscriptionDestinationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureFunctionEventSubscriptionDestinationProperties model = BinaryData.fromString(
            "{\"resourceId\":\"goadyedmzr\",\"maxEventsPerBatch\":667032439,\"preferredBatchSizeInKilobytes\":41358152,\"deliveryAttributeMappings\":[{\"type\":\"DeliveryAttributeMapping\",\"name\":\"noitpkpztr\"}]}")
            .toObject(AzureFunctionEventSubscriptionDestinationProperties.class);
        Assertions.assertEquals("goadyedmzr", model.resourceId());
        Assertions.assertEquals(667032439, model.maxEventsPerBatch());
        Assertions.assertEquals(41358152, model.preferredBatchSizeInKilobytes());
        Assertions.assertEquals("noitpkpztr", model.deliveryAttributeMappings().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureFunctionEventSubscriptionDestinationProperties model
            = new AzureFunctionEventSubscriptionDestinationProperties().withResourceId("goadyedmzr")
                .withMaxEventsPerBatch(667032439)
                .withPreferredBatchSizeInKilobytes(41358152)
                .withDeliveryAttributeMappings(Arrays.asList(new DeliveryAttributeMapping().withName("noitpkpztr")));
        model = BinaryData.fromObject(model).toObject(AzureFunctionEventSubscriptionDestinationProperties.class);
        Assertions.assertEquals("goadyedmzr", model.resourceId());
        Assertions.assertEquals(667032439, model.maxEventsPerBatch());
        Assertions.assertEquals(41358152, model.preferredBatchSizeInKilobytes());
        Assertions.assertEquals("noitpkpztr", model.deliveryAttributeMappings().get(0).name());
    }
}
