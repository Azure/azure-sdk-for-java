// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.PermissionBindingInner;
import com.azure.resourcemanager.eventgrid.models.PermissionBindingsListResult;
import com.azure.resourcemanager.eventgrid.models.PermissionType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PermissionBindingsListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PermissionBindingsListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"description\":\"hj\",\"topicSpaceName\":\"wgdnqzbr\",\"permission\":\"Subscriber\",\"clientGroupName\":\"zhzmtksjci\",\"provisioningState\":\"Updating\"},\"id\":\"sxcdgljplkeuach\",\"name\":\"omflrytswfp\",\"type\":\"mdgycxn\"}],\"nextLink\":\"kwhqj\"}")
            .toObject(PermissionBindingsListResult.class);
        Assertions.assertEquals("hj", model.value().get(0).description());
        Assertions.assertEquals("wgdnqzbr", model.value().get(0).topicSpaceName());
        Assertions.assertEquals(PermissionType.SUBSCRIBER, model.value().get(0).permission());
        Assertions.assertEquals("zhzmtksjci", model.value().get(0).clientGroupName());
        Assertions.assertEquals("kwhqj", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PermissionBindingsListResult model = new PermissionBindingsListResult()
            .withValue(Arrays.asList(new PermissionBindingInner().withDescription("hj")
                .withTopicSpaceName("wgdnqzbr")
                .withPermission(PermissionType.SUBSCRIBER)
                .withClientGroupName("zhzmtksjci")))
            .withNextLink("kwhqj");
        model = BinaryData.fromObject(model).toObject(PermissionBindingsListResult.class);
        Assertions.assertEquals("hj", model.value().get(0).description());
        Assertions.assertEquals("wgdnqzbr", model.value().get(0).topicSpaceName());
        Assertions.assertEquals(PermissionType.SUBSCRIBER, model.value().get(0).permission());
        Assertions.assertEquals("zhzmtksjci", model.value().get(0).clientGroupName());
        Assertions.assertEquals("kwhqj", model.nextLink());
    }
}
