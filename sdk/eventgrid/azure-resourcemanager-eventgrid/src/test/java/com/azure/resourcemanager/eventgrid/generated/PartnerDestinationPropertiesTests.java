// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.PartnerDestinationProperties;
import com.azure.resourcemanager.eventgrid.models.PartnerDestinationActivationState;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class PartnerDestinationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PartnerDestinationProperties model = BinaryData.fromString(
            "{\"partnerRegistrationImmutableId\":\"7fb89ac3-96be-44dc-8f12-d8db2c38eed0\",\"endpointServiceContext\":\"dmozu\",\"expirationTimeIfNotActivatedUtc\":\"2021-03-08T21:05:34Z\",\"provisioningState\":\"Canceled\",\"activationState\":\"NeverActivated\",\"endpointBaseUrl\":\"adpysownbt\",\"messageForActivation\":\"bugrj\"}")
            .toObject(PartnerDestinationProperties.class);
        Assertions.assertEquals(UUID.fromString("7fb89ac3-96be-44dc-8f12-d8db2c38eed0"),
            model.partnerRegistrationImmutableId());
        Assertions.assertEquals("dmozu", model.endpointServiceContext());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-08T21:05:34Z"), model.expirationTimeIfNotActivatedUtc());
        Assertions.assertEquals(PartnerDestinationActivationState.NEVER_ACTIVATED, model.activationState());
        Assertions.assertEquals("adpysownbt", model.endpointBaseUrl());
        Assertions.assertEquals("bugrj", model.messageForActivation());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PartnerDestinationProperties model = new PartnerDestinationProperties()
            .withPartnerRegistrationImmutableId(UUID.fromString("7fb89ac3-96be-44dc-8f12-d8db2c38eed0"))
            .withEndpointServiceContext("dmozu")
            .withExpirationTimeIfNotActivatedUtc(OffsetDateTime.parse("2021-03-08T21:05:34Z"))
            .withActivationState(PartnerDestinationActivationState.NEVER_ACTIVATED).withEndpointBaseUrl("adpysownbt")
            .withMessageForActivation("bugrj");
        model = BinaryData.fromObject(model).toObject(PartnerDestinationProperties.class);
        Assertions.assertEquals(UUID.fromString("7fb89ac3-96be-44dc-8f12-d8db2c38eed0"),
            model.partnerRegistrationImmutableId());
        Assertions.assertEquals("dmozu", model.endpointServiceContext());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-08T21:05:34Z"), model.expirationTimeIfNotActivatedUtc());
        Assertions.assertEquals(PartnerDestinationActivationState.NEVER_ACTIVATED, model.activationState());
        Assertions.assertEquals("adpysownbt", model.endpointBaseUrl());
        Assertions.assertEquals("bugrj", model.messageForActivation());
    }
}
