// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.AzureFunctionEventSubscriptionDestination;
import com.azure.resourcemanager.eventgrid.models.DeliveryAttributeMapping;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureFunctionEventSubscriptionDestinationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureFunctionEventSubscriptionDestination model = BinaryData.fromString(
            "{\"endpointType\":\"AzureFunction\",\"properties\":{\"resourceId\":\"x\",\"maxEventsPerBatch\":1120237125,\"preferredBatchSizeInKilobytes\":857070249,\"deliveryAttributeMappings\":[{\"type\":\"DeliveryAttributeMapping\",\"name\":\"ugyxpqit\"}]}}")
            .toObject(AzureFunctionEventSubscriptionDestination.class);
        Assertions.assertEquals("x", model.resourceId());
        Assertions.assertEquals(1120237125, model.maxEventsPerBatch());
        Assertions.assertEquals(857070249, model.preferredBatchSizeInKilobytes());
        Assertions.assertEquals("ugyxpqit", model.deliveryAttributeMappings().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureFunctionEventSubscriptionDestination model
            = new AzureFunctionEventSubscriptionDestination().withResourceId("x")
                .withMaxEventsPerBatch(1120237125)
                .withPreferredBatchSizeInKilobytes(857070249)
                .withDeliveryAttributeMappings(Arrays.asList(new DeliveryAttributeMapping().withName("ugyxpqit")));
        model = BinaryData.fromObject(model).toObject(AzureFunctionEventSubscriptionDestination.class);
        Assertions.assertEquals("x", model.resourceId());
        Assertions.assertEquals(1120237125, model.maxEventsPerBatch());
        Assertions.assertEquals(857070249, model.preferredBatchSizeInKilobytes());
        Assertions.assertEquals("ugyxpqit", model.deliveryAttributeMappings().get(0).name());
    }
}
