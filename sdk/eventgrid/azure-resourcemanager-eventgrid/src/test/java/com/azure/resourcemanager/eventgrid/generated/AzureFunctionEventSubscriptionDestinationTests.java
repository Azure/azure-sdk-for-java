// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.AzureFunctionEventSubscriptionDestination;
import com.azure.resourcemanager.eventgrid.models.DynamicDeliveryAttributeMapping;
import com.azure.resourcemanager.eventgrid.models.StaticDeliveryAttributeMapping;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureFunctionEventSubscriptionDestinationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureFunctionEventSubscriptionDestination model = BinaryData.fromString(
            "{\"endpointType\":\"NamespaceTopic\",\"properties\":{\"resourceId\":\"grcwfcmfcnrjajq\",\"maxEventsPerBatch\":877479333,\"preferredBatchSizeInKilobytes\":713782622,\"deliveryAttributeMappings\":[{\"type\":\"Static\",\"name\":\"zqgxx\"},{\"type\":\"Dynamic\",\"name\":\"mtlpqagyno\"}]}}")
            .toObject(AzureFunctionEventSubscriptionDestination.class);
        Assertions.assertEquals("grcwfcmfcnrjajq", model.resourceId());
        Assertions.assertEquals(877479333, model.maxEventsPerBatch());
        Assertions.assertEquals(713782622, model.preferredBatchSizeInKilobytes());
        Assertions.assertEquals("zqgxx", model.deliveryAttributeMappings().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureFunctionEventSubscriptionDestination model
            = new AzureFunctionEventSubscriptionDestination().withResourceId("grcwfcmfcnrjajq")
                .withMaxEventsPerBatch(877479333)
                .withPreferredBatchSizeInKilobytes(713782622)
                .withDeliveryAttributeMappings(Arrays.asList(new StaticDeliveryAttributeMapping().withName("zqgxx"),
                    new DynamicDeliveryAttributeMapping().withName("mtlpqagyno")));
        model = BinaryData.fromObject(model).toObject(AzureFunctionEventSubscriptionDestination.class);
        Assertions.assertEquals("grcwfcmfcnrjajq", model.resourceId());
        Assertions.assertEquals(877479333, model.maxEventsPerBatch());
        Assertions.assertEquals(713782622, model.preferredBatchSizeInKilobytes());
        Assertions.assertEquals("zqgxx", model.deliveryAttributeMappings().get(0).name());
    }
}
