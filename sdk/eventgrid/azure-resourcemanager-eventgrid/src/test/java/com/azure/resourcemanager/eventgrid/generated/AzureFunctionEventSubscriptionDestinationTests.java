// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.AzureFunctionEventSubscriptionDestination;
import com.azure.resourcemanager.eventgrid.models.DeliveryAttributeMapping;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureFunctionEventSubscriptionDestinationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureFunctionEventSubscriptionDestination model = BinaryData.fromString(
            "{\"endpointType\":\"AzureFunction\",\"properties\":{\"resourceId\":\"ttmbqdabzfiv\",\"maxEventsPerBatch\":1061147209,\"preferredBatchSizeInKilobytes\":1660132426,\"deliveryAttributeMappings\":[{\"type\":\"DeliveryAttributeMapping\",\"name\":\"hz\"},{\"type\":\"DeliveryAttributeMapping\",\"name\":\"jfwyyrlhgenuze\"},{\"type\":\"DeliveryAttributeMapping\",\"name\":\"vkvebaqsz\"}]}}")
            .toObject(AzureFunctionEventSubscriptionDestination.class);
        Assertions.assertEquals("ttmbqdabzfiv", model.resourceId());
        Assertions.assertEquals(1061147209, model.maxEventsPerBatch());
        Assertions.assertEquals(1660132426, model.preferredBatchSizeInKilobytes());
        Assertions.assertEquals("hz", model.deliveryAttributeMappings().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureFunctionEventSubscriptionDestination model
            = new AzureFunctionEventSubscriptionDestination().withResourceId("ttmbqdabzfiv")
                .withMaxEventsPerBatch(1061147209).withPreferredBatchSizeInKilobytes(1660132426)
                .withDeliveryAttributeMappings(Arrays.asList(new DeliveryAttributeMapping().withName("hz"),
                    new DeliveryAttributeMapping().withName("jfwyyrlhgenuze"),
                    new DeliveryAttributeMapping().withName("vkvebaqsz")));
        model = BinaryData.fromObject(model).toObject(AzureFunctionEventSubscriptionDestination.class);
        Assertions.assertEquals("ttmbqdabzfiv", model.resourceId());
        Assertions.assertEquals(1061147209, model.maxEventsPerBatch());
        Assertions.assertEquals(1660132426, model.preferredBatchSizeInKilobytes());
        Assertions.assertEquals("hz", model.deliveryAttributeMappings().get(0).name());
    }
}
