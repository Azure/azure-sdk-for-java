// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicProperties;
import com.azure.resourcemanager.eventgrid.models.EventDefinitionKind;
import com.azure.resourcemanager.eventgrid.models.EventTypeInfo;
import com.azure.resourcemanager.eventgrid.models.InlineEventProperties;
import com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class PartnerTopicPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PartnerTopicProperties model = BinaryData.fromString(
            "{\"partnerRegistrationImmutableId\":\"762d7716-96dc-4d58-9ce6-9cf8039814ec\",\"source\":\"ers\",\"eventTypeInfo\":{\"kind\":\"Inline\",\"inlineEventTypes\":{\"ycjsx\":{\"description\":\"namikzebrqbsms\",\"displayName\":\"iqg\",\"documentationUrl\":\"hokzrusw\",\"dataSchemaUrl\":\"hczznvf\"},\"xpelnjetagltsx\":{\"description\":\"wix\",\"displayName\":\"umwmxqhnd\",\"documentationUrl\":\"oamld\",\"dataSchemaUrl\":\"haohdjhhflzokxc\"},\"ky\":{\"description\":\"tft\",\"displayName\":\"pnpbswveflocc\",\"documentationUrl\":\"mozi\",\"dataSchemaUrl\":\"ipgawtxx\"}}},\"expirationTimeIfNotActivatedUtc\":\"2021-05-09T23:26:24Z\",\"provisioningState\":\"Updating\",\"activationState\":\"NeverActivated\",\"partnerTopicFriendlyDescription\":\"ytfmpc\",\"messageForActivation\":\"ilrmcaykggnox\"}")
            .toObject(PartnerTopicProperties.class);
        Assertions.assertEquals(UUID.fromString("762d7716-96dc-4d58-9ce6-9cf8039814ec"),
            model.partnerRegistrationImmutableId());
        Assertions.assertEquals("ers", model.source());
        Assertions.assertEquals(EventDefinitionKind.INLINE, model.eventTypeInfo().kind());
        Assertions.assertEquals("namikzebrqbsms", model.eventTypeInfo().inlineEventTypes().get("ycjsx").description());
        Assertions.assertEquals("iqg", model.eventTypeInfo().inlineEventTypes().get("ycjsx").displayName());
        Assertions.assertEquals("hokzrusw", model.eventTypeInfo().inlineEventTypes().get("ycjsx").documentationUrl());
        Assertions.assertEquals("hczznvf", model.eventTypeInfo().inlineEventTypes().get("ycjsx").dataSchemaUrl());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-09T23:26:24Z"), model.expirationTimeIfNotActivatedUtc());
        Assertions.assertEquals(PartnerTopicActivationState.NEVER_ACTIVATED, model.activationState());
        Assertions.assertEquals("ytfmpc", model.partnerTopicFriendlyDescription());
        Assertions.assertEquals("ilrmcaykggnox", model.messageForActivation());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PartnerTopicProperties model = new PartnerTopicProperties()
            .withPartnerRegistrationImmutableId(UUID.fromString("762d7716-96dc-4d58-9ce6-9cf8039814ec"))
            .withSource("ers")
            .withEventTypeInfo(new EventTypeInfo().withKind(EventDefinitionKind.INLINE)
                .withInlineEventTypes(mapOf("ycjsx",
                    new InlineEventProperties().withDescription("namikzebrqbsms")
                        .withDisplayName("iqg")
                        .withDocumentationUrl("hokzrusw")
                        .withDataSchemaUrl("hczznvf"),
                    "xpelnjetagltsx",
                    new InlineEventProperties().withDescription("wix")
                        .withDisplayName("umwmxqhnd")
                        .withDocumentationUrl("oamld")
                        .withDataSchemaUrl("haohdjhhflzokxc"),
                    "ky",
                    new InlineEventProperties().withDescription("tft")
                        .withDisplayName("pnpbswveflocc")
                        .withDocumentationUrl("mozi")
                        .withDataSchemaUrl("ipgawtxx"))))
            .withExpirationTimeIfNotActivatedUtc(OffsetDateTime.parse("2021-05-09T23:26:24Z"))
            .withActivationState(PartnerTopicActivationState.NEVER_ACTIVATED)
            .withPartnerTopicFriendlyDescription("ytfmpc")
            .withMessageForActivation("ilrmcaykggnox");
        model = BinaryData.fromObject(model).toObject(PartnerTopicProperties.class);
        Assertions.assertEquals(UUID.fromString("762d7716-96dc-4d58-9ce6-9cf8039814ec"),
            model.partnerRegistrationImmutableId());
        Assertions.assertEquals("ers", model.source());
        Assertions.assertEquals(EventDefinitionKind.INLINE, model.eventTypeInfo().kind());
        Assertions.assertEquals("namikzebrqbsms", model.eventTypeInfo().inlineEventTypes().get("ycjsx").description());
        Assertions.assertEquals("iqg", model.eventTypeInfo().inlineEventTypes().get("ycjsx").displayName());
        Assertions.assertEquals("hokzrusw", model.eventTypeInfo().inlineEventTypes().get("ycjsx").documentationUrl());
        Assertions.assertEquals("hczznvf", model.eventTypeInfo().inlineEventTypes().get("ycjsx").dataSchemaUrl());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-09T23:26:24Z"), model.expirationTimeIfNotActivatedUtc());
        Assertions.assertEquals(PartnerTopicActivationState.NEVER_ACTIVATED, model.activationState());
        Assertions.assertEquals("ytfmpc", model.partnerTopicFriendlyDescription());
        Assertions.assertEquals("ilrmcaykggnox", model.messageForActivation());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
