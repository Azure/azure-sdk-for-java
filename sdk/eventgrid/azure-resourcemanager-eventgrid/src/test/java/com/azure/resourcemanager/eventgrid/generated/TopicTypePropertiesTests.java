// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeProperties;
import com.azure.resourcemanager.eventgrid.models.ResourceRegionType;
import com.azure.resourcemanager.eventgrid.models.TopicTypeAdditionalEnforcedPermission;
import com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState;
import com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TopicTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TopicTypeProperties model = BinaryData.fromString(
            "{\"provider\":\"swbnfddepldwqjns\",\"displayName\":\"ygleexa\",\"description\":\"mywhsb\",\"resourceRegionType\":\"GlobalResource\",\"provisioningState\":\"Updating\",\"supportedLocations\":[\"jjzyvoaqajuve\",\"zptdmkrrbh\",\"pfulube\",\"gybpmfb\"],\"sourceResourceFormat\":\"nunmpzkrv\",\"supportedScopesForSource\":[\"Resource\",\"ManagementGroup\",\"ManagementGroup\"],\"areRegionalAndGlobalSourcesSupported\":false,\"additionalEnforcedPermissions\":[{\"permissionName\":\"vfictnkjjwgcwn\",\"isDataAction\":true},{\"permissionName\":\"gfyrtogmhmjpjsc\",\"isDataAction\":true},{\"permissionName\":\"qwtygevgwmseharx\",\"isDataAction\":true},{\"permissionName\":\"n\",\"isDataAction\":false}]}")
            .toObject(TopicTypeProperties.class);
        Assertions.assertEquals("swbnfddepldwqjns", model.provider());
        Assertions.assertEquals("ygleexa", model.displayName());
        Assertions.assertEquals("mywhsb", model.description());
        Assertions.assertEquals(ResourceRegionType.GLOBAL_RESOURCE, model.resourceRegionType());
        Assertions.assertEquals(TopicTypeProvisioningState.UPDATING, model.provisioningState());
        Assertions.assertEquals("jjzyvoaqajuve", model.supportedLocations().get(0));
        Assertions.assertEquals("nunmpzkrv", model.sourceResourceFormat());
        Assertions.assertEquals(TopicTypeSourceScope.RESOURCE, model.supportedScopesForSource().get(0));
        Assertions.assertFalse(model.areRegionalAndGlobalSourcesSupported());
        Assertions.assertEquals("vfictnkjjwgcwn", model.additionalEnforcedPermissions().get(0).permissionName());
        Assertions.assertTrue(model.additionalEnforcedPermissions().get(0).isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TopicTypeProperties model = new TopicTypeProperties().withProvider("swbnfddepldwqjns")
            .withDisplayName("ygleexa")
            .withDescription("mywhsb")
            .withResourceRegionType(ResourceRegionType.GLOBAL_RESOURCE)
            .withProvisioningState(TopicTypeProvisioningState.UPDATING)
            .withSupportedLocations(Arrays.asList("jjzyvoaqajuve", "zptdmkrrbh", "pfulube", "gybpmfb"))
            .withSourceResourceFormat("nunmpzkrv")
            .withSupportedScopesForSource(Arrays.asList(TopicTypeSourceScope.RESOURCE,
                TopicTypeSourceScope.MANAGEMENT_GROUP, TopicTypeSourceScope.MANAGEMENT_GROUP))
            .withAreRegionalAndGlobalSourcesSupported(false)
            .withAdditionalEnforcedPermissions(Arrays.asList(
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("vfictnkjjwgcwn").withIsDataAction(true),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("gfyrtogmhmjpjsc")
                    .withIsDataAction(true),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("qwtygevgwmseharx")
                    .withIsDataAction(true),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("n").withIsDataAction(false)));
        model = BinaryData.fromObject(model).toObject(TopicTypeProperties.class);
        Assertions.assertEquals("swbnfddepldwqjns", model.provider());
        Assertions.assertEquals("ygleexa", model.displayName());
        Assertions.assertEquals("mywhsb", model.description());
        Assertions.assertEquals(ResourceRegionType.GLOBAL_RESOURCE, model.resourceRegionType());
        Assertions.assertEquals(TopicTypeProvisioningState.UPDATING, model.provisioningState());
        Assertions.assertEquals("jjzyvoaqajuve", model.supportedLocations().get(0));
        Assertions.assertEquals("nunmpzkrv", model.sourceResourceFormat());
        Assertions.assertEquals(TopicTypeSourceScope.RESOURCE, model.supportedScopesForSource().get(0));
        Assertions.assertFalse(model.areRegionalAndGlobalSourcesSupported());
        Assertions.assertEquals("vfictnkjjwgcwn", model.additionalEnforcedPermissions().get(0).permissionName());
        Assertions.assertTrue(model.additionalEnforcedPermissions().get(0).isDataAction());
    }
}
