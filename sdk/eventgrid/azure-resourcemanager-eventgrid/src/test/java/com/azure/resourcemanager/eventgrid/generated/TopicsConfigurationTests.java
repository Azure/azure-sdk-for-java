// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.CustomDomainConfiguration;
import com.azure.resourcemanager.eventgrid.models.CustomDomainIdentity;
import com.azure.resourcemanager.eventgrid.models.CustomDomainIdentityType;
import com.azure.resourcemanager.eventgrid.models.CustomDomainValidationState;
import com.azure.resourcemanager.eventgrid.models.TopicsConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TopicsConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TopicsConfiguration model = BinaryData.fromString(
            "{\"hostname\":\"t\",\"customDomains\":[{\"fullyQualifiedDomainName\":\"rv\",\"validationState\":\"Approved\",\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentity\":\"ib\"},\"certificateUrl\":\"gjio\",\"expectedTxtRecordName\":\"vrwxkv\",\"expectedTxtRecordValue\":\"k\"},{\"fullyQualifiedDomainName\":\"llqwjygvjayvblmh\",\"validationState\":\"ErrorRetrievingDnsRecord\",\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentity\":\"vvyhg\"},\"certificateUrl\":\"pbyrqufegxu\",\"expectedTxtRecordName\":\"zfbn\",\"expectedTxtRecordValue\":\"mctlpdngitv\"},{\"fullyQualifiedDomainName\":\"bmhrixkwmyijejv\",\"validationState\":\"Approved\",\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentity\":\"aixexccbdreaxh\"},\"certificateUrl\":\"xdrrvqahqkghtp\",\"expectedTxtRecordName\":\"jnhyjsvf\",\"expectedTxtRecordValue\":\"xzb\"},{\"fullyQualifiedDomainName\":\"voowvr\",\"validationState\":\"Approved\",\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentity\":\"pyostronzmyhgfi\"},\"certificateUrl\":\"sxkm\",\"expectedTxtRecordName\":\"a\",\"expectedTxtRecordValue\":\"rrjreafxtsgu\"}]}")
            .toObject(TopicsConfiguration.class);
        Assertions.assertEquals("rv", model.customDomains().get(0).fullyQualifiedDomainName());
        Assertions.assertEquals(CustomDomainValidationState.APPROVED, model.customDomains().get(0).validationState());
        Assertions.assertEquals(CustomDomainIdentityType.USER_ASSIGNED, model.customDomains().get(0).identity().type());
        Assertions.assertEquals("ib", model.customDomains().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("gjio", model.customDomains().get(0).certificateUrl());
        Assertions.assertEquals("vrwxkv", model.customDomains().get(0).expectedTxtRecordName());
        Assertions.assertEquals("k", model.customDomains().get(0).expectedTxtRecordValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TopicsConfiguration model = new TopicsConfiguration().withCustomDomains(Arrays.asList(
            new CustomDomainConfiguration().withFullyQualifiedDomainName("rv")
                .withValidationState(CustomDomainValidationState.APPROVED)
                .withIdentity(new CustomDomainIdentity().withType(CustomDomainIdentityType.USER_ASSIGNED)
                    .withUserAssignedIdentity("ib"))
                .withCertificateUrl("gjio")
                .withExpectedTxtRecordName("vrwxkv")
                .withExpectedTxtRecordValue("k"),
            new CustomDomainConfiguration().withFullyQualifiedDomainName("llqwjygvjayvblmh")
                .withValidationState(CustomDomainValidationState.ERROR_RETRIEVING_DNS_RECORD)
                .withIdentity(new CustomDomainIdentity().withType(CustomDomainIdentityType.SYSTEM_ASSIGNED)
                    .withUserAssignedIdentity("vvyhg"))
                .withCertificateUrl("pbyrqufegxu")
                .withExpectedTxtRecordName("zfbn")
                .withExpectedTxtRecordValue("mctlpdngitv"),
            new CustomDomainConfiguration().withFullyQualifiedDomainName("bmhrixkwmyijejv")
                .withValidationState(CustomDomainValidationState.APPROVED)
                .withIdentity(new CustomDomainIdentity().withType(CustomDomainIdentityType.SYSTEM_ASSIGNED)
                    .withUserAssignedIdentity("aixexccbdreaxh"))
                .withCertificateUrl("xdrrvqahqkghtp")
                .withExpectedTxtRecordName("jnhyjsvf")
                .withExpectedTxtRecordValue("xzb"),
            new CustomDomainConfiguration().withFullyQualifiedDomainName("voowvr")
                .withValidationState(CustomDomainValidationState.APPROVED)
                .withIdentity(new CustomDomainIdentity().withType(CustomDomainIdentityType.SYSTEM_ASSIGNED)
                    .withUserAssignedIdentity("pyostronzmyhgfi"))
                .withCertificateUrl("sxkm")
                .withExpectedTxtRecordName("a")
                .withExpectedTxtRecordValue("rrjreafxtsgu")));
        model = BinaryData.fromObject(model).toObject(TopicsConfiguration.class);
        Assertions.assertEquals("rv", model.customDomains().get(0).fullyQualifiedDomainName());
        Assertions.assertEquals(CustomDomainValidationState.APPROVED, model.customDomains().get(0).validationState());
        Assertions.assertEquals(CustomDomainIdentityType.USER_ASSIGNED, model.customDomains().get(0).identity().type());
        Assertions.assertEquals("ib", model.customDomains().get(0).identity().userAssignedIdentity());
        Assertions.assertEquals("gjio", model.customDomains().get(0).certificateUrl());
        Assertions.assertEquals("vrwxkv", model.customDomains().get(0).expectedTxtRecordName());
        Assertions.assertEquals("k", model.customDomains().get(0).expectedTxtRecordValue());
    }
}
