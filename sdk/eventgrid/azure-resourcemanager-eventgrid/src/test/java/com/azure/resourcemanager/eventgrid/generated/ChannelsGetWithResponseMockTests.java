// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.eventgrid.EventGridManager;
import com.azure.resourcemanager.eventgrid.models.Channel;
import com.azure.resourcemanager.eventgrid.models.ChannelProvisioningState;
import com.azure.resourcemanager.eventgrid.models.ChannelType;
import com.azure.resourcemanager.eventgrid.models.EventDefinitionKind;
import com.azure.resourcemanager.eventgrid.models.ReadinessState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ChannelsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"channelType\":\"PartnerTopic\",\"partnerTopicInfo\":{\"azureSubscriptionId\":\"cdigpt\",\"resourceGroupName\":\"brzmqxucycijoclx\",\"name\":\"tgjcy\",\"eventTypeInfo\":{\"kind\":\"Inline\",\"inlineEventTypes\":{\"r\":{},\"jb\":{},\"xjeaoqaqbzgyh\":{}}},\"source\":\"wvua\"},\"messageForActivation\":\"wbqamteuliy\",\"provisioningState\":\"Succeeded\",\"readinessState\":\"Activated\",\"expirationTimeIfNotActivatedUtc\":\"2021-11-30T21:10:15Z\"},\"id\":\"f\",\"name\":\"uxx\",\"type\":\"pmywbormcq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        EventGridManager manager = EventGridManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Channel response = manager.channels()
            .getWithResponse("mtbdrvcqgu", "fzhompheq", "urelyujlfyoump", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(ChannelType.PARTNER_TOPIC, response.channelType());
        Assertions.assertEquals("cdigpt", response.partnerTopicInfo().azureSubscriptionId());
        Assertions.assertEquals("brzmqxucycijoclx", response.partnerTopicInfo().resourceGroupName());
        Assertions.assertEquals("tgjcy", response.partnerTopicInfo().name());
        Assertions.assertEquals(EventDefinitionKind.INLINE, response.partnerTopicInfo().eventTypeInfo().kind());
        Assertions.assertEquals("wvua", response.partnerTopicInfo().source());
        Assertions.assertEquals("wbqamteuliy", response.messageForActivation());
        Assertions.assertEquals(ChannelProvisioningState.SUCCEEDED, response.provisioningState());
        Assertions.assertEquals(ReadinessState.ACTIVATED, response.readinessState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-30T21:10:15Z"),
            response.expirationTimeIfNotActivatedUtc());
    }
}
