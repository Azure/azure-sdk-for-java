// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.eventgrid.EventGridManager;
import com.azure.resourcemanager.eventgrid.models.Channel;
import com.azure.resourcemanager.eventgrid.models.ChannelProvisioningState;
import com.azure.resourcemanager.eventgrid.models.ChannelType;
import com.azure.resourcemanager.eventgrid.models.EventDefinitionKind;
import com.azure.resourcemanager.eventgrid.models.ReadinessState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ChannelsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"channelType\":\"PartnerDestination\",\"partnerTopicInfo\":{\"azureSubscriptionId\":\"tjlkesmmpathub\",\"resourceGroupName\":\"h\",\"name\":\"an\",\"eventTypeInfo\":{\"kind\":\"Inline\",\"inlineEventTypes\":{\"vgw\":{},\"sfftedousnktjtgr\":{}}},\"source\":\"aqo\"},\"partnerDestinationInfo\":{\"endpointType\":\"WebHook\",\"azureSubscriptionId\":\"bauzlqbtxxw\",\"resourceGroupName\":\"h\",\"name\":\"zudrtpzk\",\"endpointServiceContext\":\"eboywhczzqrhm\",\"resourceMoveChangeHistory\":[{\"azureSubscriptionId\":\"edygisrzwnykdi\",\"resourceGroupName\":\"chl\",\"changedTimeUtc\":\"2021-11-13T06:25:36Z\"},{\"azureSubscriptionId\":\"ctofldseacdhztxk\",\"resourceGroupName\":\"fg\",\"changedTimeUtc\":\"2021-09-01T06:36:17Z\"},{\"azureSubscriptionId\":\"iyewhfjsrwqr\",\"resourceGroupName\":\"tfgcwvrr\",\"changedTimeUtc\":\"2021-11-23T04:06:09Z\"}]},\"messageForActivation\":\"tycnawthvmaxg\",\"provisioningState\":\"Canceled\",\"readinessState\":\"NeverActivated\",\"expirationTimeIfNotActivatedUtc\":\"2021-10-20T19:35:08Z\"},\"id\":\"hudfjecehok\",\"name\":\"cpqtwloesq\",\"type\":\"ggvrbnyrukoilaci\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        EventGridManager manager = EventGridManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Channel response = manager.channels()
            .getWithResponse("xolriy", "h", "beivdlhydwbdbfg", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(ChannelType.PARTNER_DESTINATION, response.channelType());
        Assertions.assertEquals("tjlkesmmpathub", response.partnerTopicInfo().azureSubscriptionId());
        Assertions.assertEquals("h", response.partnerTopicInfo().resourceGroupName());
        Assertions.assertEquals("an", response.partnerTopicInfo().name());
        Assertions.assertEquals(EventDefinitionKind.INLINE, response.partnerTopicInfo().eventTypeInfo().kind());
        Assertions.assertEquals("aqo", response.partnerTopicInfo().source());
        Assertions.assertEquals("bauzlqbtxxw", response.partnerDestinationInfo().azureSubscriptionId());
        Assertions.assertEquals("h", response.partnerDestinationInfo().resourceGroupName());
        Assertions.assertEquals("zudrtpzk", response.partnerDestinationInfo().name());
        Assertions.assertEquals("eboywhczzqrhm", response.partnerDestinationInfo().endpointServiceContext());
        Assertions.assertEquals("edygisrzwnykdi",
            response.partnerDestinationInfo().resourceMoveChangeHistory().get(0).azureSubscriptionId());
        Assertions.assertEquals("chl",
            response.partnerDestinationInfo().resourceMoveChangeHistory().get(0).resourceGroupName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-13T06:25:36Z"),
            response.partnerDestinationInfo().resourceMoveChangeHistory().get(0).changedTimeUtc());
        Assertions.assertEquals("tycnawthvmaxg", response.messageForActivation());
        Assertions.assertEquals(ChannelProvisioningState.CANCELED, response.provisioningState());
        Assertions.assertEquals(ReadinessState.NEVER_ACTIVATED, response.readinessState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-20T19:35:08Z"),
            response.expirationTimeIfNotActivatedUtc());
    }
}
