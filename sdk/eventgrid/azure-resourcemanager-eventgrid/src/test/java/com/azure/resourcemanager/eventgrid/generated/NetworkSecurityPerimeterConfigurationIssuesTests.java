// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssueSeverity;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssueType;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssues;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationIssuesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationIssues model = BinaryData.fromString(
            "{\"name\":\"fqkfuarenl\",\"properties\":{\"issueType\":\"Other\",\"severity\":\"Error\",\"description\":\"vnafvvkyfedevjbo\",\"suggestedResourceIds\":[\"qxypokkhminq\",\"ymc\",\"ngnbdxxew\",\"ninvudbchaqdt\"],\"suggestedAccessRules\":[\"crqctmxxdtddmflh\"]}}")
            .toObject(NetworkSecurityPerimeterConfigurationIssues.class);
        Assertions.assertEquals("fqkfuarenl", model.name());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueType.OTHER, model.issueType());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueSeverity.ERROR, model.severity());
        Assertions.assertEquals("vnafvvkyfedevjbo", model.description());
        Assertions.assertEquals("qxypokkhminq", model.suggestedResourceIds().get(0));
        Assertions.assertEquals("crqctmxxdtddmflh", model.suggestedAccessRules().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationIssues model
            = new NetworkSecurityPerimeterConfigurationIssues().withName("fqkfuarenl")
                .withIssueType(NetworkSecurityPerimeterConfigurationIssueType.OTHER)
                .withSeverity(NetworkSecurityPerimeterConfigurationIssueSeverity.ERROR)
                .withDescription("vnafvvkyfedevjbo")
                .withSuggestedResourceIds(Arrays.asList("qxypokkhminq", "ymc", "ngnbdxxew", "ninvudbchaqdt"))
                .withSuggestedAccessRules(Arrays.asList("crqctmxxdtddmflh"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationIssues.class);
        Assertions.assertEquals("fqkfuarenl", model.name());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueType.OTHER, model.issueType());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueSeverity.ERROR, model.severity());
        Assertions.assertEquals("vnafvvkyfedevjbo", model.description());
        Assertions.assertEquals("qxypokkhminq", model.suggestedResourceIds().get(0));
        Assertions.assertEquals("crqctmxxdtddmflh", model.suggestedAccessRules().get(0));
    }
}
