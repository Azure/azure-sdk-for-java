// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.eventgrid.EventGridManager;
import com.azure.resourcemanager.eventgrid.models.VerifiedPartner;
import com.azure.resourcemanager.eventgrid.models.VerifiedPartnerProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VerifiedPartnersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"partnerRegistrationImmutableId\":\"f5b41e6d-332b-4482-8934-a409e26f5bfc\",\"organizationName\":\"epbntqq\",\"partnerDisplayName\":\"gfgsq\",\"partnerTopicDetails\":{\"description\":\"efejsewrznequqyn\",\"longDescription\":\"wknhajksbsyo\",\"setupUri\":\"mqjhgcydijnmc\"},\"partnerDestinationDetails\":{\"description\":\"ssfcriqxzixtd\",\"longDescription\":\"wmvcdkucpxpyafrw\",\"setupUri\":\"orogeuv\"},\"provisioningState\":\"Creating\"},\"id\":\"pnr\",\"name\":\"jseml\",\"type\":\"ofrsnq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        EventGridManager manager = EventGridManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<VerifiedPartner> response
            = manager.verifiedPartners().list("cwwsj", 1946015970, com.azure.core.util.Context.NONE);

        Assertions.assertEquals(UUID.fromString("f5b41e6d-332b-4482-8934-a409e26f5bfc"),
            response.iterator().next().partnerRegistrationImmutableId());
        Assertions.assertEquals("epbntqq", response.iterator().next().organizationName());
        Assertions.assertEquals("gfgsq", response.iterator().next().partnerDisplayName());
        Assertions.assertEquals("efejsewrznequqyn", response.iterator().next().partnerTopicDetails().description());
        Assertions.assertEquals("wknhajksbsyo", response.iterator().next().partnerTopicDetails().longDescription());
        Assertions.assertEquals("mqjhgcydijnmc", response.iterator().next().partnerTopicDetails().setupUri());
        Assertions.assertEquals("ssfcriqxzixtd", response.iterator().next().partnerDestinationDetails().description());
        Assertions.assertEquals("wmvcdkucpxpyafrw",
            response.iterator().next().partnerDestinationDetails().longDescription());
        Assertions.assertEquals("orogeuv", response.iterator().next().partnerDestinationDetails().setupUri());
        Assertions.assertEquals(VerifiedPartnerProvisioningState.CREATING,
            response.iterator().next().provisioningState());
    }
}
