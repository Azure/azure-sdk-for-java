// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.eventgrid.EventGridManager;
import com.azure.resourcemanager.eventgrid.models.TopicSpace;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TopicSpacesCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"d\",\"topicTemplates\":[\"bqaolgzubakdlkv\"],\"provisioningState\":\"Succeeded\"},\"id\":\"fnsffetpkmixwew\",\"name\":\"lscgsmepnq\",\"type\":\"xgvohdbthhxmoe\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        EventGridManager manager = EventGridManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        TopicSpace response = manager.topicSpaces()
            .define("bqk")
            .withExistingNamespace("xqlyoazyfbkmvl", "zmxojzsvmai")
            .withDescription("ejthgeecbpergwlc")
            .withTopicTemplates(Arrays.asList("bamyqsokkn", "ug", "jwdizcrjixiujz"))
            .create();

        Assertions.assertEquals("d", response.description());
        Assertions.assertEquals("bqaolgzubakdlkv", response.topicTemplates().get(0));
    }
}
