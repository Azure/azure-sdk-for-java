// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.eventgrid.EventGridManager;
import com.azure.resourcemanager.eventgrid.models.EventDefinitionKind;
import com.azure.resourcemanager.eventgrid.models.IdentityType;
import com.azure.resourcemanager.eventgrid.models.PartnerTopic;
import com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PartnerTopicsActivateWithResponseMockTests {
    @Test
    public void testActivateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"partnerRegistrationImmutableId\":\"51a9cec9-2a0c-4c4f-b402-9132151a8c5b\",\"source\":\"lmwkptskwxjg\",\"eventTypeInfo\":{\"kind\":\"Inline\",\"inlineEventTypes\":{\"fejlzuqloiw\":{\"description\":\"kakmkookbputmgvm\",\"displayName\":\"akmlwktfowzkroyr\",\"documentationUrl\":\"r\",\"dataSchemaUrl\":\"lzqjimejtgzjxx\"}}},\"expirationTimeIfNotActivatedUtc\":\"2021-09-03T04:59:18Z\",\"provisioningState\":\"Failed\",\"activationState\":\"Activated\",\"partnerTopicFriendlyDescription\":\"mit\",\"messageForActivation\":\"qlhchwhrktjle\"},\"identity\":{\"type\":\"SystemAssigned\",\"principalId\":\"plhxfnsm\",\"tenantId\":\"jow\",\"userAssignedIdentities\":{\"zbuw\":{\"principalId\":\"zmudsqcm\",\"clientId\":\"x\"},\"mkzdllczdprwnhk\":{\"principalId\":\"machbkv\",\"clientId\":\"pbjrmvgoqplehm\"},\"wmhlymgnukx\":{\"principalId\":\"ggoxsstcivrakfrr\",\"clientId\":\"j\"},\"tfbclakkuc\":{\"principalId\":\"emjpequ\",\"clientId\":\"lzaudg\"}}},\"location\":\"dwnhczbutoucgjti\",\"tags\":{\"qwwvgwkslvl\":\"ayhic\"},\"id\":\"zedv\",\"name\":\"iabvnsrgek\",\"type\":\"yqxadyfhbmw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        EventGridManager manager = EventGridManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PartnerTopic response = manager.partnerTopics()
            .activateWithResponse("wj", "qtrotpvclp", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("dwnhczbutoucgjti", response.location());
        Assertions.assertEquals("ayhic", response.tags().get("qwwvgwkslvl"));
        Assertions.assertEquals(IdentityType.SYSTEM_ASSIGNED, response.identity().type());
        Assertions.assertEquals("plhxfnsm", response.identity().principalId());
        Assertions.assertEquals("jow", response.identity().tenantId());
        Assertions.assertEquals("zmudsqcm", response.identity().userAssignedIdentities().get("zbuw").principalId());
        Assertions.assertEquals("x", response.identity().userAssignedIdentities().get("zbuw").clientId());
        Assertions.assertEquals(UUID.fromString("51a9cec9-2a0c-4c4f-b402-9132151a8c5b"),
            response.partnerRegistrationImmutableId());
        Assertions.assertEquals("lmwkptskwxjg", response.source());
        Assertions.assertEquals(EventDefinitionKind.INLINE, response.eventTypeInfo().kind());
        Assertions.assertEquals("kakmkookbputmgvm",
            response.eventTypeInfo().inlineEventTypes().get("fejlzuqloiw").description());
        Assertions.assertEquals("akmlwktfowzkroyr",
            response.eventTypeInfo().inlineEventTypes().get("fejlzuqloiw").displayName());
        Assertions.assertEquals("r", response.eventTypeInfo().inlineEventTypes().get("fejlzuqloiw").documentationUrl());
        Assertions.assertEquals("lzqjimejtgzjxx",
            response.eventTypeInfo().inlineEventTypes().get("fejlzuqloiw").dataSchemaUrl());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-03T04:59:18Z"),
            response.expirationTimeIfNotActivatedUtc());
        Assertions.assertEquals(PartnerTopicActivationState.ACTIVATED, response.activationState());
        Assertions.assertEquals("mit", response.partnerTopicFriendlyDescription());
        Assertions.assertEquals("qlhchwhrktjle", response.messageForActivation());
    }
}
