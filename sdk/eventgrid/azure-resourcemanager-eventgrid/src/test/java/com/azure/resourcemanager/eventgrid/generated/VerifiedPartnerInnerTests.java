// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.VerifiedPartnerInner;
import com.azure.resourcemanager.eventgrid.models.PartnerDetails;
import com.azure.resourcemanager.eventgrid.models.VerifiedPartnerProvisioningState;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class VerifiedPartnerInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VerifiedPartnerInner model = BinaryData.fromString(
            "{\"properties\":{\"partnerRegistrationImmutableId\":\"9f7ad486-8ad3-4a32-aa28-c6baedda0224\",\"organizationName\":\"tpakf\",\"partnerDisplayName\":\"gatwmykyu\",\"partnerTopicDetails\":{\"description\":\"mdwmf\",\"longDescription\":\"pycvjqdvdwkqpldr\",\"setupUri\":\"fgnaavuagnteta\"},\"partnerDestinationDetails\":{\"description\":\"n\",\"longDescription\":\"ctuhspfefyihduye\",\"setupUri\":\"ldphmtybkcgs\"},\"provisioningState\":\"Failed\"},\"id\":\"llnmwyn\",\"name\":\"fxexlfciatxtjrr\",\"type\":\"kmdskjhhxd\"}")
            .toObject(VerifiedPartnerInner.class);
        Assertions.assertEquals(UUID.fromString("9f7ad486-8ad3-4a32-aa28-c6baedda0224"),
            model.partnerRegistrationImmutableId());
        Assertions.assertEquals("tpakf", model.organizationName());
        Assertions.assertEquals("gatwmykyu", model.partnerDisplayName());
        Assertions.assertEquals("mdwmf", model.partnerTopicDetails().description());
        Assertions.assertEquals("pycvjqdvdwkqpldr", model.partnerTopicDetails().longDescription());
        Assertions.assertEquals("fgnaavuagnteta", model.partnerTopicDetails().setupUri());
        Assertions.assertEquals("n", model.partnerDestinationDetails().description());
        Assertions.assertEquals("ctuhspfefyihduye", model.partnerDestinationDetails().longDescription());
        Assertions.assertEquals("ldphmtybkcgs", model.partnerDestinationDetails().setupUri());
        Assertions.assertEquals(VerifiedPartnerProvisioningState.FAILED, model.provisioningState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VerifiedPartnerInner model = new VerifiedPartnerInner()
            .withPartnerRegistrationImmutableId(UUID.fromString("9f7ad486-8ad3-4a32-aa28-c6baedda0224"))
            .withOrganizationName("tpakf")
            .withPartnerDisplayName("gatwmykyu")
            .withPartnerTopicDetails(new PartnerDetails().withDescription("mdwmf")
                .withLongDescription("pycvjqdvdwkqpldr")
                .withSetupUri("fgnaavuagnteta"))
            .withPartnerDestinationDetails(new PartnerDetails().withDescription("n")
                .withLongDescription("ctuhspfefyihduye")
                .withSetupUri("ldphmtybkcgs"))
            .withProvisioningState(VerifiedPartnerProvisioningState.FAILED);
        model = BinaryData.fromObject(model).toObject(VerifiedPartnerInner.class);
        Assertions.assertEquals(UUID.fromString("9f7ad486-8ad3-4a32-aa28-c6baedda0224"),
            model.partnerRegistrationImmutableId());
        Assertions.assertEquals("tpakf", model.organizationName());
        Assertions.assertEquals("gatwmykyu", model.partnerDisplayName());
        Assertions.assertEquals("mdwmf", model.partnerTopicDetails().description());
        Assertions.assertEquals("pycvjqdvdwkqpldr", model.partnerTopicDetails().longDescription());
        Assertions.assertEquals("fgnaavuagnteta", model.partnerTopicDetails().setupUri());
        Assertions.assertEquals("n", model.partnerDestinationDetails().description());
        Assertions.assertEquals("ctuhspfefyihduye", model.partnerDestinationDetails().longDescription());
        Assertions.assertEquals("ldphmtybkcgs", model.partnerDestinationDetails().setupUri());
        Assertions.assertEquals(VerifiedPartnerProvisioningState.FAILED, model.provisioningState());
    }
}
