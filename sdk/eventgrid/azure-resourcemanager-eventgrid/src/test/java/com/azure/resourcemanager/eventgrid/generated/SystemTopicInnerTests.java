// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.SystemTopicInner;
import com.azure.resourcemanager.eventgrid.models.IdentityInfo;
import com.azure.resourcemanager.eventgrid.models.IdentityType;
import com.azure.resourcemanager.eventgrid.models.UserIdentityProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SystemTopicInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SystemTopicInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Updating\",\"source\":\"wfiwzcxmj\",\"topicType\":\"yephmgtvljvrcmyf\",\"metricResourceId\":\"pgxh\"},\"identity\":{\"type\":\"UserAssigned\",\"principalId\":\"wcabvnuileeya\",\"tenantId\":\"lpaugmrm\",\"userAssignedIdentities\":{\"jwuive\":{\"principalId\":\"xwtoaukhfkvc\",\"clientId\":\"izmoaeds\"}}},\"location\":\"wcgyeewxeiqb\",\"tags\":{\"mguaml\":\"g\",\"lzgaufcshhvnew\":\"dlrgms\"},\"id\":\"nxkympqanxrjk\",\"name\":\"xtwbta\",\"type\":\"ypnyghshxc\"}")
            .toObject(SystemTopicInner.class);
        Assertions.assertEquals("wcgyeewxeiqb", model.location());
        Assertions.assertEquals("g", model.tags().get("mguaml"));
        Assertions.assertEquals(IdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("wcabvnuileeya", model.identity().principalId());
        Assertions.assertEquals("lpaugmrm", model.identity().tenantId());
        Assertions.assertEquals("xwtoaukhfkvc", model.identity().userAssignedIdentities().get("jwuive").principalId());
        Assertions.assertEquals("izmoaeds", model.identity().userAssignedIdentities().get("jwuive").clientId());
        Assertions.assertEquals("wfiwzcxmj", model.source());
        Assertions.assertEquals("yephmgtvljvrcmyf", model.topicType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SystemTopicInner model = new SystemTopicInner().withLocation("wcgyeewxeiqb")
            .withTags(mapOf("mguaml", "g", "lzgaufcshhvnew", "dlrgms"))
            .withIdentity(new IdentityInfo().withType(IdentityType.USER_ASSIGNED)
                .withPrincipalId("wcabvnuileeya")
                .withTenantId("lpaugmrm")
                .withUserAssignedIdentities(mapOf("jwuive",
                    new UserIdentityProperties().withPrincipalId("xwtoaukhfkvc").withClientId("izmoaeds"))))
            .withSource("wfiwzcxmj")
            .withTopicType("yephmgtvljvrcmyf");
        model = BinaryData.fromObject(model).toObject(SystemTopicInner.class);
        Assertions.assertEquals("wcgyeewxeiqb", model.location());
        Assertions.assertEquals("g", model.tags().get("mguaml"));
        Assertions.assertEquals(IdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("wcabvnuileeya", model.identity().principalId());
        Assertions.assertEquals("lpaugmrm", model.identity().tenantId());
        Assertions.assertEquals("xwtoaukhfkvc", model.identity().userAssignedIdentities().get("jwuive").principalId());
        Assertions.assertEquals("izmoaeds", model.identity().userAssignedIdentities().get("jwuive").clientId());
        Assertions.assertEquals("wfiwzcxmj", model.source());
        Assertions.assertEquals("yephmgtvljvrcmyf", model.topicType());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
