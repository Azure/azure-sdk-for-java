// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterInfo;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRule;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRuleDirection;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterSubscription;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterProfileAccessRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterProfileAccessRule model = BinaryData.fromString(
            "{\"fullyQualifiedArmId\":\"jvlgfggcvkyyliz\",\"name\":\"bjpsfxsfuztlvtm\",\"type\":\"gbwidqlvh\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"fizr\",\"jfnmjmvlwyz\",\"iblkujr\",\"lfojuidjp\"],\"subscriptions\":[{\"id\":\"ucejikzoeovvtz\"},{\"id\":\"et\"},{\"id\":\"ln\"}],\"networkSecurityPerimeters\":[{\"id\":\"juzkdbqz\",\"perimeterGuid\":\"xrzvhqjwtrhtgvgz\",\"location\":\"rrkolawjmjs\"}],\"fullyQualifiedDomainNames\":[\"okcdxfzzzwyjaf\",\"tlhguynuchl\",\"mltx\",\"whmozusgzvlnsnnj\"],\"emailAddresses\":[\"afolpymwamxqzrag\",\"gdphtvdula\"],\"phoneNumbers\":[\"ejchcsrlz\",\"nmzlanru\"]}}")
            .toObject(NetworkSecurityPerimeterProfileAccessRule.class);
        Assertions.assertEquals("jvlgfggcvkyyliz", model.fullyQualifiedArmId());
        Assertions.assertEquals("bjpsfxsfuztlvtm", model.name());
        Assertions.assertEquals("gbwidqlvh", model.type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND, model.direction());
        Assertions.assertEquals("fizr", model.addressPrefixes().get(0));
        Assertions.assertEquals("ucejikzoeovvtz", model.subscriptions().get(0).id());
        Assertions.assertEquals("juzkdbqz", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("xrzvhqjwtrhtgvgz", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("rrkolawjmjs", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("okcdxfzzzwyjaf", model.fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("afolpymwamxqzrag", model.emailAddresses().get(0));
        Assertions.assertEquals("ejchcsrlz", model.phoneNumbers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterProfileAccessRule model = new NetworkSecurityPerimeterProfileAccessRule()
            .withFullyQualifiedArmId("jvlgfggcvkyyliz")
            .withName("bjpsfxsfuztlvtm")
            .withType("gbwidqlvh")
            .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND)
            .withAddressPrefixes(Arrays.asList("fizr", "jfnmjmvlwyz", "iblkujr", "lfojuidjp"))
            .withSubscriptions(Arrays.asList(new NetworkSecurityPerimeterSubscription().withId("ucejikzoeovvtz"),
                new NetworkSecurityPerimeterSubscription().withId("et"),
                new NetworkSecurityPerimeterSubscription().withId("ln")))
            .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeterInfo().withId("juzkdbqz")
                .withPerimeterGuid("xrzvhqjwtrhtgvgz")
                .withLocation("rrkolawjmjs")))
            .withFullyQualifiedDomainNames(Arrays.asList("okcdxfzzzwyjaf", "tlhguynuchl", "mltx", "whmozusgzvlnsnnj"))
            .withEmailAddresses(Arrays.asList("afolpymwamxqzrag", "gdphtvdula"))
            .withPhoneNumbers(Arrays.asList("ejchcsrlz", "nmzlanru"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterProfileAccessRule.class);
        Assertions.assertEquals("jvlgfggcvkyyliz", model.fullyQualifiedArmId());
        Assertions.assertEquals("bjpsfxsfuztlvtm", model.name());
        Assertions.assertEquals("gbwidqlvh", model.type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND, model.direction());
        Assertions.assertEquals("fizr", model.addressPrefixes().get(0));
        Assertions.assertEquals("ucejikzoeovvtz", model.subscriptions().get(0).id());
        Assertions.assertEquals("juzkdbqz", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("xrzvhqjwtrhtgvgz", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("rrkolawjmjs", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("okcdxfzzzwyjaf", model.fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("afolpymwamxqzrag", model.emailAddresses().get(0));
        Assertions.assertEquals("ejchcsrlz", model.phoneNumbers().get(0));
    }
}
