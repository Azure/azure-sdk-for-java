// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterInfo;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRule;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRuleDirection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterProfileAccessRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterProfileAccessRule model = BinaryData.fromString(
            "{\"fullyQualifiedArmId\":\"ahxku\",\"name\":\"sjcaacfdmmcpugm\",\"type\":\"qepvufhbzeh\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"nlbqnbldxeaclg\"],\"subscriptions\":[\"orim\",\"rsrrmoucsofldp\"],\"networkSecurityPerimeters\":[{\"id\":\"fcaabe\",\"perimeterGuid\":\"hbhlvbm\",\"location\":\"qi\"}],\"fullyQualifiedDomainNames\":[\"tkcudfbsfarfsiow\",\"kjxnqpvwgfstmhq\",\"kizmdksaoafclu\"],\"emailAddresses\":[\"xmycjimryvwgcw\",\"pbmz\",\"w\"],\"phoneNumbers\":[\"dsxwefoh\"]}}")
            .toObject(NetworkSecurityPerimeterProfileAccessRule.class);
        Assertions.assertEquals("ahxku", model.fullyQualifiedArmId());
        Assertions.assertEquals("sjcaacfdmmcpugm", model.name());
        Assertions.assertEquals("qepvufhbzeh", model.type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND, model.direction());
        Assertions.assertEquals("nlbqnbldxeaclg", model.addressPrefixes().get(0));
        Assertions.assertEquals("orim", model.subscriptions().get(0));
        Assertions.assertEquals("fcaabe", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("hbhlvbm", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("qi", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("tkcudfbsfarfsiow", model.fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("xmycjimryvwgcw", model.emailAddresses().get(0));
        Assertions.assertEquals("dsxwefoh", model.phoneNumbers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterProfileAccessRule model = new NetworkSecurityPerimeterProfileAccessRule()
            .withFullyQualifiedArmId("ahxku").withName("sjcaacfdmmcpugm").withType("qepvufhbzeh")
            .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND)
            .withAddressPrefixes(Arrays.asList("nlbqnbldxeaclg"))
            .withSubscriptions(Arrays.asList("orim", "rsrrmoucsofldp"))
            .withNetworkSecurityPerimeters(Arrays.asList(
                new NetworkSecurityPerimeterInfo().withId("fcaabe").withPerimeterGuid("hbhlvbm").withLocation("qi")))
            .withFullyQualifiedDomainNames(Arrays.asList("tkcudfbsfarfsiow", "kjxnqpvwgfstmhq", "kizmdksaoafclu"))
            .withEmailAddresses(Arrays.asList("xmycjimryvwgcw", "pbmz", "w"))
            .withPhoneNumbers(Arrays.asList("dsxwefoh"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterProfileAccessRule.class);
        Assertions.assertEquals("ahxku", model.fullyQualifiedArmId());
        Assertions.assertEquals("sjcaacfdmmcpugm", model.name());
        Assertions.assertEquals("qepvufhbzeh", model.type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND, model.direction());
        Assertions.assertEquals("nlbqnbldxeaclg", model.addressPrefixes().get(0));
        Assertions.assertEquals("orim", model.subscriptions().get(0));
        Assertions.assertEquals("fcaabe", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("hbhlvbm", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("qi", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("tkcudfbsfarfsiow", model.fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("xmycjimryvwgcw", model.emailAddresses().get(0));
        Assertions.assertEquals("dsxwefoh", model.phoneNumbers().get(0));
    }
}
