// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterInfo;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRule;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRuleDirection;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterSubscription;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterProfileAccessRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterProfileAccessRule model = BinaryData.fromString(
            "{\"fullyQualifiedArmId\":\"ucsofldpuviyf\",\"name\":\"abeolhbhlvbm\",\"type\":\"qi\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"udfbsfarf\",\"iowl\",\"jxnqp\",\"wgfstmhqykizm\"],\"subscriptions\":[{\"id\":\"oafcluqvox\"},{\"id\":\"cjimryvwgcwwpbmz\"},{\"id\":\"esyds\"}],\"networkSecurityPerimeters\":[{\"id\":\"ohec\",\"perimeterGuid\":\"opwndyqleallk\",\"location\":\"tkhlowkxxpvbr\"}],\"fullyQualifiedDomainNames\":[\"mzsyzfhotl\",\"ikcyyc\"],\"emailAddresses\":[\"sjlpjrtwszhv\",\"uic\",\"hvtrrmhwrbfdpyf\"],\"phoneNumbers\":[\"hvj\",\"lrocuyzlwh\"]}}")
            .toObject(NetworkSecurityPerimeterProfileAccessRule.class);
        Assertions.assertEquals("ucsofldpuviyf", model.fullyQualifiedArmId());
        Assertions.assertEquals("abeolhbhlvbm", model.name());
        Assertions.assertEquals("qi", model.type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND, model.direction());
        Assertions.assertEquals("udfbsfarf", model.addressPrefixes().get(0));
        Assertions.assertEquals("oafcluqvox", model.subscriptions().get(0).id());
        Assertions.assertEquals("ohec", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("opwndyqleallk", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("tkhlowkxxpvbr", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("mzsyzfhotl", model.fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("sjlpjrtwszhv", model.emailAddresses().get(0));
        Assertions.assertEquals("hvj", model.phoneNumbers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterProfileAccessRule model
            = new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("ucsofldpuviyf")
                .withName("abeolhbhlvbm")
                .withType("qi")
                .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND)
                .withAddressPrefixes(Arrays.asList("udfbsfarf", "iowl", "jxnqp", "wgfstmhqykizm"))
                .withSubscriptions(Arrays.asList(new NetworkSecurityPerimeterSubscription().withId("oafcluqvox"),
                    new NetworkSecurityPerimeterSubscription().withId("cjimryvwgcwwpbmz"),
                    new NetworkSecurityPerimeterSubscription().withId("esyds")))
                .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeterInfo().withId("ohec")
                    .withPerimeterGuid("opwndyqleallk")
                    .withLocation("tkhlowkxxpvbr")))
                .withFullyQualifiedDomainNames(Arrays.asList("mzsyzfhotl", "ikcyyc"))
                .withEmailAddresses(Arrays.asList("sjlpjrtwszhv", "uic", "hvtrrmhwrbfdpyf"))
                .withPhoneNumbers(Arrays.asList("hvj", "lrocuyzlwh"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterProfileAccessRule.class);
        Assertions.assertEquals("ucsofldpuviyf", model.fullyQualifiedArmId());
        Assertions.assertEquals("abeolhbhlvbm", model.name());
        Assertions.assertEquals("qi", model.type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND, model.direction());
        Assertions.assertEquals("udfbsfarf", model.addressPrefixes().get(0));
        Assertions.assertEquals("oafcluqvox", model.subscriptions().get(0).id());
        Assertions.assertEquals("ohec", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("opwndyqleallk", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("tkhlowkxxpvbr", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("mzsyzfhotl", model.fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("sjlpjrtwszhv", model.emailAddresses().get(0));
        Assertions.assertEquals("hvj", model.phoneNumbers().get(0));
    }
}
