// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterInfo;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRule;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRuleDirection;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterSubscription;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterProfileAccessRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterProfileAccessRule model = BinaryData.fromString(
            "{\"fullyQualifiedArmId\":\"busqogsfi\",\"name\":\"yi\",\"type\":\"sharujtj\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"j\",\"ttvwkpqh\"],\"subscriptions\":[{\"id\":\"uygb\"},{\"id\":\"qqekewvnqvcdlgu\"}],\"networkSecurityPerimeters\":[{\"id\":\"f\",\"perimeterGuid\":\"wnlaxpu\",\"location\":\"qikczvvita\"},{\"id\":\"xmfcsserxhtv\",\"perimeterGuid\":\"xhlw\",\"location\":\"sjgqrsxyp\"},{\"id\":\"uuybnchrsz\",\"perimeterGuid\":\"oyuelyetn\",\"location\":\"bf\"}],\"fullyQualifiedDomainNames\":[\"gagflnlgmtrwah\",\"jmucftby\"],\"emailAddresses\":[\"rohkpigqfusu\",\"kzmkwklsnoxaxmqe\"],\"phoneNumbers\":[\"h\",\"jnhgwydyyn\"]}}")
            .toObject(NetworkSecurityPerimeterProfileAccessRule.class);
        Assertions.assertEquals("busqogsfi", model.fullyQualifiedArmId());
        Assertions.assertEquals("yi", model.name());
        Assertions.assertEquals("sharujtj", model.type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND, model.direction());
        Assertions.assertEquals("j", model.addressPrefixes().get(0));
        Assertions.assertEquals("uygb", model.subscriptions().get(0).id());
        Assertions.assertEquals("f", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("wnlaxpu", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("qikczvvita", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("gagflnlgmtrwah", model.fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("rohkpigqfusu", model.emailAddresses().get(0));
        Assertions.assertEquals("h", model.phoneNumbers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterProfileAccessRule model = new NetworkSecurityPerimeterProfileAccessRule()
            .withFullyQualifiedArmId("busqogsfi")
            .withName("yi")
            .withType("sharujtj")
            .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND)
            .withAddressPrefixes(Arrays.asList("j", "ttvwkpqh"))
            .withSubscriptions(Arrays.asList(new NetworkSecurityPerimeterSubscription().withId("uygb"),
                new NetworkSecurityPerimeterSubscription().withId("qqekewvnqvcdlgu")))
            .withNetworkSecurityPerimeters(Arrays.asList(
                new NetworkSecurityPerimeterInfo().withId("f").withPerimeterGuid("wnlaxpu").withLocation("qikczvvita"),
                new NetworkSecurityPerimeterInfo().withId("xmfcsserxhtv")
                    .withPerimeterGuid("xhlw")
                    .withLocation("sjgqrsxyp"),
                new NetworkSecurityPerimeterInfo().withId("uuybnchrsz")
                    .withPerimeterGuid("oyuelyetn")
                    .withLocation("bf")))
            .withFullyQualifiedDomainNames(Arrays.asList("gagflnlgmtrwah", "jmucftby"))
            .withEmailAddresses(Arrays.asList("rohkpigqfusu", "kzmkwklsnoxaxmqe"))
            .withPhoneNumbers(Arrays.asList("h", "jnhgwydyyn"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterProfileAccessRule.class);
        Assertions.assertEquals("busqogsfi", model.fullyQualifiedArmId());
        Assertions.assertEquals("yi", model.name());
        Assertions.assertEquals("sharujtj", model.type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND, model.direction());
        Assertions.assertEquals("j", model.addressPrefixes().get(0));
        Assertions.assertEquals("uygb", model.subscriptions().get(0).id());
        Assertions.assertEquals("f", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("wnlaxpu", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("qikczvvita", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("gagflnlgmtrwah", model.fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("rohkpigqfusu", model.emailAddresses().get(0));
        Assertions.assertEquals("h", model.phoneNumbers().get(0));
    }
}
