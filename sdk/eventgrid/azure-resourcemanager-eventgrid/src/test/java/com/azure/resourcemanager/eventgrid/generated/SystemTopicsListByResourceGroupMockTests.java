// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.eventgrid.EventGridManager;
import com.azure.resourcemanager.eventgrid.models.IdentityType;
import com.azure.resourcemanager.eventgrid.models.SystemTopic;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SystemTopicsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Creating\",\"source\":\"bctvbpzuj\",\"topicType\":\"totdxposcslh\",\"metricResourceId\":\"usiecktybhjuxid\"},\"identity\":{\"type\":\"UserAssigned\",\"principalId\":\"lddxjxdugxwjwilm\",\"tenantId\":\"sl\",\"userAssignedIdentities\":{\"qwlxrhg\":{\"principalId\":\"p\",\"clientId\":\"ujjzgxq\"},\"mkorvvmv\":{\"principalId\":\"hvtqqykbkk\",\"clientId\":\"ozejo\"},\"yalhtgm\":{\"principalId\":\"ofnqhlbs\",\"clientId\":\"snqliwkmzojfe\"},\"crcmmaixp\":{\"principalId\":\"azg\",\"clientId\":\"bhrpgiqsttc\"}}},\"location\":\"jiwifhbksldttoh\",\"tags\":{\"tpmglxkoikmtr\":\"naihtgsiqikvllr\"},\"id\":\"wrqkza\",\"name\":\"bun\",\"type\":\"paklw\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        EventGridManager manager = EventGridManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<SystemTopic> response = manager.systemTopics()
            .listByResourceGroup("ekwuyckyvn", "nsm", 758363440, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("jiwifhbksldttoh", response.iterator().next().location());
        Assertions.assertEquals("naihtgsiqikvllr", response.iterator().next().tags().get("tpmglxkoikmtr"));
        Assertions.assertEquals(IdentityType.USER_ASSIGNED, response.iterator().next().identity().type());
        Assertions.assertEquals("lddxjxdugxwjwilm", response.iterator().next().identity().principalId());
        Assertions.assertEquals("sl", response.iterator().next().identity().tenantId());
        Assertions.assertEquals("p",
            response.iterator().next().identity().userAssignedIdentities().get("qwlxrhg").principalId());
        Assertions.assertEquals("ujjzgxq",
            response.iterator().next().identity().userAssignedIdentities().get("qwlxrhg").clientId());
        Assertions.assertEquals("bctvbpzuj", response.iterator().next().source());
        Assertions.assertEquals("totdxposcslh", response.iterator().next().topicType());
    }
}
