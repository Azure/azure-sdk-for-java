// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.NetworkSecurityPerimeterConfigurationInner;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterAssociationAccessMode;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigProvisioningState;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssues;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationList;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationProfile;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterInfo;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRule;
import com.azure.resourcemanager.eventgrid.models.ResourceAssociation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Updating\",\"provisioningIssues\":[{\"name\":\"crqctmxxdtddmflh\",\"properties\":{}},{\"name\":\"xzvtzna\",\"properties\":{}},{\"name\":\"annovvoxczytpr\",\"properties\":{}}],\"networkSecurityPerimeter\":{\"id\":\"roevyt\",\"perimeterGuid\":\"okrrrouuxv\",\"location\":\"asbcrymodizrx\"},\"resourceAssociation\":{\"name\":\"bdxnaz\",\"accessMode\":\"Learning\"},\"profile\":{\"name\":\"mv\",\"accessRulesVersion\":\"f\",\"accessRules\":[{}],\"diagnosticSettingsVersion\":\"jhbzxliohrdddtf\",\"enabledLogCategories\":[\"ba\",\"pcbbnzqcykna\",\"qofyuicdhzbdy\",\"wwgbdv\"]}},\"id\":\"bid\",\"name\":\"hmwffplfmuv\",\"type\":\"pckc\"},{\"properties\":{\"provisioningState\":\"Updating\",\"provisioningIssues\":[{\"name\":\"oxoyyukp\",\"properties\":{}},{\"name\":\"mmoiroqboshbra\",\"properties\":{}},{\"name\":\"yyrmfsvbp\",\"properties\":{}},{\"name\":\"opfppdbwnupgah\",\"properties\":{}}],\"networkSecurityPerimeter\":{\"id\":\"asjcaacfdmmcpu\",\"perimeterGuid\":\"ehqepvufhbzehe\",\"location\":\"oqhnlb\"},\"resourceAssociation\":{\"name\":\"ldxea\",\"accessMode\":\"Enforced\"},\"profile\":{\"name\":\"horimkr\",\"accessRulesVersion\":\"rmoucsofl\",\"accessRules\":[{},{},{}],\"diagnosticSettingsVersion\":\"iyfc\",\"enabledLogCategories\":[\"eolhbhlvbmx\",\"qi\"]}},\"id\":\"s\",\"name\":\"tkcudfbsfarfsiow\",\"type\":\"kjxnqpvwgfstmhq\"},{\"properties\":{\"provisioningState\":\"Updating\",\"provisioningIssues\":[{\"name\":\"saoafcluqvox\",\"properties\":{}}],\"networkSecurityPerimeter\":{\"id\":\"im\",\"perimeterGuid\":\"vwg\",\"location\":\"wpbmzgwesydsxwef\"},\"resourceAssociation\":{\"name\":\"cbvopwndyqleallk\",\"accessMode\":\"Enforced\"},\"profile\":{\"name\":\"lowkxxpvb\",\"accessRulesVersion\":\"fjmzsyzfho\",\"accessRules\":[{}],\"diagnosticSettingsVersion\":\"k\",\"enabledLogCategories\":[\"ch\",\"nsjlpjrtws\",\"hv\",\"uic\"]}},\"id\":\"hvtrrmhwrbfdpyf\",\"name\":\"ubhvj\",\"type\":\"lrocuyzlwh\"},{\"properties\":{\"provisioningState\":\"Deleting\",\"provisioningIssues\":[{\"name\":\"clutnpqme\",\"properties\":{}},{\"name\":\"jk\",\"properties\":{}}],\"networkSecurityPerimeter\":{\"id\":\"yujxsglhsrrry\",\"perimeterGuid\":\"ylmbkzudni\",\"location\":\"fihotj\"},\"resourceAssociation\":{\"name\":\"pxuzzjg\",\"accessMode\":\"Learning\"},\"profile\":{\"name\":\"yhqotoihiqakydi\",\"accessRulesVersion\":\"brkwpzdqt\",\"accessRules\":[{},{},{}],\"diagnosticSettingsVersion\":\"podaq\",\"enabledLogCategories\":[\"ipietgbe\"]}},\"id\":\"jfulbmoic\",\"name\":\"dlpnfpubn\",\"type\":\"nbatzvi\"}],\"nextLink\":\"owsaaelcattcjuh\"}")
            .toObject(NetworkSecurityPerimeterConfigurationList.class);
        Assertions.assertEquals(NetworkSecurityPerimeterConfigProvisioningState.UPDATING,
            model.value().get(0).provisioningState());
        Assertions.assertEquals("crqctmxxdtddmflh", model.value().get(0).provisioningIssues().get(0).name());
        Assertions.assertEquals("roevyt", model.value().get(0).networkSecurityPerimeter().id());
        Assertions.assertEquals("okrrrouuxv", model.value().get(0).networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("asbcrymodizrx", model.value().get(0).networkSecurityPerimeter().location());
        Assertions.assertEquals("bdxnaz", model.value().get(0).resourceAssociation().name());
        Assertions.assertEquals(NetworkSecurityPerimeterAssociationAccessMode.LEARNING,
            model.value().get(0).resourceAssociation().accessMode());
        Assertions.assertEquals("mv", model.value().get(0).profile().name());
        Assertions.assertEquals("f", model.value().get(0).profile().accessRulesVersion());
        Assertions.assertEquals("jhbzxliohrdddtf", model.value().get(0).profile().diagnosticSettingsVersion());
        Assertions.assertEquals("ba", model.value().get(0).profile().enabledLogCategories().get(0));
        Assertions.assertEquals("owsaaelcattcjuh", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationList model
            = new NetworkSecurityPerimeterConfigurationList()
                .withValue(Arrays.asList(
                    new NetworkSecurityPerimeterConfigurationInner()
                        .withProvisioningState(NetworkSecurityPerimeterConfigProvisioningState.UPDATING)
                        .withProvisioningIssues(Arrays.asList(
                            new NetworkSecurityPerimeterConfigurationIssues().withName("crqctmxxdtddmflh"),
                            new NetworkSecurityPerimeterConfigurationIssues().withName("xzvtzna"),
                            new NetworkSecurityPerimeterConfigurationIssues().withName("annovvoxczytpr")))
                        .withNetworkSecurityPerimeter(new NetworkSecurityPerimeterInfo().withId("roevyt")
                            .withPerimeterGuid("okrrrouuxv")
                            .withLocation("asbcrymodizrx"))
                        .withResourceAssociation(new ResourceAssociation().withName("bdxnaz")
                            .withAccessMode(NetworkSecurityPerimeterAssociationAccessMode.LEARNING))
                        .withProfile(new NetworkSecurityPerimeterConfigurationProfile().withName("mv")
                            .withAccessRulesVersion("f")
                            .withAccessRules(Arrays.asList(new NetworkSecurityPerimeterProfileAccessRule()))
                            .withDiagnosticSettingsVersion("jhbzxliohrdddtf")
                            .withEnabledLogCategories(Arrays.asList("ba", "pcbbnzqcykna", "qofyuicdhzbdy", "wwgbdv"))),
                    new NetworkSecurityPerimeterConfigurationInner()
                        .withProvisioningState(NetworkSecurityPerimeterConfigProvisioningState.UPDATING)
                        .withProvisioningIssues(
                            Arrays.asList(new NetworkSecurityPerimeterConfigurationIssues().withName("oxoyyukp"),
                                new NetworkSecurityPerimeterConfigurationIssues().withName("mmoiroqboshbra"),
                                new NetworkSecurityPerimeterConfigurationIssues().withName("yyrmfsvbp"),
                                new NetworkSecurityPerimeterConfigurationIssues().withName("opfppdbwnupgah")))
                        .withNetworkSecurityPerimeter(new NetworkSecurityPerimeterInfo().withId("asjcaacfdmmcpu")
                            .withPerimeterGuid("ehqepvufhbzehe")
                            .withLocation("oqhnlb"))
                        .withResourceAssociation(new ResourceAssociation().withName("ldxea")
                            .withAccessMode(NetworkSecurityPerimeterAssociationAccessMode.ENFORCED))
                        .withProfile(new NetworkSecurityPerimeterConfigurationProfile().withName("horimkr")
                            .withAccessRulesVersion("rmoucsofl")
                            .withAccessRules(Arrays.asList(new NetworkSecurityPerimeterProfileAccessRule(),
                                new NetworkSecurityPerimeterProfileAccessRule(),
                                new NetworkSecurityPerimeterProfileAccessRule()))
                            .withDiagnosticSettingsVersion("iyfc")
                            .withEnabledLogCategories(Arrays.asList("eolhbhlvbmx", "qi"))),
                    new NetworkSecurityPerimeterConfigurationInner()
                        .withProvisioningState(NetworkSecurityPerimeterConfigProvisioningState.UPDATING)
                        .withProvisioningIssues(
                            Arrays.asList(new NetworkSecurityPerimeterConfigurationIssues().withName("saoafcluqvox")))
                        .withNetworkSecurityPerimeter(new NetworkSecurityPerimeterInfo().withId("im")
                            .withPerimeterGuid("vwg")
                            .withLocation("wpbmzgwesydsxwef"))
                        .withResourceAssociation(new ResourceAssociation().withName("cbvopwndyqleallk")
                            .withAccessMode(NetworkSecurityPerimeterAssociationAccessMode.ENFORCED))
                        .withProfile(new NetworkSecurityPerimeterConfigurationProfile().withName("lowkxxpvb")
                            .withAccessRulesVersion("fjmzsyzfho")
                            .withAccessRules(Arrays.asList(new NetworkSecurityPerimeterProfileAccessRule()))
                            .withDiagnosticSettingsVersion("k")
                            .withEnabledLogCategories(Arrays.asList("ch", "nsjlpjrtws", "hv", "uic"))),
                    new NetworkSecurityPerimeterConfigurationInner()
                        .withProvisioningState(NetworkSecurityPerimeterConfigProvisioningState.DELETING)
                        .withProvisioningIssues(
                            Arrays.asList(new NetworkSecurityPerimeterConfigurationIssues().withName("clutnpqme"),
                                new NetworkSecurityPerimeterConfigurationIssues().withName("jk")))
                        .withNetworkSecurityPerimeter(new NetworkSecurityPerimeterInfo().withId("yujxsglhsrrry")
                            .withPerimeterGuid("ylmbkzudni")
                            .withLocation("fihotj"))
                        .withResourceAssociation(new ResourceAssociation().withName("pxuzzjg")
                            .withAccessMode(NetworkSecurityPerimeterAssociationAccessMode.LEARNING))
                        .withProfile(new NetworkSecurityPerimeterConfigurationProfile().withName("yhqotoihiqakydi")
                            .withAccessRulesVersion("brkwpzdqt")
                            .withAccessRules(Arrays.asList(new NetworkSecurityPerimeterProfileAccessRule(),
                                new NetworkSecurityPerimeterProfileAccessRule(),
                                new NetworkSecurityPerimeterProfileAccessRule()))
                            .withDiagnosticSettingsVersion("podaq")
                            .withEnabledLogCategories(Arrays.asList("ipietgbe")))))
                .withNextLink("owsaaelcattcjuh");
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationList.class);
        Assertions.assertEquals(NetworkSecurityPerimeterConfigProvisioningState.UPDATING,
            model.value().get(0).provisioningState());
        Assertions.assertEquals("crqctmxxdtddmflh", model.value().get(0).provisioningIssues().get(0).name());
        Assertions.assertEquals("roevyt", model.value().get(0).networkSecurityPerimeter().id());
        Assertions.assertEquals("okrrrouuxv", model.value().get(0).networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("asbcrymodizrx", model.value().get(0).networkSecurityPerimeter().location());
        Assertions.assertEquals("bdxnaz", model.value().get(0).resourceAssociation().name());
        Assertions.assertEquals(NetworkSecurityPerimeterAssociationAccessMode.LEARNING,
            model.value().get(0).resourceAssociation().accessMode());
        Assertions.assertEquals("mv", model.value().get(0).profile().name());
        Assertions.assertEquals("f", model.value().get(0).profile().accessRulesVersion());
        Assertions.assertEquals("jhbzxliohrdddtf", model.value().get(0).profile().diagnosticSettingsVersion());
        Assertions.assertEquals("ba", model.value().get(0).profile().enabledLogCategories().get(0));
        Assertions.assertEquals("owsaaelcattcjuh", model.nextLink());
    }
}
