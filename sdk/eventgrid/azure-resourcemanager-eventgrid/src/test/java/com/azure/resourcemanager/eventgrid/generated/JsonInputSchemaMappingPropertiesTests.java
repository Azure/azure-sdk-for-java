// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.JsonInputSchemaMappingProperties;
import com.azure.resourcemanager.eventgrid.models.JsonField;
import com.azure.resourcemanager.eventgrid.models.JsonFieldWithDefault;
import org.junit.jupiter.api.Assertions;

public final class JsonInputSchemaMappingPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JsonInputSchemaMappingProperties model = BinaryData.fromString(
            "{\"id\":{\"sourceField\":\"fqlwxldykalsy\"},\"topic\":{\"sourceField\":\"lnjpnnbmjksibjgs\"},\"eventTime\":{\"sourceField\":\"xahmrnadzyqegxy\"},\"eventType\":{\"sourceField\":\"inbmh\",\"defaultValue\":\"jijkgqxnhmbke\"},\"subject\":{\"sourceField\":\"aujvaa\",\"defaultValue\":\"ggiycwkdtaawxwf\"},\"dataVersion\":{\"sourceField\":\"umrrqmbzm\",\"defaultValue\":\"ratbnxwbjs\"}}")
            .toObject(JsonInputSchemaMappingProperties.class);
        Assertions.assertEquals("fqlwxldykalsy", model.id().sourceField());
        Assertions.assertEquals("lnjpnnbmjksibjgs", model.topic().sourceField());
        Assertions.assertEquals("xahmrnadzyqegxy", model.eventTime().sourceField());
        Assertions.assertEquals("inbmh", model.eventType().sourceField());
        Assertions.assertEquals("jijkgqxnhmbke", model.eventType().defaultValue());
        Assertions.assertEquals("aujvaa", model.subject().sourceField());
        Assertions.assertEquals("ggiycwkdtaawxwf", model.subject().defaultValue());
        Assertions.assertEquals("umrrqmbzm", model.dataVersion().sourceField());
        Assertions.assertEquals("ratbnxwbjs", model.dataVersion().defaultValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JsonInputSchemaMappingProperties model = new JsonInputSchemaMappingProperties()
            .withId(new JsonField().withSourceField("fqlwxldykalsy"))
            .withTopic(new JsonField().withSourceField("lnjpnnbmjksibjgs"))
            .withEventTime(new JsonField().withSourceField("xahmrnadzyqegxy"))
            .withEventType(new JsonFieldWithDefault().withSourceField("inbmh").withDefaultValue("jijkgqxnhmbke"))
            .withSubject(new JsonFieldWithDefault().withSourceField("aujvaa").withDefaultValue("ggiycwkdtaawxwf"))
            .withDataVersion(new JsonFieldWithDefault().withSourceField("umrrqmbzm").withDefaultValue("ratbnxwbjs"));
        model = BinaryData.fromObject(model).toObject(JsonInputSchemaMappingProperties.class);
        Assertions.assertEquals("fqlwxldykalsy", model.id().sourceField());
        Assertions.assertEquals("lnjpnnbmjksibjgs", model.topic().sourceField());
        Assertions.assertEquals("xahmrnadzyqegxy", model.eventTime().sourceField());
        Assertions.assertEquals("inbmh", model.eventType().sourceField());
        Assertions.assertEquals("jijkgqxnhmbke", model.eventType().defaultValue());
        Assertions.assertEquals("aujvaa", model.subject().sourceField());
        Assertions.assertEquals("ggiycwkdtaawxwf", model.subject().defaultValue());
        Assertions.assertEquals("umrrqmbzm", model.dataVersion().sourceField());
        Assertions.assertEquals("ratbnxwbjs", model.dataVersion().defaultValue());
    }
}
