// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.JsonInputSchemaMappingProperties;
import com.azure.resourcemanager.eventgrid.models.JsonField;
import com.azure.resourcemanager.eventgrid.models.JsonFieldWithDefault;
import org.junit.jupiter.api.Assertions;

public final class JsonInputSchemaMappingPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JsonInputSchemaMappingProperties model = BinaryData.fromString(
            "{\"id\":{\"sourceField\":\"atlijjjr\"},\"topic\":{\"sourceField\":\"mcaszknxkv\"},\"eventTime\":{\"sourceField\":\"etyvkunmignohi\"},\"eventType\":{\"sourceField\":\"qo\",\"defaultValue\":\"wpin\"},\"subject\":{\"sourceField\":\"vabbx\",\"defaultValue\":\"medeil\"},\"dataVersion\":{\"sourceField\":\"wfcfxzirzz\",\"defaultValue\":\"vwypusuvjsl\"}}")
            .toObject(JsonInputSchemaMappingProperties.class);
        Assertions.assertEquals("atlijjjr", model.id().sourceField());
        Assertions.assertEquals("mcaszknxkv", model.topic().sourceField());
        Assertions.assertEquals("etyvkunmignohi", model.eventTime().sourceField());
        Assertions.assertEquals("qo", model.eventType().sourceField());
        Assertions.assertEquals("wpin", model.eventType().defaultValue());
        Assertions.assertEquals("vabbx", model.subject().sourceField());
        Assertions.assertEquals("medeil", model.subject().defaultValue());
        Assertions.assertEquals("wfcfxzirzz", model.dataVersion().sourceField());
        Assertions.assertEquals("vwypusuvjsl", model.dataVersion().defaultValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JsonInputSchemaMappingProperties model = new JsonInputSchemaMappingProperties()
            .withId(new JsonField().withSourceField("atlijjjr"))
            .withTopic(new JsonField().withSourceField("mcaszknxkv"))
            .withEventTime(new JsonField().withSourceField("etyvkunmignohi"))
            .withEventType(new JsonFieldWithDefault().withSourceField("qo").withDefaultValue("wpin"))
            .withSubject(new JsonFieldWithDefault().withSourceField("vabbx").withDefaultValue("medeil"))
            .withDataVersion(new JsonFieldWithDefault().withSourceField("wfcfxzirzz").withDefaultValue("vwypusuvjsl"));
        model = BinaryData.fromObject(model).toObject(JsonInputSchemaMappingProperties.class);
        Assertions.assertEquals("atlijjjr", model.id().sourceField());
        Assertions.assertEquals("mcaszknxkv", model.topic().sourceField());
        Assertions.assertEquals("etyvkunmignohi", model.eventTime().sourceField());
        Assertions.assertEquals("qo", model.eventType().sourceField());
        Assertions.assertEquals("wpin", model.eventType().defaultValue());
        Assertions.assertEquals("vabbx", model.subject().sourceField());
        Assertions.assertEquals("medeil", model.subject().defaultValue());
        Assertions.assertEquals("wfcfxzirzz", model.dataVersion().sourceField());
        Assertions.assertEquals("vwypusuvjsl", model.dataVersion().defaultValue());
    }
}
