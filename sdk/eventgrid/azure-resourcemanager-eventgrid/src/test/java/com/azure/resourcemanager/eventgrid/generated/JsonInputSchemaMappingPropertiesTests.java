// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.JsonInputSchemaMappingProperties;
import com.azure.resourcemanager.eventgrid.models.JsonField;
import com.azure.resourcemanager.eventgrid.models.JsonFieldWithDefault;
import org.junit.jupiter.api.Assertions;

public final class JsonInputSchemaMappingPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JsonInputSchemaMappingProperties model = BinaryData.fromString(
            "{\"id\":{\"sourceField\":\"qkfrbzgowoxqmj\"},\"topic\":{\"sourceField\":\"cxn\"},\"eventTime\":{\"sourceField\":\"xhlusrvxis\"},\"eventType\":{\"sourceField\":\"ceagbjqvlsumywz\",\"defaultValue\":\"hxgonoyjf\"},\"subject\":{\"sourceField\":\"ubyzn\",\"defaultValue\":\"k\"},\"dataVersion\":{\"sourceField\":\"ebgvo\",\"defaultValue\":\"m\"}}")
            .toObject(JsonInputSchemaMappingProperties.class);
        Assertions.assertEquals("qkfrbzgowoxqmj", model.id().sourceField());
        Assertions.assertEquals("cxn", model.topic().sourceField());
        Assertions.assertEquals("xhlusrvxis", model.eventTime().sourceField());
        Assertions.assertEquals("ceagbjqvlsumywz", model.eventType().sourceField());
        Assertions.assertEquals("hxgonoyjf", model.eventType().defaultValue());
        Assertions.assertEquals("ubyzn", model.subject().sourceField());
        Assertions.assertEquals("k", model.subject().defaultValue());
        Assertions.assertEquals("ebgvo", model.dataVersion().sourceField());
        Assertions.assertEquals("m", model.dataVersion().defaultValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JsonInputSchemaMappingProperties model = new JsonInputSchemaMappingProperties()
            .withId(new JsonField().withSourceField("qkfrbzgowoxqmj"))
            .withTopic(new JsonField().withSourceField("cxn"))
            .withEventTime(new JsonField().withSourceField("xhlusrvxis"))
            .withEventType(new JsonFieldWithDefault().withSourceField("ceagbjqvlsumywz").withDefaultValue("hxgonoyjf"))
            .withSubject(new JsonFieldWithDefault().withSourceField("ubyzn").withDefaultValue("k"))
            .withDataVersion(new JsonFieldWithDefault().withSourceField("ebgvo").withDefaultValue("m"));
        model = BinaryData.fromObject(model).toObject(JsonInputSchemaMappingProperties.class);
        Assertions.assertEquals("qkfrbzgowoxqmj", model.id().sourceField());
        Assertions.assertEquals("cxn", model.topic().sourceField());
        Assertions.assertEquals("xhlusrvxis", model.eventTime().sourceField());
        Assertions.assertEquals("ceagbjqvlsumywz", model.eventType().sourceField());
        Assertions.assertEquals("hxgonoyjf", model.eventType().defaultValue());
        Assertions.assertEquals("ubyzn", model.subject().sourceField());
        Assertions.assertEquals("k", model.subject().defaultValue());
        Assertions.assertEquals("ebgvo", model.dataVersion().sourceField());
        Assertions.assertEquals("m", model.dataVersion().defaultValue());
    }
}
