// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.JsonInputSchemaMappingProperties;
import com.azure.resourcemanager.eventgrid.models.JsonField;
import com.azure.resourcemanager.eventgrid.models.JsonFieldWithDefault;
import org.junit.jupiter.api.Assertions;

public final class JsonInputSchemaMappingPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JsonInputSchemaMappingProperties model = BinaryData.fromString(
            "{\"id\":{\"sourceField\":\"wenawwam\"},\"topic\":{\"sourceField\":\"eq\"},\"eventTime\":{\"sourceField\":\"lndh\"},\"eventType\":{\"sourceField\":\"eojhtollhsvi\",\"defaultValue\":\"ytz\"},\"subject\":{\"sourceField\":\"lxpnovyoanf\",\"defaultValue\":\"swqagywvtxigvjrk\"},\"dataVersion\":{\"sourceField\":\"aeukyawohpm\",\"defaultValue\":\"qnucs\"}}")
            .toObject(JsonInputSchemaMappingProperties.class);
        Assertions.assertEquals("wenawwam", model.id().sourceField());
        Assertions.assertEquals("eq", model.topic().sourceField());
        Assertions.assertEquals("lndh", model.eventTime().sourceField());
        Assertions.assertEquals("eojhtollhsvi", model.eventType().sourceField());
        Assertions.assertEquals("ytz", model.eventType().defaultValue());
        Assertions.assertEquals("lxpnovyoanf", model.subject().sourceField());
        Assertions.assertEquals("swqagywvtxigvjrk", model.subject().defaultValue());
        Assertions.assertEquals("aeukyawohpm", model.dataVersion().sourceField());
        Assertions.assertEquals("qnucs", model.dataVersion().defaultValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JsonInputSchemaMappingProperties model
            = new JsonInputSchemaMappingProperties().withId(new JsonField().withSourceField("wenawwam"))
                .withTopic(new JsonField().withSourceField("eq"))
                .withEventTime(new JsonField().withSourceField("lndh"))
                .withEventType(new JsonFieldWithDefault().withSourceField("eojhtollhsvi").withDefaultValue("ytz"))
                .withSubject(
                    new JsonFieldWithDefault().withSourceField("lxpnovyoanf").withDefaultValue("swqagywvtxigvjrk"))
                .withDataVersion(new JsonFieldWithDefault().withSourceField("aeukyawohpm").withDefaultValue("qnucs"));
        model = BinaryData.fromObject(model).toObject(JsonInputSchemaMappingProperties.class);
        Assertions.assertEquals("wenawwam", model.id().sourceField());
        Assertions.assertEquals("eq", model.topic().sourceField());
        Assertions.assertEquals("lndh", model.eventTime().sourceField());
        Assertions.assertEquals("eojhtollhsvi", model.eventType().sourceField());
        Assertions.assertEquals("ytz", model.eventType().defaultValue());
        Assertions.assertEquals("lxpnovyoanf", model.subject().sourceField());
        Assertions.assertEquals("swqagywvtxigvjrk", model.subject().defaultValue());
        Assertions.assertEquals("aeukyawohpm", model.dataVersion().sourceField());
        Assertions.assertEquals("qnucs", model.dataVersion().defaultValue());
    }
}
