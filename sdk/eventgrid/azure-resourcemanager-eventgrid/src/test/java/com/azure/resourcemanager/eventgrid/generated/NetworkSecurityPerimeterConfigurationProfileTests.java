// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationProfile;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterInfo;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRule;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRuleDirection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationProfile model = BinaryData.fromString(
            "{\"name\":\"djk\",\"accessRulesVersion\":\"ysidfvclgl\",\"accessRules\":[{\"fullyQualifiedArmId\":\"ijtk\",\"name\":\"sqo\",\"type\":\"fikayiansharujtj\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"j\",\"ttvwkpqh\"],\"subscriptions\":[\"nuygbqeqqekewvnq\",\"cdlguauc\"],\"networkSecurityPerimeters\":[{\"id\":\"wnlaxpu\",\"perimeterGuid\":\"qikczvvita\",\"location\":\"xmfcsserxhtv\"},{\"id\":\"xhlw\",\"perimeterGuid\":\"sjgqrsxyp\",\"location\":\"uuybnchrsz\"},{\"id\":\"oyuelyetn\",\"perimeterGuid\":\"bf\",\"location\":\"ggagfln\"},{\"id\":\"mtrwah\",\"perimeterGuid\":\"mu\",\"location\":\"tb\"}],\"fullyQualifiedDomainNames\":[\"lrohkpig\",\"fusuckzmkwklsno\",\"axmqeqal\"],\"emailAddresses\":[\"nhg\",\"ydyynfsvkh\",\"bvqt\"],\"phoneNumbers\":[\"rfdl\",\"ukhpyrneizjcp\",\"ogkhnmgbr\",\"uxddbhfh\"]}},{\"fullyQualifiedArmId\":\"paz\",\"name\":\"oywjxhpdulont\",\"type\":\"np\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"uevrhrljyoogwxhn\",\"duugwbsre\"],\"subscriptions\":[\"q\",\"fuarenlvhht\",\"lnvnafvvkyfedev\"],\"networkSecurityPerimeters\":[{\"id\":\"lcqxypokk\",\"perimeterGuid\":\"inqcymczngnbdxxe\",\"location\":\"ninvudbchaqdt\"}],\"fullyQualifiedDomainNames\":[\"crqctmxxdtddmflh\"],\"emailAddresses\":[\"xzvtzna\"],\"phoneNumbers\":[\"annovvoxczytpr\",\"nwvroevytlyokrr\",\"o\",\"uxvnsasbcrymodi\"]}},{\"fullyQualifiedArmId\":\"xkl\",\"name\":\"d\",\"type\":\"azpmkmlmv\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"pj\"],\"subscriptions\":[\"xliohrdddt\",\"gxqbawpcb\"],\"networkSecurityPerimeters\":[{\"id\":\"cyknapqofyuicd\",\"perimeterGuid\":\"bd\",\"location\":\"wwgbdv\"},{\"id\":\"idmhmwf\",\"perimeterGuid\":\"lfmu\",\"location\":\"pckc\"}],\"fullyQualifiedDomainNames\":[\"vwe\"],\"emailAddresses\":[\"oy\"],\"phoneNumbers\":[\"phaimmoi\"]}}],\"diagnosticSettingsVersion\":\"qboshbra\",\"enabledLogCategories\":[\"yyrmfsvbp\",\"vbopfppdbwnu\"]}")
            .toObject(NetworkSecurityPerimeterConfigurationProfile.class);
        Assertions.assertEquals("djk", model.name());
        Assertions.assertEquals("ysidfvclgl", model.accessRulesVersion());
        Assertions.assertEquals("ijtk", model.accessRules().get(0).fullyQualifiedArmId());
        Assertions.assertEquals("sqo", model.accessRules().get(0).name());
        Assertions.assertEquals("fikayiansharujtj", model.accessRules().get(0).type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND,
            model.accessRules().get(0).direction());
        Assertions.assertEquals("j", model.accessRules().get(0).addressPrefixes().get(0));
        Assertions.assertEquals("nuygbqeqqekewvnq", model.accessRules().get(0).subscriptions().get(0));
        Assertions.assertEquals("wnlaxpu", model.accessRules().get(0).networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("qikczvvita",
            model.accessRules().get(0).networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("xmfcsserxhtv",
            model.accessRules().get(0).networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("lrohkpig", model.accessRules().get(0).fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("nhg", model.accessRules().get(0).emailAddresses().get(0));
        Assertions.assertEquals("rfdl", model.accessRules().get(0).phoneNumbers().get(0));
        Assertions.assertEquals("qboshbra", model.diagnosticSettingsVersion());
        Assertions.assertEquals("yyrmfsvbp", model.enabledLogCategories().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationProfile model = new NetworkSecurityPerimeterConfigurationProfile()
            .withName("djk").withAccessRulesVersion("ysidfvclgl")
            .withAccessRules(Arrays.asList(
                new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("ijtk").withName("sqo")
                    .withType("fikayiansharujtj")
                    .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND)
                    .withAddressPrefixes(Arrays.asList("j", "ttvwkpqh"))
                    .withSubscriptions(Arrays.asList("nuygbqeqqekewvnq", "cdlguauc"))
                    .withNetworkSecurityPerimeters(Arrays.asList(
                        new NetworkSecurityPerimeterInfo().withId("wnlaxpu").withPerimeterGuid("qikczvvita")
                            .withLocation("xmfcsserxhtv"),
                        new NetworkSecurityPerimeterInfo().withId("xhlw").withPerimeterGuid("sjgqrsxyp")
                            .withLocation("uuybnchrsz"),
                        new NetworkSecurityPerimeterInfo().withId("oyuelyetn").withPerimeterGuid("bf")
                            .withLocation("ggagfln"),
                        new NetworkSecurityPerimeterInfo().withId("mtrwah").withPerimeterGuid("mu").withLocation("tb")))
                    .withFullyQualifiedDomainNames(Arrays.asList("lrohkpig", "fusuckzmkwklsno", "axmqeqal"))
                    .withEmailAddresses(Arrays.asList("nhg", "ydyynfsvkh", "bvqt"))
                    .withPhoneNumbers(Arrays.asList("rfdl", "ukhpyrneizjcp", "ogkhnmgbr", "uxddbhfh")),
                new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("paz").withName("oywjxhpdulont")
                    .withType("np").withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND)
                    .withAddressPrefixes(Arrays.asList("uevrhrljyoogwxhn", "duugwbsre"))
                    .withSubscriptions(Arrays.asList("q", "fuarenlvhht", "lnvnafvvkyfedev"))
                    .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeterInfo().withId("lcqxypokk")
                        .withPerimeterGuid("inqcymczngnbdxxe").withLocation("ninvudbchaqdt")))
                    .withFullyQualifiedDomainNames(Arrays.asList("crqctmxxdtddmflh"))
                    .withEmailAddresses(Arrays.asList("xzvtzna"))
                    .withPhoneNumbers(Arrays.asList("annovvoxczytpr", "nwvroevytlyokrr", "o", "uxvnsasbcrymodi")),
                new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("xkl").withName("d")
                    .withType("azpmkmlmv").withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND)
                    .withAddressPrefixes(Arrays.asList("pj"))
                    .withSubscriptions(Arrays.asList("xliohrdddt", "gxqbawpcb"))
                    .withNetworkSecurityPerimeters(Arrays.asList(
                        new NetworkSecurityPerimeterInfo().withId("cyknapqofyuicd").withPerimeterGuid("bd")
                            .withLocation("wwgbdv"),
                        new NetworkSecurityPerimeterInfo().withId("idmhmwf").withPerimeterGuid("lfmu")
                            .withLocation("pckc")))
                    .withFullyQualifiedDomainNames(Arrays.asList("vwe")).withEmailAddresses(Arrays.asList("oy"))
                    .withPhoneNumbers(Arrays.asList("phaimmoi"))))
            .withDiagnosticSettingsVersion("qboshbra")
            .withEnabledLogCategories(Arrays.asList("yyrmfsvbp", "vbopfppdbwnu"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationProfile.class);
        Assertions.assertEquals("djk", model.name());
        Assertions.assertEquals("ysidfvclgl", model.accessRulesVersion());
        Assertions.assertEquals("ijtk", model.accessRules().get(0).fullyQualifiedArmId());
        Assertions.assertEquals("sqo", model.accessRules().get(0).name());
        Assertions.assertEquals("fikayiansharujtj", model.accessRules().get(0).type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND,
            model.accessRules().get(0).direction());
        Assertions.assertEquals("j", model.accessRules().get(0).addressPrefixes().get(0));
        Assertions.assertEquals("nuygbqeqqekewvnq", model.accessRules().get(0).subscriptions().get(0));
        Assertions.assertEquals("wnlaxpu", model.accessRules().get(0).networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("qikczvvita",
            model.accessRules().get(0).networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("xmfcsserxhtv",
            model.accessRules().get(0).networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("lrohkpig", model.accessRules().get(0).fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("nhg", model.accessRules().get(0).emailAddresses().get(0));
        Assertions.assertEquals("rfdl", model.accessRules().get(0).phoneNumbers().get(0));
        Assertions.assertEquals("qboshbra", model.diagnosticSettingsVersion());
        Assertions.assertEquals("yyrmfsvbp", model.enabledLogCategories().get(0));
    }
}
