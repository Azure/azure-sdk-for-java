// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationProfile;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterInfo;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRule;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRuleDirection;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterSubscription;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationProfile model = BinaryData.fromString(
            "{\"name\":\"cyknapqofyuicd\",\"accessRulesVersion\":\"bd\",\"accessRules\":[{\"fullyQualifiedArmId\":\"gbdvibidmhmwff\",\"name\":\"fmuvapckccr\",\"type\":\"weyoxoy\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"immoiroqboshbrag\",\"pyyrmfs\",\"bpav\"],\"subscriptions\":[{\"id\":\"ppdbwnupgahxkum\"},{\"id\":\"jcaacfdmmcpugm\"}],\"networkSecurityPerimeters\":[{\"id\":\"pvufhbze\",\"perimeterGuid\":\"whoqhnlbqnbldxe\",\"location\":\"lgsc\"},{\"id\":\"ri\",\"perimeterGuid\":\"rsrrmoucsofldp\",\"location\":\"iyfc\"},{\"id\":\"beolh\",\"perimeterGuid\":\"lvbmxuqibsxtkcu\",\"location\":\"b\"}],\"fullyQualifiedDomainNames\":[\"rfsiowlkjxn\",\"pvwgfstmhqykizmd\"],\"emailAddresses\":[\"oafcluqvox\"],\"phoneNumbers\":[\"jimryvwgcwwpbmz\",\"w\",\"sydsxwefohe\",\"bvopwndyqle\"]}},{\"fullyQualifiedArmId\":\"lklmtkhlo\",\"name\":\"x\",\"type\":\"vbrdfjmzsyzfho\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"yych\",\"nsjlpjrtws\",\"hv\"],\"subscriptions\":[{\"id\":\"phvtrrmhwrb\"},{\"id\":\"pyf\"},{\"id\":\"bhvjglr\"}],\"networkSecurityPerimeters\":[{\"id\":\"zlwhhmemhooclu\",\"perimeterGuid\":\"pqmem\",\"location\":\"jk\"},{\"id\":\"ykyujxsg\",\"perimeterGuid\":\"srrryejylmbkzu\",\"location\":\"igrfihotjewl\"}],\"fullyQualifiedDomainNames\":[\"zzjgnr\",\"fqyhqoto\",\"hiqakydiwfbrk\"],\"emailAddresses\":[\"dqtvhcsp\"],\"phoneNumbers\":[\"qaxsipietgbebjf\"]}}],\"diagnosticSettingsVersion\":\"bmoichd\",\"enabledLogCategories\":[\"fpubntnbatz\",\"iqsowsaaelc\",\"ttcjuhplrvkmjc\"]}")
            .toObject(NetworkSecurityPerimeterConfigurationProfile.class);
        Assertions.assertEquals("cyknapqofyuicd", model.name());
        Assertions.assertEquals("bd", model.accessRulesVersion());
        Assertions.assertEquals("gbdvibidmhmwff", model.accessRules().get(0).fullyQualifiedArmId());
        Assertions.assertEquals("fmuvapckccr", model.accessRules().get(0).name());
        Assertions.assertEquals("weyoxoy", model.accessRules().get(0).type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND,
            model.accessRules().get(0).direction());
        Assertions.assertEquals("immoiroqboshbrag", model.accessRules().get(0).addressPrefixes().get(0));
        Assertions.assertEquals("ppdbwnupgahxkum", model.accessRules().get(0).subscriptions().get(0).id());
        Assertions.assertEquals("pvufhbze", model.accessRules().get(0).networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("whoqhnlbqnbldxe",
            model.accessRules().get(0).networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("lgsc", model.accessRules().get(0).networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("rfsiowlkjxn", model.accessRules().get(0).fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("oafcluqvox", model.accessRules().get(0).emailAddresses().get(0));
        Assertions.assertEquals("jimryvwgcwwpbmz", model.accessRules().get(0).phoneNumbers().get(0));
        Assertions.assertEquals("bmoichd", model.diagnosticSettingsVersion());
        Assertions.assertEquals("fpubntnbatz", model.enabledLogCategories().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationProfile model
            = new NetworkSecurityPerimeterConfigurationProfile().withName("cyknapqofyuicd")
                .withAccessRulesVersion("bd")
                .withAccessRules(
                    Arrays.asList(
                        new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("gbdvibidmhmwff")
                            .withName("fmuvapckccr")
                            .withType("weyoxoy")
                            .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND)
                            .withAddressPrefixes(Arrays.asList("immoiroqboshbrag", "pyyrmfs", "bpav"))
                            .withSubscriptions(Arrays.asList(
                                new NetworkSecurityPerimeterSubscription().withId("ppdbwnupgahxkum"),
                                new NetworkSecurityPerimeterSubscription().withId("jcaacfdmmcpugm")))
                            .withNetworkSecurityPerimeters(Arrays.asList(
                                new NetworkSecurityPerimeterInfo().withId("pvufhbze")
                                    .withPerimeterGuid("whoqhnlbqnbldxe")
                                    .withLocation("lgsc"),
                                new NetworkSecurityPerimeterInfo().withId("ri")
                                    .withPerimeterGuid("rsrrmoucsofldp")
                                    .withLocation("iyfc"),
                                new NetworkSecurityPerimeterInfo()
                                    .withId("beolh")
                                    .withPerimeterGuid("lvbmxuqibsxtkcu")
                                    .withLocation("b")))
                            .withFullyQualifiedDomainNames(Arrays.asList("rfsiowlkjxn", "pvwgfstmhqykizmd"))
                            .withEmailAddresses(Arrays.asList("oafcluqvox"))
                            .withPhoneNumbers(Arrays.asList("jimryvwgcwwpbmz", "w", "sydsxwefohe", "bvopwndyqle")),
                        new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("lklmtkhlo")
                            .withName("x")
                            .withType("vbrdfjmzsyzfho")
                            .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND)
                            .withAddressPrefixes(Arrays.asList("yych", "nsjlpjrtws", "hv"))
                            .withSubscriptions(
                                Arrays.asList(new NetworkSecurityPerimeterSubscription().withId("phvtrrmhwrb"),
                                    new NetworkSecurityPerimeterSubscription().withId("pyf"),
                                    new NetworkSecurityPerimeterSubscription().withId("bhvjglr")))
                            .withNetworkSecurityPerimeters(Arrays.asList(
                                new NetworkSecurityPerimeterInfo().withId("zlwhhmemhooclu")
                                    .withPerimeterGuid("pqmem")
                                    .withLocation("jk"),
                                new NetworkSecurityPerimeterInfo().withId("ykyujxsg")
                                    .withPerimeterGuid("srrryejylmbkzu")
                                    .withLocation("igrfihotjewl")))
                            .withFullyQualifiedDomainNames(Arrays.asList("zzjgnr", "fqyhqoto", "hiqakydiwfbrk"))
                            .withEmailAddresses(Arrays.asList("dqtvhcsp"))
                            .withPhoneNumbers(Arrays.asList("qaxsipietgbebjf"))))
                .withDiagnosticSettingsVersion("bmoichd")
                .withEnabledLogCategories(Arrays.asList("fpubntnbatz", "iqsowsaaelc", "ttcjuhplrvkmjc"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationProfile.class);
        Assertions.assertEquals("cyknapqofyuicd", model.name());
        Assertions.assertEquals("bd", model.accessRulesVersion());
        Assertions.assertEquals("gbdvibidmhmwff", model.accessRules().get(0).fullyQualifiedArmId());
        Assertions.assertEquals("fmuvapckccr", model.accessRules().get(0).name());
        Assertions.assertEquals("weyoxoy", model.accessRules().get(0).type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND,
            model.accessRules().get(0).direction());
        Assertions.assertEquals("immoiroqboshbrag", model.accessRules().get(0).addressPrefixes().get(0));
        Assertions.assertEquals("ppdbwnupgahxkum", model.accessRules().get(0).subscriptions().get(0).id());
        Assertions.assertEquals("pvufhbze", model.accessRules().get(0).networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("whoqhnlbqnbldxe",
            model.accessRules().get(0).networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("lgsc", model.accessRules().get(0).networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("rfsiowlkjxn", model.accessRules().get(0).fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("oafcluqvox", model.accessRules().get(0).emailAddresses().get(0));
        Assertions.assertEquals("jimryvwgcwwpbmz", model.accessRules().get(0).phoneNumbers().get(0));
        Assertions.assertEquals("bmoichd", model.diagnosticSettingsVersion());
        Assertions.assertEquals("fpubntnbatz", model.enabledLogCategories().get(0));
    }
}
