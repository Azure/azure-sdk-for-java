// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.OperationInner;
import com.azure.resourcemanager.eventgrid.models.OperationInfo;
import com.azure.resourcemanager.eventgrid.models.OperationsListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationsListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationsListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"dspastjbkkdmfl\",\"display\":{\"provider\":\"tmjlx\",\"resource\":\"ilozapeewchpxlk\",\"operation\":\"kuziycsle\",\"description\":\"f\"},\"origin\":\"tcktyhjtqedcgzu\",\"isDataAction\":false,\"properties\":\"datarqzz\"},{\"name\":\"jvpglydzgk\",\"display\":{\"provider\":\"eevt\",\"resource\":\"pryu\",\"operation\":\"wytpzdmovz\",\"description\":\"va\"},\"origin\":\"zqadf\",\"isDataAction\":false,\"properties\":\"datariglaec\"}]}")
            .toObject(OperationsListResult.class);
        Assertions.assertEquals("dspastjbkkdmfl", model.value().get(0).name());
        Assertions.assertEquals("tmjlx", model.value().get(0).display().provider());
        Assertions.assertEquals("ilozapeewchpxlk", model.value().get(0).display().resource());
        Assertions.assertEquals("kuziycsle", model.value().get(0).display().operation());
        Assertions.assertEquals("f", model.value().get(0).display().description());
        Assertions.assertEquals("tcktyhjtqedcgzu", model.value().get(0).origin());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationsListResult model = new OperationsListResult().withValue(Arrays.asList(
            new OperationInner().withName("dspastjbkkdmfl")
                .withDisplay(new OperationInfo().withProvider("tmjlx").withResource("ilozapeewchpxlk")
                    .withOperation("kuziycsle").withDescription("f"))
                .withOrigin("tcktyhjtqedcgzu").withIsDataAction(false).withProperties("datarqzz"),
            new OperationInner()
                .withName("jvpglydzgk").withDisplay(new OperationInfo().withProvider("eevt").withResource("pryu")
                    .withOperation("wytpzdmovz").withDescription("va"))
                .withOrigin("zqadf").withIsDataAction(false).withProperties("datariglaec")));
        model = BinaryData.fromObject(model).toObject(OperationsListResult.class);
        Assertions.assertEquals("dspastjbkkdmfl", model.value().get(0).name());
        Assertions.assertEquals("tmjlx", model.value().get(0).display().provider());
        Assertions.assertEquals("ilozapeewchpxlk", model.value().get(0).display().resource());
        Assertions.assertEquals("kuziycsle", model.value().get(0).display().operation());
        Assertions.assertEquals("f", model.value().get(0).display().description());
        Assertions.assertEquals("tcktyhjtqedcgzu", model.value().get(0).origin());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
    }
}
