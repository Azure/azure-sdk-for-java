// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.VerifiedPartnerInner;
import com.azure.resourcemanager.eventgrid.models.PartnerDetails;
import com.azure.resourcemanager.eventgrid.models.VerifiedPartnerProvisioningState;
import com.azure.resourcemanager.eventgrid.models.VerifiedPartnersListResult;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class VerifiedPartnersListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VerifiedPartnersListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"partnerRegistrationImmutableId\":\"d904bf40-e22e-4a81-bc83-25af466fa3e8\",\"organizationName\":\"uiaclkiexhajlfn\",\"partnerDisplayName\":\"iqfyuttdi\",\"partnerTopicDetails\":{\"description\":\"pvn\",\"longDescription\":\"wmtxkyctwwgz\",\"setupUri\":\"jlmec\"},\"provisioningState\":\"Deleting\"},\"id\":\"gzyvnee\",\"name\":\"aifghtmoqqt\",\"type\":\"ffhzbkrkjjjavfq\"},{\"properties\":{\"partnerRegistrationImmutableId\":\"b0346841-caeb-4167-8483-b608ec3ec19d\",\"organizationName\":\"qoewdogiyetesy\",\"partnerDisplayName\":\"idbz\",\"partnerTopicDetails\":{\"description\":\"qtfbovn\",\"longDescription\":\"kbwetnj\",\"setupUri\":\"p\"},\"provisioningState\":\"Succeeded\"},\"id\":\"zyaupiac\",\"name\":\"xnafbw\",\"type\":\"ro\"},{\"properties\":{\"partnerRegistrationImmutableId\":\"9c737352-d20d-4190-bcd7-bb6c80d69261\",\"organizationName\":\"ovmaonurjtum\",\"partnerDisplayName\":\"ihpvecmslclblyj\",\"partnerTopicDetails\":{\"description\":\"bsjuscvsfx\",\"longDescription\":\"ctmgxuupbezqccy\",\"setupUri\":\"tce\"},\"provisioningState\":\"Deleting\"},\"id\":\"kkyihzt\",\"name\":\"eq\",\"type\":\"gqzgwldoychill\"}],\"nextLink\":\"cfehuwaoagu\"}")
            .toObject(VerifiedPartnersListResult.class);
        Assertions.assertEquals(UUID.fromString("d904bf40-e22e-4a81-bc83-25af466fa3e8"),
            model.value().get(0).partnerRegistrationImmutableId());
        Assertions.assertEquals("uiaclkiexhajlfn", model.value().get(0).organizationName());
        Assertions.assertEquals("iqfyuttdi", model.value().get(0).partnerDisplayName());
        Assertions.assertEquals("pvn", model.value().get(0).partnerTopicDetails().description());
        Assertions.assertEquals("wmtxkyctwwgz", model.value().get(0).partnerTopicDetails().longDescription());
        Assertions.assertEquals("jlmec", model.value().get(0).partnerTopicDetails().setupUri());
        Assertions.assertEquals(VerifiedPartnerProvisioningState.DELETING, model.value().get(0).provisioningState());
        Assertions.assertEquals("cfehuwaoagu", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VerifiedPartnersListResult model
            = new VerifiedPartnersListResult()
                .withValue(
                    Arrays
                        .asList(
                            new VerifiedPartnerInner()
                                .withPartnerRegistrationImmutableId(
                                    UUID.fromString("d904bf40-e22e-4a81-bc83-25af466fa3e8"))
                                .withOrganizationName("uiaclkiexhajlfn")
                                .withPartnerDisplayName("iqfyuttdi")
                                .withPartnerTopicDetails(new PartnerDetails()
                                    .withDescription("pvn")
                                    .withLongDescription("wmtxkyctwwgz")
                                    .withSetupUri("jlmec"))
                                .withProvisioningState(VerifiedPartnerProvisioningState.DELETING),
                            new VerifiedPartnerInner()
                                .withPartnerRegistrationImmutableId(
                                    UUID.fromString("b0346841-caeb-4167-8483-b608ec3ec19d"))
                                .withOrganizationName("qoewdogiyetesy")
                                .withPartnerDisplayName("idbz")
                                .withPartnerTopicDetails(new PartnerDetails()
                                    .withDescription("qtfbovn")
                                    .withLongDescription("kbwetnj")
                                    .withSetupUri("p"))
                                .withProvisioningState(VerifiedPartnerProvisioningState.SUCCEEDED),
                            new VerifiedPartnerInner()
                                .withPartnerRegistrationImmutableId(
                                    UUID.fromString("9c737352-d20d-4190-bcd7-bb6c80d69261"))
                                .withOrganizationName("ovmaonurjtum")
                                .withPartnerDisplayName("ihpvecmslclblyj")
                                .withPartnerTopicDetails(new PartnerDetails().withDescription("bsjuscvsfx")
                                    .withLongDescription("ctmgxuupbezqccy")
                                    .withSetupUri("tce"))
                                .withProvisioningState(VerifiedPartnerProvisioningState.DELETING)))
                .withNextLink("cfehuwaoagu");
        model = BinaryData.fromObject(model).toObject(VerifiedPartnersListResult.class);
        Assertions.assertEquals(UUID.fromString("d904bf40-e22e-4a81-bc83-25af466fa3e8"),
            model.value().get(0).partnerRegistrationImmutableId());
        Assertions.assertEquals("uiaclkiexhajlfn", model.value().get(0).organizationName());
        Assertions.assertEquals("iqfyuttdi", model.value().get(0).partnerDisplayName());
        Assertions.assertEquals("pvn", model.value().get(0).partnerTopicDetails().description());
        Assertions.assertEquals("wmtxkyctwwgz", model.value().get(0).partnerTopicDetails().longDescription());
        Assertions.assertEquals("jlmec", model.value().get(0).partnerTopicDetails().setupUri());
        Assertions.assertEquals(VerifiedPartnerProvisioningState.DELETING, model.value().get(0).provisioningState());
        Assertions.assertEquals("cfehuwaoagu", model.nextLink());
    }
}
