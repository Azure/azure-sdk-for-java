// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.VerifiedPartnerInner;
import com.azure.resourcemanager.eventgrid.models.PartnerDetails;
import com.azure.resourcemanager.eventgrid.models.VerifiedPartnerProvisioningState;
import com.azure.resourcemanager.eventgrid.models.VerifiedPartnersListResult;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class VerifiedPartnersListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VerifiedPartnersListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"partnerRegistrationImmutableId\":\"df8e16ff-9510-4820-9a5c-b2cef01bec1e\",\"organizationName\":\"fkb\",\"partnerDisplayName\":\"z\",\"partnerTopicDetails\":{\"description\":\"dltb\",\"longDescription\":\"tqjfgxxsaet\",\"setupUri\":\"dgvpyig\"},\"partnerDestinationDetails\":{\"description\":\"qilzdc\",\"longDescription\":\"wjoe\",\"setupUri\":\"ngucaifpaurww\"},\"provisioningState\":\"Canceled\"},\"id\":\"jqqacdmkx\",\"name\":\"xdcvjwcy\",\"type\":\"iakeciqc\"},{\"properties\":{\"partnerRegistrationImmutableId\":\"7431b4aa-0986-45e3-89de-1389da11a64e\",\"organizationName\":\"uicdsiwdfmmpzhzz\",\"partnerDisplayName\":\"ywrgyngydgr\",\"partnerTopicDetails\":{\"description\":\"cakiqao\",\"longDescription\":\"jrkc\",\"setupUri\":\"mgglvlmfe\"},\"partnerDestinationDetails\":{\"description\":\"qey\",\"longDescription\":\"ltygxhqfgqkayej\",\"setupUri\":\"tlgflwfgz\"},\"provisioningState\":\"Creating\"},\"id\":\"ijjcea\",\"name\":\"lijjjrtvam\",\"type\":\"a\"}],\"nextLink\":\"knxkvccxetyvkunm\"}")
            .toObject(VerifiedPartnersListResult.class);
        Assertions.assertEquals(UUID.fromString("df8e16ff-9510-4820-9a5c-b2cef01bec1e"),
            model.value().get(0).partnerRegistrationImmutableId());
        Assertions.assertEquals("fkb", model.value().get(0).organizationName());
        Assertions.assertEquals("z", model.value().get(0).partnerDisplayName());
        Assertions.assertEquals("dltb", model.value().get(0).partnerTopicDetails().description());
        Assertions.assertEquals("tqjfgxxsaet", model.value().get(0).partnerTopicDetails().longDescription());
        Assertions.assertEquals("dgvpyig", model.value().get(0).partnerTopicDetails().setupUri());
        Assertions.assertEquals("qilzdc", model.value().get(0).partnerDestinationDetails().description());
        Assertions.assertEquals("wjoe", model.value().get(0).partnerDestinationDetails().longDescription());
        Assertions.assertEquals("ngucaifpaurww", model.value().get(0).partnerDestinationDetails().setupUri());
        Assertions.assertEquals(VerifiedPartnerProvisioningState.CANCELED, model.value().get(0).provisioningState());
        Assertions.assertEquals("knxkvccxetyvkunm", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VerifiedPartnersListResult model
            = new VerifiedPartnersListResult()
                .withValue(
                    Arrays
                        .asList(
                            new VerifiedPartnerInner()
                                .withPartnerRegistrationImmutableId(
                                    UUID.fromString("df8e16ff-9510-4820-9a5c-b2cef01bec1e"))
                                .withOrganizationName("fkb")
                                .withPartnerDisplayName("z")
                                .withPartnerTopicDetails(new PartnerDetails().withDescription("dltb")
                                    .withLongDescription("tqjfgxxsaet")
                                    .withSetupUri("dgvpyig"))
                                .withPartnerDestinationDetails(new PartnerDetails()
                                    .withDescription("qilzdc")
                                    .withLongDescription("wjoe")
                                    .withSetupUri("ngucaifpaurww"))
                                .withProvisioningState(VerifiedPartnerProvisioningState.CANCELED),
                            new VerifiedPartnerInner()
                                .withPartnerRegistrationImmutableId(
                                    UUID.fromString("7431b4aa-0986-45e3-89de-1389da11a64e"))
                                .withOrganizationName("uicdsiwdfmmpzhzz")
                                .withPartnerDisplayName("ywrgyngydgr")
                                .withPartnerTopicDetails(new PartnerDetails().withDescription("cakiqao")
                                    .withLongDescription("jrkc")
                                    .withSetupUri("mgglvlmfe"))
                                .withPartnerDestinationDetails(new PartnerDetails().withDescription("qey")
                                    .withLongDescription("ltygxhqfgqkayej")
                                    .withSetupUri("tlgflwfgz"))
                                .withProvisioningState(VerifiedPartnerProvisioningState.CREATING)))
                .withNextLink("knxkvccxetyvkunm");
        model = BinaryData.fromObject(model).toObject(VerifiedPartnersListResult.class);
        Assertions.assertEquals(UUID.fromString("df8e16ff-9510-4820-9a5c-b2cef01bec1e"),
            model.value().get(0).partnerRegistrationImmutableId());
        Assertions.assertEquals("fkb", model.value().get(0).organizationName());
        Assertions.assertEquals("z", model.value().get(0).partnerDisplayName());
        Assertions.assertEquals("dltb", model.value().get(0).partnerTopicDetails().description());
        Assertions.assertEquals("tqjfgxxsaet", model.value().get(0).partnerTopicDetails().longDescription());
        Assertions.assertEquals("dgvpyig", model.value().get(0).partnerTopicDetails().setupUri());
        Assertions.assertEquals("qilzdc", model.value().get(0).partnerDestinationDetails().description());
        Assertions.assertEquals("wjoe", model.value().get(0).partnerDestinationDetails().longDescription());
        Assertions.assertEquals("ngucaifpaurww", model.value().get(0).partnerDestinationDetails().setupUri());
        Assertions.assertEquals(VerifiedPartnerProvisioningState.CANCELED, model.value().get(0).provisioningState());
        Assertions.assertEquals("knxkvccxetyvkunm", model.nextLink());
    }
}
