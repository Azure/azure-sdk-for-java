// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.NetworkSecurityPerimeterConfigurationIssuesProperties;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssueSeverity;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssueType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationIssuesPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationIssuesProperties model = BinaryData.fromString(
            "{\"issueType\":\"MissingIdentityConfiguration\",\"severity\":\"Warning\",\"description\":\"xrx\",\"suggestedResourceIds\":[\"jdxvglnkvxlxpa\",\"lqivbgkcv\",\"hpzvuqdflvoniyp\"],\"suggestedAccessRules\":[\"bcpzgpxtivh\",\"knidib\",\"qjxgpnrhgovfgp\"]}")
            .toObject(NetworkSecurityPerimeterConfigurationIssuesProperties.class);
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueType.MISSING_IDENTITY_CONFIGURATION,
            model.issueType());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueSeverity.WARNING, model.severity());
        Assertions.assertEquals("xrx", model.description());
        Assertions.assertEquals("jdxvglnkvxlxpa", model.suggestedResourceIds().get(0));
        Assertions.assertEquals("bcpzgpxtivh", model.suggestedAccessRules().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationIssuesProperties model
            = new NetworkSecurityPerimeterConfigurationIssuesProperties()
                .withIssueType(NetworkSecurityPerimeterConfigurationIssueType.MISSING_IDENTITY_CONFIGURATION)
                .withSeverity(NetworkSecurityPerimeterConfigurationIssueSeverity.WARNING)
                .withDescription("xrx")
                .withSuggestedResourceIds(Arrays.asList("jdxvglnkvxlxpa", "lqivbgkcv", "hpzvuqdflvoniyp"))
                .withSuggestedAccessRules(Arrays.asList("bcpzgpxtivh", "knidib", "qjxgpnrhgovfgp"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationIssuesProperties.class);
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueType.MISSING_IDENTITY_CONFIGURATION,
            model.issueType());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueSeverity.WARNING, model.severity());
        Assertions.assertEquals("xrx", model.description());
        Assertions.assertEquals("jdxvglnkvxlxpa", model.suggestedResourceIds().get(0));
        Assertions.assertEquals("bcpzgpxtivh", model.suggestedAccessRules().get(0));
    }
}
