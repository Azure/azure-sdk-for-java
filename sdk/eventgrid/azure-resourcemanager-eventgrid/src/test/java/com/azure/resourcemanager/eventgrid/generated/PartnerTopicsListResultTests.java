// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner;
import com.azure.resourcemanager.eventgrid.models.EventDefinitionKind;
import com.azure.resourcemanager.eventgrid.models.EventTypeInfo;
import com.azure.resourcemanager.eventgrid.models.IdentityInfo;
import com.azure.resourcemanager.eventgrid.models.IdentityType;
import com.azure.resourcemanager.eventgrid.models.InlineEventProperties;
import com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState;
import com.azure.resourcemanager.eventgrid.models.PartnerTopicsListResult;
import com.azure.resourcemanager.eventgrid.models.UserIdentityProperties;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class PartnerTopicsListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PartnerTopicsListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"partnerRegistrationImmutableId\":\"e8f7c192-2903-4a23-80fd-032b24e91a79\",\"source\":\"qmjxlyyzglgouwtl\",\"eventTypeInfo\":{\"kind\":\"Inline\",\"inlineEventTypes\":{\"j\":{},\"tob\":{},\"xkjeytunlbfj\":{}}},\"expirationTimeIfNotActivatedUtc\":\"2021-01-21T02:32:08Z\",\"provisioningState\":\"Canceled\",\"activationState\":\"NeverActivated\",\"partnerTopicFriendlyDescription\":\"bhsy\",\"messageForActivation\":\"unjqh\"},\"identity\":{\"type\":\"None\",\"principalId\":\"l\",\"tenantId\":\"akdkifmjnnawtqab\",\"userAssignedIdentities\":{\"lqqmpiz\":{\"principalId\":\"kpggqoweyi\",\"clientId\":\"hlisngw\"},\"iixtmkzj\":{\"principalId\":\"w\",\"clientId\":\"qxpxiwfcngjsaa\"},\"tbrxkjz\":{\"principalId\":\"viirhgfgrws\",\"clientId\":\"gratzvzbglbyvict\"},\"pdbydpizqacln\":{\"principalId\":\"gxffmshkwf\",\"clientId\":\"gozxw\"}}},\"location\":\"pxbiygnugjknfs\",\"tags\":{\"rehmr\":\"ttuxuuyilflqoiqu\",\"jtwhauunf\":\"jhvsujztczyt\"},\"id\":\"rnjlet\",\"name\":\"xsmrpddouifamow\",\"type\":\"z\"},{\"properties\":{\"partnerRegistrationImmutableId\":\"ff2cb299-2e9b-4146-9496-bba1225f83f3\",\"source\":\"nlqwzdvpiwhx\",\"eventTypeInfo\":{\"kind\":\"Inline\",\"inlineEventTypes\":{\"aajquhuxylrj\":{},\"m\":{},\"ygjbmzyospspsh\":{}}},\"expirationTimeIfNotActivatedUtc\":\"2021-11-10T17:31:52Z\",\"provisioningState\":\"Succeeded\",\"activationState\":\"NeverActivated\",\"partnerTopicFriendlyDescription\":\"sp\",\"messageForActivation\":\"ssdfpp\"},\"identity\":{\"type\":\"SystemAssigned\",\"principalId\":\"yujtvczkcnyx\",\"tenantId\":\"munjdxvglnkvx\",\"userAssignedIdentities\":{\"iypfp\":{\"principalId\":\"glqivbgkcv\",\"clientId\":\"pzvuqdflvo\"},\"qjxgpnrhgovfgp\":{\"principalId\":\"cpzgpxtiv\",\"clientId\":\"knidib\"},\"kfvxcnq\":{\"principalId\":\"qmhhaowj\",\"clientId\":\"zvuporqzdfuydz\"}}},\"location\":\"xqpswok\",\"tags\":{\"gdhbe\":\"hl\"},\"id\":\"zqkzszuwi\",\"name\":\"tglxx\",\"type\":\"ljfp\"},{\"properties\":{\"partnerRegistrationImmutableId\":\"945f1666-0b2c-459a-9905-ae55beec967b\",\"source\":\"rmnzhr\",\"eventTypeInfo\":{\"kind\":\"Inline\",\"inlineEventTypes\":{\"x\":{},\"pqcbfrmbodthsq\":{},\"gvriibakclac\":{},\"fr\":{}}},\"expirationTimeIfNotActivatedUtc\":\"2021-12-02T11:03:59Z\",\"provisioningState\":\"Creating\",\"activationState\":\"NeverActivated\",\"partnerTopicFriendlyDescription\":\"zlwvsgmwohqfz\",\"messageForActivation\":\"vux\"},\"identity\":{\"type\":\"None\",\"principalId\":\"thnwpzte\",\"tenantId\":\"vmribiat\",\"userAssignedIdentities\":{\"zqwmvt\":{\"principalId\":\"ucfotangcf\",\"clientId\":\"ykzcugswvxwl\"},\"npdkv\":{\"principalId\":\"jmxmcuqud\",\"clientId\":\"vclx\"},\"iknp\":{\"principalId\":\"abuiy\",\"clientId\":\"buzphdugn\"},\"d\":{\"principalId\":\"xgjiuqh\",\"clientId\":\"tozipqwj\"}}},\"location\":\"urrxxgewpktv\",\"tags\":{\"o\":\"kmqp\"},\"id\":\"hlfbcgwgc\",\"name\":\"oxoebqi\",\"type\":\"jipnwj\"},{\"properties\":{\"partnerRegistrationImmutableId\":\"e0355360-a33a-499c-9215-1e299ced2484\",\"source\":\"lafcbahh\",\"eventTypeInfo\":{\"kind\":\"Inline\",\"inlineEventTypes\":{\"iyjwpfilkmkkho\":{}}},\"expirationTimeIfNotActivatedUtc\":\"2021-04-17T01:40:25Z\",\"provisioningState\":\"IdleDueToMirroredChannelResourceDeletion\",\"activationState\":\"Deactivated\",\"partnerTopicFriendlyDescription\":\"uogphuartvtiuky\",\"messageForActivation\":\"chnmna\"},\"identity\":{\"type\":\"SystemAssigned, UserAssigned\",\"principalId\":\"xjqirwrweoox\",\"tenantId\":\"i\",\"userAssignedIdentities\":{\"taboidvmf\":{\"principalId\":\"rsnewmozqvbubqma\",\"clientId\":\"sycxhxzgaz\"},\"epdfgkmtdherng\":{\"principalId\":\"ppu\",\"clientId\":\"w\"}}},\"location\":\"tcjuahokqto\",\"tags\":{\"wzejywhslw\":\"uxofshfphwpnulai\",\"fugsnnfhyetefy\":\"ojpllndnpdwrpqaf\",\"ctfjgtixr\":\"oc\"},\"id\":\"vzuyturmlmu\",\"name\":\"wolba\",\"type\":\"iropionszon\"}],\"nextLink\":\"ngajinnixjawrtmj\"}")
            .toObject(PartnerTopicsListResult.class);
        Assertions.assertEquals("pxbiygnugjknfs", model.value().get(0).location());
        Assertions.assertEquals("ttuxuuyilflqoiqu", model.value().get(0).tags().get("rehmr"));
        Assertions.assertEquals(IdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals("l", model.value().get(0).identity().principalId());
        Assertions.assertEquals("akdkifmjnnawtqab", model.value().get(0).identity().tenantId());
        Assertions.assertEquals("kpggqoweyi",
            model.value().get(0).identity().userAssignedIdentities().get("lqqmpiz").principalId());
        Assertions.assertEquals("hlisngw",
            model.value().get(0).identity().userAssignedIdentities().get("lqqmpiz").clientId());
        Assertions.assertEquals(UUID.fromString("e8f7c192-2903-4a23-80fd-032b24e91a79"),
            model.value().get(0).partnerRegistrationImmutableId());
        Assertions.assertEquals("qmjxlyyzglgouwtl", model.value().get(0).source());
        Assertions.assertEquals(EventDefinitionKind.INLINE, model.value().get(0).eventTypeInfo().kind());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-21T02:32:08Z"),
            model.value().get(0).expirationTimeIfNotActivatedUtc());
        Assertions.assertEquals(PartnerTopicActivationState.NEVER_ACTIVATED, model.value().get(0).activationState());
        Assertions.assertEquals("bhsy", model.value().get(0).partnerTopicFriendlyDescription());
        Assertions.assertEquals("unjqh", model.value().get(0).messageForActivation());
        Assertions.assertEquals("ngajinnixjawrtmj", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PartnerTopicsListResult model
            = new PartnerTopicsListResult().withValue(Arrays.asList(
                new PartnerTopicInner().withLocation("pxbiygnugjknfs")
                    .withTags(mapOf("rehmr", "ttuxuuyilflqoiqu", "jtwhauunf", "jhvsujztczyt"))
                    .withIdentity(new IdentityInfo().withType(IdentityType.NONE)
                        .withPrincipalId("l")
                        .withTenantId("akdkifmjnnawtqab")
                        .withUserAssignedIdentities(mapOf("lqqmpiz",
                            new UserIdentityProperties().withPrincipalId("kpggqoweyi").withClientId("hlisngw"),
                            "iixtmkzj",
                            new UserIdentityProperties().withPrincipalId("w").withClientId("qxpxiwfcngjsaa"), "tbrxkjz",
                            new UserIdentityProperties().withPrincipalId("viirhgfgrws")
                                .withClientId("gratzvzbglbyvict"),
                            "pdbydpizqacln",
                            new UserIdentityProperties().withPrincipalId("gxffmshkwf").withClientId("gozxw"))))
                    .withPartnerRegistrationImmutableId(UUID.fromString("e8f7c192-2903-4a23-80fd-032b24e91a79"))
                    .withSource("qmjxlyyzglgouwtl")
                    .withEventTypeInfo(new EventTypeInfo().withKind(EventDefinitionKind.INLINE)
                        .withInlineEventTypes(mapOf("j", new InlineEventProperties(), "tob",
                            new InlineEventProperties(), "xkjeytunlbfj", new InlineEventProperties())))
                    .withExpirationTimeIfNotActivatedUtc(OffsetDateTime.parse("2021-01-21T02:32:08Z"))
                    .withActivationState(PartnerTopicActivationState.NEVER_ACTIVATED)
                    .withPartnerTopicFriendlyDescription("bhsy")
                    .withMessageForActivation("unjqh"),
                new PartnerTopicInner().withLocation("xqpswok")
                    .withTags(mapOf("gdhbe", "hl"))
                    .withIdentity(new IdentityInfo().withType(IdentityType.SYSTEM_ASSIGNED)
                        .withPrincipalId("yujtvczkcnyx")
                        .withTenantId("munjdxvglnkvx")
                        .withUserAssignedIdentities(mapOf("iypfp",
                            new UserIdentityProperties().withPrincipalId("glqivbgkcv").withClientId("pzvuqdflvo"),
                            "qjxgpnrhgovfgp",
                            new UserIdentityProperties().withPrincipalId("cpzgpxtiv").withClientId("knidib"), "kfvxcnq",
                            new UserIdentityProperties().withPrincipalId("qmhhaowj").withClientId("zvuporqzdfuydz"))))
                    .withPartnerRegistrationImmutableId(UUID.fromString("ff2cb299-2e9b-4146-9496-bba1225f83f3"))
                    .withSource("nlqwzdvpiwhx")
                    .withEventTypeInfo(new EventTypeInfo().withKind(EventDefinitionKind.INLINE)
                        .withInlineEventTypes(mapOf("aajquhuxylrj", new InlineEventProperties(), "m",
                            new InlineEventProperties(), "ygjbmzyospspsh", new InlineEventProperties())))
                    .withExpirationTimeIfNotActivatedUtc(OffsetDateTime.parse("2021-11-10T17:31:52Z"))
                    .withActivationState(PartnerTopicActivationState.NEVER_ACTIVATED)
                    .withPartnerTopicFriendlyDescription("sp")
                    .withMessageForActivation("ssdfpp"),
                new PartnerTopicInner()
                    .withLocation("urrxxgewpktv")
                    .withTags(mapOf("o", "kmqp"))
                    .withIdentity(new IdentityInfo().withType(IdentityType.NONE)
                        .withPrincipalId("thnwpzte")
                        .withTenantId("vmribiat")
                        .withUserAssignedIdentities(mapOf("zqwmvt",
                            new UserIdentityProperties().withPrincipalId("ucfotangcf").withClientId("ykzcugswvxwl"),
                            "npdkv", new UserIdentityProperties().withPrincipalId("jmxmcuqud").withClientId("vclx"),
                            "iknp", new UserIdentityProperties().withPrincipalId("abuiy").withClientId("buzphdugn"),
                            "d", new UserIdentityProperties().withPrincipalId("xgjiuqh").withClientId("tozipqwj"))))
                    .withPartnerRegistrationImmutableId(UUID.fromString("945f1666-0b2c-459a-9905-ae55beec967b"))
                    .withSource("rmnzhr")
                    .withEventTypeInfo(
                        new EventTypeInfo()
                            .withKind(EventDefinitionKind.INLINE)
                            .withInlineEventTypes(
                                mapOf("x", new InlineEventProperties(), "pqcbfrmbodthsq", new InlineEventProperties(),
                                    "gvriibakclac", new InlineEventProperties(), "fr", new InlineEventProperties())))
                    .withExpirationTimeIfNotActivatedUtc(OffsetDateTime.parse("2021-12-02T11:03:59Z"))
                    .withActivationState(PartnerTopicActivationState.NEVER_ACTIVATED)
                    .withPartnerTopicFriendlyDescription("zlwvsgmwohqfz")
                    .withMessageForActivation("vux"),
                new PartnerTopicInner().withLocation("tcjuahokqto")
                    .withTags(mapOf("wzejywhslw", "uxofshfphwpnulai", "fugsnnfhyetefy", "ojpllndnpdwrpqaf", "ctfjgtixr",
                        "oc"))
                    .withIdentity(new IdentityInfo().withType(IdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                        .withPrincipalId("xjqirwrweoox")
                        .withTenantId("i")
                        .withUserAssignedIdentities(mapOf("taboidvmf",
                            new UserIdentityProperties().withPrincipalId("rsnewmozqvbubqma").withClientId("sycxhxzgaz"),
                            "epdfgkmtdherng", new UserIdentityProperties().withPrincipalId("ppu").withClientId("w"))))
                    .withPartnerRegistrationImmutableId(UUID.fromString("e0355360-a33a-499c-9215-1e299ced2484"))
                    .withSource("lafcbahh")
                    .withEventTypeInfo(new EventTypeInfo().withKind(EventDefinitionKind.INLINE)
                        .withInlineEventTypes(mapOf("iyjwpfilkmkkho", new InlineEventProperties())))
                    .withExpirationTimeIfNotActivatedUtc(OffsetDateTime.parse("2021-04-17T01:40:25Z"))
                    .withActivationState(PartnerTopicActivationState.DEACTIVATED)
                    .withPartnerTopicFriendlyDescription("uogphuartvtiuky")
                    .withMessageForActivation("chnmna")))
                .withNextLink("ngajinnixjawrtmj");
        model = BinaryData.fromObject(model).toObject(PartnerTopicsListResult.class);
        Assertions.assertEquals("pxbiygnugjknfs", model.value().get(0).location());
        Assertions.assertEquals("ttuxuuyilflqoiqu", model.value().get(0).tags().get("rehmr"));
        Assertions.assertEquals(IdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals("l", model.value().get(0).identity().principalId());
        Assertions.assertEquals("akdkifmjnnawtqab", model.value().get(0).identity().tenantId());
        Assertions.assertEquals("kpggqoweyi",
            model.value().get(0).identity().userAssignedIdentities().get("lqqmpiz").principalId());
        Assertions.assertEquals("hlisngw",
            model.value().get(0).identity().userAssignedIdentities().get("lqqmpiz").clientId());
        Assertions.assertEquals(UUID.fromString("e8f7c192-2903-4a23-80fd-032b24e91a79"),
            model.value().get(0).partnerRegistrationImmutableId());
        Assertions.assertEquals("qmjxlyyzglgouwtl", model.value().get(0).source());
        Assertions.assertEquals(EventDefinitionKind.INLINE, model.value().get(0).eventTypeInfo().kind());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-21T02:32:08Z"),
            model.value().get(0).expirationTimeIfNotActivatedUtc());
        Assertions.assertEquals(PartnerTopicActivationState.NEVER_ACTIVATED, model.value().get(0).activationState());
        Assertions.assertEquals("bhsy", model.value().get(0).partnerTopicFriendlyDescription());
        Assertions.assertEquals("unjqh", model.value().get(0).messageForActivation());
        Assertions.assertEquals("ngajinnixjawrtmj", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
