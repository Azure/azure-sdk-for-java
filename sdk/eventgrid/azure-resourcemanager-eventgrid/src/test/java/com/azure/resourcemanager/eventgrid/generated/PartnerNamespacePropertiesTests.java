// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceProperties;
import com.azure.resourcemanager.eventgrid.models.InboundIpRule;
import com.azure.resourcemanager.eventgrid.models.IpActionType;
import com.azure.resourcemanager.eventgrid.models.PartnerTopicRoutingMode;
import com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess;
import com.azure.resourcemanager.eventgrid.models.TlsVersion;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PartnerNamespacePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PartnerNamespaceProperties model = BinaryData.fromString(
            "{\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"iftxfkf\"},\"groupIds\":[\"prhptillu\"],\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"gdqoh\",\"actionsRequired\":\"wsldrizetpwbr\"},\"provisioningState\":\"Updating\"},\"id\":\"libph\",\"name\":\"qzmiza\",\"type\":\"a\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"jpdn\"},\"groupIds\":[\"ajoylhjl\"],\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"primr\",\"actionsRequired\":\"pteecjme\"},\"provisioningState\":\"Canceled\"},\"id\":\"stvasylwxdzaumw\",\"name\":\"oohgu\",\"type\":\"fuzboyjathwtzolb\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"m\"},\"groupIds\":[\"ebwjscjpahlxvea\",\"f\",\"xnmwmqtibxyijddt\"],\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"adijaeukmrsie\",\"actionsRequired\":\"pndzaapmudqmeq\"},\"provisioningState\":\"Creating\"},\"id\":\"pibudqwyxebeybpm\",\"name\":\"znrtffyaqit\",\"type\":\"hheioqaqhvseuf\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"xpdlcgqlsis\"},\"groupIds\":[\"frddgamquhiosrsj\",\"ivfcdisyirnx\"],\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"xrxzbujrtr\",\"actionsRequired\":\"vwrevkhgnlnzon\"},\"provisioningState\":\"Succeeded\"},\"id\":\"piqywnc\",\"name\":\"jtszcof\",\"type\":\"zehtdhgb\"}],\"provisioningState\":\"Creating\",\"partnerRegistrationFullyQualifiedId\":\"eljeamurvzmlovua\",\"minimumTlsVersionAllowed\":\"1.0\",\"endpoint\":\"cxlpmjerb\",\"publicNetworkAccess\":\"Disabled\",\"inboundIpRules\":[{\"ipMask\":\"di\",\"action\":\"Allow\"},{\"ipMask\":\"db\",\"action\":\"Allow\"},{\"ipMask\":\"monfdgnwncypuuww\",\"action\":\"Allow\"}],\"disableLocalAuth\":true,\"partnerTopicRoutingMode\":\"ChannelNameHeader\"}")
            .toObject(PartnerNamespaceProperties.class);
        Assertions.assertEquals("eljeamurvzmlovua", model.partnerRegistrationFullyQualifiedId());
        Assertions.assertEquals(TlsVersion.ONE_ZERO, model.minimumTlsVersionAllowed());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.publicNetworkAccess());
        Assertions.assertEquals("di", model.inboundIpRules().get(0).ipMask());
        Assertions.assertEquals(IpActionType.ALLOW, model.inboundIpRules().get(0).action());
        Assertions.assertEquals(true, model.disableLocalAuth());
        Assertions.assertEquals(PartnerTopicRoutingMode.CHANNEL_NAME_HEADER, model.partnerTopicRoutingMode());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PartnerNamespaceProperties model
            = new PartnerNamespaceProperties().withPartnerRegistrationFullyQualifiedId("eljeamurvzmlovua")
                .withMinimumTlsVersionAllowed(TlsVersion.ONE_ZERO)
                .withPublicNetworkAccess(PublicNetworkAccess.DISABLED)
                .withInboundIpRules(Arrays.asList(new InboundIpRule().withIpMask("di").withAction(IpActionType.ALLOW),
                    new InboundIpRule().withIpMask("db").withAction(IpActionType.ALLOW),
                    new InboundIpRule().withIpMask("monfdgnwncypuuww").withAction(IpActionType.ALLOW)))
                .withDisableLocalAuth(true)
                .withPartnerTopicRoutingMode(PartnerTopicRoutingMode.CHANNEL_NAME_HEADER);
        model = BinaryData.fromObject(model).toObject(PartnerNamespaceProperties.class);
        Assertions.assertEquals("eljeamurvzmlovua", model.partnerRegistrationFullyQualifiedId());
        Assertions.assertEquals(TlsVersion.ONE_ZERO, model.minimumTlsVersionAllowed());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.publicNetworkAccess());
        Assertions.assertEquals("di", model.inboundIpRules().get(0).ipMask());
        Assertions.assertEquals(IpActionType.ALLOW, model.inboundIpRules().get(0).action());
        Assertions.assertEquals(true, model.disableLocalAuth());
        Assertions.assertEquals(PartnerTopicRoutingMode.CHANNEL_NAME_HEADER, model.partnerTopicRoutingMode());
    }
}
