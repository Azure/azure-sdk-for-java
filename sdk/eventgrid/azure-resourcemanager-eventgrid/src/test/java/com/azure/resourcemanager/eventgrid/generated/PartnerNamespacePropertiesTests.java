// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceProperties;
import com.azure.resourcemanager.eventgrid.models.InboundIpRule;
import com.azure.resourcemanager.eventgrid.models.IpActionType;
import com.azure.resourcemanager.eventgrid.models.PartnerTopicRoutingMode;
import com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess;
import com.azure.resourcemanager.eventgrid.models.TlsVersion;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PartnerNamespacePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PartnerNamespaceProperties model = BinaryData.fromString(
            "{\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"rxvxcjzh\"},\"groupIds\":[\"xfpxtgqscja\",\"ftjuh\",\"qaz\"],\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"uwpijr\",\"actionsRequired\":\"civmmg\"},\"provisioningState\":\"Updating\"},\"id\":\"fiwrxgkn\",\"name\":\"uvyinzqodfvpgs\",\"type\":\"oxgsgbpfgzdjtx\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"bqvgaqv\"},\"groupIds\":[\"fcq\"],\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"etnwsdtutnw\",\"actionsRequired\":\"uycvuzhyrmewip\"},\"provisioningState\":\"Failed\"},\"id\":\"k\",\"name\":\"xukuqgsj\",\"type\":\"xundxgk\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"hhzjhfj\"},\"groupIds\":[\"vmuvgpmu\"],\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"vmhfbuz\",\"actionsRequired\":\"ihsasb\"},\"provisioningState\":\"Canceled\"},\"id\":\"ypoh\",\"name\":\"uemsly\",\"type\":\"sqy\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"obrltt\"},\"groupIds\":[\"jnygq\",\"nfwqzdzgtilaxhn\",\"hqlyvijo\",\"wivkxo\"],\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"ixxrtikvcpw\",\"actionsRequired\":\"clrcivtsox\"},\"provisioningState\":\"Succeeded\"},\"id\":\"enxpmyyefr\",\"name\":\"mpdnqqskawa\",\"type\":\"qvmmbn\"}],\"provisioningState\":\"Canceled\",\"partnerRegistrationFullyQualifiedId\":\"tqlkz\",\"minimumTlsVersionAllowed\":\"1.0\",\"endpoint\":\"itgvkx\",\"publicNetworkAccess\":\"Enabled\",\"inboundIpRules\":[{\"ipMask\":\"fegcea\",\"action\":\"Allow\"}],\"disableLocalAuth\":false,\"partnerTopicRoutingMode\":\"SourceEventAttribute\"}")
            .toObject(PartnerNamespaceProperties.class);
        Assertions.assertEquals("tqlkz", model.partnerRegistrationFullyQualifiedId());
        Assertions.assertEquals(TlsVersion.ONE_ZERO, model.minimumTlsVersionAllowed());
        Assertions.assertEquals(PublicNetworkAccess.ENABLED, model.publicNetworkAccess());
        Assertions.assertEquals("fegcea", model.inboundIpRules().get(0).ipMask());
        Assertions.assertEquals(IpActionType.ALLOW, model.inboundIpRules().get(0).action());
        Assertions.assertFalse(model.disableLocalAuth());
        Assertions.assertEquals(PartnerTopicRoutingMode.SOURCE_EVENT_ATTRIBUTE, model.partnerTopicRoutingMode());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PartnerNamespaceProperties model = new PartnerNamespaceProperties()
            .withPartnerRegistrationFullyQualifiedId("tqlkz")
            .withMinimumTlsVersionAllowed(TlsVersion.ONE_ZERO)
            .withPublicNetworkAccess(PublicNetworkAccess.ENABLED)
            .withInboundIpRules(Arrays.asList(new InboundIpRule().withIpMask("fegcea").withAction(IpActionType.ALLOW)))
            .withDisableLocalAuth(false)
            .withPartnerTopicRoutingMode(PartnerTopicRoutingMode.SOURCE_EVENT_ATTRIBUTE);
        model = BinaryData.fromObject(model).toObject(PartnerNamespaceProperties.class);
        Assertions.assertEquals("tqlkz", model.partnerRegistrationFullyQualifiedId());
        Assertions.assertEquals(TlsVersion.ONE_ZERO, model.minimumTlsVersionAllowed());
        Assertions.assertEquals(PublicNetworkAccess.ENABLED, model.publicNetworkAccess());
        Assertions.assertEquals("fegcea", model.inboundIpRules().get(0).ipMask());
        Assertions.assertEquals(IpActionType.ALLOW, model.inboundIpRules().get(0).action());
        Assertions.assertFalse(model.disableLocalAuth());
        Assertions.assertEquals(PartnerTopicRoutingMode.SOURCE_EVENT_ATTRIBUTE, model.partnerTopicRoutingMode());
    }
}
