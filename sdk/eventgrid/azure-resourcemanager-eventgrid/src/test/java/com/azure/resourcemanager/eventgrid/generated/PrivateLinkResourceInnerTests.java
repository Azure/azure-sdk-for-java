// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.PrivateLinkResourceInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateLinkResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateLinkResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"groupId\":\"xzecpaxwkufykhvu\",\"displayName\":\"epmrut\",\"requiredMembers\":[\"baobn\",\"lujdjltymkmv\",\"uihywart\",\"pphkixkykxds\"],\"requiredZoneNames\":[\"emmucfxh\",\"kkflrmymyincqlhr\",\"s\"]},\"id\":\"lmiiiovg\",\"name\":\"gxuugqkctotio\",\"type\":\"xteqdptjgwdtg\"}")
            .toObject(PrivateLinkResourceInner.class);
        Assertions.assertEquals("lmiiiovg", model.id());
        Assertions.assertEquals("gxuugqkctotio", model.name());
        Assertions.assertEquals("xteqdptjgwdtg", model.type());
        Assertions.assertEquals("xzecpaxwkufykhvu", model.groupId());
        Assertions.assertEquals("epmrut", model.displayName());
        Assertions.assertEquals("baobn", model.requiredMembers().get(0));
        Assertions.assertEquals("emmucfxh", model.requiredZoneNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateLinkResourceInner model = new PrivateLinkResourceInner().withId("lmiiiovg")
            .withName("gxuugqkctotio")
            .withType("xteqdptjgwdtg")
            .withGroupId("xzecpaxwkufykhvu")
            .withDisplayName("epmrut")
            .withRequiredMembers(Arrays.asList("baobn", "lujdjltymkmv", "uihywart", "pphkixkykxds"))
            .withRequiredZoneNames(Arrays.asList("emmucfxh", "kkflrmymyincqlhr", "s"));
        model = BinaryData.fromObject(model).toObject(PrivateLinkResourceInner.class);
        Assertions.assertEquals("lmiiiovg", model.id());
        Assertions.assertEquals("gxuugqkctotio", model.name());
        Assertions.assertEquals("xteqdptjgwdtg", model.type());
        Assertions.assertEquals("xzecpaxwkufykhvu", model.groupId());
        Assertions.assertEquals("epmrut", model.displayName());
        Assertions.assertEquals("baobn", model.requiredMembers().get(0));
        Assertions.assertEquals("emmucfxh", model.requiredZoneNames().get(0));
    }
}
