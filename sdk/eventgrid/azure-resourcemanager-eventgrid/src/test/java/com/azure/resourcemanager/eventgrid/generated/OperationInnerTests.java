// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.OperationInner;
import com.azure.resourcemanager.eventgrid.models.OperationInfo;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"name\":\"dticokpvzml\",\"display\":{\"provider\":\"ld\",\"resource\":\"obfirclnpk\",\"operation\":\"ayzri\",\"description\":\"hya\"},\"origin\":\"vjlboxqvk\",\"isDataAction\":false,\"properties\":\"dataho\"}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("dticokpvzml", model.name());
        Assertions.assertEquals("ld", model.display().provider());
        Assertions.assertEquals("obfirclnpk", model.display().resource());
        Assertions.assertEquals("ayzri", model.display().operation());
        Assertions.assertEquals("hya", model.display().description());
        Assertions.assertEquals("vjlboxqvk", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner()
            .withName("dticokpvzml").withDisplay(new OperationInfo().withProvider("ld").withResource("obfirclnpk")
                .withOperation("ayzri").withDescription("hya"))
            .withOrigin("vjlboxqvk").withIsDataAction(false).withProperties("dataho");
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("dticokpvzml", model.name());
        Assertions.assertEquals("ld", model.display().provider());
        Assertions.assertEquals("obfirclnpk", model.display().resource());
        Assertions.assertEquals("ayzri", model.display().operation());
        Assertions.assertEquals("hya", model.display().description());
        Assertions.assertEquals("vjlboxqvk", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
    }
}
