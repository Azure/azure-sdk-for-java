// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.OperationInner;
import com.azure.resourcemanager.eventgrid.models.OperationInfo;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"name\":\"dg\",\"display\":{\"provider\":\"sjkmnwqj\",\"resource\":\"baiyhddviaceg\",\"operation\":\"m\",\"description\":\"fpmvmemfnczd\"},\"origin\":\"vbalxlllc\",\"isDataAction\":true,\"properties\":\"databzevwrd\"}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("dg", model.name());
        Assertions.assertEquals("sjkmnwqj", model.display().provider());
        Assertions.assertEquals("baiyhddviaceg", model.display().resource());
        Assertions.assertEquals("m", model.display().operation());
        Assertions.assertEquals("fpmvmemfnczd", model.display().description());
        Assertions.assertEquals("vbalxlllc", model.origin());
        Assertions.assertTrue(model.isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner().withName("dg")
            .withDisplay(new OperationInfo().withProvider("sjkmnwqj")
                .withResource("baiyhddviaceg")
                .withOperation("m")
                .withDescription("fpmvmemfnczd"))
            .withOrigin("vbalxlllc")
            .withIsDataAction(true)
            .withProperties("databzevwrd");
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("dg", model.name());
        Assertions.assertEquals("sjkmnwqj", model.display().provider());
        Assertions.assertEquals("baiyhddviaceg", model.display().resource());
        Assertions.assertEquals("m", model.display().operation());
        Assertions.assertEquals("fpmvmemfnczd", model.display().description());
        Assertions.assertEquals("vbalxlllc", model.origin());
        Assertions.assertTrue(model.isDataAction());
    }
}
