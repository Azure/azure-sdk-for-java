// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.OperationInner;
import com.azure.resourcemanager.eventgrid.models.OperationInfo;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"name\":\"bblgyavut\",\"display\":{\"provider\":\"joxoism\",\"resource\":\"sbpimlq\",\"operation\":\"jxkcgxxlxsff\",\"description\":\"vizqzdwl\"},\"origin\":\"lyoupfgfbkju\",\"isDataAction\":false,\"properties\":\"datagkfmins\"}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("bblgyavut", model.name());
        Assertions.assertEquals("joxoism", model.display().provider());
        Assertions.assertEquals("sbpimlq", model.display().resource());
        Assertions.assertEquals("jxkcgxxlxsff", model.display().operation());
        Assertions.assertEquals("vizqzdwl", model.display().description());
        Assertions.assertEquals("lyoupfgfbkju", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner().withName("bblgyavut")
            .withDisplay(new OperationInfo().withProvider("joxoism")
                .withResource("sbpimlq")
                .withOperation("jxkcgxxlxsff")
                .withDescription("vizqzdwl"))
            .withOrigin("lyoupfgfbkju")
            .withIsDataAction(false)
            .withProperties("datagkfmins");
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("bblgyavut", model.name());
        Assertions.assertEquals("joxoism", model.display().provider());
        Assertions.assertEquals("sbpimlq", model.display().resource());
        Assertions.assertEquals("jxkcgxxlxsff", model.display().operation());
        Assertions.assertEquals("vizqzdwl", model.display().description());
        Assertions.assertEquals("lyoupfgfbkju", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
    }
}
