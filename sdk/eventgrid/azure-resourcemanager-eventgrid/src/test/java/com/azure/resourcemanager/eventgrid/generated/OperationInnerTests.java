// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.OperationInner;
import com.azure.resourcemanager.eventgrid.models.OperationInfo;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"name\":\"yakk\",\"display\":{\"provider\":\"px\",\"resource\":\"jplmagstcy\",\"operation\":\"pfkyrkdbdgiogsj\",\"description\":\"nwqjnoba\"},\"origin\":\"hdd\",\"isDataAction\":true,\"properties\":\"dataegfnmntfpmvmemfn\"}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("yakk", model.name());
        Assertions.assertEquals("px", model.display().provider());
        Assertions.assertEquals("jplmagstcy", model.display().resource());
        Assertions.assertEquals("pfkyrkdbdgiogsj", model.display().operation());
        Assertions.assertEquals("nwqjnoba", model.display().description());
        Assertions.assertEquals("hdd", model.origin());
        Assertions.assertEquals(true, model.isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner().withName("yakk")
            .withDisplay(new OperationInfo().withProvider("px")
                .withResource("jplmagstcy")
                .withOperation("pfkyrkdbdgiogsj")
                .withDescription("nwqjnoba"))
            .withOrigin("hdd")
            .withIsDataAction(true)
            .withProperties("dataegfnmntfpmvmemfn");
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("yakk", model.name());
        Assertions.assertEquals("px", model.display().provider());
        Assertions.assertEquals("jplmagstcy", model.display().resource());
        Assertions.assertEquals("pfkyrkdbdgiogsj", model.display().operation());
        Assertions.assertEquals("nwqjnoba", model.display().description());
        Assertions.assertEquals("hdd", model.origin());
        Assertions.assertEquals(true, model.isDataAction());
    }
}
