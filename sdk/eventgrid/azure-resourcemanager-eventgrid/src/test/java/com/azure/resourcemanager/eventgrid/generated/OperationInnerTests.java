// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.OperationInner;
import com.azure.resourcemanager.eventgrid.models.OperationInfo;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"name\":\"w\",\"display\":{\"provider\":\"wplefaxvxil\",\"resource\":\"tg\",\"operation\":\"nzeyqxtjj\",\"description\":\"qlqhycavodg\"},\"origin\":\"dbeesmie\",\"isDataAction\":true,\"properties\":\"dataariaawi\"}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("w", model.name());
        Assertions.assertEquals("wplefaxvxil", model.display().provider());
        Assertions.assertEquals("tg", model.display().resource());
        Assertions.assertEquals("nzeyqxtjj", model.display().operation());
        Assertions.assertEquals("qlqhycavodg", model.display().description());
        Assertions.assertEquals("dbeesmie", model.origin());
        Assertions.assertEquals(true, model.isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner().withName("w")
            .withDisplay(new OperationInfo().withProvider("wplefaxvxil")
                .withResource("tg")
                .withOperation("nzeyqxtjj")
                .withDescription("qlqhycavodg"))
            .withOrigin("dbeesmie")
            .withIsDataAction(true)
            .withProperties("dataariaawi");
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("w", model.name());
        Assertions.assertEquals("wplefaxvxil", model.display().provider());
        Assertions.assertEquals("tg", model.display().resource());
        Assertions.assertEquals("nzeyqxtjj", model.display().operation());
        Assertions.assertEquals("qlqhycavodg", model.display().description());
        Assertions.assertEquals("dbeesmie", model.origin());
        Assertions.assertEquals(true, model.isDataAction());
    }
}
