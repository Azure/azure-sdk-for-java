// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.CustomDomainConfiguration;
import com.azure.resourcemanager.eventgrid.models.CustomDomainIdentity;
import com.azure.resourcemanager.eventgrid.models.CustomDomainIdentityType;
import com.azure.resourcemanager.eventgrid.models.CustomDomainValidationState;
import org.junit.jupiter.api.Assertions;

public final class CustomDomainConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CustomDomainConfiguration model = BinaryData.fromString(
            "{\"fullyQualifiedDomainName\":\"hjglikk\",\"validationState\":\"Approved\",\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentity\":\"qpvuzlmvfelf\"},\"certificateUrl\":\"gplcrpwjxeznoigb\",\"expectedTxtRecordName\":\"jwmwkpnbs\",\"expectedTxtRecordValue\":\"ejjoqkagfhsxtta\"}")
            .toObject(CustomDomainConfiguration.class);
        Assertions.assertEquals("hjglikk", model.fullyQualifiedDomainName());
        Assertions.assertEquals(CustomDomainValidationState.APPROVED, model.validationState());
        Assertions.assertEquals(CustomDomainIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("qpvuzlmvfelf", model.identity().userAssignedIdentity());
        Assertions.assertEquals("gplcrpwjxeznoigb", model.certificateUrl());
        Assertions.assertEquals("jwmwkpnbs", model.expectedTxtRecordName());
        Assertions.assertEquals("ejjoqkagfhsxtta", model.expectedTxtRecordValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CustomDomainConfiguration model = new CustomDomainConfiguration().withFullyQualifiedDomainName("hjglikk")
            .withValidationState(CustomDomainValidationState.APPROVED)
            .withIdentity(new CustomDomainIdentity().withType(CustomDomainIdentityType.USER_ASSIGNED)
                .withUserAssignedIdentity("qpvuzlmvfelf"))
            .withCertificateUrl("gplcrpwjxeznoigb")
            .withExpectedTxtRecordName("jwmwkpnbs")
            .withExpectedTxtRecordValue("ejjoqkagfhsxtta");
        model = BinaryData.fromObject(model).toObject(CustomDomainConfiguration.class);
        Assertions.assertEquals("hjglikk", model.fullyQualifiedDomainName());
        Assertions.assertEquals(CustomDomainValidationState.APPROVED, model.validationState());
        Assertions.assertEquals(CustomDomainIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("qpvuzlmvfelf", model.identity().userAssignedIdentity());
        Assertions.assertEquals("gplcrpwjxeznoigb", model.certificateUrl());
        Assertions.assertEquals("jwmwkpnbs", model.expectedTxtRecordName());
        Assertions.assertEquals("ejjoqkagfhsxtta", model.expectedTxtRecordValue());
    }
}
