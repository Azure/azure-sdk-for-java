// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.models.CustomDomainConfiguration;
import com.azure.resourcemanager.eventgrid.models.CustomDomainIdentity;
import com.azure.resourcemanager.eventgrid.models.CustomDomainIdentityType;
import com.azure.resourcemanager.eventgrid.models.CustomDomainValidationState;
import org.junit.jupiter.api.Assertions;

public final class CustomDomainConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CustomDomainConfiguration model = BinaryData.fromString(
            "{\"fullyQualifiedDomainName\":\"ioilqukrydxtq\",\"validationState\":\"ErrorRetrievingDnsRecord\",\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentity\":\"ggufhyaomtb\"},\"certificateUrl\":\"havgrvk\",\"expectedTxtRecordName\":\"ovjzhpjbibgjmfx\",\"expectedTxtRecordValue\":\"vfcluyovwxnbkfe\"}")
            .toObject(CustomDomainConfiguration.class);
        Assertions.assertEquals("ioilqukrydxtq", model.fullyQualifiedDomainName());
        Assertions.assertEquals(CustomDomainValidationState.ERROR_RETRIEVING_DNS_RECORD, model.validationState());
        Assertions.assertEquals(CustomDomainIdentityType.SYSTEM_ASSIGNED, model.identity().type());
        Assertions.assertEquals("ggufhyaomtb", model.identity().userAssignedIdentity());
        Assertions.assertEquals("havgrvk", model.certificateUrl());
        Assertions.assertEquals("ovjzhpjbibgjmfx", model.expectedTxtRecordName());
        Assertions.assertEquals("vfcluyovwxnbkfe", model.expectedTxtRecordValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CustomDomainConfiguration model = new CustomDomainConfiguration().withFullyQualifiedDomainName("ioilqukrydxtq")
            .withValidationState(CustomDomainValidationState.ERROR_RETRIEVING_DNS_RECORD)
            .withIdentity(new CustomDomainIdentity().withType(CustomDomainIdentityType.SYSTEM_ASSIGNED)
                .withUserAssignedIdentity("ggufhyaomtb"))
            .withCertificateUrl("havgrvk")
            .withExpectedTxtRecordName("ovjzhpjbibgjmfx")
            .withExpectedTxtRecordValue("vfcluyovwxnbkfe");
        model = BinaryData.fromObject(model).toObject(CustomDomainConfiguration.class);
        Assertions.assertEquals("ioilqukrydxtq", model.fullyQualifiedDomainName());
        Assertions.assertEquals(CustomDomainValidationState.ERROR_RETRIEVING_DNS_RECORD, model.validationState());
        Assertions.assertEquals(CustomDomainIdentityType.SYSTEM_ASSIGNED, model.identity().type());
        Assertions.assertEquals("ggufhyaomtb", model.identity().userAssignedIdentity());
        Assertions.assertEquals("havgrvk", model.certificateUrl());
        Assertions.assertEquals("ovjzhpjbibgjmfx", model.expectedTxtRecordName());
        Assertions.assertEquals("vfcluyovwxnbkfe", model.expectedTxtRecordValue());
    }
}
