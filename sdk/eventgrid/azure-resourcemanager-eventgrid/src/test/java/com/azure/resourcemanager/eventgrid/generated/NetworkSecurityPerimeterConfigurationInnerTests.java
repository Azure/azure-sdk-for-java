// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.NetworkSecurityPerimeterConfigurationInner;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterAssociationAccessMode;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigProvisioningState;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssueSeverity;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssueType;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssues;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationProfile;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterInfo;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRule;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRuleDirection;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterSubscription;
import com.azure.resourcemanager.eventgrid.models.ResourceAssociation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Succeeded\",\"provisioningIssues\":[{\"name\":\"wtqabpxuckp\",\"properties\":{\"issueType\":\"ConfigurationPropagationFailure\",\"severity\":\"Error\",\"description\":\"ird\",\"suggestedResourceIds\":[\"sn\",\"wfl\",\"qmp\",\"zruwn\"],\"suggestedAccessRules\":[\"pxiwf\",\"ngjsaasi\",\"xtmkzjvkviir\"]}}],\"networkSecurityPerimeter\":{\"id\":\"grwsdp\",\"perimeterGuid\":\"atzv\",\"location\":\"glbyvi\"},\"resourceAssociation\":{\"name\":\"tbrxkjz\",\"accessMode\":\"Learning\"},\"profile\":{\"name\":\"fmsh\",\"accessRulesVersion\":\"fbkgozxwopdby\",\"accessRules\":[{\"fullyQualifiedArmId\":\"qaclnapxbiy\",\"name\":\"ugjknf\",\"type\":\"fcttuxuuyilfl\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"rehmr\",\"jhvsujztczyt\",\"jtwhauunf\",\"rnjlet\"],\"subscriptions\":[{}],\"networkSecurityPerimeters\":[{},{},{}],\"fullyQualifiedDomainNames\":[\"do\",\"ifamowazi\"],\"emailAddresses\":[\"nlqwzdvpiwhx\",\"szdtmaajquh\",\"xylrjvmtygjbmz\",\"ospspshckf\"],\"phoneNumbers\":[\"pms\",\"bpssdfp\",\"yogtieyujtvczkcn\",\"xrx\"]}},{\"fullyQualifiedArmId\":\"njdxvglnkvxl\",\"name\":\"aglqivbgkcvkh\",\"type\":\"vuqd\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"yp\",\"pubcpzgpxtivhjk\"],\"subscriptions\":[{},{},{},{}],\"networkSecurityPerimeters\":[{},{},{}],\"fullyQualifiedDomainNames\":[\"jxgpnrhgovfg\",\"ik\",\"mhha\",\"wjrmzvuporqzd\"],\"emailAddresses\":[\"dzvkfvxcnqmxq\",\"swokm\"],\"phoneNumbers\":[\"lgg\"]}},{\"fullyQualifiedArmId\":\"bemzqkzszuwi\",\"name\":\"glxxhljfpgpic\",\"type\":\"nzhrgmqgjsxvpqcb\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"thsqqgvriiba\"],\"subscriptions\":[{},{},{}],\"networkSecurityPerimeters\":[{}],\"fullyQualifiedDomainNames\":[\"rnxousxauzlwvsg\"],\"emailAddresses\":[\"hqf\",\"izvu\"],\"phoneNumbers\":[\"kjsvthnwpzteko\"]}},{\"fullyQualifiedArmId\":\"ribi\",\"name\":\"tgplucfota\",\"type\":\"c\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"cugswvxwlmzqw\",\"vtxnjmxmcuqud\",\"cvclxynpdk\",\"gfabuiyjibuzphdu\"],\"subscriptions\":[{},{}],\"networkSecurityPerimeters\":[{},{},{}],\"fullyQualifiedDomainNames\":[\"gox\",\"jiuqhibtozi\"],\"emailAddresses\":[\"jedmurrxxgewp\",\"tvqylkmqpzoyhlfb\",\"gwgcl\",\"xoe\"],\"phoneNumbers\":[\"njipnwjfujql\",\"fcbahhp\",\"pofoi\"]}}],\"diagnosticSettingsVersion\":\"w\",\"enabledLogCategories\":[\"lkmkkholvdndvi\",\"uogphuartvtiuky\"]}},\"id\":\"fchnmnah\",\"name\":\"nxhkxjqi\",\"type\":\"wrweoo\"}")
            .toObject(NetworkSecurityPerimeterConfigurationInner.class);
        Assertions.assertEquals(NetworkSecurityPerimeterConfigProvisioningState.SUCCEEDED, model.provisioningState());
        Assertions.assertEquals("wtqabpxuckp", model.provisioningIssues().get(0).name());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueType.CONFIGURATION_PROPAGATION_FAILURE,
            model.provisioningIssues().get(0).issueType());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueSeverity.ERROR,
            model.provisioningIssues().get(0).severity());
        Assertions.assertEquals("ird", model.provisioningIssues().get(0).description());
        Assertions.assertEquals("sn", model.provisioningIssues().get(0).suggestedResourceIds().get(0));
        Assertions.assertEquals("pxiwf", model.provisioningIssues().get(0).suggestedAccessRules().get(0));
        Assertions.assertEquals("grwsdp", model.networkSecurityPerimeter().id());
        Assertions.assertEquals("atzv", model.networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("glbyvi", model.networkSecurityPerimeter().location());
        Assertions.assertEquals("tbrxkjz", model.resourceAssociation().name());
        Assertions.assertEquals(NetworkSecurityPerimeterAssociationAccessMode.LEARNING,
            model.resourceAssociation().accessMode());
        Assertions.assertEquals("fmsh", model.profile().name());
        Assertions.assertEquals("fbkgozxwopdby", model.profile().accessRulesVersion());
        Assertions.assertEquals("qaclnapxbiy", model.profile().accessRules().get(0).fullyQualifiedArmId());
        Assertions.assertEquals("ugjknf", model.profile().accessRules().get(0).name());
        Assertions.assertEquals("fcttuxuuyilfl", model.profile().accessRules().get(0).type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND,
            model.profile().accessRules().get(0).direction());
        Assertions.assertEquals("rehmr", model.profile().accessRules().get(0).addressPrefixes().get(0));
        Assertions.assertEquals("do", model.profile().accessRules().get(0).fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("nlqwzdvpiwhx", model.profile().accessRules().get(0).emailAddresses().get(0));
        Assertions.assertEquals("pms", model.profile().accessRules().get(0).phoneNumbers().get(0));
        Assertions.assertEquals("w", model.profile().diagnosticSettingsVersion());
        Assertions.assertEquals("lkmkkholvdndvi", model.profile().enabledLogCategories().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationInner model = new NetworkSecurityPerimeterConfigurationInner()
            .withProvisioningState(NetworkSecurityPerimeterConfigProvisioningState.SUCCEEDED)
            .withProvisioningIssues(
                Arrays.asList(new NetworkSecurityPerimeterConfigurationIssues().withName("wtqabpxuckp")
                    .withIssueType(NetworkSecurityPerimeterConfigurationIssueType.CONFIGURATION_PROPAGATION_FAILURE)
                    .withSeverity(NetworkSecurityPerimeterConfigurationIssueSeverity.ERROR)
                    .withDescription("ird")
                    .withSuggestedResourceIds(Arrays.asList("sn", "wfl", "qmp", "zruwn"))
                    .withSuggestedAccessRules(Arrays.asList("pxiwf", "ngjsaasi", "xtmkzjvkviir"))))
            .withNetworkSecurityPerimeter(
                new NetworkSecurityPerimeterInfo().withId("grwsdp").withPerimeterGuid("atzv").withLocation("glbyvi"))
            .withResourceAssociation(new ResourceAssociation().withName("tbrxkjz")
                .withAccessMode(NetworkSecurityPerimeterAssociationAccessMode.LEARNING))
            .withProfile(new NetworkSecurityPerimeterConfigurationProfile().withName("fmsh")
                .withAccessRulesVersion("fbkgozxwopdby")
                .withAccessRules(Arrays.asList(
                    new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("qaclnapxbiy")
                        .withName("ugjknf")
                        .withType("fcttuxuuyilfl")
                        .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND)
                        .withAddressPrefixes(Arrays.asList("rehmr", "jhvsujztczyt", "jtwhauunf", "rnjlet"))
                        .withSubscriptions(Arrays.asList(new NetworkSecurityPerimeterSubscription()))
                        .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeterInfo(),
                            new NetworkSecurityPerimeterInfo(), new NetworkSecurityPerimeterInfo()))
                        .withFullyQualifiedDomainNames(Arrays.asList("do", "ifamowazi"))
                        .withEmailAddresses(
                            Arrays.asList("nlqwzdvpiwhx", "szdtmaajquh", "xylrjvmtygjbmz", "ospspshckf"))
                        .withPhoneNumbers(Arrays.asList("pms", "bpssdfp", "yogtieyujtvczkcn", "xrx")),
                    new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("njdxvglnkvxl")
                        .withName("aglqivbgkcvkh")
                        .withType("vuqd")
                        .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND)
                        .withAddressPrefixes(Arrays.asList("yp", "pubcpzgpxtivhjk"))
                        .withSubscriptions(Arrays.asList(new NetworkSecurityPerimeterSubscription(),
                            new NetworkSecurityPerimeterSubscription(), new NetworkSecurityPerimeterSubscription(),
                            new NetworkSecurityPerimeterSubscription()))
                        .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeterInfo(),
                            new NetworkSecurityPerimeterInfo(), new NetworkSecurityPerimeterInfo()))
                        .withFullyQualifiedDomainNames(Arrays.asList("jxgpnrhgovfg", "ik", "mhha", "wjrmzvuporqzd"))
                        .withEmailAddresses(Arrays.asList("dzvkfvxcnqmxq", "swokm"))
                        .withPhoneNumbers(Arrays.asList("lgg")),
                    new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("bemzqkzszuwi")
                        .withName("glxxhljfpgpic")
                        .withType("nzhrgmqgjsxvpqcb")
                        .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND)
                        .withAddressPrefixes(Arrays.asList("thsqqgvriiba"))
                        .withSubscriptions(Arrays.asList(new NetworkSecurityPerimeterSubscription(),
                            new NetworkSecurityPerimeterSubscription(), new NetworkSecurityPerimeterSubscription()))
                        .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeterInfo()))
                        .withFullyQualifiedDomainNames(Arrays.asList("rnxousxauzlwvsg"))
                        .withEmailAddresses(Arrays.asList("hqf", "izvu"))
                        .withPhoneNumbers(Arrays.asList("kjsvthnwpzteko")),
                    new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("ribi")
                        .withName("tgplucfota")
                        .withType("c")
                        .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND)
                        .withAddressPrefixes(
                            Arrays.asList("cugswvxwlmzqw", "vtxnjmxmcuqud", "cvclxynpdk", "gfabuiyjibuzphdu"))
                        .withSubscriptions(Arrays.asList(new NetworkSecurityPerimeterSubscription(),
                            new NetworkSecurityPerimeterSubscription()))
                        .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeterInfo(),
                            new NetworkSecurityPerimeterInfo(), new NetworkSecurityPerimeterInfo()))
                        .withFullyQualifiedDomainNames(Arrays.asList("gox", "jiuqhibtozi"))
                        .withEmailAddresses(Arrays.asList("jedmurrxxgewp", "tvqylkmqpzoyhlfb", "gwgcl", "xoe"))
                        .withPhoneNumbers(Arrays.asList("njipnwjfujql", "fcbahhp", "pofoi"))))
                .withDiagnosticSettingsVersion("w")
                .withEnabledLogCategories(Arrays.asList("lkmkkholvdndvi", "uogphuartvtiuky")));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationInner.class);
        Assertions.assertEquals(NetworkSecurityPerimeterConfigProvisioningState.SUCCEEDED, model.provisioningState());
        Assertions.assertEquals("wtqabpxuckp", model.provisioningIssues().get(0).name());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueType.CONFIGURATION_PROPAGATION_FAILURE,
            model.provisioningIssues().get(0).issueType());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueSeverity.ERROR,
            model.provisioningIssues().get(0).severity());
        Assertions.assertEquals("ird", model.provisioningIssues().get(0).description());
        Assertions.assertEquals("sn", model.provisioningIssues().get(0).suggestedResourceIds().get(0));
        Assertions.assertEquals("pxiwf", model.provisioningIssues().get(0).suggestedAccessRules().get(0));
        Assertions.assertEquals("grwsdp", model.networkSecurityPerimeter().id());
        Assertions.assertEquals("atzv", model.networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("glbyvi", model.networkSecurityPerimeter().location());
        Assertions.assertEquals("tbrxkjz", model.resourceAssociation().name());
        Assertions.assertEquals(NetworkSecurityPerimeterAssociationAccessMode.LEARNING,
            model.resourceAssociation().accessMode());
        Assertions.assertEquals("fmsh", model.profile().name());
        Assertions.assertEquals("fbkgozxwopdby", model.profile().accessRulesVersion());
        Assertions.assertEquals("qaclnapxbiy", model.profile().accessRules().get(0).fullyQualifiedArmId());
        Assertions.assertEquals("ugjknf", model.profile().accessRules().get(0).name());
        Assertions.assertEquals("fcttuxuuyilfl", model.profile().accessRules().get(0).type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND,
            model.profile().accessRules().get(0).direction());
        Assertions.assertEquals("rehmr", model.profile().accessRules().get(0).addressPrefixes().get(0));
        Assertions.assertEquals("do", model.profile().accessRules().get(0).fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("nlqwzdvpiwhx", model.profile().accessRules().get(0).emailAddresses().get(0));
        Assertions.assertEquals("pms", model.profile().accessRules().get(0).phoneNumbers().get(0));
        Assertions.assertEquals("w", model.profile().diagnosticSettingsVersion());
        Assertions.assertEquals("lkmkkholvdndvi", model.profile().enabledLogCategories().get(0));
    }
}
