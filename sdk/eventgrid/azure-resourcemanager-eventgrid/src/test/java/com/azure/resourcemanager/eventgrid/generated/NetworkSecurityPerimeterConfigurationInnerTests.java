// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.NetworkSecurityPerimeterConfigurationInner;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterAssociationAccessMode;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigProvisioningState;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssues;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssueSeverity;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationIssueType;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterConfigurationProfile;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterInfo;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRule;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterProfileAccessRuleDirection;
import com.azure.resourcemanager.eventgrid.models.NetworkSecurityPerimeterSubscription;
import com.azure.resourcemanager.eventgrid.models.ResourceAssociation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Canceled\",\"provisioningIssues\":[{\"name\":\"dzqavbpdqmjxlyyz\",\"properties\":{\"issueType\":\"MissingIdentityConfiguration\",\"severity\":\"Error\",\"description\":\"lmjjyuo\",\"suggestedResourceIds\":[\"obaxkjeytu\"],\"suggestedAccessRules\":[\"fjkwrusnkq\",\"hsyrqunj\"]}},{\"name\":\"denxau\",\"properties\":{\"issueType\":\"Other\",\"severity\":\"Warning\",\"description\":\"ifmjnn\",\"suggestedResourceIds\":[\"qabpxuckpggqow\",\"yirdhlisngwflqq\",\"pizruwnpqxpxiw\"],\"suggestedAccessRules\":[\"gjsaasiixtm\",\"zjvkviirhgfgrws\"]}},{\"name\":\"gratzvzbglbyvict\",\"properties\":{\"issueType\":\"Other\",\"severity\":\"Warning\",\"description\":\"zwrgxffmshkwfbk\",\"suggestedResourceIds\":[\"xwopdbydpizqa\",\"lnapxbiygn\",\"gjkn\",\"smfcttuxuuyilfl\"],\"suggestedAccessRules\":[\"quvre\",\"mrnjh\"]}}],\"networkSecurityPerimeter\":{\"id\":\"jztczytqj\",\"perimeterGuid\":\"h\",\"location\":\"unfprnjletlxs\"},\"resourceAssociation\":{\"name\":\"ddoui\",\"accessMode\":\"Audit\"},\"profile\":{\"name\":\"aziynknlqwzdv\",\"accessRulesVersion\":\"w\",\"accessRules\":[{\"fullyQualifiedArmId\":\"zdtmaajquhuxylrj\",\"name\":\"ty\",\"type\":\"bmzyospsps\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"jpmspbpssdfppy\",\"gt\",\"eyujtvczkcnyxrx\",\"unjdx\"],\"subscriptions\":[{},{}],\"networkSecurityPerimeters\":[{},{}],\"fullyQualifiedDomainNames\":[\"lxpaglqivbgkcv\"],\"emailAddresses\":[\"zvuqdflvon\",\"yp\",\"pubcpzgpxtivhjk\"],\"phoneNumbers\":[\"ibg\",\"jxgpnrhgovfg\",\"ik\",\"mhha\"]}},{\"fullyQualifiedArmId\":\"jrmzvupor\",\"name\":\"dfuyd\",\"type\":\"kfvxcnq\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"okmvkhlggd\",\"bemzqkzszuwi\",\"tglxx\"],\"subscriptions\":[{},{},{}],\"networkSecurityPerimeters\":[{}],\"fullyQualifiedDomainNames\":[\"icrmnzh\",\"gmqgjs\",\"vpqcb\",\"rmbodt\"],\"emailAddresses\":[\"qgvriibakcla\",\"jfrnxousxauzlwv\",\"gmwohqfzizvu\",\"mmkjsvthnwpztek\"],\"phoneNumbers\":[\"ribi\",\"ttgplucfotangcf\"]}},{\"fullyQualifiedArmId\":\"ykzcugswvxwl\",\"name\":\"qwm\",\"type\":\"xnjmxm\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"cvclxynpdk\",\"gfabuiyjibuzphdu\"],\"subscriptions\":[{},{}],\"networkSecurityPerimeters\":[{},{},{}],\"fullyQualifiedDomainNames\":[\"gox\",\"jiuqhibtozi\"],\"emailAddresses\":[\"jedmurrxxgewp\",\"tvqylkmqpzoyhlfb\",\"gwgcl\",\"xoe\"],\"phoneNumbers\":[\"njipnwjfujql\",\"fcbahhp\",\"pofoi\"]}},{\"fullyQualifiedArmId\":\"w\",\"name\":\"ilkmk\",\"type\":\"olvdnd\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"phuartv\",\"iukyefchnmna\",\"mnxhkxjqirwrweo\"],\"subscriptions\":[{},{}],\"networkSecurityPerimeters\":[{}],\"fullyQualifiedDomainNames\":[\"xwrsnew\"],\"emailAddresses\":[\"qvbubqmamhs\",\"cx\"],\"phoneNumbers\":[\"gaztt\"]}}],\"diagnosticSettingsVersion\":\"o\",\"enabledLogCategories\":[\"mfqhppubowse\",\"dfgkmtdh\",\"rngbtcjuahokqtob\"]}},\"id\":\"auxofshfph\",\"name\":\"pnulaiywzej\",\"type\":\"whslwkoj\"}")
            .toObject(NetworkSecurityPerimeterConfigurationInner.class);
        Assertions.assertEquals(NetworkSecurityPerimeterConfigProvisioningState.CANCELED, model.provisioningState());
        Assertions.assertEquals("dzqavbpdqmjxlyyz", model.provisioningIssues().get(0).name());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueType.MISSING_IDENTITY_CONFIGURATION,
            model.provisioningIssues().get(0).issueType());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueSeverity.ERROR,
            model.provisioningIssues().get(0).severity());
        Assertions.assertEquals("lmjjyuo", model.provisioningIssues().get(0).description());
        Assertions.assertEquals("obaxkjeytu", model.provisioningIssues().get(0).suggestedResourceIds().get(0));
        Assertions.assertEquals("fjkwrusnkq", model.provisioningIssues().get(0).suggestedAccessRules().get(0));
        Assertions.assertEquals("jztczytqj", model.networkSecurityPerimeter().id());
        Assertions.assertEquals("h", model.networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("unfprnjletlxs", model.networkSecurityPerimeter().location());
        Assertions.assertEquals("ddoui", model.resourceAssociation().name());
        Assertions.assertEquals(NetworkSecurityPerimeterAssociationAccessMode.AUDIT,
            model.resourceAssociation().accessMode());
        Assertions.assertEquals("aziynknlqwzdv", model.profile().name());
        Assertions.assertEquals("w", model.profile().accessRulesVersion());
        Assertions.assertEquals("zdtmaajquhuxylrj", model.profile().accessRules().get(0).fullyQualifiedArmId());
        Assertions.assertEquals("ty", model.profile().accessRules().get(0).name());
        Assertions.assertEquals("bmzyospsps", model.profile().accessRules().get(0).type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND,
            model.profile().accessRules().get(0).direction());
        Assertions.assertEquals("jpmspbpssdfppy", model.profile().accessRules().get(0).addressPrefixes().get(0));
        Assertions.assertEquals("lxpaglqivbgkcv",
            model.profile().accessRules().get(0).fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("zvuqdflvon", model.profile().accessRules().get(0).emailAddresses().get(0));
        Assertions.assertEquals("ibg", model.profile().accessRules().get(0).phoneNumbers().get(0));
        Assertions.assertEquals("o", model.profile().diagnosticSettingsVersion());
        Assertions.assertEquals("mfqhppubowse", model.profile().enabledLogCategories().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationInner model
            = new NetworkSecurityPerimeterConfigurationInner()
                .withProvisioningState(NetworkSecurityPerimeterConfigProvisioningState.CANCELED)
                .withProvisioningIssues(
                    Arrays.asList(
                        new NetworkSecurityPerimeterConfigurationIssues().withName("dzqavbpdqmjxlyyz")
                            .withIssueType(
                                NetworkSecurityPerimeterConfigurationIssueType.MISSING_IDENTITY_CONFIGURATION)
                            .withSeverity(NetworkSecurityPerimeterConfigurationIssueSeverity.ERROR)
                            .withDescription("lmjjyuo")
                            .withSuggestedResourceIds(Arrays.asList("obaxkjeytu"))
                            .withSuggestedAccessRules(Arrays.asList("fjkwrusnkq", "hsyrqunj")),
                        new NetworkSecurityPerimeterConfigurationIssues().withName("denxau")
                            .withIssueType(NetworkSecurityPerimeterConfigurationIssueType.OTHER)
                            .withSeverity(NetworkSecurityPerimeterConfigurationIssueSeverity.WARNING)
                            .withDescription("ifmjnn")
                            .withSuggestedResourceIds(
                                Arrays.asList("qabpxuckpggqow", "yirdhlisngwflqq", "pizruwnpqxpxiw"))
                            .withSuggestedAccessRules(Arrays.asList("gjsaasiixtm", "zjvkviirhgfgrws")),
                        new NetworkSecurityPerimeterConfigurationIssues().withName("gratzvzbglbyvict")
                            .withIssueType(NetworkSecurityPerimeterConfigurationIssueType.OTHER)
                            .withSeverity(NetworkSecurityPerimeterConfigurationIssueSeverity.WARNING)
                            .withDescription("zwrgxffmshkwfbk")
                            .withSuggestedResourceIds(
                                Arrays.asList("xwopdbydpizqa", "lnapxbiygn", "gjkn", "smfcttuxuuyilfl"))
                            .withSuggestedAccessRules(Arrays.asList("quvre", "mrnjh"))))
                .withNetworkSecurityPerimeter(new NetworkSecurityPerimeterInfo().withId("jztczytqj")
                    .withPerimeterGuid("h")
                    .withLocation("unfprnjletlxs"))
                .withResourceAssociation(new ResourceAssociation().withName("ddoui")
                    .withAccessMode(NetworkSecurityPerimeterAssociationAccessMode.AUDIT))
                .withProfile(new NetworkSecurityPerimeterConfigurationProfile().withName("aziynknlqwzdv")
                    .withAccessRulesVersion("w")
                    .withAccessRules(Arrays.asList(
                        new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("zdtmaajquhuxylrj")
                            .withName("ty")
                            .withType("bmzyospsps")
                            .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND)
                            .withAddressPrefixes(Arrays.asList("jpmspbpssdfppy", "gt", "eyujtvczkcnyxrx", "unjdx"))
                            .withSubscriptions(Arrays.asList(new NetworkSecurityPerimeterSubscription(),
                                new NetworkSecurityPerimeterSubscription()))
                            .withNetworkSecurityPerimeters(
                                Arrays.asList(new NetworkSecurityPerimeterInfo(), new NetworkSecurityPerimeterInfo()))
                            .withFullyQualifiedDomainNames(Arrays.asList("lxpaglqivbgkcv"))
                            .withEmailAddresses(Arrays.asList("zvuqdflvon", "yp", "pubcpzgpxtivhjk"))
                            .withPhoneNumbers(Arrays.asList("ibg", "jxgpnrhgovfg", "ik", "mhha")),
                        new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("jrmzvupor")
                            .withName("dfuyd")
                            .withType("kfvxcnq")
                            .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND)
                            .withAddressPrefixes(Arrays.asList("okmvkhlggd", "bemzqkzszuwi", "tglxx"))
                            .withSubscriptions(Arrays.asList(new NetworkSecurityPerimeterSubscription(),
                                new NetworkSecurityPerimeterSubscription(), new NetworkSecurityPerimeterSubscription()))
                            .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeterInfo()))
                            .withFullyQualifiedDomainNames(Arrays.asList("icrmnzh", "gmqgjs", "vpqcb", "rmbodt"))
                            .withEmailAddresses(
                                Arrays.asList("qgvriibakcla", "jfrnxousxauzlwv", "gmwohqfzizvu", "mmkjsvthnwpztek"))
                            .withPhoneNumbers(Arrays.asList("ribi", "ttgplucfotangcf")),
                        new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("ykzcugswvxwl")
                            .withName("qwm")
                            .withType("xnjmxm")
                            .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.INBOUND)
                            .withAddressPrefixes(Arrays.asList("cvclxynpdk", "gfabuiyjibuzphdu"))
                            .withSubscriptions(Arrays.asList(new NetworkSecurityPerimeterSubscription(),
                                new NetworkSecurityPerimeterSubscription()))
                            .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeterInfo(),
                                new NetworkSecurityPerimeterInfo(), new NetworkSecurityPerimeterInfo()))
                            .withFullyQualifiedDomainNames(Arrays.asList("gox", "jiuqhibtozi"))
                            .withEmailAddresses(Arrays.asList("jedmurrxxgewp", "tvqylkmqpzoyhlfb", "gwgcl", "xoe"))
                            .withPhoneNumbers(Arrays.asList("njipnwjfujql", "fcbahhp", "pofoi")),
                        new NetworkSecurityPerimeterProfileAccessRule().withFullyQualifiedArmId("w")
                            .withName("ilkmk")
                            .withType("olvdnd")
                            .withDirection(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND)
                            .withAddressPrefixes(Arrays.asList("phuartv", "iukyefchnmna", "mnxhkxjqirwrweo"))
                            .withSubscriptions(Arrays.asList(new NetworkSecurityPerimeterSubscription(),
                                new NetworkSecurityPerimeterSubscription()))
                            .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeterInfo()))
                            .withFullyQualifiedDomainNames(Arrays.asList("xwrsnew"))
                            .withEmailAddresses(Arrays.asList("qvbubqmamhs", "cx"))
                            .withPhoneNumbers(Arrays.asList("gaztt"))))
                    .withDiagnosticSettingsVersion("o")
                    .withEnabledLogCategories(Arrays.asList("mfqhppubowse", "dfgkmtdh", "rngbtcjuahokqtob")));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationInner.class);
        Assertions.assertEquals(NetworkSecurityPerimeterConfigProvisioningState.CANCELED, model.provisioningState());
        Assertions.assertEquals("dzqavbpdqmjxlyyz", model.provisioningIssues().get(0).name());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueType.MISSING_IDENTITY_CONFIGURATION,
            model.provisioningIssues().get(0).issueType());
        Assertions.assertEquals(NetworkSecurityPerimeterConfigurationIssueSeverity.ERROR,
            model.provisioningIssues().get(0).severity());
        Assertions.assertEquals("lmjjyuo", model.provisioningIssues().get(0).description());
        Assertions.assertEquals("obaxkjeytu", model.provisioningIssues().get(0).suggestedResourceIds().get(0));
        Assertions.assertEquals("fjkwrusnkq", model.provisioningIssues().get(0).suggestedAccessRules().get(0));
        Assertions.assertEquals("jztczytqj", model.networkSecurityPerimeter().id());
        Assertions.assertEquals("h", model.networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("unfprnjletlxs", model.networkSecurityPerimeter().location());
        Assertions.assertEquals("ddoui", model.resourceAssociation().name());
        Assertions.assertEquals(NetworkSecurityPerimeterAssociationAccessMode.AUDIT,
            model.resourceAssociation().accessMode());
        Assertions.assertEquals("aziynknlqwzdv", model.profile().name());
        Assertions.assertEquals("w", model.profile().accessRulesVersion());
        Assertions.assertEquals("zdtmaajquhuxylrj", model.profile().accessRules().get(0).fullyQualifiedArmId());
        Assertions.assertEquals("ty", model.profile().accessRules().get(0).name());
        Assertions.assertEquals("bmzyospsps", model.profile().accessRules().get(0).type());
        Assertions.assertEquals(NetworkSecurityPerimeterProfileAccessRuleDirection.OUTBOUND,
            model.profile().accessRules().get(0).direction());
        Assertions.assertEquals("jpmspbpssdfppy", model.profile().accessRules().get(0).addressPrefixes().get(0));
        Assertions.assertEquals("lxpaglqivbgkcv",
            model.profile().accessRules().get(0).fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("zvuqdflvon", model.profile().accessRules().get(0).emailAddresses().get(0));
        Assertions.assertEquals("ibg", model.profile().accessRules().get(0).phoneNumbers().get(0));
        Assertions.assertEquals("o", model.profile().diagnosticSettingsVersion());
        Assertions.assertEquals("mfqhppubowse", model.profile().enabledLogCategories().get(0));
    }
}
