// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner;
import com.azure.resourcemanager.eventgrid.models.ResourceRegionType;
import com.azure.resourcemanager.eventgrid.models.TopicTypeAdditionalEnforcedPermission;
import com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState;
import com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TopicTypeInfoInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TopicTypeInfoInner model = BinaryData.fromString(
            "{\"properties\":{\"provider\":\"carkuzlb\",\"displayName\":\"ndtsnxawqytll\",\"description\":\"yzm\",\"resourceRegionType\":\"RegionalResource\",\"provisioningState\":\"Updating\",\"supportedLocations\":[\"xak\",\"kywymxgaabj\"],\"sourceResourceFormat\":\"tfohf\",\"supportedScopesForSource\":[\"AzureSubscription\",\"ManagementGroup\",\"ResourceGroup\",\"Resource\"],\"areRegionalAndGlobalSourcesSupported\":true,\"additionalEnforcedPermissions\":[{\"permissionName\":\"dyjqu\",\"isDataAction\":false},{\"permissionName\":\"rra\",\"isDataAction\":false},{\"permissionName\":\"csuehogddac\",\"isDataAction\":true},{\"permissionName\":\"ydl\",\"isDataAction\":false}]},\"id\":\"ywmhmptyrilkfbnr\",\"name\":\"qxvztpbnfnqtxjt\",\"type\":\"m\"}")
            .toObject(TopicTypeInfoInner.class);
        Assertions.assertEquals("carkuzlb", model.provider());
        Assertions.assertEquals("ndtsnxawqytll", model.displayName());
        Assertions.assertEquals("yzm", model.description());
        Assertions.assertEquals(ResourceRegionType.REGIONAL_RESOURCE, model.resourceRegionType());
        Assertions.assertEquals(TopicTypeProvisioningState.UPDATING, model.provisioningState());
        Assertions.assertEquals("xak", model.supportedLocations().get(0));
        Assertions.assertEquals("tfohf", model.sourceResourceFormat());
        Assertions.assertEquals(TopicTypeSourceScope.AZURE_SUBSCRIPTION, model.supportedScopesForSource().get(0));
        Assertions.assertTrue(model.areRegionalAndGlobalSourcesSupported());
        Assertions.assertEquals("dyjqu", model.additionalEnforcedPermissions().get(0).permissionName());
        Assertions.assertFalse(model.additionalEnforcedPermissions().get(0).isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TopicTypeInfoInner model = new TopicTypeInfoInner().withProvider("carkuzlb")
            .withDisplayName("ndtsnxawqytll")
            .withDescription("yzm")
            .withResourceRegionType(ResourceRegionType.REGIONAL_RESOURCE)
            .withProvisioningState(TopicTypeProvisioningState.UPDATING)
            .withSupportedLocations(Arrays.asList("xak", "kywymxgaabj"))
            .withSourceResourceFormat("tfohf")
            .withSupportedScopesForSource(
                Arrays.asList(TopicTypeSourceScope.AZURE_SUBSCRIPTION, TopicTypeSourceScope.MANAGEMENT_GROUP,
                    TopicTypeSourceScope.RESOURCE_GROUP, TopicTypeSourceScope.RESOURCE))
            .withAreRegionalAndGlobalSourcesSupported(true)
            .withAdditionalEnforcedPermissions(Arrays.asList(
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("dyjqu").withIsDataAction(false),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("rra").withIsDataAction(false),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("csuehogddac").withIsDataAction(true),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("ydl").withIsDataAction(false)));
        model = BinaryData.fromObject(model).toObject(TopicTypeInfoInner.class);
        Assertions.assertEquals("carkuzlb", model.provider());
        Assertions.assertEquals("ndtsnxawqytll", model.displayName());
        Assertions.assertEquals("yzm", model.description());
        Assertions.assertEquals(ResourceRegionType.REGIONAL_RESOURCE, model.resourceRegionType());
        Assertions.assertEquals(TopicTypeProvisioningState.UPDATING, model.provisioningState());
        Assertions.assertEquals("xak", model.supportedLocations().get(0));
        Assertions.assertEquals("tfohf", model.sourceResourceFormat());
        Assertions.assertEquals(TopicTypeSourceScope.AZURE_SUBSCRIPTION, model.supportedScopesForSource().get(0));
        Assertions.assertTrue(model.areRegionalAndGlobalSourcesSupported());
        Assertions.assertEquals("dyjqu", model.additionalEnforcedPermissions().get(0).permissionName());
        Assertions.assertFalse(model.additionalEnforcedPermissions().get(0).isDataAction());
    }
}
