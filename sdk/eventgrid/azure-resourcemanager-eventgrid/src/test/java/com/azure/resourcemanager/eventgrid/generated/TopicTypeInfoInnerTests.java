// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner;
import com.azure.resourcemanager.eventgrid.models.ResourceRegionType;
import com.azure.resourcemanager.eventgrid.models.TopicTypeAdditionalEnforcedPermission;
import com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState;
import com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TopicTypeInfoInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TopicTypeInfoInner model = BinaryData.fromString(
            "{\"properties\":{\"provider\":\"idftujwjjufwbe\",\"displayName\":\"k\",\"description\":\"rhtssr\",\"resourceRegionType\":\"RegionalResource\",\"provisioningState\":\"Canceled\",\"supportedLocations\":[\"azcvjyt\",\"qswbqerzwx\",\"ytxtdgu\",\"vlbpktgdstyou\"],\"sourceResourceFormat\":\"bewreswmowegmmut\",\"supportedScopesForSource\":[\"ResourceGroup\"],\"areRegionalAndGlobalSourcesSupported\":true,\"additionalEnforcedPermissions\":[{\"permissionName\":\"gijiitnspxlzd\",\"isDataAction\":false},{\"permissionName\":\"rijwai\",\"isDataAction\":false},{\"permissionName\":\"raybfueqfr\",\"isDataAction\":true},{\"permissionName\":\"dgrhydkygywezs\",\"isDataAction\":false}]},\"id\":\"ca\",\"name\":\"ygzmxieqvdsmak\",\"type\":\"ixqcahyhxalybxaw\"}")
            .toObject(TopicTypeInfoInner.class);
        Assertions.assertEquals("idftujwjjufwbe", model.provider());
        Assertions.assertEquals("k", model.displayName());
        Assertions.assertEquals("rhtssr", model.description());
        Assertions.assertEquals(ResourceRegionType.REGIONAL_RESOURCE, model.resourceRegionType());
        Assertions.assertEquals(TopicTypeProvisioningState.CANCELED, model.provisioningState());
        Assertions.assertEquals("azcvjyt", model.supportedLocations().get(0));
        Assertions.assertEquals("bewreswmowegmmut", model.sourceResourceFormat());
        Assertions.assertEquals(TopicTypeSourceScope.RESOURCE_GROUP, model.supportedScopesForSource().get(0));
        Assertions.assertEquals(true, model.areRegionalAndGlobalSourcesSupported());
        Assertions.assertEquals("gijiitnspxlzd", model.additionalEnforcedPermissions().get(0).permissionName());
        Assertions.assertEquals(false, model.additionalEnforcedPermissions().get(0).isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TopicTypeInfoInner model = new TopicTypeInfoInner().withProvider("idftujwjjufwbe").withDisplayName("k")
            .withDescription("rhtssr").withResourceRegionType(ResourceRegionType.REGIONAL_RESOURCE)
            .withProvisioningState(TopicTypeProvisioningState.CANCELED)
            .withSupportedLocations(Arrays.asList("azcvjyt", "qswbqerzwx", "ytxtdgu", "vlbpktgdstyou"))
            .withSourceResourceFormat("bewreswmowegmmut")
            .withSupportedScopesForSource(Arrays.asList(TopicTypeSourceScope.RESOURCE_GROUP))
            .withAreRegionalAndGlobalSourcesSupported(true)
            .withAdditionalEnforcedPermissions(Arrays.asList(
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("gijiitnspxlzd").withIsDataAction(false),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("rijwai").withIsDataAction(false),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("raybfueqfr").withIsDataAction(true),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("dgrhydkygywezs")
                    .withIsDataAction(false)));
        model = BinaryData.fromObject(model).toObject(TopicTypeInfoInner.class);
        Assertions.assertEquals("idftujwjjufwbe", model.provider());
        Assertions.assertEquals("k", model.displayName());
        Assertions.assertEquals("rhtssr", model.description());
        Assertions.assertEquals(ResourceRegionType.REGIONAL_RESOURCE, model.resourceRegionType());
        Assertions.assertEquals(TopicTypeProvisioningState.CANCELED, model.provisioningState());
        Assertions.assertEquals("azcvjyt", model.supportedLocations().get(0));
        Assertions.assertEquals("bewreswmowegmmut", model.sourceResourceFormat());
        Assertions.assertEquals(TopicTypeSourceScope.RESOURCE_GROUP, model.supportedScopesForSource().get(0));
        Assertions.assertEquals(true, model.areRegionalAndGlobalSourcesSupported());
        Assertions.assertEquals("gijiitnspxlzd", model.additionalEnforcedPermissions().get(0).permissionName());
        Assertions.assertEquals(false, model.additionalEnforcedPermissions().get(0).isDataAction());
    }
}
