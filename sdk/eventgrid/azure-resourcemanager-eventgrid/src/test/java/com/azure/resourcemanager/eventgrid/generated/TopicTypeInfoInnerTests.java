// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventgrid.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner;
import com.azure.resourcemanager.eventgrid.models.ResourceRegionType;
import com.azure.resourcemanager.eventgrid.models.TopicTypeAdditionalEnforcedPermission;
import com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState;
import com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TopicTypeInfoInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TopicTypeInfoInner model = BinaryData.fromString(
            "{\"properties\":{\"provider\":\"lkjuvsmbmslzoyov\",\"displayName\":\"dbpqvybefgvm\",\"description\":\"okcvtlubses\",\"resourceRegionType\":\"RegionalResource\",\"provisioningState\":\"Deleting\",\"supportedLocations\":[\"rhunlp\"],\"sourceResourceFormat\":\"ykycndzfqi\",\"supportedScopesForSource\":[\"Resource\",\"ResourceGroup\",\"ManagementGroup\",\"Resource\"],\"areRegionalAndGlobalSourcesSupported\":false,\"additionalEnforcedPermissions\":[{\"permissionName\":\"aglt\",\"isDataAction\":true},{\"permissionName\":\"eonqlnfwmy\",\"isDataAction\":true}]},\"id\":\"qdbpbhfckdvezc\",\"name\":\"cssbzhddu\",\"type\":\"bnqfblhk\"}")
            .toObject(TopicTypeInfoInner.class);
        Assertions.assertEquals("lkjuvsmbmslzoyov", model.provider());
        Assertions.assertEquals("dbpqvybefgvm", model.displayName());
        Assertions.assertEquals("okcvtlubses", model.description());
        Assertions.assertEquals(ResourceRegionType.REGIONAL_RESOURCE, model.resourceRegionType());
        Assertions.assertEquals(TopicTypeProvisioningState.DELETING, model.provisioningState());
        Assertions.assertEquals("rhunlp", model.supportedLocations().get(0));
        Assertions.assertEquals("ykycndzfqi", model.sourceResourceFormat());
        Assertions.assertEquals(TopicTypeSourceScope.RESOURCE, model.supportedScopesForSource().get(0));
        Assertions.assertEquals(false, model.areRegionalAndGlobalSourcesSupported());
        Assertions.assertEquals("aglt", model.additionalEnforcedPermissions().get(0).permissionName());
        Assertions.assertEquals(true, model.additionalEnforcedPermissions().get(0).isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TopicTypeInfoInner model = new TopicTypeInfoInner().withProvider("lkjuvsmbmslzoyov")
            .withDisplayName("dbpqvybefgvm")
            .withDescription("okcvtlubses")
            .withResourceRegionType(ResourceRegionType.REGIONAL_RESOURCE)
            .withProvisioningState(TopicTypeProvisioningState.DELETING)
            .withSupportedLocations(Arrays.asList("rhunlp"))
            .withSourceResourceFormat("ykycndzfqi")
            .withSupportedScopesForSource(
                Arrays.asList(TopicTypeSourceScope.RESOURCE, TopicTypeSourceScope.RESOURCE_GROUP,
                    TopicTypeSourceScope.MANAGEMENT_GROUP, TopicTypeSourceScope.RESOURCE))
            .withAreRegionalAndGlobalSourcesSupported(false)
            .withAdditionalEnforcedPermissions(Arrays.asList(
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("aglt").withIsDataAction(true),
                new TopicTypeAdditionalEnforcedPermission().withPermissionName("eonqlnfwmy").withIsDataAction(true)));
        model = BinaryData.fromObject(model).toObject(TopicTypeInfoInner.class);
        Assertions.assertEquals("lkjuvsmbmslzoyov", model.provider());
        Assertions.assertEquals("dbpqvybefgvm", model.displayName());
        Assertions.assertEquals("okcvtlubses", model.description());
        Assertions.assertEquals(ResourceRegionType.REGIONAL_RESOURCE, model.resourceRegionType());
        Assertions.assertEquals(TopicTypeProvisioningState.DELETING, model.provisioningState());
        Assertions.assertEquals("rhunlp", model.supportedLocations().get(0));
        Assertions.assertEquals("ykycndzfqi", model.sourceResourceFormat());
        Assertions.assertEquals(TopicTypeSourceScope.RESOURCE, model.supportedScopesForSource().get(0));
        Assertions.assertEquals(false, model.areRegionalAndGlobalSourcesSupported());
        Assertions.assertEquals("aglt", model.additionalEnforcedPermissions().get(0).permissionName());
        Assertions.assertEquals(true, model.additionalEnforcedPermissions().get(0).isDataAction());
    }
}
