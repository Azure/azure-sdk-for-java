/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.azure.messaging.eventgrid.models;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Schema of the Data property of an EventGridEvent for an
 * Microsoft.MachineLearningServices.DatasetDriftDetected event.
 */
public class MachineLearningServicesDatasetDriftDetectedEventData {
    /**
     * The ID of the data drift monitor that triggered the event.
     */
    @JsonProperty(value = "dataDriftId")
    private String dataDriftId;

    /**
     * The name of the data drift monitor that triggered the event.
     */
    @JsonProperty(value = "dataDriftName")
    private String dataDriftName;

    /**
     * The ID of the Run that detected data drift.
     */
    @JsonProperty(value = "runId")
    private String runId;

    /**
     * The ID of the base Dataset used to detect drift.
     */
    @JsonProperty(value = "baseDatasetId")
    private String baseDatasetId;

    /**
     * The ID of the target Dataset used to detect drift.
     */
    @JsonProperty(value = "targetDatasetId")
    private String targetDatasetId;

    /**
     * The coefficient result that triggered the event.
     */
    @JsonProperty(value = "driftCoefficient")
    private Double driftCoefficient;

    /**
     * The start time of the target dataset time series that resulted in drift
     * detection.
     */
    @JsonProperty(value = "startTime")
    private DateTime startTime;

    /**
     * The end time of the target dataset time series that resulted in drift
     * detection.
     */
    @JsonProperty(value = "endTime")
    private DateTime endTime;

    /**
     * Get the ID of the data drift monitor that triggered the event.
     *
     * @return the dataDriftId value
     */
    public String dataDriftId() {
        return this.dataDriftId;
    }

    /**
     * Set the ID of the data drift monitor that triggered the event.
     *
     * @param dataDriftId the dataDriftId value to set
     * @return the MachineLearningServicesDatasetDriftDetectedEventData object itself.
     */
    public MachineLearningServicesDatasetDriftDetectedEventData withDataDriftId(String dataDriftId) {
        this.dataDriftId = dataDriftId;
        return this;
    }

    /**
     * Get the name of the data drift monitor that triggered the event.
     *
     * @return the dataDriftName value
     */
    public String dataDriftName() {
        return this.dataDriftName;
    }

    /**
     * Set the name of the data drift monitor that triggered the event.
     *
     * @param dataDriftName the dataDriftName value to set
     * @return the MachineLearningServicesDatasetDriftDetectedEventData object itself.
     */
    public MachineLearningServicesDatasetDriftDetectedEventData withDataDriftName(String dataDriftName) {
        this.dataDriftName = dataDriftName;
        return this;
    }

    /**
     * Get the ID of the Run that detected data drift.
     *
     * @return the runId value
     */
    public String runId() {
        return this.runId;
    }

    /**
     * Set the ID of the Run that detected data drift.
     *
     * @param runId the runId value to set
     * @return the MachineLearningServicesDatasetDriftDetectedEventData object itself.
     */
    public MachineLearningServicesDatasetDriftDetectedEventData withRunId(String runId) {
        this.runId = runId;
        return this;
    }

    /**
     * Get the ID of the base Dataset used to detect drift.
     *
     * @return the baseDatasetId value
     */
    public String baseDatasetId() {
        return this.baseDatasetId;
    }

    /**
     * Set the ID of the base Dataset used to detect drift.
     *
     * @param baseDatasetId the baseDatasetId value to set
     * @return the MachineLearningServicesDatasetDriftDetectedEventData object itself.
     */
    public MachineLearningServicesDatasetDriftDetectedEventData withBaseDatasetId(String baseDatasetId) {
        this.baseDatasetId = baseDatasetId;
        return this;
    }

    /**
     * Get the ID of the target Dataset used to detect drift.
     *
     * @return the targetDatasetId value
     */
    public String targetDatasetId() {
        return this.targetDatasetId;
    }

    /**
     * Set the ID of the target Dataset used to detect drift.
     *
     * @param targetDatasetId the targetDatasetId value to set
     * @return the MachineLearningServicesDatasetDriftDetectedEventData object itself.
     */
    public MachineLearningServicesDatasetDriftDetectedEventData withTargetDatasetId(String targetDatasetId) {
        this.targetDatasetId = targetDatasetId;
        return this;
    }

    /**
     * Get the coefficient result that triggered the event.
     *
     * @return the driftCoefficient value
     */
    public Double driftCoefficient() {
        return this.driftCoefficient;
    }

    /**
     * Set the coefficient result that triggered the event.
     *
     * @param driftCoefficient the driftCoefficient value to set
     * @return the MachineLearningServicesDatasetDriftDetectedEventData object itself.
     */
    public MachineLearningServicesDatasetDriftDetectedEventData withDriftCoefficient(Double driftCoefficient) {
        this.driftCoefficient = driftCoefficient;
        return this;
    }

    /**
     * Get the start time of the target dataset time series that resulted in drift detection.
     *
     * @return the startTime value
     */
    public DateTime startTime() {
        return this.startTime;
    }

    /**
     * Set the start time of the target dataset time series that resulted in drift detection.
     *
     * @param startTime the startTime value to set
     * @return the MachineLearningServicesDatasetDriftDetectedEventData object itself.
     */
    public MachineLearningServicesDatasetDriftDetectedEventData withStartTime(DateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the end time of the target dataset time series that resulted in drift detection.
     *
     * @return the endTime value
     */
    public DateTime endTime() {
        return this.endTime;
    }

    /**
     * Set the end time of the target dataset time series that resulted in drift detection.
     *
     * @param endTime the endTime value to set
     * @return the MachineLearningServicesDatasetDriftDetectedEventData object itself.
     */
    public MachineLearningServicesDatasetDriftDetectedEventData withEndTime(DateTime endTime) {
        this.endTime = endTime;
        return this;
    }

}
