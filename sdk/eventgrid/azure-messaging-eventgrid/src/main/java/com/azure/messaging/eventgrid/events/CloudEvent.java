// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.messaging.eventgrid.events;

import com.azure.core.util.CoreUtils;

import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.Map;

/**
 * The CloudEvent model. See {@link CloudEventBuilder} for instructions on how to build. This represents
 * a cloud event as specified by the CNCF, for sending event based data.
 * @see CloudEventBuilder
 **/
public final class CloudEvent {

    private final com.azure.messaging.eventgrid.implementation.models.CloudEvent cloudEvent;

    CloudEvent(com.azure.messaging.eventgrid.implementation.models.CloudEvent cloudEvent) {
        this.cloudEvent = cloudEvent;
    }

    com.azure.messaging.eventgrid.implementation.models.CloudEvent toImpl() {
        return this.cloudEvent;
    }

    /**
     * Get the id of the cloud event.
     * @return the id.
     */
    public String getId() {
        return this.cloudEvent.getId();
    }

    /**
     * Get the URI source of the event.
     * @return the source.
     */
    public String getSource() {
        return this.cloudEvent.getSource();
    }

    /**
     * Get the data encapsulated within this event.
     * @return the data associated with this event, or null if this event type does not contain data.
     */
    public Object getData() {
        return this.cloudEvent.getData();
    }

    /**
     * Get the type of event, e.g. "Contoso.Items.ItemReceived".
     * @return the type of the event.
     */
    public String getType() {
        return this.cloudEvent.getType();
    }

    /**
     * Get the time associated with the occurrence of the event.
     * @return the event time, or null if the time is not set.
     */
    public OffsetDateTime getTime() {
        return this.cloudEvent.getTime();
    }

    /**
     * Get the content type that the data is in. A null value indicates that the data is either nonexistent or in the
     * "application/json" type. Note that "application/json" is still a possible value for this field.
     * @return the content type the data is in, or null if the data is nonexistent or in "application/json" format.
     */
    public String getDataContentType() {
        return this.cloudEvent.getDatacontenttype();
    }

    /**
     * Get the schema that the data adheres to.
     * @return a URI of the data schema, or null if it is not set.
     */
    public String getDataSchema() {
        return this.cloudEvent.getDataschema();
    }

    /**
     * Get the subject associated with this event.
     * @return the subject, or null if the subject was not set.
     */
    public String getSubject() {
        return this.cloudEvent.getSubject();
    }

    /**
     * Get a map of the additional user-defined properties associated with this event.
     * @return the additional properties as an unmodifiable map.
     */
    public Map<String, Object> getAdditionalProperties() {
        return Collections.unmodifiableMap(this.cloudEvent.getAdditionalProperties());
    }

    /**
     * Get the version of the CloudEvents specification to which this event follows. Note that this SDK currently only
     * supports the CloudEvents 1.0 spec version.
     * @return the version of the CloudEvents specification this event follows.
     */
    public String getSpecVersion() {
        return this.cloudEvent.getSpecversion();
    }
}
