// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.messaging.eventgrid.systemevents;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/**
 * Schema of the Data property of an EventGridEvent for a Microsoft.Communication.RouterJobWaitingForActivation event.
 */
@Fluent
public final class AcsRouterJobWaitingForActivationEventData extends AcsRouterJobEventData {

    /*
     * Router Job Waiting For Activation Priority
     */
    @JsonProperty(value = "priority")
    private Integer priority;

    /*
     * Router Job Waiting For Activation Worker Selector Expired
     */
    @JsonProperty(value = "expiredAttachedWorkerSelectors")
    private List<AcsRouterWorkerSelector> expiredAttachedWorkerSelectors;

    /*
     * Router Job Waiting For Activation Requested Worker Selector Expired
     */
    @JsonProperty(value = "expiredRequestedWorkerSelectors")
    private List<AcsRouterWorkerSelector> expiredRequestedWorkerSelectors;

    /*
     * Router Job Waiting For Activation Scheduled Time in UTC
     */
    @JsonProperty(value = "scheduledOn")
    private OffsetDateTime scheduledOn;

    /*
     * Router Job Waiting For Activation Unavailable For Matching
     */
    @JsonProperty(value = "unavailableForMatching", required = true)
    private boolean unavailableForMatching;

    /** Creates an instance of AcsRouterJobWaitingForActivationEventData class. */
    public AcsRouterJobWaitingForActivationEventData() {}

    /**
     * Get the priority property: Router Job Waiting For Activation Priority.
     *
     * @return the priority value.
     */
    public Integer getPriority() {
        return this.priority;
    }

    /**
     * Set the priority property: Router Job Waiting For Activation Priority.
     *
     * @param priority the priority value to set.
     * @return the AcsRouterJobWaitingForActivationEventData object itself.
     */
    public AcsRouterJobWaitingForActivationEventData setPriority(Integer priority) {
        this.priority = priority;
        return this;
    }

    /**
     * Get the expiredAttachedWorkerSelectors property: Router Job Waiting For Activation Worker Selector Expired.
     *
     * @return the expiredAttachedWorkerSelectors value.
     */
    public List<AcsRouterWorkerSelector> getExpiredAttachedWorkerSelectors() {
        return this.expiredAttachedWorkerSelectors;
    }

    /**
     * Set the expiredAttachedWorkerSelectors property: Router Job Waiting For Activation Worker Selector Expired.
     *
     * @param expiredAttachedWorkerSelectors the expiredAttachedWorkerSelectors value to set.
     * @return the AcsRouterJobWaitingForActivationEventData object itself.
     */
    public AcsRouterJobWaitingForActivationEventData setExpiredAttachedWorkerSelectors(
            List<AcsRouterWorkerSelector> expiredAttachedWorkerSelectors) {
        this.expiredAttachedWorkerSelectors = expiredAttachedWorkerSelectors;
        return this;
    }

    /**
     * Get the expiredRequestedWorkerSelectors property: Router Job Waiting For Activation Requested Worker Selector
     * Expired.
     *
     * @return the expiredRequestedWorkerSelectors value.
     */
    public List<AcsRouterWorkerSelector> getExpiredRequestedWorkerSelectors() {
        return this.expiredRequestedWorkerSelectors;
    }

    /**
     * Set the expiredRequestedWorkerSelectors property: Router Job Waiting For Activation Requested Worker Selector
     * Expired.
     *
     * @param expiredRequestedWorkerSelectors the expiredRequestedWorkerSelectors value to set.
     * @return the AcsRouterJobWaitingForActivationEventData object itself.
     */
    public AcsRouterJobWaitingForActivationEventData setExpiredRequestedWorkerSelectors(
            List<AcsRouterWorkerSelector> expiredRequestedWorkerSelectors) {
        this.expiredRequestedWorkerSelectors = expiredRequestedWorkerSelectors;
        return this;
    }

    /**
     * Get the scheduledOn property: Router Job Waiting For Activation Scheduled Time in UTC.
     *
     * @return the scheduledOn value.
     */
    public OffsetDateTime getScheduledOn() {
        return this.scheduledOn;
    }

    /**
     * Set the scheduledOn property: Router Job Waiting For Activation Scheduled Time in UTC.
     *
     * @param scheduledOn the scheduledOn value to set.
     * @return the AcsRouterJobWaitingForActivationEventData object itself.
     */
    public AcsRouterJobWaitingForActivationEventData setScheduledOn(OffsetDateTime scheduledOn) {
        this.scheduledOn = scheduledOn;
        return this;
    }

    /**
     * Get the unavailableForMatching property: Router Job Waiting For Activation Unavailable For Matching.
     *
     * @return the unavailableForMatching value.
     */
    public Boolean isUnavailableForMatching() {
        return this.unavailableForMatching;
    }

    /**
     * Set the unavailableForMatching property: Router Job Waiting For Activation Unavailable For Matching.
     *
     * @param unavailableForMatching the unavailableForMatching value to set.
     * @return the AcsRouterJobWaitingForActivationEventData object itself.
     */
    public AcsRouterJobWaitingForActivationEventData setUnavailableForMatching(Boolean unavailableForMatching) {
        this.unavailableForMatching = unavailableForMatching;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AcsRouterJobWaitingForActivationEventData setQueueId(String queueId) {
        super.setQueueId(queueId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AcsRouterJobWaitingForActivationEventData setLabels(Map<String, String> labels) {
        super.setLabels(labels);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AcsRouterJobWaitingForActivationEventData setTags(Map<String, String> tags) {
        super.setTags(tags);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AcsRouterJobWaitingForActivationEventData setJobId(String jobId) {
        super.setJobId(jobId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AcsRouterJobWaitingForActivationEventData setChannelReference(String channelReference) {
        super.setChannelReference(channelReference);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AcsRouterJobWaitingForActivationEventData setChannelId(String channelId) {
        super.setChannelId(channelId);
        return this;
    }
}
