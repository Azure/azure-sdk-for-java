// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The WorkspaceConnectionAccessKey model.
 */
@Fluent
public final class WorkspaceConnectionAccessKey implements JsonSerializable<WorkspaceConnectionAccessKey> {
    /*
     * The accessKeyId property.
     */
    private String accessKeyId;

    /*
     * The secretAccessKey property.
     */
    private String secretAccessKey;

    /**
     * Creates an instance of WorkspaceConnectionAccessKey class.
     */
    public WorkspaceConnectionAccessKey() {
    }

    /**
     * Get the accessKeyId property: The accessKeyId property.
     * 
     * @return the accessKeyId value.
     */
    public String accessKeyId() {
        return this.accessKeyId;
    }

    /**
     * Set the accessKeyId property: The accessKeyId property.
     * 
     * @param accessKeyId the accessKeyId value to set.
     * @return the WorkspaceConnectionAccessKey object itself.
     */
    public WorkspaceConnectionAccessKey withAccessKeyId(String accessKeyId) {
        this.accessKeyId = accessKeyId;
        return this;
    }

    /**
     * Get the secretAccessKey property: The secretAccessKey property.
     * 
     * @return the secretAccessKey value.
     */
    public String secretAccessKey() {
        return this.secretAccessKey;
    }

    /**
     * Set the secretAccessKey property: The secretAccessKey property.
     * 
     * @param secretAccessKey the secretAccessKey value to set.
     * @return the WorkspaceConnectionAccessKey object itself.
     */
    public WorkspaceConnectionAccessKey withSecretAccessKey(String secretAccessKey) {
        this.secretAccessKey = secretAccessKey;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accessKeyId", this.accessKeyId);
        jsonWriter.writeStringField("secretAccessKey", this.secretAccessKey);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkspaceConnectionAccessKey from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkspaceConnectionAccessKey if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WorkspaceConnectionAccessKey.
     */
    public static WorkspaceConnectionAccessKey fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkspaceConnectionAccessKey deserializedWorkspaceConnectionAccessKey = new WorkspaceConnectionAccessKey();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accessKeyId".equals(fieldName)) {
                    deserializedWorkspaceConnectionAccessKey.accessKeyId = reader.getString();
                } else if ("secretAccessKey".equals(fieldName)) {
                    deserializedWorkspaceConnectionAccessKey.secretAccessKey = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkspaceConnectionAccessKey;
        });
    }
}
