// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The MonitorNotificationSettings model.
 */
@Fluent
public final class MonitorNotificationSettings implements JsonSerializable<MonitorNotificationSettings> {
    /*
     * The AML notification email settings.
     */
    private MonitorEmailNotificationSettings emailNotificationSettings;

    /**
     * Creates an instance of MonitorNotificationSettings class.
     */
    public MonitorNotificationSettings() {
    }

    /**
     * Get the emailNotificationSettings property: The AML notification email settings.
     * 
     * @return the emailNotificationSettings value.
     */
    public MonitorEmailNotificationSettings emailNotificationSettings() {
        return this.emailNotificationSettings;
    }

    /**
     * Set the emailNotificationSettings property: The AML notification email settings.
     * 
     * @param emailNotificationSettings the emailNotificationSettings value to set.
     * @return the MonitorNotificationSettings object itself.
     */
    public MonitorNotificationSettings
        withEmailNotificationSettings(MonitorEmailNotificationSettings emailNotificationSettings) {
        this.emailNotificationSettings = emailNotificationSettings;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (emailNotificationSettings() != null) {
            emailNotificationSettings().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("emailNotificationSettings", this.emailNotificationSettings);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MonitorNotificationSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MonitorNotificationSettings if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MonitorNotificationSettings.
     */
    public static MonitorNotificationSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MonitorNotificationSettings deserializedMonitorNotificationSettings = new MonitorNotificationSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("emailNotificationSettings".equals(fieldName)) {
                    deserializedMonitorNotificationSettings.emailNotificationSettings
                        = MonitorEmailNotificationSettings.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMonitorNotificationSettings;
        });
    }
}
