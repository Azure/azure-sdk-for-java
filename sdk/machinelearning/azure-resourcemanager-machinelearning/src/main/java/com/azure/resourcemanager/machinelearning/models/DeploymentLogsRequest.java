// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The DeploymentLogsRequest model.
 */
@Fluent
public final class DeploymentLogsRequest implements JsonSerializable<DeploymentLogsRequest> {
    /*
     * The type of container to retrieve logs from.
     */
    private ContainerType containerType;

    /*
     * The maximum number of lines to tail.
     */
    private Integer tail;

    /**
     * Creates an instance of DeploymentLogsRequest class.
     */
    public DeploymentLogsRequest() {
    }

    /**
     * Get the containerType property: The type of container to retrieve logs from.
     * 
     * @return the containerType value.
     */
    public ContainerType containerType() {
        return this.containerType;
    }

    /**
     * Set the containerType property: The type of container to retrieve logs from.
     * 
     * @param containerType the containerType value to set.
     * @return the DeploymentLogsRequest object itself.
     */
    public DeploymentLogsRequest withContainerType(ContainerType containerType) {
        this.containerType = containerType;
        return this;
    }

    /**
     * Get the tail property: The maximum number of lines to tail.
     * 
     * @return the tail value.
     */
    public Integer tail() {
        return this.tail;
    }

    /**
     * Set the tail property: The maximum number of lines to tail.
     * 
     * @param tail the tail value to set.
     * @return the DeploymentLogsRequest object itself.
     */
    public DeploymentLogsRequest withTail(Integer tail) {
        this.tail = tail;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("containerType", this.containerType == null ? null : this.containerType.toString());
        jsonWriter.writeNumberField("tail", this.tail);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DeploymentLogsRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DeploymentLogsRequest if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DeploymentLogsRequest.
     */
    public static DeploymentLogsRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DeploymentLogsRequest deserializedDeploymentLogsRequest = new DeploymentLogsRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("containerType".equals(fieldName)) {
                    deserializedDeploymentLogsRequest.containerType = ContainerType.fromString(reader.getString());
                } else if ("tail".equals(fieldName)) {
                    deserializedDeploymentLogsRequest.tail = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDeploymentLogsRequest;
        });
    }
}
