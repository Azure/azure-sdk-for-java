// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * HDInsight compute properties.
 */
@Fluent
public final class HDInsightProperties implements JsonSerializable<HDInsightProperties> {
    /*
     * Port open for ssh connections on the master node of the cluster.
     */
    private Integer sshPort;

    /*
     * Public IP address of the master node of the cluster.
     */
    private String address;

    /*
     * Admin credentials for master node of the cluster
     */
    private VirtualMachineSshCredentials administratorAccount;

    /**
     * Creates an instance of HDInsightProperties class.
     */
    public HDInsightProperties() {
    }

    /**
     * Get the sshPort property: Port open for ssh connections on the master node of the cluster.
     * 
     * @return the sshPort value.
     */
    public Integer sshPort() {
        return this.sshPort;
    }

    /**
     * Set the sshPort property: Port open for ssh connections on the master node of the cluster.
     * 
     * @param sshPort the sshPort value to set.
     * @return the HDInsightProperties object itself.
     */
    public HDInsightProperties withSshPort(Integer sshPort) {
        this.sshPort = sshPort;
        return this;
    }

    /**
     * Get the address property: Public IP address of the master node of the cluster.
     * 
     * @return the address value.
     */
    public String address() {
        return this.address;
    }

    /**
     * Set the address property: Public IP address of the master node of the cluster.
     * 
     * @param address the address value to set.
     * @return the HDInsightProperties object itself.
     */
    public HDInsightProperties withAddress(String address) {
        this.address = address;
        return this;
    }

    /**
     * Get the administratorAccount property: Admin credentials for master node of the cluster.
     * 
     * @return the administratorAccount value.
     */
    public VirtualMachineSshCredentials administratorAccount() {
        return this.administratorAccount;
    }

    /**
     * Set the administratorAccount property: Admin credentials for master node of the cluster.
     * 
     * @param administratorAccount the administratorAccount value to set.
     * @return the HDInsightProperties object itself.
     */
    public HDInsightProperties withAdministratorAccount(VirtualMachineSshCredentials administratorAccount) {
        this.administratorAccount = administratorAccount;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (administratorAccount() != null) {
            administratorAccount().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("sshPort", this.sshPort);
        jsonWriter.writeStringField("address", this.address);
        jsonWriter.writeJsonField("administratorAccount", this.administratorAccount);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HDInsightProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HDInsightProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the HDInsightProperties.
     */
    public static HDInsightProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HDInsightProperties deserializedHDInsightProperties = new HDInsightProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sshPort".equals(fieldName)) {
                    deserializedHDInsightProperties.sshPort = reader.getNullable(JsonReader::getInt);
                } else if ("address".equals(fieldName)) {
                    deserializedHDInsightProperties.address = reader.getString();
                } else if ("administratorAccount".equals(fieldName)) {
                    deserializedHDInsightProperties.administratorAccount
                        = VirtualMachineSshCredentials.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHDInsightProperties;
        });
    }
}
