// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * The last operation on ComputeInstance.
 */
@Fluent
public final class ComputeInstanceLastOperation implements JsonSerializable<ComputeInstanceLastOperation> {
    /*
     * Name of the last operation.
     */
    private OperationName operationName;

    /*
     * Time of the last operation.
     */
    private OffsetDateTime operationTime;

    /*
     * Operation status.
     */
    private OperationStatus operationStatus;

    /*
     * Trigger of operation.
     */
    private OperationTrigger operationTrigger;

    /**
     * Creates an instance of ComputeInstanceLastOperation class.
     */
    public ComputeInstanceLastOperation() {
    }

    /**
     * Get the operationName property: Name of the last operation.
     * 
     * @return the operationName value.
     */
    public OperationName operationName() {
        return this.operationName;
    }

    /**
     * Set the operationName property: Name of the last operation.
     * 
     * @param operationName the operationName value to set.
     * @return the ComputeInstanceLastOperation object itself.
     */
    public ComputeInstanceLastOperation withOperationName(OperationName operationName) {
        this.operationName = operationName;
        return this;
    }

    /**
     * Get the operationTime property: Time of the last operation.
     * 
     * @return the operationTime value.
     */
    public OffsetDateTime operationTime() {
        return this.operationTime;
    }

    /**
     * Set the operationTime property: Time of the last operation.
     * 
     * @param operationTime the operationTime value to set.
     * @return the ComputeInstanceLastOperation object itself.
     */
    public ComputeInstanceLastOperation withOperationTime(OffsetDateTime operationTime) {
        this.operationTime = operationTime;
        return this;
    }

    /**
     * Get the operationStatus property: Operation status.
     * 
     * @return the operationStatus value.
     */
    public OperationStatus operationStatus() {
        return this.operationStatus;
    }

    /**
     * Set the operationStatus property: Operation status.
     * 
     * @param operationStatus the operationStatus value to set.
     * @return the ComputeInstanceLastOperation object itself.
     */
    public ComputeInstanceLastOperation withOperationStatus(OperationStatus operationStatus) {
        this.operationStatus = operationStatus;
        return this;
    }

    /**
     * Get the operationTrigger property: Trigger of operation.
     * 
     * @return the operationTrigger value.
     */
    public OperationTrigger operationTrigger() {
        return this.operationTrigger;
    }

    /**
     * Set the operationTrigger property: Trigger of operation.
     * 
     * @param operationTrigger the operationTrigger value to set.
     * @return the ComputeInstanceLastOperation object itself.
     */
    public ComputeInstanceLastOperation withOperationTrigger(OperationTrigger operationTrigger) {
        this.operationTrigger = operationTrigger;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("operationName", this.operationName == null ? null : this.operationName.toString());
        jsonWriter.writeStringField("operationTime",
            this.operationTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.operationTime));
        jsonWriter.writeStringField("operationStatus",
            this.operationStatus == null ? null : this.operationStatus.toString());
        jsonWriter.writeStringField("operationTrigger",
            this.operationTrigger == null ? null : this.operationTrigger.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComputeInstanceLastOperation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComputeInstanceLastOperation if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ComputeInstanceLastOperation.
     */
    public static ComputeInstanceLastOperation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ComputeInstanceLastOperation deserializedComputeInstanceLastOperation = new ComputeInstanceLastOperation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("operationName".equals(fieldName)) {
                    deserializedComputeInstanceLastOperation.operationName
                        = OperationName.fromString(reader.getString());
                } else if ("operationTime".equals(fieldName)) {
                    deserializedComputeInstanceLastOperation.operationTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("operationStatus".equals(fieldName)) {
                    deserializedComputeInstanceLastOperation.operationStatus
                        = OperationStatus.fromString(reader.getString());
                } else if ("operationTrigger".equals(fieldName)) {
                    deserializedComputeInstanceLastOperation.operationTrigger
                        = OperationTrigger.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedComputeInstanceLastOperation;
        });
    }
}
