// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The estimated price info for using a VM of a particular OS type, tier, etc. */
@Fluent
public final class EstimatedVMPrice {
    /*
     * Retail price
     *
     * The price charged for using the VM.
     */
    @JsonProperty(value = "retailPrice", required = true)
    private double retailPrice;

    /*
     * OS type
     *
     * Operating system type used by the VM.
     */
    @JsonProperty(value = "osType", required = true)
    private VMPriceOSType osType;

    /*
     * VM tier
     *
     * The type of the VM.
     */
    @JsonProperty(value = "vmTier", required = true)
    private VMTier vmTier;

    /** Creates an instance of EstimatedVMPrice class. */
    public EstimatedVMPrice() {
    }

    /**
     * Get the retailPrice property: Retail price
     *
     * <p>The price charged for using the VM.
     *
     * @return the retailPrice value.
     */
    public double retailPrice() {
        return this.retailPrice;
    }

    /**
     * Set the retailPrice property: Retail price
     *
     * <p>The price charged for using the VM.
     *
     * @param retailPrice the retailPrice value to set.
     * @return the EstimatedVMPrice object itself.
     */
    public EstimatedVMPrice withRetailPrice(double retailPrice) {
        this.retailPrice = retailPrice;
        return this;
    }

    /**
     * Get the osType property: OS type
     *
     * <p>Operating system type used by the VM.
     *
     * @return the osType value.
     */
    public VMPriceOSType osType() {
        return this.osType;
    }

    /**
     * Set the osType property: OS type
     *
     * <p>Operating system type used by the VM.
     *
     * @param osType the osType value to set.
     * @return the EstimatedVMPrice object itself.
     */
    public EstimatedVMPrice withOsType(VMPriceOSType osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Get the vmTier property: VM tier
     *
     * <p>The type of the VM.
     *
     * @return the vmTier value.
     */
    public VMTier vmTier() {
        return this.vmTier;
    }

    /**
     * Set the vmTier property: VM tier
     *
     * <p>The type of the VM.
     *
     * @param vmTier the vmTier value to set.
     * @return the EstimatedVMPrice object itself.
     */
    public EstimatedVMPrice withVmTier(VMTier vmTier) {
        this.vmTier = vmTier;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (osType() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property osType in model EstimatedVMPrice"));
        }
        if (vmTier() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property vmTier in model EstimatedVMPrice"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EstimatedVMPrice.class);
}
