// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Response payload for creating a backfill request for a given feature set version.
 */
@Fluent
public final class FeaturesetVersionBackfillResponseInner
    implements JsonSerializable<FeaturesetVersionBackfillResponseInner> {
    /*
     * List of jobs submitted as part of the backfill request.
     */
    private List<String> jobIds;

    /**
     * Creates an instance of FeaturesetVersionBackfillResponseInner class.
     */
    public FeaturesetVersionBackfillResponseInner() {
    }

    /**
     * Get the jobIds property: List of jobs submitted as part of the backfill request.
     * 
     * @return the jobIds value.
     */
    public List<String> jobIds() {
        return this.jobIds;
    }

    /**
     * Set the jobIds property: List of jobs submitted as part of the backfill request.
     * 
     * @param jobIds the jobIds value to set.
     * @return the FeaturesetVersionBackfillResponseInner object itself.
     */
    public FeaturesetVersionBackfillResponseInner withJobIds(List<String> jobIds) {
        this.jobIds = jobIds;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("jobIds", this.jobIds, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FeaturesetVersionBackfillResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FeaturesetVersionBackfillResponseInner if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FeaturesetVersionBackfillResponseInner.
     */
    public static FeaturesetVersionBackfillResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FeaturesetVersionBackfillResponseInner deserializedFeaturesetVersionBackfillResponseInner
                = new FeaturesetVersionBackfillResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("jobIds".equals(fieldName)) {
                    List<String> jobIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedFeaturesetVersionBackfillResponseInner.jobIds = jobIds;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFeaturesetVersionBackfillResponseInner;
        });
    }
}
