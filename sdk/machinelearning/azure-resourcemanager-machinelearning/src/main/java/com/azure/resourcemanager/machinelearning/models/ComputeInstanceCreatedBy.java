// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes information on user who created this ComputeInstance.
 */
@Immutable
public final class ComputeInstanceCreatedBy implements JsonSerializable<ComputeInstanceCreatedBy> {
    /*
     * Name of the user.
     */
    private String username;

    /*
     * Uniquely identifies user' Azure Active Directory organization.
     */
    private String userOrgId;

    /*
     * Uniquely identifies the user within his/her organization.
     */
    private String userId;

    /**
     * Creates an instance of ComputeInstanceCreatedBy class.
     */
    public ComputeInstanceCreatedBy() {
    }

    /**
     * Get the username property: Name of the user.
     * 
     * @return the username value.
     */
    public String username() {
        return this.username;
    }

    /**
     * Get the userOrgId property: Uniquely identifies user' Azure Active Directory organization.
     * 
     * @return the userOrgId value.
     */
    public String userOrgId() {
        return this.userOrgId;
    }

    /**
     * Get the userId property: Uniquely identifies the user within his/her organization.
     * 
     * @return the userId value.
     */
    public String userId() {
        return this.userId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComputeInstanceCreatedBy from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComputeInstanceCreatedBy if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ComputeInstanceCreatedBy.
     */
    public static ComputeInstanceCreatedBy fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ComputeInstanceCreatedBy deserializedComputeInstanceCreatedBy = new ComputeInstanceCreatedBy();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("userName".equals(fieldName)) {
                    deserializedComputeInstanceCreatedBy.username = reader.getString();
                } else if ("userOrgId".equals(fieldName)) {
                    deserializedComputeInstanceCreatedBy.userOrgId = reader.getString();
                } else if ("userId".equals(fieldName)) {
                    deserializedComputeInstanceCreatedBy.userId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedComputeInstanceCreatedBy;
        });
    }
}
