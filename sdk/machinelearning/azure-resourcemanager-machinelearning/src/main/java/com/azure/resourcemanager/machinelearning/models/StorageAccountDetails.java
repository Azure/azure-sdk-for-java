// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of storage account to be used for the Registry.
 */
@Fluent
public final class StorageAccountDetails implements JsonSerializable<StorageAccountDetails> {
    /*
     * Details of system created storage account to be used for the registry
     */
    private SystemCreatedStorageAccount systemCreatedStorageAccount;

    /*
     * Details of user created storage account to be used for the registry
     */
    private UserCreatedStorageAccount userCreatedStorageAccount;

    /**
     * Creates an instance of StorageAccountDetails class.
     */
    public StorageAccountDetails() {
    }

    /**
     * Get the systemCreatedStorageAccount property: Details of system created storage account to be used for the
     * registry.
     * 
     * @return the systemCreatedStorageAccount value.
     */
    public SystemCreatedStorageAccount systemCreatedStorageAccount() {
        return this.systemCreatedStorageAccount;
    }

    /**
     * Set the systemCreatedStorageAccount property: Details of system created storage account to be used for the
     * registry.
     * 
     * @param systemCreatedStorageAccount the systemCreatedStorageAccount value to set.
     * @return the StorageAccountDetails object itself.
     */
    public StorageAccountDetails
        withSystemCreatedStorageAccount(SystemCreatedStorageAccount systemCreatedStorageAccount) {
        this.systemCreatedStorageAccount = systemCreatedStorageAccount;
        return this;
    }

    /**
     * Get the userCreatedStorageAccount property: Details of user created storage account to be used for the registry.
     * 
     * @return the userCreatedStorageAccount value.
     */
    public UserCreatedStorageAccount userCreatedStorageAccount() {
        return this.userCreatedStorageAccount;
    }

    /**
     * Set the userCreatedStorageAccount property: Details of user created storage account to be used for the registry.
     * 
     * @param userCreatedStorageAccount the userCreatedStorageAccount value to set.
     * @return the StorageAccountDetails object itself.
     */
    public StorageAccountDetails withUserCreatedStorageAccount(UserCreatedStorageAccount userCreatedStorageAccount) {
        this.userCreatedStorageAccount = userCreatedStorageAccount;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (systemCreatedStorageAccount() != null) {
            systemCreatedStorageAccount().validate();
        }
        if (userCreatedStorageAccount() != null) {
            userCreatedStorageAccount().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("systemCreatedStorageAccount", this.systemCreatedStorageAccount);
        jsonWriter.writeJsonField("userCreatedStorageAccount", this.userCreatedStorageAccount);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StorageAccountDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StorageAccountDetails if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the StorageAccountDetails.
     */
    public static StorageAccountDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StorageAccountDetails deserializedStorageAccountDetails = new StorageAccountDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("systemCreatedStorageAccount".equals(fieldName)) {
                    deserializedStorageAccountDetails.systemCreatedStorageAccount
                        = SystemCreatedStorageAccount.fromJson(reader);
                } else if ("userCreatedStorageAccount".equals(fieldName)) {
                    deserializedStorageAccountDetails.userCreatedStorageAccount
                        = UserCreatedStorageAccount.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStorageAccountDetails;
        });
    }
}
