// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The FeatureImportanceSettings model.
 */
@Fluent
public final class FeatureImportanceSettings implements JsonSerializable<FeatureImportanceSettings> {
    /*
     * The mode of operation for computing feature importance.
     */
    private FeatureImportanceMode mode;

    /*
     * The name of the target column within the input data asset.
     */
    private String targetColumn;

    /**
     * Creates an instance of FeatureImportanceSettings class.
     */
    public FeatureImportanceSettings() {
    }

    /**
     * Get the mode property: The mode of operation for computing feature importance.
     * 
     * @return the mode value.
     */
    public FeatureImportanceMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: The mode of operation for computing feature importance.
     * 
     * @param mode the mode value to set.
     * @return the FeatureImportanceSettings object itself.
     */
    public FeatureImportanceSettings withMode(FeatureImportanceMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the targetColumn property: The name of the target column within the input data asset.
     * 
     * @return the targetColumn value.
     */
    public String targetColumn() {
        return this.targetColumn;
    }

    /**
     * Set the targetColumn property: The name of the target column within the input data asset.
     * 
     * @param targetColumn the targetColumn value to set.
     * @return the FeatureImportanceSettings object itself.
     */
    public FeatureImportanceSettings withTargetColumn(String targetColumn) {
        this.targetColumn = targetColumn;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("mode", this.mode == null ? null : this.mode.toString());
        jsonWriter.writeStringField("targetColumn", this.targetColumn);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FeatureImportanceSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FeatureImportanceSettings if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FeatureImportanceSettings.
     */
    public static FeatureImportanceSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FeatureImportanceSettings deserializedFeatureImportanceSettings = new FeatureImportanceSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("mode".equals(fieldName)) {
                    deserializedFeatureImportanceSettings.mode = FeatureImportanceMode.fromString(reader.getString());
                } else if ("targetColumn".equals(fieldName)) {
                    deserializedFeatureImportanceSettings.targetColumn = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFeatureImportanceSettings;
        });
    }
}
