// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.machinelearning.models.GetBlobReferenceForConsumptionDto;
import java.io.IOException;

/**
 * BlobReferenceSASResponse for getBlobReferenceSAS API.
 */
@Fluent
public final class GetBlobReferenceSasResponseDtoInner
    implements JsonSerializable<GetBlobReferenceSasResponseDtoInner> {
    /*
     * Blob reference for consumption details
     */
    private GetBlobReferenceForConsumptionDto blobReferenceForConsumption;

    /**
     * Creates an instance of GetBlobReferenceSasResponseDtoInner class.
     */
    public GetBlobReferenceSasResponseDtoInner() {
    }

    /**
     * Get the blobReferenceForConsumption property: Blob reference for consumption details.
     * 
     * @return the blobReferenceForConsumption value.
     */
    public GetBlobReferenceForConsumptionDto blobReferenceForConsumption() {
        return this.blobReferenceForConsumption;
    }

    /**
     * Set the blobReferenceForConsumption property: Blob reference for consumption details.
     * 
     * @param blobReferenceForConsumption the blobReferenceForConsumption value to set.
     * @return the GetBlobReferenceSasResponseDtoInner object itself.
     */
    public GetBlobReferenceSasResponseDtoInner
        withBlobReferenceForConsumption(GetBlobReferenceForConsumptionDto blobReferenceForConsumption) {
        this.blobReferenceForConsumption = blobReferenceForConsumption;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (blobReferenceForConsumption() != null) {
            blobReferenceForConsumption().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("blobReferenceForConsumption", this.blobReferenceForConsumption);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GetBlobReferenceSasResponseDtoInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GetBlobReferenceSasResponseDtoInner if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GetBlobReferenceSasResponseDtoInner.
     */
    public static GetBlobReferenceSasResponseDtoInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GetBlobReferenceSasResponseDtoInner deserializedGetBlobReferenceSasResponseDtoInner
                = new GetBlobReferenceSasResponseDtoInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("blobReferenceForConsumption".equals(fieldName)) {
                    deserializedGetBlobReferenceSasResponseDtoInner.blobReferenceForConsumption
                        = GetBlobReferenceForConsumptionDto.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGetBlobReferenceSasResponseDtoInner;
        });
    }
}
