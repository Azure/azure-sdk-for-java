// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.ModelVersionInner;
import com.azure.resourcemanager.machinelearning.models.ModelVersion;
import com.azure.resourcemanager.machinelearning.models.ModelVersionProperties;
import com.azure.resourcemanager.machinelearning.models.PendingUploadRequestDto;
import com.azure.resourcemanager.machinelearning.models.PendingUploadResponseDto;

public final class ModelVersionImpl implements ModelVersion, ModelVersion.Definition, ModelVersion.Update {
    private ModelVersionInner innerObject;

    private final com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ModelVersionProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ModelVersionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.machinelearning.MachineLearningManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String registryName;

    private String modelName;

    private String version;

    public ModelVersionImpl withExistingModel(String resourceGroupName, String registryName, String modelName) {
        this.resourceGroupName = resourceGroupName;
        this.registryName = registryName;
        this.modelName = modelName;
        return this;
    }

    public ModelVersion create() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryModelVersions()
            .createOrUpdate(resourceGroupName, registryName, modelName, version, this.innerModel(), Context.NONE);
        return this;
    }

    public ModelVersion create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryModelVersions()
            .createOrUpdate(resourceGroupName, registryName, modelName, version, this.innerModel(), context);
        return this;
    }

    ModelVersionImpl(String name, com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = new ModelVersionInner();
        this.serviceManager = serviceManager;
        this.version = name;
    }

    public ModelVersionImpl update() {
        return this;
    }

    public ModelVersion apply() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryModelVersions()
            .createOrUpdate(resourceGroupName, registryName, modelName, version, this.innerModel(), Context.NONE);
        return this;
    }

    public ModelVersion apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryModelVersions()
            .createOrUpdate(resourceGroupName, registryName, modelName, version, this.innerModel(), context);
        return this;
    }

    ModelVersionImpl(ModelVersionInner innerObject,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.registryName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "registries");
        this.modelName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "models");
        this.version = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "versions");
    }

    public ModelVersion refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryModelVersions()
            .getWithResponse(resourceGroupName, registryName, modelName, version, Context.NONE)
            .getValue();
        return this;
    }

    public ModelVersion refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryModelVersions()
            .getWithResponse(resourceGroupName, registryName, modelName, version, context)
            .getValue();
        return this;
    }

    public Response<PendingUploadResponseDto> createOrGetStartPendingUploadWithResponse(PendingUploadRequestDto body,
        Context context) {
        return serviceManager.registryModelVersions()
            .createOrGetStartPendingUploadWithResponse(resourceGroupName, registryName, modelName, version, body,
                context);
    }

    public PendingUploadResponseDto createOrGetStartPendingUpload(PendingUploadRequestDto body) {
        return serviceManager.registryModelVersions()
            .createOrGetStartPendingUpload(resourceGroupName, registryName, modelName, version, body);
    }

    public ModelVersionImpl withProperties(ModelVersionProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
