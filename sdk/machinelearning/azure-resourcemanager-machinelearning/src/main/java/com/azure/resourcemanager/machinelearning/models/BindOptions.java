// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes the bind options for the container.
 */
@Fluent
public final class BindOptions implements JsonSerializable<BindOptions> {
    /*
     * Type of Bind Option
     */
    private String propagation;

    /*
     * Indicate whether to create host path.
     */
    private Boolean createHostPath;

    /*
     * Mention the selinux options.
     */
    private String selinux;

    /**
     * Creates an instance of BindOptions class.
     */
    public BindOptions() {
    }

    /**
     * Get the propagation property: Type of Bind Option.
     * 
     * @return the propagation value.
     */
    public String propagation() {
        return this.propagation;
    }

    /**
     * Set the propagation property: Type of Bind Option.
     * 
     * @param propagation the propagation value to set.
     * @return the BindOptions object itself.
     */
    public BindOptions withPropagation(String propagation) {
        this.propagation = propagation;
        return this;
    }

    /**
     * Get the createHostPath property: Indicate whether to create host path.
     * 
     * @return the createHostPath value.
     */
    public Boolean createHostPath() {
        return this.createHostPath;
    }

    /**
     * Set the createHostPath property: Indicate whether to create host path.
     * 
     * @param createHostPath the createHostPath value to set.
     * @return the BindOptions object itself.
     */
    public BindOptions withCreateHostPath(Boolean createHostPath) {
        this.createHostPath = createHostPath;
        return this;
    }

    /**
     * Get the selinux property: Mention the selinux options.
     * 
     * @return the selinux value.
     */
    public String selinux() {
        return this.selinux;
    }

    /**
     * Set the selinux property: Mention the selinux options.
     * 
     * @param selinux the selinux value to set.
     * @return the BindOptions object itself.
     */
    public BindOptions withSelinux(String selinux) {
        this.selinux = selinux;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("propagation", this.propagation);
        jsonWriter.writeBooleanField("createHostPath", this.createHostPath);
        jsonWriter.writeStringField("selinux", this.selinux);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BindOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BindOptions if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the BindOptions.
     */
    public static BindOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BindOptions deserializedBindOptions = new BindOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("propagation".equals(fieldName)) {
                    deserializedBindOptions.propagation = reader.getString();
                } else if ("createHostPath".equals(fieldName)) {
                    deserializedBindOptions.createHostPath = reader.getNullable(JsonReader::getBoolean);
                } else if ("selinux".equals(fieldName)) {
                    deserializedBindOptions.selinux = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBindOptions;
        });
    }
}
