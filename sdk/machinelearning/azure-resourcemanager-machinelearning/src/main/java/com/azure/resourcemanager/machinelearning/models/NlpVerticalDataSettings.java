// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Class for data inputs. NLP - Natural Language Processing. */
@Fluent
public final class NlpVerticalDataSettings extends DataSettings {
    /*
     * Validation data inputs.
     */
    @JsonProperty(value = "validationData")
    private NlpVerticalValidationDataSettings validationData;

    /**
     * Get the validationData property: Validation data inputs.
     *
     * @return the validationData value.
     */
    public NlpVerticalValidationDataSettings validationData() {
        return this.validationData;
    }

    /**
     * Set the validationData property: Validation data inputs.
     *
     * @param validationData the validationData value to set.
     * @return the NlpVerticalDataSettings object itself.
     */
    public NlpVerticalDataSettings withValidationData(NlpVerticalValidationDataSettings validationData) {
        this.validationData = validationData;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NlpVerticalDataSettings withTargetColumnName(String targetColumnName) {
        super.withTargetColumnName(targetColumnName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NlpVerticalDataSettings withTestData(TestDataSettings testData) {
        super.withTestData(testData);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NlpVerticalDataSettings withTrainingData(TrainingDataSettings trainingData) {
        super.withTrainingData(trainingData);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (validationData() != null) {
            validationData().validate();
        }
    }
}
