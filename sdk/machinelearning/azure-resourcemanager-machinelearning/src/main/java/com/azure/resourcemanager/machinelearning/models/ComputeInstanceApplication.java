// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines an Aml Instance application and its connectivity endpoint URI.
 */
@Fluent
public final class ComputeInstanceApplication implements JsonSerializable<ComputeInstanceApplication> {
    /*
     * Name of the ComputeInstance application.
     */
    private String displayName;

    /*
     * Application' endpoint URI.
     */
    private String endpointUri;

    /**
     * Creates an instance of ComputeInstanceApplication class.
     */
    public ComputeInstanceApplication() {
    }

    /**
     * Get the displayName property: Name of the ComputeInstance application.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Name of the ComputeInstance application.
     * 
     * @param displayName the displayName value to set.
     * @return the ComputeInstanceApplication object itself.
     */
    public ComputeInstanceApplication withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the endpointUri property: Application' endpoint URI.
     * 
     * @return the endpointUri value.
     */
    public String endpointUri() {
        return this.endpointUri;
    }

    /**
     * Set the endpointUri property: Application' endpoint URI.
     * 
     * @param endpointUri the endpointUri value to set.
     * @return the ComputeInstanceApplication object itself.
     */
    public ComputeInstanceApplication withEndpointUri(String endpointUri) {
        this.endpointUri = endpointUri;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeStringField("endpointUri", this.endpointUri);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComputeInstanceApplication from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComputeInstanceApplication if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ComputeInstanceApplication.
     */
    public static ComputeInstanceApplication fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ComputeInstanceApplication deserializedComputeInstanceApplication = new ComputeInstanceApplication();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("displayName".equals(fieldName)) {
                    deserializedComputeInstanceApplication.displayName = reader.getString();
                } else if ("endpointUri".equals(fieldName)) {
                    deserializedComputeInstanceApplication.endpointUri = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedComputeInstanceApplication;
        });
    }
}
