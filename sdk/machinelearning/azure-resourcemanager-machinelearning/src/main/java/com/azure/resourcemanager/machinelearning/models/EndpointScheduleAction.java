// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The EndpointScheduleAction model.
 */
@Fluent
public final class EndpointScheduleAction extends ScheduleActionBase {
    /*
     * [Required] Specifies the action type of the schedule
     */
    private ScheduleActionType actionType = ScheduleActionType.INVOKE_BATCH_ENDPOINT;

    /*
     * [Required] Defines Schedule action definition details.
     * <see href="TBD" />
     */
    private Object endpointInvocationDefinition;

    /**
     * Creates an instance of EndpointScheduleAction class.
     */
    public EndpointScheduleAction() {
    }

    /**
     * Get the actionType property: [Required] Specifies the action type of the schedule.
     * 
     * @return the actionType value.
     */
    @Override
    public ScheduleActionType actionType() {
        return this.actionType;
    }

    /**
     * Get the endpointInvocationDefinition property: [Required] Defines Schedule action definition details.
     * &lt;see href="TBD" /&gt;.
     * 
     * @return the endpointInvocationDefinition value.
     */
    public Object endpointInvocationDefinition() {
        return this.endpointInvocationDefinition;
    }

    /**
     * Set the endpointInvocationDefinition property: [Required] Defines Schedule action definition details.
     * &lt;see href="TBD" /&gt;.
     * 
     * @param endpointInvocationDefinition the endpointInvocationDefinition value to set.
     * @return the EndpointScheduleAction object itself.
     */
    public EndpointScheduleAction withEndpointInvocationDefinition(Object endpointInvocationDefinition) {
        this.endpointInvocationDefinition = endpointInvocationDefinition;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (endpointInvocationDefinition() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property endpointInvocationDefinition in model EndpointScheduleAction"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EndpointScheduleAction.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("endpointInvocationDefinition", this.endpointInvocationDefinition);
        jsonWriter.writeStringField("actionType", this.actionType == null ? null : this.actionType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EndpointScheduleAction from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EndpointScheduleAction if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the EndpointScheduleAction.
     */
    public static EndpointScheduleAction fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EndpointScheduleAction deserializedEndpointScheduleAction = new EndpointScheduleAction();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("endpointInvocationDefinition".equals(fieldName)) {
                    deserializedEndpointScheduleAction.endpointInvocationDefinition = reader.readUntyped();
                } else if ("actionType".equals(fieldName)) {
                    deserializedEndpointScheduleAction.actionType = ScheduleActionType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEndpointScheduleAction;
        });
    }
}
