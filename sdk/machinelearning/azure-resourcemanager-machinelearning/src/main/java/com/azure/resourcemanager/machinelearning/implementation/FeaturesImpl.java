// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.machinelearning.fluent.FeaturesClient;
import com.azure.resourcemanager.machinelearning.fluent.models.FeatureInner;
import com.azure.resourcemanager.machinelearning.models.Feature;
import com.azure.resourcemanager.machinelearning.models.Features;
import com.azure.resourcemanager.machinelearning.models.ListViewType;

public final class FeaturesImpl implements Features {
    private static final ClientLogger LOGGER = new ClientLogger(FeaturesImpl.class);

    private final FeaturesClient innerClient;

    private final com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager;

    public FeaturesImpl(FeaturesClient innerClient,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Feature> list(String resourceGroupName, String workspaceName, String featuresetName,
        String featuresetVersion) {
        PagedIterable<FeatureInner> inner
            = this.serviceClient().list(resourceGroupName, workspaceName, featuresetName, featuresetVersion);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new FeatureImpl(inner1, this.manager()));
    }

    public PagedIterable<Feature> list(String resourceGroupName, String workspaceName, String featuresetName,
        String featuresetVersion, String skip, String tags, String featureName, String description,
        ListViewType listViewType, Integer pageSize, Context context) {
        PagedIterable<FeatureInner> inner = this.serviceClient()
            .list(resourceGroupName, workspaceName, featuresetName, featuresetVersion, skip, tags, featureName,
                description, listViewType, pageSize, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new FeatureImpl(inner1, this.manager()));
    }

    public Response<Feature> getWithResponse(String resourceGroupName, String workspaceName, String featuresetName,
        String featuresetVersion, String featureName, Context context) {
        Response<FeatureInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, workspaceName, featuresetName, featuresetVersion, featureName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new FeatureImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Feature get(String resourceGroupName, String workspaceName, String featuresetName, String featuresetVersion,
        String featureName) {
        FeatureInner inner = this.serviceClient()
            .get(resourceGroupName, workspaceName, featuresetName, featuresetVersion, featureName);
        if (inner != null) {
            return new FeatureImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private FeaturesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.machinelearning.MachineLearningManager manager() {
        return this.serviceManager;
    }
}
