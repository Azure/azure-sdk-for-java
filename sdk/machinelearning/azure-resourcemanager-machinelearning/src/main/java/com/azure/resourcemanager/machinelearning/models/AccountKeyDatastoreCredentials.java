// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Account key datastore credentials configuration. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "credentialsType")
@JsonTypeName("AccountKey")
@Fluent
public final class AccountKeyDatastoreCredentials extends DatastoreCredentials {
    /*
     * [Required] Storage account secrets.
     */
    @JsonProperty(value = "secrets", required = true)
    private AccountKeyDatastoreSecrets secrets;

    /** Creates an instance of AccountKeyDatastoreCredentials class. */
    public AccountKeyDatastoreCredentials() {
    }

    /**
     * Get the secrets property: [Required] Storage account secrets.
     *
     * @return the secrets value.
     */
    public AccountKeyDatastoreSecrets secrets() {
        return this.secrets;
    }

    /**
     * Set the secrets property: [Required] Storage account secrets.
     *
     * @param secrets the secrets value to set.
     * @return the AccountKeyDatastoreCredentials object itself.
     */
    public AccountKeyDatastoreCredentials withSecrets(AccountKeyDatastoreSecrets secrets) {
        this.secrets = secrets;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (secrets() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property secrets in model AccountKeyDatastoreCredentials"));
        } else {
            secrets().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AccountKeyDatastoreCredentials.class);
}
