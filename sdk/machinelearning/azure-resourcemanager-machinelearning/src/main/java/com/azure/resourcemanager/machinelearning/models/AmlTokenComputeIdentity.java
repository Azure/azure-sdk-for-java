// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * AML token compute identity definition.
 */
@Immutable
public final class AmlTokenComputeIdentity extends MonitorComputeIdentityBase {
    /*
     * [Required] Specifies the type of identity to use within the monitoring jobs.
     */
    private MonitorComputeIdentityType computeIdentityType = MonitorComputeIdentityType.AML_TOKEN;

    /**
     * Creates an instance of AmlTokenComputeIdentity class.
     */
    public AmlTokenComputeIdentity() {
    }

    /**
     * Get the computeIdentityType property: [Required] Specifies the type of identity to use within the monitoring
     * jobs.
     * 
     * @return the computeIdentityType value.
     */
    @Override
    public MonitorComputeIdentityType computeIdentityType() {
        return this.computeIdentityType;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("computeIdentityType",
            this.computeIdentityType == null ? null : this.computeIdentityType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AmlTokenComputeIdentity from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AmlTokenComputeIdentity if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AmlTokenComputeIdentity.
     */
    public static AmlTokenComputeIdentity fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AmlTokenComputeIdentity deserializedAmlTokenComputeIdentity = new AmlTokenComputeIdentity();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("computeIdentityType".equals(fieldName)) {
                    deserializedAmlTokenComputeIdentity.computeIdentityType
                        = MonitorComputeIdentityType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAmlTokenComputeIdentity;
        });
    }
}
