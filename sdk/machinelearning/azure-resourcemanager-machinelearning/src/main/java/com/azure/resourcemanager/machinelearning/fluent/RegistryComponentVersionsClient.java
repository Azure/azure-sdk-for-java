// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.machinelearning.fluent.models.ComponentVersionInner;

/**
 * An instance of this class provides access to all the operations defined in RegistryComponentVersionsClient.
 */
public interface RegistryComponentVersionsClient {
    /**
     * List versions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of ComponentVersion entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ComponentVersionInner> list(String resourceGroupName, String registryName, String componentName);

    /**
     * List versions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @param orderBy Ordering of list.
     * @param top Maximum number of records to return.
     * @param skip Continuation token for pagination.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of ComponentVersion entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ComponentVersionInner> list(String resourceGroupName, String registryName, String componentName,
        String orderBy, Integer top, String skip, Context context);

    /**
     * Delete version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @param version Version identifier.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String registryName, String componentName,
        String version);

    /**
     * Delete version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @param version Version identifier.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String registryName, String componentName,
        String version, Context context);

    /**
     * Delete version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @param version Version identifier.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String registryName, String componentName, String version);

    /**
     * Delete version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @param version Version identifier.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String registryName, String componentName, String version, Context context);

    /**
     * Get version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @param version Version identifier.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return version along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ComponentVersionInner> getWithResponse(String resourceGroupName, String registryName, String componentName,
        String version, Context context);

    /**
     * Get version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @param version Version identifier.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return version.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ComponentVersionInner get(String resourceGroupName, String registryName, String componentName, String version);

    /**
     * Create or update version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @param version Version identifier.
     * @param body Version entity to create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure Resource Manager resource envelope.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ComponentVersionInner>, ComponentVersionInner> beginCreateOrUpdate(String resourceGroupName,
        String registryName, String componentName, String version, ComponentVersionInner body);

    /**
     * Create or update version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @param version Version identifier.
     * @param body Version entity to create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure Resource Manager resource envelope.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ComponentVersionInner>, ComponentVersionInner> beginCreateOrUpdate(String resourceGroupName,
        String registryName, String componentName, String version, ComponentVersionInner body, Context context);

    /**
     * Create or update version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @param version Version identifier.
     * @param body Version entity to create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Resource Manager resource envelope.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ComponentVersionInner createOrUpdate(String resourceGroupName, String registryName, String componentName,
        String version, ComponentVersionInner body);

    /**
     * Create or update version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param componentName Container name.
     * @param version Version identifier.
     * @param body Version entity to create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Resource Manager resource envelope.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ComponentVersionInner createOrUpdate(String resourceGroupName, String registryName, String componentName,
        String version, ComponentVersionInner body, Context context);
}
