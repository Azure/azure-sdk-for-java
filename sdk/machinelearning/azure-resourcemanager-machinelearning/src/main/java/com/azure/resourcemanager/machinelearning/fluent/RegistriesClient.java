// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.machinelearning.fluent.models.RegistryInner;
import com.azure.resourcemanager.machinelearning.models.PartialRegistryPartialTrackedResource;

/**
 * An instance of this class provides access to all the operations defined in RegistriesClient.
 */
public interface RegistriesClient {
    /**
     * List registries by subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of Registry entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegistryInner> list();

    /**
     * List registries by subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of Registry entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegistryInner> list(Context context);

    /**
     * List registries.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of Registry entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegistryInner> listByResourceGroup(String resourceGroupName);

    /**
     * List registries.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of Registry entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegistryInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Delete registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String registryName);

    /**
     * Delete registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String registryName, Context context);

    /**
     * Delete registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String registryName);

    /**
     * Delete registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String registryName, Context context);

    /**
     * Get registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registry along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RegistryInner> getByResourceGroupWithResponse(String resourceGroupName, String registryName,
        Context context);

    /**
     * Get registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registry.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistryInner getByResourceGroup(String resourceGroupName, String registryName);

    /**
     * Update tags.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param body Details required to create the registry.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RegistryInner> updateWithResponse(String resourceGroupName, String registryName,
        PartialRegistryPartialTrackedResource body, Context context);

    /**
     * Update tags.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param body Details required to create the registry.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistryInner update(String resourceGroupName, String registryName, PartialRegistryPartialTrackedResource body);

    /**
     * Create or update registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param body Details required to create the registry.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistryInner>, RegistryInner> beginCreateOrUpdate(String resourceGroupName,
        String registryName, RegistryInner body);

    /**
     * Create or update registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param body Details required to create the registry.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistryInner>, RegistryInner> beginCreateOrUpdate(String resourceGroupName,
        String registryName, RegistryInner body, Context context);

    /**
     * Create or update registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param body Details required to create the registry.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistryInner createOrUpdate(String resourceGroupName, String registryName, RegistryInner body);

    /**
     * Create or update registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param body Details required to create the registry.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistryInner createOrUpdate(String resourceGroupName, String registryName, RegistryInner body, Context context);

    /**
     * Remove regions from registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param body Details required to create the registry.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistryInner>, RegistryInner> beginRemoveRegions(String resourceGroupName,
        String registryName, RegistryInner body);

    /**
     * Remove regions from registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param body Details required to create the registry.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistryInner>, RegistryInner> beginRemoveRegions(String resourceGroupName,
        String registryName, RegistryInner body, Context context);

    /**
     * Remove regions from registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param body Details required to create the registry.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistryInner removeRegions(String resourceGroupName, String registryName, RegistryInner body);

    /**
     * Remove regions from registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
     * @param body Details required to create the registry.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistryInner removeRegions(String resourceGroupName, String registryName, RegistryInner body, Context context);
}
