// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Collection of registered Tabular Dataset Ids and other data settings required for training and validating models. */
@Fluent
public class DataSettings {
    /*
     * [Required] Target column name: This is prediction values column.
     * Also known as label column name in context of classification tasks.
     */
    @JsonProperty(value = "targetColumnName", required = true)
    private String targetColumnName;

    /*
     * Test data input.
     */
    @JsonProperty(value = "testData")
    private TestDataSettings testData;

    /*
     * [Required] Training data input.
     */
    @JsonProperty(value = "trainingData", required = true)
    private TrainingDataSettings trainingData;

    /**
     * Get the targetColumnName property: [Required] Target column name: This is prediction values column. Also known as
     * label column name in context of classification tasks.
     *
     * @return the targetColumnName value.
     */
    public String targetColumnName() {
        return this.targetColumnName;
    }

    /**
     * Set the targetColumnName property: [Required] Target column name: This is prediction values column. Also known as
     * label column name in context of classification tasks.
     *
     * @param targetColumnName the targetColumnName value to set.
     * @return the DataSettings object itself.
     */
    public DataSettings withTargetColumnName(String targetColumnName) {
        this.targetColumnName = targetColumnName;
        return this;
    }

    /**
     * Get the testData property: Test data input.
     *
     * @return the testData value.
     */
    public TestDataSettings testData() {
        return this.testData;
    }

    /**
     * Set the testData property: Test data input.
     *
     * @param testData the testData value to set.
     * @return the DataSettings object itself.
     */
    public DataSettings withTestData(TestDataSettings testData) {
        this.testData = testData;
        return this;
    }

    /**
     * Get the trainingData property: [Required] Training data input.
     *
     * @return the trainingData value.
     */
    public TrainingDataSettings trainingData() {
        return this.trainingData;
    }

    /**
     * Set the trainingData property: [Required] Training data input.
     *
     * @param trainingData the trainingData value to set.
     * @return the DataSettings object itself.
     */
    public DataSettings withTrainingData(TrainingDataSettings trainingData) {
        this.trainingData = trainingData;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (targetColumnName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property targetColumnName in model DataSettings"));
        }
        if (testData() != null) {
            testData().validate();
        }
        if (trainingData() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property trainingData in model DataSettings"));
        } else {
            trainingData().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DataSettings.class);
}
