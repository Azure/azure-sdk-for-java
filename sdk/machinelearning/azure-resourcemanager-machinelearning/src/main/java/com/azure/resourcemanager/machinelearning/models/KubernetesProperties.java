// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Kubernetes properties.
 */
@Fluent
public final class KubernetesProperties implements JsonSerializable<KubernetesProperties> {
    /*
     * Relay connection string.
     */
    private String relayConnectionString;

    /*
     * ServiceBus connection string.
     */
    private String serviceBusConnectionString;

    /*
     * Extension principal-id.
     */
    private String extensionPrincipalId;

    /*
     * Extension instance release train.
     */
    private String extensionInstanceReleaseTrain;

    /*
     * VC name.
     */
    private String vcName;

    /*
     * Compute namespace
     */
    private String namespace;

    /*
     * Default instance type
     */
    private String defaultInstanceType;

    /*
     * Instance Type Schema
     */
    private Map<String, InstanceTypeSchema> instanceTypes;

    /**
     * Creates an instance of KubernetesProperties class.
     */
    public KubernetesProperties() {
    }

    /**
     * Get the relayConnectionString property: Relay connection string.
     * 
     * @return the relayConnectionString value.
     */
    public String relayConnectionString() {
        return this.relayConnectionString;
    }

    /**
     * Set the relayConnectionString property: Relay connection string.
     * 
     * @param relayConnectionString the relayConnectionString value to set.
     * @return the KubernetesProperties object itself.
     */
    public KubernetesProperties withRelayConnectionString(String relayConnectionString) {
        this.relayConnectionString = relayConnectionString;
        return this;
    }

    /**
     * Get the serviceBusConnectionString property: ServiceBus connection string.
     * 
     * @return the serviceBusConnectionString value.
     */
    public String serviceBusConnectionString() {
        return this.serviceBusConnectionString;
    }

    /**
     * Set the serviceBusConnectionString property: ServiceBus connection string.
     * 
     * @param serviceBusConnectionString the serviceBusConnectionString value to set.
     * @return the KubernetesProperties object itself.
     */
    public KubernetesProperties withServiceBusConnectionString(String serviceBusConnectionString) {
        this.serviceBusConnectionString = serviceBusConnectionString;
        return this;
    }

    /**
     * Get the extensionPrincipalId property: Extension principal-id.
     * 
     * @return the extensionPrincipalId value.
     */
    public String extensionPrincipalId() {
        return this.extensionPrincipalId;
    }

    /**
     * Set the extensionPrincipalId property: Extension principal-id.
     * 
     * @param extensionPrincipalId the extensionPrincipalId value to set.
     * @return the KubernetesProperties object itself.
     */
    public KubernetesProperties withExtensionPrincipalId(String extensionPrincipalId) {
        this.extensionPrincipalId = extensionPrincipalId;
        return this;
    }

    /**
     * Get the extensionInstanceReleaseTrain property: Extension instance release train.
     * 
     * @return the extensionInstanceReleaseTrain value.
     */
    public String extensionInstanceReleaseTrain() {
        return this.extensionInstanceReleaseTrain;
    }

    /**
     * Set the extensionInstanceReleaseTrain property: Extension instance release train.
     * 
     * @param extensionInstanceReleaseTrain the extensionInstanceReleaseTrain value to set.
     * @return the KubernetesProperties object itself.
     */
    public KubernetesProperties withExtensionInstanceReleaseTrain(String extensionInstanceReleaseTrain) {
        this.extensionInstanceReleaseTrain = extensionInstanceReleaseTrain;
        return this;
    }

    /**
     * Get the vcName property: VC name.
     * 
     * @return the vcName value.
     */
    public String vcName() {
        return this.vcName;
    }

    /**
     * Set the vcName property: VC name.
     * 
     * @param vcName the vcName value to set.
     * @return the KubernetesProperties object itself.
     */
    public KubernetesProperties withVcName(String vcName) {
        this.vcName = vcName;
        return this;
    }

    /**
     * Get the namespace property: Compute namespace.
     * 
     * @return the namespace value.
     */
    public String namespace() {
        return this.namespace;
    }

    /**
     * Set the namespace property: Compute namespace.
     * 
     * @param namespace the namespace value to set.
     * @return the KubernetesProperties object itself.
     */
    public KubernetesProperties withNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }

    /**
     * Get the defaultInstanceType property: Default instance type.
     * 
     * @return the defaultInstanceType value.
     */
    public String defaultInstanceType() {
        return this.defaultInstanceType;
    }

    /**
     * Set the defaultInstanceType property: Default instance type.
     * 
     * @param defaultInstanceType the defaultInstanceType value to set.
     * @return the KubernetesProperties object itself.
     */
    public KubernetesProperties withDefaultInstanceType(String defaultInstanceType) {
        this.defaultInstanceType = defaultInstanceType;
        return this;
    }

    /**
     * Get the instanceTypes property: Instance Type Schema.
     * 
     * @return the instanceTypes value.
     */
    public Map<String, InstanceTypeSchema> instanceTypes() {
        return this.instanceTypes;
    }

    /**
     * Set the instanceTypes property: Instance Type Schema.
     * 
     * @param instanceTypes the instanceTypes value to set.
     * @return the KubernetesProperties object itself.
     */
    public KubernetesProperties withInstanceTypes(Map<String, InstanceTypeSchema> instanceTypes) {
        this.instanceTypes = instanceTypes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (instanceTypes() != null) {
            instanceTypes().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("relayConnectionString", this.relayConnectionString);
        jsonWriter.writeStringField("serviceBusConnectionString", this.serviceBusConnectionString);
        jsonWriter.writeStringField("extensionPrincipalId", this.extensionPrincipalId);
        jsonWriter.writeStringField("extensionInstanceReleaseTrain", this.extensionInstanceReleaseTrain);
        jsonWriter.writeStringField("vcName", this.vcName);
        jsonWriter.writeStringField("namespace", this.namespace);
        jsonWriter.writeStringField("defaultInstanceType", this.defaultInstanceType);
        jsonWriter.writeMapField("instanceTypes", this.instanceTypes, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KubernetesProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KubernetesProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the KubernetesProperties.
     */
    public static KubernetesProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            KubernetesProperties deserializedKubernetesProperties = new KubernetesProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("relayConnectionString".equals(fieldName)) {
                    deserializedKubernetesProperties.relayConnectionString = reader.getString();
                } else if ("serviceBusConnectionString".equals(fieldName)) {
                    deserializedKubernetesProperties.serviceBusConnectionString = reader.getString();
                } else if ("extensionPrincipalId".equals(fieldName)) {
                    deserializedKubernetesProperties.extensionPrincipalId = reader.getString();
                } else if ("extensionInstanceReleaseTrain".equals(fieldName)) {
                    deserializedKubernetesProperties.extensionInstanceReleaseTrain = reader.getString();
                } else if ("vcName".equals(fieldName)) {
                    deserializedKubernetesProperties.vcName = reader.getString();
                } else if ("namespace".equals(fieldName)) {
                    deserializedKubernetesProperties.namespace = reader.getString();
                } else if ("defaultInstanceType".equals(fieldName)) {
                    deserializedKubernetesProperties.defaultInstanceType = reader.getString();
                } else if ("instanceTypes".equals(fieldName)) {
                    Map<String, InstanceTypeSchema> instanceTypes
                        = reader.readMap(reader1 -> InstanceTypeSchema.fromJson(reader1));
                    deserializedKubernetesProperties.instanceTypes = instanceTypes;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedKubernetesProperties;
        });
    }
}
