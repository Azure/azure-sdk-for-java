// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.machinelearning.models.RegistryListCredentialsResult;
import java.io.IOException;

/**
 * The ListWorkspaceKeysResult model.
 */
@Immutable
public final class ListWorkspaceKeysResultInner implements JsonSerializable<ListWorkspaceKeysResultInner> {
    /*
     * The userStorageKey property.
     */
    private String userStorageKey;

    /*
     * The userStorageResourceId property.
     */
    private String userStorageResourceId;

    /*
     * The appInsightsInstrumentationKey property.
     */
    private String appInsightsInstrumentationKey;

    /*
     * The containerRegistryCredentials property.
     */
    private RegistryListCredentialsResult containerRegistryCredentials;

    /*
     * The notebookAccessKeys property.
     */
    private ListNotebookKeysResultInner notebookAccessKeys;

    /**
     * Creates an instance of ListWorkspaceKeysResultInner class.
     */
    public ListWorkspaceKeysResultInner() {
    }

    /**
     * Get the userStorageKey property: The userStorageKey property.
     * 
     * @return the userStorageKey value.
     */
    public String userStorageKey() {
        return this.userStorageKey;
    }

    /**
     * Get the userStorageResourceId property: The userStorageResourceId property.
     * 
     * @return the userStorageResourceId value.
     */
    public String userStorageResourceId() {
        return this.userStorageResourceId;
    }

    /**
     * Get the appInsightsInstrumentationKey property: The appInsightsInstrumentationKey property.
     * 
     * @return the appInsightsInstrumentationKey value.
     */
    public String appInsightsInstrumentationKey() {
        return this.appInsightsInstrumentationKey;
    }

    /**
     * Get the containerRegistryCredentials property: The containerRegistryCredentials property.
     * 
     * @return the containerRegistryCredentials value.
     */
    public RegistryListCredentialsResult containerRegistryCredentials() {
        return this.containerRegistryCredentials;
    }

    /**
     * Get the notebookAccessKeys property: The notebookAccessKeys property.
     * 
     * @return the notebookAccessKeys value.
     */
    public ListNotebookKeysResultInner notebookAccessKeys() {
        return this.notebookAccessKeys;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (containerRegistryCredentials() != null) {
            containerRegistryCredentials().validate();
        }
        if (notebookAccessKeys() != null) {
            notebookAccessKeys().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ListWorkspaceKeysResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ListWorkspaceKeysResultInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ListWorkspaceKeysResultInner.
     */
    public static ListWorkspaceKeysResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ListWorkspaceKeysResultInner deserializedListWorkspaceKeysResultInner = new ListWorkspaceKeysResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("userStorageKey".equals(fieldName)) {
                    deserializedListWorkspaceKeysResultInner.userStorageKey = reader.getString();
                } else if ("userStorageResourceId".equals(fieldName)) {
                    deserializedListWorkspaceKeysResultInner.userStorageResourceId = reader.getString();
                } else if ("appInsightsInstrumentationKey".equals(fieldName)) {
                    deserializedListWorkspaceKeysResultInner.appInsightsInstrumentationKey = reader.getString();
                } else if ("containerRegistryCredentials".equals(fieldName)) {
                    deserializedListWorkspaceKeysResultInner.containerRegistryCredentials
                        = RegistryListCredentialsResult.fromJson(reader);
                } else if ("notebookAccessKeys".equals(fieldName)) {
                    deserializedListWorkspaceKeysResultInner.notebookAccessKeys
                        = ListNotebookKeysResultInner.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedListWorkspaceKeysResultInner;
        });
    }
}
