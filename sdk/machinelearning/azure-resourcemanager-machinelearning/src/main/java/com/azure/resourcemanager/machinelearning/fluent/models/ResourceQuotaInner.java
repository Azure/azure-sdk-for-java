// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.machinelearning.models.QuotaUnit;
import com.azure.resourcemanager.machinelearning.models.ResourceName;
import java.io.IOException;

/**
 * The quota assigned to a resource.
 */
@Immutable
public final class ResourceQuotaInner implements JsonSerializable<ResourceQuotaInner> {
    /*
     * Specifies the resource ID.
     */
    private String id;

    /*
     * Region of the AML workspace in the id.
     */
    private String amlWorkspaceLocation;

    /*
     * Specifies the resource type.
     */
    private String type;

    /*
     * Name of the resource.
     */
    private ResourceName name;

    /*
     * The maximum permitted quota of the resource.
     */
    private Long limit;

    /*
     * An enum describing the unit of quota measurement.
     */
    private QuotaUnit unit;

    /**
     * Creates an instance of ResourceQuotaInner class.
     */
    public ResourceQuotaInner() {
    }

    /**
     * Get the id property: Specifies the resource ID.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the amlWorkspaceLocation property: Region of the AML workspace in the id.
     * 
     * @return the amlWorkspaceLocation value.
     */
    public String amlWorkspaceLocation() {
        return this.amlWorkspaceLocation;
    }

    /**
     * Get the type property: Specifies the resource type.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: Name of the resource.
     * 
     * @return the name value.
     */
    public ResourceName name() {
        return this.name;
    }

    /**
     * Get the limit property: The maximum permitted quota of the resource.
     * 
     * @return the limit value.
     */
    public Long limit() {
        return this.limit;
    }

    /**
     * Get the unit property: An enum describing the unit of quota measurement.
     * 
     * @return the unit value.
     */
    public QuotaUnit unit() {
        return this.unit;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() != null) {
            name().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceQuotaInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceQuotaInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceQuotaInner.
     */
    public static ResourceQuotaInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceQuotaInner deserializedResourceQuotaInner = new ResourceQuotaInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedResourceQuotaInner.id = reader.getString();
                } else if ("amlWorkspaceLocation".equals(fieldName)) {
                    deserializedResourceQuotaInner.amlWorkspaceLocation = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedResourceQuotaInner.type = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedResourceQuotaInner.name = ResourceName.fromJson(reader);
                } else if ("limit".equals(fieldName)) {
                    deserializedResourceQuotaInner.limit = reader.getNullable(JsonReader::getLong);
                } else if ("unit".equals(fieldName)) {
                    deserializedResourceQuotaInner.unit = QuotaUnit.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceQuotaInner;
        });
    }
}
