// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.CodeContainerInner;
import com.azure.resourcemanager.machinelearning.models.CodeContainer;
import com.azure.resourcemanager.machinelearning.models.CodeContainerProperties;

public final class CodeContainerImpl implements CodeContainer, CodeContainer.Definition, CodeContainer.Update {
    private CodeContainerInner innerObject;

    private final com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public CodeContainerProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public CodeContainerInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.machinelearning.MachineLearningManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String registryName;

    private String codeName;

    public CodeContainerImpl withExistingRegistry(String resourceGroupName, String registryName) {
        this.resourceGroupName = resourceGroupName;
        this.registryName = registryName;
        return this;
    }

    public CodeContainer create() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryCodeContainers()
            .createOrUpdate(resourceGroupName, registryName, codeName, this.innerModel(), Context.NONE);
        return this;
    }

    public CodeContainer create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryCodeContainers()
            .createOrUpdate(resourceGroupName, registryName, codeName, this.innerModel(), context);
        return this;
    }

    CodeContainerImpl(String name, com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = new CodeContainerInner();
        this.serviceManager = serviceManager;
        this.codeName = name;
    }

    public CodeContainerImpl update() {
        return this;
    }

    public CodeContainer apply() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryCodeContainers()
            .createOrUpdate(resourceGroupName, registryName, codeName, this.innerModel(), Context.NONE);
        return this;
    }

    public CodeContainer apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryCodeContainers()
            .createOrUpdate(resourceGroupName, registryName, codeName, this.innerModel(), context);
        return this;
    }

    CodeContainerImpl(CodeContainerInner innerObject,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.registryName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "registries");
        this.codeName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "codes");
    }

    public CodeContainer refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryCodeContainers()
            .getWithResponse(resourceGroupName, registryName, codeName, Context.NONE)
            .getValue();
        return this;
    }

    public CodeContainer refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryCodeContainers()
            .getWithResponse(resourceGroupName, registryName, codeName, context)
            .getValue();
        return this;
    }

    public CodeContainerImpl withProperties(CodeContainerProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
