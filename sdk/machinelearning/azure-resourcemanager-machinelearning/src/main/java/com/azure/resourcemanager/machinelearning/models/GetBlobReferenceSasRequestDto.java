// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * BlobReferenceSASRequest for getBlobReferenceSAS API.
 */
@Fluent
public final class GetBlobReferenceSasRequestDto implements JsonSerializable<GetBlobReferenceSasRequestDto> {
    /*
     * Id of the asset to be accessed
     */
    private String assetId;

    /*
     * Blob uri of the asset to be accessed
     */
    private String blobUri;

    /**
     * Creates an instance of GetBlobReferenceSasRequestDto class.
     */
    public GetBlobReferenceSasRequestDto() {
    }

    /**
     * Get the assetId property: Id of the asset to be accessed.
     * 
     * @return the assetId value.
     */
    public String assetId() {
        return this.assetId;
    }

    /**
     * Set the assetId property: Id of the asset to be accessed.
     * 
     * @param assetId the assetId value to set.
     * @return the GetBlobReferenceSasRequestDto object itself.
     */
    public GetBlobReferenceSasRequestDto withAssetId(String assetId) {
        this.assetId = assetId;
        return this;
    }

    /**
     * Get the blobUri property: Blob uri of the asset to be accessed.
     * 
     * @return the blobUri value.
     */
    public String blobUri() {
        return this.blobUri;
    }

    /**
     * Set the blobUri property: Blob uri of the asset to be accessed.
     * 
     * @param blobUri the blobUri value to set.
     * @return the GetBlobReferenceSasRequestDto object itself.
     */
    public GetBlobReferenceSasRequestDto withBlobUri(String blobUri) {
        this.blobUri = blobUri;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("assetId", this.assetId);
        jsonWriter.writeStringField("blobUri", this.blobUri);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GetBlobReferenceSasRequestDto from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GetBlobReferenceSasRequestDto if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GetBlobReferenceSasRequestDto.
     */
    public static GetBlobReferenceSasRequestDto fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GetBlobReferenceSasRequestDto deserializedGetBlobReferenceSasRequestDto
                = new GetBlobReferenceSasRequestDto();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("assetId".equals(fieldName)) {
                    deserializedGetBlobReferenceSasRequestDto.assetId = reader.getString();
                } else if ("blobUri".equals(fieldName)) {
                    deserializedGetBlobReferenceSasRequestDto.blobUri = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGetBlobReferenceSasRequestDto;
        });
    }
}
