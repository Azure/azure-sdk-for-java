// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.Duration;

/**
 * Retry settings for a batch inference operation.
 */
@Fluent
public final class BatchRetrySettings implements JsonSerializable<BatchRetrySettings> {
    /*
     * Maximum retry count for a mini-batch
     */
    private Integer maxRetries;

    /*
     * Invocation timeout for a mini-batch, in ISO 8601 format.
     */
    private Duration timeout;

    /**
     * Creates an instance of BatchRetrySettings class.
     */
    public BatchRetrySettings() {
    }

    /**
     * Get the maxRetries property: Maximum retry count for a mini-batch.
     * 
     * @return the maxRetries value.
     */
    public Integer maxRetries() {
        return this.maxRetries;
    }

    /**
     * Set the maxRetries property: Maximum retry count for a mini-batch.
     * 
     * @param maxRetries the maxRetries value to set.
     * @return the BatchRetrySettings object itself.
     */
    public BatchRetrySettings withMaxRetries(Integer maxRetries) {
        this.maxRetries = maxRetries;
        return this;
    }

    /**
     * Get the timeout property: Invocation timeout for a mini-batch, in ISO 8601 format.
     * 
     * @return the timeout value.
     */
    public Duration timeout() {
        return this.timeout;
    }

    /**
     * Set the timeout property: Invocation timeout for a mini-batch, in ISO 8601 format.
     * 
     * @param timeout the timeout value to set.
     * @return the BatchRetrySettings object itself.
     */
    public BatchRetrySettings withTimeout(Duration timeout) {
        this.timeout = timeout;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("maxRetries", this.maxRetries);
        jsonWriter.writeStringField("timeout", CoreUtils.durationToStringWithDays(this.timeout));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BatchRetrySettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BatchRetrySettings if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the BatchRetrySettings.
     */
    public static BatchRetrySettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BatchRetrySettings deserializedBatchRetrySettings = new BatchRetrySettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("maxRetries".equals(fieldName)) {
                    deserializedBatchRetrySettings.maxRetries = reader.getNullable(JsonReader::getInt);
                } else if ("timeout".equals(fieldName)) {
                    deserializedBatchRetrySettings.timeout
                        = reader.getNullable(nonNullReader -> Duration.parse(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBatchRetrySettings;
        });
    }
}
