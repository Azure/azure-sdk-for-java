// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.ModelVersionInner;

/**
 * An immutable client-side representation of ModelVersion.
 */
public interface ModelVersion {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the properties property: [Required] Additional attributes of the entity.
     * 
     * @return the properties value.
     */
    ModelVersionProperties properties();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.machinelearning.fluent.models.ModelVersionInner object.
     * 
     * @return the inner object.
     */
    ModelVersionInner innerModel();

    /**
     * The entirety of the ModelVersion definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithParentResource,
        DefinitionStages.WithProperties, DefinitionStages.WithCreate {
    }

    /**
     * The ModelVersion definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ModelVersion definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the ModelVersion definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, registryName, modelName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param registryName Name of Azure Machine Learning registry. This is case-insensitive.
             * @param modelName Container name.
             * @return the next definition stage.
             */
            WithProperties withExistingModel(String resourceGroupName, String registryName, String modelName);
        }

        /**
         * The stage of the ModelVersion definition allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: [Required] Additional attributes of the entity..
             * 
             * @param properties [Required] Additional attributes of the entity.
             * @return the next definition stage.
             */
            WithCreate withProperties(ModelVersionProperties properties);
        }

        /**
         * The stage of the ModelVersion definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ModelVersion create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ModelVersion create(Context context);
        }
    }

    /**
     * Begins update for the ModelVersion resource.
     * 
     * @return the stage of resource update.
     */
    ModelVersion.Update update();

    /**
     * The template for ModelVersion update.
     */
    interface Update extends UpdateStages.WithProperties {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        ModelVersion apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ModelVersion apply(Context context);
    }

    /**
     * The ModelVersion update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the ModelVersion update allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: [Required] Additional attributes of the entity..
             * 
             * @param properties [Required] Additional attributes of the entity.
             * @return the next definition stage.
             */
            Update withProperties(ModelVersionProperties properties);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    ModelVersion refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ModelVersion refresh(Context context);

    /**
     * Generate a storage location and credential for the client to upload a model asset to.
     * 
     * @param body Pending upload request object.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<PendingUploadResponseDto> createOrGetStartPendingUploadWithResponse(PendingUploadRequestDto body,
        Context context);

    /**
     * Generate a storage location and credential for the client to upload a model asset to.
     * 
     * @param body Pending upload request object.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    PendingUploadResponseDto createOrGetStartPendingUpload(PendingUploadRequestDto body);
}
