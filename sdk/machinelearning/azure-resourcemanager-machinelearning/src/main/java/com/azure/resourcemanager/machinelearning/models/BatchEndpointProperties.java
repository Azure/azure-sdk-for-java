// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.machinelearning.fluent.models.EndpointAuthKeysInner;
import com.azure.resourcemanager.machinelearning.fluent.models.EndpointPropertiesBaseInner;
import java.io.IOException;
import java.util.Map;

/**
 * Batch endpoint configuration.
 */
@Fluent
public final class BatchEndpointProperties extends EndpointPropertiesBaseInner {
    /*
     * Default values for Batch Endpoint
     */
    private BatchEndpointDefaults defaults;

    /*
     * Provisioning state for the endpoint.
     */
    private EndpointProvisioningState provisioningState;

    /*
     * Endpoint URI.
     */
    private String scoringUri;

    /*
     * Endpoint Swagger URI.
     */
    private String swaggerUri;

    /**
     * Creates an instance of BatchEndpointProperties class.
     */
    public BatchEndpointProperties() {
    }

    /**
     * Get the defaults property: Default values for Batch Endpoint.
     * 
     * @return the defaults value.
     */
    public BatchEndpointDefaults defaults() {
        return this.defaults;
    }

    /**
     * Set the defaults property: Default values for Batch Endpoint.
     * 
     * @param defaults the defaults value to set.
     * @return the BatchEndpointProperties object itself.
     */
    public BatchEndpointProperties withDefaults(BatchEndpointDefaults defaults) {
        this.defaults = defaults;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state for the endpoint.
     * 
     * @return the provisioningState value.
     */
    public EndpointProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the scoringUri property: Endpoint URI.
     * 
     * @return the scoringUri value.
     */
    @Override
    public String scoringUri() {
        return this.scoringUri;
    }

    /**
     * Get the swaggerUri property: Endpoint Swagger URI.
     * 
     * @return the swaggerUri value.
     */
    @Override
    public String swaggerUri() {
        return this.swaggerUri;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchEndpointProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchEndpointProperties withProperties(Map<String, String> properties) {
        super.withProperties(properties);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchEndpointProperties withAuthMode(EndpointAuthMode authMode) {
        super.withAuthMode(authMode);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchEndpointProperties withKeys(EndpointAuthKeysInner keys) {
        super.withKeys(keys);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (defaults() != null) {
            defaults().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("authMode", authMode() == null ? null : authMode().toString());
        jsonWriter.writeStringField("description", description());
        jsonWriter.writeMapField("properties", properties(), (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("keys", keys());
        jsonWriter.writeJsonField("defaults", this.defaults);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BatchEndpointProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BatchEndpointProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the BatchEndpointProperties.
     */
    public static BatchEndpointProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BatchEndpointProperties deserializedBatchEndpointProperties = new BatchEndpointProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("authMode".equals(fieldName)) {
                    deserializedBatchEndpointProperties.withAuthMode(EndpointAuthMode.fromString(reader.getString()));
                } else if ("description".equals(fieldName)) {
                    deserializedBatchEndpointProperties.withDescription(reader.getString());
                } else if ("properties".equals(fieldName)) {
                    Map<String, String> properties = reader.readMap(reader1 -> reader1.getString());
                    deserializedBatchEndpointProperties.withProperties(properties);
                } else if ("scoringUri".equals(fieldName)) {
                    deserializedBatchEndpointProperties.scoringUri = reader.getString();
                } else if ("swaggerUri".equals(fieldName)) {
                    deserializedBatchEndpointProperties.swaggerUri = reader.getString();
                } else if ("keys".equals(fieldName)) {
                    deserializedBatchEndpointProperties.withKeys(EndpointAuthKeysInner.fromJson(reader));
                } else if ("defaults".equals(fieldName)) {
                    deserializedBatchEndpointProperties.defaults = BatchEndpointDefaults.fromJson(reader);
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedBatchEndpointProperties.provisioningState
                        = EndpointProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBatchEndpointProperties;
        });
    }
}
