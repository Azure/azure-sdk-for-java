// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * The JobResourceConfiguration model.
 */
@Fluent
public final class JobResourceConfiguration extends ResourceConfiguration {
    /*
     * Size of the docker container's shared memory block. This should be in the format of (number)(unit) where number
     * as to be greater than 0 and the unit can be one of b(bytes), k(kilobytes), m(megabytes), or g(gigabytes).
     */
    private String shmSize;

    /*
     * Extra arguments to pass to the Docker run command. This would override any parameters that have already been set
     * by the system, or in this section. This parameter is only supported for Azure ML compute types.
     */
    private String dockerArgs;

    /**
     * Creates an instance of JobResourceConfiguration class.
     */
    public JobResourceConfiguration() {
    }

    /**
     * Get the shmSize property: Size of the docker container's shared memory block. This should be in the format of
     * (number)(unit) where number as to be greater than 0 and the unit can be one of b(bytes), k(kilobytes),
     * m(megabytes), or g(gigabytes).
     * 
     * @return the shmSize value.
     */
    public String shmSize() {
        return this.shmSize;
    }

    /**
     * Set the shmSize property: Size of the docker container's shared memory block. This should be in the format of
     * (number)(unit) where number as to be greater than 0 and the unit can be one of b(bytes), k(kilobytes),
     * m(megabytes), or g(gigabytes).
     * 
     * @param shmSize the shmSize value to set.
     * @return the JobResourceConfiguration object itself.
     */
    public JobResourceConfiguration withShmSize(String shmSize) {
        this.shmSize = shmSize;
        return this;
    }

    /**
     * Get the dockerArgs property: Extra arguments to pass to the Docker run command. This would override any
     * parameters that have already been set by the system, or in this section. This parameter is only supported for
     * Azure ML compute types.
     * 
     * @return the dockerArgs value.
     */
    public String dockerArgs() {
        return this.dockerArgs;
    }

    /**
     * Set the dockerArgs property: Extra arguments to pass to the Docker run command. This would override any
     * parameters that have already been set by the system, or in this section. This parameter is only supported for
     * Azure ML compute types.
     * 
     * @param dockerArgs the dockerArgs value to set.
     * @return the JobResourceConfiguration object itself.
     */
    public JobResourceConfiguration withDockerArgs(String dockerArgs) {
        this.dockerArgs = dockerArgs;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobResourceConfiguration withInstanceCount(Integer instanceCount) {
        super.withInstanceCount(instanceCount);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobResourceConfiguration withInstanceType(String instanceType) {
        super.withInstanceType(instanceType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobResourceConfiguration withProperties(Map<String, Object> properties) {
        super.withProperties(properties);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("instanceCount", instanceCount());
        jsonWriter.writeStringField("instanceType", instanceType());
        jsonWriter.writeMapField("properties", properties(), (writer, element) -> writer.writeUntyped(element));
        jsonWriter.writeStringField("shmSize", this.shmSize);
        jsonWriter.writeStringField("dockerArgs", this.dockerArgs);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of JobResourceConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of JobResourceConfiguration if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the JobResourceConfiguration.
     */
    public static JobResourceConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            JobResourceConfiguration deserializedJobResourceConfiguration = new JobResourceConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceCount".equals(fieldName)) {
                    deserializedJobResourceConfiguration.withInstanceCount(reader.getNullable(JsonReader::getInt));
                } else if ("instanceType".equals(fieldName)) {
                    deserializedJobResourceConfiguration.withInstanceType(reader.getString());
                } else if ("properties".equals(fieldName)) {
                    Map<String, Object> properties = reader.readMap(reader1 -> reader1.readUntyped());
                    deserializedJobResourceConfiguration.withProperties(properties);
                } else if ("shmSize".equals(fieldName)) {
                    deserializedJobResourceConfiguration.shmSize = reader.getString();
                } else if ("dockerArgs".equals(fieldName)) {
                    deserializedJobResourceConfiguration.dockerArgs = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedJobResourceConfiguration;
        });
    }
}
