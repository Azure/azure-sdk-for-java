// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** The UriFolderJobInput model. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "jobInputType")
@JsonTypeName("uri_folder")
@Fluent
public final class UriFolderJobInput extends JobInput {
    /*
     * Input Asset Delivery Mode.
     */
    @JsonProperty(value = "mode")
    private InputDeliveryMode mode;

    /*
     * [Required] Input Asset URI.
     */
    @JsonProperty(value = "uri", required = true)
    private String uri;

    /** Creates an instance of UriFolderJobInput class. */
    public UriFolderJobInput() {
    }

    /**
     * Get the mode property: Input Asset Delivery Mode.
     *
     * @return the mode value.
     */
    public InputDeliveryMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: Input Asset Delivery Mode.
     *
     * @param mode the mode value to set.
     * @return the UriFolderJobInput object itself.
     */
    public UriFolderJobInput withMode(InputDeliveryMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the uri property: [Required] Input Asset URI.
     *
     * @return the uri value.
     */
    public String uri() {
        return this.uri;
    }

    /**
     * Set the uri property: [Required] Input Asset URI.
     *
     * @param uri the uri value to set.
     * @return the UriFolderJobInput object itself.
     */
    public UriFolderJobInput withUri(String uri) {
        this.uri = uri;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public UriFolderJobInput withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (uri() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property uri in model UriFolderJobInput"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(UriFolderJobInput.class);
}
