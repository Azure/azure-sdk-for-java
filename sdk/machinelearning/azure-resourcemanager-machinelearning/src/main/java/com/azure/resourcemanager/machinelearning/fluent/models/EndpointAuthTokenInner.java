// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Service Token.
 */
@Fluent
public final class EndpointAuthTokenInner implements JsonSerializable<EndpointAuthTokenInner> {
    /*
     * Access token for endpoint authentication.
     */
    private String accessToken;

    /*
     * Access token type.
     */
    private String tokenType;

    /*
     * Access token expiry time (UTC).
     */
    private Long expiryTimeUtc;

    /*
     * Refresh access token after time (UTC).
     */
    private Long refreshAfterTimeUtc;

    /**
     * Creates an instance of EndpointAuthTokenInner class.
     */
    public EndpointAuthTokenInner() {
    }

    /**
     * Get the accessToken property: Access token for endpoint authentication.
     * 
     * @return the accessToken value.
     */
    public String accessToken() {
        return this.accessToken;
    }

    /**
     * Set the accessToken property: Access token for endpoint authentication.
     * 
     * @param accessToken the accessToken value to set.
     * @return the EndpointAuthTokenInner object itself.
     */
    public EndpointAuthTokenInner withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }

    /**
     * Get the tokenType property: Access token type.
     * 
     * @return the tokenType value.
     */
    public String tokenType() {
        return this.tokenType;
    }

    /**
     * Set the tokenType property: Access token type.
     * 
     * @param tokenType the tokenType value to set.
     * @return the EndpointAuthTokenInner object itself.
     */
    public EndpointAuthTokenInner withTokenType(String tokenType) {
        this.tokenType = tokenType;
        return this;
    }

    /**
     * Get the expiryTimeUtc property: Access token expiry time (UTC).
     * 
     * @return the expiryTimeUtc value.
     */
    public Long expiryTimeUtc() {
        return this.expiryTimeUtc;
    }

    /**
     * Set the expiryTimeUtc property: Access token expiry time (UTC).
     * 
     * @param expiryTimeUtc the expiryTimeUtc value to set.
     * @return the EndpointAuthTokenInner object itself.
     */
    public EndpointAuthTokenInner withExpiryTimeUtc(Long expiryTimeUtc) {
        this.expiryTimeUtc = expiryTimeUtc;
        return this;
    }

    /**
     * Get the refreshAfterTimeUtc property: Refresh access token after time (UTC).
     * 
     * @return the refreshAfterTimeUtc value.
     */
    public Long refreshAfterTimeUtc() {
        return this.refreshAfterTimeUtc;
    }

    /**
     * Set the refreshAfterTimeUtc property: Refresh access token after time (UTC).
     * 
     * @param refreshAfterTimeUtc the refreshAfterTimeUtc value to set.
     * @return the EndpointAuthTokenInner object itself.
     */
    public EndpointAuthTokenInner withRefreshAfterTimeUtc(Long refreshAfterTimeUtc) {
        this.refreshAfterTimeUtc = refreshAfterTimeUtc;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accessToken", this.accessToken);
        jsonWriter.writeStringField("tokenType", this.tokenType);
        jsonWriter.writeNumberField("expiryTimeUtc", this.expiryTimeUtc);
        jsonWriter.writeNumberField("refreshAfterTimeUtc", this.refreshAfterTimeUtc);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EndpointAuthTokenInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EndpointAuthTokenInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EndpointAuthTokenInner.
     */
    public static EndpointAuthTokenInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EndpointAuthTokenInner deserializedEndpointAuthTokenInner = new EndpointAuthTokenInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accessToken".equals(fieldName)) {
                    deserializedEndpointAuthTokenInner.accessToken = reader.getString();
                } else if ("tokenType".equals(fieldName)) {
                    deserializedEndpointAuthTokenInner.tokenType = reader.getString();
                } else if ("expiryTimeUtc".equals(fieldName)) {
                    deserializedEndpointAuthTokenInner.expiryTimeUtc = reader.getNullable(JsonReader::getLong);
                } else if ("refreshAfterTimeUtc".equals(fieldName)) {
                    deserializedEndpointAuthTokenInner.refreshAfterTimeUtc = reader.getNullable(JsonReader::getLong);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEndpointAuthTokenInner;
        });
    }
}
