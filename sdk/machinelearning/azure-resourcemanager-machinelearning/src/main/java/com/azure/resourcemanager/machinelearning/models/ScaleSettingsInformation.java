// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Desired scale settings for the amlCompute.
 */
@Fluent
public final class ScaleSettingsInformation implements JsonSerializable<ScaleSettingsInformation> {
    /*
     * scale settings for AML Compute
     */
    private ScaleSettings scaleSettings;

    /**
     * Creates an instance of ScaleSettingsInformation class.
     */
    public ScaleSettingsInformation() {
    }

    /**
     * Get the scaleSettings property: scale settings for AML Compute.
     * 
     * @return the scaleSettings value.
     */
    public ScaleSettings scaleSettings() {
        return this.scaleSettings;
    }

    /**
     * Set the scaleSettings property: scale settings for AML Compute.
     * 
     * @param scaleSettings the scaleSettings value to set.
     * @return the ScaleSettingsInformation object itself.
     */
    public ScaleSettingsInformation withScaleSettings(ScaleSettings scaleSettings) {
        this.scaleSettings = scaleSettings;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (scaleSettings() != null) {
            scaleSettings().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("scaleSettings", this.scaleSettings);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ScaleSettingsInformation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ScaleSettingsInformation if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ScaleSettingsInformation.
     */
    public static ScaleSettingsInformation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ScaleSettingsInformation deserializedScaleSettingsInformation = new ScaleSettingsInformation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("scaleSettings".equals(fieldName)) {
                    deserializedScaleSettingsInformation.scaleSettings = ScaleSettings.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedScaleSettingsInformation;
        });
    }
}
