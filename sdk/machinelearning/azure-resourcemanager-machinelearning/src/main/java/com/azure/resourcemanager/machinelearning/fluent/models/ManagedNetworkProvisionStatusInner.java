// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.machinelearning.models.ManagedNetworkStatus;
import java.io.IOException;

/**
 * Status of the Provisioning for the managed network of a machine learning workspace.
 */
@Fluent
public final class ManagedNetworkProvisionStatusInner implements JsonSerializable<ManagedNetworkProvisionStatusInner> {
    /*
     * The sparkReady property.
     */
    private Boolean sparkReady;

    /*
     * Status for the managed network of a machine learning workspace.
     */
    private ManagedNetworkStatus status;

    /**
     * Creates an instance of ManagedNetworkProvisionStatusInner class.
     */
    public ManagedNetworkProvisionStatusInner() {
    }

    /**
     * Get the sparkReady property: The sparkReady property.
     * 
     * @return the sparkReady value.
     */
    public Boolean sparkReady() {
        return this.sparkReady;
    }

    /**
     * Set the sparkReady property: The sparkReady property.
     * 
     * @param sparkReady the sparkReady value to set.
     * @return the ManagedNetworkProvisionStatusInner object itself.
     */
    public ManagedNetworkProvisionStatusInner withSparkReady(Boolean sparkReady) {
        this.sparkReady = sparkReady;
        return this;
    }

    /**
     * Get the status property: Status for the managed network of a machine learning workspace.
     * 
     * @return the status value.
     */
    public ManagedNetworkStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Status for the managed network of a machine learning workspace.
     * 
     * @param status the status value to set.
     * @return the ManagedNetworkProvisionStatusInner object itself.
     */
    public ManagedNetworkProvisionStatusInner withStatus(ManagedNetworkStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("sparkReady", this.sparkReady);
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedNetworkProvisionStatusInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedNetworkProvisionStatusInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManagedNetworkProvisionStatusInner.
     */
    public static ManagedNetworkProvisionStatusInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedNetworkProvisionStatusInner deserializedManagedNetworkProvisionStatusInner
                = new ManagedNetworkProvisionStatusInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sparkReady".equals(fieldName)) {
                    deserializedManagedNetworkProvisionStatusInner.sparkReady
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("status".equals(fieldName)) {
                    deserializedManagedNetworkProvisionStatusInner.status
                        = ManagedNetworkStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedNetworkProvisionStatusInner;
        });
    }
}
