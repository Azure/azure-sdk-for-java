// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.machinelearning.models.ValueFormat;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Workspace connection. */
@Fluent
public final class WorkspaceConnectionInner extends ProxyResource {
    /*
     * Properties of workspace connection.
     */
    @JsonProperty(value = "properties")
    private WorkspaceConnectionProps innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy
     * information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Get the innerProperties property: Properties of workspace connection.
     *
     * @return the innerProperties value.
     */
    private WorkspaceConnectionProps innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the category property: Category of the workspace connection.
     *
     * @return the category value.
     */
    public String category() {
        return this.innerProperties() == null ? null : this.innerProperties().category();
    }

    /**
     * Set the category property: Category of the workspace connection.
     *
     * @param category the category value to set.
     * @return the WorkspaceConnectionInner object itself.
     */
    public WorkspaceConnectionInner withCategory(String category) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkspaceConnectionProps();
        }
        this.innerProperties().withCategory(category);
        return this;
    }

    /**
     * Get the target property: Target of the workspace connection.
     *
     * @return the target value.
     */
    public String target() {
        return this.innerProperties() == null ? null : this.innerProperties().target();
    }

    /**
     * Set the target property: Target of the workspace connection.
     *
     * @param target the target value to set.
     * @return the WorkspaceConnectionInner object itself.
     */
    public WorkspaceConnectionInner withTarget(String target) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkspaceConnectionProps();
        }
        this.innerProperties().withTarget(target);
        return this;
    }

    /**
     * Get the authType property: Authorization type of the workspace connection.
     *
     * @return the authType value.
     */
    public String authType() {
        return this.innerProperties() == null ? null : this.innerProperties().authType();
    }

    /**
     * Set the authType property: Authorization type of the workspace connection.
     *
     * @param authType the authType value to set.
     * @return the WorkspaceConnectionInner object itself.
     */
    public WorkspaceConnectionInner withAuthType(String authType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkspaceConnectionProps();
        }
        this.innerProperties().withAuthType(authType);
        return this;
    }

    /**
     * Get the value property: Value details of the workspace connection.
     *
     * @return the value value.
     */
    public String value() {
        return this.innerProperties() == null ? null : this.innerProperties().value();
    }

    /**
     * Set the value property: Value details of the workspace connection.
     *
     * @param value the value value to set.
     * @return the WorkspaceConnectionInner object itself.
     */
    public WorkspaceConnectionInner withValue(String value) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkspaceConnectionProps();
        }
        this.innerProperties().withValue(value);
        return this;
    }

    /**
     * Get the valueFormat property: format for the workspace connection value.
     *
     * @return the valueFormat value.
     */
    public ValueFormat valueFormat() {
        return this.innerProperties() == null ? null : this.innerProperties().valueFormat();
    }

    /**
     * Set the valueFormat property: format for the workspace connection value.
     *
     * @param valueFormat the valueFormat value to set.
     * @return the WorkspaceConnectionInner object itself.
     */
    public WorkspaceConnectionInner withValueFormat(ValueFormat valueFormat) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkspaceConnectionProps();
        }
        this.innerProperties().withValueFormat(valueFormat);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
