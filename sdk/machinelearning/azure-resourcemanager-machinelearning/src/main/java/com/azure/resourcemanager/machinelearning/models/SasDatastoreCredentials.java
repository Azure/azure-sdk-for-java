// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * SAS datastore credentials configuration.
 */
@Fluent
public final class SasDatastoreCredentials extends DatastoreCredentials {
    /*
     * [Required] Credential type used to authentication with storage.
     */
    private CredentialsType credentialsType = CredentialsType.SAS;

    /*
     * [Required] Storage container secrets.
     */
    private SasDatastoreSecrets secrets;

    /**
     * Creates an instance of SasDatastoreCredentials class.
     */
    public SasDatastoreCredentials() {
    }

    /**
     * Get the credentialsType property: [Required] Credential type used to authentication with storage.
     * 
     * @return the credentialsType value.
     */
    @Override
    public CredentialsType credentialsType() {
        return this.credentialsType;
    }

    /**
     * Get the secrets property: [Required] Storage container secrets.
     * 
     * @return the secrets value.
     */
    public SasDatastoreSecrets secrets() {
        return this.secrets;
    }

    /**
     * Set the secrets property: [Required] Storage container secrets.
     * 
     * @param secrets the secrets value to set.
     * @return the SasDatastoreCredentials object itself.
     */
    public SasDatastoreCredentials withSecrets(SasDatastoreSecrets secrets) {
        this.secrets = secrets;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (secrets() == null) {
            throw LOGGER.atError()
                .log(
                    new IllegalArgumentException("Missing required property secrets in model SasDatastoreCredentials"));
        } else {
            secrets().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SasDatastoreCredentials.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("secrets", this.secrets);
        jsonWriter.writeStringField("credentialsType",
            this.credentialsType == null ? null : this.credentialsType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SasDatastoreCredentials from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SasDatastoreCredentials if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SasDatastoreCredentials.
     */
    public static SasDatastoreCredentials fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SasDatastoreCredentials deserializedSasDatastoreCredentials = new SasDatastoreCredentials();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("secrets".equals(fieldName)) {
                    deserializedSasDatastoreCredentials.secrets = SasDatastoreSecrets.fromJson(reader);
                } else if ("credentialsType".equals(fieldName)) {
                    deserializedSasDatastoreCredentials.credentialsType
                        = CredentialsType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSasDatastoreCredentials;
        });
    }
}
