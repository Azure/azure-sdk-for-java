// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Recurrence schedule pattern definition. */
@Fluent
public final class RecurrencePattern {
    /*
     * [Required] List of hours for recurrence schedule pattern
     */
    @JsonProperty(value = "hours", required = true)
    private List<Integer> hours;

    /*
     * [Required] List of minutes for recurrence schedule pattern
     */
    @JsonProperty(value = "minutes", required = true)
    private List<Integer> minutes;

    /*
     * List of weekdays for recurrence schedule pattern
     */
    @JsonProperty(value = "weekdays")
    private List<Weekday> weekdays;

    /**
     * Get the hours property: [Required] List of hours for recurrence schedule pattern.
     *
     * @return the hours value.
     */
    public List<Integer> hours() {
        return this.hours;
    }

    /**
     * Set the hours property: [Required] List of hours for recurrence schedule pattern.
     *
     * @param hours the hours value to set.
     * @return the RecurrencePattern object itself.
     */
    public RecurrencePattern withHours(List<Integer> hours) {
        this.hours = hours;
        return this;
    }

    /**
     * Get the minutes property: [Required] List of minutes for recurrence schedule pattern.
     *
     * @return the minutes value.
     */
    public List<Integer> minutes() {
        return this.minutes;
    }

    /**
     * Set the minutes property: [Required] List of minutes for recurrence schedule pattern.
     *
     * @param minutes the minutes value to set.
     * @return the RecurrencePattern object itself.
     */
    public RecurrencePattern withMinutes(List<Integer> minutes) {
        this.minutes = minutes;
        return this;
    }

    /**
     * Get the weekdays property: List of weekdays for recurrence schedule pattern.
     *
     * @return the weekdays value.
     */
    public List<Weekday> weekdays() {
        return this.weekdays;
    }

    /**
     * Set the weekdays property: List of weekdays for recurrence schedule pattern.
     *
     * @param weekdays the weekdays value to set.
     * @return the RecurrencePattern object itself.
     */
    public RecurrencePattern withWeekdays(List<Weekday> weekdays) {
        this.weekdays = weekdays;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (hours() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property hours in model RecurrencePattern"));
        }
        if (minutes() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property minutes in model RecurrencePattern"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RecurrencePattern.class);
}
