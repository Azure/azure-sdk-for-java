// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.RegistryInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of Registry.
 */
public interface Registry {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: Managed service identity (system assigned and/or user assigned identities).
     * 
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * Gets the kind property: Metadata used by portal/tooling/etc to render different UX experiences for resources of
     * the same type.
     * 
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the sku property: Sku details required for ARM contract for Autoscaling.
     * 
     * @return the sku value.
     */
    Sku sku();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the discoveryUrl property: Discovery URL for the Registry.
     * 
     * @return the discoveryUrl value.
     */
    String discoveryUrl();

    /**
     * Gets the intellectualPropertyPublisher property: IntellectualPropertyPublisher for the registry.
     * 
     * @return the intellectualPropertyPublisher value.
     */
    String intellectualPropertyPublisher();

    /**
     * Gets the managedResourceGroup property: ResourceId of the managed RG if the registry has system created
     * resources.
     * 
     * @return the managedResourceGroup value.
     */
    ArmResourceId managedResourceGroup();

    /**
     * Gets the mlFlowRegistryUri property: MLFlow Registry URI for the Registry.
     * 
     * @return the mlFlowRegistryUri value.
     */
    String mlFlowRegistryUri();

    /**
     * Gets the registryPrivateEndpointConnections property: Private endpoint connections info used for pending
     * connections in private link portal.
     * 
     * @return the registryPrivateEndpointConnections value.
     */
    List<RegistryPrivateEndpointConnection> registryPrivateEndpointConnections();

    /**
     * Gets the publicNetworkAccess property: Is the Registry accessible from the internet?
     * Possible values: "Enabled" or "Disabled".
     * 
     * @return the publicNetworkAccess value.
     */
    String publicNetworkAccess();

    /**
     * Gets the regionDetails property: Details of each region the registry is in.
     * 
     * @return the regionDetails value.
     */
    List<RegistryRegionArmDetails> regionDetails();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.machinelearning.fluent.models.RegistryInner object.
     * 
     * @return the inner object.
     */
    RegistryInner innerModel();

    /**
     * The entirety of the Registry definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The Registry definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the Registry definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the Registry definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the Registry definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the Registry definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithIdentity,
            DefinitionStages.WithKind, DefinitionStages.WithSku, DefinitionStages.WithDiscoveryUrl,
            DefinitionStages.WithIntellectualPropertyPublisher, DefinitionStages.WithManagedResourceGroup,
            DefinitionStages.WithMlFlowRegistryUri, DefinitionStages.WithRegistryPrivateEndpointConnections,
            DefinitionStages.WithPublicNetworkAccess, DefinitionStages.WithRegionDetails {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            Registry create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Registry create(Context context);
        }

        /**
         * The stage of the Registry definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the Registry definition allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: Managed service identity (system assigned and/or user assigned
             * identities).
             * 
             * @param identity Managed service identity (system assigned and/or user assigned identities).
             * @return the next definition stage.
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the Registry definition allowing to specify kind.
         */
        interface WithKind {
            /**
             * Specifies the kind property: Metadata used by portal/tooling/etc to render different UX experiences for
             * resources of the same type..
             * 
             * @param kind Metadata used by portal/tooling/etc to render different UX experiences for resources of the
             * same type.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }

        /**
         * The stage of the Registry definition allowing to specify sku.
         */
        interface WithSku {
            /**
             * Specifies the sku property: Sku details required for ARM contract for Autoscaling..
             * 
             * @param sku Sku details required for ARM contract for Autoscaling.
             * @return the next definition stage.
             */
            WithCreate withSku(Sku sku);
        }

        /**
         * The stage of the Registry definition allowing to specify discoveryUrl.
         */
        interface WithDiscoveryUrl {
            /**
             * Specifies the discoveryUrl property: Discovery URL for the Registry.
             * 
             * @param discoveryUrl Discovery URL for the Registry.
             * @return the next definition stage.
             */
            WithCreate withDiscoveryUrl(String discoveryUrl);
        }

        /**
         * The stage of the Registry definition allowing to specify intellectualPropertyPublisher.
         */
        interface WithIntellectualPropertyPublisher {
            /**
             * Specifies the intellectualPropertyPublisher property: IntellectualPropertyPublisher for the registry.
             * 
             * @param intellectualPropertyPublisher IntellectualPropertyPublisher for the registry.
             * @return the next definition stage.
             */
            WithCreate withIntellectualPropertyPublisher(String intellectualPropertyPublisher);
        }

        /**
         * The stage of the Registry definition allowing to specify managedResourceGroup.
         */
        interface WithManagedResourceGroup {
            /**
             * Specifies the managedResourceGroup property: ResourceId of the managed RG if the registry has system
             * created resources.
             * 
             * @param managedResourceGroup ResourceId of the managed RG if the registry has system created resources.
             * @return the next definition stage.
             */
            WithCreate withManagedResourceGroup(ArmResourceId managedResourceGroup);
        }

        /**
         * The stage of the Registry definition allowing to specify mlFlowRegistryUri.
         */
        interface WithMlFlowRegistryUri {
            /**
             * Specifies the mlFlowRegistryUri property: MLFlow Registry URI for the Registry.
             * 
             * @param mlFlowRegistryUri MLFlow Registry URI for the Registry.
             * @return the next definition stage.
             */
            WithCreate withMlFlowRegistryUri(String mlFlowRegistryUri);
        }

        /**
         * The stage of the Registry definition allowing to specify registryPrivateEndpointConnections.
         */
        interface WithRegistryPrivateEndpointConnections {
            /**
             * Specifies the registryPrivateEndpointConnections property: Private endpoint connections info used for
             * pending connections in private link portal.
             * 
             * @param registryPrivateEndpointConnections Private endpoint connections info used for pending connections
             * in private link portal.
             * @return the next definition stage.
             */
            WithCreate withRegistryPrivateEndpointConnections(
                List<RegistryPrivateEndpointConnection> registryPrivateEndpointConnections);
        }

        /**
         * The stage of the Registry definition allowing to specify publicNetworkAccess.
         */
        interface WithPublicNetworkAccess {
            /**
             * Specifies the publicNetworkAccess property: Is the Registry accessible from the internet?
             * Possible values: "Enabled" or "Disabled".
             * 
             * @param publicNetworkAccess Is the Registry accessible from the internet?
             * Possible values: "Enabled" or "Disabled".
             * @return the next definition stage.
             */
            WithCreate withPublicNetworkAccess(String publicNetworkAccess);
        }

        /**
         * The stage of the Registry definition allowing to specify regionDetails.
         */
        interface WithRegionDetails {
            /**
             * Specifies the regionDetails property: Details of each region the registry is in.
             * 
             * @param regionDetails Details of each region the registry is in.
             * @return the next definition stage.
             */
            WithCreate withRegionDetails(List<RegistryRegionArmDetails> regionDetails);
        }
    }

    /**
     * Begins update for the Registry resource.
     * 
     * @return the stage of resource update.
     */
    Registry.Update update();

    /**
     * The template for Registry update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithIdentity, UpdateStages.WithSku {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        Registry apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Registry apply(Context context);
    }

    /**
     * The Registry update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the Registry update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the Registry update allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: Managed service identity (system assigned and/or user assigned
             * identities).
             * 
             * @param identity Managed service identity (system assigned and/or user assigned identities).
             * @return the next definition stage.
             */
            Update withIdentity(RegistryPartialManagedServiceIdentity identity);
        }

        /**
         * The stage of the Registry update allowing to specify sku.
         */
        interface WithSku {
            /**
             * Specifies the sku property: Sku details required for ARM contract for Autoscaling..
             * 
             * @param sku Sku details required for ARM contract for Autoscaling.
             * @return the next definition stage.
             */
            Update withSku(PartialSku sku);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    Registry refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Registry refresh(Context context);

    /**
     * Remove regions from registry.
     * 
     * @param body Details required to create the registry.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Registry removeRegions(RegistryInner body);

    /**
     * Remove regions from registry.
     * 
     * @param body Details required to create the registry.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Registry removeRegions(RegistryInner body, Context context);
}
