// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes the volume options for the container.
 */
@Fluent
public final class VolumeOptions implements JsonSerializable<VolumeOptions> {
    /*
     * Indicate whether volume is nocopy
     */
    private Boolean nocopy;

    /**
     * Creates an instance of VolumeOptions class.
     */
    public VolumeOptions() {
    }

    /**
     * Get the nocopy property: Indicate whether volume is nocopy.
     * 
     * @return the nocopy value.
     */
    public Boolean nocopy() {
        return this.nocopy;
    }

    /**
     * Set the nocopy property: Indicate whether volume is nocopy.
     * 
     * @param nocopy the nocopy value to set.
     * @return the VolumeOptions object itself.
     */
    public VolumeOptions withNocopy(Boolean nocopy) {
        this.nocopy = nocopy;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("nocopy", this.nocopy);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VolumeOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VolumeOptions if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the VolumeOptions.
     */
    public static VolumeOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VolumeOptions deserializedVolumeOptions = new VolumeOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("nocopy".equals(fieldName)) {
                    deserializedVolumeOptions.nocopy = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVolumeOptions;
        });
    }
}
