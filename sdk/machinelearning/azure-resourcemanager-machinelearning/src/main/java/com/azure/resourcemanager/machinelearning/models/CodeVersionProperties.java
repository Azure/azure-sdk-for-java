// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Code asset version details. */
@Fluent
public final class CodeVersionProperties extends AssetBase {
    /*
     * Uri where code is located
     */
    @JsonProperty(value = "codeUri")
    private String codeUri;

    /** Creates an instance of CodeVersionProperties class. */
    public CodeVersionProperties() {
    }

    /**
     * Get the codeUri property: Uri where code is located.
     *
     * @return the codeUri value.
     */
    public String codeUri() {
        return this.codeUri;
    }

    /**
     * Set the codeUri property: Uri where code is located.
     *
     * @param codeUri the codeUri value to set.
     * @return the CodeVersionProperties object itself.
     */
    public CodeVersionProperties withCodeUri(String codeUri) {
        this.codeUri = codeUri;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CodeVersionProperties withIsAnonymous(Boolean isAnonymous) {
        super.withIsAnonymous(isAnonymous);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CodeVersionProperties withIsArchived(Boolean isArchived) {
        super.withIsArchived(isArchived);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CodeVersionProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CodeVersionProperties withProperties(Map<String, String> properties) {
        super.withProperties(properties);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CodeVersionProperties withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
