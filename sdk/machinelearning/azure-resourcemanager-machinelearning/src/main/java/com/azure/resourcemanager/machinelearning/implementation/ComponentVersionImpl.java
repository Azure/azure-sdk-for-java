// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.ComponentVersionInner;
import com.azure.resourcemanager.machinelearning.models.ComponentVersion;
import com.azure.resourcemanager.machinelearning.models.ComponentVersionProperties;

public final class ComponentVersionImpl
    implements ComponentVersion, ComponentVersion.Definition, ComponentVersion.Update {
    private ComponentVersionInner innerObject;

    private final com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ComponentVersionProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ComponentVersionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.machinelearning.MachineLearningManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String registryName;

    private String componentName;

    private String version;

    public ComponentVersionImpl withExistingComponent(String resourceGroupName, String registryName,
        String componentName) {
        this.resourceGroupName = resourceGroupName;
        this.registryName = registryName;
        this.componentName = componentName;
        return this;
    }

    public ComponentVersion create() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryComponentVersions()
            .createOrUpdate(resourceGroupName, registryName, componentName, version, this.innerModel(), Context.NONE);
        return this;
    }

    public ComponentVersion create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryComponentVersions()
            .createOrUpdate(resourceGroupName, registryName, componentName, version, this.innerModel(), context);
        return this;
    }

    ComponentVersionImpl(String name, com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = new ComponentVersionInner();
        this.serviceManager = serviceManager;
        this.version = name;
    }

    public ComponentVersionImpl update() {
        return this;
    }

    public ComponentVersion apply() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryComponentVersions()
            .createOrUpdate(resourceGroupName, registryName, componentName, version, this.innerModel(), Context.NONE);
        return this;
    }

    public ComponentVersion apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryComponentVersions()
            .createOrUpdate(resourceGroupName, registryName, componentName, version, this.innerModel(), context);
        return this;
    }

    ComponentVersionImpl(ComponentVersionInner innerObject,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.registryName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "registries");
        this.componentName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "components");
        this.version = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "versions");
    }

    public ComponentVersion refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryComponentVersions()
            .getWithResponse(resourceGroupName, registryName, componentName, version, Context.NONE)
            .getValue();
        return this;
    }

    public ComponentVersion refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistryComponentVersions()
            .getWithResponse(resourceGroupName, registryName, componentName, version, context)
            .getValue();
        return this;
    }

    public ComponentVersionImpl withProperties(ComponentVersionProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
