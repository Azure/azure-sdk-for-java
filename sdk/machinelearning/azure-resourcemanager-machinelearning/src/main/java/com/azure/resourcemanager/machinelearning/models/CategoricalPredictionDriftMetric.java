// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Defines values for CategoricalPredictionDriftMetric.
 */
public final class CategoricalPredictionDriftMetric extends ExpandableStringEnum<CategoricalPredictionDriftMetric> {
    /**
     * Static value JensenShannonDistance for CategoricalPredictionDriftMetric.
     */
    public static final CategoricalPredictionDriftMetric JENSEN_SHANNON_DISTANCE = fromString("JensenShannonDistance");

    /**
     * Static value PopulationStabilityIndex for CategoricalPredictionDriftMetric.
     */
    public static final CategoricalPredictionDriftMetric POPULATION_STABILITY_INDEX
        = fromString("PopulationStabilityIndex");

    /**
     * Static value PearsonsChiSquaredTest for CategoricalPredictionDriftMetric.
     */
    public static final CategoricalPredictionDriftMetric PEARSONS_CHI_SQUARED_TEST
        = fromString("PearsonsChiSquaredTest");

    /**
     * Creates a new instance of CategoricalPredictionDriftMetric value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public CategoricalPredictionDriftMetric() {
    }

    /**
     * Creates or finds a CategoricalPredictionDriftMetric from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding CategoricalPredictionDriftMetric.
     */
    public static CategoricalPredictionDriftMetric fromString(String name) {
        return fromString(name, CategoricalPredictionDriftMetric.class);
    }

    /**
     * Gets known CategoricalPredictionDriftMetric values.
     * 
     * @return known CategoricalPredictionDriftMetric values.
     */
    public static Collection<CategoricalPredictionDriftMetric> values() {
        return values(CategoricalPredictionDriftMetric.class);
    }
}
