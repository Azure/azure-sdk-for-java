// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.FeaturestoreEntityContainerInner;
import com.azure.resourcemanager.machinelearning.models.FeaturestoreEntityContainer;
import com.azure.resourcemanager.machinelearning.models.FeaturestoreEntityContainerProperties;

public final class FeaturestoreEntityContainerImpl
    implements FeaturestoreEntityContainer, FeaturestoreEntityContainer.Definition, FeaturestoreEntityContainer.Update {
    private FeaturestoreEntityContainerInner innerObject;

    private final com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public FeaturestoreEntityContainerProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public FeaturestoreEntityContainerInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.machinelearning.MachineLearningManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String name;

    public FeaturestoreEntityContainerImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public FeaturestoreEntityContainer create() {
        this.innerObject = serviceManager.serviceClient()
            .getFeaturestoreEntityContainers()
            .createOrUpdate(resourceGroupName, workspaceName, name, this.innerModel(), Context.NONE);
        return this;
    }

    public FeaturestoreEntityContainer create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFeaturestoreEntityContainers()
            .createOrUpdate(resourceGroupName, workspaceName, name, this.innerModel(), context);
        return this;
    }

    FeaturestoreEntityContainerImpl(String name,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = new FeaturestoreEntityContainerInner();
        this.serviceManager = serviceManager;
        this.name = name;
    }

    public FeaturestoreEntityContainerImpl update() {
        return this;
    }

    public FeaturestoreEntityContainer apply() {
        this.innerObject = serviceManager.serviceClient()
            .getFeaturestoreEntityContainers()
            .createOrUpdate(resourceGroupName, workspaceName, name, this.innerModel(), Context.NONE);
        return this;
    }

    public FeaturestoreEntityContainer apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFeaturestoreEntityContainers()
            .createOrUpdate(resourceGroupName, workspaceName, name, this.innerModel(), context);
        return this;
    }

    FeaturestoreEntityContainerImpl(FeaturestoreEntityContainerInner innerObject,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.name = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "featurestoreEntities");
    }

    public FeaturestoreEntityContainer refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getFeaturestoreEntityContainers()
            .getEntityWithResponse(resourceGroupName, workspaceName, name, Context.NONE)
            .getValue();
        return this;
    }

    public FeaturestoreEntityContainer refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFeaturestoreEntityContainers()
            .getEntityWithResponse(resourceGroupName, workspaceName, name, context)
            .getValue();
        return this;
    }

    public FeaturestoreEntityContainerImpl withProperties(FeaturestoreEntityContainerProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
