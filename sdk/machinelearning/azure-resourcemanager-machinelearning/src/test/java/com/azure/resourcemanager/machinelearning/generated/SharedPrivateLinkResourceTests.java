// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.machinelearning.models.SharedPrivateLinkResource;
import org.junit.jupiter.api.Assertions;

public final class SharedPrivateLinkResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SharedPrivateLinkResource model = BinaryData.fromString(
            "{\"name\":\"itcjczdz\",\"properties\":{\"privateLinkResourceId\":\"dhkrwpdappdsbdk\",\"groupId\":\"rwjfe\",\"requestMessage\":\"nhutjeltmrldhugj\",\"status\":\"Approved\"}}")
            .toObject(SharedPrivateLinkResource.class);
        Assertions.assertEquals("itcjczdz", model.name());
        Assertions.assertEquals("dhkrwpdappdsbdk", model.privateLinkResourceId());
        Assertions.assertEquals("rwjfe", model.groupId());
        Assertions.assertEquals("nhutjeltmrldhugj", model.requestMessage());
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED, model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SharedPrivateLinkResource model = new SharedPrivateLinkResource().withName("itcjczdz")
            .withPrivateLinkResourceId("dhkrwpdappdsbdk")
            .withGroupId("rwjfe")
            .withRequestMessage("nhutjeltmrldhugj")
            .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED);
        model = BinaryData.fromObject(model).toObject(SharedPrivateLinkResource.class);
        Assertions.assertEquals("itcjczdz", model.name());
        Assertions.assertEquals("dhkrwpdappdsbdk", model.privateLinkResourceId());
        Assertions.assertEquals("rwjfe", model.groupId());
        Assertions.assertEquals("nhutjeltmrldhugj", model.requestMessage());
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED, model.status());
    }
}
