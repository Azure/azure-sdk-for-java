// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.MonitorComputeIdentityBase;
import com.azure.resourcemanager.machinelearning.models.MonitorServerlessSparkCompute;
import org.junit.jupiter.api.Assertions;

public final class MonitorServerlessSparkComputeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MonitorServerlessSparkCompute model = BinaryData.fromString(
            "{\"computeType\":\"ServerlessSpark\",\"computeIdentity\":{\"computeIdentityType\":\"MonitorComputeIdentityBase\"},\"instanceType\":\"ffcnuestbsliejdn\",\"runtimeVersion\":\"cotelikjiyteh\"}")
            .toObject(MonitorServerlessSparkCompute.class);
        Assertions.assertEquals("ffcnuestbsliejdn", model.instanceType());
        Assertions.assertEquals("cotelikjiyteh", model.runtimeVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MonitorServerlessSparkCompute model
            = new MonitorServerlessSparkCompute().withComputeIdentity(new MonitorComputeIdentityBase())
                .withInstanceType("ffcnuestbsliejdn")
                .withRuntimeVersion("cotelikjiyteh");
        model = BinaryData.fromObject(model).toObject(MonitorServerlessSparkCompute.class);
        Assertions.assertEquals("ffcnuestbsliejdn", model.instanceType());
        Assertions.assertEquals("cotelikjiyteh", model.runtimeVersion());
    }
}
