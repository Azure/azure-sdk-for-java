// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.AssetContainer;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AssetContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AssetContainer model = BinaryData.fromString(
            "{\"isArchived\":true,\"latestVersion\":\"equi\",\"nextVersion\":\"xicslfao\",\"description\":\"piyylhalnswhccsp\",\"tags\":{\"oluhczbwemh\":\"ivwitqscywugg\",\"sbrgz\":\"i\",\"ggicccnxqhue\":\"wmsweypqwd\"},\"properties\":{\"ncsdtclusiyp\":\"ttlstvlzywemhz\"}}")
            .toObject(AssetContainer.class);
        Assertions.assertEquals("piyylhalnswhccsp", model.description());
        Assertions.assertEquals("ivwitqscywugg", model.tags().get("oluhczbwemh"));
        Assertions.assertEquals("ttlstvlzywemhz", model.properties().get("ncsdtclusiyp"));
        Assertions.assertEquals(true, model.isArchived());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AssetContainer model = new AssetContainer().withDescription("piyylhalnswhccsp")
            .withTags(mapOf("oluhczbwemh", "ivwitqscywugg", "sbrgz", "i", "ggicccnxqhue", "wmsweypqwd"))
            .withProperties(mapOf("ncsdtclusiyp", "ttlstvlzywemhz"))
            .withIsArchived(true);
        model = BinaryData.fromObject(model).toObject(AssetContainer.class);
        Assertions.assertEquals("piyylhalnswhccsp", model.description());
        Assertions.assertEquals("ivwitqscywugg", model.tags().get("oluhczbwemh"));
        Assertions.assertEquals("ttlstvlzywemhz", model.properties().get("ncsdtclusiyp"));
        Assertions.assertEquals(true, model.isArchived());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
