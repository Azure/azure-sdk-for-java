// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.ComputeResourceInner;
import com.azure.resourcemanager.machinelearning.models.Compute;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentity;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.Sku;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import com.azure.resourcemanager.machinelearning.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ComputeResourceInnerTests {
    @Test
    public void testDeserialize() {
        ComputeResourceInner model =
            BinaryData
                .fromString(
                    "{\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"bzoggigrx\":{},\"rvjx\":{},\"spyd\":{},\"oenkouknvudwti\":{}}},\"location\":\"bldngkpoc\",\"tags\":{\"xoegukgjnpiucgy\":\"z\",\"zcdrqjsdpydnfyhx\":\"evqzntypmrbp\",\"ifsjttgzfbishcb\":\"eoejzic\"},\"sku\":{\"name\":\"ajdeyeamdphaga\",\"tier\":\"Basic\",\"size\":\"xw\",\"family\":\"pwhonowkg\",\"capacity\":69341003},\"properties\":{\"computeType\":\"Compute\",\"computeLocation\":\"ixzbinjeputtmryw\",\"provisioningState\":\"Succeeded\",\"description\":\"qftiy\",\"createdOn\":\"2021-11-21T21:02:37Z\",\"modifiedOn\":\"2021-01-30T17:57:31Z\",\"resourceId\":\"qvyxlwhzlsicoho\",\"provisioningErrors\":[],\"isAttachedCompute\":true,\"disableLocalAuth\":true},\"id\":\"yav\",\"name\":\"hheunmmqhgyx\",\"type\":\"konocu\"}")
                .toObject(ComputeResourceInner.class);
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("bldngkpoc", model.location());
        Assertions.assertEquals("z", model.tags().get("xoegukgjnpiucgy"));
        Assertions.assertEquals("ajdeyeamdphaga", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("xw", model.sku().size());
        Assertions.assertEquals("pwhonowkg", model.sku().family());
        Assertions.assertEquals(69341003, model.sku().capacity());
        Assertions.assertEquals("ixzbinjeputtmryw", model.properties().computeLocation());
        Assertions.assertEquals("qftiy", model.properties().description());
        Assertions.assertEquals("qvyxlwhzlsicoho", model.properties().resourceId());
        Assertions.assertEquals(true, model.properties().disableLocalAuth());
    }

    @Test
    public void testSerialize() {
        ComputeResourceInner model =
            new ComputeResourceInner()
                .withIdentity(
                    new ManagedServiceIdentity()
                        .withType(ManagedServiceIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentities(
                            mapOf(
                                "bzoggigrx",
                                new UserAssignedIdentity(),
                                "rvjx",
                                new UserAssignedIdentity(),
                                "spyd",
                                new UserAssignedIdentity(),
                                "oenkouknvudwti",
                                new UserAssignedIdentity())))
                .withLocation("bldngkpoc")
                .withTags(
                    mapOf("xoegukgjnpiucgy", "z", "zcdrqjsdpydnfyhx", "evqzntypmrbp", "ifsjttgzfbishcb", "eoejzic"))
                .withSku(
                    new Sku()
                        .withName("ajdeyeamdphaga")
                        .withTier(SkuTier.BASIC)
                        .withSize("xw")
                        .withFamily("pwhonowkg")
                        .withCapacity(69341003))
                .withProperties(
                    new Compute()
                        .withComputeLocation("ixzbinjeputtmryw")
                        .withDescription("qftiy")
                        .withResourceId("qvyxlwhzlsicoho")
                        .withDisableLocalAuth(true));
        model = BinaryData.fromObject(model).toObject(ComputeResourceInner.class);
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("bldngkpoc", model.location());
        Assertions.assertEquals("z", model.tags().get("xoegukgjnpiucgy"));
        Assertions.assertEquals("ajdeyeamdphaga", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("xw", model.sku().size());
        Assertions.assertEquals("pwhonowkg", model.sku().family());
        Assertions.assertEquals(69341003, model.sku().capacity());
        Assertions.assertEquals("ixzbinjeputtmryw", model.properties().computeLocation());
        Assertions.assertEquals("qftiy", model.properties().description());
        Assertions.assertEquals("qvyxlwhzlsicoho", model.properties().resourceId());
        Assertions.assertEquals(true, model.properties().disableLocalAuth());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
