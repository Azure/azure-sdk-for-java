// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.UriFileDataVersion;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class UriFileDataVersionTests {
    @Test
    public void testDeserialize() {
        UriFileDataVersion model =
            BinaryData
                .fromString(
                    "{\"dataType\":\"uri_file\",\"dataUri\":\"oisfmnaybdjn\",\"isAnonymous\":false,\"isArchived\":true,\"description\":\"qontwhymxymulw\",\"properties\":{\"jasqubf\":\"towlhlsycoyb\"},\"tags\":{\"htfxcpupuki\":\"ywhjqwmchq\",\"sa\":\"mjzpwdlvwtiwsm\"}}")
                .toObject(UriFileDataVersion.class);
        Assertions.assertEquals("qontwhymxymulw", model.description());
        Assertions.assertEquals("towlhlsycoyb", model.properties().get("jasqubf"));
        Assertions.assertEquals("ywhjqwmchq", model.tags().get("htfxcpupuki"));
        Assertions.assertEquals(false, model.isAnonymous());
        Assertions.assertEquals(true, model.isArchived());
        Assertions.assertEquals("oisfmnaybdjn", model.dataUri());
    }

    @Test
    public void testSerialize() {
        UriFileDataVersion model =
            new UriFileDataVersion()
                .withDescription("qontwhymxymulw")
                .withProperties(mapOf("jasqubf", "towlhlsycoyb"))
                .withTags(mapOf("htfxcpupuki", "ywhjqwmchq", "sa", "mjzpwdlvwtiwsm"))
                .withIsAnonymous(false)
                .withIsArchived(true)
                .withDataUri("oisfmnaybdjn");
        model = BinaryData.fromObject(model).toObject(UriFileDataVersion.class);
        Assertions.assertEquals("qontwhymxymulw", model.description());
        Assertions.assertEquals("towlhlsycoyb", model.properties().get("jasqubf"));
        Assertions.assertEquals("ywhjqwmchq", model.tags().get("htfxcpupuki"));
        Assertions.assertEquals(false, model.isAnonymous());
        Assertions.assertEquals(true, model.isArchived());
        Assertions.assertEquals("oisfmnaybdjn", model.dataUri());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
