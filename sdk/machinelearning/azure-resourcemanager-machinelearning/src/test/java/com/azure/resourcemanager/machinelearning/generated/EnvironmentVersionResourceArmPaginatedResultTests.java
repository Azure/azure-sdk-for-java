// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.EnvironmentVersionInner;
import com.azure.resourcemanager.machinelearning.models.AutoRebuildSetting;
import com.azure.resourcemanager.machinelearning.models.EnvironmentVersionProperties;
import com.azure.resourcemanager.machinelearning.models.EnvironmentVersionResourceArmPaginatedResult;
import com.azure.resourcemanager.machinelearning.models.OperatingSystemType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class EnvironmentVersionResourceArmPaginatedResultTests {
    @Test
    public void testDeserialize() {
        EnvironmentVersionResourceArmPaginatedResult model =
            BinaryData
                .fromString(
                    "{\"nextLink\":\"qonmacj\",\"value\":[{\"properties\":{\"autoRebuild\":\"Disabled\",\"condaFile\":\"qvci\",\"environmentType\":\"Curated\",\"image\":\"fgmblrrilbywdxsm\",\"osType\":\"Windows\",\"isAnonymous\":false,\"isArchived\":false,\"description\":\"jfnynszqujizdvoq\",\"properties\":{},\"tags\":{}},\"id\":\"yo\",\"name\":\"bblgyavut\",\"type\":\"thjoxoism\"},{\"properties\":{\"autoRebuild\":\"Disabled\",\"condaFile\":\"iml\",\"environmentType\":\"UserCreated\",\"image\":\"xkcgxxlxsffgcvi\",\"osType\":\"Linux\",\"isAnonymous\":false,\"isArchived\":false,\"description\":\"youpfgfbkj\",\"properties\":{},\"tags\":{}},\"id\":\"hgkfmin\",\"name\":\"g\",\"type\":\"wzf\"},{\"properties\":{\"autoRebuild\":\"OnBaseImageUpdate\",\"condaFile\":\"ktlahbqa\",\"environmentType\":\"UserCreated\",\"image\":\"gzukxitmm\",\"osType\":\"Windows\",\"isAnonymous\":false,\"isArchived\":false,\"description\":\"n\",\"properties\":{},\"tags\":{}},\"id\":\"pjui\",\"name\":\"av\",\"type\":\"k\"}]}")
                .toObject(EnvironmentVersionResourceArmPaginatedResult.class);
        Assertions.assertEquals("qonmacj", model.nextLink());
        Assertions.assertEquals("jfnynszqujizdvoq", model.value().get(0).properties().description());
        Assertions.assertEquals(false, model.value().get(0).properties().isAnonymous());
        Assertions.assertEquals(false, model.value().get(0).properties().isArchived());
        Assertions.assertEquals(AutoRebuildSetting.DISABLED, model.value().get(0).properties().autoRebuild());
        Assertions.assertEquals("qvci", model.value().get(0).properties().condaFile());
        Assertions.assertEquals("fgmblrrilbywdxsm", model.value().get(0).properties().image());
        Assertions.assertEquals(OperatingSystemType.WINDOWS, model.value().get(0).properties().osType());
    }

    @Test
    public void testSerialize() {
        EnvironmentVersionResourceArmPaginatedResult model =
            new EnvironmentVersionResourceArmPaginatedResult()
                .withNextLink("qonmacj")
                .withValue(
                    Arrays
                        .asList(
                            new EnvironmentVersionInner()
                                .withProperties(
                                    new EnvironmentVersionProperties()
                                        .withDescription("jfnynszqujizdvoq")
                                        .withProperties(mapOf())
                                        .withTags(mapOf())
                                        .withIsAnonymous(false)
                                        .withIsArchived(false)
                                        .withAutoRebuild(AutoRebuildSetting.DISABLED)
                                        .withCondaFile("qvci")
                                        .withImage("fgmblrrilbywdxsm")
                                        .withOsType(OperatingSystemType.WINDOWS)),
                            new EnvironmentVersionInner()
                                .withProperties(
                                    new EnvironmentVersionProperties()
                                        .withDescription("youpfgfbkj")
                                        .withProperties(mapOf())
                                        .withTags(mapOf())
                                        .withIsAnonymous(false)
                                        .withIsArchived(false)
                                        .withAutoRebuild(AutoRebuildSetting.DISABLED)
                                        .withCondaFile("iml")
                                        .withImage("xkcgxxlxsffgcvi")
                                        .withOsType(OperatingSystemType.LINUX)),
                            new EnvironmentVersionInner()
                                .withProperties(
                                    new EnvironmentVersionProperties()
                                        .withDescription("n")
                                        .withProperties(mapOf())
                                        .withTags(mapOf())
                                        .withIsAnonymous(false)
                                        .withIsArchived(false)
                                        .withAutoRebuild(AutoRebuildSetting.ON_BASE_IMAGE_UPDATE)
                                        .withCondaFile("ktlahbqa")
                                        .withImage("gzukxitmm")
                                        .withOsType(OperatingSystemType.WINDOWS))));
        model = BinaryData.fromObject(model).toObject(EnvironmentVersionResourceArmPaginatedResult.class);
        Assertions.assertEquals("qonmacj", model.nextLink());
        Assertions.assertEquals("jfnynszqujizdvoq", model.value().get(0).properties().description());
        Assertions.assertEquals(false, model.value().get(0).properties().isAnonymous());
        Assertions.assertEquals(false, model.value().get(0).properties().isArchived());
        Assertions.assertEquals(AutoRebuildSetting.DISABLED, model.value().get(0).properties().autoRebuild());
        Assertions.assertEquals("qvci", model.value().get(0).properties().condaFile());
        Assertions.assertEquals("fgmblrrilbywdxsm", model.value().get(0).properties().image());
        Assertions.assertEquals(OperatingSystemType.WINDOWS, model.value().get(0).properties().osType());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
