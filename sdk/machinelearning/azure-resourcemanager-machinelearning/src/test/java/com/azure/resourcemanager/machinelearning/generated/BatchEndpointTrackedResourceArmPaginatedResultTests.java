// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.BatchEndpointInner;
import com.azure.resourcemanager.machinelearning.models.BatchEndpointProperties;
import com.azure.resourcemanager.machinelearning.models.BatchEndpointTrackedResourceArmPaginatedResult;
import com.azure.resourcemanager.machinelearning.models.EndpointAuthMode;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentity;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.Sku;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class BatchEndpointTrackedResourceArmPaginatedResultTests {
    @Test
    public void testDeserialize() {
        BatchEndpointTrackedResourceArmPaginatedResult model =
            BinaryData
                .fromString(
                    "{\"nextLink\":\"ssotftpv\",\"value\":[{\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{}},\"kind\":\"nfqqnvwp\",\"properties\":{\"provisioningState\":\"Failed\",\"authMode\":\"AADToken\",\"description\":\"oujmkcjhwqytj\",\"properties\":{},\"scoringUri\":\"wj\",\"swaggerUri\":\"gdrjervnaenqpe\"},\"sku\":{\"name\":\"ndoygmifthnzdnd\",\"tier\":\"Standard\",\"size\":\"ayqigynduhav\",\"family\":\"lkthu\",\"capacity\":1712324120},\"location\":\"lbg\",\"tags\":{\"tgccymvaolpss\":\"uie\",\"lzpswiydm\":\"qlfmmdnbb\",\"sadbz\":\"wyhzdx\"},\"id\":\"nvdfznuda\",\"name\":\"dvxzbncblylpst\",\"type\":\"bhhxsrzdzuc\"},{\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{}},\"kind\":\"nevf\",\"properties\":{\"provisioningState\":\"Deleting\",\"authMode\":\"AADToken\",\"description\":\"tdss\",\"properties\":{},\"scoringUri\":\"mweriofzpy\",\"swaggerUri\":\"emwabnet\"},\"sku\":{\"name\":\"hszhedplvwiwu\",\"tier\":\"Standard\",\"size\":\"besldnkwwtppjflc\",\"family\":\"gaokonzmnsikv\",\"capacity\":1195319161},\"location\":\"eqqkdltfzxm\",\"tags\":{\"dkwobdagx\":\"hgure\"},\"id\":\"ibqdxbxwakbogqx\",\"name\":\"dlkzgxhuri\",\"type\":\"lbpodxunk\"},{\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{}},\"kind\":\"yyntwl\",\"properties\":{\"provisioningState\":\"Succeeded\",\"authMode\":\"Key\",\"description\":\"ievseotgqrllt\",\"properties\":{},\"scoringUri\":\"auwzizxbmpgc\",\"swaggerUri\":\"fuzmuvpbtt\"},\"sku\":{\"name\":\"morppxebmnzbtbh\",\"tier\":\"Basic\",\"size\":\"kfgohdneue\",\"family\":\"phsdyhto\",\"capacity\":743689634},\"location\":\"dowwquuvxzxclvit\",\"tags\":{\"hcohfwdsjnk\":\"zonosgg\",\"swacffgdkzz\":\"ljuti\",\"ppfufl\":\"wkfvhqcrailvp\",\"gafcnihgwqapnedg\":\"wdmhdlxyjrxs\"},\"id\":\"bcvkcvqvpkeq\",\"name\":\"cvdrhvoodsot\",\"type\":\"obzdopcjwvnhdl\"},{\"identity\":{\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{}},\"kind\":\"rslpmutwuoeg\",\"properties\":{\"provisioningState\":\"Succeeded\",\"authMode\":\"Key\",\"description\":\"niyqslui\",\"properties\":{},\"scoringUri\":\"gk\",\"swaggerUri\":\"lvmbmpaxmodfvuef\"},\"sku\":{\"name\":\"sbpfvmwyhr\",\"tier\":\"Basic\",\"size\":\"ft\",\"family\":\"kcpwiy\",\"capacity\":842537299},\"location\":\"mnubexkpzksmond\",\"tags\":{\"jvp\":\"uxvypomgkopkwh\",\"ysmocmbqfqvmkcxo\":\"jqg\",\"tddckcb\":\"apvhelxprgly\"},\"id\":\"uejrjxgc\",\"name\":\"qibrhosxsdqrhzoy\",\"type\":\"i\"}]}")
                .toObject(BatchEndpointTrackedResourceArmPaginatedResult.class);
        Assertions.assertEquals("ssotftpv", model.nextLink());
        Assertions.assertEquals("lbg", model.value().get(0).location());
        Assertions.assertEquals("uie", model.value().get(0).tags().get("tgccymvaolpss"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals("nfqqnvwp", model.value().get(0).kind());
        Assertions.assertEquals(EndpointAuthMode.AADTOKEN, model.value().get(0).properties().authMode());
        Assertions.assertEquals("oujmkcjhwqytj", model.value().get(0).properties().description());
        Assertions.assertEquals("ndoygmifthnzdnd", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.value().get(0).sku().tier());
        Assertions.assertEquals("ayqigynduhav", model.value().get(0).sku().size());
        Assertions.assertEquals("lkthu", model.value().get(0).sku().family());
        Assertions.assertEquals(1712324120, model.value().get(0).sku().capacity());
    }

    @Test
    public void testSerialize() {
        BatchEndpointTrackedResourceArmPaginatedResult model =
            new BatchEndpointTrackedResourceArmPaginatedResult()
                .withNextLink("ssotftpv")
                .withValue(
                    Arrays
                        .asList(
                            new BatchEndpointInner()
                                .withLocation("lbg")
                                .withTags(mapOf("tgccymvaolpss", "uie", "lzpswiydm", "qlfmmdnbb", "sadbz", "wyhzdx"))
                                .withIdentity(
                                    new ManagedServiceIdentity()
                                        .withType(ManagedServiceIdentityType.NONE)
                                        .withUserAssignedIdentities(mapOf()))
                                .withKind("nfqqnvwp")
                                .withProperties(
                                    new BatchEndpointProperties()
                                        .withAuthMode(EndpointAuthMode.AADTOKEN)
                                        .withDescription("oujmkcjhwqytj")
                                        .withProperties(mapOf()))
                                .withSku(
                                    new Sku()
                                        .withName("ndoygmifthnzdnd")
                                        .withTier(SkuTier.STANDARD)
                                        .withSize("ayqigynduhav")
                                        .withFamily("lkthu")
                                        .withCapacity(1712324120)),
                            new BatchEndpointInner()
                                .withLocation("eqqkdltfzxm")
                                .withTags(mapOf("dkwobdagx", "hgure"))
                                .withIdentity(
                                    new ManagedServiceIdentity()
                                        .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED)
                                        .withUserAssignedIdentities(mapOf()))
                                .withKind("nevf")
                                .withProperties(
                                    new BatchEndpointProperties()
                                        .withAuthMode(EndpointAuthMode.AADTOKEN)
                                        .withDescription("tdss")
                                        .withProperties(mapOf()))
                                .withSku(
                                    new Sku()
                                        .withName("hszhedplvwiwu")
                                        .withTier(SkuTier.STANDARD)
                                        .withSize("besldnkwwtppjflc")
                                        .withFamily("gaokonzmnsikv")
                                        .withCapacity(1195319161)),
                            new BatchEndpointInner()
                                .withLocation("dowwquuvxzxclvit")
                                .withTags(
                                    mapOf(
                                        "hcohfwdsjnk",
                                        "zonosgg",
                                        "swacffgdkzz",
                                        "ljuti",
                                        "ppfufl",
                                        "wkfvhqcrailvp",
                                        "gafcnihgwqapnedg",
                                        "wdmhdlxyjrxs"))
                                .withIdentity(
                                    new ManagedServiceIdentity()
                                        .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED)
                                        .withUserAssignedIdentities(mapOf()))
                                .withKind("yyntwl")
                                .withProperties(
                                    new BatchEndpointProperties()
                                        .withAuthMode(EndpointAuthMode.KEY)
                                        .withDescription("ievseotgqrllt")
                                        .withProperties(mapOf()))
                                .withSku(
                                    new Sku()
                                        .withName("morppxebmnzbtbh")
                                        .withTier(SkuTier.BASIC)
                                        .withSize("kfgohdneue")
                                        .withFamily("phsdyhto")
                                        .withCapacity(743689634)),
                            new BatchEndpointInner()
                                .withLocation("mnubexkpzksmond")
                                .withTags(
                                    mapOf(
                                        "jvp", "uxvypomgkopkwh", "ysmocmbqfqvmkcxo", "jqg", "tddckcb", "apvhelxprgly"))
                                .withIdentity(
                                    new ManagedServiceIdentity()
                                        .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED)
                                        .withUserAssignedIdentities(mapOf()))
                                .withKind("rslpmutwuoeg")
                                .withProperties(
                                    new BatchEndpointProperties()
                                        .withAuthMode(EndpointAuthMode.KEY)
                                        .withDescription("niyqslui")
                                        .withProperties(mapOf()))
                                .withSku(
                                    new Sku()
                                        .withName("sbpfvmwyhr")
                                        .withTier(SkuTier.BASIC)
                                        .withSize("ft")
                                        .withFamily("kcpwiy")
                                        .withCapacity(842537299))));
        model = BinaryData.fromObject(model).toObject(BatchEndpointTrackedResourceArmPaginatedResult.class);
        Assertions.assertEquals("ssotftpv", model.nextLink());
        Assertions.assertEquals("lbg", model.value().get(0).location());
        Assertions.assertEquals("uie", model.value().get(0).tags().get("tgccymvaolpss"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals("nfqqnvwp", model.value().get(0).kind());
        Assertions.assertEquals(EndpointAuthMode.AADTOKEN, model.value().get(0).properties().authMode());
        Assertions.assertEquals("oujmkcjhwqytj", model.value().get(0).properties().description());
        Assertions.assertEquals("ndoygmifthnzdnd", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.value().get(0).sku().tier());
        Assertions.assertEquals("ayqigynduhav", model.value().get(0).sku().size());
        Assertions.assertEquals("lkthu", model.value().get(0).sku().family());
        Assertions.assertEquals(1712324120, model.value().get(0).sku().capacity());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
