// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.AksNetworkingConfiguration;
import org.junit.jupiter.api.Assertions;

public final class AksNetworkingConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AksNetworkingConfiguration model = BinaryData.fromString(
            "{\"subnetId\":\"mffngdyfcixr\",\"serviceCidr\":\"cqvhoejgoiutgwrm\",\"dnsServiceIP\":\"hpqhazyntacihn\",\"dockerBridgeCidr\":\"gmipnmliqmvlbhik\"}")
            .toObject(AksNetworkingConfiguration.class);
        Assertions.assertEquals("mffngdyfcixr", model.subnetId());
        Assertions.assertEquals("cqvhoejgoiutgwrm", model.serviceCidr());
        Assertions.assertEquals("hpqhazyntacihn", model.dnsServiceIp());
        Assertions.assertEquals("gmipnmliqmvlbhik", model.dockerBridgeCidr());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AksNetworkingConfiguration model = new AksNetworkingConfiguration().withSubnetId("mffngdyfcixr")
            .withServiceCidr("cqvhoejgoiutgwrm")
            .withDnsServiceIp("hpqhazyntacihn")
            .withDockerBridgeCidr("gmipnmliqmvlbhik");
        model = BinaryData.fromObject(model).toObject(AksNetworkingConfiguration.class);
        Assertions.assertEquals("mffngdyfcixr", model.subnetId());
        Assertions.assertEquals("cqvhoejgoiutgwrm", model.serviceCidr());
        Assertions.assertEquals("hpqhazyntacihn", model.dnsServiceIp());
        Assertions.assertEquals("gmipnmliqmvlbhik", model.dockerBridgeCidr());
    }
}
