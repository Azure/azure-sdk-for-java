// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.FeaturestoreEntityVersionInner;
import com.azure.resourcemanager.machinelearning.models.FeatureDataType;
import com.azure.resourcemanager.machinelearning.models.FeaturestoreEntityVersionProperties;
import com.azure.resourcemanager.machinelearning.models.IndexColumn;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class FeaturestoreEntityVersionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FeaturestoreEntityVersionInner model = BinaryData.fromString(
            "{\"properties\":{\"indexColumns\":[{\"dataType\":\"Float\",\"columnName\":\"xhzzyse\"}],\"stage\":\"sxivzrrryvei\",\"provisioningState\":\"Canceled\",\"isArchived\":true,\"isAnonymous\":true,\"description\":\"atvfuzkaftj\",\"tags\":{\"tgrqgdgkkile\":\"uxwigsyeipqdsm\"},\"properties\":{\"baedorvvmqfl\":\"csmknhwt\",\"gdexjd\":\"ygbdgwumgxdgdhpa\"}},\"id\":\"jsaqwotmmwllcols\",\"name\":\"sxap\",\"type\":\"efh\"}")
            .toObject(FeaturestoreEntityVersionInner.class);
        Assertions.assertEquals("atvfuzkaftj", model.properties().description());
        Assertions.assertEquals("uxwigsyeipqdsm", model.properties().tags().get("tgrqgdgkkile"));
        Assertions.assertEquals("csmknhwt", model.properties().properties().get("baedorvvmqfl"));
        Assertions.assertEquals(true, model.properties().isArchived());
        Assertions.assertEquals(true, model.properties().isAnonymous());
        Assertions.assertEquals(FeatureDataType.FLOAT, model.properties().indexColumns().get(0).dataType());
        Assertions.assertEquals("xhzzyse", model.properties().indexColumns().get(0).columnName());
        Assertions.assertEquals("sxivzrrryvei", model.properties().stage());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FeaturestoreEntityVersionInner model = new FeaturestoreEntityVersionInner()
            .withProperties(new FeaturestoreEntityVersionProperties().withDescription("atvfuzkaftj")
                .withTags(mapOf("tgrqgdgkkile", "uxwigsyeipqdsm"))
                .withProperties(mapOf("baedorvvmqfl", "csmknhwt", "gdexjd", "ygbdgwumgxdgdhpa"))
                .withIsArchived(true)
                .withIsAnonymous(true)
                .withIndexColumns(
                    Arrays.asList(new IndexColumn().withDataType(FeatureDataType.FLOAT).withColumnName("xhzzyse")))
                .withStage("sxivzrrryvei"));
        model = BinaryData.fromObject(model).toObject(FeaturestoreEntityVersionInner.class);
        Assertions.assertEquals("atvfuzkaftj", model.properties().description());
        Assertions.assertEquals("uxwigsyeipqdsm", model.properties().tags().get("tgrqgdgkkile"));
        Assertions.assertEquals("csmknhwt", model.properties().properties().get("baedorvvmqfl"));
        Assertions.assertEquals(true, model.properties().isArchived());
        Assertions.assertEquals(true, model.properties().isAnonymous());
        Assertions.assertEquals(FeatureDataType.FLOAT, model.properties().indexColumns().get(0).dataType());
        Assertions.assertEquals("xhzzyse", model.properties().indexColumns().get(0).columnName());
        Assertions.assertEquals("sxivzrrryvei", model.properties().stage());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
