// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.SkuResourceInner;
import com.azure.resourcemanager.machinelearning.models.SkuCapacity;
import com.azure.resourcemanager.machinelearning.models.SkuResourceArmPaginatedResult;
import com.azure.resourcemanager.machinelearning.models.SkuScaleType;
import com.azure.resourcemanager.machinelearning.models.SkuSetting;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SkuResourceArmPaginatedResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuResourceArmPaginatedResult model = BinaryData.fromString(
            "{\"value\":[{\"resourceType\":\"rra\",\"sku\":{\"name\":\"ekcsueh\",\"tier\":\"Premium\"},\"capacity\":{\"minimum\":942478708,\"maximum\":2130219210,\"default\":414889103,\"scaleType\":\"Automatic\"}}],\"nextLink\":\"qidywmh\"}")
            .toObject(SkuResourceArmPaginatedResult.class);
        Assertions.assertEquals("ekcsueh", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.value().get(0).sku().tier());
        Assertions.assertEquals(942478708, model.value().get(0).capacity().minimum());
        Assertions.assertEquals(2130219210, model.value().get(0).capacity().maximum());
        Assertions.assertEquals(414889103, model.value().get(0).capacity().defaultProperty());
        Assertions.assertEquals(SkuScaleType.AUTOMATIC, model.value().get(0).capacity().scaleType());
        Assertions.assertEquals("qidywmh", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuResourceArmPaginatedResult model = new SkuResourceArmPaginatedResult().withValue(
            Arrays.asList(new SkuResourceInner().withSku(new SkuSetting().withName("ekcsueh").withTier(SkuTier.PREMIUM))
                .withCapacity(new SkuCapacity().withMinimum(942478708)
                    .withMaximum(2130219210)
                    .withDefaultProperty(414889103)
                    .withScaleType(SkuScaleType.AUTOMATIC))))
            .withNextLink("qidywmh");
        model = BinaryData.fromObject(model).toObject(SkuResourceArmPaginatedResult.class);
        Assertions.assertEquals("ekcsueh", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.value().get(0).sku().tier());
        Assertions.assertEquals(942478708, model.value().get(0).capacity().minimum());
        Assertions.assertEquals(2130219210, model.value().get(0).capacity().maximum());
        Assertions.assertEquals(414889103, model.value().get(0).capacity().defaultProperty());
        Assertions.assertEquals(SkuScaleType.AUTOMATIC, model.value().get(0).capacity().scaleType());
        Assertions.assertEquals("qidywmh", model.nextLink());
    }
}
