// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.ClusterUpdateProperties;
import com.azure.resourcemanager.machinelearning.models.ScaleSettings;
import com.azure.resourcemanager.machinelearning.models.ScaleSettingsInformation;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ClusterUpdatePropertiesTests {
    @Test
    public void testDeserialize() {
        ClusterUpdateProperties model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"scaleSettings\":{\"maxNodeCount\":1486569340,\"minNodeCount\":5394429,\"nodeIdleTimeBeforeScaleDown\":\"PT19H4M10S\"}}}")
                .toObject(ClusterUpdateProperties.class);
        Assertions.assertEquals(1486569340, model.properties().scaleSettings().maxNodeCount());
        Assertions.assertEquals(5394429, model.properties().scaleSettings().minNodeCount());
        Assertions
            .assertEquals(
                Duration.parse("PT19H4M10S"), model.properties().scaleSettings().nodeIdleTimeBeforeScaleDown());
    }

    @Test
    public void testSerialize() {
        ClusterUpdateProperties model =
            new ClusterUpdateProperties()
                .withProperties(
                    new ScaleSettingsInformation()
                        .withScaleSettings(
                            new ScaleSettings()
                                .withMaxNodeCount(1486569340)
                                .withMinNodeCount(5394429)
                                .withNodeIdleTimeBeforeScaleDown(Duration.parse("PT19H4M10S"))));
        model = BinaryData.fromObject(model).toObject(ClusterUpdateProperties.class);
        Assertions.assertEquals(1486569340, model.properties().scaleSettings().maxNodeCount());
        Assertions.assertEquals(5394429, model.properties().scaleSettings().minNodeCount());
        Assertions
            .assertEquals(
                Duration.parse("PT19H4M10S"), model.properties().scaleSettings().nodeIdleTimeBeforeScaleDown());
    }
}
