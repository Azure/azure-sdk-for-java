// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ContainerResourceRequirements;
import com.azure.resourcemanager.machinelearning.models.ContainerResourceSettings;
import org.junit.jupiter.api.Assertions;

public final class ContainerResourceRequirementsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContainerResourceRequirements model = BinaryData.fromString(
            "{\"containerResourceRequests\":{\"cpu\":\"cnxtpzdlysei\",\"memory\":\"oa\",\"gpu\":\"t\"},\"containerResourceLimits\":{\"cpu\":\"tgrhz\",\"memory\":\"fdpfawrptvcsht\",\"gpu\":\"tzc\"}}")
            .toObject(ContainerResourceRequirements.class);
        Assertions.assertEquals("cnxtpzdlysei", model.containerResourceRequests().cpu());
        Assertions.assertEquals("oa", model.containerResourceRequests().memory());
        Assertions.assertEquals("t", model.containerResourceRequests().gpu());
        Assertions.assertEquals("tgrhz", model.containerResourceLimits().cpu());
        Assertions.assertEquals("fdpfawrptvcsht", model.containerResourceLimits().memory());
        Assertions.assertEquals("tzc", model.containerResourceLimits().gpu());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContainerResourceRequirements model = new ContainerResourceRequirements()
            .withContainerResourceRequests(
                new ContainerResourceSettings().withCpu("cnxtpzdlysei").withMemory("oa").withGpu("t"))
            .withContainerResourceLimits(
                new ContainerResourceSettings().withCpu("tgrhz").withMemory("fdpfawrptvcsht").withGpu("tzc"));
        model = BinaryData.fromObject(model).toObject(ContainerResourceRequirements.class);
        Assertions.assertEquals("cnxtpzdlysei", model.containerResourceRequests().cpu());
        Assertions.assertEquals("oa", model.containerResourceRequests().memory());
        Assertions.assertEquals("t", model.containerResourceRequests().gpu());
        Assertions.assertEquals("tgrhz", model.containerResourceLimits().cpu());
        Assertions.assertEquals("fdpfawrptvcsht", model.containerResourceLimits().memory());
        Assertions.assertEquals("tzc", model.containerResourceLimits().gpu());
    }
}
