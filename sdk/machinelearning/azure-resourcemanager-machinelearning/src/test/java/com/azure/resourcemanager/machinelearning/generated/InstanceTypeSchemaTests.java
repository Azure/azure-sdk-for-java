// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.InstanceTypeSchema;
import com.azure.resourcemanager.machinelearning.models.InstanceTypeSchemaResources;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class InstanceTypeSchemaTests {
    @Test
    public void testDeserialize() {
        InstanceTypeSchema model =
            BinaryData
                .fromString(
                    "{\"nodeSelector\":{\"viauogphua\":\"holvdn\",\"ukyefchnmnahmnxh\":\"tvt\"},\"resources\":{\"requests\":{\"oxffif\":\"irwrwe\",\"ozqvbubqmam\":\"xwrsnew\",\"taboidvmf\":\"sycxhxzgaz\"},\"limits\":{\"mtdherngb\":\"pubowsepdfg\"}}}")
                .toObject(InstanceTypeSchema.class);
        Assertions.assertEquals("holvdn", model.nodeSelector().get("viauogphua"));
        Assertions.assertEquals("irwrwe", model.resources().requests().get("oxffif"));
        Assertions.assertEquals("pubowsepdfg", model.resources().limits().get("mtdherngb"));
    }

    @Test
    public void testSerialize() {
        InstanceTypeSchema model =
            new InstanceTypeSchema()
                .withNodeSelector(mapOf("viauogphua", "holvdn", "ukyefchnmnahmnxh", "tvt"))
                .withResources(
                    new InstanceTypeSchemaResources()
                        .withRequests(mapOf("oxffif", "irwrwe", "ozqvbubqmam", "xwrsnew", "taboidvmf", "sycxhxzgaz"))
                        .withLimits(mapOf("mtdherngb", "pubowsepdfg")));
        model = BinaryData.fromObject(model).toObject(InstanceTypeSchema.class);
        Assertions.assertEquals("holvdn", model.nodeSelector().get("viauogphua"));
        Assertions.assertEquals("irwrwe", model.resources().requests().get("oxffif"));
        Assertions.assertEquals("pubowsepdfg", model.resources().limits().get("mtdherngb"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
