// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.AutoMLVertical;
import com.azure.resourcemanager.machinelearning.models.InputDeliveryMode;
import com.azure.resourcemanager.machinelearning.models.LogVerbosity;
import com.azure.resourcemanager.machinelearning.models.MLTableJobInput;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AutoMLVerticalTests {
    @Test
    public void testDeserialize() {
        AutoMLVertical model =
            BinaryData
                .fromString(
                    "{\"taskType\":\"AutoMLVertical\",\"logVerbosity\":\"Debug\",\"targetColumnName\":\"ddtjwfljhznam\",\"trainingData\":{\"jobInputType\":\"mltable\",\"mode\":\"Download\",\"uri\":\"tmzwcjjn\",\"description\":\"tjzmi\"}}")
                .toObject(AutoMLVertical.class);
        Assertions.assertEquals(LogVerbosity.DEBUG, model.logVerbosity());
        Assertions.assertEquals("ddtjwfljhznam", model.targetColumnName());
        Assertions.assertEquals("tjzmi", model.trainingData().description());
        Assertions.assertEquals(InputDeliveryMode.DOWNLOAD, model.trainingData().mode());
        Assertions.assertEquals("tmzwcjjn", model.trainingData().uri());
    }

    @Test
    public void testSerialize() {
        AutoMLVertical model =
            new AutoMLVertical()
                .withLogVerbosity(LogVerbosity.DEBUG)
                .withTargetColumnName("ddtjwfljhznam")
                .withTrainingData(
                    new MLTableJobInput()
                        .withDescription("tjzmi")
                        .withMode(InputDeliveryMode.DOWNLOAD)
                        .withUri("tmzwcjjn"));
        model = BinaryData.fromObject(model).toObject(AutoMLVertical.class);
        Assertions.assertEquals(LogVerbosity.DEBUG, model.logVerbosity());
        Assertions.assertEquals("ddtjwfljhznam", model.targetColumnName());
        Assertions.assertEquals("tjzmi", model.trainingData().description());
        Assertions.assertEquals(InputDeliveryMode.DOWNLOAD, model.trainingData().mode());
        Assertions.assertEquals("tmzwcjjn", model.trainingData().uri());
    }
}
