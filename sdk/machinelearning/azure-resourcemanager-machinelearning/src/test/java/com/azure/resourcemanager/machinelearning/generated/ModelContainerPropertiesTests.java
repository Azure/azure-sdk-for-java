// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ModelContainerProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ModelContainerPropertiesTests {
    @Test
    public void testDeserialize() {
        ModelContainerProperties model =
            BinaryData
                .fromString(
                    "{\"isArchived\":false,\"latestVersion\":\"gafcqu\",\"nextVersion\":\"dvetnws\",\"description\":\"utnw\",\"properties\":{\"k\":\"ycvuzhyrmewipmv\",\"xundxgk\":\"xukuqgsj\",\"muvgp\":\"twzhhzjhfjmhv\",\"uzjyihsasbhudypo\":\"uneqsxvmhf\"},\"tags\":{\"oobrlttyms\":\"emslynsqyrp\",\"nfwqzdzgtilaxhn\":\"nygq\"}}")
                .toObject(ModelContainerProperties.class);
        Assertions.assertEquals("utnw", model.description());
        Assertions.assertEquals("ycvuzhyrmewipmv", model.properties().get("k"));
        Assertions.assertEquals("emslynsqyrp", model.tags().get("oobrlttyms"));
        Assertions.assertEquals(false, model.isArchived());
    }

    @Test
    public void testSerialize() {
        ModelContainerProperties model =
            new ModelContainerProperties()
                .withDescription("utnw")
                .withProperties(
                    mapOf(
                        "k",
                        "ycvuzhyrmewipmv",
                        "xundxgk",
                        "xukuqgsj",
                        "muvgp",
                        "twzhhzjhfjmhv",
                        "uzjyihsasbhudypo",
                        "uneqsxvmhf"))
                .withTags(mapOf("oobrlttyms", "emslynsqyrp", "nfwqzdzgtilaxhn", "nygq"))
                .withIsArchived(false);
        model = BinaryData.fromObject(model).toObject(ModelContainerProperties.class);
        Assertions.assertEquals("utnw", model.description());
        Assertions.assertEquals("ycvuzhyrmewipmv", model.properties().get("k"));
        Assertions.assertEquals("emslynsqyrp", model.tags().get("oobrlttyms"));
        Assertions.assertEquals(false, model.isArchived());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
