// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.FeatureDataType;
import com.azure.resourcemanager.machinelearning.models.FeaturestoreEntityVersionProperties;
import com.azure.resourcemanager.machinelearning.models.IndexColumn;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class FeaturestoreEntityVersionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FeaturestoreEntityVersionProperties model = BinaryData.fromString(
            "{\"indexColumns\":[{\"dataType\":\"Long\",\"columnName\":\"kjljnhv\"},{\"dataType\":\"Boolean\",\"columnName\":\"ek\"},{\"dataType\":\"Datetime\",\"columnName\":\"snbksdqhj\"},{\"dataType\":\"Long\",\"columnName\":\"xeslkhhustcpoqm\"}],\"stage\":\"nwqjwgokn\",\"provisioningState\":\"Succeeded\",\"isArchived\":false,\"isAnonymous\":true,\"description\":\"b\",\"tags\":{\"ensvkzykjtj\":\"bkjbz\",\"hcdpkupnqrmgj\":\"nsxfwu\",\"fiz\":\"bpkuwxeoio\",\"jzwfb\":\"av\"},\"properties\":{\"mmfz\":\"y\",\"rzx\":\"bfw\"}}")
            .toObject(FeaturestoreEntityVersionProperties.class);
        Assertions.assertEquals("b", model.description());
        Assertions.assertEquals("bkjbz", model.tags().get("ensvkzykjtj"));
        Assertions.assertEquals("y", model.properties().get("mmfz"));
        Assertions.assertEquals(false, model.isArchived());
        Assertions.assertEquals(true, model.isAnonymous());
        Assertions.assertEquals(FeatureDataType.LONG, model.indexColumns().get(0).dataType());
        Assertions.assertEquals("kjljnhv", model.indexColumns().get(0).columnName());
        Assertions.assertEquals("nwqjwgokn", model.stage());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FeaturestoreEntityVersionProperties model = new FeaturestoreEntityVersionProperties().withDescription("b")
            .withTags(mapOf("ensvkzykjtj", "bkjbz", "hcdpkupnqrmgj", "nsxfwu", "fiz", "bpkuwxeoio", "jzwfb", "av"))
            .withProperties(mapOf("mmfz", "y", "rzx", "bfw"))
            .withIsArchived(false)
            .withIsAnonymous(true)
            .withIndexColumns(
                Arrays.asList(new IndexColumn().withDataType(FeatureDataType.LONG).withColumnName("kjljnhv"),
                    new IndexColumn().withDataType(FeatureDataType.BOOLEAN).withColumnName("ek"),
                    new IndexColumn().withDataType(FeatureDataType.DATETIME).withColumnName("snbksdqhj"),
                    new IndexColumn().withDataType(FeatureDataType.LONG).withColumnName("xeslkhhustcpoqm")))
            .withStage("nwqjwgokn");
        model = BinaryData.fromObject(model).toObject(FeaturestoreEntityVersionProperties.class);
        Assertions.assertEquals("b", model.description());
        Assertions.assertEquals("bkjbz", model.tags().get("ensvkzykjtj"));
        Assertions.assertEquals("y", model.properties().get("mmfz"));
        Assertions.assertEquals(false, model.isArchived());
        Assertions.assertEquals(true, model.isAnonymous());
        Assertions.assertEquals(FeatureDataType.LONG, model.indexColumns().get(0).dataType());
        Assertions.assertEquals("kjljnhv", model.indexColumns().get(0).columnName());
        Assertions.assertEquals("nwqjwgokn", model.stage());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
