// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.machinelearning.MachineLearningManager;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.Registry;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RegistriesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"23dff3e1-3086-416b-a02b-8726baca0832\",\"tenantId\":\"1a1a9b97-ffa1-46a7-8e54-eced4ab6f137\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"azeq\":{\"principalId\":\"e0bfee08-d897-4220-8106-8e4d42244f54\",\"clientId\":\"9512dcaf-7961-43f8-8dc5-306463522da5\"},\"uuujlitics\":{\"principalId\":\"44096f7c-80e1-444a-b41b-88a20b9ec4b8\",\"clientId\":\"d3a956f0-2d61-49b7-8cab-ad17412e2fa9\"}}},\"kind\":\"qxgjz\",\"properties\":{\"discoveryUrl\":\"hop\",\"intellectualPropertyPublisher\":\"xip\",\"managedResourceGroup\":{\"resourceId\":\"pvkcnggocnwnjm\"},\"mlFlowRegistryUri\":\"tlam\",\"registryPrivateEndpointConnections\":[{\"id\":\"k\",\"location\":\"jxwwqz\",\"properties\":{\"groupIds\":[\"b\",\"frhqzvwznwcqoapd\"],\"privateEndpoint\":{},\"registryPrivateLinkServiceConnectionState\":{},\"provisioningState\":\"tetfdpu\"}},{\"id\":\"zdtjbesfum\",\"location\":\"saafkvqhbwsviv\",\"properties\":{\"groupIds\":[\"g\",\"fvublszsveguxaxi\",\"pnymbjrsdiufqxr\",\"zijosuzegmcmlzmf\"],\"privateEndpoint\":{},\"registryPrivateLinkServiceConnectionState\":{},\"provisioningState\":\"newrvjg\"}},{\"id\":\"mx\",\"location\":\"gowdavpqyhax\",\"properties\":{\"groupIds\":[\"oz\"],\"privateEndpoint\":{},\"registryPrivateLinkServiceConnectionState\":{},\"provisioningState\":\"w\"}}],\"publicNetworkAccess\":\"n\",\"regionDetails\":[{\"acrDetails\":[{}],\"location\":\"cggoppmxcmoug\",\"storageAccountDetails\":[{}]}]},\"sku\":{\"name\":\"fy\",\"tier\":\"Standard\",\"size\":\"a\",\"family\":\"qvawkesxvz\",\"capacity\":1637573334},\"location\":\"wpjpgqwbrzkm\",\"tags\":{\"nqlizlcyhjhrkfp\":\"mycxmhorrecoiq\",\"bvm\":\"iiommisbf\",\"dvfjvbwawyma\":\"jcmpoh\"},\"id\":\"boindiuyqdjkugcj\",\"name\":\"sqpkmbryh\",\"type\":\"shkv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MachineLearningManager manager = MachineLearningManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Registry> response
            = manager.registries().listByResourceGroup("skinmxanjguadh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wpjpgqwbrzkm", response.iterator().next().location());
        Assertions.assertEquals("mycxmhorrecoiq", response.iterator().next().tags().get("nqlizlcyhjhrkfp"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("qxgjz", response.iterator().next().kind());
        Assertions.assertEquals("fy", response.iterator().next().sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, response.iterator().next().sku().tier());
        Assertions.assertEquals("a", response.iterator().next().sku().size());
        Assertions.assertEquals("qvawkesxvz", response.iterator().next().sku().family());
        Assertions.assertEquals(1637573334, response.iterator().next().sku().capacity());
        Assertions.assertEquals("hop", response.iterator().next().discoveryUrl());
        Assertions.assertEquals("xip", response.iterator().next().intellectualPropertyPublisher());
        Assertions.assertEquals("pvkcnggocnwnjm", response.iterator().next().managedResourceGroup().resourceId());
        Assertions.assertEquals("tlam", response.iterator().next().mlFlowRegistryUri());
        Assertions.assertEquals("k", response.iterator().next().registryPrivateEndpointConnections().get(0).id());
        Assertions.assertEquals("jxwwqz",
            response.iterator().next().registryPrivateEndpointConnections().get(0).location());
        Assertions.assertEquals("b",
            response.iterator().next().registryPrivateEndpointConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("tetfdpu",
            response.iterator().next().registryPrivateEndpointConnections().get(0).provisioningState());
        Assertions.assertEquals("n", response.iterator().next().publicNetworkAccess());
        Assertions.assertEquals("cggoppmxcmoug", response.iterator().next().regionDetails().get(0).location());
    }
}
