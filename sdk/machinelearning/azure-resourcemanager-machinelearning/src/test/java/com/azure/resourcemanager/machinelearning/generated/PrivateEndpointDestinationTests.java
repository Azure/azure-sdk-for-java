// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.PrivateEndpointDestination;
import com.azure.resourcemanager.machinelearning.models.RuleStatus;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointDestinationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointDestination model = BinaryData.fromString(
            "{\"serviceResourceId\":\"qzsaaoq\",\"sparkEnabled\":false,\"sparkStatus\":\"Inactive\",\"subresourceTarget\":\"txjqfiafc\"}")
            .toObject(PrivateEndpointDestination.class);
        Assertions.assertEquals("qzsaaoq", model.serviceResourceId());
        Assertions.assertEquals(false, model.sparkEnabled());
        Assertions.assertEquals(RuleStatus.INACTIVE, model.sparkStatus());
        Assertions.assertEquals("txjqfiafc", model.subresourceTarget());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointDestination model = new PrivateEndpointDestination().withServiceResourceId("qzsaaoq")
            .withSparkEnabled(false)
            .withSparkStatus(RuleStatus.INACTIVE)
            .withSubresourceTarget("txjqfiafc");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointDestination.class);
        Assertions.assertEquals("qzsaaoq", model.serviceResourceId());
        Assertions.assertEquals(false, model.sparkEnabled());
        Assertions.assertEquals(RuleStatus.INACTIVE, model.sparkStatus());
        Assertions.assertEquals("txjqfiafc", model.subresourceTarget());
    }
}
