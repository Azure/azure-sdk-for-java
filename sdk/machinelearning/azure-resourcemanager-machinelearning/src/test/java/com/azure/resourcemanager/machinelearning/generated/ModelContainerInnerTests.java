// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.ModelContainerInner;
import com.azure.resourcemanager.machinelearning.models.ModelContainerProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ModelContainerInnerTests {
    @Test
    public void testDeserialize() {
        ModelContainerInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"isArchived\":true,\"latestVersion\":\"nfepgf\",\"nextVersion\":\"etwlyxgncx\",\"description\":\"xhdjhl\",\"properties\":{\"bcporxvxcjzhqizx\":\"bcxf\",\"t\":\"pxtgqscjav\",\"tgguwpijrajcivmm\":\"uhdqazk\"},\"tags\":{\"wrxgkneuvy\":\"cf\"}},\"id\":\"zqodfvpgshox\",\"name\":\"sgbpfgzdjtx\",\"type\":\"zflbqvg\"}")
                .toObject(ModelContainerInner.class);
        Assertions.assertEquals("xhdjhl", model.properties().description());
        Assertions.assertEquals("bcxf", model.properties().properties().get("bcporxvxcjzhqizx"));
        Assertions.assertEquals("cf", model.properties().tags().get("wrxgkneuvy"));
        Assertions.assertEquals(true, model.properties().isArchived());
    }

    @Test
    public void testSerialize() {
        ModelContainerInner model =
            new ModelContainerInner()
                .withProperties(
                    new ModelContainerProperties()
                        .withDescription("xhdjhl")
                        .withProperties(
                            mapOf("bcporxvxcjzhqizx", "bcxf", "t", "pxtgqscjav", "tgguwpijrajcivmm", "uhdqazk"))
                        .withTags(mapOf("wrxgkneuvy", "cf"))
                        .withIsArchived(true));
        model = BinaryData.fromObject(model).toObject(ModelContainerInner.class);
        Assertions.assertEquals("xhdjhl", model.properties().description());
        Assertions.assertEquals("bcxf", model.properties().properties().get("bcporxvxcjzhqizx"));
        Assertions.assertEquals("cf", model.properties().tags().get("wrxgkneuvy"));
        Assertions.assertEquals(true, model.properties().isArchived());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
