// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.machinelearning.MachineLearningManager;
import com.azure.resourcemanager.machinelearning.models.FeatureDataType;
import com.azure.resourcemanager.machinelearning.models.FeaturestoreEntityVersion;
import com.azure.resourcemanager.machinelearning.models.ListViewType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FeaturestoreEntityVersionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"indexColumns\":[{\"dataType\":\"Datetime\",\"columnName\":\"mxpjkuqbng\"}],\"stage\":\"mlxs\",\"provisioningState\":\"Failed\",\"isArchived\":false,\"isAnonymous\":false,\"description\":\"xtgqpqfwuplfjkba\",\"tags\":{\"hxbfhbip\":\"seimuipggt\",\"fefznxcleyamv\":\"dziphe\",\"vbtkafcnfitpu\":\"itjjhqvypqgncgw\"},\"properties\":{\"xb\":\"kdwyjdvy\",\"nxbdisjeovgc\":\"wjgyngoudclridql\"}},\"id\":\"chgjonrhdib\",\"name\":\"vpdjytme\",\"type\":\"uiuvkcnqonj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MachineLearningManager manager = MachineLearningManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<FeaturestoreEntityVersion> response = manager.featurestoreEntityVersions()
            .list("wnwoxve", "wwqchxowppvux", "actoqqehn", "ir", "gnvuolv", ListViewType.ALL, 408724874, "nlbkizebbrwl",
                "eq", "isoiqgetzgwywy", "bwuamo", "opqqiyjrehe", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xtgqpqfwuplfjkba", response.iterator().next().properties().description());
        Assertions.assertEquals("seimuipggt", response.iterator().next().properties().tags().get("hxbfhbip"));
        Assertions.assertEquals("kdwyjdvy", response.iterator().next().properties().properties().get("xb"));
        Assertions.assertEquals(false, response.iterator().next().properties().isArchived());
        Assertions.assertEquals(false, response.iterator().next().properties().isAnonymous());
        Assertions.assertEquals(FeatureDataType.DATETIME,
            response.iterator().next().properties().indexColumns().get(0).dataType());
        Assertions.assertEquals("mxpjkuqbng",
            response.iterator().next().properties().indexColumns().get(0).columnName());
        Assertions.assertEquals("mlxs", response.iterator().next().properties().stage());
    }
}
