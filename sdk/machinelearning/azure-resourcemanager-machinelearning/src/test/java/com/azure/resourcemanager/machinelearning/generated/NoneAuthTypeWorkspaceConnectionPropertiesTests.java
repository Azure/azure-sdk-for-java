// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ConnectionCategory;
import com.azure.resourcemanager.machinelearning.models.NoneAuthTypeWorkspaceConnectionProperties;
import com.azure.resourcemanager.machinelearning.models.ValueFormat;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class NoneAuthTypeWorkspaceConnectionPropertiesTests {
    @Test
    public void testDeserialize() {
        NoneAuthTypeWorkspaceConnectionProperties model =
            BinaryData
                .fromString(
                    "{\"authType\":\"None\",\"category\":\"Git\",\"target\":\"xzujksrlsm\",\"value\":\"sqplpvmjcd\",\"valueFormat\":\"JSON\"}")
                .toObject(NoneAuthTypeWorkspaceConnectionProperties.class);
        Assertions.assertEquals(ConnectionCategory.GIT, model.category());
        Assertions.assertEquals("xzujksrlsm", model.target());
        Assertions.assertEquals("sqplpvmjcd", model.value());
        Assertions.assertEquals(ValueFormat.JSON, model.valueFormat());
    }

    @Test
    public void testSerialize() {
        NoneAuthTypeWorkspaceConnectionProperties model =
            new NoneAuthTypeWorkspaceConnectionProperties()
                .withCategory(ConnectionCategory.GIT)
                .withTarget("xzujksrlsm")
                .withValue("sqplpvmjcd")
                .withValueFormat(ValueFormat.JSON);
        model = BinaryData.fromObject(model).toObject(NoneAuthTypeWorkspaceConnectionProperties.class);
        Assertions.assertEquals(ConnectionCategory.GIT, model.category());
        Assertions.assertEquals("xzujksrlsm", model.target());
        Assertions.assertEquals("sqplpvmjcd", model.value());
        Assertions.assertEquals(ValueFormat.JSON, model.valueFormat());
    }
}
