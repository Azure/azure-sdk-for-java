// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.AcrDetails;
import com.azure.resourcemanager.machinelearning.models.ArmResourceId;
import com.azure.resourcemanager.machinelearning.models.RegistryRegionArmDetails;
import com.azure.resourcemanager.machinelearning.models.StorageAccountDetails;
import com.azure.resourcemanager.machinelearning.models.SystemCreatedAcrAccount;
import com.azure.resourcemanager.machinelearning.models.SystemCreatedStorageAccount;
import com.azure.resourcemanager.machinelearning.models.UserCreatedAcrAccount;
import com.azure.resourcemanager.machinelearning.models.UserCreatedStorageAccount;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RegistryRegionArmDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RegistryRegionArmDetails model = BinaryData.fromString(
            "{\"acrDetails\":[{\"systemCreatedAcrAccount\":{\"acrAccountName\":\"kgqaboo\",\"acrAccountSku\":\"bmsgycqsxrmdv\",\"armResourceId\":{\"resourceId\":\"yqaeohpjhgejk\"}},\"userCreatedAcrAccount\":{\"armResourceId\":{\"resourceId\":\"daurgho\"}}},{\"systemCreatedAcrAccount\":{\"acrAccountName\":\"exbkhx\",\"acrAccountSku\":\"joezlqxrkdknkobe\",\"armResourceId\":{\"resourceId\":\"b\"}},\"userCreatedAcrAccount\":{\"armResourceId\":{\"resourceId\":\"tzamicbig\"}}},{\"systemCreatedAcrAccount\":{\"acrAccountName\":\"gzseznuxkeua\",\"acrAccountSku\":\"aabmdlqjb\",\"armResourceId\":{\"resourceId\":\"f\"}},\"userCreatedAcrAccount\":{\"armResourceId\":{\"resourceId\":\"upmomihzbd\"}}},{\"systemCreatedAcrAccount\":{\"acrAccountName\":\"pkcdpreyxely\",\"acrAccountSku\":\"ghflrufssjyghsf\",\"armResourceId\":{\"resourceId\":\"bh\"}},\"userCreatedAcrAccount\":{\"armResourceId\":{\"resourceId\":\"mqfmefgvqcpd\"}}}],\"location\":\"gquxweysland\",\"storageAccountDetails\":[{\"systemCreatedStorageAccount\":{\"allowBlobPublicAccess\":false,\"armResourceId\":{\"resourceId\":\"hghcgawnrrnqu\"},\"storageAccountHnsEnabled\":false,\"storageAccountName\":\"tireimse\",\"storageAccountType\":\"fsxstcyil\"},\"userCreatedStorageAccount\":{\"armResourceId\":{\"resourceId\":\"mxcjzlquzexokjx\"}}},{\"systemCreatedStorageAccount\":{\"allowBlobPublicAccess\":false,\"armResourceId\":{\"resourceId\":\"inzabwmvoglj\"},\"storageAccountHnsEnabled\":false,\"storageAccountName\":\"gi\",\"storageAccountType\":\"wcehaqidoyzlt\"},\"userCreatedStorageAccount\":{\"armResourceId\":{\"resourceId\":\"qoqpepiaeap\"}}}]}")
            .toObject(RegistryRegionArmDetails.class);
        Assertions.assertEquals("kgqaboo", model.acrDetails().get(0).systemCreatedAcrAccount().acrAccountName());
        Assertions.assertEquals("bmsgycqsxrmdv", model.acrDetails().get(0).systemCreatedAcrAccount().acrAccountSku());
        Assertions.assertEquals("yqaeohpjhgejk",
            model.acrDetails().get(0).systemCreatedAcrAccount().armResourceId().resourceId());
        Assertions.assertEquals("daurgho",
            model.acrDetails().get(0).userCreatedAcrAccount().armResourceId().resourceId());
        Assertions.assertEquals("gquxweysland", model.location());
        Assertions.assertEquals(false,
            model.storageAccountDetails().get(0).systemCreatedStorageAccount().allowBlobPublicAccess());
        Assertions.assertEquals("hghcgawnrrnqu",
            model.storageAccountDetails().get(0).systemCreatedStorageAccount().armResourceId().resourceId());
        Assertions.assertEquals(false,
            model.storageAccountDetails().get(0).systemCreatedStorageAccount().storageAccountHnsEnabled());
        Assertions.assertEquals("tireimse",
            model.storageAccountDetails().get(0).systemCreatedStorageAccount().storageAccountName());
        Assertions.assertEquals("fsxstcyil",
            model.storageAccountDetails().get(0).systemCreatedStorageAccount().storageAccountType());
        Assertions.assertEquals("mxcjzlquzexokjx",
            model.storageAccountDetails().get(0).userCreatedStorageAccount().armResourceId().resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RegistryRegionArmDetails model = new RegistryRegionArmDetails()
            .withAcrDetails(Arrays.asList(
                new AcrDetails()
                    .withSystemCreatedAcrAccount(new SystemCreatedAcrAccount().withAcrAccountName("kgqaboo")
                        .withAcrAccountSku("bmsgycqsxrmdv")
                        .withArmResourceId(new ArmResourceId().withResourceId("yqaeohpjhgejk")))
                    .withUserCreatedAcrAccount(
                        new UserCreatedAcrAccount().withArmResourceId(new ArmResourceId().withResourceId("daurgho"))),
                new AcrDetails()
                    .withSystemCreatedAcrAccount(new SystemCreatedAcrAccount().withAcrAccountName("exbkhx")
                        .withAcrAccountSku("joezlqxrkdknkobe")
                        .withArmResourceId(new ArmResourceId().withResourceId("b")))
                    .withUserCreatedAcrAccount(
                        new UserCreatedAcrAccount().withArmResourceId(new ArmResourceId().withResourceId("tzamicbig"))),
                new AcrDetails()
                    .withSystemCreatedAcrAccount(new SystemCreatedAcrAccount().withAcrAccountName("gzseznuxkeua")
                        .withAcrAccountSku("aabmdlqjb")
                        .withArmResourceId(new ArmResourceId().withResourceId("f")))
                    .withUserCreatedAcrAccount(new UserCreatedAcrAccount()
                        .withArmResourceId(new ArmResourceId().withResourceId("upmomihzbd"))),
                new AcrDetails()
                    .withSystemCreatedAcrAccount(new SystemCreatedAcrAccount().withAcrAccountName("pkcdpreyxely")
                        .withAcrAccountSku("ghflrufssjyghsf")
                        .withArmResourceId(new ArmResourceId().withResourceId("bh")))
                    .withUserCreatedAcrAccount(new UserCreatedAcrAccount()
                        .withArmResourceId(new ArmResourceId().withResourceId("mqfmefgvqcpd")))))
            .withLocation("gquxweysland")
            .withStorageAccountDetails(Arrays.asList(
                new StorageAccountDetails()
                    .withSystemCreatedStorageAccount(new SystemCreatedStorageAccount().withAllowBlobPublicAccess(false)
                        .withArmResourceId(new ArmResourceId().withResourceId("hghcgawnrrnqu"))
                        .withStorageAccountHnsEnabled(false)
                        .withStorageAccountName("tireimse")
                        .withStorageAccountType("fsxstcyil"))
                    .withUserCreatedStorageAccount(new UserCreatedStorageAccount()
                        .withArmResourceId(new ArmResourceId().withResourceId("mxcjzlquzexokjx"))),
                new StorageAccountDetails()
                    .withSystemCreatedStorageAccount(new SystemCreatedStorageAccount().withAllowBlobPublicAccess(false)
                        .withArmResourceId(new ArmResourceId().withResourceId("inzabwmvoglj"))
                        .withStorageAccountHnsEnabled(false)
                        .withStorageAccountName("gi")
                        .withStorageAccountType("wcehaqidoyzlt"))
                    .withUserCreatedStorageAccount(new UserCreatedStorageAccount()
                        .withArmResourceId(new ArmResourceId().withResourceId("qoqpepiaeap")))));
        model = BinaryData.fromObject(model).toObject(RegistryRegionArmDetails.class);
        Assertions.assertEquals("kgqaboo", model.acrDetails().get(0).systemCreatedAcrAccount().acrAccountName());
        Assertions.assertEquals("bmsgycqsxrmdv", model.acrDetails().get(0).systemCreatedAcrAccount().acrAccountSku());
        Assertions.assertEquals("yqaeohpjhgejk",
            model.acrDetails().get(0).systemCreatedAcrAccount().armResourceId().resourceId());
        Assertions.assertEquals("daurgho",
            model.acrDetails().get(0).userCreatedAcrAccount().armResourceId().resourceId());
        Assertions.assertEquals("gquxweysland", model.location());
        Assertions.assertEquals(false,
            model.storageAccountDetails().get(0).systemCreatedStorageAccount().allowBlobPublicAccess());
        Assertions.assertEquals("hghcgawnrrnqu",
            model.storageAccountDetails().get(0).systemCreatedStorageAccount().armResourceId().resourceId());
        Assertions.assertEquals(false,
            model.storageAccountDetails().get(0).systemCreatedStorageAccount().storageAccountHnsEnabled());
        Assertions.assertEquals("tireimse",
            model.storageAccountDetails().get(0).systemCreatedStorageAccount().storageAccountName());
        Assertions.assertEquals("fsxstcyil",
            model.storageAccountDetails().get(0).systemCreatedStorageAccount().storageAccountType());
        Assertions.assertEquals("mxcjzlquzexokjx",
            model.storageAccountDetails().get(0).userCreatedStorageAccount().armResourceId().resourceId());
    }
}
