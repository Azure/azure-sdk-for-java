// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.DataContainerProperties;
import com.azure.resourcemanager.machinelearning.models.DataType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DataContainerPropertiesTests {
    @Test
    public void testDeserialize() {
        DataContainerProperties model =
            BinaryData
                .fromString(
                    "{\"dataType\":\"uri_file\",\"isArchived\":false,\"latestVersion\":\"gthrrghxjbdhq\",\"nextVersion\":\"cx\",\"description\":\"rpdsof\",\"properties\":{\"z\":\"rnsvbuswd\",\"rtkfawnopq\":\"ybycnunvj\"},\"tags\":{\"psew\":\"yzirtxdyuxzejn\",\"ieoxorggufhyaomt\":\"ioilqukrydxtq\",\"jzhpjbibgjmfx\":\"ghhavgrvkffo\"}}")
                .toObject(DataContainerProperties.class);
        Assertions.assertEquals("rpdsof", model.description());
        Assertions.assertEquals("rnsvbuswd", model.properties().get("z"));
        Assertions.assertEquals("yzirtxdyuxzejn", model.tags().get("psew"));
        Assertions.assertEquals(false, model.isArchived());
        Assertions.assertEquals(DataType.URI_FILE, model.dataType());
    }

    @Test
    public void testSerialize() {
        DataContainerProperties model =
            new DataContainerProperties()
                .withDescription("rpdsof")
                .withProperties(mapOf("z", "rnsvbuswd", "rtkfawnopq", "ybycnunvj"))
                .withTags(
                    mapOf(
                        "psew", "yzirtxdyuxzejn", "ieoxorggufhyaomt", "ioilqukrydxtq", "jzhpjbibgjmfx", "ghhavgrvkffo"))
                .withIsArchived(false)
                .withDataType(DataType.URI_FILE);
        model = BinaryData.fromObject(model).toObject(DataContainerProperties.class);
        Assertions.assertEquals("rpdsof", model.description());
        Assertions.assertEquals("rnsvbuswd", model.properties().get("z"));
        Assertions.assertEquals("yzirtxdyuxzejn", model.tags().get("psew"));
        Assertions.assertEquals(false, model.isArchived());
        Assertions.assertEquals(DataType.URI_FILE, model.dataType());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
