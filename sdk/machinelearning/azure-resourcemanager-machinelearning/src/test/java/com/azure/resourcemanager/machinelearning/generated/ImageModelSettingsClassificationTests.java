// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification;
import com.azure.resourcemanager.machinelearning.models.InputDeliveryMode;
import com.azure.resourcemanager.machinelearning.models.LearningRateScheduler;
import com.azure.resourcemanager.machinelearning.models.MLFlowModelJobInput;
import com.azure.resourcemanager.machinelearning.models.StochasticOptimizer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ImageModelSettingsClassificationTests {
    @Test
    public void testDeserialize() {
        ImageModelSettingsClassification model =
            BinaryData
                .fromString(
                    "{\"trainingCropSize\":1822368385,\"validationCropSize\":1960522025,\"validationResizeSize\":1833506566,\"weightedLoss\":826900900,\"advancedSettings\":\"ytxtdgu\",\"amsGradient\":false,\"augmentations\":\"pktgdstyouambew\",\"beta1\":89.09465,\"beta2\":29.925299,\"checkpointFrequency\":617618953,\"checkpointModel\":{\"jobInputType\":\"mlflow_model\",\"mode\":\"ReadOnlyMount\",\"uri\":\"mut\",\"description\":\"xeyg\"},\"checkpointRunId\":\"igijiitnspxlz\",\"distributed\":false,\"earlyStopping\":true,\"earlyStoppingDelay\":1105390399,\"earlyStoppingPatience\":70737207,\"enableOnnxNormalization\":false,\"evaluationFrequency\":76122921,\"gradientAccumulationStep\":141273705,\"layersToFreeze\":1225753810,\"learningRate\":16.353416,\"learningRateScheduler\":\"WarmupCosine\",\"modelName\":\"qfrojsydgrhyd\",\"momentum\":61.694084,\"nesterov\":false,\"numberOfEpochs\":743101016,\"numberOfWorkers\":466292489,\"optimizer\":\"None\",\"randomSeed\":1238325224,\"stepLRGamma\":83.01804,\"stepLRStepSize\":1721199209,\"trainingBatchSize\":1293313813,\"validationBatchSize\":1609369492,\"warmupCosineLRCycles\":60.077423,\"warmupCosineLRWarmupEpochs\":835601294,\"weightDecay\":1.8733203}")
                .toObject(ImageModelSettingsClassification.class);
        Assertions.assertEquals("ytxtdgu", model.advancedSettings());
        Assertions.assertEquals(false, model.amsGradient());
        Assertions.assertEquals("pktgdstyouambew", model.augmentations());
        Assertions.assertEquals(89.09465F, model.beta1());
        Assertions.assertEquals(29.925299F, model.beta2());
        Assertions.assertEquals(617618953, model.checkpointFrequency());
        Assertions.assertEquals("xeyg", model.checkpointModel().description());
        Assertions.assertEquals(InputDeliveryMode.READ_ONLY_MOUNT, model.checkpointModel().mode());
        Assertions.assertEquals("mut", model.checkpointModel().uri());
        Assertions.assertEquals("igijiitnspxlz", model.checkpointRunId());
        Assertions.assertEquals(false, model.distributed());
        Assertions.assertEquals(true, model.earlyStopping());
        Assertions.assertEquals(1105390399, model.earlyStoppingDelay());
        Assertions.assertEquals(70737207, model.earlyStoppingPatience());
        Assertions.assertEquals(false, model.enableOnnxNormalization());
        Assertions.assertEquals(76122921, model.evaluationFrequency());
        Assertions.assertEquals(141273705, model.gradientAccumulationStep());
        Assertions.assertEquals(1225753810, model.layersToFreeze());
        Assertions.assertEquals(16.353416F, model.learningRate());
        Assertions.assertEquals(LearningRateScheduler.WARMUP_COSINE, model.learningRateScheduler());
        Assertions.assertEquals("qfrojsydgrhyd", model.modelName());
        Assertions.assertEquals(61.694084F, model.momentum());
        Assertions.assertEquals(false, model.nesterov());
        Assertions.assertEquals(743101016, model.numberOfEpochs());
        Assertions.assertEquals(466292489, model.numberOfWorkers());
        Assertions.assertEquals(StochasticOptimizer.NONE, model.optimizer());
        Assertions.assertEquals(1238325224, model.randomSeed());
        Assertions.assertEquals(83.01804F, model.stepLRGamma());
        Assertions.assertEquals(1721199209, model.stepLRStepSize());
        Assertions.assertEquals(1293313813, model.trainingBatchSize());
        Assertions.assertEquals(1609369492, model.validationBatchSize());
        Assertions.assertEquals(60.077423F, model.warmupCosineLRCycles());
        Assertions.assertEquals(835601294, model.warmupCosineLRWarmupEpochs());
        Assertions.assertEquals(1.8733203F, model.weightDecay());
        Assertions.assertEquals(1822368385, model.trainingCropSize());
        Assertions.assertEquals(1960522025, model.validationCropSize());
        Assertions.assertEquals(1833506566, model.validationResizeSize());
        Assertions.assertEquals(826900900, model.weightedLoss());
    }

    @Test
    public void testSerialize() {
        ImageModelSettingsClassification model =
            new ImageModelSettingsClassification()
                .withAdvancedSettings("ytxtdgu")
                .withAmsGradient(false)
                .withAugmentations("pktgdstyouambew")
                .withBeta1(89.09465F)
                .withBeta2(29.925299F)
                .withCheckpointFrequency(617618953)
                .withCheckpointModel(
                    new MLFlowModelJobInput()
                        .withDescription("xeyg")
                        .withMode(InputDeliveryMode.READ_ONLY_MOUNT)
                        .withUri("mut"))
                .withCheckpointRunId("igijiitnspxlz")
                .withDistributed(false)
                .withEarlyStopping(true)
                .withEarlyStoppingDelay(1105390399)
                .withEarlyStoppingPatience(70737207)
                .withEnableOnnxNormalization(false)
                .withEvaluationFrequency(76122921)
                .withGradientAccumulationStep(141273705)
                .withLayersToFreeze(1225753810)
                .withLearningRate(16.353416F)
                .withLearningRateScheduler(LearningRateScheduler.WARMUP_COSINE)
                .withModelName("qfrojsydgrhyd")
                .withMomentum(61.694084F)
                .withNesterov(false)
                .withNumberOfEpochs(743101016)
                .withNumberOfWorkers(466292489)
                .withOptimizer(StochasticOptimizer.NONE)
                .withRandomSeed(1238325224)
                .withStepLRGamma(83.01804F)
                .withStepLRStepSize(1721199209)
                .withTrainingBatchSize(1293313813)
                .withValidationBatchSize(1609369492)
                .withWarmupCosineLRCycles(60.077423F)
                .withWarmupCosineLRWarmupEpochs(835601294)
                .withWeightDecay(1.8733203F)
                .withTrainingCropSize(1822368385)
                .withValidationCropSize(1960522025)
                .withValidationResizeSize(1833506566)
                .withWeightedLoss(826900900);
        model = BinaryData.fromObject(model).toObject(ImageModelSettingsClassification.class);
        Assertions.assertEquals("ytxtdgu", model.advancedSettings());
        Assertions.assertEquals(false, model.amsGradient());
        Assertions.assertEquals("pktgdstyouambew", model.augmentations());
        Assertions.assertEquals(89.09465F, model.beta1());
        Assertions.assertEquals(29.925299F, model.beta2());
        Assertions.assertEquals(617618953, model.checkpointFrequency());
        Assertions.assertEquals("xeyg", model.checkpointModel().description());
        Assertions.assertEquals(InputDeliveryMode.READ_ONLY_MOUNT, model.checkpointModel().mode());
        Assertions.assertEquals("mut", model.checkpointModel().uri());
        Assertions.assertEquals("igijiitnspxlz", model.checkpointRunId());
        Assertions.assertEquals(false, model.distributed());
        Assertions.assertEquals(true, model.earlyStopping());
        Assertions.assertEquals(1105390399, model.earlyStoppingDelay());
        Assertions.assertEquals(70737207, model.earlyStoppingPatience());
        Assertions.assertEquals(false, model.enableOnnxNormalization());
        Assertions.assertEquals(76122921, model.evaluationFrequency());
        Assertions.assertEquals(141273705, model.gradientAccumulationStep());
        Assertions.assertEquals(1225753810, model.layersToFreeze());
        Assertions.assertEquals(16.353416F, model.learningRate());
        Assertions.assertEquals(LearningRateScheduler.WARMUP_COSINE, model.learningRateScheduler());
        Assertions.assertEquals("qfrojsydgrhyd", model.modelName());
        Assertions.assertEquals(61.694084F, model.momentum());
        Assertions.assertEquals(false, model.nesterov());
        Assertions.assertEquals(743101016, model.numberOfEpochs());
        Assertions.assertEquals(466292489, model.numberOfWorkers());
        Assertions.assertEquals(StochasticOptimizer.NONE, model.optimizer());
        Assertions.assertEquals(1238325224, model.randomSeed());
        Assertions.assertEquals(83.01804F, model.stepLRGamma());
        Assertions.assertEquals(1721199209, model.stepLRStepSize());
        Assertions.assertEquals(1293313813, model.trainingBatchSize());
        Assertions.assertEquals(1609369492, model.validationBatchSize());
        Assertions.assertEquals(60.077423F, model.warmupCosineLRCycles());
        Assertions.assertEquals(835601294, model.warmupCosineLRWarmupEpochs());
        Assertions.assertEquals(1.8733203F, model.weightDecay());
        Assertions.assertEquals(1822368385, model.trainingCropSize());
        Assertions.assertEquals(1960522025, model.validationCropSize());
        Assertions.assertEquals(1833506566, model.validationResizeSize());
        Assertions.assertEquals(826900900, model.weightedLoss());
    }
}
