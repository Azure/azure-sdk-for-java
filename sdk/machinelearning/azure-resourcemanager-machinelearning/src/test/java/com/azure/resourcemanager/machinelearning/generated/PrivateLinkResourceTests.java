// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentity;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.PrivateLinkResource;
import com.azure.resourcemanager.machinelearning.models.Sku;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import com.azure.resourcemanager.machinelearning.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PrivateLinkResourceTests {
    @Test
    public void testDeserialize() {
        PrivateLinkResource model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"groupId\":\"wwfvov\",\"requiredMembers\":[\"euecivyhzceuoj\"],\"requiredZoneNames\":[\"wjue\"]},\"identity\":{\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"dxwitx\":{},\"awgqwgxhni\":{},\"fbkp\":{}}},\"location\":\"gklwn\",\"tags\":{\"wzbtdhxu\":\"jdauwhvy\",\"veual\":\"znbmpowuwprzq\",\"wsrtjriplrbpbe\":\"pjmkhfxobbc\"},\"sku\":{\"name\":\"ghfg\",\"tier\":\"Free\",\"size\":\"wxzvlvqhjkb\",\"family\":\"ibtnmxiebwwaloay\",\"capacity\":1665079577},\"id\":\"rtzju\",\"name\":\"gwyzm\",\"type\":\"txon\"}")
                .toObject(PrivateLinkResource.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("gklwn", model.location());
        Assertions.assertEquals("jdauwhvy", model.tags().get("wzbtdhxu"));
        Assertions.assertEquals("ghfg", model.sku().name());
        Assertions.assertEquals(SkuTier.FREE, model.sku().tier());
        Assertions.assertEquals("wxzvlvqhjkb", model.sku().size());
        Assertions.assertEquals("ibtnmxiebwwaloay", model.sku().family());
        Assertions.assertEquals(1665079577, model.sku().capacity());
        Assertions.assertEquals("wjue", model.requiredZoneNames().get(0));
    }

    @Test
    public void testSerialize() {
        PrivateLinkResource model =
            new PrivateLinkResource()
                .withIdentity(
                    new ManagedServiceIdentity()
                        .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                        .withUserAssignedIdentities(
                            mapOf(
                                "dxwitx",
                                new UserAssignedIdentity(),
                                "awgqwgxhni",
                                new UserAssignedIdentity(),
                                "fbkp",
                                new UserAssignedIdentity())))
                .withLocation("gklwn")
                .withTags(mapOf("wzbtdhxu", "jdauwhvy", "veual", "znbmpowuwprzq", "wsrtjriplrbpbe", "pjmkhfxobbc"))
                .withSku(
                    new Sku()
                        .withName("ghfg")
                        .withTier(SkuTier.FREE)
                        .withSize("wxzvlvqhjkb")
                        .withFamily("ibtnmxiebwwaloay")
                        .withCapacity(1665079577))
                .withRequiredZoneNames(Arrays.asList("wjue"));
        model = BinaryData.fromObject(model).toObject(PrivateLinkResource.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("gklwn", model.location());
        Assertions.assertEquals("jdauwhvy", model.tags().get("wzbtdhxu"));
        Assertions.assertEquals("ghfg", model.sku().name());
        Assertions.assertEquals(SkuTier.FREE, model.sku().tier());
        Assertions.assertEquals("wxzvlvqhjkb", model.sku().size());
        Assertions.assertEquals("ibtnmxiebwwaloay", model.sku().family());
        Assertions.assertEquals(1665079577, model.sku().capacity());
        Assertions.assertEquals("wjue", model.requiredZoneNames().get(0));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
