// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.machinelearning.MachineLearningManager;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.Registry;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RegistriesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"identity\":{\"principalId\":\"a7071b3b-b806-497e-bfd7-2ac105393f1c\",\"tenantId\":\"49c155e9-9045-4aeb-be87-49493366cba6\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"joor\":{\"principalId\":\"27009e2d-54e5-4967-8c68-3b88488c9ac0\",\"clientId\":\"7c451233-5a71-472f-9b8c-9aff026396e2\"},\"hbcckbcvt\":{\"principalId\":\"8b223669-6af3-4c56-924e-29951efcb15d\",\"clientId\":\"18a3838c-7a4d-4a93-8298-109bb89d3e9c\"},\"drma\":{\"principalId\":\"e694df81-8179-4684-822b-23f42707ef88\",\"clientId\":\"36a7ab34-b5b1-43b9-b697-ecef11a8a356\"},\"hph\":{\"principalId\":\"da92e77f-b865-4d39-85a5-d6accf3b74cc\",\"clientId\":\"e39aeec4-76f0-43c9-ba50-bf30d61d1ab7\"}}},\"kind\":\"kquhmblnismviaa\",\"properties\":{\"discoveryUrl\":\"exsrglxljuyv\",\"intellectualPropertyPublisher\":\"povzespdip\",\"managedResourceGroup\":{\"resourceId\":\"npdjomd\"},\"mlFlowRegistryUri\":\"dwosjxywwvilkyht\",\"registryPrivateEndpointConnections\":[{\"id\":\"hdbbjgsjm\",\"location\":\"brpwj\",\"properties\":{\"groupIds\":[\"tkghrrxauuhdkh\",\"izyxoyxnhub\",\"wip\"],\"privateEndpoint\":{},\"registryPrivateLinkServiceConnectionState\":{},\"provisioningState\":\"vp\"}},{\"id\":\"zyrpdxygfpqxseme\",\"location\":\"pdmm\",\"properties\":{\"groupIds\":[\"frqebrjopotefe\"],\"privateEndpoint\":{},\"registryPrivateLinkServiceConnectionState\":{},\"provisioningState\":\"gjywwidn\"}},{\"id\":\"sdkvhuiadyho\",\"location\":\"sypgapfdwhw\",\"properties\":{\"groupIds\":[\"okuqnk\",\"skfl\",\"j\"],\"privateEndpoint\":{},\"registryPrivateLinkServiceConnectionState\":{},\"provisioningState\":\"jeevmbhemr\"}},{\"id\":\"zetsspww\",\"location\":\"botbrepefrli\",\"properties\":{\"groupIds\":[\"yar\"],\"privateEndpoint\":{},\"registryPrivateLinkServiceConnectionState\":{},\"provisioningState\":\"gcsco\"}}],\"publicNetworkAccess\":\"fsgilwisqxzpz\",\"regionDetails\":[{\"acrDetails\":[{}],\"location\":\"trfvogknocshmp\",\"storageAccountDetails\":[{}]},{\"acrDetails\":[{},{},{},{}],\"location\":\"birbrvzhfjqpxyd\",\"storageAccountDetails\":[{}]},{\"acrDetails\":[{},{},{},{}],\"location\":\"m\",\"storageAccountDetails\":[{}]}]},\"sku\":{\"name\":\"cdgunsjssre\",\"tier\":\"Premium\",\"size\":\"koue\",\"family\":\"gkxyrsppbghye\",\"capacity\":1161959928},\"location\":\"awlqvuwsqmwqsgy\",\"tags\":{\"tngxvrpkizjnkgd\":\"o\",\"kbkqpsvoxshxum\":\"ursumbci\"},\"id\":\"uyblo\",\"name\":\"rufvmgblbqx\",\"type\":\"samxyjqhwsoj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MachineLearningManager manager = MachineLearningManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Registry response = manager.registries()
            .getByResourceGroupWithResponse("qjyiwuveryavb", "vvcogupsho", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("awlqvuwsqmwqsgy", response.location());
        Assertions.assertEquals("o", response.tags().get("tngxvrpkizjnkgd"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.identity().type());
        Assertions.assertEquals("kquhmblnismviaa", response.kind());
        Assertions.assertEquals("cdgunsjssre", response.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.sku().tier());
        Assertions.assertEquals("koue", response.sku().size());
        Assertions.assertEquals("gkxyrsppbghye", response.sku().family());
        Assertions.assertEquals(1161959928, response.sku().capacity());
        Assertions.assertEquals("exsrglxljuyv", response.discoveryUrl());
        Assertions.assertEquals("povzespdip", response.intellectualPropertyPublisher());
        Assertions.assertEquals("npdjomd", response.managedResourceGroup().resourceId());
        Assertions.assertEquals("dwosjxywwvilkyht", response.mlFlowRegistryUri());
        Assertions.assertEquals("hdbbjgsjm", response.registryPrivateEndpointConnections().get(0).id());
        Assertions.assertEquals("brpwj", response.registryPrivateEndpointConnections().get(0).location());
        Assertions.assertEquals("tkghrrxauuhdkh",
            response.registryPrivateEndpointConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("vp", response.registryPrivateEndpointConnections().get(0).provisioningState());
        Assertions.assertEquals("fsgilwisqxzpz", response.publicNetworkAccess());
        Assertions.assertEquals("trfvogknocshmp", response.regionDetails().get(0).location());
    }
}
