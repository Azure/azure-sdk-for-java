// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ComponentVersionProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ComponentVersionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ComponentVersionProperties model =
            BinaryData
                .fromString(
                    "{\"componentSpec\":\"dataqupevzh\",\"isAnonymous\":true,\"isArchived\":false,\"description\":\"hojujbypelmcuv\",\"properties\":{\"fw\":\"bjx\",\"coolsttpkiwkkb\":\"yl\",\"fpncurdo\":\"ujrywvtyl\",\"cbihwqk\":\"wiithtywub\"},\"tags\":{\"dgoihxumwctondzj\":\"ntwjch\",\"fdlwg\":\"uu\",\"gseinq\":\"ytsbwtovv\"}}")
                .toObject(ComponentVersionProperties.class);
        Assertions.assertEquals("hojujbypelmcuv", model.description());
        Assertions.assertEquals("bjx", model.properties().get("fw"));
        Assertions.assertEquals("ntwjch", model.tags().get("dgoihxumwctondzj"));
        Assertions.assertEquals(true, model.isAnonymous());
        Assertions.assertEquals(false, model.isArchived());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ComponentVersionProperties model =
            new ComponentVersionProperties()
                .withDescription("hojujbypelmcuv")
                .withProperties(
                    mapOf("fw", "bjx", "coolsttpkiwkkb", "yl", "fpncurdo", "ujrywvtyl", "cbihwqk", "wiithtywub"))
                .withTags(mapOf("dgoihxumwctondzj", "ntwjch", "fdlwg", "uu", "gseinq", "ytsbwtovv"))
                .withIsAnonymous(true)
                .withIsArchived(false)
                .withComponentSpec("dataqupevzh");
        model = BinaryData.fromObject(model).toObject(ComponentVersionProperties.class);
        Assertions.assertEquals("hojujbypelmcuv", model.description());
        Assertions.assertEquals("bjx", model.properties().get("fw"));
        Assertions.assertEquals("ntwjch", model.tags().get("dgoihxumwctondzj"));
        Assertions.assertEquals(true, model.isAnonymous());
        Assertions.assertEquals(false, model.isArchived());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
