// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ComponentContainerProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ComponentContainerPropertiesTests {
    @Test
    public void testDeserialize() {
        ComponentContainerProperties model =
            BinaryData
                .fromString(
                    "{\"isArchived\":true,\"latestVersion\":\"jguq\",\"nextVersion\":\"wygzlvdnkfxusem\",\"description\":\"zrmuhapfcqdps\",\"properties\":{\"vezrypqlmfeo\":\"vpsvuoymgcce\",\"edkowepbqpcrfk\":\"erqwkyhkobopg\",\"tn\":\"wccsnjvcdwxlpqek\"},\"tags\":{\"dhtmdvypgikd\":\"jsyingwfqatm\",\"hlhkjoqrvqqaatj\":\"szywkbirryu\"}}")
                .toObject(ComponentContainerProperties.class);
        Assertions.assertEquals("zrmuhapfcqdps", model.description());
        Assertions.assertEquals("vpsvuoymgcce", model.properties().get("vezrypqlmfeo"));
        Assertions.assertEquals("jsyingwfqatm", model.tags().get("dhtmdvypgikd"));
        Assertions.assertEquals(true, model.isArchived());
    }

    @Test
    public void testSerialize() {
        ComponentContainerProperties model =
            new ComponentContainerProperties()
                .withDescription("zrmuhapfcqdps")
                .withProperties(
                    mapOf("vezrypqlmfeo", "vpsvuoymgcce", "edkowepbqpcrfk", "erqwkyhkobopg", "tn", "wccsnjvcdwxlpqek"))
                .withTags(mapOf("dhtmdvypgikd", "jsyingwfqatm", "hlhkjoqrvqqaatj", "szywkbirryu"))
                .withIsArchived(true);
        model = BinaryData.fromObject(model).toObject(ComponentContainerProperties.class);
        Assertions.assertEquals("zrmuhapfcqdps", model.description());
        Assertions.assertEquals("vpsvuoymgcce", model.properties().get("vezrypqlmfeo"));
        Assertions.assertEquals("jsyingwfqatm", model.tags().get("dhtmdvypgikd"));
        Assertions.assertEquals(true, model.isArchived());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
