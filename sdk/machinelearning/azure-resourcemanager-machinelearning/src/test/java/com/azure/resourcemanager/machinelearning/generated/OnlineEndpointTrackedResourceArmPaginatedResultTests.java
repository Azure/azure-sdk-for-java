// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.OnlineEndpointInner;
import com.azure.resourcemanager.machinelearning.models.EndpointAuthMode;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentity;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.OnlineEndpointProperties;
import com.azure.resourcemanager.machinelearning.models.OnlineEndpointTrackedResourceArmPaginatedResult;
import com.azure.resourcemanager.machinelearning.models.PublicNetworkAccessType;
import com.azure.resourcemanager.machinelearning.models.Sku;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class OnlineEndpointTrackedResourceArmPaginatedResultTests {
    @Test
    public void testDeserialize() {
        OnlineEndpointTrackedResourceArmPaginatedResult model =
            BinaryData
                .fromString(
                    "{\"nextLink\":\"izetpw\",\"value\":[{\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{}},\"kind\":\"hbqzmizakakankjp\",\"properties\":{\"compute\":\"jzhajoy\",\"provisioningState\":\"Canceled\",\"publicNetworkAccess\":\"Disabled\",\"traffic\":{},\"authMode\":\"AADToken\",\"description\":\"xprimrsop\",\"properties\":{},\"scoringUri\":\"jme\",\"swaggerUri\":\"ls\"},\"sku\":{\"name\":\"asylwx\",\"tier\":\"Premium\",\"size\":\"mweoohgu\",\"family\":\"uzboyjathw\",\"capacity\":393295682},\"location\":\"b\",\"tags\":{\"xmeb\":\"wm\",\"veabfqxnmwmqtib\":\"jscjpahl\",\"jaeukmrsieekpn\":\"yijddtvqcttad\",\"pibudqwyxebeybpm\":\"zaapmudqmeqwi\"},\"id\":\"znrtffyaqit\",\"name\":\"hheioqaqhvseuf\",\"type\":\"qyrxp\"}]}")
                .toObject(OnlineEndpointTrackedResourceArmPaginatedResult.class);
        Assertions.assertEquals("izetpw", model.nextLink());
        Assertions.assertEquals("b", model.value().get(0).location());
        Assertions.assertEquals("wm", model.value().get(0).tags().get("xmeb"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals("hbqzmizakakankjp", model.value().get(0).kind());
        Assertions.assertEquals(EndpointAuthMode.AADTOKEN, model.value().get(0).properties().authMode());
        Assertions.assertEquals("xprimrsop", model.value().get(0).properties().description());
        Assertions.assertEquals("jzhajoy", model.value().get(0).properties().compute());
        Assertions
            .assertEquals(PublicNetworkAccessType.DISABLED, model.value().get(0).properties().publicNetworkAccess());
        Assertions.assertEquals("asylwx", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.value().get(0).sku().tier());
        Assertions.assertEquals("mweoohgu", model.value().get(0).sku().size());
        Assertions.assertEquals("uzboyjathw", model.value().get(0).sku().family());
        Assertions.assertEquals(393295682, model.value().get(0).sku().capacity());
    }

    @Test
    public void testSerialize() {
        OnlineEndpointTrackedResourceArmPaginatedResult model =
            new OnlineEndpointTrackedResourceArmPaginatedResult()
                .withNextLink("izetpw")
                .withValue(
                    Arrays
                        .asList(
                            new OnlineEndpointInner()
                                .withLocation("b")
                                .withTags(
                                    mapOf(
                                        "xmeb",
                                        "wm",
                                        "veabfqxnmwmqtib",
                                        "jscjpahl",
                                        "jaeukmrsieekpn",
                                        "yijddtvqcttad",
                                        "pibudqwyxebeybpm",
                                        "zaapmudqmeqwi"))
                                .withIdentity(
                                    new ManagedServiceIdentity()
                                        .withType(ManagedServiceIdentityType.NONE)
                                        .withUserAssignedIdentities(mapOf()))
                                .withKind("hbqzmizakakankjp")
                                .withProperties(
                                    new OnlineEndpointProperties()
                                        .withAuthMode(EndpointAuthMode.AADTOKEN)
                                        .withDescription("xprimrsop")
                                        .withProperties(mapOf())
                                        .withCompute("jzhajoy")
                                        .withPublicNetworkAccess(PublicNetworkAccessType.DISABLED)
                                        .withTraffic(mapOf()))
                                .withSku(
                                    new Sku()
                                        .withName("asylwx")
                                        .withTier(SkuTier.PREMIUM)
                                        .withSize("mweoohgu")
                                        .withFamily("uzboyjathw")
                                        .withCapacity(393295682))));
        model = BinaryData.fromObject(model).toObject(OnlineEndpointTrackedResourceArmPaginatedResult.class);
        Assertions.assertEquals("izetpw", model.nextLink());
        Assertions.assertEquals("b", model.value().get(0).location());
        Assertions.assertEquals("wm", model.value().get(0).tags().get("xmeb"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals("hbqzmizakakankjp", model.value().get(0).kind());
        Assertions.assertEquals(EndpointAuthMode.AADTOKEN, model.value().get(0).properties().authMode());
        Assertions.assertEquals("xprimrsop", model.value().get(0).properties().description());
        Assertions.assertEquals("jzhajoy", model.value().get(0).properties().compute());
        Assertions
            .assertEquals(PublicNetworkAccessType.DISABLED, model.value().get(0).properties().publicNetworkAccess());
        Assertions.assertEquals("asylwx", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.value().get(0).sku().tier());
        Assertions.assertEquals("mweoohgu", model.value().get(0).sku().size());
        Assertions.assertEquals("uzboyjathw", model.value().get(0).sku().family());
        Assertions.assertEquals(393295682, model.value().get(0).sku().capacity());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
