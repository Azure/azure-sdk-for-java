// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ManagedComputeIdentity;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentity;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedComputeIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedComputeIdentity model = BinaryData.fromString(
            "{\"computeIdentityType\":\"ManagedIdentity\",\"identity\":{\"principalId\":\"ac27e7a4-e37a-4a73-ac6d-825782241d27\",\"tenantId\":\"5de2a901-fd71-4a09-b7b2-d28cbd13275f\",\"type\":\"None\",\"userAssignedIdentities\":{\"dtqfdrslzy\":{\"principalId\":\"727491ce-ba18-47e7-afa8-66472129f016\",\"clientId\":\"2a8ed716-1cb0-46ba-a012-8ae6592edc5f\"},\"serwyc\":{\"principalId\":\"742777d7-4b97-40ba-a340-8b5a8bee335a\",\"clientId\":\"b40dff74-a8fa-4431-bb17-ae3570eeaad0\"},\"tjwgetfigwn\":{\"principalId\":\"c693785e-2e1d-4c6c-a356-b522b6ffa031\",\"clientId\":\"232013d3-965d-45cd-97f3-a3c6405ab3a6\"},\"xzizebjr\":{\"principalId\":\"4e9f274b-4fdf-42dd-9e92-23d397371caa\",\"clientId\":\"22074597-d87e-4b5e-9bd9-b53cee169626\"}}}}")
            .toObject(ManagedComputeIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedComputeIdentity model = new ManagedComputeIdentity()
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(
                    mapOf("dtqfdrslzy", new UserAssignedIdentity(), "serwyc", new UserAssignedIdentity(), "tjwgetfigwn",
                        new UserAssignedIdentity(), "xzizebjr", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(ManagedComputeIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
