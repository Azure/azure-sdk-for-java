// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ManagedComputeIdentity;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentity;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedComputeIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedComputeIdentity model = BinaryData.fromString(
            "{\"computeIdentityType\":\"ManagedIdentity\",\"identity\":{\"principalId\":\"239ad0fe-3082-4d15-ae6f-8c24ebad67d2\",\"tenantId\":\"15da6131-eec2-4943-be75-ec46657d84a9\",\"type\":\"None\",\"userAssignedIdentities\":{\"dtqfdrslzy\":{\"principalId\":\"41e8dfca-a783-4619-95bf-065911083099\",\"clientId\":\"02836517-caa5-45a3-a18d-0c08ea1ae611\"},\"serwyc\":{\"principalId\":\"a7b5a15d-b9ca-4638-8ce3-5b7cbf5097e2\",\"clientId\":\"14dad734-c31a-4a72-91c1-f2e27cd7c415\"},\"tjwgetfigwn\":{\"principalId\":\"103e0f18-1bae-4429-a56a-29df5bedc41d\",\"clientId\":\"cfe8d90a-6e63-4a73-8513-2c194cae7440\"},\"xzizebjr\":{\"principalId\":\"00c43459-e82a-45a4-99b7-21884d56028b\",\"clientId\":\"77ed9e47-7386-4bb4-b570-465f4fc59fff\"}}}}")
            .toObject(ManagedComputeIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedComputeIdentity model = new ManagedComputeIdentity()
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(
                    mapOf("dtqfdrslzy", new UserAssignedIdentity(), "serwyc", new UserAssignedIdentity(), "tjwgetfigwn",
                        new UserAssignedIdentity(), "xzizebjr", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(ManagedComputeIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
