// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.MonitoringThreshold;
import com.azure.resourcemanager.machinelearning.models.NumericalDataDriftMetric;
import com.azure.resourcemanager.machinelearning.models.NumericalDataDriftMetricThreshold;
import org.junit.jupiter.api.Assertions;

public final class NumericalDataDriftMetricThresholdTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NumericalDataDriftMetricThreshold model = BinaryData.fromString(
            "{\"dataType\":\"Numerical\",\"metric\":\"PopulationStabilityIndex\",\"threshold\":{\"value\":56.24244908661416}}")
            .toObject(NumericalDataDriftMetricThreshold.class);
        Assertions.assertEquals(56.24244908661416D, model.threshold().value());
        Assertions.assertEquals(NumericalDataDriftMetric.POPULATION_STABILITY_INDEX, model.metric());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NumericalDataDriftMetricThreshold model = new NumericalDataDriftMetricThreshold()
            .withThreshold(new MonitoringThreshold().withValue(56.24244908661416D))
            .withMetric(NumericalDataDriftMetric.POPULATION_STABILITY_INDEX);
        model = BinaryData.fromObject(model).toObject(NumericalDataDriftMetricThreshold.class);
        Assertions.assertEquals(56.24244908661416D, model.threshold().value());
        Assertions.assertEquals(NumericalDataDriftMetric.POPULATION_STABILITY_INDEX, model.metric());
    }
}
