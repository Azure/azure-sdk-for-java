// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.PartialManagedServiceIdentity;
import com.azure.resourcemanager.machinelearning.models.PartialMinimalTrackedResourceWithIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PartialMinimalTrackedResourceWithIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PartialMinimalTrackedResourceWithIdentity model = BinaryData.fromString(
            "{\"identity\":{\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"ni\":\"dataspofapvuhry\",\"st\":\"datafrzgbzjed\",\"nsnvpd\":\"datavnlvxbcuiiznktwf\",\"z\":\"databmikost\"}},\"tags\":{\"ophzfylsgcrp\":\"wbuqn\",\"fwyfwlwxjwet\":\"bcunezzceze\"}}")
            .toObject(PartialMinimalTrackedResourceWithIdentity.class);
        Assertions.assertEquals("wbuqn", model.tags().get("ophzfylsgcrp"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PartialMinimalTrackedResourceWithIdentity model
            = new PartialMinimalTrackedResourceWithIdentity()
                .withTags(mapOf("ophzfylsgcrp", "wbuqn", "fwyfwlwxjwet", "bcunezzceze"))
                .withIdentity(new PartialManagedServiceIdentity()
                    .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                    .withUserAssignedIdentities(mapOf("ni", "dataspofapvuhry", "st", "datafrzgbzjed", "nsnvpd",
                        "datavnlvxbcuiiznktwf", "z", "databmikost")));
        model = BinaryData.fromObject(model).toObject(PartialMinimalTrackedResourceWithIdentity.class);
        Assertions.assertEquals("wbuqn", model.tags().get("ophzfylsgcrp"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
