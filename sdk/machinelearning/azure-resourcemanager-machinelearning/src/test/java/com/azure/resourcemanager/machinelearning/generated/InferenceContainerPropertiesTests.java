// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.InferenceContainerProperties;
import com.azure.resourcemanager.machinelearning.models.Route;
import org.junit.jupiter.api.Assertions;

public final class InferenceContainerPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InferenceContainerProperties model = BinaryData.fromString(
            "{\"livenessRoute\":{\"path\":\"lnacgcc\",\"port\":682130924},\"readinessRoute\":{\"path\":\"hxkizvytnrzv\",\"port\":349650849},\"scoringRoute\":{\"path\":\"r\",\"port\":2075017284}}")
            .toObject(InferenceContainerProperties.class);
        Assertions.assertEquals("lnacgcc", model.livenessRoute().path());
        Assertions.assertEquals(682130924, model.livenessRoute().port());
        Assertions.assertEquals("hxkizvytnrzv", model.readinessRoute().path());
        Assertions.assertEquals(349650849, model.readinessRoute().port());
        Assertions.assertEquals("r", model.scoringRoute().path());
        Assertions.assertEquals(2075017284, model.scoringRoute().port());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InferenceContainerProperties model
            = new InferenceContainerProperties().withLivenessRoute(new Route().withPath("lnacgcc").withPort(682130924))
                .withReadinessRoute(new Route().withPath("hxkizvytnrzv").withPort(349650849))
                .withScoringRoute(new Route().withPath("r").withPort(2075017284));
        model = BinaryData.fromObject(model).toObject(InferenceContainerProperties.class);
        Assertions.assertEquals("lnacgcc", model.livenessRoute().path());
        Assertions.assertEquals(682130924, model.livenessRoute().port());
        Assertions.assertEquals("hxkizvytnrzv", model.readinessRoute().path());
        Assertions.assertEquals(349650849, model.readinessRoute().port());
        Assertions.assertEquals("r", model.scoringRoute().path());
        Assertions.assertEquals(2075017284, model.scoringRoute().port());
    }
}
