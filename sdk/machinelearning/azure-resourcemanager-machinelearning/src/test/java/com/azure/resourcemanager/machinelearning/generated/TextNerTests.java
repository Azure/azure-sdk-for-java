// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.InputDeliveryMode;
import com.azure.resourcemanager.machinelearning.models.LogVerbosity;
import com.azure.resourcemanager.machinelearning.models.MLTableJobInput;
import com.azure.resourcemanager.machinelearning.models.NlpVerticalFeaturizationSettings;
import com.azure.resourcemanager.machinelearning.models.NlpVerticalLimitSettings;
import com.azure.resourcemanager.machinelearning.models.TextNer;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class TextNerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TextNer model = BinaryData.fromString(
            "{\"taskType\":\"TextNER\",\"primaryMetric\":\"Accuracy\",\"limitSettings\":{\"timeout\":\"PT136H33M44S\",\"maxTrials\":911733513,\"maxConcurrentTrials\":1407364852},\"featurizationSettings\":{\"datasetLanguage\":\"y\"},\"validationData\":{\"jobInputType\":\"mltable\",\"uri\":\"evaebzm\",\"mode\":\"Download\",\"description\":\"rjkejv\"},\"logVerbosity\":\"Error\",\"trainingData\":{\"jobInputType\":\"mltable\",\"uri\":\"ogzougxbxxgj\",\"mode\":\"ReadOnlyMount\",\"description\":\"hiv\"},\"targetColumnName\":\"rmtenfdvdoearywu\"}")
            .toObject(TextNer.class);
        Assertions.assertEquals(LogVerbosity.ERROR, model.logVerbosity());
        Assertions.assertEquals("hiv", model.trainingData().description());
        Assertions.assertEquals("ogzougxbxxgj", model.trainingData().uri());
        Assertions.assertEquals(InputDeliveryMode.READ_ONLY_MOUNT, model.trainingData().mode());
        Assertions.assertEquals("rmtenfdvdoearywu", model.targetColumnName());
        Assertions.assertEquals(Duration.parse("PT136H33M44S"), model.limitSettings().timeout());
        Assertions.assertEquals(911733513, model.limitSettings().maxTrials());
        Assertions.assertEquals(1407364852, model.limitSettings().maxConcurrentTrials());
        Assertions.assertEquals("y", model.featurizationSettings().datasetLanguage());
        Assertions.assertEquals("rjkejv", model.validationData().description());
        Assertions.assertEquals("evaebzm", model.validationData().uri());
        Assertions.assertEquals(InputDeliveryMode.DOWNLOAD, model.validationData().mode());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TextNer model = new TextNer().withLogVerbosity(LogVerbosity.ERROR)
            .withTrainingData(new MLTableJobInput().withDescription("hiv")
                .withUri("ogzougxbxxgj")
                .withMode(InputDeliveryMode.READ_ONLY_MOUNT))
            .withTargetColumnName("rmtenfdvdoearywu")
            .withLimitSettings(new NlpVerticalLimitSettings().withTimeout(Duration.parse("PT136H33M44S"))
                .withMaxTrials(911733513)
                .withMaxConcurrentTrials(1407364852))
            .withFeaturizationSettings(new NlpVerticalFeaturizationSettings().withDatasetLanguage("y"))
            .withValidationData(new MLTableJobInput().withDescription("rjkejv")
                .withUri("evaebzm")
                .withMode(InputDeliveryMode.DOWNLOAD));
        model = BinaryData.fromObject(model).toObject(TextNer.class);
        Assertions.assertEquals(LogVerbosity.ERROR, model.logVerbosity());
        Assertions.assertEquals("hiv", model.trainingData().description());
        Assertions.assertEquals("ogzougxbxxgj", model.trainingData().uri());
        Assertions.assertEquals(InputDeliveryMode.READ_ONLY_MOUNT, model.trainingData().mode());
        Assertions.assertEquals("rmtenfdvdoearywu", model.targetColumnName());
        Assertions.assertEquals(Duration.parse("PT136H33M44S"), model.limitSettings().timeout());
        Assertions.assertEquals(911733513, model.limitSettings().maxTrials());
        Assertions.assertEquals(1407364852, model.limitSettings().maxConcurrentTrials());
        Assertions.assertEquals("y", model.featurizationSettings().datasetLanguage());
        Assertions.assertEquals("rjkejv", model.validationData().description());
        Assertions.assertEquals("evaebzm", model.validationData().uri());
        Assertions.assertEquals(InputDeliveryMode.DOWNLOAD, model.validationData().mode());
    }
}
