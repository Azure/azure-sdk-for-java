// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.machinelearning.MachineLearningManager;
import com.azure.resourcemanager.machinelearning.models.MarketplaceSubscription;
import com.azure.resourcemanager.machinelearning.models.MarketplaceSubscriptionProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MarketplaceSubscriptionsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"modelId\":\"mhenqn\",\"marketplacePlan\":{\"publisherId\":\"mk\",\"offerId\":\"xvexusjfjuphjjue\",\"planId\":\"vjtgpyoat\"},\"marketplaceSubscriptionStatus\":\"Subscribed\",\"provisioningState\":\"Succeeded\"},\"id\":\"qm\",\"name\":\"xjdkvyzilrlfgowv\",\"type\":\"xjqru\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MachineLearningManager manager = MachineLearningManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MarketplaceSubscription response = manager.marketplaceSubscriptions()
            .define("edzyzbvsjut")
            .withExistingWorkspace("ktcr", "ct")
            .withProperties(new MarketplaceSubscriptionProperties().withModelId("sysefil"))
            .create();

        Assertions.assertEquals("mhenqn", response.properties().modelId());
    }
}
