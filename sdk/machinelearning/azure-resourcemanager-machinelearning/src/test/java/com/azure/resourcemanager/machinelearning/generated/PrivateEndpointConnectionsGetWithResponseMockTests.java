// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.machinelearning.MachineLearningManager;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.PrivateEndpointConnection;
import com.azure.resourcemanager.machinelearning.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointConnectionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"privateEndpoint\":{\"id\":\"kefkzlxvcozcgoeo\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"cbnunzuysajvvq\",\"actionsRequired\":\"o\"},\"provisioningState\":\"Succeeded\"},\"identity\":{\"principalId\":\"9994a2ea-9ebf-4a10-8eb2-fa82776f6621\",\"tenantId\":\"71367f18-cb84-4b56-ac00-c8f683d6843d\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"btkqjqjcajg\":{\"principalId\":\"9230517d-066f-4d72-8c6f-44def6f81320\",\"clientId\":\"36cf96b9-a84e-4429-8966-9c504cea7403\"}}},\"location\":\"y\",\"tags\":{\"mrvkxeojtdyulglh\":\"hk\",\"xspxgogypbztgae\":\"lwruklfq\"},\"sku\":{\"name\":\"nskvctvuz\",\"tier\":\"Basic\",\"size\":\"ttmhlvr\",\"family\":\"yxrnwukfajnpdwz\",\"capacity\":803272560},\"id\":\"wdepemziayfi\",\"name\":\"ii\",\"type\":\"xcor\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MachineLearningManager manager = MachineLearningManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PrivateEndpointConnection response = manager.privateEndpointConnections()
            .getWithResponse("ymgbfmd", "uyyaescjxna", "pyxqbkxdtbfkih", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, response.identity().type());
        Assertions.assertEquals("y", response.location());
        Assertions.assertEquals("hk", response.tags().get("mrvkxeojtdyulglh"));
        Assertions.assertEquals("nskvctvuz", response.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, response.sku().tier());
        Assertions.assertEquals("ttmhlvr", response.sku().size());
        Assertions.assertEquals("yxrnwukfajnpdwz", response.sku().family());
        Assertions.assertEquals(803272560, response.sku().capacity());
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            response.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("cbnunzuysajvvq", response.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("o", response.privateLinkServiceConnectionState().actionsRequired());
    }
}
