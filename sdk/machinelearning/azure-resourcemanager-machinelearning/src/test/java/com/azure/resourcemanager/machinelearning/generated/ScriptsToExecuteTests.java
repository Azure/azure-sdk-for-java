// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ScriptReference;
import com.azure.resourcemanager.machinelearning.models.ScriptsToExecute;
import org.junit.jupiter.api.Assertions;

public final class ScriptsToExecuteTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScriptsToExecute model = BinaryData.fromString(
            "{\"startupScript\":{\"scriptSource\":\"ibniynts\",\"scriptData\":\"mfmeftvhkmoo\",\"scriptArguments\":\"rh\",\"timeout\":\"bwgmjgrul\"},\"creationScript\":{\"scriptSource\":\"gxhcxnwjtpfdzxco\",\"scriptData\":\"fwofwakukzkdtz\",\"scriptArguments\":\"oednlwglihezomuc\",\"timeout\":\"g\"}}")
            .toObject(ScriptsToExecute.class);
        Assertions.assertEquals("ibniynts", model.startupScript().scriptSource());
        Assertions.assertEquals("mfmeftvhkmoo", model.startupScript().scriptData());
        Assertions.assertEquals("rh", model.startupScript().scriptArguments());
        Assertions.assertEquals("bwgmjgrul", model.startupScript().timeout());
        Assertions.assertEquals("gxhcxnwjtpfdzxco", model.creationScript().scriptSource());
        Assertions.assertEquals("fwofwakukzkdtz", model.creationScript().scriptData());
        Assertions.assertEquals("oednlwglihezomuc", model.creationScript().scriptArguments());
        Assertions.assertEquals("g", model.creationScript().timeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScriptsToExecute model = new ScriptsToExecute()
            .withStartupScript(new ScriptReference().withScriptSource("ibniynts")
                .withScriptData("mfmeftvhkmoo")
                .withScriptArguments("rh")
                .withTimeout("bwgmjgrul"))
            .withCreationScript(new ScriptReference().withScriptSource("gxhcxnwjtpfdzxco")
                .withScriptData("fwofwakukzkdtz")
                .withScriptArguments("oednlwglihezomuc")
                .withTimeout("g"));
        model = BinaryData.fromObject(model).toObject(ScriptsToExecute.class);
        Assertions.assertEquals("ibniynts", model.startupScript().scriptSource());
        Assertions.assertEquals("mfmeftvhkmoo", model.startupScript().scriptData());
        Assertions.assertEquals("rh", model.startupScript().scriptArguments());
        Assertions.assertEquals("bwgmjgrul", model.startupScript().timeout());
        Assertions.assertEquals("gxhcxnwjtpfdzxco", model.creationScript().scriptSource());
        Assertions.assertEquals("fwofwakukzkdtz", model.creationScript().scriptData());
        Assertions.assertEquals("oednlwglihezomuc", model.creationScript().scriptArguments());
        Assertions.assertEquals("g", model.creationScript().timeout());
    }
}
