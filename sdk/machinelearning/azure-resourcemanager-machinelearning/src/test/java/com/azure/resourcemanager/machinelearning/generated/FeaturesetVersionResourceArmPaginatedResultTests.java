// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.FeaturesetVersionInner;
import com.azure.resourcemanager.machinelearning.models.EmailNotificationEnableType;
import com.azure.resourcemanager.machinelearning.models.FeaturesetSpecification;
import com.azure.resourcemanager.machinelearning.models.FeaturesetVersionProperties;
import com.azure.resourcemanager.machinelearning.models.FeaturesetVersionResourceArmPaginatedResult;
import com.azure.resourcemanager.machinelearning.models.MaterializationComputeResource;
import com.azure.resourcemanager.machinelearning.models.MaterializationSettings;
import com.azure.resourcemanager.machinelearning.models.MaterializationStoreType;
import com.azure.resourcemanager.machinelearning.models.NotificationSetting;
import com.azure.resourcemanager.machinelearning.models.RecurrenceFrequency;
import com.azure.resourcemanager.machinelearning.models.RecurrenceSchedule;
import com.azure.resourcemanager.machinelearning.models.RecurrenceTrigger;
import com.azure.resourcemanager.machinelearning.models.Webhook;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class FeaturesetVersionResourceArmPaginatedResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FeaturesetVersionResourceArmPaginatedResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"specification\":{\"path\":\"ewuninvud\"},\"materializationSettings\":{\"storeType\":\"OnlineAndOffline\",\"schedule\":{\"triggerType\":\"Recurrence\",\"frequency\":\"Day\",\"interval\":709462942,\"schedule\":{\"hours\":[],\"minutes\":[]},\"endTime\":\"ec\",\"startTime\":\"ct\",\"timeZone\":\"xdtddmflhuytxzv\"},\"notification\":{\"emails\":[\"pxbannovvoxc\",\"ytprwnwvroev\",\"tlyo\",\"rrrouuxvnsa\"],\"emailOn\":[\"JobCompleted\",\"JobCancelled\",\"JobCompleted\",\"JobCancelled\"],\"webhooks\":{\"zrxklobd\":{\"webhookType\":\"Webhook\"},\"nazpmk\":{\"webhookType\":\"Webhook\"}}},\"resource\":{\"instanceType\":\"vevfxz\"},\"sparkConfiguration\":{\"hrdd\":\"hbzxli\",\"nzqcy\":\"tfgxqbawpcb\",\"yuicdhzbdy\":\"napqo\",\"bid\":\"wwgbdv\"}},\"stage\":\"m\",\"entities\":[\"plfmuvapckccrrvw\"],\"provisioningState\":\"Canceled\",\"isArchived\":false,\"isAnonymous\":true,\"description\":\"k\",\"tags\":{\"pyyrmfs\":\"immoiroqboshbrag\",\"opfppdbwnupgah\":\"bpav\",\"jcaacfdmmcpugm\":\"kuma\"},\"properties\":{\"oqhnlb\":\"epvufhbzehew\",\"krsrrmoucs\":\"nbldxeaclgschori\",\"abeolhbhlvbm\":\"fldpuviyfc\"}},\"id\":\"qi\",\"name\":\"s\",\"type\":\"tkcudfbsfarfsiow\"},{\"properties\":{\"specification\":{\"path\":\"xnq\"},\"materializationSettings\":{\"storeType\":\"None\",\"schedule\":{\"triggerType\":\"Recurrence\",\"frequency\":\"Minute\",\"interval\":1896459173,\"schedule\":{\"hours\":[],\"minutes\":[]},\"endTime\":\"qyki\",\"startTime\":\"d\",\"timeZone\":\"aoaf\"},\"notification\":{\"emails\":[\"v\",\"xmycjimryvwgcw\"],\"emailOn\":[\"JobCancelled\",\"JobFailed\"],\"webhooks\":{\"esyds\":{\"webhookType\":\"Webhook\"}}},\"resource\":{\"instanceType\":\"fo\"},\"sparkConfiguration\":{\"llklmtk\":\"bvopwndyqle\",\"dfjmzsyzfhotlh\":\"lowkxxpvb\",\"yych\":\"k\",\"hv\":\"nsjlpjrtws\"}},\"stage\":\"icphvtrrmhw\",\"entities\":[\"dpyflubhv\",\"glrocuy\",\"lw\"],\"provisioningState\":\"Deleting\",\"isArchived\":false,\"isAnonymous\":false,\"description\":\"clutnpqme\",\"tags\":{\"mykyujxsglhs\":\"jk\",\"fihotj\":\"rryejylmbkzudnig\",\"refqy\":\"wlpxuzzjg\"},\"properties\":{\"fb\":\"toihiqakydi\",\"spodaqax\":\"kwpzdqtvh\"}},\"id\":\"pie\",\"name\":\"gbebjf\",\"type\":\"lbmoichd\"},{\"properties\":{\"specification\":{\"path\":\"fpubntnbatz\"},\"materializationSettings\":{\"storeType\":\"Online\",\"schedule\":{\"triggerType\":\"Recurrence\",\"frequency\":\"Month\",\"interval\":1702744153,\"schedule\":{\"hours\":[],\"minutes\":[]},\"endTime\":\"el\",\"startTime\":\"ttcjuhplrvkmjc\",\"timeZone\":\"jvlgfggcvkyyliz\"},\"notification\":{\"emails\":[\"psfxsf\",\"ztlvtmvagbwidqlv\"],\"emailOn\":[\"JobFailed\",\"JobFailed\"],\"webhooks\":{\"fizr\":{\"webhookType\":\"Webhook\"},\"jfnmjmvlwyz\":{\"webhookType\":\"Webhook\"},\"iblkujr\":{\"webhookType\":\"Webhook\"},\"lfojuidjp\":{\"webhookType\":\"Webhook\"}}},\"resource\":{\"instanceType\":\"jucejikzoeovvtz\"},\"sparkConfiguration\":{\"bqzolxr\":\"tjklntikyjuzk\"}},\"stage\":\"hqjwtrhtgvg\",\"entities\":[\"rrkolawjmjs\"],\"provisioningState\":\"Canceled\",\"isArchived\":true,\"isAnonymous\":true,\"description\":\"fzzzwyjafitlhg\",\"tags\":{\"whmozusgzvlnsnnj\":\"uchlgmltx\",\"rag\":\"fpafolpymwamxq\",\"vl\":\"gdphtvdula\",\"rupdwvnphcnzq\":\"jchcsrlzknmzla\"},\"properties\":{\"smlzzhzdtxetlgy\":\"hmqrhvthlaiwdc\",\"geaar\":\"lhqvlnnpxybafi\",\"lidwcwvmzegjon\":\"gjekglklby\"}},\"id\":\"jirwgdnqzbrfk\",\"name\":\"pzhz\",\"type\":\"tk\"}],\"nextLink\":\"cit\"}")
            .toObject(FeaturesetVersionResourceArmPaginatedResult.class);
        Assertions.assertEquals("k", model.value().get(0).properties().description());
        Assertions.assertEquals("immoiroqboshbrag", model.value().get(0).properties().tags().get("pyyrmfs"));
        Assertions.assertEquals("epvufhbzehew", model.value().get(0).properties().properties().get("oqhnlb"));
        Assertions.assertEquals(false, model.value().get(0).properties().isArchived());
        Assertions.assertEquals(true, model.value().get(0).properties().isAnonymous());
        Assertions.assertEquals("ewuninvud", model.value().get(0).properties().specification().path());
        Assertions.assertEquals(MaterializationStoreType.ONLINE_AND_OFFLINE,
            model.value().get(0).properties().materializationSettings().storeType());
        Assertions.assertEquals("ec", model.value().get(0).properties().materializationSettings().schedule().endTime());
        Assertions.assertEquals("ct",
            model.value().get(0).properties().materializationSettings().schedule().startTime());
        Assertions.assertEquals("xdtddmflhuytxzv",
            model.value().get(0).properties().materializationSettings().schedule().timeZone());
        Assertions.assertEquals(RecurrenceFrequency.DAY,
            model.value().get(0).properties().materializationSettings().schedule().frequency());
        Assertions.assertEquals(709462942,
            model.value().get(0).properties().materializationSettings().schedule().interval());
        Assertions.assertEquals("pxbannovvoxc",
            model.value().get(0).properties().materializationSettings().notification().emails().get(0));
        Assertions.assertEquals(EmailNotificationEnableType.JOB_COMPLETED,
            model.value().get(0).properties().materializationSettings().notification().emailOn().get(0));
        Assertions.assertEquals("vevfxz",
            model.value().get(0).properties().materializationSettings().resource().instanceType());
        Assertions.assertEquals("hbzxli",
            model.value().get(0).properties().materializationSettings().sparkConfiguration().get("hrdd"));
        Assertions.assertEquals("m", model.value().get(0).properties().stage());
        Assertions.assertEquals("plfmuvapckccrrvw", model.value().get(0).properties().entities().get(0));
        Assertions.assertEquals("cit", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FeaturesetVersionResourceArmPaginatedResult model
            = new FeaturesetVersionResourceArmPaginatedResult().withValue(Arrays.asList(
                new FeaturesetVersionInner().withProperties(new FeaturesetVersionProperties().withDescription("k")
                    .withTags(mapOf("pyyrmfs", "immoiroqboshbrag", "opfppdbwnupgah", "bpav", "jcaacfdmmcpugm", "kuma"))
                    .withProperties(
                        mapOf("oqhnlb", "epvufhbzehew", "krsrrmoucs", "nbldxeaclgschori", "abeolhbhlvbm", "fldpuviyfc"))
                    .withIsArchived(false)
                    .withIsAnonymous(true)
                    .withSpecification(new FeaturesetSpecification().withPath("ewuninvud"))
                    .withMaterializationSettings(new MaterializationSettings()
                        .withStoreType(MaterializationStoreType.ONLINE_AND_OFFLINE)
                        .withSchedule(new RecurrenceTrigger().withEndTime("ec")
                            .withStartTime("ct")
                            .withTimeZone("xdtddmflhuytxzv")
                            .withFrequency(RecurrenceFrequency.DAY)
                            .withInterval(709462942)
                            .withSchedule(
                                new RecurrenceSchedule().withHours(Arrays.asList()).withMinutes(Arrays.asList())))
                        .withNotification(new NotificationSetting()
                            .withEmails(Arrays.asList("pxbannovvoxc", "ytprwnwvroev", "tlyo", "rrrouuxvnsa"))
                            .withEmailOn(Arrays.asList(EmailNotificationEnableType.JOB_COMPLETED,
                                EmailNotificationEnableType.JOB_CANCELLED, EmailNotificationEnableType.JOB_COMPLETED,
                                EmailNotificationEnableType.JOB_CANCELLED))
                            .withWebhooks(mapOf("zrxklobd", new Webhook(), "nazpmk", new Webhook())))
                        .withResource(new MaterializationComputeResource().withInstanceType("vevfxz"))
                        .withSparkConfiguration(
                            mapOf("hrdd", "hbzxli", "nzqcy", "tfgxqbawpcb", "yuicdhzbdy", "napqo", "bid", "wwgbdv")))
                    .withStage("m")
                    .withEntities(Arrays.asList("plfmuvapckccrrvw"))),
                new FeaturesetVersionInner()
                    .withProperties(new FeaturesetVersionProperties().withDescription("clutnpqme")
                        .withTags(mapOf("mykyujxsglhs", "jk", "fihotj", "rryejylmbkzudnig", "refqy", "wlpxuzzjg"))
                        .withProperties(mapOf("fb", "toihiqakydi", "spodaqax", "kwpzdqtvh"))
                        .withIsArchived(false)
                        .withIsAnonymous(false)
                        .withSpecification(new FeaturesetSpecification().withPath("xnq"))
                        .withMaterializationSettings(
                            new MaterializationSettings().withStoreType(MaterializationStoreType.NONE)
                                .withSchedule(new RecurrenceTrigger().withEndTime("qyki")
                                    .withStartTime("d")
                                    .withTimeZone("aoaf")
                                    .withFrequency(RecurrenceFrequency.MINUTE)
                                    .withInterval(1896459173)
                                    .withSchedule(new RecurrenceSchedule().withHours(Arrays.asList())
                                        .withMinutes(Arrays.asList())))
                                .withNotification(
                                    new NotificationSetting().withEmails(Arrays.asList("v", "xmycjimryvwgcw"))
                                        .withEmailOn(Arrays.asList(EmailNotificationEnableType.JOB_CANCELLED,
                                            EmailNotificationEnableType.JOB_FAILED))
                                        .withWebhooks(mapOf("esyds", new Webhook())))
                                .withResource(new MaterializationComputeResource().withInstanceType("fo"))
                                .withSparkConfiguration(mapOf("llklmtk", "bvopwndyqle", "dfjmzsyzfhotlh", "lowkxxpvb",
                                    "yych", "k", "hv", "nsjlpjrtws")))
                        .withStage("icphvtrrmhw")
                        .withEntities(Arrays.asList("dpyflubhv", "glrocuy", "lw"))),
                new FeaturesetVersionInner()
                    .withProperties(
                        new FeaturesetVersionProperties().withDescription("fzzzwyjafitlhg")
                            .withTags(mapOf("whmozusgzvlnsnnj", "uchlgmltx", "rag", "fpafolpymwamxq", "vl",
                                "gdphtvdula", "rupdwvnphcnzq", "jchcsrlzknmzla"))
                            .withProperties(mapOf("smlzzhzdtxetlgy", "hmqrhvthlaiwdc", "geaar", "lhqvlnnpxybafi",
                                "lidwcwvmzegjon", "gjekglklby"))
                            .withIsArchived(true)
                            .withIsAnonymous(true)
                            .withSpecification(new FeaturesetSpecification().withPath("fpubntnbatz"))
                            .withMaterializationSettings(new MaterializationSettings()
                                .withStoreType(MaterializationStoreType.ONLINE)
                                .withSchedule(new RecurrenceTrigger().withEndTime("el")
                                    .withStartTime("ttcjuhplrvkmjc")
                                    .withTimeZone("jvlgfggcvkyyliz")
                                    .withFrequency(RecurrenceFrequency.MONTH)
                                    .withInterval(1702744153)
                                    .withSchedule(new RecurrenceSchedule().withHours(Arrays.asList())
                                        .withMinutes(Arrays.asList())))
                                .withNotification(
                                    new NotificationSetting().withEmails(Arrays.asList("psfxsf", "ztlvtmvagbwidqlv"))
                                        .withEmailOn(Arrays.asList(EmailNotificationEnableType.JOB_FAILED,
                                            EmailNotificationEnableType.JOB_FAILED))
                                        .withWebhooks(mapOf("fizr", new Webhook(), "jfnmjmvlwyz", new Webhook(),
                                            "iblkujr", new Webhook(), "lfojuidjp", new Webhook())))
                                .withResource(new MaterializationComputeResource().withInstanceType("jucejikzoeovvtz"))
                                .withSparkConfiguration(mapOf("bqzolxr", "tjklntikyjuzk")))
                            .withStage("hqjwtrhtgvg")
                            .withEntities(Arrays.asList("rrkolawjmjs")))))
                .withNextLink("cit");
        model = BinaryData.fromObject(model).toObject(FeaturesetVersionResourceArmPaginatedResult.class);
        Assertions.assertEquals("k", model.value().get(0).properties().description());
        Assertions.assertEquals("immoiroqboshbrag", model.value().get(0).properties().tags().get("pyyrmfs"));
        Assertions.assertEquals("epvufhbzehew", model.value().get(0).properties().properties().get("oqhnlb"));
        Assertions.assertEquals(false, model.value().get(0).properties().isArchived());
        Assertions.assertEquals(true, model.value().get(0).properties().isAnonymous());
        Assertions.assertEquals("ewuninvud", model.value().get(0).properties().specification().path());
        Assertions.assertEquals(MaterializationStoreType.ONLINE_AND_OFFLINE,
            model.value().get(0).properties().materializationSettings().storeType());
        Assertions.assertEquals("ec", model.value().get(0).properties().materializationSettings().schedule().endTime());
        Assertions.assertEquals("ct",
            model.value().get(0).properties().materializationSettings().schedule().startTime());
        Assertions.assertEquals("xdtddmflhuytxzv",
            model.value().get(0).properties().materializationSettings().schedule().timeZone());
        Assertions.assertEquals(RecurrenceFrequency.DAY,
            model.value().get(0).properties().materializationSettings().schedule().frequency());
        Assertions.assertEquals(709462942,
            model.value().get(0).properties().materializationSettings().schedule().interval());
        Assertions.assertEquals("pxbannovvoxc",
            model.value().get(0).properties().materializationSettings().notification().emails().get(0));
        Assertions.assertEquals(EmailNotificationEnableType.JOB_COMPLETED,
            model.value().get(0).properties().materializationSettings().notification().emailOn().get(0));
        Assertions.assertEquals("vevfxz",
            model.value().get(0).properties().materializationSettings().resource().instanceType());
        Assertions.assertEquals("hbzxli",
            model.value().get(0).properties().materializationSettings().sparkConfiguration().get("hrdd"));
        Assertions.assertEquals("m", model.value().get(0).properties().stage());
        Assertions.assertEquals("plfmuvapckccrrvw", model.value().get(0).properties().entities().get(0));
        Assertions.assertEquals("cit", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
