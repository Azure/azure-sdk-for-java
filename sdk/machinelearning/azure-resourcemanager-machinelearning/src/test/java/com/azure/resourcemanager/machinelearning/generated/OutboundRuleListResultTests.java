// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.OutboundRuleBasicResourceInner;
import com.azure.resourcemanager.machinelearning.models.OutboundRule;
import com.azure.resourcemanager.machinelearning.models.OutboundRuleListResult;
import com.azure.resourcemanager.machinelearning.models.RuleCategory;
import com.azure.resourcemanager.machinelearning.models.RuleStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OutboundRuleListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OutboundRuleListResult model = BinaryData.fromString(
            "{\"nextLink\":\"tkl\",\"value\":[{\"properties\":{\"type\":\"OutboundRule\",\"category\":\"UserDefined\",\"status\":\"Inactive\"},\"id\":\"aanozjosphyoulpj\",\"name\":\"v\",\"type\":\"ag\"},{\"properties\":{\"type\":\"OutboundRule\",\"category\":\"Recommended\",\"status\":\"Inactive\"},\"id\":\"wosytxitcskf\",\"name\":\"k\",\"type\":\"qumiek\"},{\"properties\":{\"type\":\"OutboundRule\",\"category\":\"UserDefined\",\"status\":\"Inactive\"},\"id\":\"hlyfjhdgqgg\",\"name\":\"bdunygaeqid\",\"type\":\"qfatpxllrxcyjm\"},{\"properties\":{\"type\":\"OutboundRule\",\"category\":\"Dependency\",\"status\":\"Active\"},\"id\":\"arm\",\"name\":\"wdmjsjqbjhhyx\",\"type\":\"rw\"}]}")
            .toObject(OutboundRuleListResult.class);
        Assertions.assertEquals("tkl", model.nextLink());
        Assertions.assertEquals(RuleCategory.USER_DEFINED, model.value().get(0).properties().category());
        Assertions.assertEquals(RuleStatus.INACTIVE, model.value().get(0).properties().status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OutboundRuleListResult model = new OutboundRuleListResult().withNextLink("tkl")
            .withValue(Arrays.asList(
                new OutboundRuleBasicResourceInner().withProperties(
                    new OutboundRule().withCategory(RuleCategory.USER_DEFINED).withStatus(RuleStatus.INACTIVE)),
                new OutboundRuleBasicResourceInner().withProperties(
                    new OutboundRule().withCategory(RuleCategory.RECOMMENDED).withStatus(RuleStatus.INACTIVE)),
                new OutboundRuleBasicResourceInner().withProperties(
                    new OutboundRule().withCategory(RuleCategory.USER_DEFINED).withStatus(RuleStatus.INACTIVE)),
                new OutboundRuleBasicResourceInner().withProperties(
                    new OutboundRule().withCategory(RuleCategory.DEPENDENCY).withStatus(RuleStatus.ACTIVE))));
        model = BinaryData.fromObject(model).toObject(OutboundRuleListResult.class);
        Assertions.assertEquals("tkl", model.nextLink());
        Assertions.assertEquals(RuleCategory.USER_DEFINED, model.value().get(0).properties().category());
        Assertions.assertEquals(RuleStatus.INACTIVE, model.value().get(0).properties().status());
    }
}
