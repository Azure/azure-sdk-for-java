// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.TableVerticalLimitSettings;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class TableVerticalLimitSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TableVerticalLimitSettings model = BinaryData.fromString(
            "{\"maxTrials\":1966845044,\"trialTimeout\":\"PT99H7M46S\",\"timeout\":\"PT45H54M58S\",\"maxConcurrentTrials\":595135013,\"maxCoresPerTrial\":1991622972,\"exitScore\":96.52498690136247,\"enableEarlyTermination\":true}")
            .toObject(TableVerticalLimitSettings.class);
        Assertions.assertEquals(1966845044, model.maxTrials());
        Assertions.assertEquals(Duration.parse("PT99H7M46S"), model.trialTimeout());
        Assertions.assertEquals(Duration.parse("PT45H54M58S"), model.timeout());
        Assertions.assertEquals(595135013, model.maxConcurrentTrials());
        Assertions.assertEquals(1991622972, model.maxCoresPerTrial());
        Assertions.assertEquals(96.52498690136247D, model.exitScore());
        Assertions.assertEquals(true, model.enableEarlyTermination());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TableVerticalLimitSettings model = new TableVerticalLimitSettings().withMaxTrials(1966845044)
            .withTrialTimeout(Duration.parse("PT99H7M46S"))
            .withTimeout(Duration.parse("PT45H54M58S"))
            .withMaxConcurrentTrials(595135013)
            .withMaxCoresPerTrial(1991622972)
            .withExitScore(96.52498690136247D)
            .withEnableEarlyTermination(true);
        model = BinaryData.fromObject(model).toObject(TableVerticalLimitSettings.class);
        Assertions.assertEquals(1966845044, model.maxTrials());
        Assertions.assertEquals(Duration.parse("PT99H7M46S"), model.trialTimeout());
        Assertions.assertEquals(Duration.parse("PT45H54M58S"), model.timeout());
        Assertions.assertEquals(595135013, model.maxConcurrentTrials());
        Assertions.assertEquals(1991622972, model.maxCoresPerTrial());
        Assertions.assertEquals(96.52498690136247D, model.exitScore());
        Assertions.assertEquals(true, model.enableEarlyTermination());
    }
}
