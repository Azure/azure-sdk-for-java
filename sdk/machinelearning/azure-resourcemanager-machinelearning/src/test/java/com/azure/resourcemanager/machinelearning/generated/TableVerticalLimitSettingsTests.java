// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.TableVerticalLimitSettings;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class TableVerticalLimitSettingsTests {
    @Test
    public void testDeserialize() {
        TableVerticalLimitSettings model =
            BinaryData
                .fromString(
                    "{\"enableEarlyTermination\":false,\"exitScore\":53.955686441565746,\"maxConcurrentTrials\":379901265,\"maxCoresPerTrial\":1089331926,\"maxTrials\":1726637485,\"timeout\":\"PT231H51M57S\",\"trialTimeout\":\"PT193H8M44S\"}")
                .toObject(TableVerticalLimitSettings.class);
        Assertions.assertEquals(false, model.enableEarlyTermination());
        Assertions.assertEquals(53.955686441565746D, model.exitScore());
        Assertions.assertEquals(379901265, model.maxConcurrentTrials());
        Assertions.assertEquals(1089331926, model.maxCoresPerTrial());
        Assertions.assertEquals(1726637485, model.maxTrials());
        Assertions.assertEquals(Duration.parse("PT231H51M57S"), model.timeout());
        Assertions.assertEquals(Duration.parse("PT193H8M44S"), model.trialTimeout());
    }

    @Test
    public void testSerialize() {
        TableVerticalLimitSettings model =
            new TableVerticalLimitSettings()
                .withEnableEarlyTermination(false)
                .withExitScore(53.955686441565746D)
                .withMaxConcurrentTrials(379901265)
                .withMaxCoresPerTrial(1089331926)
                .withMaxTrials(1726637485)
                .withTimeout(Duration.parse("PT231H51M57S"))
                .withTrialTimeout(Duration.parse("PT193H8M44S"));
        model = BinaryData.fromObject(model).toObject(TableVerticalLimitSettings.class);
        Assertions.assertEquals(false, model.enableEarlyTermination());
        Assertions.assertEquals(53.955686441565746D, model.exitScore());
        Assertions.assertEquals(379901265, model.maxConcurrentTrials());
        Assertions.assertEquals(1089331926, model.maxCoresPerTrial());
        Assertions.assertEquals(1726637485, model.maxTrials());
        Assertions.assertEquals(Duration.parse("PT231H51M57S"), model.timeout());
        Assertions.assertEquals(Duration.parse("PT193H8M44S"), model.trialTimeout());
    }
}
