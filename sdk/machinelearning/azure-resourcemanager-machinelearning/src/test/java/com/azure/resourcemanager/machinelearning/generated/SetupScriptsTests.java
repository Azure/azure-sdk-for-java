// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ScriptReference;
import com.azure.resourcemanager.machinelearning.models.ScriptsToExecute;
import com.azure.resourcemanager.machinelearning.models.SetupScripts;
import org.junit.jupiter.api.Assertions;

public final class SetupScriptsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SetupScripts model = BinaryData.fromString(
            "{\"scripts\":{\"startupScript\":{\"scriptSource\":\"awmpjprd\",\"scriptData\":\"rpcfpcfjfwzl\",\"scriptArguments\":\"awkgy\",\"timeout\":\"eyam\"},\"creationScript\":{\"scriptSource\":\"dmdiawpzxkzrntm\",\"scriptData\":\"tdhuo\",\"scriptArguments\":\"wqpsqaz\",\"timeout\":\"qodvqgcnbhcbmj\"}}}")
            .toObject(SetupScripts.class);
        Assertions.assertEquals("awmpjprd", model.scripts().startupScript().scriptSource());
        Assertions.assertEquals("rpcfpcfjfwzl", model.scripts().startupScript().scriptData());
        Assertions.assertEquals("awkgy", model.scripts().startupScript().scriptArguments());
        Assertions.assertEquals("eyam", model.scripts().startupScript().timeout());
        Assertions.assertEquals("dmdiawpzxkzrntm", model.scripts().creationScript().scriptSource());
        Assertions.assertEquals("tdhuo", model.scripts().creationScript().scriptData());
        Assertions.assertEquals("wqpsqaz", model.scripts().creationScript().scriptArguments());
        Assertions.assertEquals("qodvqgcnbhcbmj", model.scripts().creationScript().timeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SetupScripts model = new SetupScripts().withScripts(new ScriptsToExecute()
            .withStartupScript(new ScriptReference().withScriptSource("awmpjprd")
                .withScriptData("rpcfpcfjfwzl")
                .withScriptArguments("awkgy")
                .withTimeout("eyam"))
            .withCreationScript(new ScriptReference().withScriptSource("dmdiawpzxkzrntm")
                .withScriptData("tdhuo")
                .withScriptArguments("wqpsqaz")
                .withTimeout("qodvqgcnbhcbmj")));
        model = BinaryData.fromObject(model).toObject(SetupScripts.class);
        Assertions.assertEquals("awmpjprd", model.scripts().startupScript().scriptSource());
        Assertions.assertEquals("rpcfpcfjfwzl", model.scripts().startupScript().scriptData());
        Assertions.assertEquals("awkgy", model.scripts().startupScript().scriptArguments());
        Assertions.assertEquals("eyam", model.scripts().startupScript().timeout());
        Assertions.assertEquals("dmdiawpzxkzrntm", model.scripts().creationScript().scriptSource());
        Assertions.assertEquals("tdhuo", model.scripts().creationScript().scriptData());
        Assertions.assertEquals("wqpsqaz", model.scripts().creationScript().scriptArguments());
        Assertions.assertEquals("qodvqgcnbhcbmj", model.scripts().creationScript().timeout());
    }
}
