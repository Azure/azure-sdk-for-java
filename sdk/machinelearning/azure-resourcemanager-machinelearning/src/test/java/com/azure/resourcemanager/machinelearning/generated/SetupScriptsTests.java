// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.ScriptReference;
import com.azure.resourcemanager.machinelearning.models.ScriptsToExecute;
import com.azure.resourcemanager.machinelearning.models.SetupScripts;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SetupScriptsTests {
    @Test
    public void testDeserialize() {
        SetupScripts model =
            BinaryData
                .fromString(
                    "{\"scripts\":{\"startupScript\":{\"scriptSource\":\"kbusqo\",\"scriptData\":\"fikayiansharujtj\",\"scriptArguments\":\"xfz\",\"timeout\":\"qttv\"},\"creationScript\":{\"scriptSource\":\"qhjpenuygbqe\",\"scriptData\":\"ekewvnqvcdlguauc\",\"scriptArguments\":\"djwnlaxpunjqi\",\"timeout\":\"zvvitacgxmfcs\"}}}")
                .toObject(SetupScripts.class);
        Assertions.assertEquals("kbusqo", model.scripts().startupScript().scriptSource());
        Assertions.assertEquals("fikayiansharujtj", model.scripts().startupScript().scriptData());
        Assertions.assertEquals("xfz", model.scripts().startupScript().scriptArguments());
        Assertions.assertEquals("qttv", model.scripts().startupScript().timeout());
        Assertions.assertEquals("qhjpenuygbqe", model.scripts().creationScript().scriptSource());
        Assertions.assertEquals("ekewvnqvcdlguauc", model.scripts().creationScript().scriptData());
        Assertions.assertEquals("djwnlaxpunjqi", model.scripts().creationScript().scriptArguments());
        Assertions.assertEquals("zvvitacgxmfcs", model.scripts().creationScript().timeout());
    }

    @Test
    public void testSerialize() {
        SetupScripts model =
            new SetupScripts()
                .withScripts(
                    new ScriptsToExecute()
                        .withStartupScript(
                            new ScriptReference()
                                .withScriptSource("kbusqo")
                                .withScriptData("fikayiansharujtj")
                                .withScriptArguments("xfz")
                                .withTimeout("qttv"))
                        .withCreationScript(
                            new ScriptReference()
                                .withScriptSource("qhjpenuygbqe")
                                .withScriptData("ekewvnqvcdlguauc")
                                .withScriptArguments("djwnlaxpunjqi")
                                .withTimeout("zvvitacgxmfcs")));
        model = BinaryData.fromObject(model).toObject(SetupScripts.class);
        Assertions.assertEquals("kbusqo", model.scripts().startupScript().scriptSource());
        Assertions.assertEquals("fikayiansharujtj", model.scripts().startupScript().scriptData());
        Assertions.assertEquals("xfz", model.scripts().startupScript().scriptArguments());
        Assertions.assertEquals("qttv", model.scripts().startupScript().timeout());
        Assertions.assertEquals("qhjpenuygbqe", model.scripts().creationScript().scriptSource());
        Assertions.assertEquals("ekewvnqvcdlguauc", model.scripts().creationScript().scriptData());
        Assertions.assertEquals("djwnlaxpunjqi", model.scripts().creationScript().scriptArguments());
        Assertions.assertEquals("zvvitacgxmfcs", model.scripts().creationScript().timeout());
    }
}
