// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.DataFactory;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DataFactoryTests {
    @Test
    public void testDeserialize() {
        DataFactory model =
            BinaryData
                .fromString(
                    "{\"computeType\":\"DataFactory\",\"computeLocation\":\"rvjfnmjmvlw\",\"provisioningState\":\"Creating\",\"description\":\"blkujrllfojuidjp\",\"createdOn\":\"2020-12-23T14:21:04Z\",\"modifiedOn\":\"2021-07-14T18:09:55Z\",\"resourceId\":\"ejikzoeovvtzejet\",\"provisioningErrors\":[],\"isAttachedCompute\":false,\"disableLocalAuth\":false}")
                .toObject(DataFactory.class);
        Assertions.assertEquals("rvjfnmjmvlw", model.computeLocation());
        Assertions.assertEquals("blkujrllfojuidjp", model.description());
        Assertions.assertEquals("ejikzoeovvtzejet", model.resourceId());
        Assertions.assertEquals(false, model.disableLocalAuth());
    }

    @Test
    public void testSerialize() {
        DataFactory model =
            new DataFactory()
                .withComputeLocation("rvjfnmjmvlw")
                .withDescription("blkujrllfojuidjp")
                .withResourceId("ejikzoeovvtzejet")
                .withDisableLocalAuth(false);
        model = BinaryData.fromObject(model).toObject(DataFactory.class);
        Assertions.assertEquals("rvjfnmjmvlw", model.computeLocation());
        Assertions.assertEquals("blkujrllfojuidjp", model.description());
        Assertions.assertEquals("ejikzoeovvtzejet", model.resourceId());
        Assertions.assertEquals(false, model.disableLocalAuth());
    }
}
