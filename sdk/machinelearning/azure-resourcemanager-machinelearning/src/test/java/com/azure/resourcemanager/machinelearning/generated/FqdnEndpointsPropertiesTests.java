// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.FqdnEndpoint;
import com.azure.resourcemanager.machinelearning.models.FqdnEndpointDetail;
import com.azure.resourcemanager.machinelearning.models.FqdnEndpointsProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FqdnEndpointsPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FqdnEndpointsProperties model = BinaryData.fromString(
            "{\"category\":\"njhf\",\"endpoints\":[{\"domainName\":\"szkkfoqre\",\"endpointDetails\":[{\"port\":648968318},{\"port\":1648570452},{\"port\":498356163},{\"port\":195683064}]},{\"domainName\":\"a\",\"endpointDetails\":[{\"port\":322973840},{\"port\":1950360907},{\"port\":1038031643}]}]}")
            .toObject(FqdnEndpointsProperties.class);
        Assertions.assertEquals("njhf", model.category());
        Assertions.assertEquals("szkkfoqre", model.endpoints().get(0).domainName());
        Assertions.assertEquals(648968318, model.endpoints().get(0).endpointDetails().get(0).port());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FqdnEndpointsProperties model = new FqdnEndpointsProperties().withCategory("njhf")
            .withEndpoints(Arrays.asList(
                new FqdnEndpoint().withDomainName("szkkfoqre")
                    .withEndpointDetails(Arrays.asList(new FqdnEndpointDetail().withPort(648968318),
                        new FqdnEndpointDetail().withPort(1648570452), new FqdnEndpointDetail().withPort(498356163),
                        new FqdnEndpointDetail().withPort(195683064))),
                new FqdnEndpoint().withDomainName("a")
                    .withEndpointDetails(Arrays.asList(new FqdnEndpointDetail().withPort(322973840),
                        new FqdnEndpointDetail().withPort(1950360907),
                        new FqdnEndpointDetail().withPort(1038031643)))));
        model = BinaryData.fromObject(model).toObject(FqdnEndpointsProperties.class);
        Assertions.assertEquals("njhf", model.category());
        Assertions.assertEquals("szkkfoqre", model.endpoints().get(0).domainName());
        Assertions.assertEquals(648968318, model.endpoints().get(0).endpointDetails().get(0).port());
    }
}
