// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.ModelContainerInner;
import com.azure.resourcemanager.machinelearning.models.ModelContainerProperties;
import com.azure.resourcemanager.machinelearning.models.ModelContainerResourceArmPaginatedResult;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ModelContainerResourceArmPaginatedResultTests {
    @Test
    public void testDeserialize() {
        ModelContainerResourceArmPaginatedResult model =
            BinaryData
                .fromString(
                    "{\"nextLink\":\"jswtwkozzwc\",\"value\":[{\"properties\":{\"isArchived\":true,\"latestVersion\":\"pfajnjwltlwtjj\",\"nextVersion\":\"ktalhsnvkcdmxz\",\"description\":\"oaimlnw\",\"properties\":{},\"tags\":{}},\"id\":\"mylweazulc\",\"name\":\"ethwwnpjhlfz\",\"type\":\"wpchwahf\"}]}")
                .toObject(ModelContainerResourceArmPaginatedResult.class);
        Assertions.assertEquals("jswtwkozzwc", model.nextLink());
        Assertions.assertEquals("oaimlnw", model.value().get(0).properties().description());
        Assertions.assertEquals(true, model.value().get(0).properties().isArchived());
    }

    @Test
    public void testSerialize() {
        ModelContainerResourceArmPaginatedResult model =
            new ModelContainerResourceArmPaginatedResult()
                .withNextLink("jswtwkozzwc")
                .withValue(
                    Arrays
                        .asList(
                            new ModelContainerInner()
                                .withProperties(
                                    new ModelContainerProperties()
                                        .withDescription("oaimlnw")
                                        .withProperties(mapOf())
                                        .withTags(mapOf())
                                        .withIsArchived(true))));
        model = BinaryData.fromObject(model).toObject(ModelContainerResourceArmPaginatedResult.class);
        Assertions.assertEquals("jswtwkozzwc", model.nextLink());
        Assertions.assertEquals("oaimlnw", model.value().get(0).properties().description());
        Assertions.assertEquals(true, model.value().get(0).properties().isArchived());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
